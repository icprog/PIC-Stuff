

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 16 21:54:33 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F720
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext1,local,class=CONST,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  008C                     	;# 
    58  008E                     	;# 
    59  008F                     	;# 
    60  0090                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009D                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0185                     	;# 
    79  0186                     	;# 
    80  0187                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009D                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0185                     	;# 
   137  0186                     	;# 
   138  0187                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  008C                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009D                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0185                     	;# 
   195  0186                     	;# 
   196  0187                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  000A                     	;# 
   208  000B                     	;# 
   209  000C                     	;# 
   210  000E                     	;# 
   211  000E                     	;# 
   212  000F                     	;# 
   213  0010                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0014                     	;# 
   218  0015                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009D                     	;# 
   245  009F                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  0115                     	;# 
   251  0116                     	;# 
   252  0185                     	;# 
   253  0186                     	;# 
   254  0187                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  000A                     	;# 
   266  000B                     	;# 
   267  000C                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  008C                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009D                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0185                     	;# 
   311  0186                     	;# 
   312  0187                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315                           
   316                           	psect	idataBANK0
   317  02D5                     __pidataBANK0:	
   318                           
   319                           ;initializer for ___cgram
   320  02D5  340C               	retlw	12
   321  02D6  3412               	retlw	18
   322  02D7  3412               	retlw	18
   323  02D8  340C               	retlw	12
   324  02D9  3400               	retlw	0
   325  02DA  3400               	retlw	0
   326  02DB  3400               	retlw	0
   327  02DC  3400               	retlw	0
   328                           
   329                           ;initializer for _hh
   330  02DD  3401               	retlw	1
   331                           
   332                           ;initializer for _hl
   333  02DE  3402               	retlw	2
   334  001F                     _ADCON0	set	31
   335  001E                     _ADRES	set	30
   336  0005                     _PORTA	set	5
   337  0006                     _PORTB	set	6
   338  0007                     _PORTC	set	7
   339  0001                     _TMR0	set	1
   340  00F8                     _ADON	set	248
   341  00F9                     _GO_nDONE	set	249
   342  002A                     _RA2	set	42
   343  002D                     _RA5	set	45
   344  003C                     _RC4	set	60
   345  003D                     _RC5	set	61
   346  003E                     _RC6	set	62
   347  003F                     _RC7	set	63
   348  005A                     _TMR0IF	set	90
   349  009F                     _ADCON1	set	159
   350  009D                     _FVRCON	set	157
   351  0091                     _OSCTUNE	set	145
   352  0085                     _TRISA	set	133
   353  0086                     _TRISB	set	134
   354  0087                     _TRISC	set	135
   355  0087                     _TRISCbits	set	135
   356  0484                     _IRCF0	set	1156
   357  0485                     _IRCF1	set	1157
   358  0408                     _PS0	set	1032
   359  0409                     _PS1	set	1033
   360  040A                     _PS2	set	1034
   361  040B                     _PSA	set	1035
   362  040D                     _T0CS	set	1037
   363  040C                     _T0SE	set	1036
   364  0185                     _ANSELA	set	389
   365  0186                     _ANSELB	set	390
   366  0187                     _ANSELC	set	391
   367                           
   368                           	psect	strings
   369  0001                     __pstrings:	
   370  0001                     stringtab:	
   371  0001                     __stringtab:	
   372  0001                     stringcode:	
   373                           ;	String table - string pointers are 1 byte each
   374                           
   375  0001                     stringdir:	
   376  0001  3000               	movlw	high stringdir
   377  0002  008A               	movwf	10
   378  0003  0804               	movf	4,w
   379  0004  0A84               	incf	4,f
   380  0005  0782               	addwf	2,f
   381  0006                     __stringbase:	
   382  0006  3400               	retlw	0
   383  0007                     __end_of__stringtab:	
   384  0007                     __stringdata:	
   385  0007                     STR_1:	
   386  0007  3420               	retlw	32	;' '
   387  0008  3420               	retlw	32	;' '
   388  0009  3443               	retlw	67	;'C'
   389  000A  3475               	retlw	117	;'u'
   390  000B  3472               	retlw	114	;'r'
   391  000C  3472               	retlw	114	;'r'
   392  000D  3465               	retlw	101	;'e'
   393  000E  346E               	retlw	110	;'n'
   394  000F  3474               	retlw	116	;'t'
   395  0010  3420               	retlw	32	;' '
   396  0011  3454               	retlw	84	;'T'
   397  0012  3469               	retlw	105	;'i'
   398  0013  346D               	retlw	109	;'m'
   399  0014  3465               	retlw	101	;'e'
   400  0015  3420               	retlw	32	;' '
   401  0016  3469               	retlw	105	;'i'
   402  0017  3473               	retlw	115	;'s'
   403  0018  343A               	retlw	58	;':'
   404  0019  3420               	retlw	32	;' '
   405  001A  3420               	retlw	32	;' '
   406  001B  3400               	retlw	0
   407  001C                     STR_9:	
   408  001C  3454               	retlw	84	;'T'
   409  001D  3468               	retlw	104	;'h'
   410  001E  3469               	retlw	105	;'i'
   411  001F  3473               	retlw	115	;'s'
   412  0020  3420               	retlw	32	;' '
   413  0021  3469               	retlw	105	;'i'
   414  0022  3473               	retlw	115	;'s'
   415  0023  3420               	retlw	32	;' '
   416  0024  346F               	retlw	111	;'o'
   417  0025  346E               	retlw	110	;'n'
   418  0026  3420               	retlw	32	;' '
   419  0027  346C               	retlw	108	;'l'
   420  0028  3469               	retlw	105	;'i'
   421  0029  346E               	retlw	110	;'n'
   422  002A  3465               	retlw	101	;'e'
   423  002B  3420               	retlw	32	;' '
   424  002C  3433               	retlw	51	;'3'
   425  002D  3421               	retlw	33	;'!'
   426  002E  3400               	retlw	0
   427  002F                     STR_5:	
   428  002F  3450               	retlw	80	;'P'
   429  0030  3441               	retlw	65	;'A'
   430  0031  3452               	retlw	82	;'R'
   431  0032  3441               	retlw	65	;'A'
   432  0033  344C               	retlw	76	;'L'
   433  0034  344C               	retlw	76	;'L'
   434  0035  3445               	retlw	69	;'E'
   435  0036  344C               	retlw	76	;'L'
   436  0037  3420               	retlw	32	;' '
   437  0038  3450               	retlw	80	;'P'
   438  0039  346F               	retlw	111	;'o'
   439  003A  3472               	retlw	114	;'r'
   440  003B  3474               	retlw	116	;'t'
   441  003C  3420               	retlw	32	;' '
   442  003D  344C               	retlw	76	;'L'
   443  003E  3443               	retlw	67	;'C'
   444  003F  3444               	retlw	68	;'D'
   445  0040  3400               	retlw	0
   446  0041                     STR_6:	
   447  0041  3443               	retlw	67	;'C'
   448  0042  346F               	retlw	111	;'o'
   449  0043  346E               	retlw	110	;'n'
   450  0044  3466               	retlw	102	;'f'
   451  0045  3469               	retlw	105	;'i'
   452  0046  3467               	retlw	103	;'g'
   453  0047  3475               	retlw	117	;'u'
   454  0048  3472               	retlw	114	;'r'
   455  0049  3461               	retlw	97	;'a'
   456  004A  3474               	retlw	116	;'t'
   457  004B  3469               	retlw	105	;'i'
   458  004C  346F               	retlw	111	;'o'
   459  004D  346E               	retlw	110	;'n'
   460  004E  3421               	retlw	33	;'!'
   461  004F  3421               	retlw	33	;'!'
   462  0050  3400               	retlw	0
   463  0051                     STR_7:	
   464  0051  3454               	retlw	84	;'T'
   465  0052  3468               	retlw	104	;'h'
   466  0053  3469               	retlw	105	;'i'
   467  0054  3473               	retlw	115	;'s'
   468  0055  3420               	retlw	32	;' '
   469  0056  3469               	retlw	105	;'i'
   470  0057  3473               	retlw	115	;'s'
   471  0058  3420               	retlw	32	;' '
   472  0059  3465               	retlw	101	;'e'
   473  005A  3461               	retlw	97	;'a'
   474  005B  3473               	retlw	115	;'s'
   475  005C  3479               	retlw	121	;'y'
   476  005D  3421               	retlw	33	;'!'
   477  005E  3400               	retlw	0
   478  005F                     STR_4:	
   479  005F  3454               	retlw	84	;'T'
   480  0060  3468               	retlw	104	;'h'
   481  0061  3469               	retlw	105	;'i'
   482  0062  3473               	retlw	115	;'s'
   483  0063  3420               	retlw	32	;' '
   484  0064  3469               	retlw	105	;'i'
   485  0065  3473               	retlw	115	;'s'
   486  0066  3420               	retlw	32	;' '
   487  0067  3474               	retlw	116	;'t'
   488  0068  3468               	retlw	104	;'h'
   489  0069  3465               	retlw	101	;'e'
   490  006A  3400               	retlw	0
   491  006B                     STR_10:	
   492  006B  344C               	retlw	76	;'L'
   493  006C  3469               	retlw	105	;'i'
   494  006D  346E               	retlw	110	;'n'
   495  006E  3465               	retlw	101	;'e'
   496  006F  3420               	retlw	32	;' '
   497  0070  3431               	retlw	49	;'1'
   498  0071  3421               	retlw	33	;'!'
   499  0072  3421               	retlw	33	;'!'
   500  0073  3400               	retlw	0
   501  0074                     STR_19:	
   502  0074  344C               	retlw	76	;'L'
   503  0075  3469               	retlw	105	;'i'
   504  0076  346E               	retlw	110	;'n'
   505  0077  3465               	retlw	101	;'e'
   506  0078  3420               	retlw	32	;' '
   507  0079  3433               	retlw	51	;'3'
   508  007A  3421               	retlw	33	;'!'
   509  007B  3421               	retlw	33	;'!'
   510  007C  3400               	retlw	0
   511  007D                     STR_20:	
   512  007D  344C               	retlw	76	;'L'
   513  007E  3469               	retlw	105	;'i'
   514  007F  346E               	retlw	110	;'n'
   515  0080  3465               	retlw	101	;'e'
   516  0081  3420               	retlw	32	;' '
   517  0082  3434               	retlw	52	;'4'
   518  0083  3421               	retlw	33	;'!'
   519  0084  3421               	retlw	33	;'!'
   520  0085  3400               	retlw	0
   521  0086                     STR_8:	
   522  0086  3432               	retlw	50	;'2'
   523  0087  3438               	retlw	56	;'8'
   524  0088  3425               	retlw	37	;'%'
   525  0089  3430               	retlw	48	;'0'
   526  008A  3443               	retlw	67	;'C'
   527  008B  3400               	retlw	0
   528  008C                     STR_16:	
   529  008C  3432               	retlw	50	;'2'
   530  008D  3400               	retlw	0
   531  008E                     STR_2:	
   532  008E  343A               	retlw	58	;':'
   533  008F  3400               	retlw	0
   534  0090                     STR_11:	
   535  0090  344C               	retlw	76	;'L'
   536  0091  3400               	retlw	0
   537  0092                     STR_12:	
   538  0092  3469               	retlw	105	;'i'
   539  0093  3400               	retlw	0
   540  0094                     STR_13:	
   541  0094  346E               	retlw	110	;'n'
   542  0095  3400               	retlw	0
   543  0096                     __end_of__stringdata:	
   544                           
   545                           ; #config settings
   546  0000                     
   547                           	psect	cinit
   548  07E1                     start_initialization:	
   549  07E1                     __initialization:	
   550                           
   551                           ; Clear objects allocated to BANK0
   552  07E1  01BD               	clrf	__pbssBANK0& (0+127)
   553  07E2  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   554  07E3  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   555  07E4  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   556  07E5  01C1               	clrf	(__pbssBANK0+4)& (0+127)
   557  07E6  01C2               	clrf	(__pbssBANK0+5)& (0+127)
   558  07E7  01C3               	clrf	(__pbssBANK0+6)& (0+127)
   559  07E8  01C4               	clrf	(__pbssBANK0+7)& (0+127)
   560  07E9  01C5               	clrf	(__pbssBANK0+8)& (0+127)
   561                           
   562                           ; Initialize objects allocated to BANK0
   563  07EA  22D5               	fcall	__pidataBANK0	;fetch initializer
   564  07EB  00B3               	movwf	__pdataBANK0& (0+127)
   565  07EC  22D6               	fcall	__pidataBANK0+1	;fetch initializer
   566  07ED  00B4               	movwf	(__pdataBANK0+1)& (0+127)
   567  07EE  22D7               	fcall	__pidataBANK0+2	;fetch initializer
   568  07EF  00B5               	movwf	(__pdataBANK0+2)& (0+127)
   569  07F0  22D8               	fcall	__pidataBANK0+3	;fetch initializer
   570  07F1  00B6               	movwf	(__pdataBANK0+3)& (0+127)
   571  07F2  22D9               	fcall	__pidataBANK0+4	;fetch initializer
   572  07F3  00B7               	movwf	(__pdataBANK0+4)& (0+127)
   573  07F4  22DA               	fcall	__pidataBANK0+5	;fetch initializer
   574  07F5  00B8               	movwf	(__pdataBANK0+5)& (0+127)
   575  07F6  22DB               	fcall	__pidataBANK0+6	;fetch initializer
   576  07F7  00B9               	movwf	(__pdataBANK0+6)& (0+127)
   577  07F8  22DC               	fcall	__pidataBANK0+7	;fetch initializer
   578  07F9  00BA               	movwf	(__pdataBANK0+7)& (0+127)
   579  07FA  22DD               	fcall	__pidataBANK0+8	;fetch initializer
   580  07FB  00BB               	movwf	(__pdataBANK0+8)& (0+127)
   581  07FC  22DE               	fcall	__pidataBANK0+9	;fetch initializer
   582  07FD  00BC               	movwf	(__pdataBANK0+9)& (0+127)
   583  07FE                     end_of_initialization:	
   584                           ;End of C runtime variable initialization code
   585                           
   586  07FE                     __end_of__initialization:	
   587  07FE  0183               	clrf	3
   588  07FF  2DA6               	ljmp	_main	;jump to C main() function
   589                           
   590                           	psect	bssBANK0
   591  003D                     __pbssBANK0:	
   592  003D                     LCDWriteInt@F1067:	
   593  003D                     	ds	5
   594  0042                     _mh:	
   595  0042                     	ds	1
   596  0043                     _ml:	
   597  0043                     	ds	1
   598  0044                     _sh:	
   599  0044                     	ds	1
   600  0045                     _sl:	
   601  0045                     	ds	1
   602                           
   603                           	psect	dataBANK0
   604  0033                     __pdataBANK0:	
   605  0033                     ___cgram:	
   606  0033                     	ds	8
   607  003B                     _hh:	
   608  003B                     	ds	1
   609  003C                     _hl:	
   610  003C                     	ds	1
   611                           
   612                           	psect	cstackCOMMON
   613  0070                     __pcstackCOMMON:	
   614  0070                     ?_LCDBusyLoop:	
   615  0070                     ??_LCDBusyLoop:	
   616                           ; 0 bytes @ 0x0
   617                           
   618  0070                     ?_LCDInit:	
   619                           ; 0 bytes @ 0x0
   620                           
   621  0070                     ?_LCDWriteString:	
   622                           ; 0 bytes @ 0x0
   623                           
   624  0070                     ?_ConfigureOscillator:	
   625                           ; 0 bytes @ 0x0
   626                           
   627  0070                     ??_ConfigureOscillator:	
   628                           ; 0 bytes @ 0x0
   629                           
   630  0070                     ?_Init:	
   631                           ; 0 bytes @ 0x0
   632                           
   633  0070                     ??_Init:	
   634                           ; 0 bytes @ 0x0
   635                           
   636  0070                     ??_ADCRead:	
   637                           ; 0 bytes @ 0x0
   638                           
   639  0070                     ?_main:	
   640                           ; 0 bytes @ 0x0
   641                           
   642  0070                     ?_ADCRead:	
   643                           ; 0 bytes @ 0x0
   644                           
   645  0070                     ?___awdiv:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?___awmod:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ___awdiv@divisor:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ___awmod@divisor:	
   655                           ; 2 bytes @ 0x0
   656                           
   657                           
   658                           ; 2 bytes @ 0x0
   659  0070                     	ds	1
   660  0071                     ADCRead@ch:	
   661                           
   662                           ; 1 bytes @ 0x1
   663  0071                     	ds	1
   664  0072                     LCDBusyLoop@busy:	
   665  0072                     ___awdiv@dividend:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ___awmod@dividend:	
   669                           ; 2 bytes @ 0x2
   670                           
   671                           
   672                           ; 2 bytes @ 0x2
   673  0072                     	ds	1
   674  0073                     LCDBusyLoop@temp:	
   675                           
   676                           ; 1 bytes @ 0x3
   677  0073                     	ds	1
   678  0074                     ??___awdiv:	
   679  0074                     ??___awmod:	
   680                           ; 0 bytes @ 0x4
   681                           
   682  0074                     LCDBusyLoop@status:	
   683                           ; 0 bytes @ 0x4
   684                           
   685                           
   686                           ; 1 bytes @ 0x4
   687  0074                     	ds	1
   688  0075                     ?_LCDByte:	
   689  0075                     LCDByte@isdata:	
   690                           ; 0 bytes @ 0x5
   691                           
   692  0075                     ___awdiv@counter:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ___awmod@counter:	
   696                           ; 1 bytes @ 0x5
   697                           
   698                           
   699                           ; 1 bytes @ 0x5
   700  0075                     	ds	1
   701  0076                     ??_LCDByte:	
   702  0076                     ___awdiv@sign:	
   703                           ; 0 bytes @ 0x6
   704                           
   705  0076                     ___awmod@sign:	
   706                           ; 1 bytes @ 0x6
   707                           
   708                           
   709                           ; 1 bytes @ 0x6
   710  0076                     	ds	1
   711  0077                     ___awdiv@quotient:	
   712                           
   713                           ; 2 bytes @ 0x7
   714  0077                     	ds	1
   715  0078                     LCDByte@hn:	
   716                           
   717                           ; 1 bytes @ 0x8
   718  0078                     	ds	1
   719  0079                     LCDByte@ln:	
   720                           
   721                           ; 1 bytes @ 0x9
   722  0079                     	ds	1
   723  007A                     LCDByte@c:	
   724                           
   725                           ; 1 bytes @ 0xA
   726  007A                     	ds	1
   727  007B                     LCDByte@temp:	
   728                           
   729                           ; 1 bytes @ 0xB
   730  007B                     	ds	1
   731  007C                     ??_LCDInit:	
   732  007C                     ??_LCDWriteString:	
   733                           ; 0 bytes @ 0xC
   734                           
   735  007C                     ??_LCDWriteInt:	
   736                           ; 0 bytes @ 0xC
   737                           
   738  007C                     ?_LCDGotoXY:	
   739                           ; 0 bytes @ 0xC
   740                           
   741  007C                     LCDGotoXY@y:	
   742                           ; 0 bytes @ 0xC
   743                           
   744                           
   745                           ; 1 bytes @ 0xC
   746  007C                     	ds	1
   747  007D                     ??_LCDGotoXY:	
   748                           
   749                           ; 0 bytes @ 0xD
   750  007D                     	ds	1
   751                           
   752                           	psect	cstackBANK0
   753  0020                     __pcstackBANK0:	
   754  0020                     ?_LCDWriteInt:	
   755  0020                     LCDInit@style:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0020                     LCDWriteString@cc:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0020                     LCDGotoXY@x:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0020                     LCDWriteInt@val:	
   765                           ; 1 bytes @ 0x0
   766                           
   767                           
   768                           ; 2 bytes @ 0x0
   769  0020                     	ds	1
   770  0021                     LCDInit@__i:	
   771  0021                     LCDWriteString@msg:	
   772                           ; 1 bytes @ 0x1
   773                           
   774                           
   775                           ; 1 bytes @ 0x1
   776  0021                     	ds	1
   777  0022                     LCDWriteInt@field_length:	
   778                           
   779                           ; 1 bytes @ 0x2
   780  0022                     	ds	1
   781  0023                     LCDWriteInt@str:	
   782                           
   783                           ; 5 bytes @ 0x3
   784  0023                     	ds	5
   785  0028                     LCDWriteInt@j:	
   786                           
   787                           ; 2 bytes @ 0x8
   788  0028                     	ds	2
   789  002A                     LCDWriteInt@i:	
   790                           
   791                           ; 2 bytes @ 0xA
   792  002A                     	ds	2
   793  002C                     ??_main:	
   794                           
   795                           ; 0 bytes @ 0xC
   796  002C                     	ds	3
   797  002F                     main@bres:	
   798                           
   799                           ; 2 bytes @ 0xF
   800  002F                     	ds	2
   801  0031                     main@Toggle:	
   802                           
   803                           ; 1 bytes @ 0x11
   804  0031                     	ds	1
   805  0032                     main@Toggle2:	
   806                           
   807                           ; 1 bytes @ 0x12
   808  0032                     	ds	1
   809                           
   810                           	psect	maintext
   811  05A6                     __pmaintext:	
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 15 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  bres            2   15[BANK0 ] unsigned int 
   822 ;;  Toggle2         1   18[BANK0 ] unsigned char 
   823 ;;  Toggle          1   17[BANK0 ] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 17F/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1
   833 ;;      Params:         0       0       0
   834 ;;      Locals:         0       4       0
   835 ;;      Temps:          0       3       0
   836 ;;      Totals:         0       7       0
   837 ;;Total ram usage:        7 bytes
   838 ;; Hardware stack levels required when called:    3
   839 ;; This function calls:
   840 ;;		_ADCRead
   841 ;;		_ConfigureOscillator
   842 ;;		_Init
   843 ;;		_LCDByte
   844 ;;		_LCDGotoXY
   845 ;;		_LCDInit
   846 ;;		_LCDWriteInt
   847 ;;		_LCDWriteString
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _main
   855  05A6                     _main:	
   856                           
   857                           ;main.c: 17: ConfigureOscillator();
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   861  05A6  22DF               	fcall	_ConfigureOscillator
   862                           
   863                           ;main.c: 19: Init();
   864  05A7  232D               	fcall	_Init
   865                           
   866                           ;main.c: 21: _delay((unsigned long)((500)*(2000000L/4000.0)));
   867  05A8  3002               	movlw	2
   868  05A9  1283               	bcf	3,5	;RP0=0, select bank0
   869  05AA  1303               	bcf	3,6	;RP1=0, select bank0
   870  05AB  00AE               	movwf	??_main+2
   871  05AC  3045               	movlw	69
   872  05AD  00AD               	movwf	??_main+1
   873  05AE  30A9               	movlw	169
   874  05AF  00AC               	movwf	??_main
   875  05B0                     u1837:	
   876  05B0  0BAC               	decfsz	??_main,f
   877  05B1  2DB0               	goto	u1837
   878  05B2  0BAD               	decfsz	??_main+1,f
   879  05B3  2DB0               	goto	u1837
   880  05B4  0BAE               	decfsz	??_main+2,f
   881  05B5  2DB0               	goto	u1837
   882  05B6  2DB7               	nop2
   883                           
   884                           ;main.c: 24: LCDInit(0B00000000);
   885  05B7  3000               	movlw	0
   886  05B8  23C6               	fcall	_LCDInit
   887                           
   888                           ;main.c: 26: (LCDByte(0b00000001,0));
   889  05B9  01F5               	clrf	LCDByte@isdata
   890  05BA  3001               	movlw	1
   891  05BB  238C               	fcall	_LCDByte
   892                           
   893                           ;main.c: 28: unsigned int bres = 0;
   894  05BC  1283               	bcf	3,5	;RP0=0, select bank0
   895  05BD  1303               	bcf	3,6	;RP1=0, select bank0
   896  05BE  01AF               	clrf	main@bres
   897  05BF  01B0               	clrf	main@bres+1
   898                           
   899                           ;main.c: 29: char Toggle = 1, Toggle2 = 1;
   900  05C0  01B1               	clrf	main@Toggle
   901  05C1  0AB1               	incf	main@Toggle,f
   902  05C2  01B2               	clrf	main@Toggle2
   903  05C3  0AB2               	incf	main@Toggle2,f
   904  05C4                     l1670:	
   905                           ;main.c: 31: while (1)
   906                           
   907                           
   908                           ;main.c: 32: {
   909                           ;main.c: 34: if(Toggle)
   910  05C4  0831               	movf	main@Toggle,w
   911  05C5  1903               	btfsc	3,2
   912  05C6  2F7E               	goto	l1818
   913                           
   914                           ;main.c: 35: {
   915                           ;main.c: 37: if(sl <=1)
   916  05C7  3002               	movlw	2
   917  05C8  0245               	subwf	_sl,w
   918  05C9  1803               	skipnc
   919  05CA  2E6C               	goto	l1720
   920                           
   921                           ;main.c: 38: {
   922                           ;main.c: 39: (LCDByte(0b00000001,0));
   923  05CB  01F5               	clrf	LCDByte@isdata
   924  05CC  3001               	movlw	1
   925  05CD  238C               	fcall	_LCDByte
   926                           
   927                           ;main.c: 40: LCDGotoXY(0,0);
   928  05CE  01FC               	clrf	LCDGotoXY@y
   929  05CF  3000               	movlw	0
   930  05D0  230C               	fcall	_LCDGotoXY
   931                           
   932                           ;main.c: 41: LCDWriteString("  Current Time is:  ");
   933  05D1  3001               	movlw	(STR_1-__stringbase)& (0+255)
   934  05D2  2354               	fcall	_LCDWriteString
   935                           
   936                           ;main.c: 43: { LCDGotoXY(6,1); LCDWriteInt(hh,1);};
   937  05D3  01FC               	clrf	LCDGotoXY@y
   938  05D4  0AFC               	incf	LCDGotoXY@y,f
   939  05D5  3006               	movlw	6
   940  05D6  230C               	fcall	_LCDGotoXY
   941  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   942  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   943  05D9  083B               	movf	_hh,w
   944  05DA  00AC               	movwf	??_main
   945  05DB  01AD               	clrf	??_main+1
   946  05DC  082C               	movf	??_main,w
   947  05DD  00A0               	movwf	LCDWriteInt@val
   948  05DE  082D               	movf	??_main+1,w
   949  05DF  00A1               	movwf	LCDWriteInt@val+1
   950  05E0  01A2               	clrf	LCDWriteInt@field_length
   951  05E1  0AA2               	incf	LCDWriteInt@field_length,f
   952  05E2  2503               	fcall	_LCDWriteInt
   953                           
   954                           ;main.c: 44: { LCDGotoXY(7,1); LCDWriteInt(hl,1);};
   955  05E3  01FC               	clrf	LCDGotoXY@y
   956  05E4  0AFC               	incf	LCDGotoXY@y,f
   957  05E5  3007               	movlw	7
   958  05E6  230C               	fcall	_LCDGotoXY
   959  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   960  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   961  05E9  083C               	movf	_hl,w
   962  05EA  00AC               	movwf	??_main
   963  05EB  01AD               	clrf	??_main+1
   964  05EC  082C               	movf	??_main,w
   965  05ED  00A0               	movwf	LCDWriteInt@val
   966  05EE  082D               	movf	??_main+1,w
   967  05EF  00A1               	movwf	LCDWriteInt@val+1
   968  05F0  01A2               	clrf	LCDWriteInt@field_length
   969  05F1  0AA2               	incf	LCDWriteInt@field_length,f
   970  05F2  2503               	fcall	_LCDWriteInt
   971                           
   972                           ;main.c: 45: LCDGotoXY(8,1);
   973  05F3  01FC               	clrf	LCDGotoXY@y
   974  05F4  0AFC               	incf	LCDGotoXY@y,f
   975  05F5  3008               	movlw	8
   976  05F6  230C               	fcall	_LCDGotoXY
   977                           
   978                           ;main.c: 46: LCDWriteString(":");
   979  05F7  3088               	movlw	(STR_2-__stringbase)& (0+255)
   980  05F8  2354               	fcall	_LCDWriteString
   981                           
   982                           ;main.c: 47: { LCDGotoXY(9,1); LCDWriteInt(mh,1);};
   983  05F9  01FC               	clrf	LCDGotoXY@y
   984  05FA  0AFC               	incf	LCDGotoXY@y,f
   985  05FB  3009               	movlw	9
   986  05FC  230C               	fcall	_LCDGotoXY
   987  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   988  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   989  05FF  0842               	movf	_mh,w
   990  0600  00AC               	movwf	??_main
   991  0601  01AD               	clrf	??_main+1
   992  0602  082C               	movf	??_main,w
   993  0603  00A0               	movwf	LCDWriteInt@val
   994  0604  082D               	movf	??_main+1,w
   995  0605  00A1               	movwf	LCDWriteInt@val+1
   996  0606  01A2               	clrf	LCDWriteInt@field_length
   997  0607  0AA2               	incf	LCDWriteInt@field_length,f
   998  0608  2503               	fcall	_LCDWriteInt
   999                           
  1000                           ;main.c: 48: { LCDGotoXY(10,1); LCDWriteInt(ml,1);};
  1001  0609  01FC               	clrf	LCDGotoXY@y
  1002  060A  0AFC               	incf	LCDGotoXY@y,f
  1003  060B  300A               	movlw	10
  1004  060C  230C               	fcall	_LCDGotoXY
  1005  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1006  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1007  060F  0843               	movf	_ml,w
  1008  0610  00AC               	movwf	??_main
  1009  0611  01AD               	clrf	??_main+1
  1010  0612  082C               	movf	??_main,w
  1011  0613  00A0               	movwf	LCDWriteInt@val
  1012  0614  082D               	movf	??_main+1,w
  1013  0615  00A1               	movwf	LCDWriteInt@val+1
  1014  0616  01A2               	clrf	LCDWriteInt@field_length
  1015  0617  0AA2               	incf	LCDWriteInt@field_length,f
  1016  0618  2503               	fcall	_LCDWriteInt
  1017                           
  1018                           ;main.c: 49: LCDGotoXY(11,1);
  1019  0619  01FC               	clrf	LCDGotoXY@y
  1020  061A  0AFC               	incf	LCDGotoXY@y,f
  1021  061B  300B               	movlw	11
  1022  061C  230C               	fcall	_LCDGotoXY
  1023                           
  1024                           ;main.c: 50: LCDWriteString(":");
  1025  061D  3088               	movlw	(STR_2-__stringbase)& (0+255)
  1026  061E  2354               	fcall	_LCDWriteString
  1027                           
  1028                           ;main.c: 51: { LCDGotoXY(12,1); LCDWriteInt(sh,1);};
  1029  061F  01FC               	clrf	LCDGotoXY@y
  1030  0620  0AFC               	incf	LCDGotoXY@y,f
  1031  0621  300C               	movlw	12
  1032  0622  230C               	fcall	_LCDGotoXY
  1033  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0625  0844               	movf	_sh,w
  1036  0626  00AC               	movwf	??_main
  1037  0627  01AD               	clrf	??_main+1
  1038  0628  082C               	movf	??_main,w
  1039  0629  00A0               	movwf	LCDWriteInt@val
  1040  062A  082D               	movf	??_main+1,w
  1041  062B  00A1               	movwf	LCDWriteInt@val+1
  1042  062C  01A2               	clrf	LCDWriteInt@field_length
  1043  062D  0AA2               	incf	LCDWriteInt@field_length,f
  1044  062E  2503               	fcall	_LCDWriteInt
  1045                           
  1046                           ;main.c: 52: { LCDGotoXY(13,1); LCDWriteInt(sl,1);};
  1047  062F  01FC               	clrf	LCDGotoXY@y
  1048  0630  0AFC               	incf	LCDGotoXY@y,f
  1049  0631  300D               	movlw	13
  1050  0632  230C               	fcall	_LCDGotoXY
  1051  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0635  0845               	movf	_sl,w
  1054  0636  00AC               	movwf	??_main
  1055  0637  01AD               	clrf	??_main+1
  1056  0638  082C               	movf	??_main,w
  1057  0639  00A0               	movwf	LCDWriteInt@val
  1058  063A  082D               	movf	??_main+1,w
  1059  063B  00A1               	movwf	LCDWriteInt@val+1
  1060  063C  01A2               	clrf	LCDWriteInt@field_length
  1061  063D  0AA2               	incf	LCDWriteInt@field_length,f
  1062  063E  2503               	fcall	_LCDWriteInt
  1063                           
  1064                           ;main.c: 56: { LCDGotoXY(0,3); LCDWriteInt(PORTC,6);};
  1065  063F  3003               	movlw	3
  1066  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0642  00AC               	movwf	??_main
  1069  0643  082C               	movf	??_main,w
  1070  0644  00FC               	movwf	LCDGotoXY@y
  1071  0645  3000               	movlw	0
  1072  0646  230C               	fcall	_LCDGotoXY
  1073  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0649  0807               	movf	7,w	;volatile
  1076  064A  00AC               	movwf	??_main
  1077  064B  01AD               	clrf	??_main+1
  1078  064C  082C               	movf	??_main,w
  1079  064D  00A0               	movwf	LCDWriteInt@val
  1080  064E  082D               	movf	??_main+1,w
  1081  064F  00A1               	movwf	LCDWriteInt@val+1
  1082  0650  3006               	movlw	6
  1083  0651  00AE               	movwf	??_main+2
  1084  0652  082E               	movf	??_main+2,w
  1085  0653  00A2               	movwf	LCDWriteInt@field_length
  1086  0654  2503               	fcall	_LCDWriteInt
  1087                           
  1088                           ;main.c: 64: { LCDGotoXY(9,2); LCDWriteInt(ADCRead(14),3);};
  1089  0655  3002               	movlw	2
  1090  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0658  00AC               	movwf	??_main
  1093  0659  082C               	movf	??_main,w
  1094  065A  00FC               	movwf	LCDGotoXY@y
  1095  065B  3009               	movlw	9
  1096  065C  230C               	fcall	_LCDGotoXY
  1097  065D  300E               	movlw	14
  1098  065E  22F0               	fcall	_ADCRead
  1099  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0661  00AC               	movwf	??_main
  1102  0662  01AD               	clrf	??_main+1
  1103  0663  082C               	movf	??_main,w
  1104  0664  00A0               	movwf	LCDWriteInt@val
  1105  0665  082D               	movf	??_main+1,w
  1106  0666  00A1               	movwf	LCDWriteInt@val+1
  1107  0667  3003               	movlw	3
  1108  0668  00AE               	movwf	??_main+2
  1109  0669  082E               	movf	??_main+2,w
  1110  066A  00A2               	movwf	LCDWriteInt@field_length
  1111  066B  2503               	fcall	_LCDWriteInt
  1112  066C                     l1720:	
  1113                           
  1114                           ;main.c: 65: }
  1115                           ;main.c: 69: if(sl > 1 && sl <= 2)
  1116  066C  3002               	movlw	2
  1117  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1118  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1119  066F  0245               	subwf	_sl,w
  1120  0670  1C03               	skipc
  1121  0671  2E7E               	goto	l1730
  1122  0672  3003               	movlw	3
  1123  0673  0245               	subwf	_sl,w
  1124  0674  1803               	skipnc
  1125  0675  2E7E               	goto	l1730
  1126                           
  1127                           ;main.c: 70: {
  1128                           ;main.c: 71: (LCDByte(0b00000001,0));
  1129  0676  01F5               	clrf	LCDByte@isdata
  1130  0677  3001               	movlw	1
  1131  0678  238C               	fcall	_LCDByte
  1132                           
  1133                           ;main.c: 73: { LCDGotoXY(0,0); LCDWriteString("This is the");};
  1134  0679  01FC               	clrf	LCDGotoXY@y
  1135  067A  3000               	movlw	0
  1136  067B  230C               	fcall	_LCDGotoXY
  1137  067C  3059               	movlw	(STR_4-__stringbase)& (0+255)
  1138  067D  2354               	fcall	_LCDWriteString
  1139  067E                     l1730:	
  1140                           
  1141                           ;main.c: 80: }
  1142                           ;main.c: 82: if(sl > 2 && sl <= 3)
  1143  067E  3003               	movlw	3
  1144  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0681  0245               	subwf	_sl,w
  1147  0682  1C03               	skipc
  1148  0683  2E8E               	goto	l1736
  1149  0684  3004               	movlw	4
  1150  0685  0245               	subwf	_sl,w
  1151  0686  1803               	skipnc
  1152  0687  2E8E               	goto	l1736
  1153                           
  1154                           ;main.c: 83: {
  1155                           ;main.c: 84: LCDGotoXY(0,1);
  1156  0688  01FC               	clrf	LCDGotoXY@y
  1157  0689  0AFC               	incf	LCDGotoXY@y,f
  1158  068A  3000               	movlw	0
  1159  068B  230C               	fcall	_LCDGotoXY
  1160                           
  1161                           ;main.c: 85: LCDWriteString("PARALLEL Port LCD");
  1162  068C  3029               	movlw	(STR_5-__stringbase)& (0+255)
  1163  068D  2354               	fcall	_LCDWriteString
  1164  068E                     l1736:	
  1165                           
  1166                           ;main.c: 86: }
  1167                           ;main.c: 88: if(sl > 3 && sl <= 4)
  1168  068E  3004               	movlw	4
  1169  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0691  0245               	subwf	_sl,w
  1172  0692  1C03               	skipc
  1173  0693  2EA0               	goto	l1742
  1174  0694  3005               	movlw	5
  1175  0695  0245               	subwf	_sl,w
  1176  0696  1803               	skipnc
  1177  0697  2EA0               	goto	l1742
  1178                           
  1179                           ;main.c: 89: {
  1180                           ;main.c: 90: LCDGotoXY(0,2);
  1181  0698  3002               	movlw	2
  1182  0699  00AC               	movwf	??_main
  1183  069A  082C               	movf	??_main,w
  1184  069B  00FC               	movwf	LCDGotoXY@y
  1185  069C  3000               	movlw	0
  1186  069D  230C               	fcall	_LCDGotoXY
  1187                           
  1188                           ;main.c: 91: LCDWriteString("Configuration!!");
  1189  069E  303B               	movlw	(STR_6-__stringbase)& (0+255)
  1190  069F  2354               	fcall	_LCDWriteString
  1191  06A0                     l1742:	
  1192                           
  1193                           ;main.c: 92: }
  1194                           ;main.c: 95: if(sl > 4 && sl <= 5)
  1195  06A0  3005               	movlw	5
  1196  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1197  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1198  06A3  0245               	subwf	_sl,w
  1199  06A4  1C03               	skipc
  1200  06A5  2EC6               	goto	l1760
  1201  06A6  3006               	movlw	6
  1202  06A7  0245               	subwf	_sl,w
  1203  06A8  1803               	skipnc
  1204  06A9  2EC6               	goto	l1760
  1205                           
  1206                           ;main.c: 96: {
  1207                           ;main.c: 97: (LCDByte(0b00000001,0));
  1208  06AA  01F5               	clrf	LCDByte@isdata
  1209  06AB  3001               	movlw	1
  1210  06AC  238C               	fcall	_LCDByte
  1211                           
  1212                           ;main.c: 99: { LCDGotoXY(3,0); LCDWriteString("This is easy!");};
  1213  06AD  01FC               	clrf	LCDGotoXY@y
  1214  06AE  3003               	movlw	3
  1215  06AF  230C               	fcall	_LCDGotoXY
  1216  06B0  304B               	movlw	(STR_7-__stringbase)& (0+255)
  1217  06B1  2354               	fcall	_LCDWriteString
  1218                           
  1219                           ;main.c: 100: { LCDGotoXY(0,3); LCDWriteString("28%0C");};
  1220  06B2  3003               	movlw	3
  1221  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1222  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1223  06B5  00AC               	movwf	??_main
  1224  06B6  082C               	movf	??_main,w
  1225  06B7  00FC               	movwf	LCDGotoXY@y
  1226  06B8  3000               	movlw	0
  1227  06B9  230C               	fcall	_LCDGotoXY
  1228  06BA  3080               	movlw	(STR_8-__stringbase)& (0+255)
  1229  06BB  2354               	fcall	_LCDWriteString
  1230                           
  1231                           ;main.c: 106: { LCDGotoXY(1,2); LCDWriteString("This is on line 3!");}
  1232  06BC  3002               	movlw	2
  1233  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1234  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1235  06BF  00AC               	movwf	??_main
  1236  06C0  082C               	movf	??_main,w
  1237  06C1  00FC               	movwf	LCDGotoXY@y
  1238  06C2  3001               	movlw	1
  1239  06C3  230C               	fcall	_LCDGotoXY
  1240  06C4  3016               	movlw	(STR_9-__stringbase)& (0+255)
  1241  06C5  2354               	fcall	_LCDWriteString
  1242  06C6                     l1760:	
  1243                           
  1244                           ;main.c: 107: }
  1245                           ;main.c: 109: if(sl > 5 && sl <= 6)
  1246  06C6  3006               	movlw	6
  1247  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1248  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1249  06C9  0245               	subwf	_sl,w
  1250  06CA  1C03               	skipc
  1251  06CB  2ED8               	goto	l1770
  1252  06CC  3007               	movlw	7
  1253  06CD  0245               	subwf	_sl,w
  1254  06CE  1803               	skipnc
  1255  06CF  2ED8               	goto	l1770
  1256                           
  1257                           ;main.c: 110: {
  1258                           ;main.c: 111: (LCDByte(0b00000001,0));
  1259  06D0  01F5               	clrf	LCDByte@isdata
  1260  06D1  3001               	movlw	1
  1261  06D2  238C               	fcall	_LCDByte
  1262                           
  1263                           ;main.c: 113: { LCDGotoXY(0,0); LCDWriteString("Line 1!!");};
  1264  06D3  01FC               	clrf	LCDGotoXY@y
  1265  06D4  3000               	movlw	0
  1266  06D5  230C               	fcall	_LCDGotoXY
  1267  06D6  3065               	movlw	(STR_10-__stringbase)& (0+255)
  1268  06D7  2354               	fcall	_LCDWriteString
  1269  06D8                     l1770:	
  1270                           
  1271                           ;main.c: 114: }
  1272                           ;main.c: 116: if(sl > 5 && sl <= 6)
  1273  06D8  3006               	movlw	6
  1274  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06DB  0245               	subwf	_sl,w
  1277  06DC  1C03               	skipc
  1278  06DD  2F69               	goto	l1810
  1279  06DE  3007               	movlw	7
  1280  06DF  0245               	subwf	_sl,w
  1281  06E0  1803               	skipnc
  1282  06E1  2F69               	goto	l1810
  1283                           
  1284                           ;main.c: 117: {
  1285                           ;main.c: 118: { LCDGotoXY(4,1); LCDWriteString("L");};
  1286  06E2  01FC               	clrf	LCDGotoXY@y
  1287  06E3  0AFC               	incf	LCDGotoXY@y,f
  1288  06E4  3004               	movlw	4
  1289  06E5  230C               	fcall	_LCDGotoXY
  1290  06E6  308A               	movlw	(STR_11-__stringbase)& (0+255)
  1291  06E7  2354               	fcall	_LCDWriteString
  1292                           
  1293                           ;main.c: 119: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1294  06E8  3082               	movlw	130
  1295  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1296  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1297  06EB  00AD               	movwf	??_main+1
  1298  06EC  30DD               	movlw	221
  1299  06ED  00AC               	movwf	??_main
  1300  06EE                     u1847:	
  1301  06EE  0BAC               	decfsz	??_main,f
  1302  06EF  2EEE               	goto	u1847
  1303  06F0  0BAD               	decfsz	??_main+1,f
  1304  06F1  2EEE               	goto	u1847
  1305  06F2  2EF3               	nop2
  1306                           
  1307                           ;main.c: 120: { LCDGotoXY(5,1); LCDWriteString("i");};
  1308  06F3  01FC               	clrf	LCDGotoXY@y
  1309  06F4  0AFC               	incf	LCDGotoXY@y,f
  1310  06F5  3005               	movlw	5
  1311  06F6  230C               	fcall	_LCDGotoXY
  1312  06F7  308C               	movlw	(STR_12-__stringbase)& (0+255)
  1313  06F8  2354               	fcall	_LCDWriteString
  1314                           
  1315                           ;main.c: 121: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1316  06F9  3082               	movlw	130
  1317  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1318  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1319  06FC  00AD               	movwf	??_main+1
  1320  06FD  30DD               	movlw	221
  1321  06FE  00AC               	movwf	??_main
  1322  06FF                     u1857:	
  1323  06FF  0BAC               	decfsz	??_main,f
  1324  0700  2EFF               	goto	u1857
  1325  0701  0BAD               	decfsz	??_main+1,f
  1326  0702  2EFF               	goto	u1857
  1327  0703  2F04               	nop2
  1328                           
  1329                           ;main.c: 122: { LCDGotoXY(6,1); LCDWriteString("n");};
  1330  0704  01FC               	clrf	LCDGotoXY@y
  1331  0705  0AFC               	incf	LCDGotoXY@y,f
  1332  0706  3006               	movlw	6
  1333  0707  230C               	fcall	_LCDGotoXY
  1334  0708  308E               	movlw	(STR_13-__stringbase)& (0+255)
  1335  0709  2354               	fcall	_LCDWriteString
  1336                           
  1337                           ;main.c: 123: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1338  070A  3082               	movlw	130
  1339  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1340  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1341  070D  00AD               	movwf	??_main+1
  1342  070E  30DD               	movlw	221
  1343  070F  00AC               	movwf	??_main
  1344  0710                     u1867:	
  1345  0710  0BAC               	decfsz	??_main,f
  1346  0711  2F10               	goto	u1867
  1347  0712  0BAD               	decfsz	??_main+1,f
  1348  0713  2F10               	goto	u1867
  1349  0714  2F15               	nop2
  1350                           
  1351                           ;main.c: 124: { LCDGotoXY(7,1); LCDWriteString("e");};
  1352  0715  01FC               	clrf	LCDGotoXY@y
  1353  0716  0AFC               	incf	LCDGotoXY@y,f
  1354  0717  3007               	movlw	7
  1355  0718  230C               	fcall	_LCDGotoXY
  1356  0719  3063               	movlw	((STR_4+10)-__stringbase)& (0+255)
  1357  071A  2354               	fcall	_LCDWriteString
  1358                           
  1359                           ;main.c: 125: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1360  071B  3082               	movlw	130
  1361  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1362  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1363  071E  00AD               	movwf	??_main+1
  1364  071F  30DD               	movlw	221
  1365  0720  00AC               	movwf	??_main
  1366  0721                     u1877:	
  1367  0721  0BAC               	decfsz	??_main,f
  1368  0722  2F21               	goto	u1877
  1369  0723  0BAD               	decfsz	??_main+1,f
  1370  0724  2F21               	goto	u1877
  1371  0725  2F26               	nop2
  1372                           
  1373                           ;main.c: 126: { LCDGotoXY(8,1); LCDWriteString(" ");};
  1374  0726  01FC               	clrf	LCDGotoXY@y
  1375  0727  0AFC               	incf	LCDGotoXY@y,f
  1376  0728  3008               	movlw	8
  1377  0729  230C               	fcall	_LCDGotoXY
  1378  072A  3014               	movlw	((STR_1+19)-__stringbase)& (0+255)
  1379  072B  2354               	fcall	_LCDWriteString
  1380                           
  1381                           ;main.c: 127: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1382  072C  3082               	movlw	130
  1383  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1384  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1385  072F  00AD               	movwf	??_main+1
  1386  0730  30DD               	movlw	221
  1387  0731  00AC               	movwf	??_main
  1388  0732                     u1887:	
  1389  0732  0BAC               	decfsz	??_main,f
  1390  0733  2F32               	goto	u1887
  1391  0734  0BAD               	decfsz	??_main+1,f
  1392  0735  2F32               	goto	u1887
  1393  0736  2F37               	nop2
  1394                           
  1395                           ;main.c: 128: { LCDGotoXY(9,1); LCDWriteString("2");};
  1396  0737  01FC               	clrf	LCDGotoXY@y
  1397  0738  0AFC               	incf	LCDGotoXY@y,f
  1398  0739  3009               	movlw	9
  1399  073A  230C               	fcall	_LCDGotoXY
  1400  073B  3086               	movlw	(STR_16-__stringbase)& (0+255)
  1401  073C  2354               	fcall	_LCDWriteString
  1402                           
  1403                           ;main.c: 129: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1404  073D  3082               	movlw	130
  1405  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1406  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0740  00AD               	movwf	??_main+1
  1408  0741  30DD               	movlw	221
  1409  0742  00AC               	movwf	??_main
  1410  0743                     u1897:	
  1411  0743  0BAC               	decfsz	??_main,f
  1412  0744  2F43               	goto	u1897
  1413  0745  0BAD               	decfsz	??_main+1,f
  1414  0746  2F43               	goto	u1897
  1415  0747  2F48               	nop2
  1416                           
  1417                           ;main.c: 130: { LCDGotoXY(10,1); LCDWriteString("!");};
  1418  0748  01FC               	clrf	LCDGotoXY@y
  1419  0749  0AFC               	incf	LCDGotoXY@y,f
  1420  074A  300A               	movlw	10
  1421  074B  230C               	fcall	_LCDGotoXY
  1422  074C  306C               	movlw	((STR_10+7)-__stringbase)& (0+255)
  1423  074D  2354               	fcall	_LCDWriteString
  1424                           
  1425                           ;main.c: 131: _delay((unsigned long)((200)*(2000000L/4000.0)));
  1426  074E  3082               	movlw	130
  1427  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0751  00AD               	movwf	??_main+1
  1430  0752  30DD               	movlw	221
  1431  0753  00AC               	movwf	??_main
  1432  0754                     u1907:	
  1433  0754  0BAC               	decfsz	??_main,f
  1434  0755  2F54               	goto	u1907
  1435  0756  0BAD               	decfsz	??_main+1,f
  1436  0757  2F54               	goto	u1907
  1437  0758  2F59               	nop2
  1438                           
  1439                           ;main.c: 132: { LCDGotoXY(11,1); LCDWriteString("!");};
  1440  0759  01FC               	clrf	LCDGotoXY@y
  1441  075A  0AFC               	incf	LCDGotoXY@y,f
  1442  075B  300B               	movlw	11
  1443  075C  230C               	fcall	_LCDGotoXY
  1444  075D  306C               	movlw	((STR_10+7)-__stringbase)& (0+255)
  1445  075E  2354               	fcall	_LCDWriteString
  1446                           
  1447                           ;main.c: 134: LCDGotoXY(8,2);
  1448  075F  3002               	movlw	2
  1449  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0762  00AC               	movwf	??_main
  1452  0763  082C               	movf	??_main,w
  1453  0764  00FC               	movwf	LCDGotoXY@y
  1454  0765  3008               	movlw	8
  1455  0766  230C               	fcall	_LCDGotoXY
  1456                           
  1457                           ;main.c: 135: LCDWriteString("Line 3!!");
  1458  0767  306E               	movlw	(STR_19-__stringbase)& (0+255)
  1459  0768  2354               	fcall	_LCDWriteString
  1460  0769                     l1810:	
  1461                           
  1462                           ;main.c: 136: }
  1463                           ;main.c: 138: if(sl > 6 && sl <= 7)
  1464  0769  3007               	movlw	7
  1465  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1466  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1467  076C  0245               	subwf	_sl,w
  1468  076D  1C03               	skipc
  1469  076E  2F7B               	goto	l1816
  1470  076F  3008               	movlw	8
  1471  0770  0245               	subwf	_sl,w
  1472  0771  1803               	skipnc
  1473  0772  2F7B               	goto	l1816
  1474                           
  1475                           ;main.c: 139: {
  1476                           ;main.c: 140: { LCDGotoXY(12,3); LCDWriteString("Line 4!!");};
  1477  0773  3003               	movlw	3
  1478  0774  00AC               	movwf	??_main
  1479  0775  082C               	movf	??_main,w
  1480  0776  00FC               	movwf	LCDGotoXY@y
  1481  0777  300C               	movlw	12
  1482  0778  230C               	fcall	_LCDGotoXY
  1483  0779  3077               	movlw	(STR_20-__stringbase)& (0+255)
  1484  077A  2354               	fcall	_LCDWriteString
  1485  077B                     l1816:	
  1486                           
  1487                           ;main.c: 141: }
  1488                           ;main.c: 144: Toggle = 0;
  1489  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1490  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1491  077D  01B1               	clrf	main@Toggle
  1492  077E                     l1818:	
  1493                           
  1494                           ;main.c: 145: }
  1495                           ;main.c: 150: if (TMR0IF)
  1496  077E  1D0B               	btfss	11,2	;volatile
  1497  077F  2F87               	goto	l191
  1498                           
  1499                           ;main.c: 151: {
  1500                           ;main.c: 152: bres += 256;
  1501  0780  3000               	movlw	0
  1502  0781  07AF               	addwf	main@bres,f
  1503  0782  1803               	skipnc
  1504  0783  0AB0               	incf	main@bres+1,f
  1505  0784  3001               	movlw	1
  1506  0785  07B0               	addwf	main@bres+1,f
  1507                           
  1508                           ;main.c: 153: TMR0IF = 0;
  1509  0786  110B               	bcf	11,2	;volatile
  1510  0787                     l191:	
  1511                           
  1512                           ;main.c: 154: }
  1513                           ;main.c: 157: if(bres >= 1953)
  1514  0787  3007               	movlw	7
  1515  0788  0230               	subwf	main@bres+1,w
  1516  0789  30A1               	movlw	161
  1517  078A  1903               	skipnz
  1518  078B  022F               	subwf	main@bres,w
  1519  078C  1C03               	skipc
  1520  078D  2FB4               	goto	l1844
  1521                           
  1522                           ;main.c: 158: {
  1523                           ;main.c: 159: bres -= 1953;
  1524  078E  30A1               	movlw	161
  1525  078F  02AF               	subwf	main@bres,f
  1526  0790  3007               	movlw	7
  1527  0791  1C03               	skipc
  1528  0792  03B0               	decf	main@bres+1,f
  1529  0793  02B0               	subwf	main@bres+1,f
  1530                           
  1531                           ;main.c: 160: ++sl;
  1532  0794  3001               	movlw	1
  1533  0795  00AC               	movwf	??_main
  1534  0796  082C               	movf	??_main,w
  1535  0797  07C5               	addwf	_sl,f
  1536                           
  1537                           ;main.c: 161: ++Toggle;
  1538  0798  3001               	movlw	1
  1539  0799  00AC               	movwf	??_main
  1540  079A  082C               	movf	??_main,w
  1541  079B  07B1               	addwf	main@Toggle,f
  1542                           
  1543                           ;main.c: 162: Toggle2 = 1 - Toggle2;
  1544  079C  0332               	decf	main@Toggle2,w
  1545  079D  3AFF               	xorlw	255
  1546  079E  3E01               	addlw	1
  1547  079F  00AC               	movwf	??_main
  1548  07A0  082C               	movf	??_main,w
  1549  07A1  00B2               	movwf	main@Toggle2
  1550                           
  1551                           ;main.c: 164: if(sl>9)
  1552  07A2  300A               	movlw	10
  1553  07A3  0245               	subwf	_sl,w
  1554  07A4  1C03               	skipc
  1555  07A5  2FB4               	goto	l1844
  1556                           
  1557                           ;main.c: 165: {
  1558                           ;main.c: 166: sl = 0;
  1559  07A6  01C5               	clrf	_sl
  1560                           
  1561                           ;main.c: 167: sh++;
  1562  07A7  3001               	movlw	1
  1563  07A8  00AC               	movwf	??_main
  1564  07A9  082C               	movf	??_main,w
  1565  07AA  07C4               	addwf	_sh,f
  1566                           
  1567                           ;main.c: 170: if(sh>5)
  1568  07AB  3006               	movlw	6
  1569  07AC  0244               	subwf	_sh,w
  1570  07AD  1C03               	skipc
  1571  07AE  2FB4               	goto	l1844
  1572                           
  1573                           ;main.c: 171: {
  1574                           ;main.c: 172: sh=0;
  1575  07AF  01C4               	clrf	_sh
  1576                           
  1577                           ;main.c: 173: ml++;
  1578  07B0  3001               	movlw	1
  1579  07B1  00AC               	movwf	??_main
  1580  07B2  082C               	movf	??_main,w
  1581  07B3  07C3               	addwf	_ml,f
  1582  07B4                     l1844:	
  1583                           
  1584                           ;main.c: 174: }
  1585                           ;main.c: 176: }
  1586                           ;main.c: 178: }
  1587                           ;main.c: 182: if(ml>9)
  1588  07B4  300A               	movlw	10
  1589  07B5  0243               	subwf	_ml,w
  1590  07B6  1C03               	skipc
  1591  07B7  2FBD               	goto	l1850
  1592                           
  1593                           ;main.c: 183: {
  1594                           ;main.c: 184: ml = 0;
  1595  07B8  01C3               	clrf	_ml
  1596                           
  1597                           ;main.c: 185: mh++;
  1598  07B9  3001               	movlw	1
  1599  07BA  00AC               	movwf	??_main
  1600  07BB  082C               	movf	??_main,w
  1601  07BC  07C2               	addwf	_mh,f
  1602  07BD                     l1850:	
  1603                           
  1604                           ;main.c: 186: }
  1605                           ;main.c: 188: if(mh>5){
  1606  07BD  3006               	movlw	6
  1607  07BE  0242               	subwf	_mh,w
  1608  07BF  1C03               	skipc
  1609  07C0  2FC6               	goto	l1856
  1610                           
  1611                           ;main.c: 189: mh = 0;
  1612  07C1  01C2               	clrf	_mh
  1613                           
  1614                           ;main.c: 190: ++hl;
  1615  07C2  3001               	movlw	1
  1616  07C3  00AC               	movwf	??_main
  1617  07C4  082C               	movf	??_main,w
  1618  07C5  07BC               	addwf	_hl,f
  1619  07C6                     l1856:	
  1620                           
  1621                           ;main.c: 191: }
  1622                           ;main.c: 193: if(hl>9){
  1623  07C6  300A               	movlw	10
  1624  07C7  023C               	subwf	_hl,w
  1625  07C8  1C03               	skipc
  1626  07C9  2FCF               	goto	l1862
  1627                           
  1628                           ;main.c: 194: hl = 0;
  1629  07CA  01BC               	clrf	_hl
  1630                           
  1631                           ;main.c: 195: ++hh;
  1632  07CB  3001               	movlw	1
  1633  07CC  00AC               	movwf	??_main
  1634  07CD  082C               	movf	??_main,w
  1635  07CE  07BB               	addwf	_hh,f
  1636  07CF                     l1862:	
  1637                           
  1638                           ;main.c: 196: }
  1639                           ;main.c: 198: if(hh >=2 && hl>3){
  1640  07CF  3002               	movlw	2
  1641  07D0  023B               	subwf	_hh,w
  1642  07D1  1C03               	skipc
  1643  07D2  2FD9               	goto	l1868
  1644  07D3  3004               	movlw	4
  1645  07D4  023C               	subwf	_hl,w
  1646  07D5  1C03               	skipc
  1647  07D6  2FD9               	goto	l1868
  1648                           
  1649                           ;main.c: 199: hh = 0;
  1650  07D7  01BB               	clrf	_hh
  1651                           
  1652                           ;main.c: 200: hl = 0;
  1653  07D8  01BC               	clrf	_hl
  1654  07D9                     l1868:	
  1655                           
  1656                           ;main.c: 201: }
  1657                           ;main.c: 203: if(Toggle2 != 1){
  1658  07D9  0832               	movf	main@Toggle2,w
  1659  07DA  3A01               	xorlw	1
  1660  07DB  1903               	skipnz
  1661  07DC  2FDF               	goto	l199
  1662                           
  1663                           ;main.c: 204: RC7 = 0;
  1664  07DD  1387               	bcf	7,7	;volatile
  1665                           
  1666                           ;main.c: 205: }
  1667  07DE  2DC4               	goto	l1670
  1668  07DF                     l199:	
  1669                           
  1670                           ;main.c: 206: else{
  1671                           ;main.c: 207: RC7 = 1;
  1672  07DF  1787               	bsf	7,7	;volatile
  1673  07E0  2DC4               	goto	l1670
  1674  07E1                     __end_of_main:	
  1675                           
  1676                           	psect	text1
  1677  0354                     __ptext1:	
  1678 ;; *************** function _LCDWriteString *****************
  1679 ;; Defined at:
  1680 ;;		line 259 in file "lcd_hd44780_pic16.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  msg             1    wreg     PTR const unsigned char 
  1683 ;;		 -> STR_21(2), STR_20(9), STR_19(9), STR_18(2), 
  1684 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1685 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(9), 
  1686 ;;		 -> STR_9(19), STR_8(6), STR_7(14), STR_6(16), 
  1687 ;;		 -> STR_5(18), STR_4(12), STR_3(2), STR_2(2), 
  1688 ;;		 -> STR_1(21), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  1691 ;;		 -> STR_21(2), STR_20(9), STR_19(9), STR_18(2), 
  1692 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1693 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(9), 
  1694 ;;		 -> STR_9(19), STR_8(6), STR_7(14), STR_6(16), 
  1695 ;;		 -> STR_5(18), STR_4(12), STR_3(2), STR_2(2), 
  1696 ;;		 -> STR_1(21), 
  1697 ;;  cc              1    0[BANK0 ] char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;		None               void
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1
  1707 ;;      Params:         0       0       0
  1708 ;;      Locals:         0       2       0
  1709 ;;      Temps:          1       0       0
  1710 ;;      Totals:         1       2       0
  1711 ;;Total ram usage:        3 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    2
  1714 ;; This function calls:
  1715 ;;		_LCDByte
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;;		_WaterCheck
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _LCDWriteString
  1724  0354                     _LCDWriteString:	
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1728                           ;LCDWriteString@msg stored from wreg
  1729  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0356  00A1               	movwf	LCDWriteString@msg
  1732  0357                     l1558:	
  1733                           ;lcd_hd44780_pic16.c: 289: while(*msg!='\0')
  1734                           
  1735  0357  0821               	movf	LCDWriteString@msg,w
  1736  0358  0084               	movwf	4
  1737  0359  2001               	fcall	stringdir
  1738  035A  3800               	iorlw	0
  1739  035B  1903               	btfsc	3,2
  1740  035C  0008               	return
  1741                           
  1742                           ;lcd_hd44780_pic16.c: 290: {
  1743                           ;lcd_hd44780_pic16.c: 292: if(*msg=='%')
  1744  035D  0821               	movf	LCDWriteString@msg,w
  1745  035E  0084               	movwf	4
  1746  035F  2001               	fcall	stringdir
  1747  0360  3A25               	xorlw	37
  1748  0361  1D03               	skipz
  1749  0362  2B7D               	goto	l1554
  1750                           
  1751                           ;lcd_hd44780_pic16.c: 293: {
  1752                           ;lcd_hd44780_pic16.c: 294: msg++;
  1753  0363  3001               	movlw	1
  1754  0364  00FC               	movwf	??_LCDWriteString
  1755  0365  087C               	movf	??_LCDWriteString,w
  1756  0366  07A1               	addwf	LCDWriteString@msg,f
  1757                           
  1758                           ;lcd_hd44780_pic16.c: 295: int8_t cc=*msg-'0';
  1759  0367  0821               	movf	LCDWriteString@msg,w
  1760  0368  0084               	movwf	4
  1761  0369  2001               	fcall	stringdir
  1762  036A  3ED0               	addlw	-48
  1763  036B  00FC               	movwf	??_LCDWriteString
  1764  036C  087C               	movf	??_LCDWriteString,w
  1765  036D  00A0               	movwf	LCDWriteString@cc
  1766                           
  1767                           ;lcd_hd44780_pic16.c: 297: if(cc>=0 && cc<=7)
  1768  036E  1BA0               	btfsc	LCDWriteString@cc,7
  1769  036F  2B79               	goto	l1550
  1770  0370  0820               	movf	LCDWriteString@cc,w
  1771  0371  3A80               	xorlw	128
  1772  0372  3E78               	addlw	-136
  1773  0373  1803               	skipnc
  1774  0374  2B79               	goto	l1550
  1775                           
  1776                           ;lcd_hd44780_pic16.c: 298: {
  1777                           ;lcd_hd44780_pic16.c: 299: (LCDByte(cc,1));
  1778  0375  01F5               	clrf	LCDByte@isdata
  1779  0376  0AF5               	incf	LCDByte@isdata,f
  1780  0377  0820               	movf	LCDWriteString@cc,w
  1781  0378  2B84               	goto	L1
  1782  0379                     l1550:	
  1783                           ;lcd_hd44780_pic16.c: 300: }
  1784                           
  1785                           
  1786                           ;lcd_hd44780_pic16.c: 301: else
  1787                           ;lcd_hd44780_pic16.c: 302: {
  1788                           ;lcd_hd44780_pic16.c: 303: (LCDByte('%',1));
  1789  0379  01F5               	clrf	LCDByte@isdata
  1790  037A  0AF5               	incf	LCDByte@isdata,f
  1791  037B  3025               	movlw	37
  1792  037C  238C               	fcall	_LCDByte
  1793  037D                     l1554:	
  1794                           ;lcd_hd44780_pic16.c: 305: }
  1795                           ;lcd_hd44780_pic16.c: 306: }
  1796                           
  1797                           ;lcd_hd44780_pic16.c: 304: (LCDByte(*msg,1));
  1798                           
  1799                           
  1800                           ;lcd_hd44780_pic16.c: 307: else
  1801                           ;lcd_hd44780_pic16.c: 308: {
  1802                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  1803  037D  01F5               	clrf	LCDByte@isdata
  1804  037E  0AF5               	incf	LCDByte@isdata,f
  1805  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0381  0821               	movf	LCDWriteString@msg,w
  1808  0382  0084               	movwf	4
  1809  0383  2001               	fcall	stringdir
  1810  0384                     L1:	
  1811  0384  238C               	fcall	_LCDByte
  1812                           
  1813                           ;lcd_hd44780_pic16.c: 310: }
  1814                           ;lcd_hd44780_pic16.c: 311: msg++;
  1815  0385  3001               	movlw	1
  1816  0386  00FC               	movwf	??_LCDWriteString
  1817  0387  087C               	movf	??_LCDWriteString,w
  1818  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1820  038A  07A1               	addwf	LCDWriteString@msg,f
  1821  038B  2B57               	goto	l1558
  1822  038C                     __end_of_LCDWriteString:	
  1823                           
  1824                           	psect	text2
  1825  0503                     __ptext2:	
  1826 ;; *************** function _LCDWriteInt *****************
  1827 ;; Defined at:
  1828 ;;		line 315 in file "lcd_hd44780_pic16.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  val             2    0[BANK0 ] int 
  1831 ;;  field_length    1    2[BANK0 ] char 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  str             5    3[BANK0 ] unsigned char [5]
  1834 ;;  i               2   10[BANK0 ] int 
  1835 ;;  j               2    8[BANK0 ] int 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1
  1845 ;;      Params:         0       3       0
  1846 ;;      Locals:         0       9       0
  1847 ;;      Temps:          2       0       0
  1848 ;;      Totals:         2      12       0
  1849 ;;Total ram usage:       14 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    2
  1852 ;; This function calls:
  1853 ;;		_LCDByte
  1854 ;;		___awdiv
  1855 ;;		___awmod
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;;		_WaterCheck
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _LCDWriteInt
  1864  0503                     _LCDWriteInt:	
  1865                           
  1866                           ;lcd_hd44780_pic16.c: 328: char str[5]={0,0,0,0,0};
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1870  0503  3023               	movlw	LCDWriteInt@str& (0+255)
  1871  0504  0084               	movwf	4
  1872  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0507  083D               	movf	LCDWriteInt@F1067,w
  1875  0508  1383               	bcf	3,7	;select IRP bank0
  1876  0509  0080               	movwf	0
  1877  050A  0A84               	incf	4,f
  1878  050B  083E               	movf	LCDWriteInt@F1067+1,w
  1879  050C  0080               	movwf	0
  1880  050D  0A84               	incf	4,f
  1881  050E  083F               	movf	LCDWriteInt@F1067+2,w
  1882  050F  0080               	movwf	0
  1883  0510  0A84               	incf	4,f
  1884  0511  0840               	movf	LCDWriteInt@F1067+3,w
  1885  0512  0080               	movwf	0
  1886  0513  0A84               	incf	4,f
  1887  0514  0841               	movf	LCDWriteInt@F1067+4,w
  1888  0515  0080               	movwf	0
  1889                           
  1890                           ;lcd_hd44780_pic16.c: 329: int i=4,j=0;
  1891  0516  3004               	movlw	4
  1892  0517  00AA               	movwf	LCDWriteInt@i
  1893  0518  3000               	movlw	0
  1894  0519  00AB               	movwf	LCDWriteInt@i+1
  1895  051A  01A8               	clrf	LCDWriteInt@j
  1896  051B  01A9               	clrf	LCDWriteInt@j+1
  1897                           
  1898                           ;lcd_hd44780_pic16.c: 332: if(val<0)
  1899  051C  1FA1               	btfss	LCDWriteInt@val+1,7
  1900  051D  2D29               	goto	l1578
  1901                           
  1902                           ;lcd_hd44780_pic16.c: 333: {
  1903                           ;lcd_hd44780_pic16.c: 334: (LCDByte('-',1));
  1904  051E  01F5               	clrf	LCDByte@isdata
  1905  051F  0AF5               	incf	LCDByte@isdata,f
  1906  0520  302D               	movlw	45
  1907  0521  238C               	fcall	_LCDByte
  1908                           
  1909                           ;lcd_hd44780_pic16.c: 335: val=val*-1;
  1910  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0524  09A0               	comf	LCDWriteInt@val,f
  1913  0525  09A1               	comf	LCDWriteInt@val+1,f
  1914  0526  0AA0               	incf	LCDWriteInt@val,f
  1915  0527  1903               	skipnz
  1916  0528  0AA1               	incf	LCDWriteInt@val+1,f
  1917  0529                     l1578:	
  1918                           ;lcd_hd44780_pic16.c: 336: }
  1919                           ;lcd_hd44780_pic16.c: 338: while(val)
  1920                           
  1921  0529  0821               	movf	LCDWriteInt@val+1,w
  1922  052A  0420               	iorwf	LCDWriteInt@val,w
  1923  052B  1903               	btfsc	3,2
  1924  052C  2D5C               	goto	l1580
  1925                           
  1926                           ;lcd_hd44780_pic16.c: 339: {
  1927                           ;lcd_hd44780_pic16.c: 340: str[i]=val%10;
  1928  052D  300A               	movlw	10
  1929  052E  00F0               	movwf	___awmod@divisor
  1930  052F  3000               	movlw	0
  1931  0530  00F1               	movwf	___awmod@divisor+1
  1932  0531  0821               	movf	LCDWriteInt@val+1,w
  1933  0532  01F3               	clrf	___awmod@dividend+1
  1934  0533  07F3               	addwf	___awmod@dividend+1,f
  1935  0534  0820               	movf	LCDWriteInt@val,w
  1936  0535  01F2               	clrf	___awmod@dividend
  1937  0536  07F2               	addwf	___awmod@dividend,f
  1938  0537  245B               	fcall	___awmod
  1939  0538  0870               	movf	?___awmod,w
  1940  0539  00FC               	movwf	??_LCDWriteInt
  1941  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1942  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1943  053C  082A               	movf	LCDWriteInt@i,w
  1944  053D  3E23               	addlw	LCDWriteInt@str& (0+255)
  1945  053E  0084               	movwf	4
  1946  053F  087C               	movf	??_LCDWriteInt,w
  1947  0540  1383               	bcf	3,7	;select IRP bank0
  1948  0541  0080               	movwf	0
  1949                           
  1950                           ;lcd_hd44780_pic16.c: 341: val=val/10;
  1951  0542  300A               	movlw	10
  1952  0543  00F0               	movwf	___awdiv@divisor
  1953  0544  3000               	movlw	0
  1954  0545  00F1               	movwf	___awdiv@divisor+1
  1955  0546  0821               	movf	LCDWriteInt@val+1,w
  1956  0547  01F3               	clrf	___awdiv@dividend+1
  1957  0548  07F3               	addwf	___awdiv@dividend+1,f
  1958  0549  0820               	movf	LCDWriteInt@val,w
  1959  054A  01F2               	clrf	___awdiv@dividend
  1960  054B  07F2               	addwf	___awdiv@dividend,f
  1961  054C  24A8               	fcall	___awdiv
  1962  054D  0871               	movf	?___awdiv+1,w
  1963  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1964  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0550  01A1               	clrf	LCDWriteInt@val+1
  1966  0551  07A1               	addwf	LCDWriteInt@val+1,f
  1967  0552  0870               	movf	?___awdiv,w
  1968  0553  01A0               	clrf	LCDWriteInt@val
  1969  0554  07A0               	addwf	LCDWriteInt@val,f
  1970                           
  1971                           ;lcd_hd44780_pic16.c: 342: i--;
  1972  0555  30FF               	movlw	255
  1973  0556  07AA               	addwf	LCDWriteInt@i,f
  1974  0557  1803               	skipnc
  1975  0558  0AAB               	incf	LCDWriteInt@i+1,f
  1976  0559  30FF               	movlw	255
  1977  055A  07AB               	addwf	LCDWriteInt@i+1,f
  1978  055B  2D29               	goto	l1578
  1979  055C                     l1580:	
  1980                           
  1981                           ;lcd_hd44780_pic16.c: 343: }
  1982                           ;lcd_hd44780_pic16.c: 344: if(field_length==-1)
  1983  055C  0822               	movf	LCDWriteInt@field_length,w
  1984  055D  3AFF               	xorlw	-1
  1985  055E  1903               	btfsc	3,2
  1986  055F  2D67               	goto	l1586
  1987  0560  2D6F               	goto	l1588
  1988  0561                     l1584:	
  1989                           ;lcd_hd44780_pic16.c: 345: while(str[j]==0) j++;
  1990                           
  1991  0561  3001               	movlw	1
  1992  0562  07A8               	addwf	LCDWriteInt@j,f
  1993  0563  1803               	skipnc
  1994  0564  0AA9               	incf	LCDWriteInt@j+1,f
  1995  0565  3000               	movlw	0
  1996  0566  07A9               	addwf	LCDWriteInt@j+1,f
  1997  0567                     l1586:	
  1998  0567  0828               	movf	LCDWriteInt@j,w
  1999  0568  3E23               	addlw	LCDWriteInt@str& (0+255)
  2000  0569  0084               	movwf	4
  2001  056A  1383               	bcf	3,7	;select IRP bank0
  2002  056B  0880               	movf	0,f
  2003  056C  1D03               	btfss	3,2
  2004  056D  2D81               	goto	l56
  2005  056E  2D61               	goto	l1584
  2006  056F                     l1588:	
  2007                           
  2008                           ;lcd_hd44780_pic16.c: 346: else
  2009                           ;lcd_hd44780_pic16.c: 347: j=5-field_length;
  2010  056F  0822               	movf	LCDWriteInt@field_length,w
  2011  0570  00FC               	movwf	??_LCDWriteInt
  2012  0571  01FD               	clrf	??_LCDWriteInt+1
  2013  0572  1BFC               	btfsc	??_LCDWriteInt,7
  2014  0573  03FD               	decf	??_LCDWriteInt+1,f
  2015  0574  09FC               	comf	??_LCDWriteInt,f
  2016  0575  09FD               	comf	??_LCDWriteInt+1,f
  2017  0576  0AFC               	incf	??_LCDWriteInt,f
  2018  0577  1903               	skipnz
  2019  0578  0AFD               	incf	??_LCDWriteInt+1,f
  2020  0579  087C               	movf	??_LCDWriteInt,w
  2021  057A  3E05               	addlw	5
  2022  057B  00A8               	movwf	LCDWriteInt@j
  2023  057C  087D               	movf	??_LCDWriteInt+1,w
  2024  057D  1803               	skipnc
  2025  057E  3E01               	addlw	1
  2026  057F  3E00               	addlw	0
  2027  0580  00A9               	movwf	LCDWriteInt@j+1
  2028  0581                     l56:	
  2029                           
  2030                           ;lcd_hd44780_pic16.c: 350: for(i=j;i<5;i++)
  2031  0581  0829               	movf	LCDWriteInt@j+1,w
  2032  0582  01AB               	clrf	LCDWriteInt@i+1
  2033  0583  07AB               	addwf	LCDWriteInt@i+1,f
  2034  0584  0828               	movf	LCDWriteInt@j,w
  2035  0585  01AA               	clrf	LCDWriteInt@i
  2036  0586  07AA               	addwf	LCDWriteInt@i,f
  2037  0587                     L2:	
  2038  0587  082B               	movf	LCDWriteInt@i+1,w
  2039  0588  3A80               	xorlw	128
  2040  0589  00FF               	movwf	127
  2041  058A  3080               	movlw	128
  2042  058B  027F               	subwf	127,w
  2043  058C  1D03               	skipz
  2044  058D  2D90               	goto	u1255
  2045  058E  3005               	movlw	5
  2046  058F  022A               	subwf	LCDWriteInt@i,w
  2047  0590                     u1255:	
  2048  0590  1803               	btfsc	3,0
  2049  0591  0008               	return
  2050                           
  2051                           ;lcd_hd44780_pic16.c: 351: {
  2052                           ;lcd_hd44780_pic16.c: 352: (LCDByte(48+str[i],1));
  2053  0592  01F5               	clrf	LCDByte@isdata
  2054  0593  0AF5               	incf	LCDByte@isdata,f
  2055  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0596  082A               	movf	LCDWriteInt@i,w
  2058  0597  3E23               	addlw	LCDWriteInt@str& (0+255)
  2059  0598  0084               	movwf	4
  2060  0599  1383               	bcf	3,7	;select IRP bank0
  2061  059A  0800               	movf	0,w
  2062  059B  3E30               	addlw	48
  2063  059C  238C               	fcall	_LCDByte
  2064  059D  3001               	movlw	1
  2065  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2066  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2067  05A0  07AA               	addwf	LCDWriteInt@i,f
  2068  05A1  1803               	skipnc
  2069  05A2  0AAB               	incf	LCDWriteInt@i+1,f
  2070  05A3  3000               	movlw	0
  2071  05A4  07AB               	addwf	LCDWriteInt@i+1,f
  2072  05A5  2D87               	goto	L2
  2073  05A6                     __end_of_LCDWriteInt:	
  2074                           
  2075                           	psect	text3
  2076  045B                     __ptext3:	
  2077 ;; *************** function ___awmod *****************
  2078 ;; Defined at:
  2079 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  divisor         2    0[COMMON] int 
  2082 ;;  dividend        2    2[COMMON] int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  sign            1    6[COMMON] unsigned char 
  2085 ;;  counter         1    5[COMMON] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    0[COMMON] int 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1
  2095 ;;      Params:         4       0       0
  2096 ;;      Locals:         2       0       0
  2097 ;;      Temps:          1       0       0
  2098 ;;      Totals:         7       0       0
  2099 ;;Total ram usage:        7 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_LCDWriteInt
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function ___awmod
  2110  045B                     ___awmod:	
  2111                           
  2112                           ;incstack = 0
  2113                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2114  045B  01F6               	clrf	___awmod@sign
  2115  045C  1FF3               	btfss	___awmod@dividend+1,7
  2116  045D  2C65               	goto	l1456
  2117  045E  09F2               	comf	___awmod@dividend,f
  2118  045F  09F3               	comf	___awmod@dividend+1,f
  2119  0460  0AF2               	incf	___awmod@dividend,f
  2120  0461  1903               	skipnz
  2121  0462  0AF3               	incf	___awmod@dividend+1,f
  2122  0463  01F6               	clrf	___awmod@sign
  2123  0464  0AF6               	incf	___awmod@sign,f
  2124  0465                     l1456:	
  2125  0465  1FF1               	btfss	___awmod@divisor+1,7
  2126  0466  2C6C               	goto	l1460
  2127  0467  09F0               	comf	___awmod@divisor,f
  2128  0468  09F1               	comf	___awmod@divisor+1,f
  2129  0469  0AF0               	incf	___awmod@divisor,f
  2130  046A  1903               	skipnz
  2131  046B  0AF1               	incf	___awmod@divisor+1,f
  2132  046C                     l1460:	
  2133  046C  0871               	movf	___awmod@divisor+1,w
  2134  046D  0470               	iorwf	___awmod@divisor,w
  2135  046E  1903               	skipnz
  2136  046F  2C99               	goto	l1478
  2137  0470  01F5               	clrf	___awmod@counter
  2138  0471  0AF5               	incf	___awmod@counter,f
  2139  0472                     l1468:	
  2140  0472  1BF1               	btfsc	___awmod@divisor+1,7
  2141  0473  2C80               	goto	l1470
  2142  0474  3001               	movlw	1
  2143  0475                     u1095:	
  2144  0475  1003               	clrc
  2145  0476  0DF0               	rlf	___awmod@divisor,f
  2146  0477  0DF1               	rlf	___awmod@divisor+1,f
  2147  0478  3EFF               	addlw	-1
  2148  0479  1D03               	skipz
  2149  047A  2C75               	goto	u1095
  2150  047B  3001               	movlw	1
  2151  047C  00F4               	movwf	??___awmod
  2152  047D  0874               	movf	??___awmod,w
  2153  047E  07F5               	addwf	___awmod@counter,f
  2154  047F  2C72               	goto	l1468
  2155  0480                     l1470:	
  2156  0480  0871               	movf	___awmod@divisor+1,w
  2157  0481  0273               	subwf	___awmod@dividend+1,w
  2158  0482  1D03               	skipz
  2159  0483  2C86               	goto	u1115
  2160  0484  0870               	movf	___awmod@divisor,w
  2161  0485  0272               	subwf	___awmod@dividend,w
  2162  0486                     u1115:	
  2163  0486  1C03               	skipc
  2164  0487  2C8E               	goto	l1474
  2165  0488  0870               	movf	___awmod@divisor,w
  2166  0489  02F2               	subwf	___awmod@dividend,f
  2167  048A  0871               	movf	___awmod@divisor+1,w
  2168  048B  1C03               	skipc
  2169  048C  03F3               	decf	___awmod@dividend+1,f
  2170  048D  02F3               	subwf	___awmod@dividend+1,f
  2171  048E                     l1474:	
  2172  048E  3001               	movlw	1
  2173  048F                     u1125:	
  2174  048F  1003               	clrc
  2175  0490  0CF1               	rrf	___awmod@divisor+1,f
  2176  0491  0CF0               	rrf	___awmod@divisor,f
  2177  0492  3EFF               	addlw	-1
  2178  0493  1D03               	skipz
  2179  0494  2C8F               	goto	u1125
  2180  0495  3001               	movlw	1
  2181  0496  02F5               	subwf	___awmod@counter,f
  2182  0497  1D03               	btfss	3,2
  2183  0498  2C80               	goto	l1470
  2184  0499                     l1478:	
  2185  0499  0876               	movf	___awmod@sign,w
  2186  049A  1903               	btfsc	3,2
  2187  049B  2CA1               	goto	l1482
  2188  049C  09F2               	comf	___awmod@dividend,f
  2189  049D  09F3               	comf	___awmod@dividend+1,f
  2190  049E  0AF2               	incf	___awmod@dividend,f
  2191  049F  1903               	skipnz
  2192  04A0  0AF3               	incf	___awmod@dividend+1,f
  2193  04A1                     l1482:	
  2194  04A1  0873               	movf	___awmod@dividend+1,w
  2195  04A2  01F1               	clrf	?___awmod+1
  2196  04A3  07F1               	addwf	?___awmod+1,f
  2197  04A4  0872               	movf	___awmod@dividend,w
  2198  04A5  01F0               	clrf	?___awmod
  2199  04A6  07F0               	addwf	?___awmod,f
  2200  04A7  0008               	return
  2201  04A8                     __end_of___awmod:	
  2202                           
  2203                           	psect	text4
  2204  04A8                     __ptext4:	
  2205 ;; *************** function ___awdiv *****************
  2206 ;; Defined at:
  2207 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  divisor         2    0[COMMON] int 
  2210 ;;  dividend        2    2[COMMON] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  quotient        2    7[COMMON] int 
  2213 ;;  sign            1    6[COMMON] unsigned char 
  2214 ;;  counter         1    5[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    0[COMMON] int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1
  2224 ;;      Params:         4       0       0
  2225 ;;      Locals:         4       0       0
  2226 ;;      Temps:          1       0       0
  2227 ;;      Totals:         9       0       0
  2228 ;;Total ram usage:        9 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_LCDWriteInt
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function ___awdiv
  2239  04A8                     ___awdiv:	
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2243  04A8  01F6               	clrf	___awdiv@sign
  2244  04A9  1FF1               	btfss	___awdiv@divisor+1,7
  2245  04AA  2CB2               	goto	l1412
  2246  04AB  09F0               	comf	___awdiv@divisor,f
  2247  04AC  09F1               	comf	___awdiv@divisor+1,f
  2248  04AD  0AF0               	incf	___awdiv@divisor,f
  2249  04AE  1903               	skipnz
  2250  04AF  0AF1               	incf	___awdiv@divisor+1,f
  2251  04B0  01F6               	clrf	___awdiv@sign
  2252  04B1  0AF6               	incf	___awdiv@sign,f
  2253  04B2                     l1412:	
  2254  04B2  1FF3               	btfss	___awdiv@dividend+1,7
  2255  04B3  2CBD               	goto	l1418
  2256  04B4  09F2               	comf	___awdiv@dividend,f
  2257  04B5  09F3               	comf	___awdiv@dividend+1,f
  2258  04B6  0AF2               	incf	___awdiv@dividend,f
  2259  04B7  1903               	skipnz
  2260  04B8  0AF3               	incf	___awdiv@dividend+1,f
  2261  04B9  3001               	movlw	1
  2262  04BA  00F4               	movwf	??___awdiv
  2263  04BB  0874               	movf	??___awdiv,w
  2264  04BC  06F6               	xorwf	___awdiv@sign,f
  2265  04BD                     l1418:	
  2266  04BD  01F7               	clrf	___awdiv@quotient
  2267  04BE  01F8               	clrf	___awdiv@quotient+1
  2268  04BF  0871               	movf	___awdiv@divisor+1,w
  2269  04C0  0470               	iorwf	___awdiv@divisor,w
  2270  04C1  1903               	skipnz
  2271  04C2  2CF4               	goto	l1440
  2272  04C3  01F5               	clrf	___awdiv@counter
  2273  04C4  0AF5               	incf	___awdiv@counter,f
  2274  04C5                     l1428:	
  2275  04C5  1BF1               	btfsc	___awdiv@divisor+1,7
  2276  04C6  2CD3               	goto	l1430
  2277  04C7  3001               	movlw	1
  2278  04C8                     u995:	
  2279  04C8  1003               	clrc
  2280  04C9  0DF0               	rlf	___awdiv@divisor,f
  2281  04CA  0DF1               	rlf	___awdiv@divisor+1,f
  2282  04CB  3EFF               	addlw	-1
  2283  04CC  1D03               	skipz
  2284  04CD  2CC8               	goto	u995
  2285  04CE  3001               	movlw	1
  2286  04CF  00F4               	movwf	??___awdiv
  2287  04D0  0874               	movf	??___awdiv,w
  2288  04D1  07F5               	addwf	___awdiv@counter,f
  2289  04D2  2CC5               	goto	l1428
  2290  04D3                     l1430:	
  2291  04D3  3001               	movlw	1
  2292  04D4                     u1015:	
  2293  04D4  1003               	clrc
  2294  04D5  0DF7               	rlf	___awdiv@quotient,f
  2295  04D6  0DF8               	rlf	___awdiv@quotient+1,f
  2296  04D7  3EFF               	addlw	-1
  2297  04D8  1D03               	skipz
  2298  04D9  2CD4               	goto	u1015
  2299  04DA  0871               	movf	___awdiv@divisor+1,w
  2300  04DB  0273               	subwf	___awdiv@dividend+1,w
  2301  04DC  1D03               	skipz
  2302  04DD  2CE0               	goto	u1025
  2303  04DE  0870               	movf	___awdiv@divisor,w
  2304  04DF  0272               	subwf	___awdiv@dividend,w
  2305  04E0                     u1025:	
  2306  04E0  1C03               	skipc
  2307  04E1  2CE9               	goto	l1436
  2308  04E2  0870               	movf	___awdiv@divisor,w
  2309  04E3  02F2               	subwf	___awdiv@dividend,f
  2310  04E4  0871               	movf	___awdiv@divisor+1,w
  2311  04E5  1C03               	skipc
  2312  04E6  03F3               	decf	___awdiv@dividend+1,f
  2313  04E7  02F3               	subwf	___awdiv@dividend+1,f
  2314  04E8  1477               	bsf	___awdiv@quotient,0
  2315  04E9                     l1436:	
  2316  04E9  3001               	movlw	1
  2317  04EA                     u1035:	
  2318  04EA  1003               	clrc
  2319  04EB  0CF1               	rrf	___awdiv@divisor+1,f
  2320  04EC  0CF0               	rrf	___awdiv@divisor,f
  2321  04ED  3EFF               	addlw	-1
  2322  04EE  1D03               	skipz
  2323  04EF  2CEA               	goto	u1035
  2324  04F0  3001               	movlw	1
  2325  04F1  02F5               	subwf	___awdiv@counter,f
  2326  04F2  1D03               	btfss	3,2
  2327  04F3  2CD3               	goto	l1430
  2328  04F4                     l1440:	
  2329  04F4  0876               	movf	___awdiv@sign,w
  2330  04F5  1903               	btfsc	3,2
  2331  04F6  2CFC               	goto	l1444
  2332  04F7  09F7               	comf	___awdiv@quotient,f
  2333  04F8  09F8               	comf	___awdiv@quotient+1,f
  2334  04F9  0AF7               	incf	___awdiv@quotient,f
  2335  04FA  1903               	skipnz
  2336  04FB  0AF8               	incf	___awdiv@quotient+1,f
  2337  04FC                     l1444:	
  2338  04FC  0878               	movf	___awdiv@quotient+1,w
  2339  04FD  01F1               	clrf	?___awdiv+1
  2340  04FE  07F1               	addwf	?___awdiv+1,f
  2341  04FF  0877               	movf	___awdiv@quotient,w
  2342  0500  01F0               	clrf	?___awdiv
  2343  0501  07F0               	addwf	?___awdiv,f
  2344  0502  0008               	return
  2345  0503                     __end_of___awdiv:	
  2346                           
  2347                           	psect	text5
  2348  03C6                     __ptext5:	
  2349 ;; *************** function _LCDInit *****************
  2350 ;; Defined at:
  2351 ;;		line 200 in file "lcd_hd44780_pic16.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  style           1    wreg     unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  style           1    0[BANK0 ] unsigned char 
  2356 ;;  __i             1    1[BANK0 ] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;		None               void
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1
  2366 ;;      Params:         0       0       0
  2367 ;;      Locals:         0       2       0
  2368 ;;      Temps:          2       0       0
  2369 ;;      Totals:         2       2       0
  2370 ;;Total ram usage:        4 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    2
  2373 ;; This function calls:
  2374 ;;		_LCDBusyLoop
  2375 ;;		_LCDByte
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _LCDInit
  2383  03C6                     _LCDInit:	
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2387                           ;LCDInit@style stored from wreg
  2388  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2389  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2390  03C8  00A0               	movwf	LCDInit@style
  2391                           
  2392                           ;lcd_hd44780_pic16.c: 216: _delay((unsigned long)((300)*(2000000L/4000.0)));
  2393  03C9  30C3               	movlw	195
  2394  03CA  00FD               	movwf	??_LCDInit+1
  2395  03CB  30CD               	movlw	205
  2396  03CC  00FC               	movwf	??_LCDInit
  2397  03CD                     u1917:	
  2398  03CD  0BFC               	decfsz	??_LCDInit,f
  2399  03CE  2BCD               	goto	u1917
  2400  03CF  0BFD               	decfsz	??_LCDInit+1,f
  2401  03D0  2BCD               	goto	u1917
  2402                           
  2403                           ;lcd_hd44780_pic16.c: 219: TRISC&=(~(0x0F<<0));
  2404  03D1  30F0               	movlw	240
  2405  03D2  00FC               	movwf	??_LCDInit
  2406  03D3  087C               	movf	??_LCDInit,w
  2407  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2408  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2409  03D6  0587               	andwf	7,f	;volatile
  2410                           
  2411                           ;lcd_hd44780_pic16.c: 221: TRISCbits.TRISC6=0;
  2412  03D7  1307               	bcf	7,6	;volatile
  2413                           
  2414                           ;lcd_hd44780_pic16.c: 222: TRISCbits.TRISC4=0;
  2415  03D8  1207               	bcf	7,4	;volatile
  2416                           
  2417                           ;lcd_hd44780_pic16.c: 223: TRISCbits.TRISC5=0;
  2418  03D9  1287               	bcf	7,5	;volatile
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 225: PORTC&=(~(0x0F<<0));
  2421  03DA  30F0               	movlw	240
  2422  03DB  00FC               	movwf	??_LCDInit
  2423  03DC  087C               	movf	??_LCDInit,w
  2424  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2425  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2426  03DF  0587               	andwf	7,f	;volatile
  2427                           
  2428                           ;lcd_hd44780_pic16.c: 227: (RC6=0);
  2429  03E0  1307               	bcf	7,6	;volatile
  2430                           
  2431                           ;lcd_hd44780_pic16.c: 228: (RC5=0);
  2432  03E1  1287               	bcf	7,5	;volatile
  2433                           
  2434                           ;lcd_hd44780_pic16.c: 229: (RC4=0);
  2435  03E2  1207               	bcf	7,4	;volatile
  2436                           
  2437                           ;lcd_hd44780_pic16.c: 232: _delay((unsigned long)((4)*(2000000L/4000000.0)));
  2438  03E3  2BE4               	nop2	;2 cycle nop
  2439                           
  2440                           ;lcd_hd44780_pic16.c: 235: (RC6=1);
  2441  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2442  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2443  03E6  1707               	bsf	7,6	;volatile
  2444                           
  2445                           ;lcd_hd44780_pic16.c: 236: PORTC|=((0b00000010)<<0);
  2446  03E7  1487               	bsf	7,1	;volatile
  2447                           
  2448                           ;lcd_hd44780_pic16.c: 237: _delay((unsigned long)((4)*(2000000L/4000000.0)));
  2449  03E8  2BE9               	nop2	;2 cycle nop
  2450                           
  2451                           ;lcd_hd44780_pic16.c: 238: (RC6=0);
  2452  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2453  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2454  03EB  1307               	bcf	7,6	;volatile
  2455                           
  2456                           ;lcd_hd44780_pic16.c: 239: _delay((unsigned long)((4)*(2000000L/4000000.0)));
  2457  03EC  2BED               	nop2	;2 cycle nop
  2458                           
  2459                           ;lcd_hd44780_pic16.c: 242: LCDBusyLoop();
  2460  03ED  2410               	fcall	_LCDBusyLoop
  2461                           
  2462                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b00101000,0));
  2463  03EE  01F5               	clrf	LCDByte@isdata
  2464  03EF  3028               	movlw	40
  2465  03F0  238C               	fcall	_LCDByte
  2466                           
  2467                           ;lcd_hd44780_pic16.c: 248: (LCDByte(0b00001100|style,0));
  2468  03F1  01F5               	clrf	LCDByte@isdata
  2469  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2470  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2471  03F4  0820               	movf	LCDInit@style,w
  2472  03F5  380C               	iorlw	12
  2473  03F6  238C               	fcall	_LCDByte
  2474                           
  2475                           ;lcd_hd44780_pic16.c: 251: (LCDByte(0b01000000,0));
  2476  03F7  01F5               	clrf	LCDByte@isdata
  2477  03F8  3040               	movlw	64
  2478  03F9  238C               	fcall	_LCDByte
  2479                           
  2480                           ;lcd_hd44780_pic16.c: 253: uint8_t __i;
  2481                           ;lcd_hd44780_pic16.c: 254: for(__i=0;__i<sizeof(__cgram);__i++)
  2482  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2483  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2484  03FC  01A1               	clrf	LCDInit@__i
  2485  03FD                     L3:	
  2486  03FD  3008               	movlw	8
  2487  03FE  0221               	subwf	LCDInit@__i,w
  2488  03FF  1803               	btfsc	3,0
  2489  0400  0008               	return
  2490                           
  2491                           ;lcd_hd44780_pic16.c: 255: (LCDByte(__cgram[__i],1));
  2492  0401  01F5               	clrf	LCDByte@isdata
  2493  0402  0AF5               	incf	LCDByte@isdata,f
  2494  0403  0821               	movf	LCDInit@__i,w
  2495  0404  3E33               	addlw	___cgram& (0+255)
  2496  0405  0084               	movwf	4
  2497  0406  1383               	bcf	3,7	;select IRP bank0
  2498  0407  0800               	movf	0,w
  2499  0408  238C               	fcall	_LCDByte
  2500  0409  3001               	movlw	1
  2501  040A  00FC               	movwf	??_LCDInit
  2502  040B  087C               	movf	??_LCDInit,w
  2503  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2504  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2505  040E  07A1               	addwf	LCDInit@__i,f
  2506  040F  2BFD               	goto	L3
  2507  0410                     __end_of_LCDInit:	
  2508                           
  2509                           	psect	text6
  2510  030C                     __ptext6:	
  2511 ;; *************** function _LCDGotoXY *****************
  2512 ;; Defined at:
  2513 ;;		line 360 in file "lcd_hd44780_pic16.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  x               1    wreg     unsigned char 
  2516 ;;  y               1   12[COMMON] unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  x               1    0[BANK0 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1
  2528 ;;      Params:         1       0       0
  2529 ;;      Locals:         0       1       0
  2530 ;;      Temps:          1       0       0
  2531 ;;      Totals:         2       1       0
  2532 ;;Total ram usage:        3 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    2
  2535 ;; This function calls:
  2536 ;;		_LCDByte
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;;		_WaterCheck
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _LCDGotoXY
  2545  030C                     _LCDGotoXY:	
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2549                           ;LCDGotoXY@x stored from wreg
  2550  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2551  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2552  030E  00A0               	movwf	LCDGotoXY@x
  2553                           
  2554                           ;lcd_hd44780_pic16.c: 362: if(x>=20) return;
  2555  030F  3014               	movlw	20
  2556  0310  0220               	subwf	LCDGotoXY@x,w
  2557  0311  1803               	btfsc	3,0
  2558  0312  0008               	return
  2559  0313  2B1D               	goto	l1610
  2560  0314                     l67:	
  2561                           ;lcd_hd44780_pic16.c: 370: case 1:
  2562                           
  2563                           ;lcd_hd44780_pic16.c: 369: break;
  2564                           
  2565                           ;lcd_hd44780_pic16.c: 367: {
  2566                           ;lcd_hd44780_pic16.c: 368: case 0:
  2567                           
  2568                           ;lcd_hd44780_pic16.c: 366: switch(y)
  2569                           
  2570                           
  2571                           ;lcd_hd44780_pic16.c: 371: x|=0b01000000;
  2572  0314  1720               	bsf	LCDGotoXY@x,6
  2573                           
  2574                           ;lcd_hd44780_pic16.c: 372: break;
  2575  0315  2B28               	goto	l66
  2576  0316                     l1604:	
  2577                           ;lcd_hd44780_pic16.c: 373: case 2:
  2578                           
  2579                           
  2580                           ;lcd_hd44780_pic16.c: 374: x+=0x14;
  2581  0316  3014               	movlw	20
  2582  0317  2B19               	goto	L4
  2583  0318                     l1606:	
  2584                           ;lcd_hd44780_pic16.c: 376: case 3:
  2585                           
  2586                           ;lcd_hd44780_pic16.c: 375: break;
  2587                           
  2588                           
  2589                           ;lcd_hd44780_pic16.c: 377: x+=0x54;
  2590  0318  3054               	movlw	84
  2591  0319                     L4:	
  2592  0319  00FD               	movwf	??_LCDGotoXY
  2593  031A  087D               	movf	??_LCDGotoXY,w
  2594  031B  07A0               	addwf	LCDGotoXY@x,f
  2595                           
  2596                           ;lcd_hd44780_pic16.c: 379: }
  2597                           
  2598                           ;lcd_hd44780_pic16.c: 378: break;
  2599  031C  2B28               	goto	l66
  2600  031D                     l1610:	
  2601  031D  087C               	movf	LCDGotoXY@y,w
  2602                           
  2603                           ; Switch size 1, requested type "space"
  2604                           ; Number of cases is 4, Range of values is 0 to 3
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; direct_byte           10     6 (fixed)
  2608                           ; simple_byte           13     7 (average)
  2609                           ; jumptable            260     6 (fixed)
  2610                           ;	Chosen strategy is direct_byte
  2611  031E  0084               	movwf	4
  2612  031F  3004               	movlw	4
  2613  0320  0204               	subwf	4,w
  2614  0321  1803               	skipnc
  2615  0322  2B28               	goto	l66
  2616  0323  3000               	movlw	high S2050
  2617  0324  008A               	movwf	10
  2618  0325  3096               	movlw	low S2050
  2619  0326  0704               	addwf	4,w
  2620  0327  0082               	movwf	2
  2621  0328                     l66:	
  2622                           
  2623                           ;lcd_hd44780_pic16.c: 401: x|=0b10000000;
  2624  0328  17A0               	bsf	LCDGotoXY@x,7
  2625                           
  2626                           ;lcd_hd44780_pic16.c: 402: (LCDByte(x,0));
  2627  0329  01F5               	clrf	LCDByte@isdata
  2628  032A  0820               	movf	LCDGotoXY@x,w
  2629  032B  238C               	fcall	_LCDByte
  2630  032C  0008               	return
  2631  032D                     __end_of_LCDGotoXY:	
  2632                           
  2633                           	psect	swtext1
  2634  0096                     __pswtext1:	
  2635  0096                     S2050:	
  2636  0096  2B28               	ljmp	l66
  2637  0097  2B14               	ljmp	l67
  2638  0098  2B16               	ljmp	l1604
  2639  0099  2B18               	ljmp	l1606
  2640                           
  2641                           	psect	text7
  2642  038C                     __ptext7:	
  2643 ;; *************** function _LCDByte *****************
  2644 ;; Defined at:
  2645 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  c               1    wreg     unsigned char 
  2648 ;;  isdata          1    5[COMMON] unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  c               1   10[COMMON] unsigned char 
  2651 ;;  temp            1   11[COMMON] unsigned char 
  2652 ;;  ln              1    9[COMMON] unsigned char 
  2653 ;;  hn              1    8[COMMON] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1
  2663 ;;      Params:         1       0       0
  2664 ;;      Locals:         4       0       0
  2665 ;;      Temps:          2       0       0
  2666 ;;      Totals:         7       0       0
  2667 ;;Total ram usage:        7 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    1
  2670 ;; This function calls:
  2671 ;;		_LCDBusyLoop
  2672 ;; This function is called by:
  2673 ;;		_LCDInit
  2674 ;;		_LCDWriteString
  2675 ;;		_LCDWriteInt
  2676 ;;		_LCDGotoXY
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _LCDByte
  2683  038C                     _LCDByte:	
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2687                           ;LCDByte@c stored from wreg
  2688  038C  00FA               	movwf	LCDByte@c
  2689                           
  2690                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2691                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2692                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2693  038D  087A               	movf	LCDByte@c,w
  2694  038E  00F6               	movwf	??_LCDByte
  2695  038F  3004               	movlw	4
  2696  0390                     u945:	
  2697  0390  1003               	clrc
  2698  0391  0CF6               	rrf	??_LCDByte,f
  2699  0392  3EFF               	addlw	-1
  2700  0393  1D03               	skipz
  2701  0394  2B90               	goto	u945
  2702  0395  0876               	movf	??_LCDByte,w
  2703  0396  00F7               	movwf	??_LCDByte+1
  2704  0397  0877               	movf	??_LCDByte+1,w
  2705  0398  00F8               	movwf	LCDByte@hn
  2706                           
  2707                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2708  0399  087A               	movf	LCDByte@c,w
  2709  039A  390F               	andlw	15
  2710  039B  00F6               	movwf	??_LCDByte
  2711  039C  0876               	movf	??_LCDByte,w
  2712  039D  00F9               	movwf	LCDByte@ln
  2713                           
  2714                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2715  039E  08F5               	movf	LCDByte@isdata,f
  2716  039F  1D03               	skipz
  2717  03A0  2BA5               	goto	l21
  2718                           
  2719                           ;lcd_hd44780_pic16.c: 96: (RC4=0);
  2720  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2721  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2722  03A3  1207               	bcf	7,4	;volatile
  2723  03A4  2BA8               	goto	l22
  2724  03A5                     l21:	
  2725                           
  2726                           ;lcd_hd44780_pic16.c: 97: else
  2727                           ;lcd_hd44780_pic16.c: 98: (RC4=1);
  2728  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2729  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2730  03A7  1607               	bsf	7,4	;volatile
  2731  03A8                     l22:	
  2732                           
  2733                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2734                           ;lcd_hd44780_pic16.c: 103: (RC6=1);
  2735  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2736  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2737  03AA  1707               	bsf	7,6	;volatile
  2738                           
  2739                           ;lcd_hd44780_pic16.c: 107: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  2740  03AB  0807               	movf	7,w	;volatile
  2741  03AC  39F0               	andlw	240
  2742  03AD  0478               	iorwf	LCDByte@hn,w
  2743  03AE  00F6               	movwf	??_LCDByte
  2744  03AF  0876               	movf	??_LCDByte,w
  2745  03B0  00FB               	movwf	LCDByte@temp
  2746                           
  2747                           ;lcd_hd44780_pic16.c: 108: PORTC=temp;
  2748  03B1  087B               	movf	LCDByte@temp,w
  2749  03B2  0087               	movwf	7	;volatile
  2750                           
  2751                           ;lcd_hd44780_pic16.c: 114: (RC6=0);
  2752                           
  2753                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2754  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2755  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2756  03B5  1307               	bcf	7,6	;volatile
  2757                           
  2758                           ;lcd_hd44780_pic16.c: 119: (RC6=1);
  2759                           
  2760                           ;lcd_hd44780_pic16.c: 116: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2761  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2762  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2763  03B8  1707               	bsf	7,6	;volatile
  2764                           
  2765                           ;lcd_hd44780_pic16.c: 121: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  2766  03B9  0807               	movf	7,w	;volatile
  2767  03BA  39F0               	andlw	240
  2768  03BB  0479               	iorwf	LCDByte@ln,w
  2769  03BC  00F6               	movwf	??_LCDByte
  2770  03BD  0876               	movf	??_LCDByte,w
  2771  03BE  00FB               	movwf	LCDByte@temp
  2772                           
  2773                           ;lcd_hd44780_pic16.c: 123: PORTC=temp;
  2774  03BF  087B               	movf	LCDByte@temp,w
  2775  03C0  0087               	movwf	7	;volatile
  2776                           
  2777                           ;lcd_hd44780_pic16.c: 129: (RC6=0);
  2778                           
  2779                           ;lcd_hd44780_pic16.c: 125: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2780  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2781  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2782  03C3  1307               	bcf	7,6	;volatile
  2783                           
  2784                           ;lcd_hd44780_pic16.c: 133: LCDBusyLoop();
  2785                           
  2786                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2787  03C4  2410               	fcall	_LCDBusyLoop
  2788  03C5  0008               	return
  2789  03C6                     __end_of_LCDByte:	
  2790                           
  2791                           	psect	text8
  2792  0410                     __ptext8:	
  2793 ;; *************** function _LCDBusyLoop *****************
  2794 ;; Defined at:
  2795 ;;		line 136 in file "lcd_hd44780_pic16.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  status          1    4[COMMON] unsigned char 
  2800 ;;  temp            1    3[COMMON] unsigned char 
  2801 ;;  busy            1    2[COMMON] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1
  2811 ;;      Params:         0       0       0
  2812 ;;      Locals:         3       0       0
  2813 ;;      Temps:          2       0       0
  2814 ;;      Totals:         5       0       0
  2815 ;;Total ram usage:        5 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_LCDByte
  2821 ;;		_LCDInit
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _LCDBusyLoop
  2827  0410                     _LCDBusyLoop:	
  2828                           
  2829                           ;lcd_hd44780_pic16.c: 140: uint8_t busy,status=0x00,temp;
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2833  0410  01F4               	clrf	LCDBusyLoop@status
  2834                           
  2835                           ;lcd_hd44780_pic16.c: 143: TRISC|=(0x0f<<0);
  2836  0411  300F               	movlw	15
  2837  0412  00F0               	movwf	??_LCDBusyLoop
  2838  0413  0870               	movf	??_LCDBusyLoop,w
  2839  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2840  0415  1303               	bcf	3,6	;RP1=0, select bank1
  2841  0416  0487               	iorwf	7,f	;volatile
  2842                           
  2843                           ;lcd_hd44780_pic16.c: 146: (RC5=1);
  2844  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0419  1687               	bsf	7,5	;volatile
  2847                           
  2848                           ;lcd_hd44780_pic16.c: 147: (RC4=0);
  2849  041A  1207               	bcf	7,4	;volatile
  2850  041B                     l1338:	
  2851                           ;lcd_hd44780_pic16.c: 155: do
  2852                           
  2853                           ;lcd_hd44780_pic16.c: 151: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2854                           
  2855                           
  2856                           ;lcd_hd44780_pic16.c: 156: {
  2857                           ;lcd_hd44780_pic16.c: 158: (RC6=1);
  2858  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2859  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2860  041D  1707               	bsf	7,6	;volatile
  2861                           
  2862                           ;lcd_hd44780_pic16.c: 165: status=(PORTC>>0);
  2863                           
  2864                           ;lcd_hd44780_pic16.c: 161: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2865  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2866  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0420  0807               	movf	7,w	;volatile
  2868  0421  00F0               	movwf	??_LCDBusyLoop
  2869  0422  0870               	movf	??_LCDBusyLoop,w
  2870  0423  00F4               	movwf	LCDBusyLoop@status
  2871                           
  2872                           ;lcd_hd44780_pic16.c: 166: status=status<<4;
  2873  0424  0874               	movf	LCDBusyLoop@status,w
  2874  0425  00F0               	movwf	??_LCDBusyLoop
  2875  0426  3003               	movlw	3
  2876  0427                     u925:	
  2877  0427  1003               	clrc
  2878  0428  0DF0               	rlf	??_LCDBusyLoop,f
  2879  0429  3EFF               	addlw	-1
  2880  042A  1D03               	skipz
  2881  042B  2C27               	goto	u925
  2882  042C  1003               	clrc
  2883  042D  0D70               	rlf	??_LCDBusyLoop,w
  2884  042E  00F1               	movwf	??_LCDBusyLoop+1
  2885  042F  0871               	movf	??_LCDBusyLoop+1,w
  2886  0430  00F4               	movwf	LCDBusyLoop@status
  2887                           
  2888                           ;lcd_hd44780_pic16.c: 172: (RC6=0);
  2889                           
  2890                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2891  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0433  1307               	bcf	7,6	;volatile
  2894                           
  2895                           ;lcd_hd44780_pic16.c: 175: (RC6=1);
  2896                           
  2897                           ;lcd_hd44780_pic16.c: 173: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2898  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0436  1707               	bsf	7,6	;volatile
  2901                           
  2902                           ;lcd_hd44780_pic16.c: 179: temp=(PORTC>>0);
  2903                           
  2904                           ;lcd_hd44780_pic16.c: 176: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2905  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0439  0807               	movf	7,w	;volatile
  2908  043A  00F0               	movwf	??_LCDBusyLoop
  2909  043B  0870               	movf	??_LCDBusyLoop,w
  2910  043C  00F3               	movwf	LCDBusyLoop@temp
  2911                           
  2912                           ;lcd_hd44780_pic16.c: 180: temp&=0x0F;
  2913  043D  300F               	movlw	15
  2914  043E  00F0               	movwf	??_LCDBusyLoop
  2915  043F  0870               	movf	??_LCDBusyLoop,w
  2916  0440  05F3               	andwf	LCDBusyLoop@temp,f
  2917                           
  2918                           ;lcd_hd44780_pic16.c: 182: status=status|temp;
  2919  0441  0874               	movf	LCDBusyLoop@status,w
  2920  0442  0473               	iorwf	LCDBusyLoop@temp,w
  2921  0443  00F0               	movwf	??_LCDBusyLoop
  2922  0444  0870               	movf	??_LCDBusyLoop,w
  2923  0445  00F4               	movwf	LCDBusyLoop@status
  2924                           
  2925                           ;lcd_hd44780_pic16.c: 184: busy=status & 0b10000000;
  2926  0446  0874               	movf	LCDBusyLoop@status,w
  2927  0447  3980               	andlw	128
  2928  0448  00F0               	movwf	??_LCDBusyLoop
  2929  0449  0870               	movf	??_LCDBusyLoop,w
  2930  044A  00F2               	movwf	LCDBusyLoop@busy
  2931                           
  2932                           ;lcd_hd44780_pic16.c: 189: (RC6=0);
  2933                           
  2934                           ;lcd_hd44780_pic16.c: 186: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2935  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2936  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2937  044D  1307               	bcf	7,6	;volatile
  2938                           
  2939                           ;lcd_hd44780_pic16.c: 191: }while(busy);
  2940                           
  2941                           ;lcd_hd44780_pic16.c: 190: _delay((unsigned long)((1)*(2000000L/4000000.0)));
  2942  044E  08F2               	movf	LCDBusyLoop@busy,f
  2943  044F  1D03               	skipz
  2944  0450  2C1B               	goto	l1338
  2945                           
  2946                           ;lcd_hd44780_pic16.c: 193: (RC5=0);
  2947  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0453  1287               	bcf	7,5	;volatile
  2950                           
  2951                           ;lcd_hd44780_pic16.c: 196: TRISC&=(~(0x0F<<0));
  2952  0454  30F0               	movlw	240
  2953  0455  00F0               	movwf	??_LCDBusyLoop
  2954  0456  0870               	movf	??_LCDBusyLoop,w
  2955  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0459  0587               	andwf	7,f	;volatile
  2958  045A  0008               	return
  2959  045B                     __end_of_LCDBusyLoop:	
  2960                           
  2961                           	psect	text9
  2962  032D                     __ptext9:	
  2963 ;; *************** function _Init *****************
  2964 ;; Defined at:
  2965 ;;		line 23 in file "user.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, status,2
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1
  2979 ;;      Params:         0       0       0
  2980 ;;      Locals:         0       0       0
  2981 ;;      Temps:          0       0       0
  2982 ;;      Totals:         0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _Init
  2994  032D                     _Init:	
  2995                           
  2996                           ;user.c: 26: TRISA = 0b00011011;
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _Init: [wreg+status,2]
  3000  032D  301B               	movlw	27
  3001  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3002  032F  1303               	bcf	3,6	;RP1=0, select bank1
  3003  0330  0085               	movwf	5	;volatile
  3004                           
  3005                           ;user.c: 27: ANSELA = 0b00010000;
  3006  0331  3010               	movlw	16
  3007  0332  1683               	bsf	3,5	;RP0=1, select bank3
  3008  0333  1703               	bsf	3,6	;RP1=1, select bank3
  3009  0334  0085               	movwf	5	;volatile
  3010                           
  3011                           ;user.c: 28: PORTA = 0xff;
  3012  0335  30FF               	movlw	255
  3013  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0338  0085               	movwf	5	;volatile
  3016                           
  3017                           ;user.c: 30: TRISB = 0b00110000;
  3018  0339  3030               	movlw	48
  3019  033A  1683               	bsf	3,5	;RP0=1, select bank1
  3020  033B  1303               	bcf	3,6	;RP1=0, select bank1
  3021  033C  0086               	movwf	6	;volatile
  3022                           
  3023                           ;user.c: 31: ANSELB = 0b00110000;
  3024  033D  3030               	movlw	48
  3025  033E  1683               	bsf	3,5	;RP0=1, select bank3
  3026  033F  1703               	bsf	3,6	;RP1=1, select bank3
  3027  0340  0086               	movwf	6	;volatile
  3028                           
  3029                           ;user.c: 32: PORTB = 0xff;
  3030  0341  30FF               	movlw	255
  3031  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0344  0086               	movwf	6	;volatile
  3034                           
  3035                           ;user.c: 34: TRISC = 0x00;
  3036  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0347  0187               	clrf	7	;volatile
  3039                           
  3040                           ;user.c: 35: ANSELC = 0x00;
  3041  0348  1683               	bsf	3,5	;RP0=1, select bank3
  3042  0349  1703               	bsf	3,6	;RP1=1, select bank3
  3043  034A  0187               	clrf	7	;volatile
  3044                           
  3045                           ;user.c: 36: PORTC = 0xff;
  3046  034B  30FF               	movlw	255
  3047  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3048  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3049  034E  0087               	movwf	7	;volatile
  3050                           
  3051                           ;user.c: 39: FVRCON = 0xf3;
  3052  034F  30F3               	movlw	243
  3053  0350  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0351  1303               	bcf	3,6	;RP1=0, select bank1
  3055  0352  009D               	movwf	29	;volatile
  3056  0353  0008               	return
  3057  0354                     __end_of_Init:	
  3058                           
  3059                           	psect	text10
  3060  02DF                     __ptext10:	
  3061 ;; *************** function _ConfigureOscillator *****************
  3062 ;; Defined at:
  3063 ;;		line 19 in file "system.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		status,2
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1
  3077 ;;      Params:         0       0       0
  3078 ;;      Locals:         0       0       0
  3079 ;;      Temps:          0       0       0
  3080 ;;      Totals:         0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           
  3091                           ;psect for function _ConfigureOscillator
  3092  02DF                     _ConfigureOscillator:	
  3093                           
  3094                           ;system.c: 21: IRCF1 = 0;
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in _ConfigureOscillator: [status,2]
  3098  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  3099  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  3100  02E1  1290               	bcf	16,5	;volatile
  3101                           
  3102                           ;system.c: 22: IRCF0 = 0;
  3103  02E2  1210               	bcf	16,4	;volatile
  3104                           
  3105                           ;system.c: 23: OSCTUNE = 0x00;
  3106  02E3  0191               	clrf	17	;volatile
  3107                           
  3108                           ;system.c: 25: TMR0 = 0;
  3109  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3111  02E6  0181               	clrf	1	;volatile
  3112                           
  3113                           ;system.c: 26: T0CS = 0;
  3114  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  3115  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  3116  02E9  1281               	bcf	1,5	;volatile
  3117                           
  3118                           ;system.c: 27: T0SE = 0;
  3119  02EA  1201               	bcf	1,4	;volatile
  3120                           
  3121                           ;system.c: 28: PSA = 0;
  3122  02EB  1181               	bcf	1,3	;volatile
  3123                           
  3124                           ;system.c: 29: PS0 = 1;
  3125  02EC  1401               	bsf	1,0	;volatile
  3126                           
  3127                           ;system.c: 30: PS1 = 1;
  3128  02ED  1481               	bsf	1,1	;volatile
  3129                           
  3130                           ;system.c: 31: PS2 = 1;
  3131  02EE  1501               	bsf	1,2	;volatile
  3132  02EF  0008               	return
  3133  02F0                     __end_of_ConfigureOscillator:	
  3134                           
  3135                           	psect	text11
  3136  02F0                     __ptext11:	
  3137 ;; *************** function _ADCRead *****************
  3138 ;; Defined at:
  3139 ;;		line 49 in file "user.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  ch              1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  ch              1    1[COMMON] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      unsigned char 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1
  3153 ;;      Params:         0       0       0
  3154 ;;      Locals:         1       0       0
  3155 ;;      Temps:          1       0       0
  3156 ;;      Totals:         2       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;;		_WaterCheck
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _ADCRead
  3169  02F0                     _ADCRead:	
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  3173                           ;ADCRead@ch stored from wreg
  3174  02F0  00F1               	movwf	ADCRead@ch
  3175                           
  3176                           ;user.c: 52: ADCON0=0x00;
  3177  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3178  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3179  02F3  019F               	clrf	31	;volatile
  3180                           
  3181                           ;user.c: 53: ADCON0=(ch<<2);
  3182  02F4  0871               	movf	ADCRead@ch,w
  3183  02F5  00F0               	movwf	??_ADCRead
  3184  02F6  3001               	movlw	1
  3185  02F7                     u1285:	
  3186  02F7  1003               	clrc
  3187  02F8  0DF0               	rlf	??_ADCRead,f
  3188  02F9  3EFF               	addlw	-1
  3189  02FA  1D03               	skipz
  3190  02FB  2AF7               	goto	u1285
  3191  02FC  1003               	clrc
  3192  02FD  0D70               	rlf	??_ADCRead,w
  3193  02FE  009F               	movwf	31	;volatile
  3194                           
  3195                           ;user.c: 54: ADON=1;
  3196  02FF  141F               	bsf	31,0	;volatile
  3197                           
  3198                           ;user.c: 55: _delay((unsigned long)((200)*(2000000L/4000000.0)));
  3199  0300  3021               	movlw	33
  3200  0301  00F0               	movwf	??_ADCRead
  3201  0302                     u1927:	
  3202  0302  0BF0               	decfsz	??_ADCRead,f
  3203  0303  2B02               	goto	u1927
  3204                           
  3205                           ;user.c: 56: GO_nDONE=1;
  3206  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0306  149F               	bsf	31,1	;volatile
  3209  0307                     l133:	
  3210                           ;user.c: 57: while(GO_nDONE);
  3211                           
  3212  0307  189F               	btfsc	31,1	;volatile
  3213  0308  2B07               	goto	l133
  3214                           
  3215                           ;user.c: 58: ADON=0;
  3216  0309  101F               	bcf	31,0	;volatile
  3217                           
  3218                           ;user.c: 59: return ADRES;
  3219  030A  081E               	movf	30,w	;volatile
  3220  030B  0008               	return
  3221  030C                     __end_of_ADCRead:	
  3222  007E                     btemp	set	126	;btemp
  3223  007E                     wtemp	set	126
  3224  007E                     wtemp0	set	126
  3225  0080                     wtemp1	set	128
  3226  0082                     wtemp2	set	130
  3227  0084                     wtemp3	set	132
  3228  0086                     wtemp4	set	134
  3229  0088                     wtemp5	set	136
  3230  007F                     wtemp6	set	127
  3231  007E                     ttemp	set	126
  3232  007E                     ttemp0	set	126
  3233  0081                     ttemp1	set	129
  3234  0084                     ttemp2	set	132
  3235  0087                     ttemp3	set	135
  3236  007F                     ttemp4	set	127
  3237  007E                     ltemp	set	126
  3238  007E                     ltemp0	set	126
  3239  0082                     ltemp1	set	130
  3240  0086                     ltemp2	set	134
  3241  0080                     ltemp3	set	128


Data Sizes:
    Strings     143
    Constant    0
    Data        10
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      38
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_21(CODE[2]), STR_20(CODE[9]), STR_19(CODE[9]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[9]), 
		 -> STR_9(CODE[19]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[16]), 
		 -> STR_5(CODE[18]), STR_4(CODE[12]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   12223
                                             12 BANK0      7     7      0
                            _ADCRead
                _ConfigureOscillator
                               _Init
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1869
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    4417
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _ADCRead (ARG)
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1330
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    3366
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1123
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCRead                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _ConfigureOscillator
   _Init
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDByte (ARG)
       _LCDBusyLoop
     ___awdiv (ARG)
     ___awmod (ARG)
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34       8        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 16 21:54:33 2015

                ?_LCDBusyLoop 0070                             pc 0002                            l21 03A5  
                          l22 03A8                            l56 0581                            l66 0328  
                          l67 0314                  ___awdiv@sign 0076                            _hh 003B  
                          _hl 003C                            _mh 0042                            _ml 0043  
                          _sh 0044                            _sl 0045                            fsr 0004  
                         l133 0307                           l191 0787                           l199 07DF  
                         _RA2 002A                           _RA5 002D                           _RC4 003C  
                         _RC5 003D                           _RC6 003E                           _RC7 003F  
                         _PS0 0408                           _PS1 0409                           _PS2 040A  
                 main@Toggle2 0032                           _PSA 040B                           u925 0427  
                         u945 0390                           u995 04C8                           fsr0 0004  
             __end_of_ADCRead 030C                           indf 0000                  ___awmod@sign 0076  
                        S2050 0096       LCDWriteInt@field_length 0022               __end_of_LCDByte 03C6  
             __end_of_LCDInit 0410                  ?_LCDWriteInt 0020                   LCDByte@temp 007B  
                        l1412 04B2                          l1430 04D3                          l1440 04F4  
                        l1338 041B                          l1610 031D                          l1418 04BD  
                        l1604 0316                          l1444 04FC                          l1436 04E9  
                        l1428 04C5                          l1460 046C                          l1606 0318  
                        l1470 0480                          l1550 0379                          l1456 0465  
                        l1720 066C                          l1482 04A1                          l1474 048E  
                        l1554 037D                          l1810 0769                          l1730 067E  
                        l1468 0472                          l1580 055C                          l1478 0499  
                        l1558 0357                          l1742 06A0                          l1670 05C4  
                        l1584 0561                          l1816 077B                          l1760 06C6  
                        l1736 068E                          l1586 0567                          l1578 0529  
                        l1850 07BD                          l1770 06D8                          l1818 077E  
                        l1588 056F                          l1844 07B4                          l1862 07CF  
                        l1856 07C6                          l1868 07D9                          _ADON 00F8  
                        STR_1 0007                          STR_2 008E                          STR_3 008E  
                        STR_4 005F                          STR_5 002F                          STR_6 0041  
                        STR_7 0051                          STR_8 0086                          STR_9 001C  
                        _T0CS 040D                          u1015 04D4                          u1025 04E0  
                        u1035 04EA                          u1115 0486                          u1125 048F  
                        _T0SE 040C                          u1095 0475                          u1255 0590  
                        u1285 02F7                          u1907 0754                          u1917 03CD  
                        u1837 05B0                          u1927 0302                          u1847 06EE  
                        u1857 06FF                          u1867 0710                          u1877 0721  
                        u1887 0732                          u1897 0743                          _TMR0 0001  
                        _Init 032D                          _main 05A6            __size_of_LCDGotoXY 0021  
                        btemp 007E                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 0000                          ttemp 007E                          wtemp 007E  
                       ?_Init 0070                         ?_main 0070               __end_of___awdiv 0503  
                       _ADRES 001E                         STR_10 006B                         STR_11 0090  
                       STR_12 0092                         STR_20 007D                         STR_13 0094  
                       STR_14 0069                         STR_15 001A                         STR_16 008C  
                       STR_17 0072                 __CFG_WDTE$OFF 0000                         STR_18 0072  
                       STR_19 0074               __end_of___awmod 04A8                  LCDInit@style 0020  
             ___awdiv@divisor 0070                         _IRCF0 0484                         _IRCF1 0485  
             ___awdiv@counter 0075                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087           _ConfigureOscillator 02DF                 __CFG_PWRTE$ON 0000  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
        ?_ConfigureOscillator 0070               __initialization 07E1                  __end_of_Init 0354  
                __end_of_main 07E1                     ??_ADCRead 0070                        ??_Init 0070  
                      ??_main 002C             __end_of_LCDGotoXY 032D                 LCDByte@isdata 0075  
                   ??_LCDByte 0076                     ??_LCDInit 007C                     ADCRead@ch 0071  
                      _ADCON0 001F                        _ADCON1 009F              ___awdiv@dividend 0072  
                      _ANSELA 0185                        _ANSELB 0186                        _ANSELC 0187  
                      _FVRCON 009D                        _TMR0IF 005A         ??_ConfigureOscillator 0070  
              _LCDWriteString 0354                     ??___awdiv 0074                     ??___awmod 0074  
        __size_of_LCDBusyLoop 004B              ___awdiv@quotient 0077               ___awmod@divisor 0070  
             ___awmod@counter 0075                  LCDWriteInt@i 002A                  LCDWriteInt@j 0028  
        __size_of_LCDWriteInt 00A3       __end_of__initialization 07FE        __end_of_LCDWriteString 038C  
                   LCDByte@hn 0078                     LCDByte@ln 0079                __pcstackCOMMON 0070  
                __pidataBANK0 02D5                    __pbssBANK0 003D               ?_LCDWriteString 0070  
                  __pmaintext 05A6                       _ADCRead 02F0                       _LCDByte 038C  
                     _LCDInit 03C6                       _OSCTUNE 0091                    __stringtab 0001  
                     ___cgram 0033                       ___awdiv 04A8                       ___awmod 045B  
                     __ptext1 0354                       __ptext2 0503                       __ptext3 045B  
                     __ptext4 04A8                       __ptext5 03C6                       __ptext6 030C  
                     __ptext7 038C                       __ptext8 0410                       __ptext9 032D  
            ___awmod@dividend 0072                     _LCDGotoXY 030C          end_of_initialization 07FE  
           LCDWriteString@msg 0021                     _TRISCbits 0087                    ?_LCDGotoXY 007C  
 __end_of_ConfigureOscillator 02F0                    main@Toggle 0031                    LCDInit@__i 0021  
                  LCDGotoXY@x 0020                    LCDGotoXY@y 007C                 ??_LCDBusyLoop 0070  
         start_initialization 07E1                 ??_LCDWriteInt 007C              ??_LCDWriteString 007C  
                 __pdataBANK0 0033                      ?_ADCRead 0070           __end_of_LCDBusyLoop 045B  
                    ?_LCDByte 0075                      ?_LCDInit 0070                      LCDByte@c 007A  
                   ___latbits 0000                 __pcstackBANK0 0020                   ??_LCDGotoXY 007D  
         __end_of__stringdata 0096              LCDWriteInt@F1067 003D           __end_of_LCDWriteInt 05A6  
                    ?___awdiv 0070                      ?___awmod 0070                     __pstrings 0001  
                   __pswtext1 0096               LCDBusyLoop@busy 0072               LCDBusyLoop@temp 0073  
                    _GO_nDONE 00F9                   _LCDBusyLoop 0410              LCDWriteString@cc 0020  
            __size_of_ADCRead 001C                   __stringbase 0006                   __stringdata 0007  
            __size_of_LCDByte 003A              __size_of_LCDInit 004A                   _LCDWriteInt 0503  
            __size_of___awdiv 005B              __size_of___awmod 004D             LCDBusyLoop@status 0074  
          __end_of__stringtab 0007                      __ptext10 02DF                      __ptext11 02F0  
               __size_of_Init 0027                 __size_of_main 023B  __size_of_ConfigureOscillator 0011  
                    main@bres 002F                LCDWriteInt@val 0020                LCDWriteInt@str 0023  
                   stringcode 0001                      stringdir 0001                      stringtab 0001  
          __CFG_FOSC$INTOSCIO 0000       __size_of_LCDWriteString 0038  
