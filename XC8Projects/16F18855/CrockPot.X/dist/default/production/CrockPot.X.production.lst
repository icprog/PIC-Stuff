

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Oct 20 23:03:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x620,48
    60                           	dabs	1,0x5BC,52
    61                           	dabs	1,0x238C,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 1.41
    65                           ; Generated 25/01/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F18855 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  001C                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0110                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0218                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0296                     	;# 
   252  0297                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  029B                     	;# 
   259  029C                     	;# 
   260  029C                     	;# 
   261  029D                     	;# 
   262  030C                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  030F                     	;# 
   267  0310                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031B                     	;# 
   282  031C                     	;# 
   283  031C                     	;# 
   284  031D                     	;# 
   285  031E                     	;# 
   286  031F                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0390                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  040C                     	;# 
   294  040D                     	;# 
   295  040E                     	;# 
   296  040F                     	;# 
   297  0410                     	;# 
   298  0411                     	;# 
   299  0416                     	;# 
   300  0416                     	;# 
   301  0417                     	;# 
   302  0418                     	;# 
   303  0418                     	;# 
   304  0419                     	;# 
   305  041A                     	;# 
   306  041A                     	;# 
   307  041B                     	;# 
   308  041C                     	;# 
   309  041C                     	;# 
   310  041D                     	;# 
   311  041E                     	;# 
   312  041F                     	;# 
   313  048C                     	;# 
   314  048C                     	;# 
   315  048D                     	;# 
   316  048E                     	;# 
   317  048F                     	;# 
   318  048F                     	;# 
   319  0490                     	;# 
   320  0491                     	;# 
   321  0492                     	;# 
   322  0492                     	;# 
   323  0493                     	;# 
   324  0494                     	;# 
   325  0495                     	;# 
   326  0495                     	;# 
   327  0496                     	;# 
   328  0497                     	;# 
   329  0498                     	;# 
   330  0499                     	;# 
   331  049A                     	;# 
   332  049B                     	;# 
   333  049C                     	;# 
   334  049D                     	;# 
   335  050C                     	;# 
   336  050C                     	;# 
   337  050D                     	;# 
   338  050E                     	;# 
   339  050F                     	;# 
   340  050F                     	;# 
   341  0510                     	;# 
   342  0511                     	;# 
   343  0512                     	;# 
   344  0512                     	;# 
   345  0513                     	;# 
   346  0514                     	;# 
   347  0515                     	;# 
   348  0515                     	;# 
   349  0516                     	;# 
   350  0517                     	;# 
   351  0518                     	;# 
   352  0519                     	;# 
   353  051A                     	;# 
   354  051B                     	;# 
   355  051C                     	;# 
   356  051D                     	;# 
   357  058C                     	;# 
   358  058C                     	;# 
   359  058D                     	;# 
   360  058E                     	;# 
   361  058F                     	;# 
   362  058F                     	;# 
   363  0590                     	;# 
   364  0591                     	;# 
   365  0592                     	;# 
   366  0593                     	;# 
   367  060C                     	;# 
   368  060D                     	;# 
   369  060E                     	;# 
   370  060F                     	;# 
   371  0610                     	;# 
   372  0611                     	;# 
   373  0612                     	;# 
   374  0613                     	;# 
   375  0614                     	;# 
   376  0616                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  061A                     	;# 
   381  061B                     	;# 
   382  061C                     	;# 
   383  061D                     	;# 
   384  061E                     	;# 
   385  068C                     	;# 
   386  068D                     	;# 
   387  068E                     	;# 
   388  068F                     	;# 
   389  0690                     	;# 
   390  0691                     	;# 
   391  0692                     	;# 
   392  0693                     	;# 
   393  0694                     	;# 
   394  070C                     	;# 
   395  070D                     	;# 
   396  070E                     	;# 
   397  070F                     	;# 
   398  0710                     	;# 
   399  0711                     	;# 
   400  0712                     	;# 
   401  0713                     	;# 
   402  0714                     	;# 
   403  0716                     	;# 
   404  0717                     	;# 
   405  0718                     	;# 
   406  0719                     	;# 
   407  071A                     	;# 
   408  071B                     	;# 
   409  071C                     	;# 
   410  071D                     	;# 
   411  071E                     	;# 
   412  0796                     	;# 
   413  0797                     	;# 
   414  0798                     	;# 
   415  0799                     	;# 
   416  079A                     	;# 
   417  079B                     	;# 
   418  080C                     	;# 
   419  080D                     	;# 
   420  080E                     	;# 
   421  080F                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  088C                     	;# 
   434  088D                     	;# 
   435  088E                     	;# 
   436  088F                     	;# 
   437  0890                     	;# 
   438  0891                     	;# 
   439  0892                     	;# 
   440  0893                     	;# 
   441  0895                     	;# 
   442  0896                     	;# 
   443  0897                     	;# 
   444  0898                     	;# 
   445  0899                     	;# 
   446  089A                     	;# 
   447  089B                     	;# 
   448  090C                     	;# 
   449  090E                     	;# 
   450  090F                     	;# 
   451  091F                     	;# 
   452  091F                     	;# 
   453  098F                     	;# 
   454  098F                     	;# 
   455  0990                     	;# 
   456  0991                     	;# 
   457  0992                     	;# 
   458  0993                     	;# 
   459  0994                     	;# 
   460  0995                     	;# 
   461  0996                     	;# 
   462  0997                     	;# 
   463  0E0F                     	;# 
   464  0E10                     	;# 
   465  0E11                     	;# 
   466  0E12                     	;# 
   467  0E13                     	;# 
   468  0E14                     	;# 
   469  0E15                     	;# 
   470  0E16                     	;# 
   471  0E17                     	;# 
   472  0E18                     	;# 
   473  0E19                     	;# 
   474  0E1A                     	;# 
   475  0E1B                     	;# 
   476  0E1C                     	;# 
   477  0E1D                     	;# 
   478  0E1E                     	;# 
   479  0E1F                     	;# 
   480  0E20                     	;# 
   481  0E21                     	;# 
   482  0E22                     	;# 
   483  0E23                     	;# 
   484  0E24                     	;# 
   485  0E25                     	;# 
   486  0E26                     	;# 
   487  0E27                     	;# 
   488  0E28                     	;# 
   489  0E29                     	;# 
   490  0E2A                     	;# 
   491  0E2B                     	;# 
   492  0E2C                     	;# 
   493  0E2D                     	;# 
   494  0E2E                     	;# 
   495  0E2F                     	;# 
   496  0E30                     	;# 
   497  0E31                     	;# 
   498  0E32                     	;# 
   499  0E33                     	;# 
   500  0E34                     	;# 
   501  0E35                     	;# 
   502  0E36                     	;# 
   503  0E37                     	;# 
   504  0E8F                     	;# 
   505  0E90                     	;# 
   506  0E91                     	;# 
   507  0E92                     	;# 
   508  0E93                     	;# 
   509  0E94                     	;# 
   510  0E95                     	;# 
   511  0E96                     	;# 
   512  0E97                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0EA1                     	;# 
   517  0EA2                     	;# 
   518  0EA3                     	;# 
   519  0EA4                     	;# 
   520  0EA5                     	;# 
   521  0EA9                     	;# 
   522  0EAA                     	;# 
   523  0EAB                     	;# 
   524  0EAC                     	;# 
   525  0EB1                     	;# 
   526  0EB2                     	;# 
   527  0EB3                     	;# 
   528  0EB8                     	;# 
   529  0EB9                     	;# 
   530  0EBA                     	;# 
   531  0EBB                     	;# 
   532  0EBC                     	;# 
   533  0EBD                     	;# 
   534  0EBE                     	;# 
   535  0EC3                     	;# 
   536  0EC5                     	;# 
   537  0EC6                     	;# 
   538  0EC7                     	;# 
   539  0EC8                     	;# 
   540  0EC9                     	;# 
   541  0ECA                     	;# 
   542  0ECB                     	;# 
   543  0ECC                     	;# 
   544  0F10                     	;# 
   545  0F11                     	;# 
   546  0F12                     	;# 
   547  0F13                     	;# 
   548  0F14                     	;# 
   549  0F15                     	;# 
   550  0F16                     	;# 
   551  0F17                     	;# 
   552  0F18                     	;# 
   553  0F19                     	;# 
   554  0F1A                     	;# 
   555  0F1B                     	;# 
   556  0F1C                     	;# 
   557  0F1D                     	;# 
   558  0F1E                     	;# 
   559  0F1F                     	;# 
   560  0F20                     	;# 
   561  0F21                     	;# 
   562  0F22                     	;# 
   563  0F23                     	;# 
   564  0F24                     	;# 
   565  0F25                     	;# 
   566  0F26                     	;# 
   567  0F27                     	;# 
   568  0F38                     	;# 
   569  0F39                     	;# 
   570  0F3A                     	;# 
   571  0F3B                     	;# 
   572  0F3C                     	;# 
   573  0F3D                     	;# 
   574  0F3E                     	;# 
   575  0F3F                     	;# 
   576  0F40                     	;# 
   577  0F41                     	;# 
   578  0F43                     	;# 
   579  0F44                     	;# 
   580  0F45                     	;# 
   581  0F46                     	;# 
   582  0F47                     	;# 
   583  0F48                     	;# 
   584  0F49                     	;# 
   585  0F4A                     	;# 
   586  0F4B                     	;# 
   587  0F4C                     	;# 
   588  0F4E                     	;# 
   589  0F4F                     	;# 
   590  0F50                     	;# 
   591  0F51                     	;# 
   592  0F52                     	;# 
   593  0F53                     	;# 
   594  0F54                     	;# 
   595  0F55                     	;# 
   596  0F56                     	;# 
   597  0F57                     	;# 
   598  0F65                     	;# 
   599  0F68                     	;# 
   600  0F69                     	;# 
   601  0F6A                     	;# 
   602  0F6B                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  001C                     	;# 
   637  001C                     	;# 
   638  001D                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010E                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0110                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0112                     	;# 
   673  0113                     	;# 
   674  0114                     	;# 
   675  0114                     	;# 
   676  0115                     	;# 
   677  0116                     	;# 
   678  0116                     	;# 
   679  0117                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0198                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  020C                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  020E                     	;# 
   723  020F                     	;# 
   724  020F                     	;# 
   725  0210                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0218                     	;# 
   740  0218                     	;# 
   741  0219                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021B                     	;# 
   745  021C                     	;# 
   746  021C                     	;# 
   747  021D                     	;# 
   748  021D                     	;# 
   749  021E                     	;# 
   750  021F                     	;# 
   751  028C                     	;# 
   752  028C                     	;# 
   753  028D                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  028F                     	;# 
   757  0290                     	;# 
   758  0290                     	;# 
   759  0291                     	;# 
   760  0292                     	;# 
   761  0292                     	;# 
   762  0293                     	;# 
   763  0293                     	;# 
   764  0294                     	;# 
   765  0295                     	;# 
   766  0296                     	;# 
   767  0296                     	;# 
   768  0297                     	;# 
   769  0298                     	;# 
   770  0298                     	;# 
   771  0299                     	;# 
   772  0299                     	;# 
   773  029A                     	;# 
   774  029B                     	;# 
   775  029C                     	;# 
   776  029C                     	;# 
   777  029D                     	;# 
   778  030C                     	;# 
   779  030C                     	;# 
   780  030D                     	;# 
   781  030E                     	;# 
   782  030F                     	;# 
   783  0310                     	;# 
   784  0310                     	;# 
   785  0311                     	;# 
   786  0312                     	;# 
   787  0313                     	;# 
   788  0314                     	;# 
   789  0314                     	;# 
   790  0315                     	;# 
   791  0316                     	;# 
   792  0317                     	;# 
   793  0318                     	;# 
   794  0318                     	;# 
   795  0319                     	;# 
   796  031A                     	;# 
   797  031B                     	;# 
   798  031C                     	;# 
   799  031C                     	;# 
   800  031D                     	;# 
   801  031E                     	;# 
   802  031F                     	;# 
   803  038C                     	;# 
   804  038D                     	;# 
   805  038E                     	;# 
   806  0390                     	;# 
   807  0391                     	;# 
   808  0392                     	;# 
   809  040C                     	;# 
   810  040D                     	;# 
   811  040E                     	;# 
   812  040F                     	;# 
   813  0410                     	;# 
   814  0411                     	;# 
   815  0416                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  0418                     	;# 
   819  0418                     	;# 
   820  0419                     	;# 
   821  041A                     	;# 
   822  041A                     	;# 
   823  041B                     	;# 
   824  041C                     	;# 
   825  041C                     	;# 
   826  041D                     	;# 
   827  041E                     	;# 
   828  041F                     	;# 
   829  048C                     	;# 
   830  048C                     	;# 
   831  048D                     	;# 
   832  048E                     	;# 
   833  048F                     	;# 
   834  048F                     	;# 
   835  0490                     	;# 
   836  0491                     	;# 
   837  0492                     	;# 
   838  0492                     	;# 
   839  0493                     	;# 
   840  0494                     	;# 
   841  0495                     	;# 
   842  0495                     	;# 
   843  0496                     	;# 
   844  0497                     	;# 
   845  0498                     	;# 
   846  0499                     	;# 
   847  049A                     	;# 
   848  049B                     	;# 
   849  049C                     	;# 
   850  049D                     	;# 
   851  050C                     	;# 
   852  050C                     	;# 
   853  050D                     	;# 
   854  050E                     	;# 
   855  050F                     	;# 
   856  050F                     	;# 
   857  0510                     	;# 
   858  0511                     	;# 
   859  0512                     	;# 
   860  0512                     	;# 
   861  0513                     	;# 
   862  0514                     	;# 
   863  0515                     	;# 
   864  0515                     	;# 
   865  0516                     	;# 
   866  0517                     	;# 
   867  0518                     	;# 
   868  0519                     	;# 
   869  051A                     	;# 
   870  051B                     	;# 
   871  051C                     	;# 
   872  051D                     	;# 
   873  058C                     	;# 
   874  058C                     	;# 
   875  058D                     	;# 
   876  058E                     	;# 
   877  058F                     	;# 
   878  058F                     	;# 
   879  0590                     	;# 
   880  0591                     	;# 
   881  0592                     	;# 
   882  0593                     	;# 
   883  060C                     	;# 
   884  060D                     	;# 
   885  060E                     	;# 
   886  060F                     	;# 
   887  0610                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0616                     	;# 
   893  0617                     	;# 
   894  0618                     	;# 
   895  0619                     	;# 
   896  061A                     	;# 
   897  061B                     	;# 
   898  061C                     	;# 
   899  061D                     	;# 
   900  061E                     	;# 
   901  068C                     	;# 
   902  068D                     	;# 
   903  068E                     	;# 
   904  068F                     	;# 
   905  0690                     	;# 
   906  0691                     	;# 
   907  0692                     	;# 
   908  0693                     	;# 
   909  0694                     	;# 
   910  070C                     	;# 
   911  070D                     	;# 
   912  070E                     	;# 
   913  070F                     	;# 
   914  0710                     	;# 
   915  0711                     	;# 
   916  0712                     	;# 
   917  0713                     	;# 
   918  0714                     	;# 
   919  0716                     	;# 
   920  0717                     	;# 
   921  0718                     	;# 
   922  0719                     	;# 
   923  071A                     	;# 
   924  071B                     	;# 
   925  071C                     	;# 
   926  071D                     	;# 
   927  071E                     	;# 
   928  0796                     	;# 
   929  0797                     	;# 
   930  0798                     	;# 
   931  0799                     	;# 
   932  079A                     	;# 
   933  079B                     	;# 
   934  080C                     	;# 
   935  080D                     	;# 
   936  080E                     	;# 
   937  080F                     	;# 
   938  0810                     	;# 
   939  0811                     	;# 
   940  0812                     	;# 
   941  0813                     	;# 
   942  0814                     	;# 
   943  081A                     	;# 
   944  081B                     	;# 
   945  081C                     	;# 
   946  081D                     	;# 
   947  081E                     	;# 
   948  081F                     	;# 
   949  088C                     	;# 
   950  088D                     	;# 
   951  088E                     	;# 
   952  088F                     	;# 
   953  0890                     	;# 
   954  0891                     	;# 
   955  0892                     	;# 
   956  0893                     	;# 
   957  0895                     	;# 
   958  0896                     	;# 
   959  0897                     	;# 
   960  0898                     	;# 
   961  0899                     	;# 
   962  089A                     	;# 
   963  089B                     	;# 
   964  090C                     	;# 
   965  090E                     	;# 
   966  090F                     	;# 
   967  091F                     	;# 
   968  091F                     	;# 
   969  098F                     	;# 
   970  098F                     	;# 
   971  0990                     	;# 
   972  0991                     	;# 
   973  0992                     	;# 
   974  0993                     	;# 
   975  0994                     	;# 
   976  0995                     	;# 
   977  0996                     	;# 
   978  0997                     	;# 
   979  0E0F                     	;# 
   980  0E10                     	;# 
   981  0E11                     	;# 
   982  0E12                     	;# 
   983  0E13                     	;# 
   984  0E14                     	;# 
   985  0E15                     	;# 
   986  0E16                     	;# 
   987  0E17                     	;# 
   988  0E18                     	;# 
   989  0E19                     	;# 
   990  0E1A                     	;# 
   991  0E1B                     	;# 
   992  0E1C                     	;# 
   993  0E1D                     	;# 
   994  0E1E                     	;# 
   995  0E1F                     	;# 
   996  0E20                     	;# 
   997  0E21                     	;# 
   998  0E22                     	;# 
   999  0E23                     	;# 
  1000  0E24                     	;# 
  1001  0E25                     	;# 
  1002  0E26                     	;# 
  1003  0E27                     	;# 
  1004  0E28                     	;# 
  1005  0E29                     	;# 
  1006  0E2A                     	;# 
  1007  0E2B                     	;# 
  1008  0E2C                     	;# 
  1009  0E2D                     	;# 
  1010  0E2E                     	;# 
  1011  0E2F                     	;# 
  1012  0E30                     	;# 
  1013  0E31                     	;# 
  1014  0E32                     	;# 
  1015  0E33                     	;# 
  1016  0E34                     	;# 
  1017  0E35                     	;# 
  1018  0E36                     	;# 
  1019  0E37                     	;# 
  1020  0E8F                     	;# 
  1021  0E90                     	;# 
  1022  0E91                     	;# 
  1023  0E92                     	;# 
  1024  0E93                     	;# 
  1025  0E94                     	;# 
  1026  0E95                     	;# 
  1027  0E96                     	;# 
  1028  0E97                     	;# 
  1029  0E9C                     	;# 
  1030  0E9D                     	;# 
  1031  0E9E                     	;# 
  1032  0EA1                     	;# 
  1033  0EA2                     	;# 
  1034  0EA3                     	;# 
  1035  0EA4                     	;# 
  1036  0EA5                     	;# 
  1037  0EA9                     	;# 
  1038  0EAA                     	;# 
  1039  0EAB                     	;# 
  1040  0EAC                     	;# 
  1041  0EB1                     	;# 
  1042  0EB2                     	;# 
  1043  0EB3                     	;# 
  1044  0EB8                     	;# 
  1045  0EB9                     	;# 
  1046  0EBA                     	;# 
  1047  0EBB                     	;# 
  1048  0EBC                     	;# 
  1049  0EBD                     	;# 
  1050  0EBE                     	;# 
  1051  0EC3                     	;# 
  1052  0EC5                     	;# 
  1053  0EC6                     	;# 
  1054  0EC7                     	;# 
  1055  0EC8                     	;# 
  1056  0EC9                     	;# 
  1057  0ECA                     	;# 
  1058  0ECB                     	;# 
  1059  0ECC                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F38                     	;# 
  1085  0F39                     	;# 
  1086  0F3A                     	;# 
  1087  0F3B                     	;# 
  1088  0F3C                     	;# 
  1089  0F3D                     	;# 
  1090  0F3E                     	;# 
  1091  0F3F                     	;# 
  1092  0F40                     	;# 
  1093  0F41                     	;# 
  1094  0F43                     	;# 
  1095  0F44                     	;# 
  1096  0F45                     	;# 
  1097  0F46                     	;# 
  1098  0F47                     	;# 
  1099  0F48                     	;# 
  1100  0F49                     	;# 
  1101  0F4A                     	;# 
  1102  0F4B                     	;# 
  1103  0F4C                     	;# 
  1104  0F4E                     	;# 
  1105  0F4F                     	;# 
  1106  0F50                     	;# 
  1107  0F51                     	;# 
  1108  0F52                     	;# 
  1109  0F53                     	;# 
  1110  0F54                     	;# 
  1111  0F55                     	;# 
  1112  0F56                     	;# 
  1113  0F57                     	;# 
  1114  0F65                     	;# 
  1115  0F68                     	;# 
  1116  0F69                     	;# 
  1117  0F6A                     	;# 
  1118  0F6B                     	;# 
  1119  0FE4                     	;# 
  1120  0FE5                     	;# 
  1121  0FE6                     	;# 
  1122  0FE7                     	;# 
  1123  0FE8                     	;# 
  1124  0FE9                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEF                     	;# 
  1130  0000                     	;# 
  1131  0001                     	;# 
  1132  0002                     	;# 
  1133  0003                     	;# 
  1134  0004                     	;# 
  1135  0005                     	;# 
  1136  0006                     	;# 
  1137  0007                     	;# 
  1138  0008                     	;# 
  1139  0009                     	;# 
  1140  000A                     	;# 
  1141  000B                     	;# 
  1142  000C                     	;# 
  1143  000D                     	;# 
  1144  000E                     	;# 
  1145  0010                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0016                     	;# 
  1150  0017                     	;# 
  1151  0018                     	;# 
  1152  001C                     	;# 
  1153  001C                     	;# 
  1154  001D                     	;# 
  1155  001D                     	;# 
  1156  001E                     	;# 
  1157  001F                     	;# 
  1158  008C                     	;# 
  1159  008C                     	;# 
  1160  008D                     	;# 
  1161  008E                     	;# 
  1162  008E                     	;# 
  1163  008F                     	;# 
  1164  0090                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0093                     	;# 
  1168  0094                     	;# 
  1169  0095                     	;# 
  1170  0096                     	;# 
  1171  0097                     	;# 
  1172  0098                     	;# 
  1173  0099                     	;# 
  1174  009A                     	;# 
  1175  009B                     	;# 
  1176  009C                     	;# 
  1177  009D                     	;# 
  1178  009E                     	;# 
  1179  010C                     	;# 
  1180  010D                     	;# 
  1181  010E                     	;# 
  1182  010E                     	;# 
  1183  010F                     	;# 
  1184  0110                     	;# 
  1185  0110                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0112                     	;# 
  1189  0113                     	;# 
  1190  0114                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0116                     	;# 
  1195  0117                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  0119                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011A                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011C                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011D                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011E                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  018C                     	;# 
  1222  018D                     	;# 
  1223  018E                     	;# 
  1224  018F                     	;# 
  1225  0190                     	;# 
  1226  0191                     	;# 
  1227  0192                     	;# 
  1228  0196                     	;# 
  1229  0197                     	;# 
  1230  0198                     	;# 
  1231  0199                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019C                     	;# 
  1235  020C                     	;# 
  1236  020C                     	;# 
  1237  020D                     	;# 
  1238  020E                     	;# 
  1239  020F                     	;# 
  1240  020F                     	;# 
  1241  0210                     	;# 
  1242  0210                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  0218                     	;# 
  1256  0218                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021B                     	;# 
  1261  021C                     	;# 
  1262  021C                     	;# 
  1263  021D                     	;# 
  1264  021D                     	;# 
  1265  021E                     	;# 
  1266  021F                     	;# 
  1267  028C                     	;# 
  1268  028C                     	;# 
  1269  028D                     	;# 
  1270  028D                     	;# 
  1271  028E                     	;# 
  1272  028F                     	;# 
  1273  0290                     	;# 
  1274  0290                     	;# 
  1275  0291                     	;# 
  1276  0292                     	;# 
  1277  0292                     	;# 
  1278  0293                     	;# 
  1279  0293                     	;# 
  1280  0294                     	;# 
  1281  0295                     	;# 
  1282  0296                     	;# 
  1283  0296                     	;# 
  1284  0297                     	;# 
  1285  0298                     	;# 
  1286  0298                     	;# 
  1287  0299                     	;# 
  1288  0299                     	;# 
  1289  029A                     	;# 
  1290  029B                     	;# 
  1291  029C                     	;# 
  1292  029C                     	;# 
  1293  029D                     	;# 
  1294  030C                     	;# 
  1295  030C                     	;# 
  1296  030D                     	;# 
  1297  030E                     	;# 
  1298  030F                     	;# 
  1299  0310                     	;# 
  1300  0310                     	;# 
  1301  0311                     	;# 
  1302  0312                     	;# 
  1303  0313                     	;# 
  1304  0314                     	;# 
  1305  0314                     	;# 
  1306  0315                     	;# 
  1307  0316                     	;# 
  1308  0317                     	;# 
  1309  0318                     	;# 
  1310  0318                     	;# 
  1311  0319                     	;# 
  1312  031A                     	;# 
  1313  031B                     	;# 
  1314  031C                     	;# 
  1315  031C                     	;# 
  1316  031D                     	;# 
  1317  031E                     	;# 
  1318  031F                     	;# 
  1319  038C                     	;# 
  1320  038D                     	;# 
  1321  038E                     	;# 
  1322  0390                     	;# 
  1323  0391                     	;# 
  1324  0392                     	;# 
  1325  040C                     	;# 
  1326  040D                     	;# 
  1327  040E                     	;# 
  1328  040F                     	;# 
  1329  0410                     	;# 
  1330  0411                     	;# 
  1331  0416                     	;# 
  1332  0416                     	;# 
  1333  0417                     	;# 
  1334  0418                     	;# 
  1335  0418                     	;# 
  1336  0419                     	;# 
  1337  041A                     	;# 
  1338  041A                     	;# 
  1339  041B                     	;# 
  1340  041C                     	;# 
  1341  041C                     	;# 
  1342  041D                     	;# 
  1343  041E                     	;# 
  1344  041F                     	;# 
  1345  048C                     	;# 
  1346  048C                     	;# 
  1347  048D                     	;# 
  1348  048E                     	;# 
  1349  048F                     	;# 
  1350  048F                     	;# 
  1351  0490                     	;# 
  1352  0491                     	;# 
  1353  0492                     	;# 
  1354  0492                     	;# 
  1355  0493                     	;# 
  1356  0494                     	;# 
  1357  0495                     	;# 
  1358  0495                     	;# 
  1359  0496                     	;# 
  1360  0497                     	;# 
  1361  0498                     	;# 
  1362  0499                     	;# 
  1363  049A                     	;# 
  1364  049B                     	;# 
  1365  049C                     	;# 
  1366  049D                     	;# 
  1367  050C                     	;# 
  1368  050C                     	;# 
  1369  050D                     	;# 
  1370  050E                     	;# 
  1371  050F                     	;# 
  1372  050F                     	;# 
  1373  0510                     	;# 
  1374  0511                     	;# 
  1375  0512                     	;# 
  1376  0512                     	;# 
  1377  0513                     	;# 
  1378  0514                     	;# 
  1379  0515                     	;# 
  1380  0515                     	;# 
  1381  0516                     	;# 
  1382  0517                     	;# 
  1383  0518                     	;# 
  1384  0519                     	;# 
  1385  051A                     	;# 
  1386  051B                     	;# 
  1387  051C                     	;# 
  1388  051D                     	;# 
  1389  058C                     	;# 
  1390  058C                     	;# 
  1391  058D                     	;# 
  1392  058E                     	;# 
  1393  058F                     	;# 
  1394  058F                     	;# 
  1395  0590                     	;# 
  1396  0591                     	;# 
  1397  0592                     	;# 
  1398  0593                     	;# 
  1399  060C                     	;# 
  1400  060D                     	;# 
  1401  060E                     	;# 
  1402  060F                     	;# 
  1403  0610                     	;# 
  1404  0611                     	;# 
  1405  0612                     	;# 
  1406  0613                     	;# 
  1407  0614                     	;# 
  1408  0616                     	;# 
  1409  0617                     	;# 
  1410  0618                     	;# 
  1411  0619                     	;# 
  1412  061A                     	;# 
  1413  061B                     	;# 
  1414  061C                     	;# 
  1415  061D                     	;# 
  1416  061E                     	;# 
  1417  068C                     	;# 
  1418  068D                     	;# 
  1419  068E                     	;# 
  1420  068F                     	;# 
  1421  0690                     	;# 
  1422  0691                     	;# 
  1423  0692                     	;# 
  1424  0693                     	;# 
  1425  0694                     	;# 
  1426  070C                     	;# 
  1427  070D                     	;# 
  1428  070E                     	;# 
  1429  070F                     	;# 
  1430  0710                     	;# 
  1431  0711                     	;# 
  1432  0712                     	;# 
  1433  0713                     	;# 
  1434  0714                     	;# 
  1435  0716                     	;# 
  1436  0717                     	;# 
  1437  0718                     	;# 
  1438  0719                     	;# 
  1439  071A                     	;# 
  1440  071B                     	;# 
  1441  071C                     	;# 
  1442  071D                     	;# 
  1443  071E                     	;# 
  1444  0796                     	;# 
  1445  0797                     	;# 
  1446  0798                     	;# 
  1447  0799                     	;# 
  1448  079A                     	;# 
  1449  079B                     	;# 
  1450  080C                     	;# 
  1451  080D                     	;# 
  1452  080E                     	;# 
  1453  080F                     	;# 
  1454  0810                     	;# 
  1455  0811                     	;# 
  1456  0812                     	;# 
  1457  0813                     	;# 
  1458  0814                     	;# 
  1459  081A                     	;# 
  1460  081B                     	;# 
  1461  081C                     	;# 
  1462  081D                     	;# 
  1463  081E                     	;# 
  1464  081F                     	;# 
  1465  088C                     	;# 
  1466  088D                     	;# 
  1467  088E                     	;# 
  1468  088F                     	;# 
  1469  0890                     	;# 
  1470  0891                     	;# 
  1471  0892                     	;# 
  1472  0893                     	;# 
  1473  0895                     	;# 
  1474  0896                     	;# 
  1475  0897                     	;# 
  1476  0898                     	;# 
  1477  0899                     	;# 
  1478  089A                     	;# 
  1479  089B                     	;# 
  1480  090C                     	;# 
  1481  090E                     	;# 
  1482  090F                     	;# 
  1483  091F                     	;# 
  1484  091F                     	;# 
  1485  098F                     	;# 
  1486  098F                     	;# 
  1487  0990                     	;# 
  1488  0991                     	;# 
  1489  0992                     	;# 
  1490  0993                     	;# 
  1491  0994                     	;# 
  1492  0995                     	;# 
  1493  0996                     	;# 
  1494  0997                     	;# 
  1495  0E0F                     	;# 
  1496  0E10                     	;# 
  1497  0E11                     	;# 
  1498  0E12                     	;# 
  1499  0E13                     	;# 
  1500  0E14                     	;# 
  1501  0E15                     	;# 
  1502  0E16                     	;# 
  1503  0E17                     	;# 
  1504  0E18                     	;# 
  1505  0E19                     	;# 
  1506  0E1A                     	;# 
  1507  0E1B                     	;# 
  1508  0E1C                     	;# 
  1509  0E1D                     	;# 
  1510  0E1E                     	;# 
  1511  0E1F                     	;# 
  1512  0E20                     	;# 
  1513  0E21                     	;# 
  1514  0E22                     	;# 
  1515  0E23                     	;# 
  1516  0E24                     	;# 
  1517  0E25                     	;# 
  1518  0E26                     	;# 
  1519  0E27                     	;# 
  1520  0E28                     	;# 
  1521  0E29                     	;# 
  1522  0E2A                     	;# 
  1523  0E2B                     	;# 
  1524  0E2C                     	;# 
  1525  0E2D                     	;# 
  1526  0E2E                     	;# 
  1527  0E2F                     	;# 
  1528  0E30                     	;# 
  1529  0E31                     	;# 
  1530  0E32                     	;# 
  1531  0E33                     	;# 
  1532  0E34                     	;# 
  1533  0E35                     	;# 
  1534  0E36                     	;# 
  1535  0E37                     	;# 
  1536  0E8F                     	;# 
  1537  0E90                     	;# 
  1538  0E91                     	;# 
  1539  0E92                     	;# 
  1540  0E93                     	;# 
  1541  0E94                     	;# 
  1542  0E95                     	;# 
  1543  0E96                     	;# 
  1544  0E97                     	;# 
  1545  0E9C                     	;# 
  1546  0E9D                     	;# 
  1547  0E9E                     	;# 
  1548  0EA1                     	;# 
  1549  0EA2                     	;# 
  1550  0EA3                     	;# 
  1551  0EA4                     	;# 
  1552  0EA5                     	;# 
  1553  0EA9                     	;# 
  1554  0EAA                     	;# 
  1555  0EAB                     	;# 
  1556  0EAC                     	;# 
  1557  0EB1                     	;# 
  1558  0EB2                     	;# 
  1559  0EB3                     	;# 
  1560  0EB8                     	;# 
  1561  0EB9                     	;# 
  1562  0EBA                     	;# 
  1563  0EBB                     	;# 
  1564  0EBC                     	;# 
  1565  0EBD                     	;# 
  1566  0EBE                     	;# 
  1567  0EC3                     	;# 
  1568  0EC5                     	;# 
  1569  0EC6                     	;# 
  1570  0EC7                     	;# 
  1571  0EC8                     	;# 
  1572  0EC9                     	;# 
  1573  0ECA                     	;# 
  1574  0ECB                     	;# 
  1575  0ECC                     	;# 
  1576  0F10                     	;# 
  1577  0F11                     	;# 
  1578  0F12                     	;# 
  1579  0F13                     	;# 
  1580  0F14                     	;# 
  1581  0F15                     	;# 
  1582  0F16                     	;# 
  1583  0F17                     	;# 
  1584  0F18                     	;# 
  1585  0F19                     	;# 
  1586  0F1A                     	;# 
  1587  0F1B                     	;# 
  1588  0F1C                     	;# 
  1589  0F1D                     	;# 
  1590  0F1E                     	;# 
  1591  0F1F                     	;# 
  1592  0F20                     	;# 
  1593  0F21                     	;# 
  1594  0F22                     	;# 
  1595  0F23                     	;# 
  1596  0F24                     	;# 
  1597  0F25                     	;# 
  1598  0F26                     	;# 
  1599  0F27                     	;# 
  1600  0F38                     	;# 
  1601  0F39                     	;# 
  1602  0F3A                     	;# 
  1603  0F3B                     	;# 
  1604  0F3C                     	;# 
  1605  0F3D                     	;# 
  1606  0F3E                     	;# 
  1607  0F3F                     	;# 
  1608  0F40                     	;# 
  1609  0F41                     	;# 
  1610  0F43                     	;# 
  1611  0F44                     	;# 
  1612  0F45                     	;# 
  1613  0F46                     	;# 
  1614  0F47                     	;# 
  1615  0F48                     	;# 
  1616  0F49                     	;# 
  1617  0F4A                     	;# 
  1618  0F4B                     	;# 
  1619  0F4C                     	;# 
  1620  0F4E                     	;# 
  1621  0F4F                     	;# 
  1622  0F50                     	;# 
  1623  0F51                     	;# 
  1624  0F52                     	;# 
  1625  0F53                     	;# 
  1626  0F54                     	;# 
  1627  0F55                     	;# 
  1628  0F56                     	;# 
  1629  0F57                     	;# 
  1630  0F65                     	;# 
  1631  0F68                     	;# 
  1632  0F69                     	;# 
  1633  0F6A                     	;# 
  1634  0F6B                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0013                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  001C                     	;# 
  1669  001C                     	;# 
  1670  001D                     	;# 
  1671  001D                     	;# 
  1672  001E                     	;# 
  1673  001F                     	;# 
  1674  008C                     	;# 
  1675  008C                     	;# 
  1676  008D                     	;# 
  1677  008E                     	;# 
  1678  008E                     	;# 
  1679  008F                     	;# 
  1680  0090                     	;# 
  1681  0090                     	;# 
  1682  0091                     	;# 
  1683  0093                     	;# 
  1684  0094                     	;# 
  1685  0095                     	;# 
  1686  0096                     	;# 
  1687  0097                     	;# 
  1688  0098                     	;# 
  1689  0099                     	;# 
  1690  009A                     	;# 
  1691  009B                     	;# 
  1692  009C                     	;# 
  1693  009D                     	;# 
  1694  009E                     	;# 
  1695  010C                     	;# 
  1696  010D                     	;# 
  1697  010E                     	;# 
  1698  010E                     	;# 
  1699  010F                     	;# 
  1700  0110                     	;# 
  1701  0110                     	;# 
  1702  0111                     	;# 
  1703  0112                     	;# 
  1704  0112                     	;# 
  1705  0113                     	;# 
  1706  0114                     	;# 
  1707  0114                     	;# 
  1708  0115                     	;# 
  1709  0116                     	;# 
  1710  0116                     	;# 
  1711  0117                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  0119                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011A                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011C                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011D                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011E                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  018C                     	;# 
  1738  018D                     	;# 
  1739  018E                     	;# 
  1740  018F                     	;# 
  1741  0190                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0196                     	;# 
  1745  0197                     	;# 
  1746  0198                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019C                     	;# 
  1751  020C                     	;# 
  1752  020C                     	;# 
  1753  020D                     	;# 
  1754  020E                     	;# 
  1755  020F                     	;# 
  1756  020F                     	;# 
  1757  0210                     	;# 
  1758  0210                     	;# 
  1759  0211                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0212                     	;# 
  1763  0213                     	;# 
  1764  0214                     	;# 
  1765  0215                     	;# 
  1766  0215                     	;# 
  1767  0216                     	;# 
  1768  0216                     	;# 
  1769  0217                     	;# 
  1770  0217                     	;# 
  1771  0218                     	;# 
  1772  0218                     	;# 
  1773  0219                     	;# 
  1774  021A                     	;# 
  1775  021B                     	;# 
  1776  021B                     	;# 
  1777  021C                     	;# 
  1778  021C                     	;# 
  1779  021D                     	;# 
  1780  021D                     	;# 
  1781  021E                     	;# 
  1782  021F                     	;# 
  1783  028C                     	;# 
  1784  028C                     	;# 
  1785  028D                     	;# 
  1786  028D                     	;# 
  1787  028E                     	;# 
  1788  028F                     	;# 
  1789  0290                     	;# 
  1790  0290                     	;# 
  1791  0291                     	;# 
  1792  0292                     	;# 
  1793  0292                     	;# 
  1794  0293                     	;# 
  1795  0293                     	;# 
  1796  0294                     	;# 
  1797  0295                     	;# 
  1798  0296                     	;# 
  1799  0296                     	;# 
  1800  0297                     	;# 
  1801  0298                     	;# 
  1802  0298                     	;# 
  1803  0299                     	;# 
  1804  0299                     	;# 
  1805  029A                     	;# 
  1806  029B                     	;# 
  1807  029C                     	;# 
  1808  029C                     	;# 
  1809  029D                     	;# 
  1810  030C                     	;# 
  1811  030C                     	;# 
  1812  030D                     	;# 
  1813  030E                     	;# 
  1814  030F                     	;# 
  1815  0310                     	;# 
  1816  0310                     	;# 
  1817  0311                     	;# 
  1818  0312                     	;# 
  1819  0313                     	;# 
  1820  0314                     	;# 
  1821  0314                     	;# 
  1822  0315                     	;# 
  1823  0316                     	;# 
  1824  0317                     	;# 
  1825  0318                     	;# 
  1826  0318                     	;# 
  1827  0319                     	;# 
  1828  031A                     	;# 
  1829  031B                     	;# 
  1830  031C                     	;# 
  1831  031C                     	;# 
  1832  031D                     	;# 
  1833  031E                     	;# 
  1834  031F                     	;# 
  1835  038C                     	;# 
  1836  038D                     	;# 
  1837  038E                     	;# 
  1838  0390                     	;# 
  1839  0391                     	;# 
  1840  0392                     	;# 
  1841  040C                     	;# 
  1842  040D                     	;# 
  1843  040E                     	;# 
  1844  040F                     	;# 
  1845  0410                     	;# 
  1846  0411                     	;# 
  1847  0416                     	;# 
  1848  0416                     	;# 
  1849  0417                     	;# 
  1850  0418                     	;# 
  1851  0418                     	;# 
  1852  0419                     	;# 
  1853  041A                     	;# 
  1854  041A                     	;# 
  1855  041B                     	;# 
  1856  041C                     	;# 
  1857  041C                     	;# 
  1858  041D                     	;# 
  1859  041E                     	;# 
  1860  041F                     	;# 
  1861  048C                     	;# 
  1862  048C                     	;# 
  1863  048D                     	;# 
  1864  048E                     	;# 
  1865  048F                     	;# 
  1866  048F                     	;# 
  1867  0490                     	;# 
  1868  0491                     	;# 
  1869  0492                     	;# 
  1870  0492                     	;# 
  1871  0493                     	;# 
  1872  0494                     	;# 
  1873  0495                     	;# 
  1874  0495                     	;# 
  1875  0496                     	;# 
  1876  0497                     	;# 
  1877  0498                     	;# 
  1878  0499                     	;# 
  1879  049A                     	;# 
  1880  049B                     	;# 
  1881  049C                     	;# 
  1882  049D                     	;# 
  1883  050C                     	;# 
  1884  050C                     	;# 
  1885  050D                     	;# 
  1886  050E                     	;# 
  1887  050F                     	;# 
  1888  050F                     	;# 
  1889  0510                     	;# 
  1890  0511                     	;# 
  1891  0512                     	;# 
  1892  0512                     	;# 
  1893  0513                     	;# 
  1894  0514                     	;# 
  1895  0515                     	;# 
  1896  0515                     	;# 
  1897  0516                     	;# 
  1898  0517                     	;# 
  1899  0518                     	;# 
  1900  0519                     	;# 
  1901  051A                     	;# 
  1902  051B                     	;# 
  1903  051C                     	;# 
  1904  051D                     	;# 
  1905  058C                     	;# 
  1906  058C                     	;# 
  1907  058D                     	;# 
  1908  058E                     	;# 
  1909  058F                     	;# 
  1910  058F                     	;# 
  1911  0590                     	;# 
  1912  0591                     	;# 
  1913  0592                     	;# 
  1914  0593                     	;# 
  1915  060C                     	;# 
  1916  060D                     	;# 
  1917  060E                     	;# 
  1918  060F                     	;# 
  1919  0610                     	;# 
  1920  0611                     	;# 
  1921  0612                     	;# 
  1922  0613                     	;# 
  1923  0614                     	;# 
  1924  0616                     	;# 
  1925  0617                     	;# 
  1926  0618                     	;# 
  1927  0619                     	;# 
  1928  061A                     	;# 
  1929  061B                     	;# 
  1930  061C                     	;# 
  1931  061D                     	;# 
  1932  061E                     	;# 
  1933  068C                     	;# 
  1934  068D                     	;# 
  1935  068E                     	;# 
  1936  068F                     	;# 
  1937  0690                     	;# 
  1938  0691                     	;# 
  1939  0692                     	;# 
  1940  0693                     	;# 
  1941  0694                     	;# 
  1942  070C                     	;# 
  1943  070D                     	;# 
  1944  070E                     	;# 
  1945  070F                     	;# 
  1946  0710                     	;# 
  1947  0711                     	;# 
  1948  0712                     	;# 
  1949  0713                     	;# 
  1950  0714                     	;# 
  1951  0716                     	;# 
  1952  0717                     	;# 
  1953  0718                     	;# 
  1954  0719                     	;# 
  1955  071A                     	;# 
  1956  071B                     	;# 
  1957  071C                     	;# 
  1958  071D                     	;# 
  1959  071E                     	;# 
  1960  0796                     	;# 
  1961  0797                     	;# 
  1962  0798                     	;# 
  1963  0799                     	;# 
  1964  079A                     	;# 
  1965  079B                     	;# 
  1966  080C                     	;# 
  1967  080D                     	;# 
  1968  080E                     	;# 
  1969  080F                     	;# 
  1970  0810                     	;# 
  1971  0811                     	;# 
  1972  0812                     	;# 
  1973  0813                     	;# 
  1974  0814                     	;# 
  1975  081A                     	;# 
  1976  081B                     	;# 
  1977  081C                     	;# 
  1978  081D                     	;# 
  1979  081E                     	;# 
  1980  081F                     	;# 
  1981  088C                     	;# 
  1982  088D                     	;# 
  1983  088E                     	;# 
  1984  088F                     	;# 
  1985  0890                     	;# 
  1986  0891                     	;# 
  1987  0892                     	;# 
  1988  0893                     	;# 
  1989  0895                     	;# 
  1990  0896                     	;# 
  1991  0897                     	;# 
  1992  0898                     	;# 
  1993  0899                     	;# 
  1994  089A                     	;# 
  1995  089B                     	;# 
  1996  090C                     	;# 
  1997  090E                     	;# 
  1998  090F                     	;# 
  1999  091F                     	;# 
  2000  091F                     	;# 
  2001  098F                     	;# 
  2002  098F                     	;# 
  2003  0990                     	;# 
  2004  0991                     	;# 
  2005  0992                     	;# 
  2006  0993                     	;# 
  2007  0994                     	;# 
  2008  0995                     	;# 
  2009  0996                     	;# 
  2010  0997                     	;# 
  2011  0E0F                     	;# 
  2012  0E10                     	;# 
  2013  0E11                     	;# 
  2014  0E12                     	;# 
  2015  0E13                     	;# 
  2016  0E14                     	;# 
  2017  0E15                     	;# 
  2018  0E16                     	;# 
  2019  0E17                     	;# 
  2020  0E18                     	;# 
  2021  0E19                     	;# 
  2022  0E1A                     	;# 
  2023  0E1B                     	;# 
  2024  0E1C                     	;# 
  2025  0E1D                     	;# 
  2026  0E1E                     	;# 
  2027  0E1F                     	;# 
  2028  0E20                     	;# 
  2029  0E21                     	;# 
  2030  0E22                     	;# 
  2031  0E23                     	;# 
  2032  0E24                     	;# 
  2033  0E25                     	;# 
  2034  0E26                     	;# 
  2035  0E27                     	;# 
  2036  0E28                     	;# 
  2037  0E29                     	;# 
  2038  0E2A                     	;# 
  2039  0E2B                     	;# 
  2040  0E2C                     	;# 
  2041  0E2D                     	;# 
  2042  0E2E                     	;# 
  2043  0E2F                     	;# 
  2044  0E30                     	;# 
  2045  0E31                     	;# 
  2046  0E32                     	;# 
  2047  0E33                     	;# 
  2048  0E34                     	;# 
  2049  0E35                     	;# 
  2050  0E36                     	;# 
  2051  0E37                     	;# 
  2052  0E8F                     	;# 
  2053  0E90                     	;# 
  2054  0E91                     	;# 
  2055  0E92                     	;# 
  2056  0E93                     	;# 
  2057  0E94                     	;# 
  2058  0E95                     	;# 
  2059  0E96                     	;# 
  2060  0E97                     	;# 
  2061  0E9C                     	;# 
  2062  0E9D                     	;# 
  2063  0E9E                     	;# 
  2064  0EA1                     	;# 
  2065  0EA2                     	;# 
  2066  0EA3                     	;# 
  2067  0EA4                     	;# 
  2068  0EA5                     	;# 
  2069  0EA9                     	;# 
  2070  0EAA                     	;# 
  2071  0EAB                     	;# 
  2072  0EAC                     	;# 
  2073  0EB1                     	;# 
  2074  0EB2                     	;# 
  2075  0EB3                     	;# 
  2076  0EB8                     	;# 
  2077  0EB9                     	;# 
  2078  0EBA                     	;# 
  2079  0EBB                     	;# 
  2080  0EBC                     	;# 
  2081  0EBD                     	;# 
  2082  0EBE                     	;# 
  2083  0EC3                     	;# 
  2084  0EC5                     	;# 
  2085  0EC6                     	;# 
  2086  0EC7                     	;# 
  2087  0EC8                     	;# 
  2088  0EC9                     	;# 
  2089  0ECA                     	;# 
  2090  0ECB                     	;# 
  2091  0ECC                     	;# 
  2092  0F10                     	;# 
  2093  0F11                     	;# 
  2094  0F12                     	;# 
  2095  0F13                     	;# 
  2096  0F14                     	;# 
  2097  0F15                     	;# 
  2098  0F16                     	;# 
  2099  0F17                     	;# 
  2100  0F18                     	;# 
  2101  0F19                     	;# 
  2102  0F1A                     	;# 
  2103  0F1B                     	;# 
  2104  0F1C                     	;# 
  2105  0F1D                     	;# 
  2106  0F1E                     	;# 
  2107  0F1F                     	;# 
  2108  0F20                     	;# 
  2109  0F21                     	;# 
  2110  0F22                     	;# 
  2111  0F23                     	;# 
  2112  0F24                     	;# 
  2113  0F25                     	;# 
  2114  0F26                     	;# 
  2115  0F27                     	;# 
  2116  0F38                     	;# 
  2117  0F39                     	;# 
  2118  0F3A                     	;# 
  2119  0F3B                     	;# 
  2120  0F3C                     	;# 
  2121  0F3D                     	;# 
  2122  0F3E                     	;# 
  2123  0F3F                     	;# 
  2124  0F40                     	;# 
  2125  0F41                     	;# 
  2126  0F43                     	;# 
  2127  0F44                     	;# 
  2128  0F45                     	;# 
  2129  0F46                     	;# 
  2130  0F47                     	;# 
  2131  0F48                     	;# 
  2132  0F49                     	;# 
  2133  0F4A                     	;# 
  2134  0F4B                     	;# 
  2135  0F4C                     	;# 
  2136  0F4E                     	;# 
  2137  0F4F                     	;# 
  2138  0F50                     	;# 
  2139  0F51                     	;# 
  2140  0F52                     	;# 
  2141  0F53                     	;# 
  2142  0F54                     	;# 
  2143  0F55                     	;# 
  2144  0F56                     	;# 
  2145  0F57                     	;# 
  2146  0F65                     	;# 
  2147  0F68                     	;# 
  2148  0F69                     	;# 
  2149  0F6A                     	;# 
  2150  0F6B                     	;# 
  2151  0FE4                     	;# 
  2152  0FE5                     	;# 
  2153  0FE6                     	;# 
  2154  0FE7                     	;# 
  2155  0FE8                     	;# 
  2156  0FE9                     	;# 
  2157  0FEA                     	;# 
  2158  0FEB                     	;# 
  2159  0FED                     	;# 
  2160  0FEE                     	;# 
  2161  0FEF                     	;# 
  2162  0000                     	;# 
  2163  0001                     	;# 
  2164  0002                     	;# 
  2165  0003                     	;# 
  2166  0004                     	;# 
  2167  0005                     	;# 
  2168  0006                     	;# 
  2169  0007                     	;# 
  2170  0008                     	;# 
  2171  0009                     	;# 
  2172  000A                     	;# 
  2173  000B                     	;# 
  2174  000C                     	;# 
  2175  000D                     	;# 
  2176  000E                     	;# 
  2177  0010                     	;# 
  2178  0011                     	;# 
  2179  0012                     	;# 
  2180  0013                     	;# 
  2181  0016                     	;# 
  2182  0017                     	;# 
  2183  0018                     	;# 
  2184  001C                     	;# 
  2185  001C                     	;# 
  2186  001D                     	;# 
  2187  001D                     	;# 
  2188  001E                     	;# 
  2189  001F                     	;# 
  2190  008C                     	;# 
  2191  008C                     	;# 
  2192  008D                     	;# 
  2193  008E                     	;# 
  2194  008E                     	;# 
  2195  008F                     	;# 
  2196  0090                     	;# 
  2197  0090                     	;# 
  2198  0091                     	;# 
  2199  0093                     	;# 
  2200  0094                     	;# 
  2201  0095                     	;# 
  2202  0096                     	;# 
  2203  0097                     	;# 
  2204  0098                     	;# 
  2205  0099                     	;# 
  2206  009A                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  010C                     	;# 
  2212  010D                     	;# 
  2213  010E                     	;# 
  2214  010E                     	;# 
  2215  010F                     	;# 
  2216  0110                     	;# 
  2217  0110                     	;# 
  2218  0111                     	;# 
  2219  0112                     	;# 
  2220  0112                     	;# 
  2221  0113                     	;# 
  2222  0114                     	;# 
  2223  0114                     	;# 
  2224  0115                     	;# 
  2225  0116                     	;# 
  2226  0116                     	;# 
  2227  0117                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  0119                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011A                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011C                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011D                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011E                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  018F                     	;# 
  2257  0190                     	;# 
  2258  0191                     	;# 
  2259  0192                     	;# 
  2260  0196                     	;# 
  2261  0197                     	;# 
  2262  0198                     	;# 
  2263  0199                     	;# 
  2264  019A                     	;# 
  2265  019B                     	;# 
  2266  019C                     	;# 
  2267  020C                     	;# 
  2268  020C                     	;# 
  2269  020D                     	;# 
  2270  020E                     	;# 
  2271  020F                     	;# 
  2272  020F                     	;# 
  2273  0210                     	;# 
  2274  0210                     	;# 
  2275  0211                     	;# 
  2276  0211                     	;# 
  2277  0212                     	;# 
  2278  0212                     	;# 
  2279  0213                     	;# 
  2280  0214                     	;# 
  2281  0215                     	;# 
  2282  0215                     	;# 
  2283  0216                     	;# 
  2284  0216                     	;# 
  2285  0217                     	;# 
  2286  0217                     	;# 
  2287  0218                     	;# 
  2288  0218                     	;# 
  2289  0219                     	;# 
  2290  021A                     	;# 
  2291  021B                     	;# 
  2292  021B                     	;# 
  2293  021C                     	;# 
  2294  021C                     	;# 
  2295  021D                     	;# 
  2296  021D                     	;# 
  2297  021E                     	;# 
  2298  021F                     	;# 
  2299  028C                     	;# 
  2300  028C                     	;# 
  2301  028D                     	;# 
  2302  028D                     	;# 
  2303  028E                     	;# 
  2304  028F                     	;# 
  2305  0290                     	;# 
  2306  0290                     	;# 
  2307  0291                     	;# 
  2308  0292                     	;# 
  2309  0292                     	;# 
  2310  0293                     	;# 
  2311  0293                     	;# 
  2312  0294                     	;# 
  2313  0295                     	;# 
  2314  0296                     	;# 
  2315  0296                     	;# 
  2316  0297                     	;# 
  2317  0298                     	;# 
  2318  0298                     	;# 
  2319  0299                     	;# 
  2320  0299                     	;# 
  2321  029A                     	;# 
  2322  029B                     	;# 
  2323  029C                     	;# 
  2324  029C                     	;# 
  2325  029D                     	;# 
  2326  030C                     	;# 
  2327  030C                     	;# 
  2328  030D                     	;# 
  2329  030E                     	;# 
  2330  030F                     	;# 
  2331  0310                     	;# 
  2332  0310                     	;# 
  2333  0311                     	;# 
  2334  0312                     	;# 
  2335  0313                     	;# 
  2336  0314                     	;# 
  2337  0314                     	;# 
  2338  0315                     	;# 
  2339  0316                     	;# 
  2340  0317                     	;# 
  2341  0318                     	;# 
  2342  0318                     	;# 
  2343  0319                     	;# 
  2344  031A                     	;# 
  2345  031B                     	;# 
  2346  031C                     	;# 
  2347  031C                     	;# 
  2348  031D                     	;# 
  2349  031E                     	;# 
  2350  031F                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0390                     	;# 
  2355  0391                     	;# 
  2356  0392                     	;# 
  2357  040C                     	;# 
  2358  040D                     	;# 
  2359  040E                     	;# 
  2360  040F                     	;# 
  2361  0410                     	;# 
  2362  0411                     	;# 
  2363  0416                     	;# 
  2364  0416                     	;# 
  2365  0417                     	;# 
  2366  0418                     	;# 
  2367  0418                     	;# 
  2368  0419                     	;# 
  2369  041A                     	;# 
  2370  041A                     	;# 
  2371  041B                     	;# 
  2372  041C                     	;# 
  2373  041C                     	;# 
  2374  041D                     	;# 
  2375  041E                     	;# 
  2376  041F                     	;# 
  2377  048C                     	;# 
  2378  048C                     	;# 
  2379  048D                     	;# 
  2380  048E                     	;# 
  2381  048F                     	;# 
  2382  048F                     	;# 
  2383  0490                     	;# 
  2384  0491                     	;# 
  2385  0492                     	;# 
  2386  0492                     	;# 
  2387  0493                     	;# 
  2388  0494                     	;# 
  2389  0495                     	;# 
  2390  0495                     	;# 
  2391  0496                     	;# 
  2392  0497                     	;# 
  2393  0498                     	;# 
  2394  0499                     	;# 
  2395  049A                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  050C                     	;# 
  2400  050C                     	;# 
  2401  050D                     	;# 
  2402  050E                     	;# 
  2403  050F                     	;# 
  2404  050F                     	;# 
  2405  0510                     	;# 
  2406  0511                     	;# 
  2407  0512                     	;# 
  2408  0512                     	;# 
  2409  0513                     	;# 
  2410  0514                     	;# 
  2411  0515                     	;# 
  2412  0515                     	;# 
  2413  0516                     	;# 
  2414  0517                     	;# 
  2415  0518                     	;# 
  2416  0519                     	;# 
  2417  051A                     	;# 
  2418  051B                     	;# 
  2419  051C                     	;# 
  2420  051D                     	;# 
  2421  058C                     	;# 
  2422  058C                     	;# 
  2423  058D                     	;# 
  2424  058E                     	;# 
  2425  058F                     	;# 
  2426  058F                     	;# 
  2427  0590                     	;# 
  2428  0591                     	;# 
  2429  0592                     	;# 
  2430  0593                     	;# 
  2431  060C                     	;# 
  2432  060D                     	;# 
  2433  060E                     	;# 
  2434  060F                     	;# 
  2435  0610                     	;# 
  2436  0611                     	;# 
  2437  0612                     	;# 
  2438  0613                     	;# 
  2439  0614                     	;# 
  2440  0616                     	;# 
  2441  0617                     	;# 
  2442  0618                     	;# 
  2443  0619                     	;# 
  2444  061A                     	;# 
  2445  061B                     	;# 
  2446  061C                     	;# 
  2447  061D                     	;# 
  2448  061E                     	;# 
  2449  068C                     	;# 
  2450  068D                     	;# 
  2451  068E                     	;# 
  2452  068F                     	;# 
  2453  0690                     	;# 
  2454  0691                     	;# 
  2455  0692                     	;# 
  2456  0693                     	;# 
  2457  0694                     	;# 
  2458  070C                     	;# 
  2459  070D                     	;# 
  2460  070E                     	;# 
  2461  070F                     	;# 
  2462  0710                     	;# 
  2463  0711                     	;# 
  2464  0712                     	;# 
  2465  0713                     	;# 
  2466  0714                     	;# 
  2467  0716                     	;# 
  2468  0717                     	;# 
  2469  0718                     	;# 
  2470  0719                     	;# 
  2471  071A                     	;# 
  2472  071B                     	;# 
  2473  071C                     	;# 
  2474  071D                     	;# 
  2475  071E                     	;# 
  2476  0796                     	;# 
  2477  0797                     	;# 
  2478  0798                     	;# 
  2479  0799                     	;# 
  2480  079A                     	;# 
  2481  079B                     	;# 
  2482  080C                     	;# 
  2483  080D                     	;# 
  2484  080E                     	;# 
  2485  080F                     	;# 
  2486  0810                     	;# 
  2487  0811                     	;# 
  2488  0812                     	;# 
  2489  0813                     	;# 
  2490  0814                     	;# 
  2491  081A                     	;# 
  2492  081B                     	;# 
  2493  081C                     	;# 
  2494  081D                     	;# 
  2495  081E                     	;# 
  2496  081F                     	;# 
  2497  088C                     	;# 
  2498  088D                     	;# 
  2499  088E                     	;# 
  2500  088F                     	;# 
  2501  0890                     	;# 
  2502  0891                     	;# 
  2503  0892                     	;# 
  2504  0893                     	;# 
  2505  0895                     	;# 
  2506  0896                     	;# 
  2507  0897                     	;# 
  2508  0898                     	;# 
  2509  0899                     	;# 
  2510  089A                     	;# 
  2511  089B                     	;# 
  2512  090C                     	;# 
  2513  090E                     	;# 
  2514  090F                     	;# 
  2515  091F                     	;# 
  2516  091F                     	;# 
  2517  098F                     	;# 
  2518  098F                     	;# 
  2519  0990                     	;# 
  2520  0991                     	;# 
  2521  0992                     	;# 
  2522  0993                     	;# 
  2523  0994                     	;# 
  2524  0995                     	;# 
  2525  0996                     	;# 
  2526  0997                     	;# 
  2527  0E0F                     	;# 
  2528  0E10                     	;# 
  2529  0E11                     	;# 
  2530  0E12                     	;# 
  2531  0E13                     	;# 
  2532  0E14                     	;# 
  2533  0E15                     	;# 
  2534  0E16                     	;# 
  2535  0E17                     	;# 
  2536  0E18                     	;# 
  2537  0E19                     	;# 
  2538  0E1A                     	;# 
  2539  0E1B                     	;# 
  2540  0E1C                     	;# 
  2541  0E1D                     	;# 
  2542  0E1E                     	;# 
  2543  0E1F                     	;# 
  2544  0E20                     	;# 
  2545  0E21                     	;# 
  2546  0E22                     	;# 
  2547  0E23                     	;# 
  2548  0E24                     	;# 
  2549  0E25                     	;# 
  2550  0E26                     	;# 
  2551  0E27                     	;# 
  2552  0E28                     	;# 
  2553  0E29                     	;# 
  2554  0E2A                     	;# 
  2555  0E2B                     	;# 
  2556  0E2C                     	;# 
  2557  0E2D                     	;# 
  2558  0E2E                     	;# 
  2559  0E2F                     	;# 
  2560  0E30                     	;# 
  2561  0E31                     	;# 
  2562  0E32                     	;# 
  2563  0E33                     	;# 
  2564  0E34                     	;# 
  2565  0E35                     	;# 
  2566  0E36                     	;# 
  2567  0E37                     	;# 
  2568  0E8F                     	;# 
  2569  0E90                     	;# 
  2570  0E91                     	;# 
  2571  0E92                     	;# 
  2572  0E93                     	;# 
  2573  0E94                     	;# 
  2574  0E95                     	;# 
  2575  0E96                     	;# 
  2576  0E97                     	;# 
  2577  0E9C                     	;# 
  2578  0E9D                     	;# 
  2579  0E9E                     	;# 
  2580  0EA1                     	;# 
  2581  0EA2                     	;# 
  2582  0EA3                     	;# 
  2583  0EA4                     	;# 
  2584  0EA5                     	;# 
  2585  0EA9                     	;# 
  2586  0EAA                     	;# 
  2587  0EAB                     	;# 
  2588  0EAC                     	;# 
  2589  0EB1                     	;# 
  2590  0EB2                     	;# 
  2591  0EB3                     	;# 
  2592  0EB8                     	;# 
  2593  0EB9                     	;# 
  2594  0EBA                     	;# 
  2595  0EBB                     	;# 
  2596  0EBC                     	;# 
  2597  0EBD                     	;# 
  2598  0EBE                     	;# 
  2599  0EC3                     	;# 
  2600  0EC5                     	;# 
  2601  0EC6                     	;# 
  2602  0EC7                     	;# 
  2603  0EC8                     	;# 
  2604  0EC9                     	;# 
  2605  0ECA                     	;# 
  2606  0ECB                     	;# 
  2607  0ECC                     	;# 
  2608  0F10                     	;# 
  2609  0F11                     	;# 
  2610  0F12                     	;# 
  2611  0F13                     	;# 
  2612  0F14                     	;# 
  2613  0F15                     	;# 
  2614  0F16                     	;# 
  2615  0F17                     	;# 
  2616  0F18                     	;# 
  2617  0F19                     	;# 
  2618  0F1A                     	;# 
  2619  0F1B                     	;# 
  2620  0F1C                     	;# 
  2621  0F1D                     	;# 
  2622  0F1E                     	;# 
  2623  0F1F                     	;# 
  2624  0F20                     	;# 
  2625  0F21                     	;# 
  2626  0F22                     	;# 
  2627  0F23                     	;# 
  2628  0F24                     	;# 
  2629  0F25                     	;# 
  2630  0F26                     	;# 
  2631  0F27                     	;# 
  2632  0F38                     	;# 
  2633  0F39                     	;# 
  2634  0F3A                     	;# 
  2635  0F3B                     	;# 
  2636  0F3C                     	;# 
  2637  0F3D                     	;# 
  2638  0F3E                     	;# 
  2639  0F3F                     	;# 
  2640  0F40                     	;# 
  2641  0F41                     	;# 
  2642  0F43                     	;# 
  2643  0F44                     	;# 
  2644  0F45                     	;# 
  2645  0F46                     	;# 
  2646  0F47                     	;# 
  2647  0F48                     	;# 
  2648  0F49                     	;# 
  2649  0F4A                     	;# 
  2650  0F4B                     	;# 
  2651  0F4C                     	;# 
  2652  0F4E                     	;# 
  2653  0F4F                     	;# 
  2654  0F50                     	;# 
  2655  0F51                     	;# 
  2656  0F52                     	;# 
  2657  0F53                     	;# 
  2658  0F54                     	;# 
  2659  0F55                     	;# 
  2660  0F56                     	;# 
  2661  0F57                     	;# 
  2662  0F65                     	;# 
  2663  0F68                     	;# 
  2664  0F69                     	;# 
  2665  0F6A                     	;# 
  2666  0F6B                     	;# 
  2667  0FE4                     	;# 
  2668  0FE5                     	;# 
  2669  0FE6                     	;# 
  2670  0FE7                     	;# 
  2671  0FE8                     	;# 
  2672  0FE9                     	;# 
  2673  0FEA                     	;# 
  2674  0FEB                     	;# 
  2675  0FED                     	;# 
  2676  0FEE                     	;# 
  2677  0FEF                     	;# 
  2678  0000                     	;# 
  2679  0001                     	;# 
  2680  0002                     	;# 
  2681  0003                     	;# 
  2682  0004                     	;# 
  2683  0005                     	;# 
  2684  0006                     	;# 
  2685  0007                     	;# 
  2686  0008                     	;# 
  2687  0009                     	;# 
  2688  000A                     	;# 
  2689  000B                     	;# 
  2690  000C                     	;# 
  2691  000D                     	;# 
  2692  000E                     	;# 
  2693  0010                     	;# 
  2694  0011                     	;# 
  2695  0012                     	;# 
  2696  0013                     	;# 
  2697  0016                     	;# 
  2698  0017                     	;# 
  2699  0018                     	;# 
  2700  001C                     	;# 
  2701  001C                     	;# 
  2702  001D                     	;# 
  2703  001D                     	;# 
  2704  001E                     	;# 
  2705  001F                     	;# 
  2706  008C                     	;# 
  2707  008C                     	;# 
  2708  008D                     	;# 
  2709  008E                     	;# 
  2710  008E                     	;# 
  2711  008F                     	;# 
  2712  0090                     	;# 
  2713  0090                     	;# 
  2714  0091                     	;# 
  2715  0093                     	;# 
  2716  0094                     	;# 
  2717  0095                     	;# 
  2718  0096                     	;# 
  2719  0097                     	;# 
  2720  0098                     	;# 
  2721  0099                     	;# 
  2722  009A                     	;# 
  2723  009B                     	;# 
  2724  009C                     	;# 
  2725  009D                     	;# 
  2726  009E                     	;# 
  2727  010C                     	;# 
  2728  010D                     	;# 
  2729  010E                     	;# 
  2730  010E                     	;# 
  2731  010F                     	;# 
  2732  0110                     	;# 
  2733  0110                     	;# 
  2734  0111                     	;# 
  2735  0112                     	;# 
  2736  0112                     	;# 
  2737  0113                     	;# 
  2738  0114                     	;# 
  2739  0114                     	;# 
  2740  0115                     	;# 
  2741  0116                     	;# 
  2742  0116                     	;# 
  2743  0117                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  0119                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011A                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011C                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011D                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011E                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  018C                     	;# 
  2770  018D                     	;# 
  2771  018E                     	;# 
  2772  018F                     	;# 
  2773  0190                     	;# 
  2774  0191                     	;# 
  2775  0192                     	;# 
  2776  0196                     	;# 
  2777  0197                     	;# 
  2778  0198                     	;# 
  2779  0199                     	;# 
  2780  019A                     	;# 
  2781  019B                     	;# 
  2782  019C                     	;# 
  2783  020C                     	;# 
  2784  020C                     	;# 
  2785  020D                     	;# 
  2786  020E                     	;# 
  2787  020F                     	;# 
  2788  020F                     	;# 
  2789  0210                     	;# 
  2790  0210                     	;# 
  2791  0211                     	;# 
  2792  0211                     	;# 
  2793  0212                     	;# 
  2794  0212                     	;# 
  2795  0213                     	;# 
  2796  0214                     	;# 
  2797  0215                     	;# 
  2798  0215                     	;# 
  2799  0216                     	;# 
  2800  0216                     	;# 
  2801  0217                     	;# 
  2802  0217                     	;# 
  2803  0218                     	;# 
  2804  0218                     	;# 
  2805  0219                     	;# 
  2806  021A                     	;# 
  2807  021B                     	;# 
  2808  021B                     	;# 
  2809  021C                     	;# 
  2810  021C                     	;# 
  2811  021D                     	;# 
  2812  021D                     	;# 
  2813  021E                     	;# 
  2814  021F                     	;# 
  2815  028C                     	;# 
  2816  028C                     	;# 
  2817  028D                     	;# 
  2818  028D                     	;# 
  2819  028E                     	;# 
  2820  028F                     	;# 
  2821  0290                     	;# 
  2822  0290                     	;# 
  2823  0291                     	;# 
  2824  0292                     	;# 
  2825  0292                     	;# 
  2826  0293                     	;# 
  2827  0293                     	;# 
  2828  0294                     	;# 
  2829  0295                     	;# 
  2830  0296                     	;# 
  2831  0296                     	;# 
  2832  0297                     	;# 
  2833  0298                     	;# 
  2834  0298                     	;# 
  2835  0299                     	;# 
  2836  0299                     	;# 
  2837  029A                     	;# 
  2838  029B                     	;# 
  2839  029C                     	;# 
  2840  029C                     	;# 
  2841  029D                     	;# 
  2842  030C                     	;# 
  2843  030C                     	;# 
  2844  030D                     	;# 
  2845  030E                     	;# 
  2846  030F                     	;# 
  2847  0310                     	;# 
  2848  0310                     	;# 
  2849  0311                     	;# 
  2850  0312                     	;# 
  2851  0313                     	;# 
  2852  0314                     	;# 
  2853  0314                     	;# 
  2854  0315                     	;# 
  2855  0316                     	;# 
  2856  0317                     	;# 
  2857  0318                     	;# 
  2858  0318                     	;# 
  2859  0319                     	;# 
  2860  031A                     	;# 
  2861  031B                     	;# 
  2862  031C                     	;# 
  2863  031C                     	;# 
  2864  031D                     	;# 
  2865  031E                     	;# 
  2866  031F                     	;# 
  2867  038C                     	;# 
  2868  038D                     	;# 
  2869  038E                     	;# 
  2870  0390                     	;# 
  2871  0391                     	;# 
  2872  0392                     	;# 
  2873  040C                     	;# 
  2874  040D                     	;# 
  2875  040E                     	;# 
  2876  040F                     	;# 
  2877  0410                     	;# 
  2878  0411                     	;# 
  2879  0416                     	;# 
  2880  0416                     	;# 
  2881  0417                     	;# 
  2882  0418                     	;# 
  2883  0418                     	;# 
  2884  0419                     	;# 
  2885  041A                     	;# 
  2886  041A                     	;# 
  2887  041B                     	;# 
  2888  041C                     	;# 
  2889  041C                     	;# 
  2890  041D                     	;# 
  2891  041E                     	;# 
  2892  041F                     	;# 
  2893  048C                     	;# 
  2894  048C                     	;# 
  2895  048D                     	;# 
  2896  048E                     	;# 
  2897  048F                     	;# 
  2898  048F                     	;# 
  2899  0490                     	;# 
  2900  0491                     	;# 
  2901  0492                     	;# 
  2902  0492                     	;# 
  2903  0493                     	;# 
  2904  0494                     	;# 
  2905  0495                     	;# 
  2906  0495                     	;# 
  2907  0496                     	;# 
  2908  0497                     	;# 
  2909  0498                     	;# 
  2910  0499                     	;# 
  2911  049A                     	;# 
  2912  049B                     	;# 
  2913  049C                     	;# 
  2914  049D                     	;# 
  2915  050C                     	;# 
  2916  050C                     	;# 
  2917  050D                     	;# 
  2918  050E                     	;# 
  2919  050F                     	;# 
  2920  050F                     	;# 
  2921  0510                     	;# 
  2922  0511                     	;# 
  2923  0512                     	;# 
  2924  0512                     	;# 
  2925  0513                     	;# 
  2926  0514                     	;# 
  2927  0515                     	;# 
  2928  0515                     	;# 
  2929  0516                     	;# 
  2930  0517                     	;# 
  2931  0518                     	;# 
  2932  0519                     	;# 
  2933  051A                     	;# 
  2934  051B                     	;# 
  2935  051C                     	;# 
  2936  051D                     	;# 
  2937  058C                     	;# 
  2938  058C                     	;# 
  2939  058D                     	;# 
  2940  058E                     	;# 
  2941  058F                     	;# 
  2942  058F                     	;# 
  2943  0590                     	;# 
  2944  0591                     	;# 
  2945  0592                     	;# 
  2946  0593                     	;# 
  2947  060C                     	;# 
  2948  060D                     	;# 
  2949  060E                     	;# 
  2950  060F                     	;# 
  2951  0610                     	;# 
  2952  0611                     	;# 
  2953  0612                     	;# 
  2954  0613                     	;# 
  2955  0614                     	;# 
  2956  0616                     	;# 
  2957  0617                     	;# 
  2958  0618                     	;# 
  2959  0619                     	;# 
  2960  061A                     	;# 
  2961  061B                     	;# 
  2962  061C                     	;# 
  2963  061D                     	;# 
  2964  061E                     	;# 
  2965  068C                     	;# 
  2966  068D                     	;# 
  2967  068E                     	;# 
  2968  068F                     	;# 
  2969  0690                     	;# 
  2970  0691                     	;# 
  2971  0692                     	;# 
  2972  0693                     	;# 
  2973  0694                     	;# 
  2974  070C                     	;# 
  2975  070D                     	;# 
  2976  070E                     	;# 
  2977  070F                     	;# 
  2978  0710                     	;# 
  2979  0711                     	;# 
  2980  0712                     	;# 
  2981  0713                     	;# 
  2982  0714                     	;# 
  2983  0716                     	;# 
  2984  0717                     	;# 
  2985  0718                     	;# 
  2986  0719                     	;# 
  2987  071A                     	;# 
  2988  071B                     	;# 
  2989  071C                     	;# 
  2990  071D                     	;# 
  2991  071E                     	;# 
  2992  0796                     	;# 
  2993  0797                     	;# 
  2994  0798                     	;# 
  2995  0799                     	;# 
  2996  079A                     	;# 
  2997  079B                     	;# 
  2998  080C                     	;# 
  2999  080D                     	;# 
  3000  080E                     	;# 
  3001  080F                     	;# 
  3002  0810                     	;# 
  3003  0811                     	;# 
  3004  0812                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  081A                     	;# 
  3008  081B                     	;# 
  3009  081C                     	;# 
  3010  081D                     	;# 
  3011  081E                     	;# 
  3012  081F                     	;# 
  3013  088C                     	;# 
  3014  088D                     	;# 
  3015  088E                     	;# 
  3016  088F                     	;# 
  3017  0890                     	;# 
  3018  0891                     	;# 
  3019  0892                     	;# 
  3020  0893                     	;# 
  3021  0895                     	;# 
  3022  0896                     	;# 
  3023  0897                     	;# 
  3024  0898                     	;# 
  3025  0899                     	;# 
  3026  089A                     	;# 
  3027  089B                     	;# 
  3028  090C                     	;# 
  3029  090E                     	;# 
  3030  090F                     	;# 
  3031  091F                     	;# 
  3032  091F                     	;# 
  3033  098F                     	;# 
  3034  098F                     	;# 
  3035  0990                     	;# 
  3036  0991                     	;# 
  3037  0992                     	;# 
  3038  0993                     	;# 
  3039  0994                     	;# 
  3040  0995                     	;# 
  3041  0996                     	;# 
  3042  0997                     	;# 
  3043  0E0F                     	;# 
  3044  0E10                     	;# 
  3045  0E11                     	;# 
  3046  0E12                     	;# 
  3047  0E13                     	;# 
  3048  0E14                     	;# 
  3049  0E15                     	;# 
  3050  0E16                     	;# 
  3051  0E17                     	;# 
  3052  0E18                     	;# 
  3053  0E19                     	;# 
  3054  0E1A                     	;# 
  3055  0E1B                     	;# 
  3056  0E1C                     	;# 
  3057  0E1D                     	;# 
  3058  0E1E                     	;# 
  3059  0E1F                     	;# 
  3060  0E20                     	;# 
  3061  0E21                     	;# 
  3062  0E22                     	;# 
  3063  0E23                     	;# 
  3064  0E24                     	;# 
  3065  0E25                     	;# 
  3066  0E26                     	;# 
  3067  0E27                     	;# 
  3068  0E28                     	;# 
  3069  0E29                     	;# 
  3070  0E2A                     	;# 
  3071  0E2B                     	;# 
  3072  0E2C                     	;# 
  3073  0E2D                     	;# 
  3074  0E2E                     	;# 
  3075  0E2F                     	;# 
  3076  0E30                     	;# 
  3077  0E31                     	;# 
  3078  0E32                     	;# 
  3079  0E33                     	;# 
  3080  0E34                     	;# 
  3081  0E35                     	;# 
  3082  0E36                     	;# 
  3083  0E37                     	;# 
  3084  0E8F                     	;# 
  3085  0E90                     	;# 
  3086  0E91                     	;# 
  3087  0E92                     	;# 
  3088  0E93                     	;# 
  3089  0E94                     	;# 
  3090  0E95                     	;# 
  3091  0E96                     	;# 
  3092  0E97                     	;# 
  3093  0E9C                     	;# 
  3094  0E9D                     	;# 
  3095  0E9E                     	;# 
  3096  0EA1                     	;# 
  3097  0EA2                     	;# 
  3098  0EA3                     	;# 
  3099  0EA4                     	;# 
  3100  0EA5                     	;# 
  3101  0EA9                     	;# 
  3102  0EAA                     	;# 
  3103  0EAB                     	;# 
  3104  0EAC                     	;# 
  3105  0EB1                     	;# 
  3106  0EB2                     	;# 
  3107  0EB3                     	;# 
  3108  0EB8                     	;# 
  3109  0EB9                     	;# 
  3110  0EBA                     	;# 
  3111  0EBB                     	;# 
  3112  0EBC                     	;# 
  3113  0EBD                     	;# 
  3114  0EBE                     	;# 
  3115  0EC3                     	;# 
  3116  0EC5                     	;# 
  3117  0EC6                     	;# 
  3118  0EC7                     	;# 
  3119  0EC8                     	;# 
  3120  0EC9                     	;# 
  3121  0ECA                     	;# 
  3122  0ECB                     	;# 
  3123  0ECC                     	;# 
  3124  0F10                     	;# 
  3125  0F11                     	;# 
  3126  0F12                     	;# 
  3127  0F13                     	;# 
  3128  0F14                     	;# 
  3129  0F15                     	;# 
  3130  0F16                     	;# 
  3131  0F17                     	;# 
  3132  0F18                     	;# 
  3133  0F19                     	;# 
  3134  0F1A                     	;# 
  3135  0F1B                     	;# 
  3136  0F1C                     	;# 
  3137  0F1D                     	;# 
  3138  0F1E                     	;# 
  3139  0F1F                     	;# 
  3140  0F20                     	;# 
  3141  0F21                     	;# 
  3142  0F22                     	;# 
  3143  0F23                     	;# 
  3144  0F24                     	;# 
  3145  0F25                     	;# 
  3146  0F26                     	;# 
  3147  0F27                     	;# 
  3148  0F38                     	;# 
  3149  0F39                     	;# 
  3150  0F3A                     	;# 
  3151  0F3B                     	;# 
  3152  0F3C                     	;# 
  3153  0F3D                     	;# 
  3154  0F3E                     	;# 
  3155  0F3F                     	;# 
  3156  0F40                     	;# 
  3157  0F41                     	;# 
  3158  0F43                     	;# 
  3159  0F44                     	;# 
  3160  0F45                     	;# 
  3161  0F46                     	;# 
  3162  0F47                     	;# 
  3163  0F48                     	;# 
  3164  0F49                     	;# 
  3165  0F4A                     	;# 
  3166  0F4B                     	;# 
  3167  0F4C                     	;# 
  3168  0F4E                     	;# 
  3169  0F4F                     	;# 
  3170  0F50                     	;# 
  3171  0F51                     	;# 
  3172  0F52                     	;# 
  3173  0F53                     	;# 
  3174  0F54                     	;# 
  3175  0F55                     	;# 
  3176  0F56                     	;# 
  3177  0F57                     	;# 
  3178  0F65                     	;# 
  3179  0F68                     	;# 
  3180  0F69                     	;# 
  3181  0F6A                     	;# 
  3182  0F6B                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194  0000                     	;# 
  3195  0001                     	;# 
  3196  0002                     	;# 
  3197  0003                     	;# 
  3198  0004                     	;# 
  3199  0005                     	;# 
  3200  0006                     	;# 
  3201  0007                     	;# 
  3202  0008                     	;# 
  3203  0009                     	;# 
  3204  000A                     	;# 
  3205  000B                     	;# 
  3206  000C                     	;# 
  3207  000D                     	;# 
  3208  000E                     	;# 
  3209  0010                     	;# 
  3210  0011                     	;# 
  3211  0012                     	;# 
  3212  0013                     	;# 
  3213  0016                     	;# 
  3214  0017                     	;# 
  3215  0018                     	;# 
  3216  001C                     	;# 
  3217  001C                     	;# 
  3218  001D                     	;# 
  3219  001D                     	;# 
  3220  001E                     	;# 
  3221  001F                     	;# 
  3222  008C                     	;# 
  3223  008C                     	;# 
  3224  008D                     	;# 
  3225  008E                     	;# 
  3226  008E                     	;# 
  3227  008F                     	;# 
  3228  0090                     	;# 
  3229  0090                     	;# 
  3230  0091                     	;# 
  3231  0093                     	;# 
  3232  0094                     	;# 
  3233  0095                     	;# 
  3234  0096                     	;# 
  3235  0097                     	;# 
  3236  0098                     	;# 
  3237  0099                     	;# 
  3238  009A                     	;# 
  3239  009B                     	;# 
  3240  009C                     	;# 
  3241  009D                     	;# 
  3242  009E                     	;# 
  3243  010C                     	;# 
  3244  010D                     	;# 
  3245  010E                     	;# 
  3246  010E                     	;# 
  3247  010F                     	;# 
  3248  0110                     	;# 
  3249  0110                     	;# 
  3250  0111                     	;# 
  3251  0112                     	;# 
  3252  0112                     	;# 
  3253  0113                     	;# 
  3254  0114                     	;# 
  3255  0114                     	;# 
  3256  0115                     	;# 
  3257  0116                     	;# 
  3258  0116                     	;# 
  3259  0117                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  0119                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011A                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011C                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011D                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011E                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  018C                     	;# 
  3286  018D                     	;# 
  3287  018E                     	;# 
  3288  018F                     	;# 
  3289  0190                     	;# 
  3290  0191                     	;# 
  3291  0192                     	;# 
  3292  0196                     	;# 
  3293  0197                     	;# 
  3294  0198                     	;# 
  3295  0199                     	;# 
  3296  019A                     	;# 
  3297  019B                     	;# 
  3298  019C                     	;# 
  3299  020C                     	;# 
  3300  020C                     	;# 
  3301  020D                     	;# 
  3302  020E                     	;# 
  3303  020F                     	;# 
  3304  020F                     	;# 
  3305  0210                     	;# 
  3306  0210                     	;# 
  3307  0211                     	;# 
  3308  0211                     	;# 
  3309  0212                     	;# 
  3310  0212                     	;# 
  3311  0213                     	;# 
  3312  0214                     	;# 
  3313  0215                     	;# 
  3314  0215                     	;# 
  3315  0216                     	;# 
  3316  0216                     	;# 
  3317  0217                     	;# 
  3318  0217                     	;# 
  3319  0218                     	;# 
  3320  0218                     	;# 
  3321  0219                     	;# 
  3322  021A                     	;# 
  3323  021B                     	;# 
  3324  021B                     	;# 
  3325  021C                     	;# 
  3326  021C                     	;# 
  3327  021D                     	;# 
  3328  021D                     	;# 
  3329  021E                     	;# 
  3330  021F                     	;# 
  3331  028C                     	;# 
  3332  028C                     	;# 
  3333  028D                     	;# 
  3334  028D                     	;# 
  3335  028E                     	;# 
  3336  028F                     	;# 
  3337  0290                     	;# 
  3338  0290                     	;# 
  3339  0291                     	;# 
  3340  0292                     	;# 
  3341  0292                     	;# 
  3342  0293                     	;# 
  3343  0293                     	;# 
  3344  0294                     	;# 
  3345  0295                     	;# 
  3346  0296                     	;# 
  3347  0296                     	;# 
  3348  0297                     	;# 
  3349  0298                     	;# 
  3350  0298                     	;# 
  3351  0299                     	;# 
  3352  0299                     	;# 
  3353  029A                     	;# 
  3354  029B                     	;# 
  3355  029C                     	;# 
  3356  029C                     	;# 
  3357  029D                     	;# 
  3358  030C                     	;# 
  3359  030C                     	;# 
  3360  030D                     	;# 
  3361  030E                     	;# 
  3362  030F                     	;# 
  3363  0310                     	;# 
  3364  0310                     	;# 
  3365  0311                     	;# 
  3366  0312                     	;# 
  3367  0313                     	;# 
  3368  0314                     	;# 
  3369  0314                     	;# 
  3370  0315                     	;# 
  3371  0316                     	;# 
  3372  0317                     	;# 
  3373  0318                     	;# 
  3374  0318                     	;# 
  3375  0319                     	;# 
  3376  031A                     	;# 
  3377  031B                     	;# 
  3378  031C                     	;# 
  3379  031C                     	;# 
  3380  031D                     	;# 
  3381  031E                     	;# 
  3382  031F                     	;# 
  3383  038C                     	;# 
  3384  038D                     	;# 
  3385  038E                     	;# 
  3386  0390                     	;# 
  3387  0391                     	;# 
  3388  0392                     	;# 
  3389  040C                     	;# 
  3390  040D                     	;# 
  3391  040E                     	;# 
  3392  040F                     	;# 
  3393  0410                     	;# 
  3394  0411                     	;# 
  3395  0416                     	;# 
  3396  0416                     	;# 
  3397  0417                     	;# 
  3398  0418                     	;# 
  3399  0418                     	;# 
  3400  0419                     	;# 
  3401  041A                     	;# 
  3402  041A                     	;# 
  3403  041B                     	;# 
  3404  041C                     	;# 
  3405  041C                     	;# 
  3406  041D                     	;# 
  3407  041E                     	;# 
  3408  041F                     	;# 
  3409  048C                     	;# 
  3410  048C                     	;# 
  3411  048D                     	;# 
  3412  048E                     	;# 
  3413  048F                     	;# 
  3414  048F                     	;# 
  3415  0490                     	;# 
  3416  0491                     	;# 
  3417  0492                     	;# 
  3418  0492                     	;# 
  3419  0493                     	;# 
  3420  0494                     	;# 
  3421  0495                     	;# 
  3422  0495                     	;# 
  3423  0496                     	;# 
  3424  0497                     	;# 
  3425  0498                     	;# 
  3426  0499                     	;# 
  3427  049A                     	;# 
  3428  049B                     	;# 
  3429  049C                     	;# 
  3430  049D                     	;# 
  3431  050C                     	;# 
  3432  050C                     	;# 
  3433  050D                     	;# 
  3434  050E                     	;# 
  3435  050F                     	;# 
  3436  050F                     	;# 
  3437  0510                     	;# 
  3438  0511                     	;# 
  3439  0512                     	;# 
  3440  0512                     	;# 
  3441  0513                     	;# 
  3442  0514                     	;# 
  3443  0515                     	;# 
  3444  0515                     	;# 
  3445  0516                     	;# 
  3446  0517                     	;# 
  3447  0518                     	;# 
  3448  0519                     	;# 
  3449  051A                     	;# 
  3450  051B                     	;# 
  3451  051C                     	;# 
  3452  051D                     	;# 
  3453  058C                     	;# 
  3454  058C                     	;# 
  3455  058D                     	;# 
  3456  058E                     	;# 
  3457  058F                     	;# 
  3458  058F                     	;# 
  3459  0590                     	;# 
  3460  0591                     	;# 
  3461  0592                     	;# 
  3462  0593                     	;# 
  3463  060C                     	;# 
  3464  060D                     	;# 
  3465  060E                     	;# 
  3466  060F                     	;# 
  3467  0610                     	;# 
  3468  0611                     	;# 
  3469  0612                     	;# 
  3470  0613                     	;# 
  3471  0614                     	;# 
  3472  0616                     	;# 
  3473  0617                     	;# 
  3474  0618                     	;# 
  3475  0619                     	;# 
  3476  061A                     	;# 
  3477  061B                     	;# 
  3478  061C                     	;# 
  3479  061D                     	;# 
  3480  061E                     	;# 
  3481  068C                     	;# 
  3482  068D                     	;# 
  3483  068E                     	;# 
  3484  068F                     	;# 
  3485  0690                     	;# 
  3486  0691                     	;# 
  3487  0692                     	;# 
  3488  0693                     	;# 
  3489  0694                     	;# 
  3490  070C                     	;# 
  3491  070D                     	;# 
  3492  070E                     	;# 
  3493  070F                     	;# 
  3494  0710                     	;# 
  3495  0711                     	;# 
  3496  0712                     	;# 
  3497  0713                     	;# 
  3498  0714                     	;# 
  3499  0716                     	;# 
  3500  0717                     	;# 
  3501  0718                     	;# 
  3502  0719                     	;# 
  3503  071A                     	;# 
  3504  071B                     	;# 
  3505  071C                     	;# 
  3506  071D                     	;# 
  3507  071E                     	;# 
  3508  0796                     	;# 
  3509  0797                     	;# 
  3510  0798                     	;# 
  3511  0799                     	;# 
  3512  079A                     	;# 
  3513  079B                     	;# 
  3514  080C                     	;# 
  3515  080D                     	;# 
  3516  080E                     	;# 
  3517  080F                     	;# 
  3518  0810                     	;# 
  3519  0811                     	;# 
  3520  0812                     	;# 
  3521  0813                     	;# 
  3522  0814                     	;# 
  3523  081A                     	;# 
  3524  081B                     	;# 
  3525  081C                     	;# 
  3526  081D                     	;# 
  3527  081E                     	;# 
  3528  081F                     	;# 
  3529  088C                     	;# 
  3530  088D                     	;# 
  3531  088E                     	;# 
  3532  088F                     	;# 
  3533  0890                     	;# 
  3534  0891                     	;# 
  3535  0892                     	;# 
  3536  0893                     	;# 
  3537  0895                     	;# 
  3538  0896                     	;# 
  3539  0897                     	;# 
  3540  0898                     	;# 
  3541  0899                     	;# 
  3542  089A                     	;# 
  3543  089B                     	;# 
  3544  090C                     	;# 
  3545  090E                     	;# 
  3546  090F                     	;# 
  3547  091F                     	;# 
  3548  091F                     	;# 
  3549  098F                     	;# 
  3550  098F                     	;# 
  3551  0990                     	;# 
  3552  0991                     	;# 
  3553  0992                     	;# 
  3554  0993                     	;# 
  3555  0994                     	;# 
  3556  0995                     	;# 
  3557  0996                     	;# 
  3558  0997                     	;# 
  3559  0E0F                     	;# 
  3560  0E10                     	;# 
  3561  0E11                     	;# 
  3562  0E12                     	;# 
  3563  0E13                     	;# 
  3564  0E14                     	;# 
  3565  0E15                     	;# 
  3566  0E16                     	;# 
  3567  0E17                     	;# 
  3568  0E18                     	;# 
  3569  0E19                     	;# 
  3570  0E1A                     	;# 
  3571  0E1B                     	;# 
  3572  0E1C                     	;# 
  3573  0E1D                     	;# 
  3574  0E1E                     	;# 
  3575  0E1F                     	;# 
  3576  0E20                     	;# 
  3577  0E21                     	;# 
  3578  0E22                     	;# 
  3579  0E23                     	;# 
  3580  0E24                     	;# 
  3581  0E25                     	;# 
  3582  0E26                     	;# 
  3583  0E27                     	;# 
  3584  0E28                     	;# 
  3585  0E29                     	;# 
  3586  0E2A                     	;# 
  3587  0E2B                     	;# 
  3588  0E2C                     	;# 
  3589  0E2D                     	;# 
  3590  0E2E                     	;# 
  3591  0E2F                     	;# 
  3592  0E30                     	;# 
  3593  0E31                     	;# 
  3594  0E32                     	;# 
  3595  0E33                     	;# 
  3596  0E34                     	;# 
  3597  0E35                     	;# 
  3598  0E36                     	;# 
  3599  0E37                     	;# 
  3600  0E8F                     	;# 
  3601  0E90                     	;# 
  3602  0E91                     	;# 
  3603  0E92                     	;# 
  3604  0E93                     	;# 
  3605  0E94                     	;# 
  3606  0E95                     	;# 
  3607  0E96                     	;# 
  3608  0E97                     	;# 
  3609  0E9C                     	;# 
  3610  0E9D                     	;# 
  3611  0E9E                     	;# 
  3612  0EA1                     	;# 
  3613  0EA2                     	;# 
  3614  0EA3                     	;# 
  3615  0EA4                     	;# 
  3616  0EA5                     	;# 
  3617  0EA9                     	;# 
  3618  0EAA                     	;# 
  3619  0EAB                     	;# 
  3620  0EAC                     	;# 
  3621  0EB1                     	;# 
  3622  0EB2                     	;# 
  3623  0EB3                     	;# 
  3624  0EB8                     	;# 
  3625  0EB9                     	;# 
  3626  0EBA                     	;# 
  3627  0EBB                     	;# 
  3628  0EBC                     	;# 
  3629  0EBD                     	;# 
  3630  0EBE                     	;# 
  3631  0EC3                     	;# 
  3632  0EC5                     	;# 
  3633  0EC6                     	;# 
  3634  0EC7                     	;# 
  3635  0EC8                     	;# 
  3636  0EC9                     	;# 
  3637  0ECA                     	;# 
  3638  0ECB                     	;# 
  3639  0ECC                     	;# 
  3640  0F10                     	;# 
  3641  0F11                     	;# 
  3642  0F12                     	;# 
  3643  0F13                     	;# 
  3644  0F14                     	;# 
  3645  0F15                     	;# 
  3646  0F16                     	;# 
  3647  0F17                     	;# 
  3648  0F18                     	;# 
  3649  0F19                     	;# 
  3650  0F1A                     	;# 
  3651  0F1B                     	;# 
  3652  0F1C                     	;# 
  3653  0F1D                     	;# 
  3654  0F1E                     	;# 
  3655  0F1F                     	;# 
  3656  0F20                     	;# 
  3657  0F21                     	;# 
  3658  0F22                     	;# 
  3659  0F23                     	;# 
  3660  0F24                     	;# 
  3661  0F25                     	;# 
  3662  0F26                     	;# 
  3663  0F27                     	;# 
  3664  0F38                     	;# 
  3665  0F39                     	;# 
  3666  0F3A                     	;# 
  3667  0F3B                     	;# 
  3668  0F3C                     	;# 
  3669  0F3D                     	;# 
  3670  0F3E                     	;# 
  3671  0F3F                     	;# 
  3672  0F40                     	;# 
  3673  0F41                     	;# 
  3674  0F43                     	;# 
  3675  0F44                     	;# 
  3676  0F45                     	;# 
  3677  0F46                     	;# 
  3678  0F47                     	;# 
  3679  0F48                     	;# 
  3680  0F49                     	;# 
  3681  0F4A                     	;# 
  3682  0F4B                     	;# 
  3683  0F4C                     	;# 
  3684  0F4E                     	;# 
  3685  0F4F                     	;# 
  3686  0F50                     	;# 
  3687  0F51                     	;# 
  3688  0F52                     	;# 
  3689  0F53                     	;# 
  3690  0F54                     	;# 
  3691  0F55                     	;# 
  3692  0F56                     	;# 
  3693  0F57                     	;# 
  3694  0F65                     	;# 
  3695  0F68                     	;# 
  3696  0F69                     	;# 
  3697  0F6A                     	;# 
  3698  0F6B                     	;# 
  3699  0FE4                     	;# 
  3700  0FE5                     	;# 
  3701  0FE6                     	;# 
  3702  0FE7                     	;# 
  3703  0FE8                     	;# 
  3704  0FE9                     	;# 
  3705  0FEA                     	;# 
  3706  0FEB                     	;# 
  3707  0FED                     	;# 
  3708  0FEE                     	;# 
  3709  0FEF                     	;# 
  3710  0000                     	;# 
  3711  0001                     	;# 
  3712  0002                     	;# 
  3713  0003                     	;# 
  3714  0004                     	;# 
  3715  0005                     	;# 
  3716  0006                     	;# 
  3717  0007                     	;# 
  3718  0008                     	;# 
  3719  0009                     	;# 
  3720  000A                     	;# 
  3721  000B                     	;# 
  3722  000C                     	;# 
  3723  000D                     	;# 
  3724  000E                     	;# 
  3725  0010                     	;# 
  3726  0011                     	;# 
  3727  0012                     	;# 
  3728  0013                     	;# 
  3729  0016                     	;# 
  3730  0017                     	;# 
  3731  0018                     	;# 
  3732  001C                     	;# 
  3733  001C                     	;# 
  3734  001D                     	;# 
  3735  001D                     	;# 
  3736  001E                     	;# 
  3737  001F                     	;# 
  3738  008C                     	;# 
  3739  008C                     	;# 
  3740  008D                     	;# 
  3741  008E                     	;# 
  3742  008E                     	;# 
  3743  008F                     	;# 
  3744  0090                     	;# 
  3745  0090                     	;# 
  3746  0091                     	;# 
  3747  0093                     	;# 
  3748  0094                     	;# 
  3749  0095                     	;# 
  3750  0096                     	;# 
  3751  0097                     	;# 
  3752  0098                     	;# 
  3753  0099                     	;# 
  3754  009A                     	;# 
  3755  009B                     	;# 
  3756  009C                     	;# 
  3757  009D                     	;# 
  3758  009E                     	;# 
  3759  010C                     	;# 
  3760  010D                     	;# 
  3761  010E                     	;# 
  3762  010E                     	;# 
  3763  010F                     	;# 
  3764  0110                     	;# 
  3765  0110                     	;# 
  3766  0111                     	;# 
  3767  0112                     	;# 
  3768  0112                     	;# 
  3769  0113                     	;# 
  3770  0114                     	;# 
  3771  0114                     	;# 
  3772  0115                     	;# 
  3773  0116                     	;# 
  3774  0116                     	;# 
  3775  0117                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  0119                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011A                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011C                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011D                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011E                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  018C                     	;# 
  3802  018D                     	;# 
  3803  018E                     	;# 
  3804  018F                     	;# 
  3805  0190                     	;# 
  3806  0191                     	;# 
  3807  0192                     	;# 
  3808  0196                     	;# 
  3809  0197                     	;# 
  3810  0198                     	;# 
  3811  0199                     	;# 
  3812  019A                     	;# 
  3813  019B                     	;# 
  3814  019C                     	;# 
  3815  020C                     	;# 
  3816  020C                     	;# 
  3817  020D                     	;# 
  3818  020E                     	;# 
  3819  020F                     	;# 
  3820  020F                     	;# 
  3821  0210                     	;# 
  3822  0210                     	;# 
  3823  0211                     	;# 
  3824  0211                     	;# 
  3825  0212                     	;# 
  3826  0212                     	;# 
  3827  0213                     	;# 
  3828  0214                     	;# 
  3829  0215                     	;# 
  3830  0215                     	;# 
  3831  0216                     	;# 
  3832  0216                     	;# 
  3833  0217                     	;# 
  3834  0217                     	;# 
  3835  0218                     	;# 
  3836  0218                     	;# 
  3837  0219                     	;# 
  3838  021A                     	;# 
  3839  021B                     	;# 
  3840  021B                     	;# 
  3841  021C                     	;# 
  3842  021C                     	;# 
  3843  021D                     	;# 
  3844  021D                     	;# 
  3845  021E                     	;# 
  3846  021F                     	;# 
  3847  028C                     	;# 
  3848  028C                     	;# 
  3849  028D                     	;# 
  3850  028D                     	;# 
  3851  028E                     	;# 
  3852  028F                     	;# 
  3853  0290                     	;# 
  3854  0290                     	;# 
  3855  0291                     	;# 
  3856  0292                     	;# 
  3857  0292                     	;# 
  3858  0293                     	;# 
  3859  0293                     	;# 
  3860  0294                     	;# 
  3861  0295                     	;# 
  3862  0296                     	;# 
  3863  0296                     	;# 
  3864  0297                     	;# 
  3865  0298                     	;# 
  3866  0298                     	;# 
  3867  0299                     	;# 
  3868  0299                     	;# 
  3869  029A                     	;# 
  3870  029B                     	;# 
  3871  029C                     	;# 
  3872  029C                     	;# 
  3873  029D                     	;# 
  3874  030C                     	;# 
  3875  030C                     	;# 
  3876  030D                     	;# 
  3877  030E                     	;# 
  3878  030F                     	;# 
  3879  0310                     	;# 
  3880  0310                     	;# 
  3881  0311                     	;# 
  3882  0312                     	;# 
  3883  0313                     	;# 
  3884  0314                     	;# 
  3885  0314                     	;# 
  3886  0315                     	;# 
  3887  0316                     	;# 
  3888  0317                     	;# 
  3889  0318                     	;# 
  3890  0318                     	;# 
  3891  0319                     	;# 
  3892  031A                     	;# 
  3893  031B                     	;# 
  3894  031C                     	;# 
  3895  031C                     	;# 
  3896  031D                     	;# 
  3897  031E                     	;# 
  3898  031F                     	;# 
  3899  038C                     	;# 
  3900  038D                     	;# 
  3901  038E                     	;# 
  3902  0390                     	;# 
  3903  0391                     	;# 
  3904  0392                     	;# 
  3905  040C                     	;# 
  3906  040D                     	;# 
  3907  040E                     	;# 
  3908  040F                     	;# 
  3909  0410                     	;# 
  3910  0411                     	;# 
  3911  0416                     	;# 
  3912  0416                     	;# 
  3913  0417                     	;# 
  3914  0418                     	;# 
  3915  0418                     	;# 
  3916  0419                     	;# 
  3917  041A                     	;# 
  3918  041A                     	;# 
  3919  041B                     	;# 
  3920  041C                     	;# 
  3921  041C                     	;# 
  3922  041D                     	;# 
  3923  041E                     	;# 
  3924  041F                     	;# 
  3925  048C                     	;# 
  3926  048C                     	;# 
  3927  048D                     	;# 
  3928  048E                     	;# 
  3929  048F                     	;# 
  3930  048F                     	;# 
  3931  0490                     	;# 
  3932  0491                     	;# 
  3933  0492                     	;# 
  3934  0492                     	;# 
  3935  0493                     	;# 
  3936  0494                     	;# 
  3937  0495                     	;# 
  3938  0495                     	;# 
  3939  0496                     	;# 
  3940  0497                     	;# 
  3941  0498                     	;# 
  3942  0499                     	;# 
  3943  049A                     	;# 
  3944  049B                     	;# 
  3945  049C                     	;# 
  3946  049D                     	;# 
  3947  050C                     	;# 
  3948  050C                     	;# 
  3949  050D                     	;# 
  3950  050E                     	;# 
  3951  050F                     	;# 
  3952  050F                     	;# 
  3953  0510                     	;# 
  3954  0511                     	;# 
  3955  0512                     	;# 
  3956  0512                     	;# 
  3957  0513                     	;# 
  3958  0514                     	;# 
  3959  0515                     	;# 
  3960  0515                     	;# 
  3961  0516                     	;# 
  3962  0517                     	;# 
  3963  0518                     	;# 
  3964  0519                     	;# 
  3965  051A                     	;# 
  3966  051B                     	;# 
  3967  051C                     	;# 
  3968  051D                     	;# 
  3969  058C                     	;# 
  3970  058C                     	;# 
  3971  058D                     	;# 
  3972  058E                     	;# 
  3973  058F                     	;# 
  3974  058F                     	;# 
  3975  0590                     	;# 
  3976  0591                     	;# 
  3977  0592                     	;# 
  3978  0593                     	;# 
  3979  060C                     	;# 
  3980  060D                     	;# 
  3981  060E                     	;# 
  3982  060F                     	;# 
  3983  0610                     	;# 
  3984  0611                     	;# 
  3985  0612                     	;# 
  3986  0613                     	;# 
  3987  0614                     	;# 
  3988  0616                     	;# 
  3989  0617                     	;# 
  3990  0618                     	;# 
  3991  0619                     	;# 
  3992  061A                     	;# 
  3993  061B                     	;# 
  3994  061C                     	;# 
  3995  061D                     	;# 
  3996  061E                     	;# 
  3997  068C                     	;# 
  3998  068D                     	;# 
  3999  068E                     	;# 
  4000  068F                     	;# 
  4001  0690                     	;# 
  4002  0691                     	;# 
  4003  0692                     	;# 
  4004  0693                     	;# 
  4005  0694                     	;# 
  4006  070C                     	;# 
  4007  070D                     	;# 
  4008  070E                     	;# 
  4009  070F                     	;# 
  4010  0710                     	;# 
  4011  0711                     	;# 
  4012  0712                     	;# 
  4013  0713                     	;# 
  4014  0714                     	;# 
  4015  0716                     	;# 
  4016  0717                     	;# 
  4017  0718                     	;# 
  4018  0719                     	;# 
  4019  071A                     	;# 
  4020  071B                     	;# 
  4021  071C                     	;# 
  4022  071D                     	;# 
  4023  071E                     	;# 
  4024  0796                     	;# 
  4025  0797                     	;# 
  4026  0798                     	;# 
  4027  0799                     	;# 
  4028  079A                     	;# 
  4029  079B                     	;# 
  4030  080C                     	;# 
  4031  080D                     	;# 
  4032  080E                     	;# 
  4033  080F                     	;# 
  4034  0810                     	;# 
  4035  0811                     	;# 
  4036  0812                     	;# 
  4037  0813                     	;# 
  4038  0814                     	;# 
  4039  081A                     	;# 
  4040  081B                     	;# 
  4041  081C                     	;# 
  4042  081D                     	;# 
  4043  081E                     	;# 
  4044  081F                     	;# 
  4045  088C                     	;# 
  4046  088D                     	;# 
  4047  088E                     	;# 
  4048  088F                     	;# 
  4049  0890                     	;# 
  4050  0891                     	;# 
  4051  0892                     	;# 
  4052  0893                     	;# 
  4053  0895                     	;# 
  4054  0896                     	;# 
  4055  0897                     	;# 
  4056  0898                     	;# 
  4057  0899                     	;# 
  4058  089A                     	;# 
  4059  089B                     	;# 
  4060  090C                     	;# 
  4061  090E                     	;# 
  4062  090F                     	;# 
  4063  091F                     	;# 
  4064  091F                     	;# 
  4065  098F                     	;# 
  4066  098F                     	;# 
  4067  0990                     	;# 
  4068  0991                     	;# 
  4069  0992                     	;# 
  4070  0993                     	;# 
  4071  0994                     	;# 
  4072  0995                     	;# 
  4073  0996                     	;# 
  4074  0997                     	;# 
  4075  0E0F                     	;# 
  4076  0E10                     	;# 
  4077  0E11                     	;# 
  4078  0E12                     	;# 
  4079  0E13                     	;# 
  4080  0E14                     	;# 
  4081  0E15                     	;# 
  4082  0E16                     	;# 
  4083  0E17                     	;# 
  4084  0E18                     	;# 
  4085  0E19                     	;# 
  4086  0E1A                     	;# 
  4087  0E1B                     	;# 
  4088  0E1C                     	;# 
  4089  0E1D                     	;# 
  4090  0E1E                     	;# 
  4091  0E1F                     	;# 
  4092  0E20                     	;# 
  4093  0E21                     	;# 
  4094  0E22                     	;# 
  4095  0E23                     	;# 
  4096  0E24                     	;# 
  4097  0E25                     	;# 
  4098  0E26                     	;# 
  4099  0E27                     	;# 
  4100  0E28                     	;# 
  4101  0E29                     	;# 
  4102  0E2A                     	;# 
  4103  0E2B                     	;# 
  4104  0E2C                     	;# 
  4105  0E2D                     	;# 
  4106  0E2E                     	;# 
  4107  0E2F                     	;# 
  4108  0E30                     	;# 
  4109  0E31                     	;# 
  4110  0E32                     	;# 
  4111  0E33                     	;# 
  4112  0E34                     	;# 
  4113  0E35                     	;# 
  4114  0E36                     	;# 
  4115  0E37                     	;# 
  4116  0E8F                     	;# 
  4117  0E90                     	;# 
  4118  0E91                     	;# 
  4119  0E92                     	;# 
  4120  0E93                     	;# 
  4121  0E94                     	;# 
  4122  0E95                     	;# 
  4123  0E96                     	;# 
  4124  0E97                     	;# 
  4125  0E9C                     	;# 
  4126  0E9D                     	;# 
  4127  0E9E                     	;# 
  4128  0EA1                     	;# 
  4129  0EA2                     	;# 
  4130  0EA3                     	;# 
  4131  0EA4                     	;# 
  4132  0EA5                     	;# 
  4133  0EA9                     	;# 
  4134  0EAA                     	;# 
  4135  0EAB                     	;# 
  4136  0EAC                     	;# 
  4137  0EB1                     	;# 
  4138  0EB2                     	;# 
  4139  0EB3                     	;# 
  4140  0EB8                     	;# 
  4141  0EB9                     	;# 
  4142  0EBA                     	;# 
  4143  0EBB                     	;# 
  4144  0EBC                     	;# 
  4145  0EBD                     	;# 
  4146  0EBE                     	;# 
  4147  0EC3                     	;# 
  4148  0EC5                     	;# 
  4149  0EC6                     	;# 
  4150  0EC7                     	;# 
  4151  0EC8                     	;# 
  4152  0EC9                     	;# 
  4153  0ECA                     	;# 
  4154  0ECB                     	;# 
  4155  0ECC                     	;# 
  4156  0F10                     	;# 
  4157  0F11                     	;# 
  4158  0F12                     	;# 
  4159  0F13                     	;# 
  4160  0F14                     	;# 
  4161  0F15                     	;# 
  4162  0F16                     	;# 
  4163  0F17                     	;# 
  4164  0F18                     	;# 
  4165  0F19                     	;# 
  4166  0F1A                     	;# 
  4167  0F1B                     	;# 
  4168  0F1C                     	;# 
  4169  0F1D                     	;# 
  4170  0F1E                     	;# 
  4171  0F1F                     	;# 
  4172  0F20                     	;# 
  4173  0F21                     	;# 
  4174  0F22                     	;# 
  4175  0F23                     	;# 
  4176  0F24                     	;# 
  4177  0F25                     	;# 
  4178  0F26                     	;# 
  4179  0F27                     	;# 
  4180  0F38                     	;# 
  4181  0F39                     	;# 
  4182  0F3A                     	;# 
  4183  0F3B                     	;# 
  4184  0F3C                     	;# 
  4185  0F3D                     	;# 
  4186  0F3E                     	;# 
  4187  0F3F                     	;# 
  4188  0F40                     	;# 
  4189  0F41                     	;# 
  4190  0F43                     	;# 
  4191  0F44                     	;# 
  4192  0F45                     	;# 
  4193  0F46                     	;# 
  4194  0F47                     	;# 
  4195  0F48                     	;# 
  4196  0F49                     	;# 
  4197  0F4A                     	;# 
  4198  0F4B                     	;# 
  4199  0F4C                     	;# 
  4200  0F4E                     	;# 
  4201  0F4F                     	;# 
  4202  0F50                     	;# 
  4203  0F51                     	;# 
  4204  0F52                     	;# 
  4205  0F53                     	;# 
  4206  0F54                     	;# 
  4207  0F55                     	;# 
  4208  0F56                     	;# 
  4209  0F57                     	;# 
  4210  0F65                     	;# 
  4211  0F68                     	;# 
  4212  0F69                     	;# 
  4213  0F6A                     	;# 
  4214  0F6B                     	;# 
  4215  0FE4                     	;# 
  4216  0FE5                     	;# 
  4217  0FE6                     	;# 
  4218  0FE7                     	;# 
  4219  0FE8                     	;# 
  4220  0FE9                     	;# 
  4221  0FEA                     	;# 
  4222  0FEB                     	;# 
  4223  0FED                     	;# 
  4224  0FEE                     	;# 
  4225  0FEF                     	;_samples
  4226                           
  4227                           	psect	idataBANK1
  4228  17D6                     __pidataBANK1:	
  4229                           
  4230                           ;initializer for _presets
  4231  17D6  3400               	retlw	0
  4232  17D7  3446               	retlw	70
  4233  17D8  345F               	retlw	95
  4234  17D9  3469               	retlw	105
  4235  17DA  3478               	retlw	120
  4236                           
  4237                           ;initializer for _setpoint
  4238  17DB  3446               	retlw	70
  4239                           
  4240                           	psect	idataBANK2
  4241  089A                     __pidataBANK2:	
  4242                           
  4243                           ;initializer for ___cgram
  4244  089A  340C               	retlw	12
  4245  089B  3412               	retlw	18
  4246  089C  3412               	retlw	18
  4247  089D  340C               	retlw	12
  4248  089E  3400               	retlw	0
  4249  089F  3400               	retlw	0
  4250  08A0  3400               	retlw	0
  4251  08A1  3400               	retlw	0
  4252  08A2  340A               	retlw	10
  4253  08A3  3415               	retlw	21
  4254  08A4  3411               	retlw	17
  4255  08A5  340A               	retlw	10
  4256  08A6  3404               	retlw	4
  4257  08A7  3400               	retlw	0
  4258  08A8  3400               	retlw	0
  4259  08A9  3400               	retlw	0
  4260  08AA  340A               	retlw	10
  4261  08AB  341F               	retlw	31
  4262  08AC  341F               	retlw	31
  4263  08AD  340E               	retlw	14
  4264  08AE  3404               	retlw	4
  4265  08AF  3400               	retlw	0
  4266  08B0  3400               	retlw	0
  4267  08B1  3400               	retlw	0
  4268                           
  4269                           	psect	stringtext
  4270  1000                     __pstringtext:	
  4271  1000                     log@coeff:	
  4272  1000  3400               	retlw	0
  4273  1001  3400               	retlw	0
  4274  1002  3400               	retlw	0
  4275  1003  3400               	retlw	0
  4276  1004  3480               	retlw	128
  4277  1005  343F               	retlw	63
  4278  1006  34F0               	retlw	240
  4279  1007  34FF               	retlw	255
  4280  1008  34BE               	retlw	190
  4281  1009  34E2               	retlw	226
  4282  100A  34A9               	retlw	169
  4283  100B  343E               	retlw	62
  4284  100C  3483               	retlw	131
  4285  100D  3476               	retlw	118
  4286  100E  34BE               	retlw	190
  4287  100F  34AE               	retlw	174
  4288  1010  342B               	retlw	43
  4289  1011  343E               	retlw	62
  4290  1012  343C               	retlw	60
  4291  1013  34C3               	retlw	195
  4292  1014  34BD               	retlw	189
  4293  1015  34D2               	retlw	210
  4294  1016  3413               	retlw	19
  4295  1017  343D               	retlw	61
  4296  1018  3478               	retlw	120
  4297  1019  34D3               	retlw	211
  4298  101A  34BB               	retlw	187
  4299  101B                     __end_oflog@coeff:	
  4300  001E                     _T0CON0bits	set	30
  4301  001C                     _TMR0L	set	28
  4302  001D                     _TMR0H	set	29
  4303  001F                     _T0CON1	set	31
  4304  001E                     _T0CON0	set	30
  4305  0013                     _TRISC	set	19
  4306  0012                     _TRISB	set	18
  4307  0011                     _TRISA	set	17
  4308  0018                     _LATC	set	24
  4309  0017                     _LATB	set	23
  4310  0016                     _LATA	set	22
  4311  0064                     _RA4	set	100
  4312  0063                     _RA3	set	99
  4313  005F                     _GIE	set	95
  4314  0069                     _RB1	set	105
  4315  0068                     _RB0	set	104
  4316  006D                     _RB5	set	109
  4317  006C                     _RB4	set	108
  4318  006B                     _RB3	set	107
  4319  006A                     _RB2	set	106
  4320  008C                     _ADRESL	set	140
  4321  008D                     _ADRESH	set	141
  4322  0093                     _ADCON0bits	set	147
  4323  0093                     _ADCON0	set	147
  4324  009E                     _ADPCH	set	158
  4325  009D                     _ADACQ	set	157
  4326  009C                     _ADPRE	set	156
  4327  009B                     _ADCAP	set	155
  4328  009A                     _ADREF	set	154
  4329  0098                     _ADCLK	set	152
  4330  0097                     _ADSTAT	set	151
  4331  0099                     _ADACT	set	153
  4332  0096                     _ADCON3	set	150
  4333  0095                     _ADCON2	set	149
  4334  0094                     _ADCON1	set	148
  4335  0113                     _ADSTPTH	set	275
  4336  0112                     _ADSTPTL	set	274
  4337  0111                     _ADUTHH	set	273
  4338  0110                     _ADUTHL	set	272
  4339  010F                     _ADLTHH	set	271
  4340  010E                     _ADLTHL	set	270
  4341  010D                     _ADRPT	set	269
  4342  021F                     _CCPTMRS1bits	set	543
  4343  028E                     _T2CONbits	set	654
  4344  028C                     _T2TMR	set	652
  4345  028D                     _T2PR	set	653
  4346  0291                     _T2RST	set	657
  4347  028F                     _T2HLT	set	655
  4348  0290                     _T2CLKCON	set	656
  4349  028E                     _T2CON	set	654
  4350  038C                     _PWM6DCL	set	908
  4351  038D                     _PWM6DCH	set	909
  4352  038E                     _PWM6CON	set	910
  4353  0710                     _PIR4bits	set	1808
  4354  070C                     _PIR0bits	set	1804
  4355  0716                     _PIE0bits	set	1814
  4356  3865                     _TMR0IF	set	14437
  4357  0892                     _OSCTUNE	set	2194
  4358  0893                     _OSCFRQ	set	2195
  4359  0891                     _OSCEN	set	2193
  4360  088F                     _OSCCON3	set	2191
  4361  088D                     _OSCCON1	set	2189
  4362  090C                     _FVRCON	set	2316
  4363  0E8F                     _PPSLOCKbits	set	3727
  4364  0E8F                     _PPSLOCK	set	3727
  4365  0F11                     _RA1PPS	set	3857
  4366  0F4E                     _ANSELC	set	3918
  4367  0F43                     _ANSELB	set	3907
  4368  0F38                     _ANSELA	set	3896
  4369  0F65                     _WPUE	set	3941
  4370  0F4F                     _WPUC	set	3919
  4371  0F44                     _WPUB	set	3908
  4372  0F39                     _WPUA	set	3897
  4373  101B                     STR_2:	
  4374  101B  3453               	retlw	83	;'S'
  4375  101C  3465               	retlw	101	;'e'
  4376  101D  3474               	retlw	116	;'t'
  4377  101E  3470               	retlw	112	;'p'
  4378  101F  346F               	retlw	111	;'o'
  4379  1020  3469               	retlw	105	;'i'
  4380  1021  346E               	retlw	110	;'n'
  4381  1022  3474               	retlw	116	;'t'
  4382  1023  343F               	retlw	63	;'?'
  4383  1024  3400               	retlw	0
  4384  1025                     STR_1:	
  4385  1025  3454               	retlw	84	;'T'
  4386  1026  3469               	retlw	105	;'i'
  4387  1027  346D               	retlw	109	;'m'
  4388  1028  3465               	retlw	101	;'e'
  4389  1029  343A               	retlw	58	;':'
  4390  102A  3400               	retlw	0
  4391  101B                     
  4392                           ; #config settings
  4393  0000                     
  4394                           	psect	cinit
  4395  07C7                     start_initialization:	
  4396  07C7                     __initialization:		;BIGRAM
  4397                           
  4398                           ; Initialize objects allocated to BANK1
  4399  07C7  30D6               	movlw	low __pidataBANK1
  4400  07C8  0084               	movwf	4
  4401  07C9  3097               	movlw	(high __pidataBANK1)| (0+128)
  4402  07CA  0085               	movwf	5
  4403  07CB  30E4               	movlw	low __pdataBANK1
  4404  07CC  0086               	movwf	6
  4405  07CD  3000               	movlw	high __pdataBANK1
  4406  07CE  0087               	movwf	7
  4407  07CF  3000               	movlw	0
  4408  07D0  00FF               	movwf	btemp+1
  4409  07D1  3006               	movlw	6
  4410  07D2  3188  2005  3187   	fcall	init_ram
  4411                           
  4412                           ; Initialize objects allocated to BANK2
  4413  07D5  309A               	movlw	low __pidataBANK2
  4414  07D6  0084               	movwf	4
  4415  07D7  3088               	movlw	(high __pidataBANK2)| (0+128)
  4416  07D8  0085               	movwf	5
  4417  07D9  3020               	movlw	low __pdataBANK2
  4418  07DA  0086               	movwf	6
  4419  07DB  3001               	movlw	high __pdataBANK2
  4420  07DC  0087               	movwf	7
  4421  07DD  3000               	movlw	0
  4422  07DE  00FF               	movwf	btemp+1
  4423  07DF  3018               	movlw	24
  4424  07E0  3188  2005  3187   	fcall	init_ram
  4425                           
  4426                           ; Clear objects allocated to BIGRAM
  4427  07E3  308C               	movlw	low (0+9100)
  4428  07E4  0084               	movwf	4
  4429  07E5  3023               	movlw	high (0+9100)
  4430  07E6  0085               	movwf	5
  4431  07E7  3064               	movlw	100
  4432  07E8  00FE               	movwf	btemp
  4433  07E9  3000               	movlw	0
  4434  07EA  00FF               	movwf	btemp+1
  4435  07EB  3197  27F4  3187   	fcall	clear_ram0
  4436                           
  4437                           ; Clear objects allocated to BANK0
  4438  07EE  01EB               	clrf	__pbssBANK0& (0+127)
  4439  07EF  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4440  07F0  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4441  07F1  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4442  07F2  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  4443                           
  4444                           ; Clear objects allocated to BANK1
  4445  07F3  30C8               	movlw	low __pbssBANK1
  4446  07F4  0084               	movwf	4
  4447  07F5  3000               	movlw	high __pbssBANK1
  4448  07F6  0085               	movwf	5
  4449  07F7  301C               	movlw	28
  4450  07F8  00FE               	movwf	btemp
  4451  07F9  3000               	movlw	0
  4452  07FA  00FF               	movwf	btemp+1
  4453  07FB  3197  27F4         	fcall	clear_ram0
  4454  07FD                     end_of_initialization:	
  4455                           ;End of C runtime variable initialization code
  4456                           
  4457  07FD                     __end_of__initialization:	
  4458  07FD  0020               	movlb	0
  4459  07FE  3184  2CAF         	ljmp	_main	;jump to C main() function
  4460                           
  4461                           	psect	bssBANK0
  4462  006B                     __pbssBANK0:	
  4463  006B                     _pidMinOutput:	
  4464  006B                     	ds	2
  4465  006D                     _x:	
  4466  006D                     	ds	1
  4467  006E                     _upCount:	
  4468  006E                     	ds	1
  4469  006F                     _downCount:	
  4470  006F                     	ds	1
  4471                           
  4472                           	psect	bssBANK1
  4473  00C8                     __pbssBANK1:	
  4474  00C8                     LCD_Write_Int@F14394:	
  4475  00C8                     	ds	5
  4476  00CD                     _pidPrevInput:	
  4477  00CD                     	ds	3
  4478  00D0                     _pidIntegrated:	
  4479  00D0                     	ds	3
  4480  00D3                     _PID_Kd:	
  4481  00D3                     	ds	3
  4482  00D6                     _PID_Ki:	
  4483  00D6                     	ds	3
  4484  00D9                     _PID_Kp:	
  4485  00D9                     	ds	3
  4486  00DC                     _errno:	
  4487  00DC                     	ds	2
  4488  00DE                     _pidMaxOutput:	
  4489  00DE                     	ds	2
  4490  00E0                     main@sampleIndex:	
  4491  00E0                     	ds	2
  4492  00E2                     _toggleCount:	
  4493  00E2                     	ds	1
  4494  00E3                     _oldSetpoint:	
  4495  00E3                     	ds	1
  4496                           
  4497                           	psect	dataBANK1
  4498  00E4                     __pdataBANK1:	
  4499  00E4                     _presets:	
  4500  00E4                     	ds	5
  4501  00E9                     _setpoint:	
  4502  00E9                     	ds	1
  4503                           
  4504                           	psect	dataBANK2
  4505  0120                     __pdataBANK2:	
  4506  0120                     ___cgram:	
  4507  0120                     	ds	24
  4508                           
  4509                           	psect	inittext
  4510  0805                     init_ram:	
  4511  0805  00FE               	movwf	126
  4512  0806                     initloop:	
  4513  0806  0012               	moviw fsr0++
  4514  0807  001E               	movwi fsr1++
  4515  0808  3001               	movlw	1
  4516  0809  02FE               	subwf	126,f
  4517  080A  3000               	movlw	0
  4518  080B  3BFF               	subwfb	127,f
  4519  080C  087F               	movf	127,w
  4520  080D  047E               	iorwf	126,w
  4521  080E  1903               	btfsc	3,2
  4522  080F  3400               	retlw	0
  4523  0810  2806               	goto	initloop
  4524                           
  4525                           	psect	clrtext
  4526  17F4                     clear_ram0:	
  4527                           ;	Called with FSR0 containing the base address, and
  4528                           ;	btemp/btemp+1 has the size to clear
  4529                           
  4530  17F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4531  17F5                     clrloop0:	
  4532  17F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4533  17F6  3101               	addfsr 0,1
  4534  17F7  3001               	movlw	1
  4535  17F8  02FE               	subwf	126,f
  4536  17F9  3000               	movlw	0
  4537  17FA  3BFF               	subwfb	127,f
  4538  17FB  087F               	movf	127,w
  4539  17FC  047E               	iorwf	126,w
  4540  17FD  1903               	btfsc	3,2
  4541  17FE  3400               	retlw	0	;all done for this memory range, return
  4542  17FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  4543                           
  4544                           	psect	cstackBANK1
  4545  00A0                     __pcstackBANK1:	
  4546  00A0                     ??_main:	
  4547                           
  4548                           ; 1 bytes @ 0x0
  4549  00A0                     	ds	14
  4550  00AE                     main@R:	
  4551                           
  4552                           ; 3 bytes @ 0xE
  4553  00AE                     	ds	3
  4554  00B1                     _main$1063:	
  4555                           
  4556                           ; 3 bytes @ 0x11
  4557  00B1                     	ds	3
  4558  00B4                     main@PWM_Output:	
  4559                           
  4560                           ; 2 bytes @ 0x14
  4561  00B4                     	ds	2
  4562  00B6                     main@minutes:	
  4563                           
  4564                           ; 2 bytes @ 0x16
  4565  00B6                     	ds	2
  4566  00B8                     main@seconds:	
  4567                           
  4568                           ; 2 bytes @ 0x18
  4569  00B8                     	ds	2
  4570  00BA                     main@counter:	
  4571                           
  4572                           ; 2 bytes @ 0x1A
  4573  00BA                     	ds	2
  4574  00BC                     main@readTemperature:	
  4575                           
  4576                           ; 2 bytes @ 0x1C
  4577  00BC                     	ds	2
  4578  00BE                     main@toggle:	
  4579                           
  4580                           ; 1 bytes @ 0x1E
  4581  00BE                     	ds	1
  4582  00BF                     main@displayTemp:	
  4583                           
  4584                           ; 2 bytes @ 0x1F
  4585  00BF                     	ds	2
  4586  00C1                     main@totals:	
  4587                           
  4588                           ; 4 bytes @ 0x21
  4589  00C1                     	ds	4
  4590  00C5                     main@steinhart:	
  4591                           
  4592                           ; 3 bytes @ 0x25
  4593  00C5                     	ds	3
  4594                           
  4595                           	psect	cstackCOMMON
  4596  0070                     __pcstackCOMMON:	
  4597  0070                     ?_LCD_Cmd:	
  4598  0070                     ?_LCD_Write_Char:	
  4599                           ; 1 bytes @ 0x0
  4600                           
  4601  0070                     ?_OSCILLATOR_Initialize:	
  4602                           ; 1 bytes @ 0x0
  4603                           
  4604  0070                     ??_OSCILLATOR_Initialize:	
  4605                           ; 1 bytes @ 0x0
  4606                           
  4607  0070                     ?_ADCC_Initialize:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0070                     ??_ADCC_Initialize:	
  4611                           ; 1 bytes @ 0x0
  4612                           
  4613  0070                     ?_PWM6_Initialize:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0070                     ??_PWM6_Initialize:	
  4617                           ; 1 bytes @ 0x0
  4618                           
  4619  0070                     ?_TMR0_Initialize:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0070                     ??_TMR0_Initialize:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0070                     ?_TMR2_Initialize:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     ??_TMR2_Initialize:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0070                     ?_Init_PID:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0070                     ??_Init_PID:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0070                     ?_readButtons:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_tempSetpoint:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ?_InitCustomChars:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ?_LCD_Port:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0070                     ??_LCD_Port:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0070                     ?_LCD_Clear:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     ?_LCD_Init:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ?_PIN_MANAGER_Initialize:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0070                     ??_PIN_MANAGER_Initialize:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0070                     ?_SYSTEM_Initialize:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0070                     ?_PWM6_LoadDutyValue:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0070                     ?_main:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0070                     ?_ADCC_GetSingleConversion:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     ?___wmul:	
  4677                           ; 2 bytes @ 0x0
  4678                           
  4679  0070                     ?___awdiv:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682  0070                     ?___awmod:	
  4683                           ; 2 bytes @ 0x0
  4684                           
  4685  0070                     ?___ftpack:	
  4686                           ; 2 bytes @ 0x0
  4687                           
  4688  0070                     ?_frexp:	
  4689                           ; 3 bytes @ 0x0
  4690                           
  4691  0070                     ?___ftneg:	
  4692                           ; 3 bytes @ 0x0
  4693                           
  4694  0070                     ?___aldiv:	
  4695                           ; 3 bytes @ 0x0
  4696                           
  4697  0070                     LCD_Port@a:	
  4698                           ; 4 bytes @ 0x0
  4699                           
  4700  0070                     PIN_MANAGER_Initialize@state:	
  4701                           ; 1 bytes @ 0x0
  4702                           
  4703  0070                     PWM6_LoadDutyValue@dutyValue:	
  4704                           ; 1 bytes @ 0x0
  4705                           
  4706  0070                     ___wmul@multiplier:	
  4707                           ; 2 bytes @ 0x0
  4708                           
  4709  0070                     ___awdiv@divisor:	
  4710                           ; 2 bytes @ 0x0
  4711                           
  4712  0070                     ___awmod@divisor:	
  4713                           ; 2 bytes @ 0x0
  4714                           
  4715  0070                     ___ftpack@arg:	
  4716                           ; 2 bytes @ 0x0
  4717                           
  4718  0070                     ___ftneg@f1:	
  4719                           ; 3 bytes @ 0x0
  4720                           
  4721  0070                     frexp@value:	
  4722                           ; 3 bytes @ 0x0
  4723                           
  4724  0070                     ___aldiv@divisor:	
  4725                           ; 3 bytes @ 0x0
  4726                           
  4727                           
  4728                           ; 4 bytes @ 0x0
  4729  0070                     	ds	1
  4730  0071                     ??_LCD_Cmd:	
  4731  0071                     ??_LCD_Write_Char:	
  4732                           ; 1 bytes @ 0x1
  4733                           
  4734  0071                     LCD_Cmd@a:	
  4735                           ; 1 bytes @ 0x1
  4736                           
  4737                           
  4738                           ; 1 bytes @ 0x1
  4739  0071                     	ds	1
  4740  0072                     ??_LCD_Clear:	
  4741  0072                     ?_LCD_Set_Cursor:	
  4742                           ; 1 bytes @ 0x2
  4743                           
  4744  0072                     ??_LCD_Init:	
  4745                           ; 1 bytes @ 0x2
  4746                           
  4747  0072                     ??_PWM6_LoadDutyValue:	
  4748                           ; 1 bytes @ 0x2
  4749                           
  4750  0072                     LCD_Set_Cursor@y:	
  4751                           ; 1 bytes @ 0x2
  4752                           
  4753  0072                     LCD_Write_Char@temp:	
  4754                           ; 1 bytes @ 0x2
  4755                           
  4756  0072                     ___wmul@multiplicand:	
  4757                           ; 1 bytes @ 0x2
  4758                           
  4759  0072                     ___awdiv@dividend:	
  4760                           ; 2 bytes @ 0x2
  4761                           
  4762  0072                     ___awmod@dividend:	
  4763                           ; 2 bytes @ 0x2
  4764                           
  4765                           
  4766                           ; 2 bytes @ 0x2
  4767  0072                     	ds	1
  4768  0073                     ??_LCD_Set_Cursor:	
  4769  0073                     ??_ADCC_GetSingleConversion:	
  4770                           ; 1 bytes @ 0x3
  4771                           
  4772  0073                     ??___ftneg:	
  4773                           ; 1 bytes @ 0x3
  4774                           
  4775  0073                     LCD_Init@style:	
  4776                           ; 1 bytes @ 0x3
  4777                           
  4778  0073                     LCD_Write_Char@y:	
  4779                           ; 1 bytes @ 0x3
  4780                           
  4781  0073                     ADCC_GetSingleConversion@channel:	
  4782                           ; 1 bytes @ 0x3
  4783                           
  4784  0073                     ___ftpack@exp:	
  4785                           ; 1 bytes @ 0x3
  4786                           
  4787  0073                     frexp@eptr:	
  4788                           ; 1 bytes @ 0x3
  4789                           
  4790                           
  4791                           ; 1 bytes @ 0x3
  4792  0073                     	ds	1
  4793  0074                     ??_frexp:	
  4794  0074                     ??___wmul:	
  4795                           ; 1 bytes @ 0x4
  4796                           
  4797  0074                     ??___awdiv:	
  4798                           ; 1 bytes @ 0x4
  4799                           
  4800  0074                     ??___awmod:	
  4801                           ; 1 bytes @ 0x4
  4802                           
  4803  0074                     LCD_Write_Char@a:	
  4804                           ; 1 bytes @ 0x4
  4805                           
  4806  0074                     ___ftpack@sign:	
  4807                           ; 1 bytes @ 0x4
  4808                           
  4809  0074                     ___wmul@product:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0074                     ___aldiv@dividend:	
  4813                           ; 2 bytes @ 0x4
  4814                           
  4815                           
  4816                           ; 4 bytes @ 0x4
  4817  0074                     	ds	1
  4818  0075                     ??___ftpack:	
  4819  0075                     ??_InitCustomChars:	
  4820                           ; 1 bytes @ 0x5
  4821                           
  4822  0075                     ?_LCD_Write_String:	
  4823                           ; 1 bytes @ 0x5
  4824                           
  4825  0075                     LCD_Set_Cursor@x:	
  4826                           ; 1 bytes @ 0x5
  4827                           
  4828  0075                     ___awdiv@counter:	
  4829                           ; 1 bytes @ 0x5
  4830                           
  4831  0075                     ___awmod@counter:	
  4832                           ; 1 bytes @ 0x5
  4833                           
  4834  0075                     LCD_Write_String@a:	
  4835                           ; 1 bytes @ 0x5
  4836                           
  4837                           
  4838                           ; 2 bytes @ 0x5
  4839  0075                     	ds	1
  4840  0076                     ?___lwdiv:	
  4841  0076                     InitCustomChars@i:	
  4842                           ; 2 bytes @ 0x6
  4843                           
  4844  0076                     LCD_Set_Cursor@z:	
  4845                           ; 1 bytes @ 0x6
  4846                           
  4847  0076                     ___awdiv@sign:	
  4848                           ; 1 bytes @ 0x6
  4849                           
  4850  0076                     ___awmod@sign:	
  4851                           ; 1 bytes @ 0x6
  4852                           
  4853  0076                     ___lwdiv@divisor:	
  4854                           ; 1 bytes @ 0x6
  4855                           
  4856                           
  4857                           ; 2 bytes @ 0x6
  4858  0076                     	ds	1
  4859  0077                     ??_LCD_Write_String:	
  4860  0077                     ??_SYSTEM_Initialize:	
  4861                           ; 1 bytes @ 0x7
  4862                           
  4863  0077                     LCD_Set_Cursor@w:	
  4864                           ; 1 bytes @ 0x7
  4865                           
  4866  0077                     ___awdiv@quotient:	
  4867                           ; 1 bytes @ 0x7
  4868                           
  4869                           
  4870                           ; 2 bytes @ 0x7
  4871  0077                     	ds	1
  4872  0078                     ??___aldiv:	
  4873  0078                     ?___awtoft:	
  4874                           ; 1 bytes @ 0x8
  4875                           
  4876  0078                     ?___lbtoft:	
  4877                           ; 3 bytes @ 0x8
  4878                           
  4879  0078                     ?___lwtoft:	
  4880                           ; 3 bytes @ 0x8
  4881                           
  4882  0078                     LCD_Set_Cursor@temp:	
  4883                           ; 3 bytes @ 0x8
  4884                           
  4885  0078                     LCD_Write_String@i:	
  4886                           ; 1 bytes @ 0x8
  4887                           
  4888  0078                     ___awtoft@c:	
  4889                           ; 2 bytes @ 0x8
  4890                           
  4891  0078                     ___lwdiv@dividend:	
  4892                           ; 2 bytes @ 0x8
  4893                           
  4894  0078                     ___lwtoft@c:	
  4895                           ; 2 bytes @ 0x8
  4896                           
  4897                           
  4898                           ; 2 bytes @ 0x8
  4899  0078                     	ds	1
  4900  0079                     ?_LCD_Write_Int:	
  4901  0079                     LCD_Write_Int@value:	
  4902                           ; 1 bytes @ 0x9
  4903                           
  4904                           
  4905                           ; 2 bytes @ 0x9
  4906  0079                     	ds	1
  4907  007A                     ??___lwdiv:	
  4908                           
  4909                           ; 1 bytes @ 0xA
  4910  007A                     	ds	1
  4911  007B                     ??___awtoft:	
  4912  007B                     ??___lwtoft:	
  4913                           ; 1 bytes @ 0xB
  4914                           
  4915  007B                     LCD_Write_Int@fieldLength:	
  4916                           ; 1 bytes @ 0xB
  4917                           
  4918  007B                     ___lbtoft@c:	
  4919                           ; 1 bytes @ 0xB
  4920                           
  4921  007B                     ___lwdiv@quotient:	
  4922                           ; 1 bytes @ 0xB
  4923                           
  4924                           
  4925                           ; 2 bytes @ 0xB
  4926  007B                     	ds	1
  4927  007C                     LCD_Write_Int@numPlaces:	
  4928                           
  4929                           ; 1 bytes @ 0xC
  4930  007C                     	ds	1
  4931  007D                     LCD_Write_Int@sign:	
  4932  007D                     ___awtoft@sign:	
  4933                           ; 1 bytes @ 0xD
  4934                           
  4935  007D                     ___lwdiv@counter:	
  4936                           ; 1 bytes @ 0xD
  4937                           
  4938                           
  4939                           ; 1 bytes @ 0xD
  4940  007D                     	ds	1
  4941  007E                     ??_PID_Calculate:	
  4942  007E                     ??_eval_poly:	
  4943                           ; 1 bytes @ 0xE
  4944                           
  4945  007E                     ??___ftsub:	
  4946                           ; 1 bytes @ 0xE
  4947                           
  4948                           
  4949                           	psect	cstackBANK0
  4950  0020                     __pcstackBANK0:	
  4951                           ; 1 bytes @ 0xE
  4952                           
  4953  0020                     ??_LCD_Write_Int:	
  4954  0020                     ??___lbtoft:	
  4955                           ; 1 bytes @ 0x0
  4956                           
  4957  0020                     ?___ftdiv:	
  4958                           ; 1 bytes @ 0x0
  4959                           
  4960  0020                     ?___ftmul:	
  4961                           ; 3 bytes @ 0x0
  4962                           
  4963  0020                     ___aldiv@counter:	
  4964                           ; 3 bytes @ 0x0
  4965                           
  4966  0020                     ___ftdiv@f2:	
  4967                           ; 1 bytes @ 0x0
  4968                           
  4969  0020                     ___ftmul@f1:	
  4970                           ; 3 bytes @ 0x0
  4971                           
  4972                           
  4973                           ; 3 bytes @ 0x0
  4974  0020                     	ds	1
  4975  0021                     ___aldiv@sign:	
  4976                           
  4977                           ; 1 bytes @ 0x1
  4978  0021                     	ds	1
  4979  0022                     ___aldiv@quotient:	
  4980                           
  4981                           ; 4 bytes @ 0x2
  4982  0022                     	ds	1
  4983  0023                     ___ftdiv@f1:	
  4984  0023                     ___ftmul@f2:	
  4985                           ; 3 bytes @ 0x3
  4986                           
  4987                           
  4988                           ; 3 bytes @ 0x3
  4989  0023                     	ds	2
  4990  0025                     LCD_Write_Int@str:	
  4991                           
  4992                           ; 5 bytes @ 0x5
  4993  0025                     	ds	1
  4994  0026                     ??___ftdiv:	
  4995  0026                     ??___ftmul:	
  4996                           ; 1 bytes @ 0x6
  4997                           
  4998                           
  4999                           ; 1 bytes @ 0x6
  5000  0026                     	ds	4
  5001  002A                     ___ftdiv@cntr:	
  5002  002A                     ___ftmul@exp:	
  5003                           ; 1 bytes @ 0xA
  5004                           
  5005  002A                     LCD_Write_Int@j:	
  5006                           ; 1 bytes @ 0xA
  5007                           
  5008                           
  5009                           ; 2 bytes @ 0xA
  5010  002A                     	ds	1
  5011  002B                     ___ftdiv@f3:	
  5012  002B                     ___ftmul@f3_as_product:	
  5013                           ; 3 bytes @ 0xB
  5014                           
  5015                           
  5016                           ; 3 bytes @ 0xB
  5017  002B                     	ds	1
  5018  002C                     LCD_Write_Int@i:	
  5019                           
  5020                           ; 2 bytes @ 0xC
  5021  002C                     	ds	2
  5022  002E                     ??_readButtons:	
  5023  002E                     ___ftdiv@exp:	
  5024                           ; 1 bytes @ 0xE
  5025                           
  5026  002E                     ___ftmul@cntr:	
  5027                           ; 1 bytes @ 0xE
  5028                           
  5029                           
  5030                           ; 1 bytes @ 0xE
  5031  002E                     	ds	1
  5032  002F                     ___ftdiv@sign:	
  5033  002F                     ___ftmul@sign:	
  5034                           ; 1 bytes @ 0xF
  5035                           
  5036                           
  5037                           ; 1 bytes @ 0xF
  5038  002F                     	ds	1
  5039  0030                     ?___ftadd:	
  5040  0030                     ___ftadd@f1:	
  5041                           ; 3 bytes @ 0x10
  5042                           
  5043                           
  5044                           ; 3 bytes @ 0x10
  5045  0030                     	ds	1
  5046  0031                     ??_tempSetpoint:	
  5047                           
  5048                           ; 1 bytes @ 0x11
  5049  0031                     	ds	2
  5050  0033                     ___ftadd@f2:	
  5051                           
  5052                           ; 3 bytes @ 0x13
  5053  0033                     	ds	1
  5054  0034                     tempSetpoint@counter:	
  5055                           
  5056                           ; 1 bytes @ 0x14
  5057  0034                     	ds	2
  5058  0036                     ??___ftadd:	
  5059                           
  5060                           ; 1 bytes @ 0x16
  5061  0036                     	ds	4
  5062  003A                     ___ftadd@sign:	
  5063                           
  5064                           ; 1 bytes @ 0x1A
  5065  003A                     	ds	1
  5066  003B                     ___ftadd@exp2:	
  5067                           
  5068                           ; 1 bytes @ 0x1B
  5069  003B                     	ds	1
  5070  003C                     ___ftadd@exp1:	
  5071                           
  5072                           ; 1 bytes @ 0x1C
  5073  003C                     	ds	1
  5074  003D                     ?___ftge:	
  5075  003D                     ?_eval_poly:	
  5076                           ; 1 bit 
  5077                           
  5078  003D                     ?___ftsub:	
  5079                           ; 3 bytes @ 0x1D
  5080                           
  5081  003D                     ___ftge@ff1:	
  5082                           ; 3 bytes @ 0x1D
  5083                           
  5084  003D                     ___ftsub@f2:	
  5085                           ; 3 bytes @ 0x1D
  5086                           
  5087  003D                     eval_poly@x:	
  5088                           ; 3 bytes @ 0x1D
  5089                           
  5090                           
  5091                           ; 3 bytes @ 0x1D
  5092  003D                     	ds	3
  5093  0040                     eval_poly@d:	
  5094  0040                     ___ftge@ff2:	
  5095                           ; 2 bytes @ 0x20
  5096                           
  5097  0040                     ___ftsub@f1:	
  5098                           ; 3 bytes @ 0x20
  5099                           
  5100                           
  5101                           ; 3 bytes @ 0x20
  5102  0040                     	ds	2
  5103  0042                     eval_poly@n:	
  5104                           
  5105                           ; 2 bytes @ 0x22
  5106  0042                     	ds	1
  5107  0043                     ??___ftge:	
  5108                           
  5109                           ; 1 bytes @ 0x23
  5110  0043                     	ds	1
  5111  0044                     eval_poly@res:	
  5112                           
  5113                           ; 3 bytes @ 0x24
  5114  0044                     	ds	2
  5115  0046                     ?_PID_Calculate:	
  5116  0046                     PID_Calculate@setpoint:	
  5117                           ; 3 bytes @ 0x26
  5118                           
  5119                           
  5120                           ; 2 bytes @ 0x26
  5121  0046                     	ds	1
  5122  0047                     ?_log:	
  5123  0047                     log@x:	
  5124                           ; 3 bytes @ 0x27
  5125                           
  5126                           
  5127                           ; 3 bytes @ 0x27
  5128  0047                     	ds	1
  5129  0048                     PID_Calculate@temp:	
  5130                           
  5131                           ; 3 bytes @ 0x28
  5132  0048                     	ds	2
  5133  004A                     ??_log:	
  5134                           
  5135                           ; 1 bytes @ 0x2A
  5136  004A                     	ds	1
  5137  004B                     log@exponent:	
  5138  004B                     PID_Calculate@errorValue:	
  5139                           ; 2 bytes @ 0x2B
  5140                           
  5141                           
  5142                           ; 3 bytes @ 0x2B
  5143  004B                     	ds	3
  5144  004E                     _PID_Calculate$1064:	
  5145                           
  5146                           ; 3 bytes @ 0x2E
  5147  004E                     	ds	3
  5148  0051                     PID_Calculate@derivativeValue:	
  5149                           
  5150                           ; 3 bytes @ 0x31
  5151  0051                     	ds	3
  5152  0054                     PID_Calculate@pidPrevError:	
  5153                           
  5154                           ; 3 bytes @ 0x34
  5155  0054                     	ds	3
  5156  0057                     PID_Calculate@Result:	
  5157                           
  5158                           ; 3 bytes @ 0x37
  5159  0057                     	ds	3
  5160  005A                     PID_Calculate@error:	
  5161                           
  5162                           ; 3 bytes @ 0x3A
  5163  005A                     	ds	3
  5164  005D                     ?___fttol:	
  5165  005D                     ___fttol@f1:	
  5166                           ; 4 bytes @ 0x3D
  5167                           
  5168                           
  5169                           ; 3 bytes @ 0x3D
  5170  005D                     	ds	4
  5171  0061                     ??___fttol:	
  5172                           
  5173                           ; 1 bytes @ 0x41
  5174  0061                     	ds	4
  5175  0065                     ___fttol@sign1:	
  5176                           
  5177                           ; 1 bytes @ 0x45
  5178  0065                     	ds	1
  5179  0066                     ___fttol@lval:	
  5180                           
  5181                           ; 4 bytes @ 0x46
  5182  0066                     	ds	4
  5183  006A                     ___fttol@exp1:	
  5184                           
  5185                           ; 1 bytes @ 0x4A
  5186  006A                     	ds	1
  5187                           
  5188                           	psect	maintext
  5189  04AF                     __pmaintext:	
  5190 ;;
  5191 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  5192 ;;
  5193 ;; *************** function _main *****************
  5194 ;; Defined at:
  5195 ;;		line 13 in file "main.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  totals          4   33[BANK1 ] long 
  5200 ;;  steinhart       3   37[BANK1 ] float 
  5201 ;;  R               3   14[BANK1 ] float 
  5202 ;;  displayTemp     2   31[BANK1 ] unsigned int 
  5203 ;;  readTemperat    2   28[BANK1 ] unsigned int 
  5204 ;;  counter         2   26[BANK1 ] unsigned int 
  5205 ;;  seconds         2   24[BANK1 ] unsigned int 
  5206 ;;  minutes         2   22[BANK1 ] unsigned int 
  5207 ;;  PWM_Output      2   20[BANK1 ] unsigned int 
  5208 ;;  readTemperat    2    0        unsigned int 
  5209 ;;  toggle          1   30[BANK1 ] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : B1F/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:       40 bytes
  5224 ;; Hardware stack levels required when called:    5
  5225 ;; This function calls:
  5226 ;;		_ADCC_GetSingleConversion
  5227 ;;		_LCD_Set_Cursor
  5228 ;;		_LCD_Write_Char
  5229 ;;		_LCD_Write_Int
  5230 ;;		_LCD_Write_String
  5231 ;;		_PID_Calculate
  5232 ;;		_PWM6_LoadDutyValue
  5233 ;;		_SYSTEM_Initialize
  5234 ;;		___aldiv
  5235 ;;		___ftadd
  5236 ;;		___ftdiv
  5237 ;;		___ftge
  5238 ;;		___ftmul
  5239 ;;		___ftneg
  5240 ;;		___ftsub
  5241 ;;		___fttol
  5242 ;;		___lbtoft
  5243 ;;		___lwdiv
  5244 ;;		___lwtoft
  5245 ;;		___wmul
  5246 ;;		_log
  5247 ;;		_readButtons
  5248 ;;		_tempSetpoint
  5249 ;; This function is called by:
  5250 ;;		Startup code after reset
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function _main
  5256  04AF                     _main:	
  5257                           
  5258                           ;main.c: 15: SYSTEM_Initialize();
  5259                           
  5260                           ;incstack = 0
  5261                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5262  04AF  318A  2236  3184   	fcall	_SYSTEM_Initialize
  5263                           
  5264                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  5265  04B2  0021               	movlb	1	; select bank1
  5266  04B3  01B4               	clrf	main@PWM_Output^(0+128)
  5267  04B4  01B5               	clrf	(main@PWM_Output+1)^(0+128)
  5268  04B5  01B8               	clrf	main@seconds^(0+128)
  5269  04B6  01B9               	clrf	(main@seconds+1)^(0+128)
  5270  04B7  01BA               	clrf	main@counter^(0+128)
  5271  04B8  01BB               	clrf	(main@counter+1)^(0+128)
  5272  04B9  01B6               	clrf	main@minutes^(0+128)
  5273  04BA  01B7               	clrf	(main@minutes+1)^(0+128)
  5274                           
  5275                           ;main.c: 19: uint8_t toggle = 0;
  5276  04BB  01BE               	clrf	main@toggle^(0+128)
  5277                           
  5278                           ;main.c: 21: float R, steinhart;
  5279                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5280                           ;main.c: 25: int32_t totals = 0;
  5281  04BC  3000               	movlw	0
  5282  04BD  00C4               	movwf	(main@totals+3)^(0+128)
  5283  04BE  3000               	movlw	0
  5284  04BF  00C3               	movwf	(main@totals+2)^(0+128)
  5285  04C0  3000               	movlw	0
  5286  04C1  00C2               	movwf	(main@totals+1)^(0+128)
  5287  04C2  3000               	movlw	0
  5288  04C3  00C1               	movwf	main@totals^(0+128)
  5289  04C4                     l3024:	
  5290                           ;main.c: 28: while (1)
  5291                           
  5292                           
  5293                           ;main.c: 29: {
  5294                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  5295  04C4  3002               	movlw	2
  5296  04C5  3188  201E  3184   	fcall	_ADCC_GetSingleConversion
  5297  04C8  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5298  04C9  0021               	movlb	1	; select bank1
  5299  04CA  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5300  04CB  0870               	movf	?_ADCC_GetSingleConversion,w
  5301  04CC  00BC               	movwf	main@readTemperature^(0+128)
  5302                           
  5303                           ;main.c: 32: totals = totals - samples[sampleIndex];
  5304  04CD  0841               	movf	main@totals^(0+128),w
  5305  04CE  00A0               	movwf	??_main^(0+128)
  5306  04CF  0842               	movf	(main@totals+1)^(0+128),w
  5307  04D0  00A1               	movwf	(??_main^(0+128)+1)
  5308  04D1  0843               	movf	(main@totals+2)^(0+128),w
  5309  04D2  00A2               	movwf	(??_main^(0+128)+2)
  5310  04D3  0844               	movf	(main@totals+3)^(0+128),w
  5311  04D4  00A3               	movwf	(??_main^(0+128)+3)
  5312  04D5  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5313  04D6  00A5               	movwf	((??_main+4)^(0+128)+1)
  5314  04D7  0860               	movf	main@sampleIndex^(0+128),w
  5315  04D8  00A4               	movwf	(??_main+4)^(0+128)
  5316  04D9  35A4               	lslf	(??_main+4)^(0+128),f
  5317  04DA  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5318  04DB  308C               	movlw	140
  5319  04DC  00A6               	movwf	(??_main+6)^(0+128)
  5320  04DD  3023               	movlw	35
  5321  04DE  00A7               	movwf	((??_main+6)^(0+128)+1)
  5322  04DF  0824               	movf	(??_main+4)^(0+128),w
  5323  04E0  0726               	addwf	(??_main+6)^(0+128),w
  5324  04E1  0086               	movwf	6
  5325  04E2  0825               	movf	(??_main+5)^(0+128),w
  5326  04E3  3D27               	addwfc	(??_main+7)^(0+128),w
  5327  04E4  0087               	movwf	7
  5328  04E5  3F40               	moviw [0]fsr1
  5329  04E6  00A8               	movwf	(??_main+8)^(0+128)
  5330  04E7  3F41               	moviw [1]fsr1
  5331  04E8  00A9               	movwf	((??_main+8)^(0+128)+1)
  5332  04E9  0828               	movf	(??_main+8)^(0+128),w
  5333  04EA  00AA               	movwf	(??_main+10)^(0+128)
  5334  04EB  0829               	movf	(??_main+9)^(0+128),w
  5335  04EC  00AB               	movwf	((??_main+10)^(0+128)+1)
  5336  04ED  01AC               	clrf	((??_main+10)^(0+128)+2)
  5337  04EE  01AD               	clrf	((??_main+10)^(0+128)+3)
  5338  04EF  09AA               	comf	(??_main+10)^(0+128),f
  5339  04F0  09AB               	comf	((??_main+10)^(0+128)+1),f
  5340  04F1  09AC               	comf	((??_main+10)^(0+128)+2),f
  5341  04F2  09AD               	comf	((??_main+10)^(0+128)+3),f
  5342  04F3  0AAA               	incf	(??_main+10)^(0+128),f
  5343  04F4  1903               	skipnz
  5344  04F5  0AAB               	incf	((??_main+10)^(0+128)+1),f
  5345  04F6  1903               	skipnz
  5346  04F7  0AAC               	incf	((??_main+10)^(0+128)+2),f
  5347  04F8  1903               	skipnz
  5348  04F9  0AAD               	incf	((??_main+10)^(0+128)+3),f
  5349  04FA  082A               	movf	(??_main+10)^(0+128),w
  5350  04FB  07A0               	addwf	??_main^(0+128),f
  5351  04FC  082B               	movf	(??_main+11)^(0+128),w
  5352  04FD  3DA1               	addwfc	(??_main^(0+128)+1),f
  5353  04FE  082C               	movf	(??_main+12)^(0+128),w
  5354  04FF  3DA2               	addwfc	(??_main^(0+128)+2),f
  5355  0500  082D               	movf	(??_main+13)^(0+128),w
  5356  0501  3DA3               	addwfc	(??_main^(0+128)+3),f
  5357  0502  0823               	movf	(??_main+3)^(0+128),w
  5358  0503  00C4               	movwf	(main@totals+3)^(0+128)
  5359  0504  0822               	movf	(??_main+2)^(0+128),w
  5360  0505  00C3               	movwf	(main@totals+2)^(0+128)
  5361  0506  0821               	movf	(??_main+1)^(0+128),w
  5362  0507  00C2               	movwf	(main@totals+1)^(0+128)
  5363  0508  0820               	movf	??_main^(0+128),w
  5364  0509  00C1               	movwf	main@totals^(0+128)
  5365                           
  5366                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  5367  050A  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5368  050B  00A1               	movwf	(??_main^(0+128)+1)
  5369  050C  0860               	movf	main@sampleIndex^(0+128),w
  5370  050D  00A0               	movwf	??_main^(0+128)
  5371  050E  35A0               	lslf	??_main^(0+128),f
  5372  050F  0DA1               	rlf	(??_main^(0+128)+1),f
  5373  0510  308C               	movlw	140
  5374  0511  00A2               	movwf	(??_main+2)^(0+128)
  5375  0512  3023               	movlw	35
  5376  0513  00A3               	movwf	((??_main+2)^(0+128)+1)
  5377  0514  0820               	movf	??_main^(0+128),w
  5378  0515  0722               	addwf	(??_main+2)^(0+128),w
  5379  0516  0086               	movwf	6
  5380  0517  0821               	movf	(??_main+1)^(0+128),w
  5381  0518  3D23               	addwfc	(??_main+3)^(0+128),w
  5382  0519  0087               	movwf	7
  5383  051A  083C               	movf	main@readTemperature^(0+128),w
  5384  051B  3FC0               	movwi [0]fsr1
  5385  051C  083D               	movf	(main@readTemperature+1)^(0+128),w
  5386  051D  3FC1               	movwi [1]fsr1
  5387                           
  5388                           ;main.c: 36: totals = totals + samples[sampleIndex];
  5389  051E  0841               	movf	main@totals^(0+128),w
  5390  051F  00A0               	movwf	??_main^(0+128)
  5391  0520  0842               	movf	(main@totals+1)^(0+128),w
  5392  0521  00A1               	movwf	(??_main^(0+128)+1)
  5393  0522  0843               	movf	(main@totals+2)^(0+128),w
  5394  0523  00A2               	movwf	(??_main^(0+128)+2)
  5395  0524  0844               	movf	(main@totals+3)^(0+128),w
  5396  0525  00A3               	movwf	(??_main^(0+128)+3)
  5397  0526  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5398  0527  00A5               	movwf	((??_main+4)^(0+128)+1)
  5399  0528  0860               	movf	main@sampleIndex^(0+128),w
  5400  0529  00A4               	movwf	(??_main+4)^(0+128)
  5401  052A  35A4               	lslf	(??_main+4)^(0+128),f
  5402  052B  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5403  052C  308C               	movlw	140
  5404  052D  00A6               	movwf	(??_main+6)^(0+128)
  5405  052E  3023               	movlw	35
  5406  052F  00A7               	movwf	((??_main+6)^(0+128)+1)
  5407  0530  0824               	movf	(??_main+4)^(0+128),w
  5408  0531  0726               	addwf	(??_main+6)^(0+128),w
  5409  0532  0086               	movwf	6
  5410  0533  0825               	movf	(??_main+5)^(0+128),w
  5411  0534  3D27               	addwfc	(??_main+7)^(0+128),w
  5412  0535  0087               	movwf	7
  5413  0536  3F40               	moviw [0]fsr1
  5414  0537  00A8               	movwf	(??_main+8)^(0+128)
  5415  0538  3F41               	moviw [1]fsr1
  5416  0539  00A9               	movwf	((??_main+8)^(0+128)+1)
  5417  053A  0828               	movf	(??_main+8)^(0+128),w
  5418  053B  00AA               	movwf	(??_main+10)^(0+128)
  5419  053C  0829               	movf	(??_main+9)^(0+128),w
  5420  053D  00AB               	movwf	((??_main+10)^(0+128)+1)
  5421  053E  01AC               	clrf	((??_main+10)^(0+128)+2)
  5422  053F  01AD               	clrf	((??_main+10)^(0+128)+3)
  5423  0540  082A               	movf	(??_main+10)^(0+128),w
  5424  0541  07A0               	addwf	??_main^(0+128),f
  5425  0542  082B               	movf	(??_main+11)^(0+128),w
  5426  0543  3DA1               	addwfc	(??_main^(0+128)+1),f
  5427  0544  082C               	movf	(??_main+12)^(0+128),w
  5428  0545  3DA2               	addwfc	(??_main^(0+128)+2),f
  5429  0546  082D               	movf	(??_main+13)^(0+128),w
  5430  0547  3DA3               	addwfc	(??_main^(0+128)+3),f
  5431  0548  0823               	movf	(??_main+3)^(0+128),w
  5432  0549  00C4               	movwf	(main@totals+3)^(0+128)
  5433  054A  0822               	movf	(??_main+2)^(0+128),w
  5434  054B  00C3               	movwf	(main@totals+2)^(0+128)
  5435  054C  0821               	movf	(??_main+1)^(0+128),w
  5436  054D  00C2               	movwf	(main@totals+1)^(0+128)
  5437  054E  0820               	movf	??_main^(0+128),w
  5438  054F  00C1               	movwf	main@totals^(0+128)
  5439                           
  5440                           ;main.c: 38: sampleIndex += 1;
  5441  0550  3001               	movlw	1
  5442  0551  07E0               	addwf	main@sampleIndex^(0+128),f
  5443  0552  3000               	movlw	0
  5444  0553  3DE1               	addwfc	(main@sampleIndex+1)^(0+128),f
  5445                           
  5446                           ;main.c: 40: if(sampleIndex >= 50)
  5447  0554  3000               	movlw	0
  5448  0555  0261               	subwf	(main@sampleIndex+1)^(0+128),w
  5449  0556  3032               	movlw	50
  5450  0557  1903               	skipnz
  5451  0558  0260               	subwf	main@sampleIndex^(0+128),w
  5452  0559  1C03               	skipc
  5453  055A  2D5D               	goto	l3038
  5454                           
  5455                           ;main.c: 41: {
  5456                           ;main.c: 42: sampleIndex = 0;
  5457  055B  01E0               	clrf	main@sampleIndex^(0+128)
  5458  055C  01E1               	clrf	(main@sampleIndex+1)^(0+128)
  5459  055D                     l3038:	
  5460                           
  5461                           ;main.c: 43: }
  5462                           ;main.c: 45: readTemperature = totals / 50;
  5463  055D  3000               	movlw	0
  5464  055E  00F3               	movwf	___aldiv@divisor+3
  5465  055F  3000               	movlw	0
  5466  0560  00F2               	movwf	___aldiv@divisor+2
  5467  0561  3000               	movlw	0
  5468  0562  00F1               	movwf	___aldiv@divisor+1
  5469  0563  3032               	movlw	50
  5470  0564  00F0               	movwf	___aldiv@divisor
  5471  0565  0844               	movf	(main@totals+3)^(0+128),w
  5472  0566  00F7               	movwf	___aldiv@dividend+3
  5473  0567  0843               	movf	(main@totals+2)^(0+128),w
  5474  0568  00F6               	movwf	___aldiv@dividend+2
  5475  0569  0842               	movf	(main@totals+1)^(0+128),w
  5476  056A  00F5               	movwf	___aldiv@dividend+1
  5477  056B  0841               	movf	main@totals^(0+128),w
  5478  056C  00F4               	movwf	___aldiv@dividend
  5479  056D  3180  2004  3184   	fcall	___aldiv
  5480  0570  0871               	movf	?___aldiv+1,w
  5481  0571  0021               	movlb	1	; select bank1
  5482  0572  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5483  0573  0870               	movf	?___aldiv,w
  5484  0574  00BC               	movwf	main@readTemperature^(0+128)
  5485                           
  5486                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5487  0575  3000               	movlw	0
  5488  0576  0020               	movlb	0	; select bank0
  5489  0577  00B0               	movwf	___ftadd@f1
  5490  0578  3080               	movlw	128
  5491  0579  00B1               	movwf	___ftadd@f1+1
  5492  057A  30BF               	movlw	191
  5493  057B  00B2               	movwf	___ftadd@f1+2
  5494  057C  0021               	movlb	1	; select bank1
  5495  057D  083D               	movf	(main@readTemperature+1)^(0+128),w
  5496  057E  00F9               	movwf	___lwtoft@c+1
  5497  057F  083C               	movf	main@readTemperature^(0+128),w
  5498  0580  00F8               	movwf	___lwtoft@c
  5499  0581  3188  2059  3184   	fcall	___lwtoft
  5500  0584  0878               	movf	?___lwtoft,w
  5501  0585  0020               	movlb	0	; select bank0
  5502  0586  00A0               	movwf	___ftdiv@f2
  5503  0587  0879               	movf	?___lwtoft+1,w
  5504  0588  00A1               	movwf	___ftdiv@f2+1
  5505  0589  087A               	movf	?___lwtoft+2,w
  5506  058A  00A2               	movwf	___ftdiv@f2+2
  5507  058B  30C0               	movlw	192
  5508  058C  00A3               	movwf	___ftdiv@f1
  5509  058D  307F               	movlw	127
  5510  058E  00A4               	movwf	___ftdiv@f1+1
  5511  058F  3044               	movlw	68
  5512  0590  00A5               	movwf	___ftdiv@f1+2
  5513  0591  318D  25F3  3184   	fcall	___ftdiv
  5514  0594  0020               	movlb	0	; select bank0
  5515  0595  0820               	movf	?___ftdiv,w
  5516  0596  00B3               	movwf	___ftadd@f2
  5517  0597  0821               	movf	?___ftdiv+1,w
  5518  0598  00B4               	movwf	___ftadd@f2+1
  5519  0599  0822               	movf	?___ftdiv+2,w
  5520  059A  00B5               	movwf	___ftadd@f2+2
  5521  059B  3182  220F  3184   	fcall	___ftadd
  5522  059E  0020               	movlb	0	; select bank0
  5523  059F  0830               	movf	?___ftadd,w
  5524  05A0  0021               	movlb	1	; select bank1
  5525  05A1  00B1               	movwf	_main$1063^(0+128)
  5526  05A2  0020               	movlb	0	; select bank0
  5527  05A3  0831               	movf	?___ftadd+1,w
  5528  05A4  0021               	movlb	1	; select bank1
  5529  05A5  00B2               	movwf	(_main$1063+1)^(0+128)
  5530  05A6  0020               	movlb	0	; select bank0
  5531  05A7  0832               	movf	?___ftadd+2,w
  5532  05A8  0021               	movlb	1	; select bank1
  5533  05A9  00B3               	movwf	(_main$1063+2)^(0+128)
  5534                           
  5535                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5536  05AA  0831               	movf	_main$1063^(0+128),w
  5537  05AB  0020               	movlb	0	; select bank0
  5538  05AC  00A0               	movwf	___ftdiv@f2
  5539  05AD  0021               	movlb	1	; select bank1
  5540  05AE  0832               	movf	(_main$1063+1)^(0+128),w
  5541  05AF  0020               	movlb	0	; select bank0
  5542  05B0  00A1               	movwf	___ftdiv@f2+1
  5543  05B1  0021               	movlb	1	; select bank1
  5544  05B2  0833               	movf	(_main$1063+2)^(0+128),w
  5545  05B3  0020               	movlb	0	; select bank0
  5546  05B4  00A2               	movwf	___ftdiv@f2+2
  5547  05B5  3060               	movlw	96
  5548  05B6  00A3               	movwf	___ftdiv@f1
  5549  05B7  301F               	movlw	31
  5550  05B8  00A4               	movwf	___ftdiv@f1+1
  5551  05B9  3046               	movlw	70
  5552  05BA  00A5               	movwf	___ftdiv@f1+2
  5553  05BB  318D  25F3  3184   	fcall	___ftdiv
  5554  05BE  0020               	movlb	0	; select bank0
  5555  05BF  0820               	movf	?___ftdiv,w
  5556  05C0  0021               	movlb	1	; select bank1
  5557  05C1  00AE               	movwf	main@R^(0+128)
  5558  05C2  0020               	movlb	0	; select bank0
  5559  05C3  0821               	movf	?___ftdiv+1,w
  5560  05C4  0021               	movlb	1	; select bank1
  5561  05C5  00AF               	movwf	(main@R+1)^(0+128)
  5562  05C6  0020               	movlb	0	; select bank0
  5563  05C7  0822               	movf	?___ftdiv+2,w
  5564  05C8  0021               	movlb	1	; select bank1
  5565  05C9  00B0               	movwf	(main@R+2)^(0+128)
  5566                           
  5567                           ;main.c: 50: steinhart = R /10061;
  5568  05CA  3034               	movlw	52
  5569  05CB  0020               	movlb	0	; select bank0
  5570  05CC  00A0               	movwf	___ftdiv@f2
  5571  05CD  301D               	movlw	29
  5572  05CE  00A1               	movwf	___ftdiv@f2+1
  5573  05CF  3046               	movlw	70
  5574  05D0  00A2               	movwf	___ftdiv@f2+2
  5575  05D1  0021               	movlb	1	; select bank1
  5576  05D2  082E               	movf	main@R^(0+128),w
  5577  05D3  0020               	movlb	0	; select bank0
  5578  05D4  00A3               	movwf	___ftdiv@f1
  5579  05D5  0021               	movlb	1	; select bank1
  5580  05D6  082F               	movf	(main@R+1)^(0+128),w
  5581  05D7  0020               	movlb	0	; select bank0
  5582  05D8  00A4               	movwf	___ftdiv@f1+1
  5583  05D9  0021               	movlb	1	; select bank1
  5584  05DA  0830               	movf	(main@R+2)^(0+128),w
  5585  05DB  0020               	movlb	0	; select bank0
  5586  05DC  00A5               	movwf	___ftdiv@f1+2
  5587  05DD  318D  25F3  3184   	fcall	___ftdiv
  5588  05E0  0020               	movlb	0	; select bank0
  5589  05E1  0820               	movf	?___ftdiv,w
  5590  05E2  0021               	movlb	1	; select bank1
  5591  05E3  00C5               	movwf	main@steinhart^(0+128)
  5592  05E4  0020               	movlb	0	; select bank0
  5593  05E5  0821               	movf	?___ftdiv+1,w
  5594  05E6  0021               	movlb	1	; select bank1
  5595  05E7  00C6               	movwf	(main@steinhart+1)^(0+128)
  5596  05E8  0020               	movlb	0	; select bank0
  5597  05E9  0822               	movf	?___ftdiv+2,w
  5598  05EA  0021               	movlb	1	; select bank1
  5599  05EB  00C7               	movwf	(main@steinhart+2)^(0+128)
  5600                           
  5601                           ;main.c: 51: steinhart = log(steinhart);
  5602  05EC  0845               	movf	main@steinhart^(0+128),w
  5603  05ED  0020               	movlb	0	; select bank0
  5604  05EE  00C7               	movwf	log@x
  5605  05EF  0021               	movlb	1	; select bank1
  5606  05F0  0846               	movf	(main@steinhart+1)^(0+128),w
  5607  05F1  0020               	movlb	0	; select bank0
  5608  05F2  00C8               	movwf	log@x+1
  5609  05F3  0021               	movlb	1	; select bank1
  5610  05F4  0847               	movf	(main@steinhart+2)^(0+128),w
  5611  05F5  0020               	movlb	0	; select bank0
  5612  05F6  00C9               	movwf	log@x+2
  5613  05F7  318E  269C  3184   	fcall	_log
  5614  05FA  0020               	movlb	0	; select bank0
  5615  05FB  0847               	movf	?_log,w
  5616  05FC  0021               	movlb	1	; select bank1
  5617  05FD  00C5               	movwf	main@steinhart^(0+128)
  5618  05FE  0020               	movlb	0	; select bank0
  5619  05FF  0848               	movf	?_log+1,w
  5620  0600  0021               	movlb	1	; select bank1
  5621  0601  00C6               	movwf	(main@steinhart+1)^(0+128)
  5622  0602  0020               	movlb	0	; select bank0
  5623  0603  0849               	movf	?_log+2,w
  5624  0604  0021               	movlb	1	; select bank1
  5625  0605  00C7               	movwf	(main@steinhart+2)^(0+128)
  5626                           
  5627                           ;main.c: 52: steinhart /= 3995;
  5628  0606  30B0               	movlw	176
  5629  0607  0020               	movlb	0	; select bank0
  5630  0608  00A0               	movwf	___ftdiv@f2
  5631  0609  3079               	movlw	121
  5632  060A  00A1               	movwf	___ftdiv@f2+1
  5633  060B  3045               	movlw	69
  5634  060C  00A2               	movwf	___ftdiv@f2+2
  5635  060D  0021               	movlb	1	; select bank1
  5636  060E  0845               	movf	main@steinhart^(0+128),w
  5637  060F  0020               	movlb	0	; select bank0
  5638  0610  00A3               	movwf	___ftdiv@f1
  5639  0611  0021               	movlb	1	; select bank1
  5640  0612  0846               	movf	(main@steinhart+1)^(0+128),w
  5641  0613  0020               	movlb	0	; select bank0
  5642  0614  00A4               	movwf	___ftdiv@f1+1
  5643  0615  0021               	movlb	1	; select bank1
  5644  0616  0847               	movf	(main@steinhart+2)^(0+128),w
  5645  0617  0020               	movlb	0	; select bank0
  5646  0618  00A5               	movwf	___ftdiv@f1+2
  5647  0619  318D  25F3  3184   	fcall	___ftdiv
  5648  061C  0020               	movlb	0	; select bank0
  5649  061D  0820               	movf	?___ftdiv,w
  5650  061E  0021               	movlb	1	; select bank1
  5651  061F  00C5               	movwf	main@steinhart^(0+128)
  5652  0620  0020               	movlb	0	; select bank0
  5653  0621  0821               	movf	?___ftdiv+1,w
  5654  0622  0021               	movlb	1	; select bank1
  5655  0623  00C6               	movwf	(main@steinhart+1)^(0+128)
  5656  0624  0020               	movlb	0	; select bank0
  5657  0625  0822               	movf	?___ftdiv+2,w
  5658  0626  0021               	movlb	1	; select bank1
  5659  0627  00C7               	movwf	(main@steinhart+2)^(0+128)
  5660                           
  5661                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5662  0628  30CF               	movlw	207
  5663  0629  0020               	movlb	0	; select bank0
  5664  062A  00B0               	movwf	___ftadd@f1
  5665  062B  305B               	movlw	91
  5666  062C  00B1               	movwf	___ftadd@f1+1
  5667  062D  303B               	movlw	59
  5668  062E  00B2               	movwf	___ftadd@f1+2
  5669  062F  0021               	movlb	1	; select bank1
  5670  0630  0845               	movf	main@steinhart^(0+128),w
  5671  0631  0020               	movlb	0	; select bank0
  5672  0632  00B3               	movwf	___ftadd@f2
  5673  0633  0021               	movlb	1	; select bank1
  5674  0634  0846               	movf	(main@steinhart+1)^(0+128),w
  5675  0635  0020               	movlb	0	; select bank0
  5676  0636  00B4               	movwf	___ftadd@f2+1
  5677  0637  0021               	movlb	1	; select bank1
  5678  0638  0847               	movf	(main@steinhart+2)^(0+128),w
  5679  0639  0020               	movlb	0	; select bank0
  5680  063A  00B5               	movwf	___ftadd@f2+2
  5681  063B  3182  220F  3184   	fcall	___ftadd
  5682  063E  0020               	movlb	0	; select bank0
  5683  063F  0830               	movf	?___ftadd,w
  5684  0640  0021               	movlb	1	; select bank1
  5685  0641  00C5               	movwf	main@steinhart^(0+128)
  5686  0642  0020               	movlb	0	; select bank0
  5687  0643  0831               	movf	?___ftadd+1,w
  5688  0644  0021               	movlb	1	; select bank1
  5689  0645  00C6               	movwf	(main@steinhart+1)^(0+128)
  5690  0646  0020               	movlb	0	; select bank0
  5691  0647  0832               	movf	?___ftadd+2,w
  5692  0648  0021               	movlb	1	; select bank1
  5693  0649  00C7               	movwf	(main@steinhart+2)^(0+128)
  5694                           
  5695                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5696  064A  0845               	movf	main@steinhart^(0+128),w
  5697  064B  0020               	movlb	0	; select bank0
  5698  064C  00A0               	movwf	___ftdiv@f2
  5699  064D  0021               	movlb	1	; select bank1
  5700  064E  0846               	movf	(main@steinhart+1)^(0+128),w
  5701  064F  0020               	movlb	0	; select bank0
  5702  0650  00A1               	movwf	___ftdiv@f2+1
  5703  0651  0021               	movlb	1	; select bank1
  5704  0652  0847               	movf	(main@steinhart+2)^(0+128),w
  5705  0653  0020               	movlb	0	; select bank0
  5706  0654  00A2               	movwf	___ftdiv@f2+2
  5707  0655  3000               	movlw	0
  5708  0656  00A3               	movwf	___ftdiv@f1
  5709  0657  3080               	movlw	128
  5710  0658  00A4               	movwf	___ftdiv@f1+1
  5711  0659  303F               	movlw	63
  5712  065A  00A5               	movwf	___ftdiv@f1+2
  5713  065B  318D  25F3  3184   	fcall	___ftdiv
  5714  065E  0020               	movlb	0	; select bank0
  5715  065F  0820               	movf	?___ftdiv,w
  5716  0660  0021               	movlb	1	; select bank1
  5717  0661  00C5               	movwf	main@steinhart^(0+128)
  5718  0662  0020               	movlb	0	; select bank0
  5719  0663  0821               	movf	?___ftdiv+1,w
  5720  0664  0021               	movlb	1	; select bank1
  5721  0665  00C6               	movwf	(main@steinhart+1)^(0+128)
  5722  0666  0020               	movlb	0	; select bank0
  5723  0667  0822               	movf	?___ftdiv+2,w
  5724  0668  0021               	movlb	1	; select bank1
  5725  0669  00C7               	movwf	(main@steinhart+2)^(0+128)
  5726                           
  5727                           ;main.c: 55: steinhart -= 273.15;
  5728  066A  3093               	movlw	147
  5729  066B  0020               	movlb	0	; select bank0
  5730  066C  00BD               	movwf	___ftsub@f2
  5731  066D  3088               	movlw	136
  5732  066E  00BE               	movwf	___ftsub@f2+1
  5733  066F  3043               	movlw	67
  5734  0670  00BF               	movwf	___ftsub@f2+2
  5735  0671  0021               	movlb	1	; select bank1
  5736  0672  0845               	movf	main@steinhart^(0+128),w
  5737  0673  0020               	movlb	0	; select bank0
  5738  0674  00C0               	movwf	___ftsub@f1
  5739  0675  0021               	movlb	1	; select bank1
  5740  0676  0846               	movf	(main@steinhart+1)^(0+128),w
  5741  0677  0020               	movlb	0	; select bank0
  5742  0678  00C1               	movwf	___ftsub@f1+1
  5743  0679  0021               	movlb	1	; select bank1
  5744  067A  0847               	movf	(main@steinhart+2)^(0+128),w
  5745  067B  0020               	movlb	0	; select bank0
  5746  067C  00C2               	movwf	___ftsub@f1+2
  5747  067D  3189  211A  3184   	fcall	___ftsub
  5748  0680  0020               	movlb	0	; select bank0
  5749  0681  083D               	movf	?___ftsub,w
  5750  0682  0021               	movlb	1	; select bank1
  5751  0683  00C5               	movwf	main@steinhart^(0+128)
  5752  0684  0020               	movlb	0	; select bank0
  5753  0685  083E               	movf	?___ftsub+1,w
  5754  0686  0021               	movlb	1	; select bank1
  5755  0687  00C6               	movwf	(main@steinhart+1)^(0+128)
  5756  0688  0020               	movlb	0	; select bank0
  5757  0689  083F               	movf	?___ftsub+2,w
  5758  068A  0021               	movlb	1	; select bank1
  5759  068B  00C7               	movwf	(main@steinhart+2)^(0+128)
  5760                           
  5761                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5762  068C  0845               	movf	main@steinhart^(0+128),w
  5763  068D  0020               	movlb	0	; select bank0
  5764  068E  00A3               	movwf	___ftmul@f2
  5765  068F  0021               	movlb	1	; select bank1
  5766  0690  0846               	movf	(main@steinhart+1)^(0+128),w
  5767  0691  0020               	movlb	0	; select bank0
  5768  0692  00A4               	movwf	___ftmul@f2+1
  5769  0693  0021               	movlb	1	; select bank1
  5770  0694  0847               	movf	(main@steinhart+2)^(0+128),w
  5771  0695  0020               	movlb	0	; select bank0
  5772  0696  00A5               	movwf	___ftmul@f2+2
  5773  0697  3000               	movlw	0
  5774  0698  00A0               	movwf	___ftmul@f1
  5775  0699  3020               	movlw	32
  5776  069A  00A1               	movwf	___ftmul@f1+1
  5777  069B  3041               	movlw	65
  5778  069C  00A2               	movwf	___ftmul@f1+2
  5779  069D  318F  274C  3184   	fcall	___ftmul
  5780  06A0  0020               	movlb	0	; select bank0
  5781  06A1  0820               	movf	?___ftmul,w
  5782  06A2  00DD               	movwf	___fttol@f1
  5783  06A3  0821               	movf	?___ftmul+1,w
  5784  06A4  00DE               	movwf	___fttol@f1+1
  5785  06A5  0822               	movf	?___ftmul+2,w
  5786  06A6  00DF               	movwf	___fttol@f1+2
  5787  06A7  318D  256C  3184   	fcall	___fttol
  5788  06AA  0020               	movlb	0	; select bank0
  5789  06AB  085E               	movf	?___fttol+1,w
  5790  06AC  0021               	movlb	1	; select bank1
  5791  06AD  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5792  06AE  0020               	movlb	0	; select bank0
  5793  06AF  085D               	movf	?___fttol,w
  5794  06B0  0021               	movlb	1	; select bank1
  5795  06B1  00BF               	movwf	main@displayTemp^(0+128)
  5796                           
  5797                           ;main.c: 60: if(toggle == 1)
  5798  06B2  033E               	decf	main@toggle^(0+128),w
  5799  06B3  1D03               	btfss	3,2
  5800  06B4  2EEA               	goto	l3070
  5801                           
  5802                           ;main.c: 61: {
  5803                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5804  06B5  3005               	movlw	5
  5805  06B6  00F6               	movwf	___lwdiv@divisor
  5806  06B7  3000               	movlw	0
  5807  06B8  00F7               	movwf	___lwdiv@divisor+1
  5808  06B9  0840               	movf	(main@displayTemp+1)^(0+128),w
  5809  06BA  00F1               	movwf	___wmul@multiplier+1
  5810  06BB  083F               	movf	main@displayTemp^(0+128),w
  5811  06BC  00F0               	movwf	___wmul@multiplier
  5812  06BD  3009               	movlw	9
  5813  06BE  00F2               	movwf	___wmul@multiplicand
  5814  06BF  3000               	movlw	0
  5815  06C0  00F3               	movwf	___wmul@multiplicand+1
  5816  06C1  3188  20FF  3184   	fcall	___wmul
  5817  06C4  0871               	movf	?___wmul+1,w
  5818  06C5  00F9               	movwf	___lwdiv@dividend+1
  5819  06C6  0870               	movf	?___wmul,w
  5820  06C7  00F8               	movwf	___lwdiv@dividend
  5821  06C8  318A  2202  3184   	fcall	___lwdiv
  5822  06CB  0876               	movf	?___lwdiv,w
  5823  06CC  3E40               	addlw	64
  5824  06CD  0021               	movlb	1	; select bank1
  5825  06CE  00BF               	movwf	main@displayTemp^(0+128)
  5826  06CF  3001               	movlw	1
  5827  06D0  3D77               	addwfc	?___lwdiv+1,w
  5828  06D1  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5829                           
  5830                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5831  06D2  01F2               	clrf	LCD_Set_Cursor@y
  5832  06D3  3000               	movlw	0
  5833  06D4  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5834  06D7  0021               	movlb	1	; select bank1
  5835  06D8  0840               	movf	(main@displayTemp+1)^(0+128),w
  5836  06D9  00FA               	movwf	LCD_Write_Int@value+1
  5837  06DA  083F               	movf	main@displayTemp^(0+128),w
  5838  06DB  00F9               	movwf	LCD_Write_Int@value
  5839  06DC  01FB               	clrf	LCD_Write_Int@fieldLength
  5840  06DD  03FB               	decf	LCD_Write_Int@fieldLength,f
  5841  06DE  01FC               	clrf	LCD_Write_Int@numPlaces
  5842  06DF  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5843  06E0  01FD               	clrf	LCD_Write_Int@sign
  5844  06E1  3181  2146  3184   	fcall	_LCD_Write_Int
  5845                           
  5846                           ;main.c: 65: LCD_Write_Char(0);
  5847  06E4  3000               	movlw	0
  5848  06E5  3189  21A6  3184   	fcall	_LCD_Write_Char
  5849                           
  5850                           ;main.c: 66: LCD_Write_Char('F');
  5851  06E8  3046               	movlw	70
  5852  06E9  2F01               	goto	L1
  5853  06EA                     l3070:	
  5854                           ;main.c: 68: }
  5855                           
  5856                           ;main.c: 67: LCD_Write_Char(' ');
  5857                           
  5858                           
  5859                           ;main.c: 69: else
  5860                           ;main.c: 70: {
  5861                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5862  06EA  01F2               	clrf	LCD_Set_Cursor@y
  5863  06EB  3000               	movlw	0
  5864  06EC  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5865  06EF  0021               	movlb	1	; select bank1
  5866  06F0  0840               	movf	(main@displayTemp+1)^(0+128),w
  5867  06F1  00FA               	movwf	LCD_Write_Int@value+1
  5868  06F2  083F               	movf	main@displayTemp^(0+128),w
  5869  06F3  00F9               	movwf	LCD_Write_Int@value
  5870  06F4  01FB               	clrf	LCD_Write_Int@fieldLength
  5871  06F5  03FB               	decf	LCD_Write_Int@fieldLength,f
  5872  06F6  01FC               	clrf	LCD_Write_Int@numPlaces
  5873  06F7  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5874  06F8  01FD               	clrf	LCD_Write_Int@sign
  5875  06F9  3181  2146  3184   	fcall	_LCD_Write_Int
  5876                           
  5877                           ;main.c: 72: LCD_Write_Char(0);
  5878  06FC  3000               	movlw	0
  5879  06FD  3189  21A6  3184   	fcall	_LCD_Write_Char
  5880                           
  5881                           ;main.c: 73: LCD_Write_Char('C');
  5882  0700  3043               	movlw	67
  5883  0701                     L1:	
  5884  0701  3189  21A6  3184   	fcall	_LCD_Write_Char
  5885                           
  5886                           ;main.c: 74: LCD_Write_Char(' ');
  5887  0704  3020               	movlw	32
  5888  0705  3189  21A6  3184   	fcall	_LCD_Write_Char
  5889                           
  5890                           ;main.c: 75: }
  5891                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5892  0708  01F2               	clrf	LCD_Set_Cursor@y
  5893  0709  3001               	movlw	1
  5894  070A  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5895  070D  3025               	movlw	low (STR_1| (0+32768))
  5896  070E  00F5               	movwf	LCD_Write_String@a
  5897  070F  3090               	movlw	high (STR_1| (0+32768))
  5898  0710  00F6               	movwf	LCD_Write_String@a+1
  5899  0711  3188  20E5  3184   	fcall	_LCD_Write_String
  5900                           
  5901                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5902  0714  3005               	movlw	5
  5903  0715  0021               	movlb	1	; select bank1
  5904  0716  00A0               	movwf	??_main^(0+128)
  5905  0717  0820               	movf	??_main^(0+128),w
  5906  0718  00F2               	movwf	LCD_Set_Cursor@y
  5907  0719  3001               	movlw	1
  5908  071A  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5909  071D  0021               	movlb	1	; select bank1
  5910  071E  0837               	movf	(main@minutes+1)^(0+128),w
  5911  071F  00FA               	movwf	LCD_Write_Int@value+1
  5912  0720  0836               	movf	main@minutes^(0+128),w
  5913  0721  00F9               	movwf	LCD_Write_Int@value
  5914  0722  3003               	movlw	3
  5915  0723  00A0               	movwf	??_main^(0+128)
  5916  0724  0820               	movf	??_main^(0+128),w
  5917  0725  00FB               	movwf	LCD_Write_Int@fieldLength
  5918  0726  01FC               	clrf	LCD_Write_Int@numPlaces
  5919  0727  01FD               	clrf	LCD_Write_Int@sign
  5920  0728  3181  2146  3184   	fcall	_LCD_Write_Int
  5921                           
  5922                           ;main.c: 81: counter +=1;
  5923  072B  3001               	movlw	1
  5924  072C  0021               	movlb	1	; select bank1
  5925  072D  07BA               	addwf	main@counter^(0+128),f
  5926  072E  3000               	movlw	0
  5927  072F  3DBB               	addwfc	(main@counter+1)^(0+128),f
  5928                           
  5929                           ;main.c: 83: if(counter>12)
  5930  0730  3000               	movlw	0
  5931  0731  023B               	subwf	(main@counter+1)^(0+128),w
  5932  0732  300D               	movlw	13
  5933  0733  1903               	skipnz
  5934  0734  023A               	subwf	main@counter^(0+128),w
  5935  0735  1C03               	skipc
  5936  0736  2F71               	goto	l3100
  5937                           
  5938                           ;main.c: 84: {
  5939                           ;main.c: 85: toggle = 1-toggle;
  5940  0737  033E               	decf	main@toggle^(0+128),w
  5941  0738  3AFF               	xorlw	255
  5942  0739  3E01               	addlw	1
  5943  073A  00A0               	movwf	??_main^(0+128)
  5944  073B  0820               	movf	??_main^(0+128),w
  5945  073C  00BE               	movwf	main@toggle^(0+128)
  5946                           
  5947                           ;main.c: 86: counter = 0;
  5948  073D  01BA               	clrf	main@counter^(0+128)
  5949  073E  01BB               	clrf	(main@counter+1)^(0+128)
  5950                           
  5951                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5952  073F  0845               	movf	main@steinhart^(0+128),w
  5953  0740  0020               	movlb	0	; select bank0
  5954  0741  00C8               	movwf	PID_Calculate@temp
  5955  0742  0021               	movlb	1	; select bank1
  5956  0743  0846               	movf	(main@steinhart+1)^(0+128),w
  5957  0744  0020               	movlb	0	; select bank0
  5958  0745  00C9               	movwf	PID_Calculate@temp+1
  5959  0746  0021               	movlb	1	; select bank1
  5960  0747  0847               	movf	(main@steinhart+2)^(0+128),w
  5961  0748  0020               	movlb	0	; select bank0
  5962  0749  00CA               	movwf	PID_Calculate@temp+2
  5963  074A  0021               	movlb	1	; select bank1
  5964  074B  0869               	movf	_setpoint^(0+128),w
  5965  074C  00A0               	movwf	??_main^(0+128)
  5966  074D  01A1               	clrf	(??_main^(0+128)+1)
  5967  074E  0820               	movf	??_main^(0+128),w
  5968  074F  0020               	movlb	0	; select bank0
  5969  0750  00C6               	movwf	PID_Calculate@setpoint
  5970  0751  0021               	movlb	1	; select bank1
  5971  0752  0821               	movf	(??_main+1)^(0+128),w
  5972  0753  0020               	movlb	0	; select bank0
  5973  0754  00C7               	movwf	PID_Calculate@setpoint+1
  5974  0755  3183  2305  3184   	fcall	_PID_Calculate
  5975  0758  0020               	movlb	0	; select bank0
  5976  0759  0846               	movf	?_PID_Calculate,w
  5977  075A  00DD               	movwf	___fttol@f1
  5978  075B  0847               	movf	?_PID_Calculate+1,w
  5979  075C  00DE               	movwf	___fttol@f1+1
  5980  075D  0848               	movf	?_PID_Calculate+2,w
  5981  075E  00DF               	movwf	___fttol@f1+2
  5982  075F  318D  256C  3184   	fcall	___fttol
  5983  0762  0020               	movlb	0	; select bank0
  5984  0763  085E               	movf	?___fttol+1,w
  5985  0764  0021               	movlb	1	; select bank1
  5986  0765  00B5               	movwf	(main@PWM_Output+1)^(0+128)
  5987  0766  0020               	movlb	0	; select bank0
  5988  0767  085D               	movf	?___fttol,w
  5989  0768  0021               	movlb	1	; select bank1
  5990  0769  00B4               	movwf	main@PWM_Output^(0+128)
  5991                           
  5992                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  5993  076A  0835               	movf	(main@PWM_Output+1)^(0+128),w
  5994  076B  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5995  076C  0834               	movf	main@PWM_Output^(0+128),w
  5996  076D  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5997  076E  3188  206C  3184   	fcall	_PWM6_LoadDutyValue
  5998  0771                     l3100:	
  5999                           
  6000                           ;main.c: 89: }
  6001                           ;main.c: 92: if(TMR0IF)
  6002  0771  002E               	movlb	14	; select bank14
  6003  0772  1E8C               	btfss	12,5	;volatile
  6004  0773  2F80               	goto	l3106
  6005                           
  6006                           ;main.c: 93: {
  6007                           ;main.c: 94: TMR0H = 0x24;
  6008  0774  3024               	movlw	36
  6009  0775  0020               	movlb	0	; select bank0
  6010  0776  009D               	movwf	29	;volatile
  6011                           
  6012                           ;main.c: 95: TMR0L = 0x9F;
  6013  0777  309F               	movlw	159
  6014  0778  009C               	movwf	28	;volatile
  6015                           
  6016                           ;main.c: 96: TMR0IF = 0;
  6017  0779  002E               	movlb	14	; select bank14
  6018  077A  128C               	bcf	12,5	;volatile
  6019                           
  6020                           ;main.c: 97: seconds+=1;
  6021  077B  3001               	movlw	1
  6022  077C  0021               	movlb	1	; select bank1
  6023  077D  07B8               	addwf	main@seconds^(0+128),f
  6024  077E  3000               	movlw	0
  6025  077F  3DB9               	addwfc	(main@seconds+1)^(0+128),f
  6026  0780                     l3106:	
  6027                           
  6028                           ;main.c: 98: }
  6029                           ;main.c: 100: if(setpoint - steinhart < 2)
  6030  0780  0021               	movlb	1	; select bank1
  6031  0781  0845               	movf	main@steinhart^(0+128),w
  6032  0782  00F0               	movwf	___ftneg@f1
  6033  0783  0846               	movf	(main@steinhart+1)^(0+128),w
  6034  0784  00F1               	movwf	___ftneg@f1+1
  6035  0785  0847               	movf	(main@steinhart+2)^(0+128),w
  6036  0786  00F2               	movwf	___ftneg@f1+2
  6037  0787  3197  27DC  3184   	fcall	___ftneg
  6038  078A  0870               	movf	?___ftneg,w
  6039  078B  0020               	movlb	0	; select bank0
  6040  078C  00B0               	movwf	___ftadd@f1
  6041  078D  0871               	movf	?___ftneg+1,w
  6042  078E  00B1               	movwf	___ftadd@f1+1
  6043  078F  0872               	movf	?___ftneg+2,w
  6044  0790  00B2               	movwf	___ftadd@f1+2
  6045  0791  0021               	movlb	1	; select bank1
  6046  0792  0869               	movf	_setpoint^(0+128),w
  6047  0793  3188  20CB  3184   	fcall	___lbtoft
  6048  0796  0878               	movf	?___lbtoft,w
  6049  0797  0020               	movlb	0	; select bank0
  6050  0798  00B3               	movwf	___ftadd@f2
  6051  0799  0879               	movf	?___lbtoft+1,w
  6052  079A  00B4               	movwf	___ftadd@f2+1
  6053  079B  087A               	movf	?___lbtoft+2,w
  6054  079C  00B5               	movwf	___ftadd@f2+2
  6055  079D  3182  220F  3184   	fcall	___ftadd
  6056  07A0  0020               	movlb	0	; select bank0
  6057  07A1  0830               	movf	?___ftadd,w
  6058  07A2  00BD               	movwf	___ftge@ff1
  6059  07A3  0831               	movf	?___ftadd+1,w
  6060  07A4  00BE               	movwf	___ftge@ff1+1
  6061  07A5  0832               	movf	?___ftadd+2,w
  6062  07A6  00BF               	movwf	___ftge@ff1+2
  6063  07A7  3000               	movlw	0
  6064  07A8  00C0               	movwf	___ftge@ff2
  6065  07A9  3000               	movlw	0
  6066  07AA  00C1               	movwf	___ftge@ff2+1
  6067  07AB  3040               	movlw	64
  6068  07AC  00C2               	movwf	___ftge@ff2+2
  6069  07AD  318A  22AA  3184   	fcall	___ftge
  6070  07B0  1803               	btfsc	3,0
  6071  07B1  2FC0               	goto	l3114
  6072                           
  6073                           ;main.c: 101: {
  6074                           ;main.c: 102: if(seconds>63)
  6075  07B2  3000               	movlw	0
  6076  07B3  0021               	movlb	1	; select bank1
  6077  07B4  0239               	subwf	(main@seconds+1)^(0+128),w
  6078  07B5  3040               	movlw	64
  6079  07B6  1903               	skipnz
  6080  07B7  0238               	subwf	main@seconds^(0+128),w
  6081  07B8  1C03               	skipc
  6082  07B9  2FC0               	goto	l3114
  6083                           
  6084                           ;main.c: 103: {
  6085                           ;main.c: 104: minutes+=1;
  6086  07BA  3001               	movlw	1
  6087  07BB  07B6               	addwf	main@minutes^(0+128),f
  6088  07BC  3000               	movlw	0
  6089  07BD  3DB7               	addwfc	(main@minutes+1)^(0+128),f
  6090                           
  6091                           ;main.c: 105: seconds = 0;
  6092  07BE  01B8               	clrf	main@seconds^(0+128)
  6093  07BF  01B9               	clrf	(main@seconds+1)^(0+128)
  6094  07C0                     l3114:	
  6095                           
  6096                           ;main.c: 106: }
  6097                           ;main.c: 107: }
  6098                           ;main.c: 109: readButtons();
  6099  07C0  318C  24E6  3184   	fcall	_readButtons
  6100                           
  6101                           ;main.c: 110: tempSetpoint();
  6102  07C3  3180  2086  3184   	fcall	_tempSetpoint
  6103  07C6  2CC4               	goto	l3024
  6104  07C7                     __end_of_main:	
  6105                           
  6106                           	psect	text1
  6107  0086                     __ptext1:	
  6108 ;; *************** function _tempSetpoint *****************
  6109 ;; Defined at:
  6110 ;;		line 12 in file "buttons.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  counter         1   20[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        4 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    4
  6131 ;; This function calls:
  6132 ;;		_LCD_Clear
  6133 ;;		_LCD_Set_Cursor
  6134 ;;		_LCD_Write_Char
  6135 ;;		_LCD_Write_Int
  6136 ;;		_LCD_Write_String
  6137 ;;		_readButtons
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function _tempSetpoint
  6145  0086                     _tempSetpoint:	
  6146                           
  6147                           ;buttons.c: 14: uint8_t counter = 0;
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6151  0086  0020               	movlb	0	; select bank0
  6152  0087  01B4               	clrf	tempSetpoint@counter
  6153                           
  6154                           ;buttons.c: 16: oldSetpoint = setpoint;
  6155  0088  0021               	movlb	1	; select bank1
  6156  0089  0869               	movf	_setpoint^(0+128),w
  6157  008A  0020               	movlb	0	; select bank0
  6158  008B  00B1               	movwf	??_tempSetpoint
  6159  008C  0831               	movf	??_tempSetpoint,w
  6160  008D  0021               	movlb	1	; select bank1
  6161  008E  00E3               	movwf	_oldSetpoint^(0+128)
  6162  008F                     l2806:	
  6163                           ;buttons.c: 18: while(downCount >= 5)
  6164                           
  6165  008F  3005               	movlw	5
  6166  0090  0020               	movlb	0	; select bank0
  6167  0091  026F               	subwf	_downCount,w
  6168  0092  1C03               	btfss	3,0
  6169  0093  292B               	goto	l2834
  6170                           
  6171                           ;buttons.c: 19: {
  6172                           ;buttons.c: 20: counter+=1;
  6173  0094  3001               	movlw	1
  6174  0095  0020               	movlb	0	; select bank0
  6175  0096  00B1               	movwf	??_tempSetpoint
  6176  0097  0831               	movf	??_tempSetpoint,w
  6177  0098  07B4               	addwf	tempSetpoint@counter,f
  6178                           
  6179                           ;buttons.c: 21: if(counter<=1)
  6180  0099  3002               	movlw	2
  6181  009A  0234               	subwf	tempSetpoint@counter,w
  6182  009B  1803               	skipnc
  6183  009C  28A0               	goto	l2786
  6184                           
  6185                           ;buttons.c: 22: {
  6186                           ;buttons.c: 23: LCD_Clear();
  6187  009D  3197  27E4  3180   	fcall	_LCD_Clear
  6188  00A0                     l2786:	
  6189                           
  6190                           ;buttons.c: 24: }
  6191                           ;buttons.c: 25: setpoint-=1;
  6192  00A0  3001               	movlw	1
  6193  00A1  0021               	movlb	1	; select bank1
  6194  00A2  02E9               	subwf	_setpoint^(0+128),f
  6195                           
  6196                           ;buttons.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6197  00A3  01F2               	clrf	LCD_Set_Cursor@y
  6198  00A4  3000               	movlw	0
  6199  00A5  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6200  00A8  301B               	movlw	low (STR_2| (0+32768))
  6201  00A9  00F5               	movwf	LCD_Write_String@a
  6202  00AA  3090               	movlw	high (STR_2| (0+32768))
  6203  00AB  00F6               	movwf	LCD_Write_String@a+1
  6204  00AC  3188  20E5  3180   	fcall	_LCD_Write_String
  6205                           
  6206                           ;buttons.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6207  00AF  01F2               	clrf	LCD_Set_Cursor@y
  6208  00B0  3001               	movlw	1
  6209  00B1  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6210  00B4  0021               	movlb	1	; select bank1
  6211  00B5  0869               	movf	_setpoint^(0+128),w
  6212  00B6  0020               	movlb	0	; select bank0
  6213  00B7  00B1               	movwf	??_tempSetpoint
  6214  00B8  01B2               	clrf	??_tempSetpoint+1
  6215  00B9  0831               	movf	??_tempSetpoint,w
  6216  00BA  00F9               	movwf	LCD_Write_Int@value
  6217  00BB  0832               	movf	??_tempSetpoint+1,w
  6218  00BC  00FA               	movwf	LCD_Write_Int@value+1
  6219  00BD  3003               	movlw	3
  6220  00BE  00B3               	movwf	??_tempSetpoint+2
  6221  00BF  0833               	movf	??_tempSetpoint+2,w
  6222  00C0  00FB               	movwf	LCD_Write_Int@fieldLength
  6223  00C1  01FC               	clrf	LCD_Write_Int@numPlaces
  6224  00C2  01FD               	clrf	LCD_Write_Int@sign
  6225  00C3  3181  2146  3180   	fcall	_LCD_Write_Int
  6226                           
  6227                           ;buttons.c: 28: LCD_Write_Char(0);
  6228  00C6  3000               	movlw	0
  6229  00C7  3189  21A6  3180   	fcall	_LCD_Write_Char
  6230                           
  6231                           ;buttons.c: 29: LCD_Write_Char('C');
  6232  00CA  3043               	movlw	67
  6233  00CB  3189  21A6  3180   	fcall	_LCD_Write_Char
  6234                           
  6235                           ;buttons.c: 30: LCD_Write_Char(' ');
  6236  00CE  3020               	movlw	32
  6237  00CF  3189  21A6  3180   	fcall	_LCD_Write_Char
  6238                           
  6239                           ;buttons.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6240  00D2  3072               	movlw	114
  6241  00D3  0020               	movlb	0	; select bank0
  6242  00D4  00B1               	movwf	??_tempSetpoint
  6243  00D5  30A1               	movlw	161
  6244  00D6                     u3277:	
  6245  00D6  0B89               	decfsz	9,f
  6246  00D7  28D6               	goto	u3277
  6247  00D8  0BB1               	decfsz	??_tempSetpoint,f
  6248  00D9  28D6               	goto	u3277
  6249  00DA  3200               	nop2
  6250                           
  6251                           ;buttons.c: 32: readButtons();
  6252  00DB  318C  24E6  3180   	fcall	_readButtons
  6253  00DE  288F               	goto	l2806
  6254  00DF                     l2808:	
  6255                           ;buttons.c: 33: }
  6256                           ;buttons.c: 35: while(upCount >= 5)
  6257                           
  6258                           
  6259                           ;buttons.c: 36: {
  6260                           ;buttons.c: 37: counter+=1;
  6261  00DF  3001               	movlw	1
  6262  00E0  00B1               	movwf	??_tempSetpoint
  6263  00E1  0831               	movf	??_tempSetpoint,w
  6264  00E2  07B4               	addwf	tempSetpoint@counter,f
  6265                           
  6266                           ;buttons.c: 38: if(counter<=1)
  6267  00E3  3002               	movlw	2
  6268  00E4  0234               	subwf	tempSetpoint@counter,w
  6269  00E5  1803               	skipnc
  6270  00E6  28EA               	goto	l2814
  6271                           
  6272                           ;buttons.c: 39: {
  6273                           ;buttons.c: 40: LCD_Clear();
  6274  00E7  3197  27E4  3180   	fcall	_LCD_Clear
  6275  00EA                     l2814:	
  6276                           
  6277                           ;buttons.c: 41: }
  6278                           ;buttons.c: 42: setpoint+=1;
  6279  00EA  3001               	movlw	1
  6280  00EB  0020               	movlb	0	; select bank0
  6281  00EC  00B1               	movwf	??_tempSetpoint
  6282  00ED  0831               	movf	??_tempSetpoint,w
  6283  00EE  0021               	movlb	1	; select bank1
  6284  00EF  07E9               	addwf	_setpoint^(0+128),f
  6285                           
  6286                           ;buttons.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6287  00F0  01F2               	clrf	LCD_Set_Cursor@y
  6288  00F1  3000               	movlw	0
  6289  00F2  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6290  00F5  301B               	movlw	low (STR_2| (0+32768))
  6291  00F6  00F5               	movwf	LCD_Write_String@a
  6292  00F7  3090               	movlw	high (STR_2| (0+32768))
  6293  00F8  00F6               	movwf	LCD_Write_String@a+1
  6294  00F9  3188  20E5  3180   	fcall	_LCD_Write_String
  6295                           
  6296                           ;buttons.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6297  00FC  01F2               	clrf	LCD_Set_Cursor@y
  6298  00FD  3001               	movlw	1
  6299  00FE  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6300  0101  0021               	movlb	1	; select bank1
  6301  0102  0869               	movf	_setpoint^(0+128),w
  6302  0103  0020               	movlb	0	; select bank0
  6303  0104  00B1               	movwf	??_tempSetpoint
  6304  0105  01B2               	clrf	??_tempSetpoint+1
  6305  0106  0831               	movf	??_tempSetpoint,w
  6306  0107  00F9               	movwf	LCD_Write_Int@value
  6307  0108  0832               	movf	??_tempSetpoint+1,w
  6308  0109  00FA               	movwf	LCD_Write_Int@value+1
  6309  010A  3003               	movlw	3
  6310  010B  00B3               	movwf	??_tempSetpoint+2
  6311  010C  0833               	movf	??_tempSetpoint+2,w
  6312  010D  00FB               	movwf	LCD_Write_Int@fieldLength
  6313  010E  01FC               	clrf	LCD_Write_Int@numPlaces
  6314  010F  01FD               	clrf	LCD_Write_Int@sign
  6315  0110  3181  2146  3180   	fcall	_LCD_Write_Int
  6316                           
  6317                           ;buttons.c: 45: LCD_Write_Char(0);
  6318  0113  3000               	movlw	0
  6319  0114  3189  21A6  3180   	fcall	_LCD_Write_Char
  6320                           
  6321                           ;buttons.c: 46: LCD_Write_Char('C');
  6322  0117  3043               	movlw	67
  6323  0118  3189  21A6  3180   	fcall	_LCD_Write_Char
  6324                           
  6325                           ;buttons.c: 47: LCD_Write_Char(' ');
  6326  011B  3020               	movlw	32
  6327  011C  3189  21A6  3180   	fcall	_LCD_Write_Char
  6328                           
  6329                           ;buttons.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6330  011F  3072               	movlw	114
  6331  0120  0020               	movlb	0	; select bank0
  6332  0121  00B1               	movwf	??_tempSetpoint
  6333  0122  30A1               	movlw	161
  6334  0123                     u3287:	
  6335  0123  0B89               	decfsz	9,f
  6336  0124  2923               	goto	u3287
  6337  0125  0BB1               	decfsz	??_tempSetpoint,f
  6338  0126  2923               	goto	u3287
  6339  0127  3200               	nop2
  6340                           
  6341                           ;buttons.c: 49: readButtons();
  6342  0128  318C  24E6  3180   	fcall	_readButtons
  6343  012B                     l2834:	
  6344  012B  3005               	movlw	5
  6345  012C  0020               	movlb	0	; select bank0
  6346  012D  026E               	subwf	_upCount,w
  6347  012E  1803               	skipnc
  6348  012F  28DF               	goto	l2808
  6349                           
  6350                           ;buttons.c: 50: }
  6351                           ;buttons.c: 52: counter = 0;
  6352  0130  01B4               	clrf	tempSetpoint@counter
  6353                           
  6354                           ;buttons.c: 54: if(oldSetpoint!=setpoint)
  6355  0131  0021               	movlb	1	; select bank1
  6356  0132  0863               	movf	_oldSetpoint^(0+128),w
  6357  0133  0669               	xorwf	_setpoint^(0+128),w
  6358  0134  1903               	skipnz
  6359  0135  0008               	return
  6360                           
  6361                           ;buttons.c: 55: {
  6362                           ;buttons.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6363  0136  3003               	movlw	3
  6364  0137  0020               	movlb	0	; select bank0
  6365  0138  00B2               	movwf	??_tempSetpoint+1
  6366  0139  308A               	movlw	138
  6367  013A  00B1               	movwf	??_tempSetpoint
  6368  013B  3055               	movlw	85
  6369  013C                     u3297:	
  6370  013C  0B89               	decfsz	9,f
  6371  013D  293C               	goto	u3297
  6372  013E  0BB1               	decfsz	??_tempSetpoint,f
  6373  013F  293C               	goto	u3297
  6374  0140  0BB2               	decfsz	??_tempSetpoint+1,f
  6375  0141  293C               	goto	u3297
  6376  0142  3200               	nop2
  6377                           
  6378                           ;buttons.c: 57: LCD_Clear();
  6379  0143  3197  27E4         	fcall	_LCD_Clear
  6380  0145  0008               	return
  6381  0146                     __end_of_tempSetpoint:	
  6382                           
  6383                           	psect	text2
  6384  0CE6                     __ptext2:	
  6385 ;; *************** function _readButtons *****************
  6386 ;; Defined at:
  6387 ;;		line 62 in file "buttons.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:        3 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    3
  6408 ;; This function calls:
  6409 ;;		_LCD_Clear
  6410 ;;		_LCD_Set_Cursor
  6411 ;;		_LCD_Write_Char
  6412 ;;		_LCD_Write_Int
  6413 ;;		_LCD_Write_String
  6414 ;; This function is called by:
  6415 ;;		_main
  6416 ;;		_tempSetpoint
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _readButtons
  6422  0CE6                     _readButtons:	
  6423                           
  6424                           ;buttons.c: 64: while(RA3 == 0 && RA4 == 0)
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6428  0CE6  2D46               	goto	l2592
  6429  0CE7                     l2558:	
  6430                           
  6431                           ;buttons.c: 65: {
  6432                           ;buttons.c: 66: downCount = 0;
  6433  0CE7  0020               	movlb	0	; select bank0
  6434  0CE8  01EF               	clrf	_downCount
  6435                           
  6436                           ;buttons.c: 67: upCount = 0;
  6437  0CE9  01EE               	clrf	_upCount
  6438                           
  6439                           ;buttons.c: 68: toggleCount+=1;
  6440  0CEA  3001               	movlw	1
  6441  0CEB  00AE               	movwf	??_readButtons
  6442  0CEC  082E               	movf	??_readButtons,w
  6443  0CED  0021               	movlb	1	; select bank1
  6444  0CEE  07E2               	addwf	_toggleCount^(0+128),f
  6445                           
  6446                           ;buttons.c: 69: if(toggleCount >=6)
  6447  0CEF  3006               	movlw	6
  6448  0CF0  0262               	subwf	_toggleCount^(0+128),w
  6449  0CF1  1C03               	skipc
  6450  0CF2  2D46               	goto	l2592
  6451                           
  6452                           ;buttons.c: 70: {
  6453                           ;buttons.c: 71: x+=1;
  6454  0CF3  3001               	movlw	1
  6455  0CF4  0020               	movlb	0	; select bank0
  6456  0CF5  00AE               	movwf	??_readButtons
  6457  0CF6  082E               	movf	??_readButtons,w
  6458  0CF7  07ED               	addwf	_x,f
  6459                           
  6460                           ;buttons.c: 72: if(x>4)
  6461  0CF8  3005               	movlw	5
  6462  0CF9  026D               	subwf	_x,w
  6463  0CFA  1803               	btfsc	3,0
  6464                           
  6465                           ;buttons.c: 73: {
  6466                           ;buttons.c: 74: x=0;
  6467  0CFB  01ED               	clrf	_x
  6468                           
  6469                           ;buttons.c: 75: }
  6470                           ;buttons.c: 76: setpoint = presets[x];
  6471  0CFC  086D               	movf	_x,w
  6472  0CFD  3EE4               	addlw	(low (_presets| 0))& (0+255)
  6473  0CFE  0086               	movwf	6
  6474  0CFF  0187               	clrf	7
  6475  0D00  0801               	movf	1,w
  6476  0D01  00AE               	movwf	??_readButtons
  6477  0D02  082E               	movf	??_readButtons,w
  6478  0D03  0021               	movlb	1	; select bank1
  6479  0D04  00E9               	movwf	_setpoint^(0+128)
  6480                           
  6481                           ;buttons.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6482  0D05  01F2               	clrf	LCD_Set_Cursor@y
  6483  0D06  3000               	movlw	0
  6484  0D07  318A  22E6  318C   	fcall	_LCD_Set_Cursor
  6485  0D0A  301B               	movlw	low (STR_2| (0+32768))
  6486  0D0B  00F5               	movwf	LCD_Write_String@a
  6487  0D0C  3090               	movlw	high (STR_2| (0+32768))
  6488  0D0D  00F6               	movwf	LCD_Write_String@a+1
  6489  0D0E  3188  20E5  318C   	fcall	_LCD_Write_String
  6490                           
  6491                           ;buttons.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6492  0D11  01F2               	clrf	LCD_Set_Cursor@y
  6493  0D12  3001               	movlw	1
  6494  0D13  318A  22E6  318C   	fcall	_LCD_Set_Cursor
  6495  0D16  0021               	movlb	1	; select bank1
  6496  0D17  0869               	movf	_setpoint^(0+128),w
  6497  0D18  0020               	movlb	0	; select bank0
  6498  0D19  00AE               	movwf	??_readButtons
  6499  0D1A  01AF               	clrf	??_readButtons+1
  6500  0D1B  082E               	movf	??_readButtons,w
  6501  0D1C  00F9               	movwf	LCD_Write_Int@value
  6502  0D1D  082F               	movf	??_readButtons+1,w
  6503  0D1E  00FA               	movwf	LCD_Write_Int@value+1
  6504  0D1F  3003               	movlw	3
  6505  0D20  00B0               	movwf	??_readButtons+2
  6506  0D21  0830               	movf	??_readButtons+2,w
  6507  0D22  00FB               	movwf	LCD_Write_Int@fieldLength
  6508  0D23  01FC               	clrf	LCD_Write_Int@numPlaces
  6509  0D24  01FD               	clrf	LCD_Write_Int@sign
  6510  0D25  3181  2146  318C   	fcall	_LCD_Write_Int
  6511                           
  6512                           ;buttons.c: 79: LCD_Write_Char(0);
  6513  0D28  3000               	movlw	0
  6514  0D29  3189  21A6  318C   	fcall	_LCD_Write_Char
  6515                           
  6516                           ;buttons.c: 80: LCD_Write_Char('C');
  6517  0D2C  3043               	movlw	67
  6518  0D2D  3189  21A6  318C   	fcall	_LCD_Write_Char
  6519                           
  6520                           ;buttons.c: 81: LCD_Write_Char(' ');
  6521  0D30  3020               	movlw	32
  6522  0D31  3189  21A6  318C   	fcall	_LCD_Write_Char
  6523                           
  6524                           ;buttons.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6525  0D34  3002               	movlw	2
  6526  0D35  0020               	movlb	0	; select bank0
  6527  0D36  00AF               	movwf	??_readButtons+1
  6528  0D37  30E7               	movlw	231
  6529  0D38  00AE               	movwf	??_readButtons
  6530  0D39  3000               	movlw	0
  6531  0D3A                     u3307:	
  6532  0D3A  0B89               	decfsz	9,f
  6533  0D3B  2D3A               	goto	u3307
  6534  0D3C  0BAE               	decfsz	??_readButtons,f
  6535  0D3D  2D3A               	goto	u3307
  6536  0D3E  0BAF               	decfsz	??_readButtons+1,f
  6537  0D3F  2D3A               	goto	u3307
  6538  0D40  0000               	nop
  6539                           
  6540                           ;buttons.c: 83: toggleCount = 0;
  6541  0D41  0021               	movlb	1	; select bank1
  6542  0D42  01E2               	clrf	_toggleCount^(0+128)
  6543                           
  6544                           ;buttons.c: 84: LCD_Clear();
  6545  0D43  3197  27E4  318C   	fcall	_LCD_Clear
  6546  0D46                     l2592:	
  6547  0D46  0020               	movlb	0	; select bank0
  6548  0D47  198C               	btfsc	12,3	;volatile
  6549  0D48  2D4B               	goto	l389
  6550  0D49  1E0C               	btfss	12,4	;volatile
  6551  0D4A  2CE7               	goto	l2558
  6552  0D4B                     l389:	
  6553                           
  6554                           ;buttons.c: 85: }
  6555                           ;buttons.c: 86: }
  6556                           ;buttons.c: 88: if(RA3 == 0)
  6557  0D4B  198C               	btfsc	12,3	;volatile
  6558  0D4C  2D5A               	goto	l2602
  6559                           
  6560                           ;buttons.c: 89: {
  6561                           ;buttons.c: 90: downCount +=1;
  6562  0D4D  3001               	movlw	1
  6563  0D4E  00AE               	movwf	??_readButtons
  6564  0D4F  082E               	movf	??_readButtons,w
  6565  0D50  07EF               	addwf	_downCount,f
  6566                           
  6567                           ;buttons.c: 91: if(downCount>5)
  6568  0D51  3006               	movlw	6
  6569  0D52  026F               	subwf	_downCount,w
  6570  0D53  1C03               	skipc
  6571  0D54  2D5B               	goto	l2604
  6572                           
  6573                           ;buttons.c: 92: {
  6574                           ;buttons.c: 93: downCount = 5;
  6575  0D55  3005               	movlw	5
  6576  0D56  00AE               	movwf	??_readButtons
  6577  0D57  082E               	movf	??_readButtons,w
  6578  0D58  00EF               	movwf	_downCount
  6579                           
  6580                           ;buttons.c: 94: }
  6581                           ;buttons.c: 95: }
  6582  0D59  2D5B               	goto	l2604
  6583  0D5A                     l2602:	
  6584                           
  6585                           ;buttons.c: 96: else
  6586                           ;buttons.c: 97: {
  6587                           ;buttons.c: 98: downCount = 0;
  6588  0D5A  01EF               	clrf	_downCount
  6589  0D5B                     l2604:	
  6590                           
  6591                           ;buttons.c: 99: }
  6592                           ;buttons.c: 101: if(RA4 == 0)
  6593  0D5B  1A0C               	btfsc	12,4	;volatile
  6594  0D5C  2D6A               	goto	l2612
  6595                           
  6596                           ;buttons.c: 102: {
  6597                           ;buttons.c: 103: upCount +=1;
  6598  0D5D  3001               	movlw	1
  6599  0D5E  00AE               	movwf	??_readButtons
  6600  0D5F  082E               	movf	??_readButtons,w
  6601  0D60  07EE               	addwf	_upCount,f
  6602                           
  6603                           ;buttons.c: 104: if(upCount>5)
  6604  0D61  3006               	movlw	6
  6605  0D62  026E               	subwf	_upCount,w
  6606  0D63  1C03               	skipc
  6607  0D64  0008               	return
  6608                           
  6609                           ;buttons.c: 105: {
  6610                           ;buttons.c: 106: upCount = 5;
  6611  0D65  3005               	movlw	5
  6612  0D66  00AE               	movwf	??_readButtons
  6613  0D67  082E               	movf	??_readButtons,w
  6614  0D68  00EE               	movwf	_upCount
  6615                           
  6616                           ;buttons.c: 107: }
  6617                           ;buttons.c: 108: }
  6618  0D69  0008               	return
  6619  0D6A                     l2612:	
  6620                           
  6621                           ;buttons.c: 109: else
  6622                           ;buttons.c: 110: {
  6623                           ;buttons.c: 111: upCount = 0;
  6624  0D6A  01EE               	clrf	_upCount
  6625  0D6B  0008               	return
  6626  0D6C                     __end_of_readButtons:	
  6627                           
  6628                           	psect	text3
  6629  08E5                     __ptext3:	
  6630 ;; *************** function _LCD_Write_String *****************
  6631 ;; Defined at:
  6632 ;;		line 239 in file "lcd.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  a               2    5[COMMON] PTR const unsigned char 
  6635 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(6), 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  i               2    8[COMMON] int 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:        5 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		_LCD_Write_Char
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;;		_tempSetpoint
  6659 ;;		_readButtons
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _LCD_Write_String
  6665  08E5                     _LCD_Write_String:	
  6666                           
  6667                           ;lcd.c: 241: int i;
  6668                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6672  08E5  01F8               	clrf	LCD_Write_String@i
  6673  08E6  01F9               	clrf	LCD_Write_String@i+1
  6674  08E7                     l2206:	
  6675  08E7  0875               	movf	LCD_Write_String@a,w
  6676  08E8  0778               	addwf	LCD_Write_String@i,w
  6677  08E9  0084               	movwf	4
  6678  08EA  0876               	movf	LCD_Write_String@a+1,w
  6679  08EB  3D79               	addwfc	LCD_Write_String@i+1,w
  6680  08EC  0085               	movwf	5
  6681  08ED  0012               	moviw fsr0++
  6682  08EE  1903               	btfsc	3,2
  6683  08EF  0008               	return
  6684                           
  6685                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6686  08F0  0875               	movf	LCD_Write_String@a,w
  6687  08F1  0778               	addwf	LCD_Write_String@i,w
  6688  08F2  0084               	movwf	4
  6689  08F3  0876               	movf	LCD_Write_String@a+1,w
  6690  08F4  3D79               	addwfc	LCD_Write_String@i+1,w
  6691  08F5  0085               	movwf	5
  6692  08F6  0800               	movf	0,w	;code access
  6693  08F7  3189  21A6  3188   	fcall	_LCD_Write_Char
  6694  08FA  3001               	movlw	1
  6695  08FB  07F8               	addwf	LCD_Write_String@i,f
  6696  08FC  3000               	movlw	0
  6697  08FD  3DF9               	addwfc	LCD_Write_String@i+1,f
  6698  08FE  28E7               	goto	l2206
  6699  08FF                     __end_of_LCD_Write_String:	
  6700                           
  6701                           	psect	text4
  6702  0146                     __ptext4:	
  6703 ;; *************** function _LCD_Write_Int *****************
  6704 ;; Defined at:
  6705 ;;		line 246 in file "lcd.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  value           2    9[COMMON] int 
  6708 ;;  fieldLength     1   11[COMMON] char 
  6709 ;;  numPlaces       1   12[COMMON] char 
  6710 ;;  sign            1   13[COMMON] char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  str             5    5[BANK0 ] unsigned char [5]
  6713 ;;  i               2   12[BANK0 ] int 
  6714 ;;  j               2   10[BANK0 ] int 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:       19 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    2
  6731 ;; This function calls:
  6732 ;;		_LCD_Write_Char
  6733 ;;		___awdiv
  6734 ;;		___awmod
  6735 ;; This function is called by:
  6736 ;;		_main
  6737 ;;		_tempSetpoint
  6738 ;;		_readButtons
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _LCD_Write_Int
  6744  0146                     _LCD_Write_Int:	
  6745                           
  6746                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6747                           
  6748                           ;incstack = 0
  6749                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6750  0146  30C8               	movlw	low LCD_Write_Int@F14394
  6751  0147  0086               	movwf	6
  6752  0148  3000               	movlw	high LCD_Write_Int@F14394
  6753  0149  0087               	movwf	7
  6754  014A  3025               	movlw	low LCD_Write_Int@str
  6755  014B  0084               	movwf	4
  6756  014C  3000               	movlw	high LCD_Write_Int@str
  6757  014D  0085               	movwf	5
  6758  014E  3005               	movlw	5
  6759  014F  0020               	movlb	0	; select bank0
  6760  0150  00A0               	movwf	??_LCD_Write_Int
  6761  0151                     u2050:	
  6762  0151  0016               	moviw fsr1++
  6763  0152  001A               	movwi fsr0++
  6764  0153  0BA0               	decfsz	??_LCD_Write_Int,f
  6765  0154  2951               	goto	u2050
  6766                           
  6767                           ;lcd.c: 249: int i=4,j=0;
  6768  0155  3004               	movlw	4
  6769  0156  00AC               	movwf	LCD_Write_Int@i
  6770  0157  3000               	movlw	0
  6771  0158  00AD               	movwf	LCD_Write_Int@i+1
  6772  0159  01AA               	clrf	LCD_Write_Int@j
  6773  015A  01AB               	clrf	LCD_Write_Int@j+1
  6774                           
  6775                           ;lcd.c: 251: if(value<0)
  6776  015B  1FFA               	btfss	LCD_Write_Int@value+1,7
  6777  015C  2967               	goto	l2220
  6778                           
  6779                           ;lcd.c: 252: {
  6780                           ;lcd.c: 253: LCD_Write_Char('-');
  6781  015D  302D               	movlw	45
  6782  015E  3189  21A6  3181   	fcall	_LCD_Write_Char
  6783                           
  6784                           ;lcd.c: 254: value=value*-1;
  6785  0161  09F9               	comf	LCD_Write_Int@value,f
  6786  0162  09FA               	comf	LCD_Write_Int@value+1,f
  6787  0163  0AF9               	incf	LCD_Write_Int@value,f
  6788  0164  1903               	skipnz
  6789  0165  0AFA               	incf	LCD_Write_Int@value+1,f
  6790                           
  6791                           ;lcd.c: 255: }
  6792  0166  296E               	goto	l2230
  6793  0167                     l2220:	
  6794                           
  6795                           ;lcd.c: 257: else
  6796                           ;lcd.c: 258: {
  6797                           ;lcd.c: 259: if(sign == 1)
  6798  0167  037D               	decf	LCD_Write_Int@sign,w
  6799  0168  1D03               	btfss	3,2
  6800  0169  296E               	goto	l2230
  6801                           
  6802                           ;lcd.c: 260: {
  6803                           ;lcd.c: 261: LCD_Write_Char('+');
  6804  016A  302B               	movlw	43
  6805  016B  3189  21A6  3181   	fcall	_LCD_Write_Char
  6806  016E                     l2230:	
  6807                           ;lcd.c: 262: }
  6808                           ;lcd.c: 263: }
  6809                           ;lcd.c: 265: while(value)
  6810                           
  6811  016E  0879               	movf	LCD_Write_Int@value,w
  6812  016F  047A               	iorwf	LCD_Write_Int@value+1,w
  6813  0170  1903               	btfsc	3,2
  6814  0171  299B               	goto	l2232
  6815                           
  6816                           ;lcd.c: 266: {
  6817                           ;lcd.c: 267: str[i]=value%10;
  6818  0172  300A               	movlw	10
  6819  0173  00F0               	movwf	___awmod@divisor
  6820  0174  3000               	movlw	0
  6821  0175  00F1               	movwf	___awmod@divisor+1
  6822  0176  087A               	movf	LCD_Write_Int@value+1,w
  6823  0177  00F3               	movwf	___awmod@dividend+1
  6824  0178  0879               	movf	LCD_Write_Int@value,w
  6825  0179  00F2               	movwf	___awmod@dividend
  6826  017A  318B  2325  3181   	fcall	___awmod
  6827  017D  0870               	movf	?___awmod,w
  6828  017E  0020               	movlb	0	; select bank0
  6829  017F  00A0               	movwf	??_LCD_Write_Int
  6830  0180  082C               	movf	LCD_Write_Int@i,w
  6831  0181  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6832  0182  0086               	movwf	6
  6833  0183  0187               	clrf	7
  6834  0184  0820               	movf	??_LCD_Write_Int,w
  6835  0185  0081               	movwf	1
  6836                           
  6837                           ;lcd.c: 268: value=value/10;
  6838  0186  300A               	movlw	10
  6839  0187  00F0               	movwf	___awdiv@divisor
  6840  0188  3000               	movlw	0
  6841  0189  00F1               	movwf	___awdiv@divisor+1
  6842  018A  087A               	movf	LCD_Write_Int@value+1,w
  6843  018B  00F3               	movwf	___awdiv@dividend+1
  6844  018C  0879               	movf	LCD_Write_Int@value,w
  6845  018D  00F2               	movwf	___awdiv@dividend
  6846  018E  318B  236A  3181   	fcall	___awdiv
  6847  0191  0871               	movf	?___awdiv+1,w
  6848  0192  00FA               	movwf	LCD_Write_Int@value+1
  6849  0193  0870               	movf	?___awdiv,w
  6850  0194  00F9               	movwf	LCD_Write_Int@value
  6851                           
  6852                           ;lcd.c: 269: i--;
  6853  0195  30FF               	movlw	255
  6854  0196  0020               	movlb	0	; select bank0
  6855  0197  07AC               	addwf	LCD_Write_Int@i,f
  6856  0198  30FF               	movlw	255
  6857  0199  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6858  019A  296E               	goto	l2230
  6859  019B                     l2232:	
  6860                           
  6861                           ;lcd.c: 270: }
  6862                           ;lcd.c: 271: if(fieldLength==-1)
  6863  019B  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6864  019C  1903               	btfsc	3,2
  6865  019D  29A4               	goto	l2238
  6866  019E  29AD               	goto	l2240
  6867  019F                     l2236:	
  6868                           ;lcd.c: 272: {
  6869                           ;lcd.c: 273: while(str[j]==0)
  6870                           
  6871                           
  6872                           ;lcd.c: 274: {
  6873                           ;lcd.c: 275: j++;
  6874  019F  3001               	movlw	1
  6875  01A0  0020               	movlb	0	; select bank0
  6876  01A1  07AA               	addwf	LCD_Write_Int@j,f
  6877  01A2  3000               	movlw	0
  6878  01A3  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6879  01A4                     l2238:	
  6880  01A4  0020               	movlb	0	; select bank0
  6881  01A5  082A               	movf	LCD_Write_Int@j,w
  6882  01A6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6883  01A7  0086               	movwf	6
  6884  01A8  0187               	clrf	7
  6885  01A9  0801               	movf	1,w
  6886  01AA  1D03               	btfss	3,2
  6887  01AB  29BE               	goto	l2242
  6888  01AC  299F               	goto	l2236
  6889  01AD                     l2240:	
  6890                           ;lcd.c: 276: }
  6891                           ;lcd.c: 277: }
  6892                           
  6893                           
  6894                           ;lcd.c: 278: else
  6895                           ;lcd.c: 279: {
  6896                           ;lcd.c: 280: j=5-fieldLength;
  6897  01AD  087B               	movf	LCD_Write_Int@fieldLength,w
  6898  01AE  0020               	movlb	0	; select bank0
  6899  01AF  00A0               	movwf	??_LCD_Write_Int
  6900  01B0  01A1               	clrf	??_LCD_Write_Int+1
  6901  01B1  1BA0               	btfsc	??_LCD_Write_Int,7
  6902  01B2  03A1               	decf	??_LCD_Write_Int+1,f
  6903  01B3  09A0               	comf	??_LCD_Write_Int,f
  6904  01B4  09A1               	comf	??_LCD_Write_Int+1,f
  6905  01B5  0AA0               	incf	??_LCD_Write_Int,f
  6906  01B6  1903               	skipnz
  6907  01B7  0AA1               	incf	??_LCD_Write_Int+1,f
  6908  01B8  0820               	movf	??_LCD_Write_Int,w
  6909  01B9  3E05               	addlw	5
  6910  01BA  00AA               	movwf	LCD_Write_Int@j
  6911  01BB  3000               	movlw	0
  6912  01BC  3D21               	addwfc	??_LCD_Write_Int+1,w
  6913  01BD  00AB               	movwf	LCD_Write_Int@j+1
  6914  01BE                     l2242:	
  6915                           
  6916                           ;lcd.c: 281: }
  6917                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6918  01BE  082B               	movf	LCD_Write_Int@j+1,w
  6919  01BF  00AD               	movwf	LCD_Write_Int@i+1
  6920  01C0  082A               	movf	LCD_Write_Int@j,w
  6921  01C1  00AC               	movwf	LCD_Write_Int@i
  6922  01C2                     l2248:	
  6923  01C2  087C               	movf	LCD_Write_Int@numPlaces,w
  6924  01C3  00A0               	movwf	??_LCD_Write_Int
  6925  01C4  01A1               	clrf	??_LCD_Write_Int+1
  6926  01C5  1BA0               	btfsc	??_LCD_Write_Int,7
  6927  01C6  03A1               	decf	??_LCD_Write_Int+1,f
  6928  01C7  09A0               	comf	??_LCD_Write_Int,f
  6929  01C8  09A1               	comf	??_LCD_Write_Int+1,f
  6930  01C9  0AA0               	incf	??_LCD_Write_Int,f
  6931  01CA  1903               	skipnz
  6932  01CB  0AA1               	incf	??_LCD_Write_Int+1,f
  6933  01CC  0820               	movf	??_LCD_Write_Int,w
  6934  01CD  3E05               	addlw	5
  6935  01CE  00A2               	movwf	??_LCD_Write_Int+2
  6936  01CF  3000               	movlw	0
  6937  01D0  3D21               	addwfc	??_LCD_Write_Int+1,w
  6938  01D1  00A3               	movwf	??_LCD_Write_Int+3
  6939  01D2  082D               	movf	LCD_Write_Int@i+1,w
  6940  01D3  3A80               	xorlw	128
  6941  01D4  00A4               	movwf	??_LCD_Write_Int+4
  6942  01D5  0823               	movf	??_LCD_Write_Int+3,w
  6943  01D6  3A80               	xorlw	128
  6944  01D7  0224               	subwf	??_LCD_Write_Int+4,w
  6945  01D8  1D03               	skipz
  6946  01D9  29DC               	goto	u2115
  6947  01DA  0822               	movf	??_LCD_Write_Int+2,w
  6948  01DB  022C               	subwf	LCD_Write_Int@i,w
  6949  01DC                     u2115:	
  6950  01DC  1803               	btfsc	3,0
  6951  01DD  29EE               	goto	l2250
  6952                           
  6953                           ;lcd.c: 284: {
  6954                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6955  01DE  0020               	movlb	0	; select bank0
  6956  01DF  082C               	movf	LCD_Write_Int@i,w
  6957  01E0  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6958  01E1  0086               	movwf	6
  6959  01E2  0187               	clrf	7
  6960  01E3  0801               	movf	1,w
  6961  01E4  3E30               	addlw	48
  6962  01E5  3189  21A6  3181   	fcall	_LCD_Write_Char
  6963  01E8  3001               	movlw	1
  6964  01E9  0020               	movlb	0	; select bank0
  6965  01EA  07AC               	addwf	LCD_Write_Int@i,f
  6966  01EB  3000               	movlw	0
  6967  01EC  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6968  01ED  29C2               	goto	l2248
  6969  01EE                     l2250:	
  6970                           
  6971                           ;lcd.c: 286: }
  6972                           ;lcd.c: 288: if(numPlaces == 1)
  6973  01EE  037C               	decf	LCD_Write_Int@numPlaces,w
  6974  01EF  1D03               	btfss	3,2
  6975  01F0  29FB               	goto	l2254
  6976                           
  6977                           ;lcd.c: 289: {
  6978                           ;lcd.c: 290: LCD_Write_Char(46);
  6979  01F1  302E               	movlw	46
  6980  01F2  3189  21A6  3181   	fcall	_LCD_Write_Char
  6981                           
  6982                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6983  01F5  0020               	movlb	0	; select bank0
  6984  01F6  0829               	movf	LCD_Write_Int@str+4,w
  6985  01F7  3E30               	addlw	48
  6986  01F8  3189  21A6  3181   	fcall	_LCD_Write_Char
  6987  01FB                     l2254:	
  6988                           
  6989                           ;lcd.c: 292: }
  6990                           ;lcd.c: 294: if(numPlaces == 2)
  6991  01FB  3002               	movlw	2
  6992  01FC  067C               	xorwf	LCD_Write_Int@numPlaces,w
  6993  01FD  1D03               	btfss	3,2
  6994  01FE  0008               	return
  6995                           
  6996                           ;lcd.c: 295: {
  6997                           ;lcd.c: 296: LCD_Write_Char(46);
  6998  01FF  302E               	movlw	46
  6999  0200  3189  21A6  3181   	fcall	_LCD_Write_Char
  7000                           
  7001                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7002  0203  0020               	movlb	0	; select bank0
  7003  0204  0828               	movf	LCD_Write_Int@str+3,w
  7004  0205  3E30               	addlw	48
  7005  0206  3189  21A6  3181   	fcall	_LCD_Write_Char
  7006                           
  7007                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7008  0209  0020               	movlb	0	; select bank0
  7009  020A  0829               	movf	LCD_Write_Int@str+4,w
  7010  020B  3E30               	addlw	48
  7011  020C  3189  21A6         	fcall	_LCD_Write_Char
  7012  020E  0008               	return
  7013  020F                     __end_of_LCD_Write_Int:	
  7014                           
  7015                           	psect	text5
  7016  0B25                     __ptext5:	
  7017 ;; *************** function ___awmod *****************
  7018 ;; Defined at:
  7019 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  divisor         2    0[COMMON] int 
  7022 ;;  dividend        2    2[COMMON] int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  sign            1    6[COMMON] unsigned char 
  7025 ;;  counter         1    5[COMMON] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2    0[COMMON] int 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;Total ram usage:        7 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_LCD_Write_Int
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function ___awmod
  7050  0B25                     ___awmod:	
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7054  0B25  01F6               	clrf	___awmod@sign
  7055  0B26  1FF3               	btfss	___awmod@dividend+1,7
  7056  0B27  2B2F               	goto	l2148
  7057  0B28  09F2               	comf	___awmod@dividend,f
  7058  0B29  09F3               	comf	___awmod@dividend+1,f
  7059  0B2A  0AF2               	incf	___awmod@dividend,f
  7060  0B2B  1903               	skipnz
  7061  0B2C  0AF3               	incf	___awmod@dividend+1,f
  7062  0B2D  01F6               	clrf	___awmod@sign
  7063  0B2E  0AF6               	incf	___awmod@sign,f
  7064  0B2F                     l2148:	
  7065  0B2F  1FF1               	btfss	___awmod@divisor+1,7
  7066  0B30  2B36               	goto	l2152
  7067  0B31  09F0               	comf	___awmod@divisor,f
  7068  0B32  09F1               	comf	___awmod@divisor+1,f
  7069  0B33  0AF0               	incf	___awmod@divisor,f
  7070  0B34  1903               	skipnz
  7071  0B35  0AF1               	incf	___awmod@divisor+1,f
  7072  0B36                     l2152:	
  7073  0B36  0870               	movf	___awmod@divisor,w
  7074  0B37  0471               	iorwf	___awmod@divisor+1,w
  7075  0B38  1903               	btfsc	3,2
  7076  0B39  2B5D               	goto	l2170
  7077  0B3A  01F5               	clrf	___awmod@counter
  7078  0B3B  0AF5               	incf	___awmod@counter,f
  7079  0B3C                     l2160:	
  7080  0B3C  1BF1               	btfsc	___awmod@divisor+1,7
  7081  0B3D  2B48               	goto	l2162
  7082  0B3E  3001               	movlw	1
  7083  0B3F                     u1945:	
  7084  0B3F  35F0               	lslf	___awmod@divisor,f
  7085  0B40  0DF1               	rlf	___awmod@divisor+1,f
  7086  0B41  0B89               	decfsz	9,f
  7087  0B42  2B3F               	goto	u1945
  7088  0B43  3001               	movlw	1
  7089  0B44  00F4               	movwf	??___awmod
  7090  0B45  0874               	movf	??___awmod,w
  7091  0B46  07F5               	addwf	___awmod@counter,f
  7092  0B47  2B3C               	goto	l2160
  7093  0B48                     l2162:	
  7094  0B48  0871               	movf	___awmod@divisor+1,w
  7095  0B49  0273               	subwf	___awmod@dividend+1,w
  7096  0B4A  1D03               	skipz
  7097  0B4B  2B4E               	goto	u1965
  7098  0B4C  0870               	movf	___awmod@divisor,w
  7099  0B4D  0272               	subwf	___awmod@dividend,w
  7100  0B4E                     u1965:	
  7101  0B4E  1C03               	skipc
  7102  0B4F  2B54               	goto	l2166
  7103  0B50  0870               	movf	___awmod@divisor,w
  7104  0B51  02F2               	subwf	___awmod@dividend,f
  7105  0B52  0871               	movf	___awmod@divisor+1,w
  7106  0B53  3BF3               	subwfb	___awmod@dividend+1,f
  7107  0B54                     l2166:	
  7108  0B54  3001               	movlw	1
  7109  0B55                     u1975:	
  7110  0B55  36F1               	lsrf	___awmod@divisor+1,f
  7111  0B56  0CF0               	rrf	___awmod@divisor,f
  7112  0B57  0B89               	decfsz	9,f
  7113  0B58  2B55               	goto	u1975
  7114  0B59  3001               	movlw	1
  7115  0B5A  02F5               	subwf	___awmod@counter,f
  7116  0B5B  1D03               	btfss	3,2
  7117  0B5C  2B48               	goto	l2162
  7118  0B5D                     l2170:	
  7119  0B5D  0876               	movf	___awmod@sign,w
  7120  0B5E  1903               	btfsc	3,2
  7121  0B5F  2B65               	goto	l2174
  7122  0B60  09F2               	comf	___awmod@dividend,f
  7123  0B61  09F3               	comf	___awmod@dividend+1,f
  7124  0B62  0AF2               	incf	___awmod@dividend,f
  7125  0B63  1903               	skipnz
  7126  0B64  0AF3               	incf	___awmod@dividend+1,f
  7127  0B65                     l2174:	
  7128  0B65  0873               	movf	___awmod@dividend+1,w
  7129  0B66  00F1               	movwf	?___awmod+1
  7130  0B67  0872               	movf	___awmod@dividend,w
  7131  0B68  00F0               	movwf	?___awmod
  7132  0B69  0008               	return
  7133  0B6A                     __end_of___awmod:	
  7134                           
  7135                           	psect	text6
  7136  0B6A                     __ptext6:	
  7137 ;; *************** function ___awdiv *****************
  7138 ;; Defined at:
  7139 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  divisor         2    0[COMMON] int 
  7142 ;;  dividend        2    2[COMMON] int 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  quotient        2    7[COMMON] int 
  7145 ;;  sign            1    6[COMMON] unsigned char 
  7146 ;;  counter         1    5[COMMON] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2    0[COMMON] int 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;Total ram usage:        9 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_LCD_Write_Int
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function ___awdiv
  7171  0B6A                     ___awdiv:	
  7172                           
  7173                           ;incstack = 0
  7174                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7175  0B6A  01F6               	clrf	___awdiv@sign
  7176  0B6B  1FF1               	btfss	___awdiv@divisor+1,7
  7177  0B6C  2B74               	goto	l2104
  7178  0B6D  09F0               	comf	___awdiv@divisor,f
  7179  0B6E  09F1               	comf	___awdiv@divisor+1,f
  7180  0B6F  0AF0               	incf	___awdiv@divisor,f
  7181  0B70  1903               	skipnz
  7182  0B71  0AF1               	incf	___awdiv@divisor+1,f
  7183  0B72  01F6               	clrf	___awdiv@sign
  7184  0B73  0AF6               	incf	___awdiv@sign,f
  7185  0B74                     l2104:	
  7186  0B74  1FF3               	btfss	___awdiv@dividend+1,7
  7187  0B75  2B7F               	goto	l2110
  7188  0B76  09F2               	comf	___awdiv@dividend,f
  7189  0B77  09F3               	comf	___awdiv@dividend+1,f
  7190  0B78  0AF2               	incf	___awdiv@dividend,f
  7191  0B79  1903               	skipnz
  7192  0B7A  0AF3               	incf	___awdiv@dividend+1,f
  7193  0B7B  3001               	movlw	1
  7194  0B7C  00F4               	movwf	??___awdiv
  7195  0B7D  0874               	movf	??___awdiv,w
  7196  0B7E  06F6               	xorwf	___awdiv@sign,f
  7197  0B7F                     l2110:	
  7198  0B7F  01F7               	clrf	___awdiv@quotient
  7199  0B80  01F8               	clrf	___awdiv@quotient+1
  7200  0B81  0870               	movf	___awdiv@divisor,w
  7201  0B82  0471               	iorwf	___awdiv@divisor+1,w
  7202  0B83  1903               	btfsc	3,2
  7203  0B84  2BAE               	goto	l2132
  7204  0B85  01F5               	clrf	___awdiv@counter
  7205  0B86  0AF5               	incf	___awdiv@counter,f
  7206  0B87                     l2120:	
  7207  0B87  1BF1               	btfsc	___awdiv@divisor+1,7
  7208  0B88  2B93               	goto	l2122
  7209  0B89  3001               	movlw	1
  7210  0B8A                     u1845:	
  7211  0B8A  35F0               	lslf	___awdiv@divisor,f
  7212  0B8B  0DF1               	rlf	___awdiv@divisor+1,f
  7213  0B8C  0B89               	decfsz	9,f
  7214  0B8D  2B8A               	goto	u1845
  7215  0B8E  3001               	movlw	1
  7216  0B8F  00F4               	movwf	??___awdiv
  7217  0B90  0874               	movf	??___awdiv,w
  7218  0B91  07F5               	addwf	___awdiv@counter,f
  7219  0B92  2B87               	goto	l2120
  7220  0B93                     l2122:	
  7221  0B93  3001               	movlw	1
  7222  0B94                     u1865:	
  7223  0B94  35F7               	lslf	___awdiv@quotient,f
  7224  0B95  0DF8               	rlf	___awdiv@quotient+1,f
  7225  0B96  0B89               	decfsz	9,f
  7226  0B97  2B94               	goto	u1865
  7227  0B98  0871               	movf	___awdiv@divisor+1,w
  7228  0B99  0273               	subwf	___awdiv@dividend+1,w
  7229  0B9A  1D03               	skipz
  7230  0B9B  2B9E               	goto	u1875
  7231  0B9C  0870               	movf	___awdiv@divisor,w
  7232  0B9D  0272               	subwf	___awdiv@dividend,w
  7233  0B9E                     u1875:	
  7234  0B9E  1C03               	skipc
  7235  0B9F  2BA5               	goto	l2128
  7236  0BA0  0870               	movf	___awdiv@divisor,w
  7237  0BA1  02F2               	subwf	___awdiv@dividend,f
  7238  0BA2  0871               	movf	___awdiv@divisor+1,w
  7239  0BA3  3BF3               	subwfb	___awdiv@dividend+1,f
  7240  0BA4  1477               	bsf	___awdiv@quotient,0
  7241  0BA5                     l2128:	
  7242  0BA5  3001               	movlw	1
  7243  0BA6                     u1885:	
  7244  0BA6  36F1               	lsrf	___awdiv@divisor+1,f
  7245  0BA7  0CF0               	rrf	___awdiv@divisor,f
  7246  0BA8  0B89               	decfsz	9,f
  7247  0BA9  2BA6               	goto	u1885
  7248  0BAA  3001               	movlw	1
  7249  0BAB  02F5               	subwf	___awdiv@counter,f
  7250  0BAC  1D03               	btfss	3,2
  7251  0BAD  2B93               	goto	l2122
  7252  0BAE                     l2132:	
  7253  0BAE  0876               	movf	___awdiv@sign,w
  7254  0BAF  1903               	btfsc	3,2
  7255  0BB0  2BB6               	goto	l2136
  7256  0BB1  09F7               	comf	___awdiv@quotient,f
  7257  0BB2  09F8               	comf	___awdiv@quotient+1,f
  7258  0BB3  0AF7               	incf	___awdiv@quotient,f
  7259  0BB4  1903               	skipnz
  7260  0BB5  0AF8               	incf	___awdiv@quotient+1,f
  7261  0BB6                     l2136:	
  7262  0BB6  0878               	movf	___awdiv@quotient+1,w
  7263  0BB7  00F1               	movwf	?___awdiv+1
  7264  0BB8  0877               	movf	___awdiv@quotient,w
  7265  0BB9  00F0               	movwf	?___awdiv
  7266  0BBA  0008               	return
  7267  0BBB                     __end_of___awdiv:	
  7268                           
  7269                           	psect	text7
  7270  0AE6                     __ptext7:	
  7271 ;; *************** function _LCD_Set_Cursor *****************
  7272 ;; Defined at:
  7273 ;;		line 82 in file "lcd.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  x               1    wreg     unsigned char 
  7276 ;;  y               1    2[COMMON] unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  x               1    5[COMMON] unsigned char 
  7279 ;;  temp            1    8[COMMON] unsigned char 
  7280 ;;  w               1    7[COMMON] unsigned char 
  7281 ;;  z               1    6[COMMON] unsigned char 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0, pclath, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;Total ram usage:        7 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    2
  7298 ;; This function calls:
  7299 ;;		_LCD_Cmd
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;;		_tempSetpoint
  7303 ;;		_readButtons
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _LCD_Set_Cursor
  7309  0AE6                     _LCD_Set_Cursor:	
  7310                           
  7311                           ;incstack = 0
  7312                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7313                           ;LCD_Set_Cursor@x stored from wreg
  7314  0AE6  00F5               	movwf	LCD_Set_Cursor@x
  7315                           
  7316                           ;lcd.c: 86: char temp,z,w;
  7317                           ;lcd.c: 88: if(x == 0)
  7318  0AE7  0875               	movf	LCD_Set_Cursor@x,w
  7319  0AE8  1D03               	btfss	3,2
  7320  0AE9  2B06               	goto	l2190
  7321                           
  7322                           ;lcd.c: 89: {
  7323                           ;lcd.c: 90: temp = 0x80 + y;
  7324  0AEA  0872               	movf	LCD_Set_Cursor@y,w
  7325  0AEB  3E80               	addlw	128
  7326  0AEC  00F3               	movwf	??_LCD_Set_Cursor
  7327  0AED  0873               	movf	??_LCD_Set_Cursor,w
  7328  0AEE  00F8               	movwf	LCD_Set_Cursor@temp
  7329                           
  7330                           ;lcd.c: 91: z = temp>>4;
  7331  0AEF  0878               	movf	LCD_Set_Cursor@temp,w
  7332  0AF0  00F3               	movwf	??_LCD_Set_Cursor
  7333  0AF1  3004               	movlw	4
  7334  0AF2                     u2015:	
  7335  0AF2  36F3               	lsrf	??_LCD_Set_Cursor,f
  7336  0AF3  0B89               	decfsz	9,f
  7337  0AF4  2AF2               	goto	u2015
  7338  0AF5  0873               	movf	??_LCD_Set_Cursor,w
  7339  0AF6  00F4               	movwf	??_LCD_Set_Cursor+1
  7340  0AF7  0874               	movf	??_LCD_Set_Cursor+1,w
  7341  0AF8  00F6               	movwf	LCD_Set_Cursor@z
  7342                           
  7343                           ;lcd.c: 92: w = temp & 0x0F;
  7344  0AF9  0878               	movf	LCD_Set_Cursor@temp,w
  7345  0AFA  390F               	andlw	15
  7346  0AFB  00F3               	movwf	??_LCD_Set_Cursor
  7347  0AFC  0873               	movf	??_LCD_Set_Cursor,w
  7348  0AFD  00F7               	movwf	LCD_Set_Cursor@w
  7349                           
  7350                           ;lcd.c: 93: LCD_Cmd(z);
  7351  0AFE  0876               	movf	LCD_Set_Cursor@z,w
  7352  0AFF  3188  202C  318A   	fcall	_LCD_Cmd
  7353                           
  7354                           ;lcd.c: 94: LCD_Cmd(w);
  7355  0B02  0877               	movf	LCD_Set_Cursor@w,w
  7356  0B03  3188  202C         	fcall	_LCD_Cmd
  7357                           
  7358                           ;lcd.c: 95: }
  7359  0B05  0008               	return
  7360  0B06                     l2190:	
  7361                           
  7362                           ;lcd.c: 97: else if(x == 1)
  7363  0B06  0375               	decf	LCD_Set_Cursor@x,w
  7364  0B07  1D03               	btfss	3,2
  7365  0B08  0008               	return
  7366                           
  7367                           ;lcd.c: 98: {
  7368                           ;lcd.c: 99: temp = 0xC0 + y;
  7369  0B09  0872               	movf	LCD_Set_Cursor@y,w
  7370  0B0A  3EC0               	addlw	192
  7371  0B0B  00F3               	movwf	??_LCD_Set_Cursor
  7372  0B0C  0873               	movf	??_LCD_Set_Cursor,w
  7373  0B0D  00F8               	movwf	LCD_Set_Cursor@temp
  7374                           
  7375                           ;lcd.c: 100: z = temp>>4;
  7376  0B0E  0878               	movf	LCD_Set_Cursor@temp,w
  7377  0B0F  00F3               	movwf	??_LCD_Set_Cursor
  7378  0B10  3004               	movlw	4
  7379  0B11                     u2035:	
  7380  0B11  36F3               	lsrf	??_LCD_Set_Cursor,f
  7381  0B12  0B89               	decfsz	9,f
  7382  0B13  2B11               	goto	u2035
  7383  0B14  0873               	movf	??_LCD_Set_Cursor,w
  7384  0B15  00F4               	movwf	??_LCD_Set_Cursor+1
  7385  0B16  0874               	movf	??_LCD_Set_Cursor+1,w
  7386  0B17  00F6               	movwf	LCD_Set_Cursor@z
  7387                           
  7388                           ;lcd.c: 101: w = temp & 0x0F;
  7389  0B18  0878               	movf	LCD_Set_Cursor@temp,w
  7390  0B19  390F               	andlw	15
  7391  0B1A  00F3               	movwf	??_LCD_Set_Cursor
  7392  0B1B  0873               	movf	??_LCD_Set_Cursor,w
  7393  0B1C  00F7               	movwf	LCD_Set_Cursor@w
  7394                           
  7395                           ;lcd.c: 102: LCD_Cmd(z);
  7396  0B1D  0876               	movf	LCD_Set_Cursor@z,w
  7397  0B1E  3188  202C  318A   	fcall	_LCD_Cmd
  7398                           
  7399                           ;lcd.c: 103: LCD_Cmd(w);
  7400  0B21  0877               	movf	LCD_Set_Cursor@w,w
  7401  0B22  3188  202C         	fcall	_LCD_Cmd
  7402  0B24  0008               	return
  7403  0B25                     __end_of_LCD_Set_Cursor:	
  7404                           
  7405                           	psect	text8
  7406  0E9C                     __ptext8:	
  7407 ;; *************** function _log *****************
  7408 ;; Defined at:
  7409 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\log.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  x               3   39[BANK0 ] void 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  exponent        2   43[BANK0 ] int 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  3   39[BANK0 ] int 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        6 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    3
  7430 ;; This function calls:
  7431 ;;		___awtoft
  7432 ;;		___ftadd
  7433 ;;		___ftge
  7434 ;;		___ftmul
  7435 ;;		_eval_poly
  7436 ;;		_frexp
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _log
  7444  0E9C                     _log:	
  7445                           
  7446                           ;incstack = 0
  7447                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7448  0E9C  0020               	movlb	0	; select bank0
  7449  0E9D  0847               	movf	log@x,w
  7450  0E9E  00BD               	movwf	___ftge@ff1
  7451  0E9F  0848               	movf	log@x+1,w
  7452  0EA0  00BE               	movwf	___ftge@ff1+1
  7453  0EA1  0849               	movf	log@x+2,w
  7454  0EA2  00BF               	movwf	___ftge@ff1+2
  7455  0EA3  3000               	movlw	0
  7456  0EA4  00C0               	movwf	___ftge@ff2
  7457  0EA5  3000               	movlw	0
  7458  0EA6  00C1               	movwf	___ftge@ff2+1
  7459  0EA7  3000               	movlw	0
  7460  0EA8  00C2               	movwf	___ftge@ff2+2
  7461  0EA9  318A  22AA  318E   	fcall	___ftge
  7462  0EAC  1803               	btfsc	3,0
  7463  0EAD  2EBB               	goto	l2730
  7464  0EAE  3021               	movlw	33
  7465  0EAF  0021               	movlb	1	; select bank1
  7466  0EB0  00DC               	movwf	_errno^(0+128)
  7467  0EB1  3000               	movlw	0
  7468  0EB2  00DD               	movwf	(_errno^(0+128)+1)
  7469  0EB3  3000               	movlw	0
  7470  0EB4  0020               	movlb	0	; select bank0
  7471  0EB5  00C7               	movwf	?_log
  7472  0EB6  3000               	movlw	0
  7473  0EB7  00C8               	movwf	?_log+1
  7474  0EB8  3000               	movlw	0
  7475  0EB9  00C9               	movwf	?_log+2
  7476  0EBA  0008               	return
  7477  0EBB                     l2730:	
  7478  0EBB  0020               	movlb	0	; select bank0
  7479  0EBC  0849               	movf	log@x+2,w
  7480  0EBD  0448               	iorwf	log@x+1,w
  7481  0EBE  0447               	iorwf	log@x,w
  7482  0EBF  1D03               	skipz
  7483  0EC0  2ECE               	goto	l2736
  7484  0EC1  3022               	movlw	34
  7485  0EC2  0021               	movlb	1	; select bank1
  7486  0EC3  00DC               	movwf	_errno^(0+128)
  7487  0EC4  3000               	movlw	0
  7488  0EC5  00DD               	movwf	(_errno^(0+128)+1)
  7489  0EC6  3000               	movlw	0
  7490  0EC7  0020               	movlb	0	; select bank0
  7491  0EC8  00C7               	movwf	?_log
  7492  0EC9  3000               	movlw	0
  7493  0ECA  00C8               	movwf	?_log+1
  7494  0ECB  3000               	movlw	0
  7495  0ECC  00C9               	movwf	?_log+2
  7496  0ECD  0008               	return
  7497  0ECE                     l2736:	
  7498  0ECE  3000               	movlw	0
  7499  0ECF  00B0               	movwf	___ftadd@f1
  7500  0ED0  3080               	movlw	128
  7501  0ED1  00B1               	movwf	___ftadd@f1+1
  7502  0ED2  30BF               	movlw	191
  7503  0ED3  00B2               	movwf	___ftadd@f1+2
  7504  0ED4  3000               	movlw	0
  7505  0ED5  00A0               	movwf	___ftmul@f1
  7506  0ED6  3000               	movlw	0
  7507  0ED7  00A1               	movwf	___ftmul@f1+1
  7508  0ED8  3040               	movlw	64
  7509  0ED9  00A2               	movwf	___ftmul@f1+2
  7510  0EDA  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7511  0EDB  00CA               	movwf	??_log
  7512  0EDC  084A               	movf	??_log,w
  7513  0EDD  00F3               	movwf	frexp@eptr
  7514  0EDE  0847               	movf	log@x,w
  7515  0EDF  00F0               	movwf	frexp@value
  7516  0EE0  0848               	movf	log@x+1,w
  7517  0EE1  00F1               	movwf	frexp@value+1
  7518  0EE2  0849               	movf	log@x+2,w
  7519  0EE3  00F2               	movwf	frexp@value+2
  7520  0EE4  318A  226F  318E   	fcall	_frexp
  7521  0EE7  0870               	movf	?_frexp,w
  7522  0EE8  0020               	movlb	0	; select bank0
  7523  0EE9  00A3               	movwf	___ftmul@f2
  7524  0EEA  0871               	movf	?_frexp+1,w
  7525  0EEB  00A4               	movwf	___ftmul@f2+1
  7526  0EEC  0872               	movf	?_frexp+2,w
  7527  0EED  00A5               	movwf	___ftmul@f2+2
  7528  0EEE  318F  274C  318E   	fcall	___ftmul
  7529  0EF1  0020               	movlb	0	; select bank0
  7530  0EF2  0820               	movf	?___ftmul,w
  7531  0EF3  00B3               	movwf	___ftadd@f2
  7532  0EF4  0821               	movf	?___ftmul+1,w
  7533  0EF5  00B4               	movwf	___ftadd@f2+1
  7534  0EF6  0822               	movf	?___ftmul+2,w
  7535  0EF7  00B5               	movwf	___ftadd@f2+2
  7536  0EF8  3182  220F  318E   	fcall	___ftadd
  7537  0EFB  0020               	movlb	0	; select bank0
  7538  0EFC  0830               	movf	?___ftadd,w
  7539  0EFD  00C7               	movwf	log@x
  7540  0EFE  0831               	movf	?___ftadd+1,w
  7541  0EFF  00C8               	movwf	log@x+1
  7542  0F00  0832               	movf	?___ftadd+2,w
  7543  0F01  00C9               	movwf	log@x+2
  7544  0F02  30FF               	movlw	255
  7545  0F03  07CB               	addwf	log@exponent,f
  7546  0F04  30FF               	movlw	255
  7547  0F05  3DCC               	addwfc	log@exponent+1,f
  7548  0F06  0847               	movf	log@x,w
  7549  0F07  00BD               	movwf	eval_poly@x
  7550  0F08  0848               	movf	log@x+1,w
  7551  0F09  00BE               	movwf	eval_poly@x+1
  7552  0F0A  0849               	movf	log@x+2,w
  7553  0F0B  00BF               	movwf	eval_poly@x+2
  7554  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  7555  0F0D  00C0               	movwf	eval_poly@d
  7556  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  7557  0F0F  00C1               	movwf	eval_poly@d+1
  7558  0F10  3008               	movlw	8
  7559  0F11  00C2               	movwf	eval_poly@n
  7560  0F12  3000               	movlw	0
  7561  0F13  00C3               	movwf	eval_poly@n+1
  7562  0F14  318B  23BB  318E   	fcall	_eval_poly
  7563  0F17  0020               	movlb	0	; select bank0
  7564  0F18  083D               	movf	?_eval_poly,w
  7565  0F19  00C7               	movwf	log@x
  7566  0F1A  083E               	movf	?_eval_poly+1,w
  7567  0F1B  00C8               	movwf	log@x+1
  7568  0F1C  083F               	movf	?_eval_poly+2,w
  7569  0F1D  00C9               	movwf	log@x+2
  7570  0F1E  0847               	movf	log@x,w
  7571  0F1F  00B0               	movwf	___ftadd@f1
  7572  0F20  0848               	movf	log@x+1,w
  7573  0F21  00B1               	movwf	___ftadd@f1+1
  7574  0F22  0849               	movf	log@x+2,w
  7575  0F23  00B2               	movwf	___ftadd@f1+2
  7576  0F24  3072               	movlw	114
  7577  0F25  00A0               	movwf	___ftmul@f1
  7578  0F26  3031               	movlw	49
  7579  0F27  00A1               	movwf	___ftmul@f1+1
  7580  0F28  303F               	movlw	63
  7581  0F29  00A2               	movwf	___ftmul@f1+2
  7582  0F2A  084C               	movf	log@exponent+1,w
  7583  0F2B  00F9               	movwf	___awtoft@c+1
  7584  0F2C  084B               	movf	log@exponent,w
  7585  0F2D  00F8               	movwf	___awtoft@c
  7586  0F2E  3189  2138  318E   	fcall	___awtoft
  7587  0F31  0878               	movf	?___awtoft,w
  7588  0F32  0020               	movlb	0	; select bank0
  7589  0F33  00A3               	movwf	___ftmul@f2
  7590  0F34  0879               	movf	?___awtoft+1,w
  7591  0F35  00A4               	movwf	___ftmul@f2+1
  7592  0F36  087A               	movf	?___awtoft+2,w
  7593  0F37  00A5               	movwf	___ftmul@f2+2
  7594  0F38  318F  274C  318E   	fcall	___ftmul
  7595  0F3B  0020               	movlb	0	; select bank0
  7596  0F3C  0820               	movf	?___ftmul,w
  7597  0F3D  00B3               	movwf	___ftadd@f2
  7598  0F3E  0821               	movf	?___ftmul+1,w
  7599  0F3F  00B4               	movwf	___ftadd@f2+1
  7600  0F40  0822               	movf	?___ftmul+2,w
  7601  0F41  00B5               	movwf	___ftadd@f2+2
  7602  0F42  3182  220F         	fcall	___ftadd
  7603  0F44  0020               	movlb	0	; select bank0
  7604  0F45  0830               	movf	?___ftadd,w
  7605  0F46  00C7               	movwf	?_log
  7606  0F47  0831               	movf	?___ftadd+1,w
  7607  0F48  00C8               	movwf	?_log+1
  7608  0F49  0832               	movf	?___ftadd+2,w
  7609  0F4A  00C9               	movwf	?_log+2
  7610  0F4B  0008               	return
  7611  0F4C                     __end_of_log:	
  7612                           
  7613                           	psect	text9
  7614  0A6F                     __ptext9:	
  7615 ;; *************** function _frexp *****************
  7616 ;; Defined at:
  7617 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  value           3    0[COMMON] int 
  7620 ;;  eptr            1    3[COMMON] PTR int 
  7621 ;;		 -> log@exponent(2), 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  3    0[COMMON] PTR int 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;Total ram usage:        6 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_log
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _frexp
  7648  0A6F                     _frexp:	
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7652  0A6F  0872               	movf	frexp@value+2,w
  7653  0A70  0471               	iorwf	frexp@value+1,w
  7654  0A71  0470               	iorwf	frexp@value,w
  7655  0A72  1D03               	skipz
  7656  0A73  2A81               	goto	l2662
  7657  0A74  0873               	movf	frexp@eptr,w
  7658  0A75  0086               	movwf	6
  7659  0A76  0187               	clrf	7
  7660  0A77  3000               	movlw	0
  7661  0A78  3FC0               	movwi [0]fsr1
  7662  0A79  3FC1               	movwi [1]fsr1
  7663  0A7A  3000               	movlw	0
  7664  0A7B  00F0               	movwf	?_frexp
  7665  0A7C  3000               	movlw	0
  7666  0A7D  00F1               	movwf	?_frexp+1
  7667  0A7E  3000               	movlw	0
  7668  0A7F  00F2               	movwf	?_frexp+2
  7669  0A80  0008               	return
  7670  0A81                     l2662:	
  7671  0A81  0872               	movf	frexp@value+2,w
  7672  0A82  397F               	andlw	127
  7673  0A83  00F4               	movwf	??_frexp
  7674  0A84  01F5               	clrf	??_frexp+1
  7675  0A85  35F4               	lslf	??_frexp,f
  7676  0A86  0DF5               	rlf	??_frexp+1,f
  7677  0A87  0873               	movf	frexp@eptr,w
  7678  0A88  0086               	movwf	6
  7679  0A89  0187               	clrf	7
  7680  0A8A  0874               	movf	??_frexp,w
  7681  0A8B  3FC0               	movwi [0]fsr1
  7682  0A8C  0875               	movf	??_frexp+1,w
  7683  0A8D  3FC1               	movwi [1]fsr1
  7684  0A8E  0D71               	rlf	frexp@value+1,w
  7685  0A8F  0D71               	rlf	frexp@value+1,w
  7686  0A90  3901               	andlw	1
  7687  0A91  00F4               	movwf	??_frexp
  7688  0A92  01F5               	clrf	??_frexp+1
  7689  0A93  0873               	movf	frexp@eptr,w
  7690  0A94  0086               	movwf	6
  7691  0A95  0187               	clrf	7
  7692  0A96  0874               	movf	??_frexp,w
  7693  0A97  0481               	iorwf	1,f
  7694  0A98  3141               	addfsr 1,1
  7695  0A99  0875               	movf	??_frexp+1,w
  7696  0A9A  0481               	iorwf	1,f
  7697  0A9B  0873               	movf	frexp@eptr,w
  7698  0A9C  0086               	movwf	6
  7699  0A9D  0187               	clrf	7
  7700  0A9E  3082               	movlw	130
  7701  0A9F  0781               	addwf	1,f
  7702  0AA0  3141               	addfsr 1,1
  7703  0AA1  30FF               	movlw	255
  7704  0AA2  3D81               	addwfc	1,f
  7705  0AA3  317F               	addfsr 1,-1
  7706  0AA4  0872               	movf	frexp@value+2,w
  7707  0AA5  3980               	andlw	-128
  7708  0AA6  383F               	iorlw	63
  7709  0AA7  00F2               	movwf	frexp@value+2
  7710  0AA8  13F1               	bcf	frexp@value+1,7
  7711  0AA9  0008               	return
  7712  0AAA                     __end_of_frexp:	
  7713                           
  7714                           	psect	text10
  7715  0BBB                     __ptext10:	
  7716 ;; *************** function _eval_poly *****************
  7717 ;; Defined at:
  7718 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\evalpoly.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  x               3   29[BANK0 ] PTR int 
  7721 ;;  d               2   32[BANK0 ] PTR const 
  7722 ;;		 -> log@coeff(27), 
  7723 ;;  n               2   34[BANK0 ] int 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  res             3   36[BANK0 ] int 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3   29[BANK0 ] int 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7735 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;Total ram usage:       10 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    2
  7742 ;; This function calls:
  7743 ;;		___ftadd
  7744 ;;		___ftmul
  7745 ;;		___wmul
  7746 ;; This function is called by:
  7747 ;;		_log
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _eval_poly
  7753  0BBB                     _eval_poly:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7757  0BBB  0020               	movlb	0	; select bank0
  7758  0BBC  0843               	movf	eval_poly@n+1,w
  7759  0BBD  00F1               	movwf	___wmul@multiplier+1
  7760  0BBE  0842               	movf	eval_poly@n,w
  7761  0BBF  00F0               	movwf	___wmul@multiplier
  7762  0BC0  3003               	movlw	3
  7763  0BC1  00F2               	movwf	___wmul@multiplicand
  7764  0BC2  3000               	movlw	0
  7765  0BC3  00F3               	movwf	___wmul@multiplicand+1
  7766  0BC4  3188  20FF  318B   	fcall	___wmul
  7767  0BC7  0020               	movlb	0	; select bank0
  7768  0BC8  0840               	movf	eval_poly@d,w
  7769  0BC9  0770               	addwf	?___wmul,w
  7770  0BCA  0084               	movwf	4
  7771  0BCB  0841               	movf	eval_poly@d+1,w
  7772  0BCC  3D71               	addwfc	?___wmul+1,w
  7773  0BCD  0085               	movwf	5
  7774  0BCE  3F00               	moviw [0]fsr0
  7775  0BCF  00C4               	movwf	eval_poly@res
  7776  0BD0  3F01               	moviw [1]fsr0
  7777  0BD1  00C5               	movwf	eval_poly@res+1
  7778  0BD2  3F02               	moviw [2]fsr0
  7779  0BD3                     L2:	
  7780  0BD3  00C6               	movwf	eval_poly@res+2
  7781  0BD4  0842               	movf	eval_poly@n,w
  7782  0BD5  0443               	iorwf	eval_poly@n+1,w
  7783  0BD6  1903               	btfsc	3,2
  7784  0BD7  2C14               	goto	l2680
  7785  0BD8  30FF               	movlw	255
  7786  0BD9  07C2               	addwf	eval_poly@n,f
  7787  0BDA  30FF               	movlw	255
  7788  0BDB  3DC3               	addwfc	eval_poly@n+1,f
  7789  0BDC  0843               	movf	eval_poly@n+1,w
  7790  0BDD  00F1               	movwf	___wmul@multiplier+1
  7791  0BDE  0842               	movf	eval_poly@n,w
  7792  0BDF  00F0               	movwf	___wmul@multiplier
  7793  0BE0  3003               	movlw	3
  7794  0BE1  00F2               	movwf	___wmul@multiplicand
  7795  0BE2  3000               	movlw	0
  7796  0BE3  00F3               	movwf	___wmul@multiplicand+1
  7797  0BE4  3188  20FF  318B   	fcall	___wmul
  7798  0BE7  0020               	movlb	0	; select bank0
  7799  0BE8  0840               	movf	eval_poly@d,w
  7800  0BE9  0770               	addwf	?___wmul,w
  7801  0BEA  0084               	movwf	4
  7802  0BEB  0841               	movf	eval_poly@d+1,w
  7803  0BEC  3D71               	addwfc	?___wmul+1,w
  7804  0BED  0085               	movwf	5
  7805  0BEE  3F00               	moviw [0]fsr0
  7806  0BEF  00B0               	movwf	___ftadd@f1
  7807  0BF0  3F01               	moviw [1]fsr0
  7808  0BF1  00B1               	movwf	___ftadd@f1+1
  7809  0BF2  3F02               	moviw [2]fsr0
  7810  0BF3  00B2               	movwf	___ftadd@f1+2
  7811  0BF4  0844               	movf	eval_poly@res,w
  7812  0BF5  00A0               	movwf	___ftmul@f1
  7813  0BF6  0845               	movf	eval_poly@res+1,w
  7814  0BF7  00A1               	movwf	___ftmul@f1+1
  7815  0BF8  0846               	movf	eval_poly@res+2,w
  7816  0BF9  00A2               	movwf	___ftmul@f1+2
  7817  0BFA  083D               	movf	eval_poly@x,w
  7818  0BFB  00A3               	movwf	___ftmul@f2
  7819  0BFC  083E               	movf	eval_poly@x+1,w
  7820  0BFD  00A4               	movwf	___ftmul@f2+1
  7821  0BFE  083F               	movf	eval_poly@x+2,w
  7822  0BFF  00A5               	movwf	___ftmul@f2+2
  7823  0C00  318F  274C  318B   	fcall	___ftmul
  7824  0C03  0020               	movlb	0	; select bank0
  7825  0C04  0820               	movf	?___ftmul,w
  7826  0C05  00B3               	movwf	___ftadd@f2
  7827  0C06  0821               	movf	?___ftmul+1,w
  7828  0C07  00B4               	movwf	___ftadd@f2+1
  7829  0C08  0822               	movf	?___ftmul+2,w
  7830  0C09  00B5               	movwf	___ftadd@f2+2
  7831  0C0A  3182  220F  318B   	fcall	___ftadd
  7832  0C0D  0020               	movlb	0	; select bank0
  7833  0C0E  0830               	movf	?___ftadd,w
  7834  0C0F  00C4               	movwf	eval_poly@res
  7835  0C10  0831               	movf	?___ftadd+1,w
  7836  0C11  00C5               	movwf	eval_poly@res+1
  7837  0C12  0832               	movf	?___ftadd+2,w
  7838  0C13  2BD3               	goto	L2
  7839  0C14                     l2680:	
  7840  0C14  0844               	movf	eval_poly@res,w
  7841  0C15  00BD               	movwf	?_eval_poly
  7842  0C16  0845               	movf	eval_poly@res+1,w
  7843  0C17  00BE               	movwf	?_eval_poly+1
  7844  0C18  0846               	movf	eval_poly@res+2,w
  7845  0C19  00BF               	movwf	?_eval_poly+2
  7846  0C1A  0008               	return
  7847  0C1B                     __end_of_eval_poly:	
  7848                           
  7849                           	psect	text11
  7850  08FF                     __ptext11:	
  7851 ;; *************** function ___wmul *****************
  7852 ;; Defined at:
  7853 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  multiplier      2    0[COMMON] unsigned int 
  7856 ;;  multiplicand    2    2[COMMON] unsigned int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  product         2    4[COMMON] unsigned int 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  2    0[COMMON] unsigned int 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        6 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;;		_eval_poly
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function ___wmul
  7884  08FF                     ___wmul:	
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7888  08FF  01F4               	clrf	___wmul@product
  7889  0900  01F5               	clrf	___wmul@product+1
  7890  0901                     l2260:	
  7891  0901  1C70               	btfss	___wmul@multiplier,0
  7892  0902  2907               	goto	l478
  7893  0903  0872               	movf	___wmul@multiplicand,w
  7894  0904  07F4               	addwf	___wmul@product,f
  7895  0905  0873               	movf	___wmul@multiplicand+1,w
  7896  0906  3DF5               	addwfc	___wmul@product+1,f
  7897  0907                     l478:	
  7898  0907  3001               	movlw	1
  7899  0908                     u2155:	
  7900  0908  35F2               	lslf	___wmul@multiplicand,f
  7901  0909  0DF3               	rlf	___wmul@multiplicand+1,f
  7902  090A  0B89               	decfsz	9,f
  7903  090B  2908               	goto	u2155
  7904  090C  3001               	movlw	1
  7905  090D                     u2165:	
  7906  090D  36F1               	lsrf	___wmul@multiplier+1,f
  7907  090E  0CF0               	rrf	___wmul@multiplier,f
  7908  090F  0B89               	decfsz	9,f
  7909  0910  290D               	goto	u2165
  7910  0911  0870               	movf	___wmul@multiplier,w
  7911  0912  0471               	iorwf	___wmul@multiplier+1,w
  7912  0913  1D03               	btfss	3,2
  7913  0914  2901               	goto	l2260
  7914  0915  0875               	movf	___wmul@product+1,w
  7915  0916  00F1               	movwf	?___wmul+1
  7916  0917  0874               	movf	___wmul@product,w
  7917  0918  00F0               	movwf	?___wmul
  7918  0919  0008               	return
  7919  091A                     __end_of___wmul:	
  7920                           
  7921                           	psect	text12
  7922  0859                     __ptext12:	
  7923 ;; *************** function ___lwtoft *****************
  7924 ;; Defined at:
  7925 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  c               2    8[COMMON] unsigned int 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  3    8[COMMON] float 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0, pclath, cstack
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;Total ram usage:        4 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    1
  7946 ;; This function calls:
  7947 ;;		___ftpack
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           
  7954                           ;psect for function ___lwtoft
  7955  0859                     ___lwtoft:	
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7959  0859  0878               	movf	___lwtoft@c,w
  7960  085A  00F0               	movwf	___ftpack@arg
  7961  085B  0879               	movf	___lwtoft@c+1,w
  7962  085C  00F1               	movwf	___ftpack@arg+1
  7963  085D  01F2               	clrf	___ftpack@arg+2
  7964  085E  308E               	movlw	142
  7965  085F  00FB               	movwf	??___lwtoft
  7966  0860  087B               	movf	??___lwtoft,w
  7967  0861  00F3               	movwf	___ftpack@exp
  7968  0862  01F4               	clrf	___ftpack@sign
  7969  0863  318C  241B         	fcall	___ftpack
  7970  0865  0870               	movf	?___ftpack,w
  7971  0866  00F8               	movwf	?___lwtoft
  7972  0867  0871               	movf	?___ftpack+1,w
  7973  0868  00F9               	movwf	?___lwtoft+1
  7974  0869  0872               	movf	?___ftpack+2,w
  7975  086A  00FA               	movwf	?___lwtoft+2
  7976  086B  0008               	return
  7977  086C                     __end_of___lwtoft:	
  7978                           
  7979                           	psect	text13
  7980  0A02                     __ptext13:	
  7981 ;; *************** function ___lwdiv *****************
  7982 ;; Defined at:
  7983 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  divisor         2    6[COMMON] unsigned int 
  7986 ;;  dividend        2    8[COMMON] unsigned int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  quotient        2   11[COMMON] unsigned int 
  7989 ;;  counter         1   13[COMMON] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  2    6[COMMON] unsigned int 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;Total ram usage:        8 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           
  8013                           ;psect for function ___lwdiv
  8014  0A02                     ___lwdiv:	
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8018  0A02  01FB               	clrf	___lwdiv@quotient
  8019  0A03  01FC               	clrf	___lwdiv@quotient+1
  8020  0A04  0876               	movf	___lwdiv@divisor,w
  8021  0A05  0477               	iorwf	___lwdiv@divisor+1,w
  8022  0A06  1903               	btfsc	3,2
  8023  0A07  2A31               	goto	l3002
  8024  0A08  01FD               	clrf	___lwdiv@counter
  8025  0A09  0AFD               	incf	___lwdiv@counter,f
  8026  0A0A                     l2990:	
  8027  0A0A  1BF7               	btfsc	___lwdiv@divisor+1,7
  8028  0A0B  2A16               	goto	l2992
  8029  0A0C  3001               	movlw	1
  8030  0A0D                     u3155:	
  8031  0A0D  35F6               	lslf	___lwdiv@divisor,f
  8032  0A0E  0DF7               	rlf	___lwdiv@divisor+1,f
  8033  0A0F  0B89               	decfsz	9,f
  8034  0A10  2A0D               	goto	u3155
  8035  0A11  3001               	movlw	1
  8036  0A12  00FA               	movwf	??___lwdiv
  8037  0A13  087A               	movf	??___lwdiv,w
  8038  0A14  07FD               	addwf	___lwdiv@counter,f
  8039  0A15  2A0A               	goto	l2990
  8040  0A16                     l2992:	
  8041  0A16  3001               	movlw	1
  8042  0A17                     u3175:	
  8043  0A17  35FB               	lslf	___lwdiv@quotient,f
  8044  0A18  0DFC               	rlf	___lwdiv@quotient+1,f
  8045  0A19  0B89               	decfsz	9,f
  8046  0A1A  2A17               	goto	u3175
  8047  0A1B  0877               	movf	___lwdiv@divisor+1,w
  8048  0A1C  0279               	subwf	___lwdiv@dividend+1,w
  8049  0A1D  1D03               	skipz
  8050  0A1E  2A21               	goto	u3185
  8051  0A1F  0876               	movf	___lwdiv@divisor,w
  8052  0A20  0278               	subwf	___lwdiv@dividend,w
  8053  0A21                     u3185:	
  8054  0A21  1C03               	skipc
  8055  0A22  2A28               	goto	l2998
  8056  0A23  0876               	movf	___lwdiv@divisor,w
  8057  0A24  02F8               	subwf	___lwdiv@dividend,f
  8058  0A25  0877               	movf	___lwdiv@divisor+1,w
  8059  0A26  3BF9               	subwfb	___lwdiv@dividend+1,f
  8060  0A27  147B               	bsf	___lwdiv@quotient,0
  8061  0A28                     l2998:	
  8062  0A28  3001               	movlw	1
  8063  0A29                     u3195:	
  8064  0A29  36F7               	lsrf	___lwdiv@divisor+1,f
  8065  0A2A  0CF6               	rrf	___lwdiv@divisor,f
  8066  0A2B  0B89               	decfsz	9,f
  8067  0A2C  2A29               	goto	u3195
  8068  0A2D  3001               	movlw	1
  8069  0A2E  02FD               	subwf	___lwdiv@counter,f
  8070  0A2F  1D03               	btfss	3,2
  8071  0A30  2A16               	goto	l2992
  8072  0A31                     l3002:	
  8073  0A31  087C               	movf	___lwdiv@quotient+1,w
  8074  0A32  00F7               	movwf	?___lwdiv+1
  8075  0A33  087B               	movf	___lwdiv@quotient,w
  8076  0A34  00F6               	movwf	?___lwdiv
  8077  0A35  0008               	return
  8078  0A36                     __end_of___lwdiv:	
  8079                           
  8080                           	psect	text14
  8081  08CB                     __ptext14:	
  8082 ;; *************** function ___lbtoft *****************
  8083 ;; Defined at:
  8084 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbtoft.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  c               1    wreg     unsigned char 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  c               1   11[COMMON] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  3    8[COMMON] float 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, pclath, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8098 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;Total ram usage:        8 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    1
  8105 ;; This function calls:
  8106 ;;		___ftpack
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function ___lbtoft
  8114  08CB                     ___lbtoft:	
  8115                           
  8116                           ;incstack = 0
  8117                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8118                           ;___lbtoft@c stored from wreg
  8119  08CB  00FB               	movwf	___lbtoft@c
  8120  08CC  087B               	movf	___lbtoft@c,w
  8121  08CD  0020               	movlb	0	; select bank0
  8122  08CE  00A0               	movwf	??___lbtoft
  8123  08CF  01A1               	clrf	??___lbtoft+1
  8124  08D0  01A2               	clrf	??___lbtoft+2
  8125  08D1  0820               	movf	??___lbtoft,w
  8126  08D2  00F0               	movwf	___ftpack@arg
  8127  08D3  0821               	movf	??___lbtoft+1,w
  8128  08D4  00F1               	movwf	___ftpack@arg+1
  8129  08D5  0822               	movf	??___lbtoft+2,w
  8130  08D6  00F2               	movwf	___ftpack@arg+2
  8131  08D7  308E               	movlw	142
  8132  08D8  00A3               	movwf	??___lbtoft+3
  8133  08D9  0823               	movf	??___lbtoft+3,w
  8134  08DA  00F3               	movwf	___ftpack@exp
  8135  08DB  01F4               	clrf	___ftpack@sign
  8136  08DC  318C  241B         	fcall	___ftpack
  8137  08DE  0870               	movf	?___ftpack,w
  8138  08DF  00F8               	movwf	?___lbtoft
  8139  08E0  0871               	movf	?___ftpack+1,w
  8140  08E1  00F9               	movwf	?___lbtoft+1
  8141  08E2  0872               	movf	?___ftpack+2,w
  8142  08E3  00FA               	movwf	?___lbtoft+2
  8143  08E4  0008               	return
  8144  08E5                     __end_of___lbtoft:	
  8145                           
  8146                           	psect	text15
  8147  0D6C                     __ptext15:	
  8148 ;; *************** function ___fttol *****************
  8149 ;; Defined at:
  8150 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  f1              3   61[BANK0 ] float 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  lval            4   70[BANK0 ] unsigned long 
  8155 ;;  exp1            1   74[BANK0 ] unsigned char 
  8156 ;;  sign1           1   69[BANK0 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  4   61[BANK0 ] long 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;Total ram usage:       14 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_main
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function ___fttol
  8181  0D6C                     ___fttol:	
  8182                           
  8183                           ;incstack = 0
  8184                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8185  0D6C  0020               	movlb	0	; select bank0
  8186  0D6D  085D               	movf	___fttol@f1,w
  8187  0D6E  00E1               	movwf	??___fttol
  8188  0D6F  085E               	movf	___fttol@f1+1,w
  8189  0D70  00E2               	movwf	??___fttol+1
  8190  0D71  085F               	movf	___fttol@f1+2,w
  8191  0D72  00E3               	movwf	??___fttol+2
  8192  0D73  1003               	clrc
  8193  0D74  0D62               	rlf	??___fttol+1,w
  8194  0D75  0D63               	rlf	??___fttol+2,w
  8195  0D76  00E4               	movwf	??___fttol+3
  8196  0D77  0864               	movf	??___fttol+3,w
  8197  0D78  00EA               	movwf	___fttol@exp1
  8198  0D79  086A               	movf	___fttol@exp1,w
  8199  0D7A  1D03               	btfss	3,2
  8200  0D7B  2D85               	goto	l2940
  8201  0D7C  3000               	movlw	0
  8202  0D7D  00E0               	movwf	?___fttol+3
  8203  0D7E  3000               	movlw	0
  8204  0D7F  00DF               	movwf	?___fttol+2
  8205  0D80  3000               	movlw	0
  8206  0D81  00DE               	movwf	?___fttol+1
  8207  0D82  3000               	movlw	0
  8208  0D83  00DD               	movwf	?___fttol
  8209  0D84  0008               	return
  8210  0D85                     l2940:	
  8211  0D85  085D               	movf	___fttol@f1,w
  8212  0D86  00E1               	movwf	??___fttol
  8213  0D87  085E               	movf	___fttol@f1+1,w
  8214  0D88  00E2               	movwf	??___fttol+1
  8215  0D89  085F               	movf	___fttol@f1+2,w
  8216  0D8A  00E3               	movwf	??___fttol+2
  8217  0D8B  3017               	movlw	23
  8218  0D8C                     u3055:	
  8219  0D8C  36E3               	lsrf	??___fttol+2,f
  8220  0D8D  0CE2               	rrf	??___fttol+1,f
  8221  0D8E  0CE1               	rrf	??___fttol,f
  8222  0D8F  0B89               	decfsz	9,f
  8223  0D90  2D8C               	goto	u3055
  8224  0D91  0861               	movf	??___fttol,w
  8225  0D92  00E4               	movwf	??___fttol+3
  8226  0D93  0864               	movf	??___fttol+3,w
  8227  0D94  00E5               	movwf	___fttol@sign1
  8228  0D95  17DE               	bsf	___fttol@f1+1,7
  8229  0D96  30FF               	movlw	255
  8230  0D97  05DD               	andwf	___fttol@f1,f
  8231  0D98  30FF               	movlw	255
  8232  0D99  05DE               	andwf	___fttol@f1+1,f
  8233  0D9A  3000               	movlw	0
  8234  0D9B  05DF               	andwf	___fttol@f1+2,f
  8235  0D9C  085D               	movf	___fttol@f1,w
  8236  0D9D  00E6               	movwf	___fttol@lval
  8237  0D9E  085E               	movf	___fttol@f1+1,w
  8238  0D9F  00E7               	movwf	___fttol@lval+1
  8239  0DA0  085F               	movf	___fttol@f1+2,w
  8240  0DA1  00E8               	movwf	___fttol@lval+2
  8241  0DA2  01E9               	clrf	___fttol@lval+3
  8242  0DA3  308E               	movlw	142
  8243  0DA4  02EA               	subwf	___fttol@exp1,f
  8244  0DA5  1FEA               	btfss	___fttol@exp1,7
  8245  0DA6  2DC3               	goto	l2960
  8246  0DA7  086A               	movf	___fttol@exp1,w
  8247  0DA8  3A80               	xorlw	128
  8248  0DA9  3E8F               	addlw	143
  8249  0DAA  1803               	skipnc
  8250  0DAB  2DB5               	goto	l2958
  8251  0DAC  3000               	movlw	0
  8252  0DAD  00E0               	movwf	?___fttol+3
  8253  0DAE  3000               	movlw	0
  8254  0DAF  00DF               	movwf	?___fttol+2
  8255  0DB0  3000               	movlw	0
  8256  0DB1  00DE               	movwf	?___fttol+1
  8257  0DB2  3000               	movlw	0
  8258  0DB3  00DD               	movwf	?___fttol
  8259  0DB4  0008               	return
  8260  0DB5                     l2958:	
  8261  0DB5  3001               	movlw	1
  8262  0DB6                     u3085:	
  8263  0DB6  36E9               	lsrf	___fttol@lval+3,f
  8264  0DB7  0CE8               	rrf	___fttol@lval+2,f
  8265  0DB8  0CE7               	rrf	___fttol@lval+1,f
  8266  0DB9  0CE6               	rrf	___fttol@lval,f
  8267  0DBA  0B89               	decfsz	9,f
  8268  0DBB  2DB6               	goto	u3085
  8269  0DBC  3001               	movlw	1
  8270  0DBD  00E1               	movwf	??___fttol
  8271  0DBE  0861               	movf	??___fttol,w
  8272  0DBF  07EA               	addwf	___fttol@exp1,f
  8273  0DC0  1903               	btfsc	3,2
  8274  0DC1  2DDC               	goto	l2968
  8275  0DC2  2DB5               	goto	l2958
  8276  0DC3                     l2960:	
  8277  0DC3  3018               	movlw	24
  8278  0DC4  026A               	subwf	___fttol@exp1,w
  8279  0DC5  1C03               	skipc
  8280  0DC6  2DD9               	goto	l730
  8281  0DC7  3000               	movlw	0
  8282  0DC8  00E0               	movwf	?___fttol+3
  8283  0DC9  3000               	movlw	0
  8284  0DCA  00DF               	movwf	?___fttol+2
  8285  0DCB  3000               	movlw	0
  8286  0DCC  00DE               	movwf	?___fttol+1
  8287  0DCD  3000               	movlw	0
  8288  0DCE  00DD               	movwf	?___fttol
  8289  0DCF  0008               	return
  8290  0DD0                     l2966:	
  8291  0DD0  3001               	movlw	1
  8292  0DD1                     u3115:	
  8293  0DD1  35E6               	lslf	___fttol@lval,f
  8294  0DD2  0DE7               	rlf	___fttol@lval+1,f
  8295  0DD3  0DE8               	rlf	___fttol@lval+2,f
  8296  0DD4  0DE9               	rlf	___fttol@lval+3,f
  8297  0DD5  0B89               	decfsz	9,f
  8298  0DD6  2DD1               	goto	u3115
  8299  0DD7  3001               	movlw	1
  8300  0DD8  02EA               	subwf	___fttol@exp1,f
  8301  0DD9                     l730:	
  8302  0DD9  086A               	movf	___fttol@exp1,w
  8303  0DDA  1D03               	btfss	3,2
  8304  0DDB  2DD0               	goto	l2966
  8305  0DDC                     l2968:	
  8306  0DDC  0865               	movf	___fttol@sign1,w
  8307  0DDD  1903               	btfsc	3,2
  8308  0DDE  2DEA               	goto	l2972
  8309  0DDF  09E6               	comf	___fttol@lval,f
  8310  0DE0  09E7               	comf	___fttol@lval+1,f
  8311  0DE1  09E8               	comf	___fttol@lval+2,f
  8312  0DE2  09E9               	comf	___fttol@lval+3,f
  8313  0DE3  0AE6               	incf	___fttol@lval,f
  8314  0DE4  1903               	skipnz
  8315  0DE5  0AE7               	incf	___fttol@lval+1,f
  8316  0DE6  1903               	skipnz
  8317  0DE7  0AE8               	incf	___fttol@lval+2,f
  8318  0DE8  1903               	skipnz
  8319  0DE9  0AE9               	incf	___fttol@lval+3,f
  8320  0DEA                     l2972:	
  8321  0DEA  0869               	movf	___fttol@lval+3,w
  8322  0DEB  00E0               	movwf	?___fttol+3
  8323  0DEC  0868               	movf	___fttol@lval+2,w
  8324  0DED  00DF               	movwf	?___fttol+2
  8325  0DEE  0867               	movf	___fttol@lval+1,w
  8326  0DEF  00DE               	movwf	?___fttol+1
  8327  0DF0  0866               	movf	___fttol@lval,w
  8328  0DF1  00DD               	movwf	?___fttol
  8329  0DF2  0008               	return
  8330  0DF3                     __end_of___fttol:	
  8331                           
  8332                           	psect	text16
  8333  091A                     __ptext16:	
  8334 ;; *************** function ___ftsub *****************
  8335 ;; Defined at:
  8336 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  f2              3   29[BANK0 ] float 
  8339 ;;  f1              3   32[BANK0 ] float 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;		None
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  3   29[BANK0 ] float 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, pclath, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8351 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;Total ram usage:        6 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    2
  8358 ;; This function calls:
  8359 ;;		___ftadd
  8360 ;; This function is called by:
  8361 ;;		_main
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function ___ftsub
  8367  091A                     ___ftsub:	
  8368                           
  8369                           ;incstack = 0
  8370                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8371  091A  0020               	movlb	0	; select bank0
  8372  091B  083F               	movf	___ftsub@f2+2,w
  8373  091C  043E               	iorwf	___ftsub@f2+1,w
  8374  091D  043D               	iorwf	___ftsub@f2,w
  8375  091E  1903               	skipnz
  8376  091F  2922               	goto	l2930
  8377  0920  3080               	movlw	128
  8378  0921  06BF               	xorwf	___ftsub@f2+2,f
  8379  0922                     l2930:	
  8380  0922  0840               	movf	___ftsub@f1,w
  8381  0923  00B0               	movwf	___ftadd@f1
  8382  0924  0841               	movf	___ftsub@f1+1,w
  8383  0925  00B1               	movwf	___ftadd@f1+1
  8384  0926  0842               	movf	___ftsub@f1+2,w
  8385  0927  00B2               	movwf	___ftadd@f1+2
  8386  0928  083D               	movf	___ftsub@f2,w
  8387  0929  00B3               	movwf	___ftadd@f2
  8388  092A  083E               	movf	___ftsub@f2+1,w
  8389  092B  00B4               	movwf	___ftadd@f2+1
  8390  092C  083F               	movf	___ftsub@f2+2,w
  8391  092D  00B5               	movwf	___ftadd@f2+2
  8392  092E  3182  220F         	fcall	___ftadd
  8393  0930  0020               	movlb	0	; select bank0
  8394  0931  0830               	movf	?___ftadd,w
  8395  0932  00BD               	movwf	?___ftsub
  8396  0933  0831               	movf	?___ftadd+1,w
  8397  0934  00BE               	movwf	?___ftsub+1
  8398  0935  0832               	movf	?___ftadd+2,w
  8399  0936  00BF               	movwf	?___ftsub+2
  8400  0937  0008               	return
  8401  0938                     __end_of___ftsub:	
  8402                           
  8403                           	psect	text17
  8404  0DF3                     __ptext17:	
  8405 ;; *************** function ___ftdiv *****************
  8406 ;; Defined at:
  8407 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  f2              3    0[BANK0 ] float 
  8410 ;;  f1              3    3[BANK0 ] float 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  f3              3   11[BANK0 ] float 
  8413 ;;  sign            1   15[BANK0 ] unsigned char 
  8414 ;;  exp             1   14[BANK0 ] unsigned char 
  8415 ;;  cntr            1   10[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  3    0[BANK0 ] float 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:       16 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    1
  8432 ;; This function calls:
  8433 ;;		___ftpack
  8434 ;; This function is called by:
  8435 ;;		_main
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function ___ftdiv
  8441  0DF3                     ___ftdiv:	
  8442                           
  8443                           ;incstack = 0
  8444                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8445  0DF3  0020               	movlb	0	; select bank0
  8446  0DF4  0823               	movf	___ftdiv@f1,w
  8447  0DF5  00A6               	movwf	??___ftdiv
  8448  0DF6  0824               	movf	___ftdiv@f1+1,w
  8449  0DF7  00A7               	movwf	??___ftdiv+1
  8450  0DF8  0825               	movf	___ftdiv@f1+2,w
  8451  0DF9  00A8               	movwf	??___ftdiv+2
  8452  0DFA  1003               	clrc
  8453  0DFB  0D27               	rlf	??___ftdiv+1,w
  8454  0DFC  0D28               	rlf	??___ftdiv+2,w
  8455  0DFD  00A9               	movwf	??___ftdiv+3
  8456  0DFE  0829               	movf	??___ftdiv+3,w
  8457  0DFF  00AE               	movwf	___ftdiv@exp
  8458  0E00  082E               	movf	___ftdiv@exp,w
  8459  0E01  1D03               	btfss	3,2
  8460  0E02  2E0A               	goto	l2890
  8461  0E03  3000               	movlw	0
  8462  0E04  00A0               	movwf	?___ftdiv
  8463  0E05  3000               	movlw	0
  8464  0E06  00A1               	movwf	?___ftdiv+1
  8465  0E07  3000               	movlw	0
  8466  0E08  00A2               	movwf	?___ftdiv+2
  8467  0E09  0008               	return
  8468  0E0A                     l2890:	
  8469  0E0A  0820               	movf	___ftdiv@f2,w
  8470  0E0B  00A6               	movwf	??___ftdiv
  8471  0E0C  0821               	movf	___ftdiv@f2+1,w
  8472  0E0D  00A7               	movwf	??___ftdiv+1
  8473  0E0E  0822               	movf	___ftdiv@f2+2,w
  8474  0E0F  00A8               	movwf	??___ftdiv+2
  8475  0E10  1003               	clrc
  8476  0E11  0D27               	rlf	??___ftdiv+1,w
  8477  0E12  0D28               	rlf	??___ftdiv+2,w
  8478  0E13  00A9               	movwf	??___ftdiv+3
  8479  0E14  0829               	movf	??___ftdiv+3,w
  8480  0E15  00AF               	movwf	___ftdiv@sign
  8481  0E16  082F               	movf	___ftdiv@sign,w
  8482  0E17  1D03               	btfss	3,2
  8483  0E18  2E20               	goto	l2896
  8484  0E19  3000               	movlw	0
  8485  0E1A  00A0               	movwf	?___ftdiv
  8486  0E1B  3000               	movlw	0
  8487  0E1C  00A1               	movwf	?___ftdiv+1
  8488  0E1D  3000               	movlw	0
  8489  0E1E  00A2               	movwf	?___ftdiv+2
  8490  0E1F  0008               	return
  8491  0E20                     l2896:	
  8492  0E20  3000               	movlw	0
  8493  0E21  00AB               	movwf	___ftdiv@f3
  8494  0E22  3000               	movlw	0
  8495  0E23  00AC               	movwf	___ftdiv@f3+1
  8496  0E24  3000               	movlw	0
  8497  0E25  00AD               	movwf	___ftdiv@f3+2
  8498  0E26  3089               	movlw	137
  8499  0E27  072F               	addwf	___ftdiv@sign,w
  8500  0E28  00A6               	movwf	??___ftdiv
  8501  0E29  0826               	movf	??___ftdiv,w
  8502  0E2A  02AE               	subwf	___ftdiv@exp,f
  8503  0E2B  0823               	movf	___ftdiv@f1,w
  8504  0E2C  00A6               	movwf	??___ftdiv
  8505  0E2D  0824               	movf	___ftdiv@f1+1,w
  8506  0E2E  00A7               	movwf	??___ftdiv+1
  8507  0E2F  0825               	movf	___ftdiv@f1+2,w
  8508  0E30  00A8               	movwf	??___ftdiv+2
  8509  0E31  3010               	movlw	16
  8510  0E32                     u2975:	
  8511  0E32  36A8               	lsrf	??___ftdiv+2,f
  8512  0E33  0CA7               	rrf	??___ftdiv+1,f
  8513  0E34  0CA6               	rrf	??___ftdiv,f
  8514  0E35  0B89               	decfsz	9,f
  8515  0E36  2E32               	goto	u2975
  8516  0E37  0826               	movf	??___ftdiv,w
  8517  0E38  00A9               	movwf	??___ftdiv+3
  8518  0E39  0829               	movf	??___ftdiv+3,w
  8519  0E3A  00AF               	movwf	___ftdiv@sign
  8520  0E3B  0820               	movf	___ftdiv@f2,w
  8521  0E3C  00A6               	movwf	??___ftdiv
  8522  0E3D  0821               	movf	___ftdiv@f2+1,w
  8523  0E3E  00A7               	movwf	??___ftdiv+1
  8524  0E3F  0822               	movf	___ftdiv@f2+2,w
  8525  0E40  00A8               	movwf	??___ftdiv+2
  8526  0E41  3010               	movlw	16
  8527  0E42                     u2985:	
  8528  0E42  36A8               	lsrf	??___ftdiv+2,f
  8529  0E43  0CA7               	rrf	??___ftdiv+1,f
  8530  0E44  0CA6               	rrf	??___ftdiv,f
  8531  0E45  0B89               	decfsz	9,f
  8532  0E46  2E42               	goto	u2985
  8533  0E47  0826               	movf	??___ftdiv,w
  8534  0E48  00A9               	movwf	??___ftdiv+3
  8535  0E49  0829               	movf	??___ftdiv+3,w
  8536  0E4A  06AF               	xorwf	___ftdiv@sign,f
  8537  0E4B  3080               	movlw	128
  8538  0E4C  00A6               	movwf	??___ftdiv
  8539  0E4D  0826               	movf	??___ftdiv,w
  8540  0E4E  05AF               	andwf	___ftdiv@sign,f
  8541  0E4F  17A4               	bsf	___ftdiv@f1+1,7
  8542  0E50  30FF               	movlw	255
  8543  0E51  05A3               	andwf	___ftdiv@f1,f
  8544  0E52  30FF               	movlw	255
  8545  0E53  05A4               	andwf	___ftdiv@f1+1,f
  8546  0E54  3000               	movlw	0
  8547  0E55  05A5               	andwf	___ftdiv@f1+2,f
  8548  0E56  17A1               	bsf	___ftdiv@f2+1,7
  8549  0E57  30FF               	movlw	255
  8550  0E58  05A0               	andwf	___ftdiv@f2,f
  8551  0E59  30FF               	movlw	255
  8552  0E5A  05A1               	andwf	___ftdiv@f2+1,f
  8553  0E5B  3000               	movlw	0
  8554  0E5C  05A2               	andwf	___ftdiv@f2+2,f
  8555  0E5D  3018               	movlw	24
  8556  0E5E  00A6               	movwf	??___ftdiv
  8557  0E5F  0826               	movf	??___ftdiv,w
  8558  0E60  00AA               	movwf	___ftdiv@cntr
  8559  0E61                     l2910:	
  8560  0E61  3001               	movlw	1
  8561  0E62                     u2995:	
  8562  0E62  35AB               	lslf	___ftdiv@f3,f
  8563  0E63  0DAC               	rlf	___ftdiv@f3+1,f
  8564  0E64  0DAD               	rlf	___ftdiv@f3+2,f
  8565  0E65  0B89               	decfsz	9,f
  8566  0E66  2E62               	goto	u2995
  8567  0E67  0822               	movf	___ftdiv@f2+2,w
  8568  0E68  0225               	subwf	___ftdiv@f1+2,w
  8569  0E69  1D03               	skipz
  8570  0E6A  2E71               	goto	u3005
  8571  0E6B  0821               	movf	___ftdiv@f2+1,w
  8572  0E6C  0224               	subwf	___ftdiv@f1+1,w
  8573  0E6D  1D03               	skipz
  8574  0E6E  2E71               	goto	u3005
  8575  0E6F  0820               	movf	___ftdiv@f2,w
  8576  0E70  0223               	subwf	___ftdiv@f1,w
  8577  0E71                     u3005:	
  8578  0E71  1C03               	skipc
  8579  0E72  2E7A               	goto	l2918
  8580  0E73  0820               	movf	___ftdiv@f2,w
  8581  0E74  02A3               	subwf	___ftdiv@f1,f
  8582  0E75  0821               	movf	___ftdiv@f2+1,w
  8583  0E76  3BA4               	subwfb	___ftdiv@f1+1,f
  8584  0E77  0822               	movf	___ftdiv@f2+2,w
  8585  0E78  3BA5               	subwfb	___ftdiv@f1+2,f
  8586  0E79  142B               	bsf	___ftdiv@f3,0
  8587  0E7A                     l2918:	
  8588  0E7A  3001               	movlw	1
  8589  0E7B                     u3015:	
  8590  0E7B  35A3               	lslf	___ftdiv@f1,f
  8591  0E7C  0DA4               	rlf	___ftdiv@f1+1,f
  8592  0E7D  0DA5               	rlf	___ftdiv@f1+2,f
  8593  0E7E  0B89               	decfsz	9,f
  8594  0E7F  2E7B               	goto	u3015
  8595  0E80  3001               	movlw	1
  8596  0E81  02AA               	subwf	___ftdiv@cntr,f
  8597  0E82  1D03               	btfss	3,2
  8598  0E83  2E61               	goto	l2910
  8599  0E84  082B               	movf	___ftdiv@f3,w
  8600  0E85  00F0               	movwf	___ftpack@arg
  8601  0E86  082C               	movf	___ftdiv@f3+1,w
  8602  0E87  00F1               	movwf	___ftpack@arg+1
  8603  0E88  082D               	movf	___ftdiv@f3+2,w
  8604  0E89  00F2               	movwf	___ftpack@arg+2
  8605  0E8A  082E               	movf	___ftdiv@exp,w
  8606  0E8B  00A6               	movwf	??___ftdiv
  8607  0E8C  0826               	movf	??___ftdiv,w
  8608  0E8D  00F3               	movwf	___ftpack@exp
  8609  0E8E  082F               	movf	___ftdiv@sign,w
  8610  0E8F  00A7               	movwf	??___ftdiv+1
  8611  0E90  0827               	movf	??___ftdiv+1,w
  8612  0E91  00F4               	movwf	___ftpack@sign
  8613  0E92  318C  241B         	fcall	___ftpack
  8614  0E94  0870               	movf	?___ftpack,w
  8615  0E95  0020               	movlb	0	; select bank0
  8616  0E96  00A0               	movwf	?___ftdiv
  8617  0E97  0871               	movf	?___ftpack+1,w
  8618  0E98  00A1               	movwf	?___ftdiv+1
  8619  0E99  0872               	movf	?___ftpack+2,w
  8620  0E9A  00A2               	movwf	?___ftdiv+2
  8621  0E9B  0008               	return
  8622  0E9C                     __end_of___ftdiv:	
  8623                           
  8624                           	psect	text18
  8625  0004                     __ptext18:	
  8626 ;; *************** function ___aldiv *****************
  8627 ;; Defined at:
  8628 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  divisor         4    0[COMMON] long 
  8631 ;;  dividend        4    4[COMMON] long 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  quotient        4    2[BANK0 ] long 
  8634 ;;  sign            1    1[BANK0 ] unsigned char 
  8635 ;;  counter         1    0[BANK0 ] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  4    0[COMMON] long 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8645 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;Total ram usage:       15 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_main
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           
  8659                           ;psect for function ___aldiv
  8660  0004                     ___aldiv:	
  8661                           
  8662                           ;incstack = 0
  8663                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8664  0004  0020               	movlb	0	; select bank0
  8665  0005  01A1               	clrf	___aldiv@sign
  8666  0006  1FF3               	btfss	___aldiv@divisor+3,7
  8667  0007  2815               	goto	l533
  8668  0008  09F0               	comf	___aldiv@divisor,f
  8669  0009  09F1               	comf	___aldiv@divisor+1,f
  8670  000A  09F2               	comf	___aldiv@divisor+2,f
  8671  000B  09F3               	comf	___aldiv@divisor+3,f
  8672  000C  0AF0               	incf	___aldiv@divisor,f
  8673  000D  1903               	skipnz
  8674  000E  0AF1               	incf	___aldiv@divisor+1,f
  8675  000F  1903               	skipnz
  8676  0010  0AF2               	incf	___aldiv@divisor+2,f
  8677  0011  1903               	skipnz
  8678  0012  0AF3               	incf	___aldiv@divisor+3,f
  8679  0013  01A1               	clrf	___aldiv@sign
  8680  0014  0AA1               	incf	___aldiv@sign,f
  8681  0015                     l533:	
  8682  0015  1FF7               	btfss	___aldiv@dividend+3,7
  8683  0016  2826               	goto	l2854
  8684  0017  09F4               	comf	___aldiv@dividend,f
  8685  0018  09F5               	comf	___aldiv@dividend+1,f
  8686  0019  09F6               	comf	___aldiv@dividend+2,f
  8687  001A  09F7               	comf	___aldiv@dividend+3,f
  8688  001B  0AF4               	incf	___aldiv@dividend,f
  8689  001C  1903               	skipnz
  8690  001D  0AF5               	incf	___aldiv@dividend+1,f
  8691  001E  1903               	skipnz
  8692  001F  0AF6               	incf	___aldiv@dividend+2,f
  8693  0020  1903               	skipnz
  8694  0021  0AF7               	incf	___aldiv@dividend+3,f
  8695  0022  3001               	movlw	1
  8696  0023  00F8               	movwf	??___aldiv
  8697  0024  0878               	movf	??___aldiv,w
  8698  0025  06A1               	xorwf	___aldiv@sign,f
  8699  0026                     l2854:	
  8700  0026  3000               	movlw	0
  8701  0027  00A5               	movwf	___aldiv@quotient+3
  8702  0028  3000               	movlw	0
  8703  0029  00A4               	movwf	___aldiv@quotient+2
  8704  002A  3000               	movlw	0
  8705  002B  00A3               	movwf	___aldiv@quotient+1
  8706  002C  3000               	movlw	0
  8707  002D  00A2               	movwf	___aldiv@quotient
  8708  002E  0873               	movf	___aldiv@divisor+3,w
  8709  002F  0472               	iorwf	___aldiv@divisor+2,w
  8710  0030  0471               	iorwf	___aldiv@divisor+1,w
  8711  0031  0470               	iorwf	___aldiv@divisor,w
  8712  0032  1903               	skipnz
  8713  0033  286F               	goto	l2876
  8714  0034  01A0               	clrf	___aldiv@counter
  8715  0035  0AA0               	incf	___aldiv@counter,f
  8716  0036                     l2862:	
  8717  0036  1BF3               	btfsc	___aldiv@divisor+3,7
  8718  0037  2844               	goto	l2864
  8719  0038  3001               	movlw	1
  8720  0039                     u2885:	
  8721  0039  35F0               	lslf	___aldiv@divisor,f
  8722  003A  0DF1               	rlf	___aldiv@divisor+1,f
  8723  003B  0DF2               	rlf	___aldiv@divisor+2,f
  8724  003C  0DF3               	rlf	___aldiv@divisor+3,f
  8725  003D  0B89               	decfsz	9,f
  8726  003E  2839               	goto	u2885
  8727  003F  3001               	movlw	1
  8728  0040  00F8               	movwf	??___aldiv
  8729  0041  0878               	movf	??___aldiv,w
  8730  0042  07A0               	addwf	___aldiv@counter,f
  8731  0043  2836               	goto	l2862
  8732  0044                     l2864:	
  8733  0044  3001               	movlw	1
  8734  0045                     u2905:	
  8735  0045  35A2               	lslf	___aldiv@quotient,f
  8736  0046  0DA3               	rlf	___aldiv@quotient+1,f
  8737  0047  0DA4               	rlf	___aldiv@quotient+2,f
  8738  0048  0DA5               	rlf	___aldiv@quotient+3,f
  8739  0049  0B89               	decfsz	9,f
  8740  004A  2845               	goto	u2905
  8741  004B  0873               	movf	___aldiv@divisor+3,w
  8742  004C  0277               	subwf	___aldiv@dividend+3,w
  8743  004D  1D03               	skipz
  8744  004E  2859               	goto	u2915
  8745  004F  0872               	movf	___aldiv@divisor+2,w
  8746  0050  0276               	subwf	___aldiv@dividend+2,w
  8747  0051  1D03               	skipz
  8748  0052  2859               	goto	u2915
  8749  0053  0871               	movf	___aldiv@divisor+1,w
  8750  0054  0275               	subwf	___aldiv@dividend+1,w
  8751  0055  1D03               	skipz
  8752  0056  2859               	goto	u2915
  8753  0057  0870               	movf	___aldiv@divisor,w
  8754  0058  0274               	subwf	___aldiv@dividend,w
  8755  0059                     u2915:	
  8756  0059  1C03               	skipc
  8757  005A  2864               	goto	l2872
  8758  005B  0870               	movf	___aldiv@divisor,w
  8759  005C  02F4               	subwf	___aldiv@dividend,f
  8760  005D  0871               	movf	___aldiv@divisor+1,w
  8761  005E  3BF5               	subwfb	___aldiv@dividend+1,f
  8762  005F  0872               	movf	___aldiv@divisor+2,w
  8763  0060  3BF6               	subwfb	___aldiv@dividend+2,f
  8764  0061  0873               	movf	___aldiv@divisor+3,w
  8765  0062  3BF7               	subwfb	___aldiv@dividend+3,f
  8766  0063  1422               	bsf	___aldiv@quotient,0
  8767  0064                     l2872:	
  8768  0064  3001               	movlw	1
  8769  0065                     u2925:	
  8770  0065  36F3               	lsrf	___aldiv@divisor+3,f
  8771  0066  0CF2               	rrf	___aldiv@divisor+2,f
  8772  0067  0CF1               	rrf	___aldiv@divisor+1,f
  8773  0068  0CF0               	rrf	___aldiv@divisor,f
  8774  0069  0B89               	decfsz	9,f
  8775  006A  2865               	goto	u2925
  8776  006B  3001               	movlw	1
  8777  006C  02A0               	subwf	___aldiv@counter,f
  8778  006D  1D03               	btfss	3,2
  8779  006E  2844               	goto	l2864
  8780  006F                     l2876:	
  8781  006F  0821               	movf	___aldiv@sign,w
  8782  0070  1903               	btfsc	3,2
  8783  0071  287D               	goto	l2880
  8784  0072  09A2               	comf	___aldiv@quotient,f
  8785  0073  09A3               	comf	___aldiv@quotient+1,f
  8786  0074  09A4               	comf	___aldiv@quotient+2,f
  8787  0075  09A5               	comf	___aldiv@quotient+3,f
  8788  0076  0AA2               	incf	___aldiv@quotient,f
  8789  0077  1903               	skipnz
  8790  0078  0AA3               	incf	___aldiv@quotient+1,f
  8791  0079  1903               	skipnz
  8792  007A  0AA4               	incf	___aldiv@quotient+2,f
  8793  007B  1903               	skipnz
  8794  007C  0AA5               	incf	___aldiv@quotient+3,f
  8795  007D                     l2880:	
  8796  007D  0825               	movf	___aldiv@quotient+3,w
  8797  007E  00F3               	movwf	?___aldiv+3
  8798  007F  0824               	movf	___aldiv@quotient+2,w
  8799  0080  00F2               	movwf	?___aldiv+2
  8800  0081  0823               	movf	___aldiv@quotient+1,w
  8801  0082  00F1               	movwf	?___aldiv+1
  8802  0083  0822               	movf	___aldiv@quotient,w
  8803  0084  00F0               	movwf	?___aldiv
  8804  0085  0008               	return
  8805  0086                     __end_of___aldiv:	
  8806                           
  8807                           	psect	text19
  8808  0A36                     __ptext19:	
  8809 ;; *************** function _SYSTEM_Initialize *****************
  8810 ;; Defined at:
  8811 ;;		line 37 in file "system.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;Total ram usage:        1 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    3
  8832 ;; This function calls:
  8833 ;;		_ADCC_Initialize
  8834 ;;		_InitCustomChars
  8835 ;;		_Init_PID
  8836 ;;		_LCD_Clear
  8837 ;;		_LCD_Init
  8838 ;;		_OSCILLATOR_Initialize
  8839 ;;		_PIN_MANAGER_Initialize
  8840 ;;		_PWM6_Initialize
  8841 ;;		_TMR0_Initialize
  8842 ;;		_TMR2_Initialize
  8843 ;; This function is called by:
  8844 ;;		_main
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           
  8849                           ;psect for function _SYSTEM_Initialize
  8850  0A36                     _SYSTEM_Initialize:	
  8851                           
  8852                           ;system.c: 39: PIN_MANAGER_Initialize();
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8856  0A36  3189  21D0  318A   	fcall	_PIN_MANAGER_Initialize
  8857                           
  8858                           ;system.c: 40: OSCILLATOR_Initialize();
  8859  0A39  3197  27EC  318A   	fcall	_OSCILLATOR_Initialize
  8860                           
  8861                           ;system.c: 41: FVRCON = 0x00;
  8862  0A3C  0032               	movlb	18	; select bank18
  8863  0A3D  018C               	clrf	12	;volatile
  8864                           
  8865                           ;system.c: 42: ADCC_Initialize();
  8866  0A3E  3188  20B2  318A   	fcall	_ADCC_Initialize
  8867                           
  8868                           ;system.c: 43: PWM6_Initialize();
  8869  0A41  3188  2011  318A   	fcall	_PWM6_Initialize
  8870                           
  8871                           ;system.c: 44: TMR0_Initialize();
  8872  0A44  3188  203B  318A   	fcall	_TMR0_Initialize
  8873                           
  8874                           ;system.c: 45: TMR2_Initialize();
  8875  0A47  3188  204A  318A   	fcall	_TMR2_Initialize
  8876                           
  8877                           ;system.c: 46: LCD_Init(0X00);
  8878  0A4A  3000               	movlw	0
  8879  0A4B  318C  247F  318A   	fcall	_LCD_Init
  8880                           
  8881                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8882  0A4E  3041               	movlw	65
  8883  0A4F  00F7               	movwf	??_SYSTEM_Initialize
  8884  0A50  30EE               	movlw	238
  8885  0A51                     u3317:	
  8886  0A51  0B89               	decfsz	9,f
  8887  0A52  2A51               	goto	u3317
  8888  0A53  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8889  0A54  2A51               	goto	u3317
  8890  0A55  3200               	nop2
  8891                           
  8892                           ;system.c: 48: LCD_Clear();
  8893  0A56  3197  27E4  318A   	fcall	_LCD_Clear
  8894                           
  8895                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8896  0A59  3021               	movlw	33
  8897  0A5A  00F7               	movwf	??_SYSTEM_Initialize
  8898  0A5B  3076               	movlw	118
  8899  0A5C                     u3327:	
  8900  0A5C  0B89               	decfsz	9,f
  8901  0A5D  2A5C               	goto	u3327
  8902  0A5E  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8903  0A5F  2A5C               	goto	u3327
  8904  0A60  3200               	nop2
  8905                           
  8906                           ;system.c: 50: InitCustomChars();
  8907  0A61  3189  2158  318A   	fcall	_InitCustomChars
  8908                           
  8909                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8910  0A64  3041               	movlw	65
  8911  0A65  00F7               	movwf	??_SYSTEM_Initialize
  8912  0A66  30EE               	movlw	238
  8913  0A67                     u3337:	
  8914  0A67  0B89               	decfsz	9,f
  8915  0A68  2A67               	goto	u3337
  8916  0A69  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8917  0A6A  2A67               	goto	u3337
  8918  0A6B  3200               	nop2
  8919                           
  8920                           ;system.c: 52: Init_PID();
  8921  0A6C  3189  217E         	fcall	_Init_PID
  8922  0A6E  0008               	return
  8923  0A6F                     __end_of_SYSTEM_Initialize:	
  8924                           
  8925                           	psect	text20
  8926  084A                     __ptext20:	
  8927 ;; *************** function _TMR2_Initialize *****************
  8928 ;; Defined at:
  8929 ;;		line 15 in file "timers.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;Total ram usage:        0 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_SYSTEM_Initialize
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _TMR2_Initialize
  8958  084A                     _TMR2_Initialize:	
  8959                           
  8960                           ;timers.c: 17: T2CON = 0x7F;
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8964  084A  307F               	movlw	127
  8965  084B  0025               	movlb	5	; select bank5
  8966  084C  008E               	movwf	14	;volatile
  8967                           
  8968                           ;timers.c: 18: T2CLKCON = 0x01;
  8969  084D  3001               	movlw	1
  8970  084E  0090               	movwf	16	;volatile
  8971                           
  8972                           ;timers.c: 19: T2HLT = 0x00;
  8973  084F  018F               	clrf	15	;volatile
  8974                           
  8975                           ;timers.c: 20: T2RST = 0x00;
  8976  0850  0191               	clrf	17	;volatile
  8977                           
  8978                           ;timers.c: 21: T2PR = 0xFF;
  8979  0851  30FF               	movlw	255
  8980  0852  008D               	movwf	13	;volatile
  8981                           
  8982                           ;timers.c: 22: T2TMR = 0x00;
  8983  0853  018C               	clrf	12	;volatile
  8984                           
  8985                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  8986  0854  002E               	movlb	14	; select bank14
  8987  0855  1090               	bcf	16,1	;volatile
  8988                           
  8989                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  8990  0856  0025               	movlb	5	; select bank5
  8991  0857  178E               	bsf	14,7	;volatile
  8992  0858  0008               	return
  8993  0859                     __end_of_TMR2_Initialize:	
  8994                           
  8995                           	psect	text21
  8996  083B                     __ptext21:	
  8997 ;; *************** function _TMR0_Initialize *****************
  8998 ;; Defined at:
  8999 ;;		line 3 in file "timers.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_SYSTEM_Initialize
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _TMR0_Initialize
  9028  083B                     _TMR0_Initialize:	
  9029                           
  9030                           ;timers.c: 5: T0CON0 = 0x10;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _TMR0_Initialize: [wreg]
  9034  083B  3010               	movlw	16
  9035  083C  0020               	movlb	0	; select bank0
  9036  083D  009E               	movwf	30	;volatile
  9037                           
  9038                           ;timers.c: 6: T0CON1 = 0x42;
  9039  083E  3042               	movlw	66
  9040  083F  009F               	movwf	31	;volatile
  9041                           
  9042                           ;timers.c: 7: TMR0H = 0x24;
  9043  0840  3024               	movlw	36
  9044  0841  009D               	movwf	29	;volatile
  9045                           
  9046                           ;timers.c: 8: TMR0L = 0x9F;
  9047  0842  309F               	movlw	159
  9048  0843  009C               	movwf	28	;volatile
  9049                           
  9050                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  9051  0844  002E               	movlb	14	; select bank14
  9052  0845  1696               	bsf	22,5	;volatile
  9053                           
  9054                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  9055  0846  128C               	bcf	12,5	;volatile
  9056                           
  9057                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  9058  0847  0020               	movlb	0	; select bank0
  9059  0848  179E               	bsf	30,7	;volatile
  9060  0849  0008               	return
  9061  084A                     __end_of_TMR0_Initialize:	
  9062                           
  9063                           	psect	text22
  9064  0811                     __ptext22:	
  9065 ;; *************** function _PWM6_Initialize *****************
  9066 ;; Defined at:
  9067 ;;		line 4 in file "pwm6.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_SYSTEM_Initialize
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _PWM6_Initialize
  9096  0811                     _PWM6_Initialize:	
  9097                           
  9098                           ;pwm6.c: 6: PWM6CON = 0x80;
  9099                           
  9100                           ;incstack = 0
  9101                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9102  0811  3080               	movlw	128
  9103  0812  0027               	movlb	7	; select bank7
  9104  0813  008E               	movwf	14	;volatile
  9105                           
  9106                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9107  0814  30FF               	movlw	255
  9108  0815  008D               	movwf	13	;volatile
  9109                           
  9110                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9111  0816  30C0               	movlw	192
  9112  0817  008C               	movwf	12	;volatile
  9113                           
  9114                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9115  0818  0024               	movlb	4	; select bank4
  9116  0819  081F               	movf	31,w	;volatile
  9117  081A  39F3               	andlw	-13
  9118  081B  3804               	iorlw	4
  9119  081C  009F               	movwf	31	;volatile
  9120  081D  0008               	return
  9121  081E                     __end_of_PWM6_Initialize:	
  9122                           
  9123                           	psect	text23
  9124  09D0                     __ptext23:	
  9125 ;; *************** function _PIN_MANAGER_Initialize *****************
  9126 ;; Defined at:
  9127 ;;		line 5 in file "pin_manager.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;		None
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  state           1    0[COMMON] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1    wreg      void 
  9134 ;; Registers used:
  9135 ;;		wreg, status,2
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;Total ram usage:        1 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_SYSTEM_Initialize
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _PIN_MANAGER_Initialize
  9156  09D0                     _PIN_MANAGER_Initialize:	
  9157                           
  9158                           ;pin_manager.c: 7: LATA = 0x00;
  9159                           
  9160                           ;incstack = 0
  9161                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9162  09D0  0020               	movlb	0	; select bank0
  9163  09D1  0196               	clrf	22	;volatile
  9164                           
  9165                           ;pin_manager.c: 8: LATB = 0x0;
  9166  09D2  0197               	clrf	23	;volatile
  9167                           
  9168                           ;pin_manager.c: 9: LATC = 0x0;
  9169  09D3  0198               	clrf	24	;volatile
  9170                           
  9171                           ;pin_manager.c: 11: WPUA = 0x18;
  9172  09D4  3018               	movlw	24
  9173  09D5  003E               	movlb	30	; select bank30
  9174  09D6  00B9               	movwf	57	;volatile
  9175                           
  9176                           ;pin_manager.c: 12: WPUB = 0x00;
  9177  09D7  01C4               	clrf	68	;volatile
  9178                           
  9179                           ;pin_manager.c: 13: WPUC = 0x00;
  9180  09D8  01CF               	clrf	79	;volatile
  9181                           
  9182                           ;pin_manager.c: 14: WPUE = 0x8;
  9183  09D9  3008               	movlw	8
  9184  09DA  00E5               	movwf	101	;volatile
  9185                           
  9186                           ;pin_manager.c: 16: TRISA = 0x1C;
  9187  09DB  301C               	movlw	28
  9188  09DC  0020               	movlb	0	; select bank0
  9189  09DD  0091               	movwf	17	;volatile
  9190                           
  9191                           ;pin_manager.c: 17: TRISB = 0x00;
  9192  09DE  0192               	clrf	18	;volatile
  9193                           
  9194                           ;pin_manager.c: 18: TRISC = 0x10;
  9195  09DF  3010               	movlw	16
  9196  09E0  0093               	movwf	19	;volatile
  9197                           
  9198                           ;pin_manager.c: 20: ANSELA = 0x04;
  9199  09E1  3004               	movlw	4
  9200  09E2  003E               	movlb	30	; select bank30
  9201  09E3  00B8               	movwf	56	;volatile
  9202                           
  9203                           ;pin_manager.c: 21: ANSELB = 0x00;
  9204  09E4  01C3               	clrf	67	;volatile
  9205                           
  9206                           ;pin_manager.c: 22: ANSELC = 0x00;
  9207  09E5  01CE               	clrf	78	;volatile
  9208                           
  9209                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9210  09E6  002E               	movlb	14	; select bank14
  9211  09E7  1216               	bcf	22,4	;volatile
  9212                           
  9213                           ;pin_manager.c: 25: bool state = GIE;
  9214  09E8  3000               	movlw	0
  9215  09E9  1B8B               	btfsc	11,7	;volatile
  9216  09EA  3001               	movlw	1
  9217  09EB  00F0               	movwf	PIN_MANAGER_Initialize@state
  9218                           
  9219                           ;pin_manager.c: 26: GIE = 0;
  9220  09EC  138B               	bcf	11,7	;volatile
  9221                           
  9222                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9223  09ED  3055               	movlw	85
  9224  09EE  003D               	movlb	29	; select bank29
  9225  09EF  008F               	movwf	15	;volatile
  9226                           
  9227                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9228  09F0  30AA               	movlw	170
  9229  09F1  008F               	movwf	15	;volatile
  9230                           
  9231                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9232  09F2  100F               	bcf	15,0	;volatile
  9233                           
  9234                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9235  09F3  300E               	movlw	14
  9236  09F4  003E               	movlb	30	; select bank30
  9237  09F5  0091               	movwf	17	;volatile
  9238                           
  9239                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9240  09F6  3055               	movlw	85
  9241  09F7  003D               	movlb	29	; select bank29
  9242  09F8  008F               	movwf	15	;volatile
  9243                           
  9244                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9245  09F9  30AA               	movlw	170
  9246  09FA  008F               	movwf	15	;volatile
  9247                           
  9248                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9249  09FB  140F               	bsf	15,0	;volatile
  9250                           
  9251                           ;pin_manager.c: 39: GIE = state;
  9252  09FC  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9253  09FD  2A00               	goto	u2550
  9254  09FE  178B               	bsf	11,7	;volatile
  9255  09FF  0008               	return
  9256  0A00                     u2550:	
  9257  0A00  138B               	bcf	11,7	;volatile
  9258  0A01  0008               	return
  9259  0A02                     __end_of_PIN_MANAGER_Initialize:	
  9260                           
  9261                           	psect	text24
  9262  17EC                     __ptext24:	
  9263 ;; *************** function _OSCILLATOR_Initialize *****************
  9264 ;; Defined at:
  9265 ;;		line 55 in file "system.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_SYSTEM_Initialize
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _OSCILLATOR_Initialize
  9294  17EC                     _OSCILLATOR_Initialize:	
  9295                           
  9296                           ;system.c: 57: OSCCON1 = 0x60;
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9300  17EC  3060               	movlw	96
  9301  17ED  0031               	movlb	17	; select bank17
  9302  17EE  008D               	movwf	13	;volatile
  9303                           
  9304                           ;system.c: 58: OSCCON3 = 0x00;
  9305  17EF  018F               	clrf	15	;volatile
  9306                           
  9307                           ;system.c: 59: OSCEN = 0x00;
  9308  17F0  0191               	clrf	17	;volatile
  9309                           
  9310                           ;system.c: 60: OSCFRQ = 0x00;
  9311  17F1  0193               	clrf	19	;volatile
  9312                           
  9313                           ;system.c: 61: OSCTUNE = 0x00;
  9314  17F2  0192               	clrf	18	;volatile
  9315  17F3  0008               	return
  9316  17F4                     __end_of_OSCILLATOR_Initialize:	
  9317                           
  9318                           	psect	text25
  9319  0C7F                     __ptext25:	
  9320 ;; *************** function _LCD_Init *****************
  9321 ;; Defined at:
  9322 ;;		line 154 in file "lcd.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  style           1    wreg     unsigned char 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  style           1    3[COMMON] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0, pclath, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;Total ram usage:        2 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    2
  9343 ;; This function calls:
  9344 ;;		_LCD_Cmd
  9345 ;;		_LCD_Port
  9346 ;; This function is called by:
  9347 ;;		_SYSTEM_Initialize
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           
  9352                           ;psect for function _LCD_Init
  9353  0C7F                     _LCD_Init:	
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9357                           ;LCD_Init@style stored from wreg
  9358  0C7F  00F3               	movwf	LCD_Init@style
  9359                           
  9360                           ;lcd.c: 156: LCD_Port(0x00);
  9361  0C80  3000               	movlw	0
  9362  0C81  3188  2082  318C   	fcall	_LCD_Port
  9363                           
  9364                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9365  0C84  3021               	movlw	33
  9366  0C85  00F2               	movwf	??_LCD_Init
  9367  0C86  3076               	movlw	118
  9368  0C87                     u3347:	
  9369  0C87  0B89               	decfsz	9,f
  9370  0C88  2C87               	goto	u3347
  9371  0C89  0BF2               	decfsz	??_LCD_Init,f
  9372  0C8A  2C87               	goto	u3347
  9373  0C8B  3200               	nop2
  9374                           
  9375                           ;lcd.c: 160: LCD_Cmd(0x03);
  9376  0C8C  3003               	movlw	3
  9377  0C8D  3188  202C  318C   	fcall	_LCD_Cmd
  9378                           
  9379                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9380  0C90  3004               	movlw	4
  9381  0C91  00F2               	movwf	??_LCD_Init
  9382  0C92  303E               	movlw	62
  9383  0C93                     u3357:	
  9384  0C93  0B89               	decfsz	9,f
  9385  0C94  2C93               	goto	u3357
  9386  0C95  0BF2               	decfsz	??_LCD_Init,f
  9387  0C96  2C93               	goto	u3357
  9388                           
  9389                           ;lcd.c: 164: LCD_Cmd(0x03);
  9390  0C97  3003               	movlw	3
  9391  0C98  3188  202C  318C   	fcall	_LCD_Cmd
  9392                           
  9393                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9394  0C9B  300A               	movlw	10
  9395  0C9C                     u3367:	
  9396  0C9C  0B89               	decfsz	9,f
  9397  0C9D  2C9C               	goto	u3367
  9398                           
  9399                           ;lcd.c: 168: LCD_Cmd(0x03);
  9400  0C9E  3003               	movlw	3
  9401  0C9F  3188  202C  318C   	fcall	_LCD_Cmd
  9402                           
  9403                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9404  0CA2  300A               	movlw	10
  9405  0CA3                     u3377:	
  9406  0CA3  0B89               	decfsz	9,f
  9407  0CA4  2CA3               	goto	u3377
  9408                           
  9409                           ;lcd.c: 172: LCD_Cmd(0x02);
  9410  0CA5  3002               	movlw	2
  9411  0CA6  3188  202C  318C   	fcall	_LCD_Cmd
  9412                           
  9413                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9414  0CA9  300A               	movlw	10
  9415  0CAA                     u3387:	
  9416  0CAA  0B89               	decfsz	9,f
  9417  0CAB  2CAA               	goto	u3387
  9418                           
  9419                           ;lcd.c: 176: LCD_Cmd(0x2);
  9420  0CAC  3002               	movlw	2
  9421  0CAD  3188  202C  318C   	fcall	_LCD_Cmd
  9422                           
  9423                           ;lcd.c: 178: LCD_Cmd(0x8);
  9424  0CB0  3008               	movlw	8
  9425  0CB1  3188  202C  318C   	fcall	_LCD_Cmd
  9426                           
  9427                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9428  0CB4  300A               	movlw	10
  9429  0CB5                     u3397:	
  9430  0CB5  0B89               	decfsz	9,f
  9431  0CB6  2CB5               	goto	u3397
  9432                           
  9433                           ;lcd.c: 182: LCD_Cmd(0x0);
  9434  0CB7  3000               	movlw	0
  9435  0CB8  3188  202C  318C   	fcall	_LCD_Cmd
  9436                           
  9437                           ;lcd.c: 184: LCD_Cmd(0x8);
  9438  0CBB  3008               	movlw	8
  9439  0CBC  3188  202C  318C   	fcall	_LCD_Cmd
  9440                           
  9441                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9442  0CBF  300A               	movlw	10
  9443  0CC0                     u3407:	
  9444  0CC0  0B89               	decfsz	9,f
  9445  0CC1  2CC0               	goto	u3407
  9446                           
  9447                           ;lcd.c: 188: LCD_Cmd(0x0);
  9448  0CC2  3000               	movlw	0
  9449  0CC3  3188  202C  318C   	fcall	_LCD_Cmd
  9450                           
  9451                           ;lcd.c: 190: LCD_Cmd(0x1);
  9452  0CC6  3001               	movlw	1
  9453  0CC7  3188  202C  318C   	fcall	_LCD_Cmd
  9454                           
  9455                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9456  0CCA  30FA               	movlw	250
  9457  0CCB                     u3417:	
  9458  0CCB  3200               	nop2
  9459  0CCC  0B89               	decfsz	9,f
  9460  0CCD  2CCB               	goto	u3417
  9461                           
  9462                           ;lcd.c: 194: LCD_Cmd(0x0);
  9463  0CCE  3000               	movlw	0
  9464  0CCF  3188  202C  318C   	fcall	_LCD_Cmd
  9465                           
  9466                           ;lcd.c: 196: LCD_Cmd(0x6);
  9467  0CD2  3006               	movlw	6
  9468  0CD3  3188  202C  318C   	fcall	_LCD_Cmd
  9469                           
  9470                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9471  0CD6  300A               	movlw	10
  9472  0CD7                     u3427:	
  9473  0CD7  0B89               	decfsz	9,f
  9474  0CD8  2CD7               	goto	u3427
  9475                           
  9476                           ;lcd.c: 200: LCD_Cmd(0x0);
  9477  0CD9  3000               	movlw	0
  9478  0CDA  3188  202C  318C   	fcall	_LCD_Cmd
  9479                           
  9480                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9481  0CDD  0873               	movf	LCD_Init@style,w
  9482  0CDE  380C               	iorlw	12
  9483  0CDF  3188  202C  318C   	fcall	_LCD_Cmd
  9484                           
  9485                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9486  0CE2  300A               	movlw	10
  9487  0CE3                     u3437:	
  9488  0CE3  0B89               	decfsz	9,f
  9489  0CE4  2CE3               	goto	u3437
  9490  0CE5  0008               	return
  9491  0CE6                     __end_of_LCD_Init:	
  9492                           
  9493                           	psect	text26
  9494  17E4                     __ptext26:	
  9495 ;; *************** function _LCD_Clear *****************
  9496 ;; Defined at:
  9497 ;;		line 75 in file "lcd.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      void 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0, pclath, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    2
  9518 ;; This function calls:
  9519 ;;		_LCD_Cmd
  9520 ;; This function is called by:
  9521 ;;		_SYSTEM_Initialize
  9522 ;;		_tempSetpoint
  9523 ;;		_readButtons
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           
  9528                           ;psect for function _LCD_Clear
  9529  17E4                     _LCD_Clear:	
  9530                           
  9531                           ;lcd.c: 77: LCD_Cmd(0);
  9532                           
  9533                           ;incstack = 0
  9534                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9535  17E4  3000               	movlw	0
  9536  17E5  3188  202C  3197   	fcall	_LCD_Cmd
  9537                           
  9538                           ;lcd.c: 78: LCD_Cmd(1);
  9539  17E8  3001               	movlw	1
  9540  17E9  3188  202C         	fcall	_LCD_Cmd
  9541  17EB  0008               	return
  9542  17EC                     __end_of_LCD_Clear:	
  9543                           
  9544                           	psect	text27
  9545  097E                     __ptext27:	
  9546 ;; *************** function _Init_PID *****************
  9547 ;; Defined at:
  9548 ;;		line 12 in file "pid.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, status,2
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; This function calls:
  9569 ;;		Nothing
  9570 ;; This function is called by:
  9571 ;;		_SYSTEM_Initialize
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           
  9576                           ;psect for function _Init_PID
  9577  097E                     _Init_PID:	
  9578                           
  9579                           ;pid.c: 14: PID_Kp = 50;
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in _Init_PID: [wreg+status,2]
  9583  097E  3000               	movlw	0
  9584  097F  0021               	movlb	1	; select bank1
  9585  0980  00D9               	movwf	_PID_Kp^(0+128)
  9586  0981  3048               	movlw	72
  9587  0982  00DA               	movwf	(_PID_Kp+1)^(0+128)
  9588  0983  3042               	movlw	66
  9589  0984  00DB               	movwf	(_PID_Kp+2)^(0+128)
  9590                           
  9591                           ;pid.c: 15: PID_Ki = 1;
  9592  0985  3000               	movlw	0
  9593  0986  00D6               	movwf	_PID_Ki^(0+128)
  9594  0987  3080               	movlw	128
  9595  0988  00D7               	movwf	(_PID_Ki+1)^(0+128)
  9596  0989  303F               	movlw	63
  9597  098A  00D8               	movwf	(_PID_Ki+2)^(0+128)
  9598                           
  9599                           ;pid.c: 16: PID_Kd = 300;
  9600  098B  3000               	movlw	0
  9601  098C  00D3               	movwf	_PID_Kd^(0+128)
  9602  098D  3096               	movlw	150
  9603  098E  00D4               	movwf	(_PID_Kd+1)^(0+128)
  9604  098F  3043               	movlw	67
  9605  0990  00D5               	movwf	(_PID_Kd+2)^(0+128)
  9606                           
  9607                           ;pid.c: 17: pidMinOutput = 0;
  9608  0991  0020               	movlb	0	; select bank0
  9609  0992  01EB               	clrf	_pidMinOutput
  9610  0993  01EC               	clrf	_pidMinOutput+1
  9611                           
  9612                           ;pid.c: 18: pidMaxOutput = 1023;
  9613  0994  30FF               	movlw	255
  9614  0995  0021               	movlb	1	; select bank1
  9615  0996  00DE               	movwf	_pidMaxOutput^(0+128)
  9616  0997  3003               	movlw	3
  9617  0998  00DF               	movwf	(_pidMaxOutput^(0+128)+1)
  9618                           
  9619                           ;pid.c: 19: pidIntegrated = 0;
  9620  0999  3000               	movlw	0
  9621  099A  00D0               	movwf	_pidIntegrated^(0+128)
  9622  099B  3000               	movlw	0
  9623  099C  00D1               	movwf	(_pidIntegrated+1)^(0+128)
  9624  099D  3000               	movlw	0
  9625  099E  00D2               	movwf	(_pidIntegrated+2)^(0+128)
  9626                           
  9627                           ;pid.c: 20: pidPrevInput = 0;
  9628  099F  3000               	movlw	0
  9629  09A0  00CD               	movwf	_pidPrevInput^(0+128)
  9630  09A1  3000               	movlw	0
  9631  09A2  00CE               	movwf	(_pidPrevInput+1)^(0+128)
  9632  09A3  3000               	movlw	0
  9633  09A4  00CF               	movwf	(_pidPrevInput+2)^(0+128)
  9634  09A5  0008               	return
  9635  09A6                     __end_of_Init_PID:	
  9636                           
  9637                           	psect	text28
  9638  0958                     __ptext28:	
  9639 ;; *************** function _InitCustomChars *****************
  9640 ;; Defined at:
  9641 ;;		line 29 in file "lcd.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;		None
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  i               1    6[COMMON] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;Total ram usage:        2 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    2
  9662 ;; This function calls:
  9663 ;;		_LCD_Cmd
  9664 ;;		_LCD_Write_Char
  9665 ;; This function is called by:
  9666 ;;		_SYSTEM_Initialize
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function _InitCustomChars
  9672  0958                     _InitCustomChars:	
  9673                           
  9674                           ;lcd.c: 31: uint8_t i;
  9675                           ;lcd.c: 32: LCD_Cmd(0x04);
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9679  0958  3004               	movlw	4
  9680  0959  3188  202C  3189   	fcall	_LCD_Cmd
  9681                           
  9682                           ;lcd.c: 33: LCD_Cmd(0x00);
  9683  095C  3000               	movlw	0
  9684  095D  3188  202C  3189   	fcall	_LCD_Cmd
  9685                           
  9686                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9687  0960  01F6               	clrf	InitCustomChars@i
  9688  0961  3018               	movlw	24
  9689  0962  0276               	subwf	InitCustomChars@i,w
  9690  0963  1803               	btfsc	3,0
  9691  0964  2976               	goto	l2406
  9692  0965                     l2400:	
  9693                           
  9694                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9695  0965  0876               	movf	InitCustomChars@i,w
  9696  0966  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9697  0967  0086               	movwf	6
  9698  0968  3001               	movlw	1	; select bank2/3
  9699  0969  0087               	movwf	7
  9700  096A  0801               	movf	1,w
  9701  096B  3189  21A6  3189   	fcall	_LCD_Write_Char
  9702  096E  3001               	movlw	1
  9703  096F  00F5               	movwf	??_InitCustomChars
  9704  0970  0875               	movf	??_InitCustomChars,w
  9705  0971  07F6               	addwf	InitCustomChars@i,f
  9706  0972  3018               	movlw	24
  9707  0973  0276               	subwf	InitCustomChars@i,w
  9708  0974  1C03               	skipc
  9709  0975  2965               	goto	l2400
  9710  0976                     l2406:	
  9711                           
  9712                           ;lcd.c: 36: LCD_Cmd(0);
  9713  0976  3000               	movlw	0
  9714  0977  3188  202C  3189   	fcall	_LCD_Cmd
  9715                           
  9716                           ;lcd.c: 37: LCD_Cmd(2);
  9717  097A  3002               	movlw	2
  9718  097B  3188  202C         	fcall	_LCD_Cmd
  9719  097D  0008               	return
  9720  097E                     __end_of_InitCustomChars:	
  9721                           
  9722                           	psect	text29
  9723  09A6                     __ptext29:	
  9724 ;; *************** function _LCD_Write_Char *****************
  9725 ;; Defined at:
  9726 ;;		line 223 in file "lcd.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  a               1    wreg     const unsigned char 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  a               1    4[COMMON] const unsigned char 
  9731 ;;  y               1    3[COMMON] unsigned char 
  9732 ;;  temp            1    2[COMMON] unsigned char 
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1    wreg      void 
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0, pclath, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;Total ram usage:        4 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    1
  9749 ;; This function calls:
  9750 ;;		_LCD_Port
  9751 ;; This function is called by:
  9752 ;;		_InitCustomChars
  9753 ;;		_LCD_Write_String
  9754 ;;		_LCD_Write_Int
  9755 ;;		_main
  9756 ;;		_tempSetpoint
  9757 ;;		_readButtons
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           
  9762                           ;psect for function _LCD_Write_Char
  9763  09A6                     _LCD_Write_Char:	
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9767                           ;LCD_Write_Char@a stored from wreg
  9768  09A6  00F4               	movwf	LCD_Write_Char@a
  9769                           
  9770                           ;lcd.c: 225: char temp,y;
  9771                           ;lcd.c: 226: temp = a&0x0F;
  9772  09A7  0874               	movf	LCD_Write_Char@a,w
  9773  09A8  390F               	andlw	15
  9774  09A9  00F1               	movwf	??_LCD_Write_Char
  9775  09AA  0871               	movf	??_LCD_Write_Char,w
  9776  09AB  00F2               	movwf	LCD_Write_Char@temp
  9777                           
  9778                           ;lcd.c: 227: y = a&0xF0;
  9779  09AC  0874               	movf	LCD_Write_Char@a,w
  9780  09AD  39F0               	andlw	240
  9781  09AE  00F1               	movwf	??_LCD_Write_Char
  9782  09AF  0871               	movf	??_LCD_Write_Char,w
  9783  09B0  00F3               	movwf	LCD_Write_Char@y
  9784                           
  9785                           ;lcd.c: 228: RB0 = 1;
  9786  09B1  0020               	movlb	0	; select bank0
  9787  09B2  140D               	bsf	13,0	;volatile
  9788                           
  9789                           ;lcd.c: 229: LCD_Port(y>>4);
  9790  09B3  0873               	movf	LCD_Write_Char@y,w
  9791  09B4  00F1               	movwf	??_LCD_Write_Char
  9792  09B5  3004               	movlw	4
  9793  09B6                     u1685:	
  9794  09B6  36F1               	lsrf	??_LCD_Write_Char,f
  9795  09B7  0B89               	decfsz	9,f
  9796  09B8  29B6               	goto	u1685
  9797  09B9  0871               	movf	??_LCD_Write_Char,w
  9798  09BA  3188  2082  3189   	fcall	_LCD_Port
  9799                           
  9800                           ;lcd.c: 230: RB1 = 1;
  9801  09BD  0020               	movlb	0	; select bank0
  9802  09BE  148D               	bsf	13,1	;volatile
  9803                           
  9804                           ;lcd.c: 231: RB1 = 0;
  9805  09BF  108D               	bcf	13,1	;volatile
  9806                           
  9807                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9808  09C0  3003               	movlw	3
  9809  09C1                     u3447:	
  9810  09C1  0B89               	decfsz	9,f
  9811  09C2  29C1               	goto	u3447
  9812  09C3  0000               	nop
  9813                           
  9814                           ;lcd.c: 233: LCD_Port(temp);
  9815  09C4  0872               	movf	LCD_Write_Char@temp,w
  9816  09C5  3188  2082  3189   	fcall	_LCD_Port
  9817                           
  9818                           ;lcd.c: 234: RB1 = 1;
  9819  09C8  0020               	movlb	0	; select bank0
  9820  09C9  148D               	bsf	13,1	;volatile
  9821                           
  9822                           ;lcd.c: 235: RB1 = 0;
  9823  09CA  108D               	bcf	13,1	;volatile
  9824                           
  9825                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9826  09CB  3003               	movlw	3
  9827  09CC                     u3457:	
  9828  09CC  0B89               	decfsz	9,f
  9829  09CD  29CC               	goto	u3457
  9830  09CE  0000               	nop
  9831  09CF  0008               	return
  9832  09D0                     __end_of_LCD_Write_Char:	
  9833                           
  9834                           	psect	text30
  9835  082C                     __ptext30:	
  9836 ;; *************** function _LCD_Cmd *****************
  9837 ;; Defined at:
  9838 ;;		line 65 in file "lcd.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  a               1    wreg     unsigned char 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  a               1    1[COMMON] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  1    wreg      void 
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0, pclath, cstack
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;Total ram usage:        1 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:    1
  9859 ;; This function calls:
  9860 ;;		_LCD_Port
  9861 ;; This function is called by:
  9862 ;;		_InitCustomChars
  9863 ;;		_LCD_Clear
  9864 ;;		_LCD_Set_Cursor
  9865 ;;		_LCD_Init
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _LCD_Cmd
  9871  082C                     _LCD_Cmd:	
  9872                           
  9873                           ;incstack = 0
  9874                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9875                           ;LCD_Cmd@a stored from wreg
  9876  082C  00F1               	movwf	LCD_Cmd@a
  9877                           
  9878                           ;lcd.c: 67: RB0 = 0;
  9879  082D  0020               	movlb	0	; select bank0
  9880  082E  100D               	bcf	13,0	;volatile
  9881                           
  9882                           ;lcd.c: 68: LCD_Port(a);
  9883  082F  0871               	movf	LCD_Cmd@a,w
  9884  0830  3188  2082  3188   	fcall	_LCD_Port
  9885                           
  9886                           ;lcd.c: 69: RB1 = 1;
  9887  0833  0020               	movlb	0	; select bank0
  9888  0834  148D               	bsf	13,1	;volatile
  9889                           
  9890                           ;lcd.c: 70: RB1 = 0;
  9891  0835  108D               	bcf	13,1	;volatile
  9892                           
  9893                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9894  0836  30C8               	movlw	200
  9895  0837                     u3467:	
  9896  0837  3200               	nop2
  9897  0838  0B89               	decfsz	9,f
  9898  0839  2837               	goto	u3467
  9899  083A  0008               	return
  9900  083B                     __end_of_LCD_Cmd:	
  9901                           
  9902                           	psect	text31
  9903  0882                     __ptext31:	
  9904 ;; *************** function _LCD_Port *****************
  9905 ;; Defined at:
  9906 ;;		line 41 in file "lcd.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  a               1    wreg     unsigned char 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  a               1    0[COMMON] unsigned char 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:        1 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_LCD_Cmd
  9930 ;;		_LCD_Init
  9931 ;;		_LCD_Write_Char
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           
  9936                           ;psect for function _LCD_Port
  9937  0882                     _LCD_Port:	
  9938                           
  9939                           ;incstack = 0
  9940                           ; Regs used in _LCD_Port: [wreg]
  9941                           ;LCD_Port@a stored from wreg
  9942  0882  00F0               	movwf	LCD_Port@a
  9943                           
  9944                           ;lcd.c: 43: if(a & 1)
  9945  0883  1C70               	btfss	LCD_Port@a,0
  9946  0884  2888               	goto	l28
  9947                           
  9948                           ;lcd.c: 44: RB2 = 1;
  9949  0885  0020               	movlb	0	; select bank0
  9950  0886  150D               	bsf	13,2	;volatile
  9951  0887  288A               	goto	l2022
  9952  0888                     l28:	
  9953                           
  9954                           ;lcd.c: 45: else
  9955                           ;lcd.c: 46: RB2 = 0;
  9956  0888  0020               	movlb	0	; select bank0
  9957  0889  110D               	bcf	13,2	;volatile
  9958  088A                     l2022:	
  9959                           
  9960                           ;lcd.c: 48: if(a & 2)
  9961  088A  1CF0               	btfss	LCD_Port@a,1
  9962  088B  288E               	goto	l30
  9963                           
  9964                           ;lcd.c: 49: RB3 = 1;
  9965  088C  158D               	bsf	13,3	;volatile
  9966  088D  288F               	goto	l2026
  9967  088E                     l30:	
  9968                           
  9969                           ;lcd.c: 50: else
  9970                           ;lcd.c: 51: RB3 = 0;
  9971  088E  118D               	bcf	13,3	;volatile
  9972  088F                     l2026:	
  9973                           
  9974                           ;lcd.c: 53: if(a & 4)
  9975  088F  1D70               	btfss	LCD_Port@a,2
  9976  0890  2893               	goto	l32
  9977                           
  9978                           ;lcd.c: 54: RB4 = 1;
  9979  0891  160D               	bsf	13,4	;volatile
  9980  0892  2894               	goto	l2030
  9981  0893                     l32:	
  9982                           
  9983                           ;lcd.c: 55: else
  9984                           ;lcd.c: 56: RB4 = 0;
  9985  0893  120D               	bcf	13,4	;volatile
  9986  0894                     l2030:	
  9987                           
  9988                           ;lcd.c: 58: if(a & 8)
  9989  0894  1DF0               	btfss	LCD_Port@a,3
  9990  0895  2898               	goto	l34
  9991                           
  9992                           ;lcd.c: 59: RB5 = 1;
  9993  0896  168D               	bsf	13,5	;volatile
  9994  0897  0008               	return
  9995  0898                     l34:	
  9996                           
  9997                           ;lcd.c: 60: else
  9998                           ;lcd.c: 61: RB5 = 0;
  9999  0898  128D               	bcf	13,5	;volatile
 10000  0899  0008               	return
 10001  089A                     __end_of_LCD_Port:	
 10002                           
 10003                           	psect	text32
 10004  08B2                     __ptext32:	
 10005 ;; *************** function _ADCC_Initialize *****************
 10006 ;; Defined at:
 10007 ;;		line 5 in file "adcc.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_SYSTEM_Initialize
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _ADCC_Initialize
 10036  08B2                     _ADCC_Initialize:	
 10037                           
 10038                           ;adcc.c: 8: ADCON1 = 0x00;
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10042  08B2  0021               	movlb	1	; select bank1
 10043  08B3  0194               	clrf	20	;volatile
 10044                           
 10045                           ;adcc.c: 10: ADCON2 = 0x00;
 10046  08B4  0195               	clrf	21	;volatile
 10047                           
 10048                           ;adcc.c: 12: ADCON3 = 0x00;
 10049  08B5  0196               	clrf	22	;volatile
 10050                           
 10051                           ;adcc.c: 14: ADACT = 0x00;
 10052  08B6  0199               	clrf	25	;volatile
 10053                           
 10054                           ;adcc.c: 16: ADSTAT = 0x00;
 10055  08B7  0197               	clrf	23	;volatile
 10056                           
 10057                           ;adcc.c: 18: ADCLK = 0x0F;
 10058  08B8  300F               	movlw	15
 10059  08B9  0098               	movwf	24	;volatile
 10060                           
 10061                           ;adcc.c: 21: ADREF = 0x00;
 10062  08BA  019A               	clrf	26	;volatile
 10063                           
 10064                           ;adcc.c: 23: ADCAP = 0x00;
 10065  08BB  019B               	clrf	27	;volatile
 10066                           
 10067                           ;adcc.c: 25: ADPRE = 0x00;
 10068  08BC  019C               	clrf	28	;volatile
 10069                           
 10070                           ;adcc.c: 27: ADACQ = 0x00;
 10071  08BD  019D               	clrf	29	;volatile
 10072                           
 10073                           ;adcc.c: 29: ADPCH = 0x00;
 10074  08BE  019E               	clrf	30	;volatile
 10075                           
 10076                           ;adcc.c: 31: ADRPT = 0x00;
 10077  08BF  0022               	movlb	2	; select bank2
 10078  08C0  018D               	clrf	13	;volatile
 10079                           
 10080                           ;adcc.c: 33: ADLTHL = 0x00;
 10081  08C1  018E               	clrf	14	;volatile
 10082                           
 10083                           ;adcc.c: 35: ADLTHH = 0x00;
 10084  08C2  018F               	clrf	15	;volatile
 10085                           
 10086                           ;adcc.c: 37: ADUTHL = 0x00;
 10087  08C3  0190               	clrf	16	;volatile
 10088                           
 10089                           ;adcc.c: 39: ADUTHH = 0x00;
 10090  08C4  0191               	clrf	17	;volatile
 10091                           
 10092                           ;adcc.c: 41: ADSTPTL = 0x00;
 10093  08C5  0192               	clrf	18	;volatile
 10094                           
 10095                           ;adcc.c: 43: ADSTPTH = 0x00;
 10096  08C6  0193               	clrf	19	;volatile
 10097                           
 10098                           ;adcc.c: 46: ADCON0 = 0x84;
 10099  08C7  3084               	movlw	132
 10100  08C8  0021               	movlb	1	; select bank1
 10101  08C9  0093               	movwf	19	;volatile
 10102  08CA  0008               	return
 10103  08CB                     __end_of_ADCC_Initialize:	
 10104                           
 10105                           	psect	text33
 10106  086C                     __ptext33:	
 10107 ;; *************** function _PWM6_LoadDutyValue *****************
 10108 ;; Defined at:
 10109 ;;		line 15 in file "pwm6.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  dutyValue       2    0[COMMON] unsigned int 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;Total ram usage:        4 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_main
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           
 10137                           ;psect for function _PWM6_LoadDutyValue
 10138  086C                     _PWM6_LoadDutyValue:	
 10139                           
 10140                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10141                           
 10142                           ;incstack = 0
 10143                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10144  086C  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10145  086D  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10146  086E  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10147  086F  00F2               	movwf	??_PWM6_LoadDutyValue
 10148  0870  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10149  0871  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10150  0872  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10151  0873  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10152  0874  0872               	movf	??_PWM6_LoadDutyValue,w
 10153  0875  0027               	movlb	7	; select bank7
 10154  0876  008D               	movwf	13	;volatile
 10155                           
 10156                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10157  0877  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10158  0878  3903               	andlw	3
 10159  0879  00F2               	movwf	??_PWM6_LoadDutyValue
 10160  087A  3005               	movlw	5
 10161  087B                     u2735:	
 10162  087B  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10163  087C  3EFF               	addlw	-1
 10164  087D  1D03               	skipz
 10165  087E  287B               	goto	u2735
 10166  087F  3572               	lslf	??_PWM6_LoadDutyValue,w
 10167  0880  008C               	movwf	12	;volatile
 10168  0881  0008               	return
 10169  0882                     __end_of_PWM6_LoadDutyValue:	
 10170                           
 10171                           	psect	text34
 10172  0305                     __ptext34:	
 10173 ;; *************** function _PID_Calculate *****************
 10174 ;; Defined at:
 10175 ;;		line 24 in file "pid.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  setpoint        2   38[BANK0 ] const int 
 10178 ;;  temp            3   40[BANK0 ] float 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  error           3   58[BANK0 ] float 
 10181 ;;  Result          3   55[BANK0 ] float 
 10182 ;;  pidPrevError    3   52[BANK0 ] float 
 10183 ;;  derivativeVa    3   49[BANK0 ] float 
 10184 ;;  errorValue      3   43[BANK0 ] float 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  3   38[BANK0 ] float 
 10187 ;; Registers used:
 10188 ;;		wreg, status,2, status,0, pclath, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10194 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;Total ram usage:       23 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:    2
 10201 ;; This function calls:
 10202 ;;		___awtoft
 10203 ;;		___ftadd
 10204 ;;		___ftge
 10205 ;;		___ftmul
 10206 ;;		___ftneg
 10207 ;; This function is called by:
 10208 ;;		_main
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           
 10213                           ;psect for function _PID_Calculate
 10214  0305                     _PID_Calculate:	
 10215                           
 10216                           ;pid.c: 26: float error, errorValue, derivativeValue = 0, pidPrevError = 0, Result;
 10217                           
 10218                           ;incstack = 0
 10219                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10220  0305  3000               	movlw	0
 10221  0306  0020               	movlb	0	; select bank0
 10222  0307  00D1               	movwf	PID_Calculate@derivativeValue
 10223  0308  3000               	movlw	0
 10224  0309  00D2               	movwf	PID_Calculate@derivativeValue+1
 10225  030A  3000               	movlw	0
 10226  030B  00D3               	movwf	PID_Calculate@derivativeValue+2
 10227  030C  3000               	movlw	0
 10228  030D  00D4               	movwf	PID_Calculate@pidPrevError
 10229  030E  3000               	movlw	0
 10230  030F  00D5               	movwf	PID_Calculate@pidPrevError+1
 10231  0310  3000               	movlw	0
 10232  0311  00D6               	movwf	PID_Calculate@pidPrevError+2
 10233                           
 10234                           ;pid.c: 29: error = setpoint - temp;
 10235  0312  0848               	movf	PID_Calculate@temp,w
 10236  0313  00F0               	movwf	___ftneg@f1
 10237  0314  0849               	movf	PID_Calculate@temp+1,w
 10238  0315  00F1               	movwf	___ftneg@f1+1
 10239  0316  084A               	movf	PID_Calculate@temp+2,w
 10240  0317  00F2               	movwf	___ftneg@f1+2
 10241  0318  3197  27DC  3183   	fcall	___ftneg
 10242  031B  0870               	movf	?___ftneg,w
 10243  031C  0020               	movlb	0	; select bank0
 10244  031D  00B0               	movwf	___ftadd@f1
 10245  031E  0871               	movf	?___ftneg+1,w
 10246  031F  00B1               	movwf	___ftadd@f1+1
 10247  0320  0872               	movf	?___ftneg+2,w
 10248  0321  00B2               	movwf	___ftadd@f1+2
 10249  0322  0847               	movf	PID_Calculate@setpoint+1,w
 10250  0323  00F9               	movwf	___awtoft@c+1
 10251  0324  0846               	movf	PID_Calculate@setpoint,w
 10252  0325  00F8               	movwf	___awtoft@c
 10253  0326  3189  2138  3183   	fcall	___awtoft
 10254  0329  0878               	movf	?___awtoft,w
 10255  032A  0020               	movlb	0	; select bank0
 10256  032B  00B3               	movwf	___ftadd@f2
 10257  032C  0879               	movf	?___awtoft+1,w
 10258  032D  00B4               	movwf	___ftadd@f2+1
 10259  032E  087A               	movf	?___awtoft+2,w
 10260  032F  00B5               	movwf	___ftadd@f2+2
 10261  0330  3182  220F  3183   	fcall	___ftadd
 10262  0333  0020               	movlb	0	; select bank0
 10263  0334  0830               	movf	?___ftadd,w
 10264  0335  00DA               	movwf	PID_Calculate@error
 10265  0336  0831               	movf	?___ftadd+1,w
 10266  0337  00DB               	movwf	PID_Calculate@error+1
 10267  0338  0832               	movf	?___ftadd+2,w
 10268  0339  00DC               	movwf	PID_Calculate@error+2
 10269                           
 10270                           ;pid.c: 31: errorValue = error * PID_Kp;
 10271  033A  0021               	movlb	1	; select bank1
 10272  033B  0859               	movf	_PID_Kp^(0+128),w
 10273  033C  0020               	movlb	0	; select bank0
 10274  033D  00A0               	movwf	___ftmul@f1
 10275  033E  0021               	movlb	1	; select bank1
 10276  033F  085A               	movf	(_PID_Kp+1)^(0+128),w
 10277  0340  0020               	movlb	0	; select bank0
 10278  0341  00A1               	movwf	___ftmul@f1+1
 10279  0342  0021               	movlb	1	; select bank1
 10280  0343  085B               	movf	(_PID_Kp+2)^(0+128),w
 10281  0344  0020               	movlb	0	; select bank0
 10282  0345  00A2               	movwf	___ftmul@f1+2
 10283  0346  085A               	movf	PID_Calculate@error,w
 10284  0347  00A3               	movwf	___ftmul@f2
 10285  0348  085B               	movf	PID_Calculate@error+1,w
 10286  0349  00A4               	movwf	___ftmul@f2+1
 10287  034A  085C               	movf	PID_Calculate@error+2,w
 10288  034B  00A5               	movwf	___ftmul@f2+2
 10289  034C  318F  274C  3183   	fcall	___ftmul
 10290  034F  0020               	movlb	0	; select bank0
 10291  0350  0820               	movf	?___ftmul,w
 10292  0351  00CB               	movwf	PID_Calculate@errorValue
 10293  0352  0821               	movf	?___ftmul+1,w
 10294  0353  00CC               	movwf	PID_Calculate@errorValue+1
 10295  0354  0822               	movf	?___ftmul+2,w
 10296  0355  00CD               	movwf	PID_Calculate@errorValue+2
 10297                           
 10298                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * PID_Ki);
 10299  0356  0021               	movlb	1	; select bank1
 10300  0357  0850               	movf	_pidIntegrated^(0+128),w
 10301  0358  0020               	movlb	0	; select bank0
 10302  0359  00B0               	movwf	___ftadd@f1
 10303  035A  0021               	movlb	1	; select bank1
 10304  035B  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10305  035C  0020               	movlb	0	; select bank0
 10306  035D  00B1               	movwf	___ftadd@f1+1
 10307  035E  0021               	movlb	1	; select bank1
 10308  035F  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10309  0360  0020               	movlb	0	; select bank0
 10310  0361  00B2               	movwf	___ftadd@f1+2
 10311  0362  0021               	movlb	1	; select bank1
 10312  0363  0856               	movf	_PID_Ki^(0+128),w
 10313  0364  0020               	movlb	0	; select bank0
 10314  0365  00A0               	movwf	___ftmul@f1
 10315  0366  0021               	movlb	1	; select bank1
 10316  0367  0857               	movf	(_PID_Ki+1)^(0+128),w
 10317  0368  0020               	movlb	0	; select bank0
 10318  0369  00A1               	movwf	___ftmul@f1+1
 10319  036A  0021               	movlb	1	; select bank1
 10320  036B  0858               	movf	(_PID_Ki+2)^(0+128),w
 10321  036C  0020               	movlb	0	; select bank0
 10322  036D  00A2               	movwf	___ftmul@f1+2
 10323  036E  085A               	movf	PID_Calculate@error,w
 10324  036F  00A3               	movwf	___ftmul@f2
 10325  0370  085B               	movf	PID_Calculate@error+1,w
 10326  0371  00A4               	movwf	___ftmul@f2+1
 10327  0372  085C               	movf	PID_Calculate@error+2,w
 10328  0373  00A5               	movwf	___ftmul@f2+2
 10329  0374  318F  274C  3183   	fcall	___ftmul
 10330  0377  0020               	movlb	0	; select bank0
 10331  0378  0820               	movf	?___ftmul,w
 10332  0379  00B3               	movwf	___ftadd@f2
 10333  037A  0821               	movf	?___ftmul+1,w
 10334  037B  00B4               	movwf	___ftadd@f2+1
 10335  037C  0822               	movf	?___ftmul+2,w
 10336  037D  00B5               	movwf	___ftadd@f2+2
 10337  037E  3182  220F  3183   	fcall	___ftadd
 10338  0381  0020               	movlb	0	; select bank0
 10339  0382  0830               	movf	?___ftadd,w
 10340  0383  0021               	movlb	1	; select bank1
 10341  0384  00D0               	movwf	_pidIntegrated^(0+128)
 10342  0385  0020               	movlb	0	; select bank0
 10343  0386  0831               	movf	?___ftadd+1,w
 10344  0387  0021               	movlb	1	; select bank1
 10345  0388  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10346  0389  0020               	movlb	0	; select bank0
 10347  038A  0832               	movf	?___ftadd+2,w
 10348  038B  0021               	movlb	1	; select bank1
 10349  038C  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10350                           
 10351                           ;pid.c: 36: if (pidIntegrated< pidMinOutput)
 10352  038D  0850               	movf	_pidIntegrated^(0+128),w
 10353  038E  0020               	movlb	0	; select bank0
 10354  038F  00BD               	movwf	___ftge@ff1
 10355  0390  0021               	movlb	1	; select bank1
 10356  0391  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10357  0392  0020               	movlb	0	; select bank0
 10358  0393  00BE               	movwf	___ftge@ff1+1
 10359  0394  0021               	movlb	1	; select bank1
 10360  0395  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10361  0396  0020               	movlb	0	; select bank0
 10362  0397  00BF               	movwf	___ftge@ff1+2
 10363  0398  086C               	movf	_pidMinOutput+1,w
 10364  0399  00F9               	movwf	___awtoft@c+1
 10365  039A  086B               	movf	_pidMinOutput,w
 10366  039B  00F8               	movwf	___awtoft@c
 10367  039C  3189  2138  3183   	fcall	___awtoft
 10368  039F  0878               	movf	?___awtoft,w
 10369  03A0  0020               	movlb	0	; select bank0
 10370  03A1  00C0               	movwf	___ftge@ff2
 10371  03A2  0879               	movf	?___awtoft+1,w
 10372  03A3  00C1               	movwf	___ftge@ff2+1
 10373  03A4  087A               	movf	?___awtoft+2,w
 10374  03A5  00C2               	movwf	___ftge@ff2+2
 10375  03A6  318A  22AA  3183   	fcall	___ftge
 10376  03A9  1803               	btfsc	3,0
 10377  03AA  2BBA               	goto	l332
 10378                           
 10379                           ;pid.c: 37: {
 10380                           ;pid.c: 38: pidIntegrated= pidMinOutput;
 10381  03AB  0020               	movlb	0	; select bank0
 10382  03AC  086C               	movf	_pidMinOutput+1,w
 10383  03AD  00F9               	movwf	___awtoft@c+1
 10384  03AE  086B               	movf	_pidMinOutput,w
 10385  03AF  00F8               	movwf	___awtoft@c
 10386  03B0  3189  2138  3183   	fcall	___awtoft
 10387  03B3  0878               	movf	?___awtoft,w
 10388  03B4  0021               	movlb	1	; select bank1
 10389  03B5  00D0               	movwf	_pidIntegrated^(0+128)
 10390  03B6  0879               	movf	?___awtoft+1,w
 10391  03B7  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10392  03B8  087A               	movf	?___awtoft+2,w
 10393  03B9  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10394  03BA                     l332:	
 10395                           
 10396                           ;pid.c: 39: }
 10397                           ;pid.c: 41: if (pidIntegrated> pidMaxOutput)
 10398  03BA  0021               	movlb	1	; select bank1
 10399  03BB  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10400  03BC  00F9               	movwf	___awtoft@c+1
 10401  03BD  085E               	movf	_pidMaxOutput^(0+128),w
 10402  03BE  00F8               	movwf	___awtoft@c
 10403  03BF  3189  2138  3183   	fcall	___awtoft
 10404  03C2  0878               	movf	?___awtoft,w
 10405  03C3  0020               	movlb	0	; select bank0
 10406  03C4  00BD               	movwf	___ftge@ff1
 10407  03C5  0879               	movf	?___awtoft+1,w
 10408  03C6  00BE               	movwf	___ftge@ff1+1
 10409  03C7  087A               	movf	?___awtoft+2,w
 10410  03C8  00BF               	movwf	___ftge@ff1+2
 10411  03C9  0021               	movlb	1	; select bank1
 10412  03CA  0850               	movf	_pidIntegrated^(0+128),w
 10413  03CB  0020               	movlb	0	; select bank0
 10414  03CC  00C0               	movwf	___ftge@ff2
 10415  03CD  0021               	movlb	1	; select bank1
 10416  03CE  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10417  03CF  0020               	movlb	0	; select bank0
 10418  03D0  00C1               	movwf	___ftge@ff2+1
 10419  03D1  0021               	movlb	1	; select bank1
 10420  03D2  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10421  03D3  0020               	movlb	0	; select bank0
 10422  03D4  00C2               	movwf	___ftge@ff2+2
 10423  03D5  318A  22AA  3183   	fcall	___ftge
 10424  03D8  1803               	btfsc	3,0
 10425  03D9  2BE9               	goto	l333
 10426                           
 10427                           ;pid.c: 42: {
 10428                           ;pid.c: 43: pidIntegrated= pidMaxOutput;
 10429  03DA  0021               	movlb	1	; select bank1
 10430  03DB  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10431  03DC  00F9               	movwf	___awtoft@c+1
 10432  03DD  085E               	movf	_pidMaxOutput^(0+128),w
 10433  03DE  00F8               	movwf	___awtoft@c
 10434  03DF  3189  2138  3183   	fcall	___awtoft
 10435  03E2  0878               	movf	?___awtoft,w
 10436  03E3  0021               	movlb	1	; select bank1
 10437  03E4  00D0               	movwf	_pidIntegrated^(0+128)
 10438  03E5  0879               	movf	?___awtoft+1,w
 10439  03E6  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10440  03E7  087A               	movf	?___awtoft+2,w
 10441  03E8  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10442  03E9                     l333:	
 10443                           
 10444                           ;pid.c: 44: }
 10445                           ;pid.c: 47: derivativeValue=(error-pidPrevError)*PID_Kd;
 10446  03E9  0021               	movlb	1	; select bank1
 10447  03EA  0853               	movf	_PID_Kd^(0+128),w
 10448  03EB  0020               	movlb	0	; select bank0
 10449  03EC  00A0               	movwf	___ftmul@f1
 10450  03ED  0021               	movlb	1	; select bank1
 10451  03EE  0854               	movf	(_PID_Kd+1)^(0+128),w
 10452  03EF  0020               	movlb	0	; select bank0
 10453  03F0  00A1               	movwf	___ftmul@f1+1
 10454  03F1  0021               	movlb	1	; select bank1
 10455  03F2  0855               	movf	(_PID_Kd+2)^(0+128),w
 10456  03F3  0020               	movlb	0	; select bank0
 10457  03F4  00A2               	movwf	___ftmul@f1+2
 10458  03F5  085A               	movf	PID_Calculate@error,w
 10459  03F6  00B0               	movwf	___ftadd@f1
 10460  03F7  085B               	movf	PID_Calculate@error+1,w
 10461  03F8  00B1               	movwf	___ftadd@f1+1
 10462  03F9  085C               	movf	PID_Calculate@error+2,w
 10463  03FA  00B2               	movwf	___ftadd@f1+2
 10464  03FB  0854               	movf	PID_Calculate@pidPrevError,w
 10465  03FC  00F0               	movwf	___ftneg@f1
 10466  03FD  0855               	movf	PID_Calculate@pidPrevError+1,w
 10467  03FE  00F1               	movwf	___ftneg@f1+1
 10468  03FF  0856               	movf	PID_Calculate@pidPrevError+2,w
 10469  0400  00F2               	movwf	___ftneg@f1+2
 10470  0401  3197  27DC  3183   	fcall	___ftneg
 10471  0404  0870               	movf	?___ftneg,w
 10472  0405  0020               	movlb	0	; select bank0
 10473  0406  00B3               	movwf	___ftadd@f2
 10474  0407  0871               	movf	?___ftneg+1,w
 10475  0408  00B4               	movwf	___ftadd@f2+1
 10476  0409  0872               	movf	?___ftneg+2,w
 10477  040A  00B5               	movwf	___ftadd@f2+2
 10478  040B  3182  220F  3183   	fcall	___ftadd
 10479  040E  0020               	movlb	0	; select bank0
 10480  040F  0830               	movf	?___ftadd,w
 10481  0410  00A3               	movwf	___ftmul@f2
 10482  0411  0831               	movf	?___ftadd+1,w
 10483  0412  00A4               	movwf	___ftmul@f2+1
 10484  0413  0832               	movf	?___ftadd+2,w
 10485  0414  00A5               	movwf	___ftmul@f2+2
 10486  0415  318F  274C  3183   	fcall	___ftmul
 10487  0418  0020               	movlb	0	; select bank0
 10488  0419  0820               	movf	?___ftmul,w
 10489  041A  00D1               	movwf	PID_Calculate@derivativeValue
 10490  041B  0821               	movf	?___ftmul+1,w
 10491  041C  00D2               	movwf	PID_Calculate@derivativeValue+1
 10492  041D  0822               	movf	?___ftmul+2,w
 10493  041E  00D3               	movwf	PID_Calculate@derivativeValue+2
 10494                           
 10495                           ;pid.c: 48: pidPrevError = error;
 10496  041F  085A               	movf	PID_Calculate@error,w
 10497  0420  00D4               	movwf	PID_Calculate@pidPrevError
 10498  0421  085B               	movf	PID_Calculate@error+1,w
 10499  0422  00D5               	movwf	PID_Calculate@pidPrevError+1
 10500  0423  085C               	movf	PID_Calculate@error+2,w
 10501  0424  00D6               	movwf	PID_Calculate@pidPrevError+2
 10502                           
 10503                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10504  0425  0021               	movlb	1	; select bank1
 10505  0426  0850               	movf	_pidIntegrated^(0+128),w
 10506  0427  0020               	movlb	0	; select bank0
 10507  0428  00B0               	movwf	___ftadd@f1
 10508  0429  0021               	movlb	1	; select bank1
 10509  042A  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10510  042B  0020               	movlb	0	; select bank0
 10511  042C  00B1               	movwf	___ftadd@f1+1
 10512  042D  0021               	movlb	1	; select bank1
 10513  042E  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10514  042F  0020               	movlb	0	; select bank0
 10515  0430  00B2               	movwf	___ftadd@f1+2
 10516  0431  084B               	movf	PID_Calculate@errorValue,w
 10517  0432  00B3               	movwf	___ftadd@f2
 10518  0433  084C               	movf	PID_Calculate@errorValue+1,w
 10519  0434  00B4               	movwf	___ftadd@f2+1
 10520  0435  084D               	movf	PID_Calculate@errorValue+2,w
 10521  0436  00B5               	movwf	___ftadd@f2+2
 10522  0437  3182  220F  3183   	fcall	___ftadd
 10523  043A  0020               	movlb	0	; select bank0
 10524  043B  0830               	movf	?___ftadd,w
 10525  043C  00CE               	movwf	_PID_Calculate$1064
 10526  043D  0831               	movf	?___ftadd+1,w
 10527  043E  00CF               	movwf	_PID_Calculate$1064+1
 10528  043F  0832               	movf	?___ftadd+2,w
 10529  0440  00D0               	movwf	_PID_Calculate$1064+2
 10530                           
 10531                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10532  0441  0851               	movf	PID_Calculate@derivativeValue,w
 10533  0442  00B0               	movwf	___ftadd@f1
 10534  0443  0852               	movf	PID_Calculate@derivativeValue+1,w
 10535  0444  00B1               	movwf	___ftadd@f1+1
 10536  0445  0853               	movf	PID_Calculate@derivativeValue+2,w
 10537  0446  00B2               	movwf	___ftadd@f1+2
 10538  0447  084E               	movf	_PID_Calculate$1064,w
 10539  0448  00B3               	movwf	___ftadd@f2
 10540  0449  084F               	movf	_PID_Calculate$1064+1,w
 10541  044A  00B4               	movwf	___ftadd@f2+1
 10542  044B  0850               	movf	_PID_Calculate$1064+2,w
 10543  044C  00B5               	movwf	___ftadd@f2+2
 10544  044D  3182  220F  3183   	fcall	___ftadd
 10545  0450  0020               	movlb	0	; select bank0
 10546  0451  0830               	movf	?___ftadd,w
 10547  0452  00D7               	movwf	PID_Calculate@Result
 10548  0453  0831               	movf	?___ftadd+1,w
 10549  0454  00D8               	movwf	PID_Calculate@Result+1
 10550  0455  0832               	movf	?___ftadd+2,w
 10551  0456  00D9               	movwf	PID_Calculate@Result+2
 10552                           
 10553                           ;pid.c: 53: if (Result < pidMinOutput)
 10554  0457  0857               	movf	PID_Calculate@Result,w
 10555  0458  00BD               	movwf	___ftge@ff1
 10556  0459  0858               	movf	PID_Calculate@Result+1,w
 10557  045A  00BE               	movwf	___ftge@ff1+1
 10558  045B  0859               	movf	PID_Calculate@Result+2,w
 10559  045C  00BF               	movwf	___ftge@ff1+2
 10560  045D  086C               	movf	_pidMinOutput+1,w
 10561  045E  00F9               	movwf	___awtoft@c+1
 10562  045F  086B               	movf	_pidMinOutput,w
 10563  0460  00F8               	movwf	___awtoft@c
 10564  0461  3189  2138  3183   	fcall	___awtoft
 10565  0464  0878               	movf	?___awtoft,w
 10566  0465  0020               	movlb	0	; select bank0
 10567  0466  00C0               	movwf	___ftge@ff2
 10568  0467  0879               	movf	?___awtoft+1,w
 10569  0468  00C1               	movwf	___ftge@ff2+1
 10570  0469  087A               	movf	?___awtoft+2,w
 10571  046A  00C2               	movwf	___ftge@ff2+2
 10572  046B  318A  22AA  3183   	fcall	___ftge
 10573  046E  1803               	btfsc	3,0
 10574  046F  2C7F               	goto	l334
 10575                           
 10576                           ;pid.c: 54: {
 10577                           ;pid.c: 55: Result = pidMinOutput;
 10578  0470  0020               	movlb	0	; select bank0
 10579  0471  086C               	movf	_pidMinOutput+1,w
 10580  0472  00F9               	movwf	___awtoft@c+1
 10581  0473  086B               	movf	_pidMinOutput,w
 10582  0474  00F8               	movwf	___awtoft@c
 10583  0475  3189  2138  3183   	fcall	___awtoft
 10584  0478  0878               	movf	?___awtoft,w
 10585  0479  0020               	movlb	0	; select bank0
 10586  047A  00D7               	movwf	PID_Calculate@Result
 10587  047B  0879               	movf	?___awtoft+1,w
 10588  047C  00D8               	movwf	PID_Calculate@Result+1
 10589  047D  087A               	movf	?___awtoft+2,w
 10590  047E  00D9               	movwf	PID_Calculate@Result+2
 10591  047F                     l334:	
 10592                           
 10593                           ;pid.c: 56: }
 10594                           ;pid.c: 58: if (Result > pidMaxOutput)
 10595  047F  0021               	movlb	1	; select bank1
 10596  0480  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10597  0481  00F9               	movwf	___awtoft@c+1
 10598  0482  085E               	movf	_pidMaxOutput^(0+128),w
 10599  0483  00F8               	movwf	___awtoft@c
 10600  0484  3189  2138  3183   	fcall	___awtoft
 10601  0487  0878               	movf	?___awtoft,w
 10602  0488  0020               	movlb	0	; select bank0
 10603  0489  00BD               	movwf	___ftge@ff1
 10604  048A  0879               	movf	?___awtoft+1,w
 10605  048B  00BE               	movwf	___ftge@ff1+1
 10606  048C  087A               	movf	?___awtoft+2,w
 10607  048D  00BF               	movwf	___ftge@ff1+2
 10608  048E  0857               	movf	PID_Calculate@Result,w
 10609  048F  00C0               	movwf	___ftge@ff2
 10610  0490  0858               	movf	PID_Calculate@Result+1,w
 10611  0491  00C1               	movwf	___ftge@ff2+1
 10612  0492  0859               	movf	PID_Calculate@Result+2,w
 10613  0493  00C2               	movwf	___ftge@ff2+2
 10614  0494  318A  22AA  3183   	fcall	___ftge
 10615  0497  1803               	btfsc	3,0
 10616  0498  2CA7               	goto	l2772
 10617                           
 10618                           ;pid.c: 59: {
 10619                           ;pid.c: 60: Result = pidMaxOutput;
 10620  0499  0021               	movlb	1	; select bank1
 10621  049A  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10622  049B  00F9               	movwf	___awtoft@c+1
 10623  049C  085E               	movf	_pidMaxOutput^(0+128),w
 10624  049D  00F8               	movwf	___awtoft@c
 10625  049E  3189  2138         	fcall	___awtoft
 10626  04A0  0878               	movf	?___awtoft,w
 10627  04A1  0020               	movlb	0	; select bank0
 10628  04A2  00D7               	movwf	PID_Calculate@Result
 10629  04A3  0879               	movf	?___awtoft+1,w
 10630  04A4  00D8               	movwf	PID_Calculate@Result+1
 10631  04A5  087A               	movf	?___awtoft+2,w
 10632  04A6  00D9               	movwf	PID_Calculate@Result+2
 10633  04A7                     l2772:	
 10634                           
 10635                           ;pid.c: 61: }
 10636                           ;pid.c: 63: return (Result);
 10637  04A7  0020               	movlb	0	; select bank0
 10638  04A8  0857               	movf	PID_Calculate@Result,w
 10639  04A9  00C6               	movwf	?_PID_Calculate
 10640  04AA  0858               	movf	PID_Calculate@Result+1,w
 10641  04AB  00C7               	movwf	?_PID_Calculate+1
 10642  04AC  0859               	movf	PID_Calculate@Result+2,w
 10643  04AD  00C8               	movwf	?_PID_Calculate+2
 10644  04AE  0008               	return
 10645  04AF                     __end_of_PID_Calculate:	
 10646                           
 10647                           	psect	text35
 10648  17DC                     __ptext35:	
 10649 ;; *************** function ___ftneg *****************
 10650 ;; Defined at:
 10651 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  f1              3    0[COMMON] float 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  3    0[COMMON] float 
 10658 ;; Registers used:
 10659 ;;		wreg
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        3 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_main
 10675 ;;		_PID_Calculate
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function ___ftneg
 10681  17DC                     ___ftneg:	
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in ___ftneg: [wreg]
 10685  17DC  0872               	movf	___ftneg@f1+2,w
 10686  17DD  0471               	iorwf	___ftneg@f1+1,w
 10687  17DE  0470               	iorwf	___ftneg@f1,w
 10688  17DF  1903               	skipnz
 10689  17E0  0008               	return
 10690  17E1  3080               	movlw	128
 10691  17E2  06F2               	xorwf	___ftneg@f1+2,f
 10692  17E3  0008               	return
 10693  17E4                     __end_of___ftneg:	
 10694                           
 10695                           	psect	text36
 10696  0F4C                     __ptext36:	
 10697 ;; *************** function ___ftmul *****************
 10698 ;; Defined at:
 10699 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;  f1              3    0[BANK0 ] float 
 10702 ;;  f2              3    3[BANK0 ] float 
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 10705 ;;  sign            1   15[BANK0 ] unsigned char 
 10706 ;;  cntr            1   14[BANK0 ] unsigned char 
 10707 ;;  exp             1   10[BANK0 ] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  3    0[BANK0 ] float 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, pclath, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10717 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;Total ram usage:       16 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:    1
 10724 ;; This function calls:
 10725 ;;		___ftpack
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;;		_PID_Calculate
 10729 ;;		_log
 10730 ;;		_eval_poly
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           
 10735                           ;psect for function ___ftmul
 10736  0F4C                     ___ftmul:	
 10737                           
 10738                           ;incstack = 0
 10739                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10740  0F4C  0020               	movlb	0	; select bank0
 10741  0F4D  0820               	movf	___ftmul@f1,w
 10742  0F4E  00A6               	movwf	??___ftmul
 10743  0F4F  0821               	movf	___ftmul@f1+1,w
 10744  0F50  00A7               	movwf	??___ftmul+1
 10745  0F51  0822               	movf	___ftmul@f1+2,w
 10746  0F52  00A8               	movwf	??___ftmul+2
 10747  0F53  1003               	clrc
 10748  0F54  0D27               	rlf	??___ftmul+1,w
 10749  0F55  0D28               	rlf	??___ftmul+2,w
 10750  0F56  00A9               	movwf	??___ftmul+3
 10751  0F57  0829               	movf	??___ftmul+3,w
 10752  0F58  00AA               	movwf	___ftmul@exp
 10753  0F59  082A               	movf	___ftmul@exp,w
 10754  0F5A  1D03               	btfss	3,2
 10755  0F5B  2F63               	goto	l2348
 10756  0F5C  3000               	movlw	0
 10757  0F5D  00A0               	movwf	?___ftmul
 10758  0F5E  3000               	movlw	0
 10759  0F5F  00A1               	movwf	?___ftmul+1
 10760  0F60  3000               	movlw	0
 10761  0F61  00A2               	movwf	?___ftmul+2
 10762  0F62  0008               	return
 10763  0F63                     l2348:	
 10764  0F63  0823               	movf	___ftmul@f2,w
 10765  0F64  00A6               	movwf	??___ftmul
 10766  0F65  0824               	movf	___ftmul@f2+1,w
 10767  0F66  00A7               	movwf	??___ftmul+1
 10768  0F67  0825               	movf	___ftmul@f2+2,w
 10769  0F68  00A8               	movwf	??___ftmul+2
 10770  0F69  1003               	clrc
 10771  0F6A  0D27               	rlf	??___ftmul+1,w
 10772  0F6B  0D28               	rlf	??___ftmul+2,w
 10773  0F6C  00A9               	movwf	??___ftmul+3
 10774  0F6D  0829               	movf	??___ftmul+3,w
 10775  0F6E  00AF               	movwf	___ftmul@sign
 10776  0F6F  082F               	movf	___ftmul@sign,w
 10777  0F70  1D03               	btfss	3,2
 10778  0F71  2F79               	goto	l2354
 10779  0F72  3000               	movlw	0
 10780  0F73  00A0               	movwf	?___ftmul
 10781  0F74  3000               	movlw	0
 10782  0F75  00A1               	movwf	?___ftmul+1
 10783  0F76  3000               	movlw	0
 10784  0F77  00A2               	movwf	?___ftmul+2
 10785  0F78  0008               	return
 10786  0F79                     l2354:	
 10787  0F79  082F               	movf	___ftmul@sign,w
 10788  0F7A  3E7B               	addlw	123
 10789  0F7B  00A6               	movwf	??___ftmul
 10790  0F7C  0826               	movf	??___ftmul,w
 10791  0F7D  07AA               	addwf	___ftmul@exp,f
 10792  0F7E  0820               	movf	___ftmul@f1,w
 10793  0F7F  00A6               	movwf	??___ftmul
 10794  0F80  0821               	movf	___ftmul@f1+1,w
 10795  0F81  00A7               	movwf	??___ftmul+1
 10796  0F82  0822               	movf	___ftmul@f1+2,w
 10797  0F83  00A8               	movwf	??___ftmul+2
 10798  0F84  3010               	movlw	16
 10799  0F85                     u2435:	
 10800  0F85  36A8               	lsrf	??___ftmul+2,f
 10801  0F86  0CA7               	rrf	??___ftmul+1,f
 10802  0F87  0CA6               	rrf	??___ftmul,f
 10803  0F88  0B89               	decfsz	9,f
 10804  0F89  2F85               	goto	u2435
 10805  0F8A  0826               	movf	??___ftmul,w
 10806  0F8B  00A9               	movwf	??___ftmul+3
 10807  0F8C  0829               	movf	??___ftmul+3,w
 10808  0F8D  00AF               	movwf	___ftmul@sign
 10809  0F8E  0823               	movf	___ftmul@f2,w
 10810  0F8F  00A6               	movwf	??___ftmul
 10811  0F90  0824               	movf	___ftmul@f2+1,w
 10812  0F91  00A7               	movwf	??___ftmul+1
 10813  0F92  0825               	movf	___ftmul@f2+2,w
 10814  0F93  00A8               	movwf	??___ftmul+2
 10815  0F94  3010               	movlw	16
 10816  0F95                     u2445:	
 10817  0F95  36A8               	lsrf	??___ftmul+2,f
 10818  0F96  0CA7               	rrf	??___ftmul+1,f
 10819  0F97  0CA6               	rrf	??___ftmul,f
 10820  0F98  0B89               	decfsz	9,f
 10821  0F99  2F95               	goto	u2445
 10822  0F9A  0826               	movf	??___ftmul,w
 10823  0F9B  00A9               	movwf	??___ftmul+3
 10824  0F9C  0829               	movf	??___ftmul+3,w
 10825  0F9D  06AF               	xorwf	___ftmul@sign,f
 10826  0F9E  3080               	movlw	128
 10827  0F9F  00A6               	movwf	??___ftmul
 10828  0FA0  0826               	movf	??___ftmul,w
 10829  0FA1  05AF               	andwf	___ftmul@sign,f
 10830  0FA2  17A1               	bsf	___ftmul@f1+1,7
 10831  0FA3  17A4               	bsf	___ftmul@f2+1,7
 10832  0FA4  30FF               	movlw	255
 10833  0FA5  05A3               	andwf	___ftmul@f2,f
 10834  0FA6  30FF               	movlw	255
 10835  0FA7  05A4               	andwf	___ftmul@f2+1,f
 10836  0FA8  3000               	movlw	0
 10837  0FA9  05A5               	andwf	___ftmul@f2+2,f
 10838  0FAA  3000               	movlw	0
 10839  0FAB  00AB               	movwf	___ftmul@f3_as_product
 10840  0FAC  3000               	movlw	0
 10841  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
 10842  0FAE  3000               	movlw	0
 10843  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
 10844  0FB0  3007               	movlw	7
 10845  0FB1  00A6               	movwf	??___ftmul
 10846  0FB2  0826               	movf	??___ftmul,w
 10847  0FB3  00AE               	movwf	___ftmul@cntr
 10848  0FB4                     l2366:	
 10849  0FB4  1C20               	btfss	___ftmul@f1,0
 10850  0FB5  2FBC               	goto	l2370
 10851  0FB6  0823               	movf	___ftmul@f2,w
 10852  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
 10853  0FB8  0824               	movf	___ftmul@f2+1,w
 10854  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10855  0FBA  0825               	movf	___ftmul@f2+2,w
 10856  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10857  0FBC                     l2370:	
 10858  0FBC  3001               	movlw	1
 10859  0FBD                     u2465:	
 10860  0FBD  36A2               	lsrf	___ftmul@f1+2,f
 10861  0FBE  0CA1               	rrf	___ftmul@f1+1,f
 10862  0FBF  0CA0               	rrf	___ftmul@f1,f
 10863  0FC0  0B89               	decfsz	9,f
 10864  0FC1  2FBD               	goto	u2465
 10865  0FC2  3001               	movlw	1
 10866  0FC3                     u2475:	
 10867  0FC3  35A3               	lslf	___ftmul@f2,f
 10868  0FC4  0DA4               	rlf	___ftmul@f2+1,f
 10869  0FC5  0DA5               	rlf	___ftmul@f2+2,f
 10870  0FC6  0B89               	decfsz	9,f
 10871  0FC7  2FC3               	goto	u2475
 10872  0FC8  3001               	movlw	1
 10873  0FC9  02AE               	subwf	___ftmul@cntr,f
 10874  0FCA  1D03               	btfss	3,2
 10875  0FCB  2FB4               	goto	l2366
 10876  0FCC  3009               	movlw	9
 10877  0FCD  00A6               	movwf	??___ftmul
 10878  0FCE  0826               	movf	??___ftmul,w
 10879  0FCF  00AE               	movwf	___ftmul@cntr
 10880  0FD0                     l2378:	
 10881  0FD0  1C20               	btfss	___ftmul@f1,0
 10882  0FD1  2FD8               	goto	l2382
 10883  0FD2  0823               	movf	___ftmul@f2,w
 10884  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
 10885  0FD4  0824               	movf	___ftmul@f2+1,w
 10886  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10887  0FD6  0825               	movf	___ftmul@f2+2,w
 10888  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10889  0FD8                     l2382:	
 10890  0FD8  3001               	movlw	1
 10891  0FD9                     u2505:	
 10892  0FD9  36A2               	lsrf	___ftmul@f1+2,f
 10893  0FDA  0CA1               	rrf	___ftmul@f1+1,f
 10894  0FDB  0CA0               	rrf	___ftmul@f1,f
 10895  0FDC  0B89               	decfsz	9,f
 10896  0FDD  2FD9               	goto	u2505
 10897  0FDE  3001               	movlw	1
 10898  0FDF                     u2515:	
 10899  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
 10900  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
 10901  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
 10902  0FE2  0B89               	decfsz	9,f
 10903  0FE3  2FDF               	goto	u2515
 10904  0FE4  3001               	movlw	1
 10905  0FE5  02AE               	subwf	___ftmul@cntr,f
 10906  0FE6  1D03               	btfss	3,2
 10907  0FE7  2FD0               	goto	l2378
 10908  0FE8  082B               	movf	___ftmul@f3_as_product,w
 10909  0FE9  00F0               	movwf	___ftpack@arg
 10910  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
 10911  0FEB  00F1               	movwf	___ftpack@arg+1
 10912  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
 10913  0FED  00F2               	movwf	___ftpack@arg+2
 10914  0FEE  082A               	movf	___ftmul@exp,w
 10915  0FEF  00A6               	movwf	??___ftmul
 10916  0FF0  0826               	movf	??___ftmul,w
 10917  0FF1  00F3               	movwf	___ftpack@exp
 10918  0FF2  082F               	movf	___ftmul@sign,w
 10919  0FF3  00A7               	movwf	??___ftmul+1
 10920  0FF4  0827               	movf	??___ftmul+1,w
 10921  0FF5  00F4               	movwf	___ftpack@sign
 10922  0FF6  318C  241B         	fcall	___ftpack
 10923  0FF8  0870               	movf	?___ftpack,w
 10924  0FF9  0020               	movlb	0	; select bank0
 10925  0FFA  00A0               	movwf	?___ftmul
 10926  0FFB  0871               	movf	?___ftpack+1,w
 10927  0FFC  00A1               	movwf	?___ftmul+1
 10928  0FFD  0872               	movf	?___ftpack+2,w
 10929  0FFE  00A2               	movwf	?___ftmul+2
 10930  0FFF  0008               	return
 10931  1000                     __end_of___ftmul:	
 10932                           
 10933                           	psect	text37
 10934  0AAA                     __ptext37:	
 10935 ;; *************** function ___ftge *****************
 10936 ;; Defined at:
 10937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  ff1             3   29[BANK0 ] float 
 10940 ;;  ff2             3   32[BANK0 ] float 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;		None               void
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        9 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; This function calls:
 10959 ;;		Nothing
 10960 ;; This function is called by:
 10961 ;;		_main
 10962 ;;		_PID_Calculate
 10963 ;;		_log
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           
 10968                           ;psect for function ___ftge
 10969  0AAA                     ___ftge:	
 10970                           
 10971                           ;incstack = 0
 10972                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10973  0AAA  0020               	movlb	0	; select bank0
 10974  0AAB  1FBF               	btfss	___ftge@ff1+2,7
 10975  0AAC  2AC1               	goto	l2630
 10976  0AAD  093D               	comf	___ftge@ff1,w
 10977  0AAE  00C3               	movwf	??___ftge
 10978  0AAF  093E               	comf	___ftge@ff1+1,w
 10979  0AB0  00C4               	movwf	??___ftge+1
 10980  0AB1  093F               	comf	___ftge@ff1+2,w
 10981  0AB2  00C5               	movwf	??___ftge+2
 10982  0AB3  0AC3               	incf	??___ftge,f
 10983  0AB4  1903               	skipnz
 10984  0AB5  0AC4               	incf	??___ftge+1,f
 10985  0AB6  1903               	skipnz
 10986  0AB7  0AC5               	incf	??___ftge+2,f
 10987  0AB8  3000               	movlw	0
 10988  0AB9  0743               	addwf	??___ftge,w
 10989  0ABA  00BD               	movwf	___ftge@ff1
 10990  0ABB  3000               	movlw	0
 10991  0ABC  3D44               	addwfc	??___ftge+1,w
 10992  0ABD  00BE               	movwf	___ftge@ff1+1
 10993  0ABE  3080               	movlw	128
 10994  0ABF  3D45               	addwfc	??___ftge+2,w
 10995  0AC0  00BF               	movwf	___ftge@ff1+2
 10996  0AC1                     l2630:	
 10997  0AC1  1FC2               	btfss	___ftge@ff2+2,7
 10998  0AC2  2AD7               	goto	l2634
 10999  0AC3  0940               	comf	___ftge@ff2,w
 11000  0AC4  00C3               	movwf	??___ftge
 11001  0AC5  0941               	comf	___ftge@ff2+1,w
 11002  0AC6  00C4               	movwf	??___ftge+1
 11003  0AC7  0942               	comf	___ftge@ff2+2,w
 11004  0AC8  00C5               	movwf	??___ftge+2
 11005  0AC9  0AC3               	incf	??___ftge,f
 11006  0ACA  1903               	skipnz
 11007  0ACB  0AC4               	incf	??___ftge+1,f
 11008  0ACC  1903               	skipnz
 11009  0ACD  0AC5               	incf	??___ftge+2,f
 11010  0ACE  3000               	movlw	0
 11011  0ACF  0743               	addwf	??___ftge,w
 11012  0AD0  00C0               	movwf	___ftge@ff2
 11013  0AD1  3000               	movlw	0
 11014  0AD2  3D44               	addwfc	??___ftge+1,w
 11015  0AD3  00C1               	movwf	___ftge@ff2+1
 11016  0AD4  3080               	movlw	128
 11017  0AD5  3D45               	addwfc	??___ftge+2,w
 11018  0AD6  00C2               	movwf	___ftge@ff2+2
 11019  0AD7                     l2634:	
 11020  0AD7  3080               	movlw	128
 11021  0AD8  06BF               	xorwf	___ftge@ff1+2,f
 11022  0AD9  3080               	movlw	128
 11023  0ADA  06C2               	xorwf	___ftge@ff2+2,f
 11024  0ADB  0842               	movf	___ftge@ff2+2,w
 11025  0ADC  023F               	subwf	___ftge@ff1+2,w
 11026  0ADD  1D03               	skipz
 11027  0ADE  0008               	return
 11028  0ADF  0841               	movf	___ftge@ff2+1,w
 11029  0AE0  023E               	subwf	___ftge@ff1+1,w
 11030  0AE1  1D03               	skipz
 11031  0AE2  0008               	return
 11032  0AE3  0840               	movf	___ftge@ff2,w
 11033  0AE4  023D               	subwf	___ftge@ff1,w
 11034  0AE5  0008               	return
 11035  0AE6                     __end_of___ftge:	
 11036                           
 11037                           	psect	text38
 11038  020F                     __ptext38:	
 11039 ;; *************** function ___ftadd *****************
 11040 ;; Defined at:
 11041 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  f1              3   16[BANK0 ] float 
 11044 ;;  f2              3   19[BANK0 ] float 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  exp1            1   28[BANK0 ] unsigned char 
 11047 ;;  exp2            1   27[BANK0 ] unsigned char 
 11048 ;;  sign            1   26[BANK0 ] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  3   16[BANK0 ] float 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:       13 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    1
 11065 ;; This function calls:
 11066 ;;		___ftpack
 11067 ;; This function is called by:
 11068 ;;		_main
 11069 ;;		_PID_Calculate
 11070 ;;		___ftsub
 11071 ;;		_log
 11072 ;;		_eval_poly
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           
 11077                           ;psect for function ___ftadd
 11078  020F                     ___ftadd:	
 11079                           
 11080                           ;incstack = 0
 11081                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11082  020F  0020               	movlb	0	; select bank0
 11083  0210  0830               	movf	___ftadd@f1,w
 11084  0211  00B6               	movwf	??___ftadd
 11085  0212  0831               	movf	___ftadd@f1+1,w
 11086  0213  00B7               	movwf	??___ftadd+1
 11087  0214  0832               	movf	___ftadd@f1+2,w
 11088  0215  00B8               	movwf	??___ftadd+2
 11089  0216  1003               	clrc
 11090  0217  0D37               	rlf	??___ftadd+1,w
 11091  0218  0D38               	rlf	??___ftadd+2,w
 11092  0219  00B9               	movwf	??___ftadd+3
 11093  021A  0839               	movf	??___ftadd+3,w
 11094  021B  00BC               	movwf	___ftadd@exp1
 11095  021C  0833               	movf	___ftadd@f2,w
 11096  021D  00B6               	movwf	??___ftadd
 11097  021E  0834               	movf	___ftadd@f2+1,w
 11098  021F  00B7               	movwf	??___ftadd+1
 11099  0220  0835               	movf	___ftadd@f2+2,w
 11100  0221  00B8               	movwf	??___ftadd+2
 11101  0222  1003               	clrc
 11102  0223  0D37               	rlf	??___ftadd+1,w
 11103  0224  0D38               	rlf	??___ftadd+2,w
 11104  0225  00B9               	movwf	??___ftadd+3
 11105  0226  0839               	movf	??___ftadd+3,w
 11106  0227  00BB               	movwf	___ftadd@exp2
 11107  0228  083C               	movf	___ftadd@exp1,w
 11108  0229  1903               	btfsc	3,2
 11109  022A  2A37               	goto	l2278
 11110  022B  083B               	movf	___ftadd@exp2,w
 11111  022C  023C               	subwf	___ftadd@exp1,w
 11112  022D  1803               	skipnc
 11113  022E  2A3E               	goto	l2282
 11114  022F  033C               	decf	___ftadd@exp1,w
 11115  0230  3AFF               	xorlw	255
 11116  0231  073B               	addwf	___ftadd@exp2,w
 11117  0232  00B6               	movwf	??___ftadd
 11118  0233  3019               	movlw	25
 11119  0234  0236               	subwf	??___ftadd,w
 11120  0235  1C03               	skipc
 11121  0236  2A3E               	goto	l2282
 11122  0237                     l2278:	
 11123  0237  0833               	movf	___ftadd@f2,w
 11124  0238  00B0               	movwf	?___ftadd
 11125  0239  0834               	movf	___ftadd@f2+1,w
 11126  023A  00B1               	movwf	?___ftadd+1
 11127  023B  0835               	movf	___ftadd@f2+2,w
 11128  023C  00B2               	movwf	?___ftadd+2
 11129  023D  0008               	return
 11130  023E                     l2282:	
 11131  023E  083B               	movf	___ftadd@exp2,w
 11132  023F  1903               	btfsc	3,2
 11133  0240  0008               	return
 11134  0241  083C               	movf	___ftadd@exp1,w
 11135  0242  023B               	subwf	___ftadd@exp2,w
 11136  0243  1803               	skipnc
 11137  0244  2A4D               	goto	l2288
 11138  0245  033B               	decf	___ftadd@exp2,w
 11139  0246  3AFF               	xorlw	255
 11140  0247  073C               	addwf	___ftadd@exp1,w
 11141  0248  00B6               	movwf	??___ftadd
 11142  0249  3019               	movlw	25
 11143  024A  0236               	subwf	??___ftadd,w
 11144  024B  1803               	btfsc	3,0
 11145  024C  0008               	return
 11146  024D                     l2288:	
 11147  024D  3006               	movlw	6
 11148  024E  00B6               	movwf	??___ftadd
 11149  024F  0836               	movf	??___ftadd,w
 11150  0250  00BA               	movwf	___ftadd@sign
 11151  0251  1BB2               	btfsc	___ftadd@f1+2,7
 11152  0252  17BA               	bsf	___ftadd@sign,7
 11153  0253  1BB5               	btfsc	___ftadd@f2+2,7
 11154  0254  173A               	bsf	___ftadd@sign,6
 11155  0255  17B1               	bsf	___ftadd@f1+1,7
 11156  0256  30FF               	movlw	255
 11157  0257  05B0               	andwf	___ftadd@f1,f
 11158  0258  30FF               	movlw	255
 11159  0259  05B1               	andwf	___ftadd@f1+1,f
 11160  025A  3000               	movlw	0
 11161  025B  05B2               	andwf	___ftadd@f1+2,f
 11162  025C  17B4               	bsf	___ftadd@f2+1,7
 11163  025D  30FF               	movlw	255
 11164  025E  05B3               	andwf	___ftadd@f2,f
 11165  025F  30FF               	movlw	255
 11166  0260  05B4               	andwf	___ftadd@f2+1,f
 11167  0261  3000               	movlw	0
 11168  0262  05B5               	andwf	___ftadd@f2+2,f
 11169  0263  083B               	movf	___ftadd@exp2,w
 11170  0264  023C               	subwf	___ftadd@exp1,w
 11171  0265  1803               	skipnc
 11172  0266  2A89               	goto	l2310
 11173  0267                     l2300:	
 11174  0267  3001               	movlw	1
 11175  0268                     u2275:	
 11176  0268  35B3               	lslf	___ftadd@f2,f
 11177  0269  0DB4               	rlf	___ftadd@f2+1,f
 11178  026A  0DB5               	rlf	___ftadd@f2+2,f
 11179  026B  0B89               	decfsz	9,f
 11180  026C  2A68               	goto	u2275
 11181  026D  3001               	movlw	1
 11182  026E  02BB               	subwf	___ftadd@exp2,f
 11183  026F  083B               	movf	___ftadd@exp2,w
 11184  0270  063C               	xorwf	___ftadd@exp1,w
 11185  0271  1903               	skipnz
 11186  0272  2A84               	goto	l2308
 11187  0273  3001               	movlw	1
 11188  0274  02BA               	subwf	___ftadd@sign,f
 11189  0275  083A               	movf	___ftadd@sign,w
 11190  0276  3907               	andlw	7
 11191  0277  1903               	btfsc	3,2
 11192  0278  2A84               	goto	l2308
 11193  0279  2A67               	goto	l2300
 11194  027A                     l2306:	
 11195  027A  3001               	movlw	1
 11196  027B                     u2305:	
 11197  027B  36B2               	lsrf	___ftadd@f1+2,f
 11198  027C  0CB1               	rrf	___ftadd@f1+1,f
 11199  027D  0CB0               	rrf	___ftadd@f1,f
 11200  027E  0B89               	decfsz	9,f
 11201  027F  2A7B               	goto	u2305
 11202  0280  3001               	movlw	1
 11203  0281  00B6               	movwf	??___ftadd
 11204  0282  0836               	movf	??___ftadd,w
 11205  0283  07BC               	addwf	___ftadd@exp1,f
 11206  0284                     l2308:	
 11207  0284  083C               	movf	___ftadd@exp1,w
 11208  0285  063B               	xorwf	___ftadd@exp2,w
 11209  0286  1903               	btfsc	3,2
 11210  0287  2AAE               	goto	l670
 11211  0288  2A7A               	goto	l2306
 11212  0289                     l2310:	
 11213  0289  083C               	movf	___ftadd@exp1,w
 11214  028A  023B               	subwf	___ftadd@exp2,w
 11215  028B  1803               	skipnc
 11216  028C  2AAE               	goto	l670
 11217  028D                     l2312:	
 11218  028D  3001               	movlw	1
 11219  028E                     u2335:	
 11220  028E  35B0               	lslf	___ftadd@f1,f
 11221  028F  0DB1               	rlf	___ftadd@f1+1,f
 11222  0290  0DB2               	rlf	___ftadd@f1+2,f
 11223  0291  0B89               	decfsz	9,f
 11224  0292  2A8E               	goto	u2335
 11225  0293  3001               	movlw	1
 11226  0294  02BC               	subwf	___ftadd@exp1,f
 11227  0295  083B               	movf	___ftadd@exp2,w
 11228  0296  063C               	xorwf	___ftadd@exp1,w
 11229  0297  1903               	skipnz
 11230  0298  2AAA               	goto	l2320
 11231  0299  3001               	movlw	1
 11232  029A  02BA               	subwf	___ftadd@sign,f
 11233  029B  083A               	movf	___ftadd@sign,w
 11234  029C  3907               	andlw	7
 11235  029D  1903               	btfsc	3,2
 11236  029E  2AAA               	goto	l2320
 11237  029F  2A8D               	goto	l2312
 11238  02A0                     l2318:	
 11239  02A0  3001               	movlw	1
 11240  02A1                     u2365:	
 11241  02A1  36B5               	lsrf	___ftadd@f2+2,f
 11242  02A2  0CB4               	rrf	___ftadd@f2+1,f
 11243  02A3  0CB3               	rrf	___ftadd@f2,f
 11244  02A4  0B89               	decfsz	9,f
 11245  02A5  2AA1               	goto	u2365
 11246  02A6  3001               	movlw	1
 11247  02A7  00B6               	movwf	??___ftadd
 11248  02A8  0836               	movf	??___ftadd,w
 11249  02A9  07BB               	addwf	___ftadd@exp2,f
 11250  02AA                     l2320:	
 11251  02AA  083C               	movf	___ftadd@exp1,w
 11252  02AB  063B               	xorwf	___ftadd@exp2,w
 11253  02AC  1D03               	skipz
 11254  02AD  2AA0               	goto	l2318
 11255  02AE                     l670:	
 11256  02AE  1FBA               	btfss	___ftadd@sign,7
 11257  02AF  2AC0               	goto	l2324
 11258  02B0  30FF               	movlw	255
 11259  02B1  06B0               	xorwf	___ftadd@f1,f
 11260  02B2  30FF               	movlw	255
 11261  02B3  06B1               	xorwf	___ftadd@f1+1,f
 11262  02B4  30FF               	movlw	255
 11263  02B5  06B2               	xorwf	___ftadd@f1+2,f
 11264  02B6  3001               	movlw	1
 11265  02B7  07B0               	addwf	___ftadd@f1,f
 11266  02B8  3000               	movlw	0
 11267  02B9  1803               	skipnc
 11268  02BA  3001               	movlw	1
 11269  02BB  07B1               	addwf	___ftadd@f1+1,f
 11270  02BC  3000               	movlw	0
 11271  02BD  1803               	skipnc
 11272  02BE  3001               	movlw	1
 11273  02BF  07B2               	addwf	___ftadd@f1+2,f
 11274  02C0                     l2324:	
 11275  02C0  1F3A               	btfss	___ftadd@sign,6
 11276  02C1  2AD2               	goto	l2328
 11277  02C2  30FF               	movlw	255
 11278  02C3  06B3               	xorwf	___ftadd@f2,f
 11279  02C4  30FF               	movlw	255
 11280  02C5  06B4               	xorwf	___ftadd@f2+1,f
 11281  02C6  30FF               	movlw	255
 11282  02C7  06B5               	xorwf	___ftadd@f2+2,f
 11283  02C8  3001               	movlw	1
 11284  02C9  07B3               	addwf	___ftadd@f2,f
 11285  02CA  3000               	movlw	0
 11286  02CB  1803               	skipnc
 11287  02CC  3001               	movlw	1
 11288  02CD  07B4               	addwf	___ftadd@f2+1,f
 11289  02CE  3000               	movlw	0
 11290  02CF  1803               	skipnc
 11291  02D0  3001               	movlw	1
 11292  02D1  07B5               	addwf	___ftadd@f2+2,f
 11293  02D2                     l2328:	
 11294  02D2  01BA               	clrf	___ftadd@sign
 11295  02D3  0830               	movf	___ftadd@f1,w
 11296  02D4  07B3               	addwf	___ftadd@f2,f
 11297  02D5  0831               	movf	___ftadd@f1+1,w
 11298  02D6  3DB4               	addwfc	___ftadd@f2+1,f
 11299  02D7  0832               	movf	___ftadd@f1+2,w
 11300  02D8  3DB5               	addwfc	___ftadd@f2+2,f
 11301  02D9  1FB5               	btfss	___ftadd@f2+2,7
 11302  02DA  2AED               	goto	l2338
 11303  02DB  30FF               	movlw	255
 11304  02DC  06B3               	xorwf	___ftadd@f2,f
 11305  02DD  30FF               	movlw	255
 11306  02DE  06B4               	xorwf	___ftadd@f2+1,f
 11307  02DF  30FF               	movlw	255
 11308  02E0  06B5               	xorwf	___ftadd@f2+2,f
 11309  02E1  3001               	movlw	1
 11310  02E2  07B3               	addwf	___ftadd@f2,f
 11311  02E3  3000               	movlw	0
 11312  02E4  1803               	skipnc
 11313  02E5  3001               	movlw	1
 11314  02E6  07B4               	addwf	___ftadd@f2+1,f
 11315  02E7  3000               	movlw	0
 11316  02E8  1803               	skipnc
 11317  02E9  3001               	movlw	1
 11318  02EA  07B5               	addwf	___ftadd@f2+2,f
 11319  02EB  01BA               	clrf	___ftadd@sign
 11320  02EC  0ABA               	incf	___ftadd@sign,f
 11321  02ED                     l2338:	
 11322  02ED  0833               	movf	___ftadd@f2,w
 11323  02EE  00F0               	movwf	___ftpack@arg
 11324  02EF  0834               	movf	___ftadd@f2+1,w
 11325  02F0  00F1               	movwf	___ftpack@arg+1
 11326  02F1  0835               	movf	___ftadd@f2+2,w
 11327  02F2  00F2               	movwf	___ftpack@arg+2
 11328  02F3  083C               	movf	___ftadd@exp1,w
 11329  02F4  00B6               	movwf	??___ftadd
 11330  02F5  0836               	movf	??___ftadd,w
 11331  02F6  00F3               	movwf	___ftpack@exp
 11332  02F7  083A               	movf	___ftadd@sign,w
 11333  02F8  00B7               	movwf	??___ftadd+1
 11334  02F9  0837               	movf	??___ftadd+1,w
 11335  02FA  00F4               	movwf	___ftpack@sign
 11336  02FB  318C  241B         	fcall	___ftpack
 11337  02FD  0870               	movf	?___ftpack,w
 11338  02FE  0020               	movlb	0	; select bank0
 11339  02FF  00B0               	movwf	?___ftadd
 11340  0300  0871               	movf	?___ftpack+1,w
 11341  0301  00B1               	movwf	?___ftadd+1
 11342  0302  0872               	movf	?___ftpack+2,w
 11343  0303  00B2               	movwf	?___ftadd+2
 11344  0304  0008               	return
 11345  0305                     __end_of___ftadd:	
 11346                           
 11347                           	psect	text39
 11348  0938                     __ptext39:	
 11349 ;; *************** function ___awtoft *****************
 11350 ;; Defined at:
 11351 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  c               2    8[COMMON] int 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  sign            1   13[COMMON] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  3    8[COMMON] float 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0, pclath, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:        6 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    1
 11372 ;; This function calls:
 11373 ;;		___ftpack
 11374 ;; This function is called by:
 11375 ;;		_PID_Calculate
 11376 ;;		_log
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           
 11381                           ;psect for function ___awtoft
 11382  0938                     ___awtoft:	
 11383                           
 11384                           ;incstack = 0
 11385                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11386  0938  01FD               	clrf	___awtoft@sign
 11387  0939  1FF9               	btfss	___awtoft@c+1,7
 11388  093A  2942               	goto	l2622
 11389  093B  09F8               	comf	___awtoft@c,f
 11390  093C  09F9               	comf	___awtoft@c+1,f
 11391  093D  0AF8               	incf	___awtoft@c,f
 11392  093E  1903               	skipnz
 11393  093F  0AF9               	incf	___awtoft@c+1,f
 11394  0940  01FD               	clrf	___awtoft@sign
 11395  0941  0AFD               	incf	___awtoft@sign,f
 11396  0942                     l2622:	
 11397  0942  0878               	movf	___awtoft@c,w
 11398  0943  00F0               	movwf	___ftpack@arg
 11399  0944  0879               	movf	___awtoft@c+1,w
 11400  0945  00F1               	movwf	___ftpack@arg+1
 11401  0946  01F2               	clrf	___ftpack@arg+2
 11402  0947  308E               	movlw	142
 11403  0948  00FB               	movwf	??___awtoft
 11404  0949  087B               	movf	??___awtoft,w
 11405  094A  00F3               	movwf	___ftpack@exp
 11406  094B  087D               	movf	___awtoft@sign,w
 11407  094C  00FC               	movwf	??___awtoft+1
 11408  094D  087C               	movf	??___awtoft+1,w
 11409  094E  00F4               	movwf	___ftpack@sign
 11410  094F  318C  241B         	fcall	___ftpack
 11411  0951  0870               	movf	?___ftpack,w
 11412  0952  00F8               	movwf	?___awtoft
 11413  0953  0871               	movf	?___ftpack+1,w
 11414  0954  00F9               	movwf	?___awtoft+1
 11415  0955  0872               	movf	?___ftpack+2,w
 11416  0956  00FA               	movwf	?___awtoft+2
 11417  0957  0008               	return
 11418  0958                     __end_of___awtoft:	
 11419                           
 11420                           	psect	text40
 11421  0C1B                     __ptext40:	
 11422 ;; *************** function ___ftpack *****************
 11423 ;; Defined at:
 11424 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  arg             3    0[COMMON] unsigned um
 11427 ;;  exp             1    3[COMMON] unsigned char 
 11428 ;;  sign            1    4[COMMON] unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  3    0[COMMON] float 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        8 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		___awtoft
 11450 ;;		___ftadd
 11451 ;;		___ftdiv
 11452 ;;		___ftmul
 11453 ;;		___lbtoft
 11454 ;;		___lwtoft
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function ___ftpack
 11460  0C1B                     ___ftpack:	
 11461                           
 11462                           ;incstack = 0
 11463                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11464  0C1B  0873               	movf	___ftpack@exp,w
 11465  0C1C  1903               	btfsc	3,2
 11466  0C1D  2C23               	goto	l2068
 11467  0C1E  0872               	movf	___ftpack@arg+2,w
 11468  0C1F  0471               	iorwf	___ftpack@arg+1,w
 11469  0C20  0470               	iorwf	___ftpack@arg,w
 11470  0C21  1D03               	skipz
 11471  0C22  2C34               	goto	l2074
 11472  0C23                     l2068:	
 11473  0C23  3000               	movlw	0
 11474  0C24  00F0               	movwf	?___ftpack
 11475  0C25  3000               	movlw	0
 11476  0C26  00F1               	movwf	?___ftpack+1
 11477  0C27  3000               	movlw	0
 11478  0C28  00F2               	movwf	?___ftpack+2
 11479  0C29  0008               	return
 11480  0C2A                     l2072:	
 11481  0C2A  3001               	movlw	1
 11482  0C2B  00F5               	movwf	??___ftpack
 11483  0C2C  0875               	movf	??___ftpack,w
 11484  0C2D  07F3               	addwf	___ftpack@exp,f
 11485  0C2E  3001               	movlw	1
 11486  0C2F                     u1715:	
 11487  0C2F  36F2               	lsrf	___ftpack@arg+2,f
 11488  0C30  0CF1               	rrf	___ftpack@arg+1,f
 11489  0C31  0CF0               	rrf	___ftpack@arg,f
 11490  0C32  0B89               	decfsz	9,f
 11491  0C33  2C2F               	goto	u1715
 11492  0C34                     l2074:	
 11493  0C34  30FE               	movlw	254
 11494  0C35  0572               	andwf	___ftpack@arg+2,w
 11495  0C36  1903               	btfsc	3,2
 11496  0C37  2C4D               	goto	l639
 11497  0C38  2C2A               	goto	l2072
 11498  0C39                     l2076:	
 11499  0C39  3001               	movlw	1
 11500  0C3A  00F5               	movwf	??___ftpack
 11501  0C3B  0875               	movf	??___ftpack,w
 11502  0C3C  07F3               	addwf	___ftpack@exp,f
 11503  0C3D  3001               	movlw	1
 11504  0C3E  07F0               	addwf	___ftpack@arg,f
 11505  0C3F  3000               	movlw	0
 11506  0C40  1803               	skipnc
 11507  0C41  3001               	movlw	1
 11508  0C42  07F1               	addwf	___ftpack@arg+1,f
 11509  0C43  3000               	movlw	0
 11510  0C44  1803               	skipnc
 11511  0C45  3001               	movlw	1
 11512  0C46  07F2               	addwf	___ftpack@arg+2,f
 11513  0C47  3001               	movlw	1
 11514  0C48                     u1735:	
 11515  0C48  36F2               	lsrf	___ftpack@arg+2,f
 11516  0C49  0CF1               	rrf	___ftpack@arg+1,f
 11517  0C4A  0CF0               	rrf	___ftpack@arg,f
 11518  0C4B  0B89               	decfsz	9,f
 11519  0C4C  2C48               	goto	u1735
 11520  0C4D                     l639:	
 11521  0C4D  30FF               	movlw	255
 11522  0C4E  0572               	andwf	___ftpack@arg+2,w
 11523  0C4F  1903               	btfsc	3,2
 11524  0C50  2C5A               	goto	l2084
 11525  0C51  2C39               	goto	l2076
 11526  0C52                     l2082:	
 11527  0C52  3001               	movlw	1
 11528  0C53  02F3               	subwf	___ftpack@exp,f
 11529  0C54  3001               	movlw	1
 11530  0C55                     u1755:	
 11531  0C55  35F0               	lslf	___ftpack@arg,f
 11532  0C56  0DF1               	rlf	___ftpack@arg+1,f
 11533  0C57  0DF2               	rlf	___ftpack@arg+2,f
 11534  0C58  0B89               	decfsz	9,f
 11535  0C59  2C55               	goto	u1755
 11536  0C5A                     l2084:	
 11537  0C5A  1BF1               	btfsc	___ftpack@arg+1,7
 11538  0C5B  2C60               	goto	l646
 11539  0C5C  3002               	movlw	2
 11540  0C5D  0273               	subwf	___ftpack@exp,w
 11541  0C5E  1803               	skipnc
 11542  0C5F  2C52               	goto	l2082
 11543  0C60                     l646:	
 11544  0C60  1873               	btfsc	___ftpack@exp,0
 11545  0C61  2C68               	goto	l647
 11546  0C62  30FF               	movlw	255
 11547  0C63  05F0               	andwf	___ftpack@arg,f
 11548  0C64  307F               	movlw	127
 11549  0C65  05F1               	andwf	___ftpack@arg+1,f
 11550  0C66  30FF               	movlw	255
 11551  0C67  05F2               	andwf	___ftpack@arg+2,f
 11552  0C68                     l647:	
 11553  0C68  1003               	clrc
 11554  0C69  0CF3               	rrf	___ftpack@exp,f
 11555  0C6A  0873               	movf	___ftpack@exp,w
 11556  0C6B  00F5               	movwf	??___ftpack
 11557  0C6C  01F6               	clrf	??___ftpack+1
 11558  0C6D  01F7               	clrf	??___ftpack+2
 11559  0C6E  3010               	movlw	16
 11560  0C6F                     u1795:	
 11561  0C6F  35F5               	lslf	??___ftpack,f
 11562  0C70  0DF6               	rlf	??___ftpack+1,f
 11563  0C71  0DF7               	rlf	??___ftpack+2,f
 11564  0C72  0B89               	decfsz	9,f
 11565  0C73  2C6F               	goto	u1795
 11566  0C74  0875               	movf	??___ftpack,w
 11567  0C75  04F0               	iorwf	___ftpack@arg,f
 11568  0C76  0876               	movf	??___ftpack+1,w
 11569  0C77  04F1               	iorwf	___ftpack@arg+1,f
 11570  0C78  0877               	movf	??___ftpack+2,w
 11571  0C79  04F2               	iorwf	___ftpack@arg+2,f
 11572  0C7A  0874               	movf	___ftpack@sign,w
 11573  0C7B  1903               	btfsc	3,2
 11574  0C7C  0008               	return
 11575  0C7D  17F2               	bsf	___ftpack@arg+2,7
 11576  0C7E  0008               	return
 11577  0C7F                     __end_of___ftpack:	
 11578                           
 11579                           	psect	text41
 11580  081E                     __ptext41:	
 11581 ;; *************** function _ADCC_GetSingleConversion *****************
 11582 ;; Defined at:
 11583 ;;		line 52 in file "adcc.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  channel         1    wreg     enum E14259
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;  channel         1    3[COMMON] enum E14259
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  2    0[COMMON] unsigned int 
 11590 ;; Registers used:
 11591 ;;		wreg
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;Total ram usage:        4 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_main
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function _ADCC_GetSingleConversion
 11612  081E                     _ADCC_GetSingleConversion:	
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11616                           ;ADCC_GetSingleConversion@channel stored from wreg
 11617  081E  00F3               	movwf	ADCC_GetSingleConversion@channel
 11618                           
 11619                           ;adcc.c: 55: ADPCH = channel;
 11620  081F  0873               	movf	ADCC_GetSingleConversion@channel,w
 11621  0820  0021               	movlb	1	; select bank1
 11622  0821  009E               	movwf	30	;volatile
 11623                           
 11624                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11625  0822  1793               	bsf	19,7	;volatile
 11626                           
 11627                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11628  0823  1313               	bcf	19,6	;volatile
 11629                           
 11630                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11631  0824  1413               	bsf	19,0	;volatile
 11632  0825                     l210:	
 11633                           ;adcc.c: 68: {
 11634                           
 11635                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11636                           
 11637  0825  1813               	btfsc	19,0	;volatile
 11638  0826  2825               	goto	l210
 11639                           
 11640                           ;adcc.c: 69: }
 11641                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11642  0827  080D               	movf	13,w	;volatile
 11643  0828  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11644  0829  080C               	movf	12,w	;volatile
 11645  082A  00F0               	movwf	?_ADCC_GetSingleConversion
 11646  082B  0008               	return
 11647  082C                     __end_of_ADCC_GetSingleConversion:	
 11648  007E                     btemp	set	126	;btemp
 11649  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     40      74
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   67756
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              2 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             61 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0     709
                                              7 COMMON     1     1      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0     220
                                              2 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       23    18      5   10734
                                             38 BANK0     23    18      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     244
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Oct 20 23:03:05 2017

                                _x 006D                        __CFG_CP$OFF 0000  
                               l30 088E                                 l32 0893  
                               l34 0898                                 l28 0888  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l210 0825  
                              l332 03BA                                l333 03E9  
                              l334 047F                                l533 0015  
                              l730 0DD9                                l389 0D4B  
                              l646 0C60                                l670 02AE  
                              l478 0907                                l647 0C68  
                              l639 0C4D                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0E9C  
                     ___awmod@sign 0076                    _TMR2_Initialize 084A  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 083B                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0AE6  
                     ___ftdiv@sign 002F                               l2030 0894  
                             l2022 088A                               l2110 0B7F  
                             l2120 0B87                               l2104 0B74  
                             l2026 088F                               l3002 0A31  
                             l2122 0B93                               l2300 0267  
                             l2132 0BAE                               l2220 0167  
                             l3100 0771                               l2310 0289  
                             l2230 016E                               l2206 08E7  
                             l2072 0C2A                               l2320 02AA  
                             l2312 028D                               l2400 0965  
                             l2136 0BB6                               l2128 0BA5  
                             l2160 0B3C                               l2152 0B36  
                             l2240 01AD                               l2232 019B  
                             l3024 04C4                               l2082 0C52  
                             l2074 0C34                               l2306 027A  
                             l2162 0B48                               l2170 0B5D  
                             l2250 01EE                               l2242 01BE  
                             l3114 07C0                               l3106 0780  
                             l2084 0C5A                               l2076 0C39  
                             l2068 0C23                               l2324 02C0  
                             l2308 0284                               l2260 0901  
                             l2148 0B2F                               l2236 019F  
                             l2318 02A0                               l2406 0976  
                             l2190 0B06                               l2174 0B65  
                             l2166 0B54                               l2254 01FB  
                             l2238 01A4                               l3070 06EA  
                             l3038 055D                               l2328 02D2  
                             l2248 01C2                               l2338 02ED  
                             l2282 023E                               l2370 0FBC  
                             l2354 0F79                               l2602 0D5A  
                             l2348 0F63                               l2612 0D6A  
                             l2604 0D5B                               l2622 0942  
                             l2278 0237                               l2630 0AC1  
                             l2382 0FD8                               l2366 0FB4  
                             l2288 024D                               l2634 0AD7  
                             l2378 0FD0                               l2730 0EBB  
                             l2910 0E61                               l2662 0A81  
                             l2558 0CE7                               l2814 00EA  
                             l2806 008F                               l2680 0C14  
                             l2736 0ECE                               l2592 0D46  
                             l2808 00DF                               l2930 0922  
                             l2834 012B                               l2772 04A7  
                             l2940 0D85                               l2862 0036  
                             l2854 0026                               l2918 0E7A  
                             l2880 007D                               l2872 0064  
                             l2864 0044                               l2960 0DC3  
                             l2890 0E0A                               l2786 00A0  
                             l2876 006F                               l2972 0DEA  
                             l2966 0DD0                               l2958 0DB5  
                             l2990 0A0A                               l2896 0E20  
                             l2968 0DDC                               l2992 0A16  
                             ?_log 0047                               l2998 0A28  
                             STR_1 1025                               STR_2 101B  
                             STR_3 101B                               STR_4 101B  
                             u2015 0AF2                               u2050 0151  
                             u2035 0B11                               u2115 01DC  
                             u3005 0E71                               _LATA 0016  
                             _LATB 0017                               u3015 0E7B  
                             _LATC 0018                               u2305 027B  
                             u3115 0DD1                               u2155 0908  
                             u2165 090D                               u2335 028E  
                             u3055 0D8C                               u2505 0FD9  
                             _T2PR 028D                               u1715 0C2F  
                             u2275 0268                               u2515 0FDF  
                             u2435 0F85                               u3155 0A0D  
                             u3307 0D3A                               u2365 02A1  
                             u2445 0F95                               u3317 0A51  
                             u3085 0DB6                               u2550 0A00  
                             u1735 0C48                               u3407 0CC0  
                             u3327 0A5C                               u3175 0A17  
                             u2465 0FBD                               u3417 0CCB  
                             u3337 0A67                               u3185 0A21  
                      main@counter 00BA                               u1755 0C55  
                             u2475 0FC3                               u3427 0CD7  
                             u3347 0C87                               u3195 0A29  
                             u1685 09B6                               u3437 0CE3  
                             u3357 0C93                               u1845 0B8A  
                             u3277 00D6                               u2735 087B  
                             u3447 09C1                               u3367 0C9C  
                             u3287 0123                               u3457 09CC  
                             u3377 0CA3                               u2905 0045  
                             u1865 0B94                               u1945 0B3F  
                             u3297 013C                               u1795 0C6F  
                             u3467 0837                               u3387 0CAA  
                             u2915 0059                               u1875 0B9E  
                             u3397 0CB5                               u2925 0065  
                             u1885 0BA6                               u1965 0B4E  
                             u1975 0B55                               u2885 0039  
                             u2975 0E32                               u2985 0E42  
                             u2995 0E62                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B6                        main@seconds 00B8  
                             _main 04AF                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             start 0002                 ??_LCD_Write_String 0077  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 0146  
                     ___ftmul@sign 002F                       ___fttol@exp1 006A  
                     ___fttol@lval 0066                              ??_log 004A  
          __end_of_TMR0_Initialize 084A                   __end_of_LCD_Init 0CE6  
                 __end_of_LCD_Port 089A                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 17F4  
                  __end_of___aldiv 0086                              _ADACQ 009D  
                            _ADACT 0099                              _ADCAP 009B  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0BBB                              _ADPRE 009C  
                  __end_of___ftadd 0305                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0B6A                              _ADRPT 010D  
                  __end_of___ftdiv 0E9C                    __end_of___ftneg 17E4  
                  __end_of___ftmul 1000                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0938                    __end_of___fttol 0DF3  
                            _T2CON 028E                main@readTemperature 00BC  
                            _T2HLT 028F                    __end_of___lwdiv 0A36  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0811  
           __end_of_LCD_Set_Cursor 0B25                      ___awtoft@sign 007D  
                            _frexp 0A6F                              _errno 00DC  
                    ___ftpack@sign 0074                              main@R 00AE  
                   __CFG_BOREN$OFF 0000                              status 0003  
                            wtemp0 007E                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 09A6  
                  __initialization 07C7                        log@exponent 004B  
                     __end_of_main 07C7                   __end_of_Init_PID 09A6  
          __end_of_TMR2_Initialize 0859                             ??_main 00A0  
                    ___fttol@sign1 0065                  __end_of_LCD_Clear 17EC  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0072  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0958  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0C7F  
                 __end_of___lbtoft 08E5                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 086C  
                           _PID_Kd 00D3                             _PID_Ki 00D6  
                           _PID_Kp 00D9                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 09D0  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0AAA             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 08FF  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0061                          ??___lwdiv 007A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 081E  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 08B2  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00C5                    _InitCustomChars 0958  
                  LCD_Set_Cursor@w 0077                    LCD_Set_Cursor@x 0075  
                  LCD_Set_Cursor@y 0072                    LCD_Set_Cursor@z 0076  
                    _pidIntegrated 00D0                  _SYSTEM_Initialize 0A36  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0073                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005D  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK1 17D6                       __pidataBANK2 089A  
              ??_SYSTEM_Initialize 0077                      __end_of_frexp 0AAA  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
             __size_of_readButtons 0086                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0A6F                         __pbssBANK0 006B  
                       __pbssBANK1 00C8                 __size_of_eval_poly 0060  
                        ?_Init_PID 0070                         ??_LCD_Init 0072  
                       ??_LCD_Port 0070             __size_of_PID_Calculate 01AA  
              PID_Calculate@Result 0057                         __pmaintext 04AF  
                          ?___ftge 003D                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 08CB  
       __end_of_PWM6_LoadDutyValue 0882          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 097E  
                          _LCD_Cmd 082C                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                       ??_Init_PID 0070              PID_Calculate@setpoint 0046  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0004                            ___cgram 0120  
                  __size_of___ftge 003C                            ___awdiv 0B6A  
                          ___ftadd 020F                            ___awmod 0B25  
                          ___ftdiv 0DF3                            ___ftneg 17DC  
                  __size_of___wmul 001B                            ___ftmul 0F4C  
                          ___ftsub 091A                            ___fttol 0D6C  
                          ___lwdiv 0A02                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0C1B                   ??_LCD_Set_Cursor 0073  
                          __ptext1 0086                            __ptext2 0CE6  
                          __ptext3 08E5                            __ptext4 0146  
                          __ptext5 0B25                            __ptext6 0B6A  
                          __ptext7 0AE6                            __ptext8 0E9C  
                          __ptext9 0A6F                         ??___lwtoft 007B  
                    _PID_Calculate 0305       PID_Calculate@derivativeValue 0051  
            _OSCILLATOR_Initialize 17EC                          _T2CONbits 028E  
                     __size_of_log 00B0                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 006E                            _samples 238C  
                        _LCD_Clear 17E4                            _presets 00E4  
       __size_of_SYSTEM_Initialize 0039                            clrloop0 17F5  
             end_of_initialization 07FD                            init_ram 0805  
                          initloop 0806                     ??_tempSetpoint 0031  
        PID_Calculate@pidPrevError 0054                   ___aldiv@quotient 0022  
          PID_Calculate@errorValue 004B                  LCD_Write_Int@sign 007D  
              tempSetpoint@counter 0034                       __pstringtext 1000  
                 ?_ADCC_Initialize 0070   __end_of_ADCC_GetSingleConversion 082C  
            __CFG_WDTCPS$WDTCPS_31 0000                     ?_PID_Calculate 0046  
               _PID_Calculate$1064 004E                   ?_InitCustomChars 0070  
                       ?_LCD_Clear 0070                   __CFG_FEXTOSC$OFF 0000  
                LCD_Write_String@a 0075                  LCD_Write_String@i 0078  
                 ??_LCD_Write_Char 0071                        ___ftdiv@exp 002E  
                __size_of_LCD_Init 0067                         main@toggle 00BE  
                __size_of_LCD_Port 0018                         main@totals 00C1  
                      ___ftmul@exp 002A                     __end_of___ftge 0AE6  
                   __end_of___wmul 091A                   _LCD_Write_String 08E5  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07C7  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 0F4C  
                       frexp@value 0070           LCD_Write_Int@fieldLength 007B  
                __size_of_Init_PID 0028              __end_of_LCD_Write_Int 020F  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0043  
                         ??___wmul 0074                       _pidMaxOutput 00DE  
                      __pdataBANK1 00E4                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                     _pidMinOutput 006B                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 081E  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0071  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 0146                 _PWM6_LoadDutyValue 086C  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0072  
                     _pidPrevInput 00CD                ?_PWM6_LoadDutyValue 0070  
                        _main$1063 00B1                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 09D0                 PID_Calculate@error 005A  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 005D  
                         ?___lwdiv 0076                    main@displayTemp 00BF  
             ??_PWM6_LoadDutyValue 0072                          _downCount 006F  
                        _eval_poly 0BBB                __end_of_readButtons 0D6C  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0C7F  
                   ___wmul@product 0074                           _LCD_Port 0882  
                        clear_ram0 17F4                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 000F  
         __end_of_LCD_Write_String 08FF                           _Init_PID 097E  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0CE6  
                         ___awtoft 0938                           ___ftpack 0C1B  
                         ___lbtoft 08CB              __size_of_tempSetpoint 00C0  
                         ___lwtoft 0859                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00E0  
                  ___lwdiv@divisor 0076                        _oldSetpoint 00E3  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0BBB                           __ptext11 08FF  
                         __ptext20 084A                           __ptext12 0859  
                         __ptext21 083B                           __ptext13 0A02  
                         __ptext30 082C                           __ptext22 0811  
                         __ptext14 08CB                           __ptext31 0882  
                         __ptext23 09D0                           __ptext15 0D6C  
                         __ptext40 0C1B                           __ptext32 08B2  
                         __ptext24 17EC                           __ptext16 091A  
                         __ptext41 081E                           __ptext33 086C  
                         __ptext25 0C7F                           __ptext17 0DF3  
                         __ptext34 0305                           __ptext26 17E4  
                         __ptext18 0004                           __ptext35 17DC  
                         __ptext27 097E                           __ptext19 0A36  
                         __ptext36 0F4C                           __ptext28 0958  
                         __ptext37 0AAA                           __ptext29 09A6  
                         __ptext38 020F                           __ptext39 0938  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F14394 00C8                  ??_PWM6_Initialize 0070  
                    __size_of_main 0318               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 0086         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 00E9        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                 LCD_Set_Cursor@temp 0078  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 04AF  
                  _TMR0_Initialize 083B                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0A02                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00B4                        _toggleCount 00E2  
                ??_InitCustomChars 0075  
