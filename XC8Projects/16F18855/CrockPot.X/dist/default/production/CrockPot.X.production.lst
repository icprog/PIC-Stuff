

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Sep 10 17:16:19 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x620,48
    60                           	dabs	1,0x5BC,52
    61                           	dabs	1,0x238C,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  001C                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0198                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  020F                     	;# 
   172  020F                     	;# 
   173  0210                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021B                     	;# 
   191  021C                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  028C                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  028F                     	;# 
   203  0290                     	;# 
   204  0290                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0296                     	;# 
   214  0297                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029C                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  030C                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  030E                     	;# 
   228  030F                     	;# 
   229  0310                     	;# 
   230  0310                     	;# 
   231  0311                     	;# 
   232  0312                     	;# 
   233  0313                     	;# 
   234  0314                     	;# 
   235  0314                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  031B                     	;# 
   244  031C                     	;# 
   245  031C                     	;# 
   246  031D                     	;# 
   247  031E                     	;# 
   248  031F                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0390                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  040C                     	;# 
   256  040D                     	;# 
   257  040E                     	;# 
   258  040F                     	;# 
   259  0410                     	;# 
   260  0411                     	;# 
   261  0416                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041C                     	;# 
   272  041D                     	;# 
   273  041E                     	;# 
   274  041F                     	;# 
   275  048C                     	;# 
   276  048C                     	;# 
   277  048D                     	;# 
   278  048E                     	;# 
   279  048F                     	;# 
   280  048F                     	;# 
   281  0490                     	;# 
   282  0491                     	;# 
   283  0492                     	;# 
   284  0492                     	;# 
   285  0493                     	;# 
   286  0494                     	;# 
   287  0495                     	;# 
   288  0495                     	;# 
   289  0496                     	;# 
   290  0497                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  050C                     	;# 
   298  050C                     	;# 
   299  050D                     	;# 
   300  050E                     	;# 
   301  050F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0512                     	;# 
   307  0513                     	;# 
   308  0514                     	;# 
   309  0515                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  051B                     	;# 
   317  051C                     	;# 
   318  051D                     	;# 
   319  058C                     	;# 
   320  058C                     	;# 
   321  058D                     	;# 
   322  058E                     	;# 
   323  058F                     	;# 
   324  058F                     	;# 
   325  0590                     	;# 
   326  0591                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  060C                     	;# 
   330  060D                     	;# 
   331  060E                     	;# 
   332  060F                     	;# 
   333  0610                     	;# 
   334  0611                     	;# 
   335  0612                     	;# 
   336  0613                     	;# 
   337  0614                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0618                     	;# 
   341  0619                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  061D                     	;# 
   346  061E                     	;# 
   347  068C                     	;# 
   348  068D                     	;# 
   349  068E                     	;# 
   350  068F                     	;# 
   351  0690                     	;# 
   352  0691                     	;# 
   353  0692                     	;# 
   354  0693                     	;# 
   355  0694                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  070F                     	;# 
   360  0710                     	;# 
   361  0711                     	;# 
   362  0712                     	;# 
   363  0713                     	;# 
   364  0714                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  0796                     	;# 
   375  0797                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  079A                     	;# 
   379  079B                     	;# 
   380  080C                     	;# 
   381  080D                     	;# 
   382  080E                     	;# 
   383  080F                     	;# 
   384  0810                     	;# 
   385  0811                     	;# 
   386  0812                     	;# 
   387  0813                     	;# 
   388  0814                     	;# 
   389  081A                     	;# 
   390  081B                     	;# 
   391  081C                     	;# 
   392  081D                     	;# 
   393  081E                     	;# 
   394  081F                     	;# 
   395  088C                     	;# 
   396  088D                     	;# 
   397  088E                     	;# 
   398  088F                     	;# 
   399  0890                     	;# 
   400  0891                     	;# 
   401  0892                     	;# 
   402  0893                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0897                     	;# 
   406  0898                     	;# 
   407  0899                     	;# 
   408  089A                     	;# 
   409  089B                     	;# 
   410  090C                     	;# 
   411  090E                     	;# 
   412  090F                     	;# 
   413  091F                     	;# 
   414  091F                     	;# 
   415  098F                     	;# 
   416  098F                     	;# 
   417  0990                     	;# 
   418  0991                     	;# 
   419  0992                     	;# 
   420  0993                     	;# 
   421  0994                     	;# 
   422  0995                     	;# 
   423  0996                     	;# 
   424  0997                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E23                     	;# 
   446  0E24                     	;# 
   447  0E25                     	;# 
   448  0E26                     	;# 
   449  0E27                     	;# 
   450  0E28                     	;# 
   451  0E29                     	;# 
   452  0E2A                     	;# 
   453  0E2B                     	;# 
   454  0E2C                     	;# 
   455  0E2D                     	;# 
   456  0E2E                     	;# 
   457  0E2F                     	;# 
   458  0E30                     	;# 
   459  0E31                     	;# 
   460  0E32                     	;# 
   461  0E33                     	;# 
   462  0E34                     	;# 
   463  0E35                     	;# 
   464  0E36                     	;# 
   465  0E37                     	;# 
   466  0E8F                     	;# 
   467  0E90                     	;# 
   468  0E91                     	;# 
   469  0E92                     	;# 
   470  0E93                     	;# 
   471  0E94                     	;# 
   472  0E95                     	;# 
   473  0E96                     	;# 
   474  0E97                     	;# 
   475  0E9C                     	;# 
   476  0E9D                     	;# 
   477  0E9E                     	;# 
   478  0EA1                     	;# 
   479  0EA2                     	;# 
   480  0EA3                     	;# 
   481  0EA4                     	;# 
   482  0EA5                     	;# 
   483  0EA9                     	;# 
   484  0EAA                     	;# 
   485  0EAB                     	;# 
   486  0EAC                     	;# 
   487  0EB1                     	;# 
   488  0EB2                     	;# 
   489  0EB3                     	;# 
   490  0EB8                     	;# 
   491  0EB9                     	;# 
   492  0EBA                     	;# 
   493  0EBB                     	;# 
   494  0EBC                     	;# 
   495  0EBD                     	;# 
   496  0EBE                     	;# 
   497  0EC3                     	;# 
   498  0EC5                     	;# 
   499  0EC6                     	;# 
   500  0EC7                     	;# 
   501  0EC8                     	;# 
   502  0EC9                     	;# 
   503  0ECA                     	;# 
   504  0ECB                     	;# 
   505  0ECC                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F38                     	;# 
   531  0F39                     	;# 
   532  0F3A                     	;# 
   533  0F3B                     	;# 
   534  0F3C                     	;# 
   535  0F3D                     	;# 
   536  0F3E                     	;# 
   537  0F3F                     	;# 
   538  0F40                     	;# 
   539  0F41                     	;# 
   540  0F43                     	;# 
   541  0F44                     	;# 
   542  0F45                     	;# 
   543  0F46                     	;# 
   544  0F47                     	;# 
   545  0F48                     	;# 
   546  0F49                     	;# 
   547  0F4A                     	;# 
   548  0F4B                     	;# 
   549  0F4C                     	;# 
   550  0F4E                     	;# 
   551  0F4F                     	;# 
   552  0F50                     	;# 
   553  0F51                     	;# 
   554  0F52                     	;# 
   555  0F53                     	;# 
   556  0F54                     	;# 
   557  0F55                     	;# 
   558  0F56                     	;# 
   559  0F57                     	;# 
   560  0F65                     	;# 
   561  0F68                     	;# 
   562  0F69                     	;# 
   563  0F6A                     	;# 
   564  0F6B                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  001C                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0110                     	;# 
   631  0110                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011A                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011C                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011D                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011E                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  018E                     	;# 
   670  018F                     	;# 
   671  0190                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0196                     	;# 
   675  0197                     	;# 
   676  0198                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0218                     	;# 
   700  0219                     	;# 
   701  021A                     	;# 
   702  021B                     	;# 
   703  021B                     	;# 
   704  021C                     	;# 
   705  021C                     	;# 
   706  021D                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  028C                     	;# 
   711  028C                     	;# 
   712  028D                     	;# 
   713  028D                     	;# 
   714  028E                     	;# 
   715  028F                     	;# 
   716  0290                     	;# 
   717  0290                     	;# 
   718  0291                     	;# 
   719  0292                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0296                     	;# 
   726  0296                     	;# 
   727  0297                     	;# 
   728  0298                     	;# 
   729  0298                     	;# 
   730  0299                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  030C                     	;# 
   738  030C                     	;# 
   739  030D                     	;# 
   740  030E                     	;# 
   741  030F                     	;# 
   742  0310                     	;# 
   743  0310                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0317                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031B                     	;# 
   757  031C                     	;# 
   758  031C                     	;# 
   759  031D                     	;# 
   760  031E                     	;# 
   761  031F                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  040C                     	;# 
   769  040D                     	;# 
   770  040E                     	;# 
   771  040F                     	;# 
   772  0410                     	;# 
   773  0411                     	;# 
   774  0416                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  0418                     	;# 
   778  0418                     	;# 
   779  0419                     	;# 
   780  041A                     	;# 
   781  041A                     	;# 
   782  041B                     	;# 
   783  041C                     	;# 
   784  041C                     	;# 
   785  041D                     	;# 
   786  041E                     	;# 
   787  041F                     	;# 
   788  048C                     	;# 
   789  048C                     	;# 
   790  048D                     	;# 
   791  048E                     	;# 
   792  048F                     	;# 
   793  048F                     	;# 
   794  0490                     	;# 
   795  0491                     	;# 
   796  0492                     	;# 
   797  0492                     	;# 
   798  0493                     	;# 
   799  0494                     	;# 
   800  0495                     	;# 
   801  0495                     	;# 
   802  0496                     	;# 
   803  0497                     	;# 
   804  0498                     	;# 
   805  0499                     	;# 
   806  049A                     	;# 
   807  049B                     	;# 
   808  049C                     	;# 
   809  049D                     	;# 
   810  050C                     	;# 
   811  050C                     	;# 
   812  050D                     	;# 
   813  050E                     	;# 
   814  050F                     	;# 
   815  050F                     	;# 
   816  0510                     	;# 
   817  0511                     	;# 
   818  0512                     	;# 
   819  0512                     	;# 
   820  0513                     	;# 
   821  0514                     	;# 
   822  0515                     	;# 
   823  0515                     	;# 
   824  0516                     	;# 
   825  0517                     	;# 
   826  0518                     	;# 
   827  0519                     	;# 
   828  051A                     	;# 
   829  051B                     	;# 
   830  051C                     	;# 
   831  051D                     	;# 
   832  058C                     	;# 
   833  058C                     	;# 
   834  058D                     	;# 
   835  058E                     	;# 
   836  058F                     	;# 
   837  058F                     	;# 
   838  0590                     	;# 
   839  0591                     	;# 
   840  0592                     	;# 
   841  0593                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0618                     	;# 
   854  0619                     	;# 
   855  061A                     	;# 
   856  061B                     	;# 
   857  061C                     	;# 
   858  061D                     	;# 
   859  061E                     	;# 
   860  068C                     	;# 
   861  068D                     	;# 
   862  068E                     	;# 
   863  068F                     	;# 
   864  0690                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  070C                     	;# 
   870  070D                     	;# 
   871  070E                     	;# 
   872  070F                     	;# 
   873  0710                     	;# 
   874  0711                     	;# 
   875  0712                     	;# 
   876  0713                     	;# 
   877  0714                     	;# 
   878  0716                     	;# 
   879  0717                     	;# 
   880  0718                     	;# 
   881  0719                     	;# 
   882  071A                     	;# 
   883  071B                     	;# 
   884  071C                     	;# 
   885  071D                     	;# 
   886  071E                     	;# 
   887  0796                     	;# 
   888  0797                     	;# 
   889  0798                     	;# 
   890  0799                     	;# 
   891  079A                     	;# 
   892  079B                     	;# 
   893  080C                     	;# 
   894  080D                     	;# 
   895  080E                     	;# 
   896  080F                     	;# 
   897  0810                     	;# 
   898  0811                     	;# 
   899  0812                     	;# 
   900  0813                     	;# 
   901  0814                     	;# 
   902  081A                     	;# 
   903  081B                     	;# 
   904  081C                     	;# 
   905  081D                     	;# 
   906  081E                     	;# 
   907  081F                     	;# 
   908  088C                     	;# 
   909  088D                     	;# 
   910  088E                     	;# 
   911  088F                     	;# 
   912  0890                     	;# 
   913  0891                     	;# 
   914  0892                     	;# 
   915  0893                     	;# 
   916  0895                     	;# 
   917  0896                     	;# 
   918  0897                     	;# 
   919  0898                     	;# 
   920  0899                     	;# 
   921  089A                     	;# 
   922  089B                     	;# 
   923  090C                     	;# 
   924  090E                     	;# 
   925  090F                     	;# 
   926  091F                     	;# 
   927  091F                     	;# 
   928  098F                     	;# 
   929  098F                     	;# 
   930  0990                     	;# 
   931  0991                     	;# 
   932  0992                     	;# 
   933  0993                     	;# 
   934  0994                     	;# 
   935  0995                     	;# 
   936  0996                     	;# 
   937  0997                     	;# 
   938  0E0F                     	;# 
   939  0E10                     	;# 
   940  0E11                     	;# 
   941  0E12                     	;# 
   942  0E13                     	;# 
   943  0E14                     	;# 
   944  0E15                     	;# 
   945  0E16                     	;# 
   946  0E17                     	;# 
   947  0E18                     	;# 
   948  0E19                     	;# 
   949  0E1A                     	;# 
   950  0E1B                     	;# 
   951  0E1C                     	;# 
   952  0E1D                     	;# 
   953  0E1E                     	;# 
   954  0E1F                     	;# 
   955  0E20                     	;# 
   956  0E21                     	;# 
   957  0E22                     	;# 
   958  0E23                     	;# 
   959  0E24                     	;# 
   960  0E25                     	;# 
   961  0E26                     	;# 
   962  0E27                     	;# 
   963  0E28                     	;# 
   964  0E29                     	;# 
   965  0E2A                     	;# 
   966  0E2B                     	;# 
   967  0E2C                     	;# 
   968  0E2D                     	;# 
   969  0E2E                     	;# 
   970  0E2F                     	;# 
   971  0E30                     	;# 
   972  0E31                     	;# 
   973  0E32                     	;# 
   974  0E33                     	;# 
   975  0E34                     	;# 
   976  0E35                     	;# 
   977  0E36                     	;# 
   978  0E37                     	;# 
   979  0E8F                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E95                     	;# 
   986  0E96                     	;# 
   987  0E97                     	;# 
   988  0E9C                     	;# 
   989  0E9D                     	;# 
   990  0E9E                     	;# 
   991  0EA1                     	;# 
   992  0EA2                     	;# 
   993  0EA3                     	;# 
   994  0EA4                     	;# 
   995  0EA5                     	;# 
   996  0EA9                     	;# 
   997  0EAA                     	;# 
   998  0EAB                     	;# 
   999  0EAC                     	;# 
  1000  0EB1                     	;# 
  1001  0EB2                     	;# 
  1002  0EB3                     	;# 
  1003  0EB8                     	;# 
  1004  0EB9                     	;# 
  1005  0EBA                     	;# 
  1006  0EBB                     	;# 
  1007  0EBC                     	;# 
  1008  0EBD                     	;# 
  1009  0EBE                     	;# 
  1010  0EC3                     	;# 
  1011  0EC5                     	;# 
  1012  0EC6                     	;# 
  1013  0EC7                     	;# 
  1014  0EC8                     	;# 
  1015  0EC9                     	;# 
  1016  0ECA                     	;# 
  1017  0ECB                     	;# 
  1018  0ECC                     	;# 
  1019  0F10                     	;# 
  1020  0F11                     	;# 
  1021  0F12                     	;# 
  1022  0F13                     	;# 
  1023  0F14                     	;# 
  1024  0F15                     	;# 
  1025  0F16                     	;# 
  1026  0F17                     	;# 
  1027  0F18                     	;# 
  1028  0F19                     	;# 
  1029  0F1A                     	;# 
  1030  0F1B                     	;# 
  1031  0F1C                     	;# 
  1032  0F1D                     	;# 
  1033  0F1E                     	;# 
  1034  0F1F                     	;# 
  1035  0F20                     	;# 
  1036  0F21                     	;# 
  1037  0F22                     	;# 
  1038  0F23                     	;# 
  1039  0F24                     	;# 
  1040  0F25                     	;# 
  1041  0F26                     	;# 
  1042  0F27                     	;# 
  1043  0F38                     	;# 
  1044  0F39                     	;# 
  1045  0F3A                     	;# 
  1046  0F3B                     	;# 
  1047  0F3C                     	;# 
  1048  0F3D                     	;# 
  1049  0F3E                     	;# 
  1050  0F3F                     	;# 
  1051  0F40                     	;# 
  1052  0F41                     	;# 
  1053  0F43                     	;# 
  1054  0F44                     	;# 
  1055  0F45                     	;# 
  1056  0F46                     	;# 
  1057  0F47                     	;# 
  1058  0F48                     	;# 
  1059  0F49                     	;# 
  1060  0F4A                     	;# 
  1061  0F4B                     	;# 
  1062  0F4C                     	;# 
  1063  0F4E                     	;# 
  1064  0F4F                     	;# 
  1065  0F50                     	;# 
  1066  0F51                     	;# 
  1067  0F52                     	;# 
  1068  0F53                     	;# 
  1069  0F54                     	;# 
  1070  0F55                     	;# 
  1071  0F56                     	;# 
  1072  0F57                     	;# 
  1073  0F65                     	;# 
  1074  0F68                     	;# 
  1075  0F69                     	;# 
  1076  0F6A                     	;# 
  1077  0F6B                     	;# 
  1078  0FE4                     	;# 
  1079  0FE5                     	;# 
  1080  0FE6                     	;# 
  1081  0FE7                     	;# 
  1082  0FE8                     	;# 
  1083  0FE9                     	;# 
  1084  0FEA                     	;# 
  1085  0FEB                     	;# 
  1086  0FED                     	;# 
  1087  0FEE                     	;# 
  1088  0FEF                     	;# 
  1089  0000                     	;# 
  1090  0001                     	;# 
  1091  0002                     	;# 
  1092  0003                     	;# 
  1093  0004                     	;# 
  1094  0005                     	;# 
  1095  0006                     	;# 
  1096  0007                     	;# 
  1097  0008                     	;# 
  1098  0009                     	;# 
  1099  000A                     	;# 
  1100  000B                     	;# 
  1101  000C                     	;# 
  1102  000D                     	;# 
  1103  000E                     	;# 
  1104  0010                     	;# 
  1105  0011                     	;# 
  1106  0012                     	;# 
  1107  0013                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  001C                     	;# 
  1112  001C                     	;# 
  1113  001D                     	;# 
  1114  001D                     	;# 
  1115  001E                     	;# 
  1116  001F                     	;# 
  1117  008C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0090                     	;# 
  1125  0091                     	;# 
  1126  0093                     	;# 
  1127  0094                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0097                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009A                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  010C                     	;# 
  1139  010D                     	;# 
  1140  010E                     	;# 
  1141  010E                     	;# 
  1142  010F                     	;# 
  1143  0110                     	;# 
  1144  0110                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0114                     	;# 
  1151  0115                     	;# 
  1152  0116                     	;# 
  1153  0116                     	;# 
  1154  0117                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  0119                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011C                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011D                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011E                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182  018E                     	;# 
  1183  018F                     	;# 
  1184  0190                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0196                     	;# 
  1188  0197                     	;# 
  1189  0198                     	;# 
  1190  0199                     	;# 
  1191  019A                     	;# 
  1192  019B                     	;# 
  1193  019C                     	;# 
  1194  020C                     	;# 
  1195  020D                     	;# 
  1196  020E                     	;# 
  1197  020F                     	;# 
  1198  020F                     	;# 
  1199  0210                     	;# 
  1200  0210                     	;# 
  1201  0211                     	;# 
  1202  0211                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0216                     	;# 
  1209  0216                     	;# 
  1210  0217                     	;# 
  1211  0217                     	;# 
  1212  0218                     	;# 
  1213  0219                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0290                     	;# 
  1231  0291                     	;# 
  1232  0292                     	;# 
  1233  0292                     	;# 
  1234  0293                     	;# 
  1235  0293                     	;# 
  1236  0294                     	;# 
  1237  0295                     	;# 
  1238  0296                     	;# 
  1239  0296                     	;# 
  1240  0297                     	;# 
  1241  0298                     	;# 
  1242  0298                     	;# 
  1243  0299                     	;# 
  1244  0299                     	;# 
  1245  029A                     	;# 
  1246  029B                     	;# 
  1247  029C                     	;# 
  1248  029C                     	;# 
  1249  029D                     	;# 
  1250  030C                     	;# 
  1251  030C                     	;# 
  1252  030D                     	;# 
  1253  030E                     	;# 
  1254  030F                     	;# 
  1255  0310                     	;# 
  1256  0310                     	;# 
  1257  0311                     	;# 
  1258  0312                     	;# 
  1259  0313                     	;# 
  1260  0314                     	;# 
  1261  0314                     	;# 
  1262  0315                     	;# 
  1263  0316                     	;# 
  1264  0317                     	;# 
  1265  0318                     	;# 
  1266  0318                     	;# 
  1267  0319                     	;# 
  1268  031A                     	;# 
  1269  031B                     	;# 
  1270  031C                     	;# 
  1271  031C                     	;# 
  1272  031D                     	;# 
  1273  031E                     	;# 
  1274  031F                     	;# 
  1275  038C                     	;# 
  1276  038D                     	;# 
  1277  038E                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  040C                     	;# 
  1282  040D                     	;# 
  1283  040E                     	;# 
  1284  040F                     	;# 
  1285  0410                     	;# 
  1286  0411                     	;# 
  1287  0416                     	;# 
  1288  0416                     	;# 
  1289  0417                     	;# 
  1290  0418                     	;# 
  1291  0418                     	;# 
  1292  0419                     	;# 
  1293  041A                     	;# 
  1294  041A                     	;# 
  1295  041B                     	;# 
  1296  041C                     	;# 
  1297  041C                     	;# 
  1298  041D                     	;# 
  1299  041E                     	;# 
  1300  041F                     	;# 
  1301  048C                     	;# 
  1302  048C                     	;# 
  1303  048D                     	;# 
  1304  048E                     	;# 
  1305  048F                     	;# 
  1306  048F                     	;# 
  1307  0490                     	;# 
  1308  0491                     	;# 
  1309  0492                     	;# 
  1310  0492                     	;# 
  1311  0493                     	;# 
  1312  0494                     	;# 
  1313  0495                     	;# 
  1314  0495                     	;# 
  1315  0496                     	;# 
  1316  0497                     	;# 
  1317  0498                     	;# 
  1318  0499                     	;# 
  1319  049A                     	;# 
  1320  049B                     	;# 
  1321  049C                     	;# 
  1322  049D                     	;# 
  1323  050C                     	;# 
  1324  050C                     	;# 
  1325  050D                     	;# 
  1326  050E                     	;# 
  1327  050F                     	;# 
  1328  050F                     	;# 
  1329  0510                     	;# 
  1330  0511                     	;# 
  1331  0512                     	;# 
  1332  0512                     	;# 
  1333  0513                     	;# 
  1334  0514                     	;# 
  1335  0515                     	;# 
  1336  0515                     	;# 
  1337  0516                     	;# 
  1338  0517                     	;# 
  1339  0518                     	;# 
  1340  0519                     	;# 
  1341  051A                     	;# 
  1342  051B                     	;# 
  1343  051C                     	;# 
  1344  051D                     	;# 
  1345  058C                     	;# 
  1346  058C                     	;# 
  1347  058D                     	;# 
  1348  058E                     	;# 
  1349  058F                     	;# 
  1350  058F                     	;# 
  1351  0590                     	;# 
  1352  0591                     	;# 
  1353  0592                     	;# 
  1354  0593                     	;# 
  1355  060C                     	;# 
  1356  060D                     	;# 
  1357  060E                     	;# 
  1358  060F                     	;# 
  1359  0610                     	;# 
  1360  0611                     	;# 
  1361  0612                     	;# 
  1362  0613                     	;# 
  1363  0614                     	;# 
  1364  0616                     	;# 
  1365  0617                     	;# 
  1366  0618                     	;# 
  1367  0619                     	;# 
  1368  061A                     	;# 
  1369  061B                     	;# 
  1370  061C                     	;# 
  1371  061D                     	;# 
  1372  061E                     	;# 
  1373  068C                     	;# 
  1374  068D                     	;# 
  1375  068E                     	;# 
  1376  068F                     	;# 
  1377  0690                     	;# 
  1378  0691                     	;# 
  1379  0692                     	;# 
  1380  0693                     	;# 
  1381  0694                     	;# 
  1382  070C                     	;# 
  1383  070D                     	;# 
  1384  070E                     	;# 
  1385  070F                     	;# 
  1386  0710                     	;# 
  1387  0711                     	;# 
  1388  0712                     	;# 
  1389  0713                     	;# 
  1390  0714                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  071A                     	;# 
  1396  071B                     	;# 
  1397  071C                     	;# 
  1398  071D                     	;# 
  1399  071E                     	;# 
  1400  0796                     	;# 
  1401  0797                     	;# 
  1402  0798                     	;# 
  1403  0799                     	;# 
  1404  079A                     	;# 
  1405  079B                     	;# 
  1406  080C                     	;# 
  1407  080D                     	;# 
  1408  080E                     	;# 
  1409  080F                     	;# 
  1410  0810                     	;# 
  1411  0811                     	;# 
  1412  0812                     	;# 
  1413  0813                     	;# 
  1414  0814                     	;# 
  1415  081A                     	;# 
  1416  081B                     	;# 
  1417  081C                     	;# 
  1418  081D                     	;# 
  1419  081E                     	;# 
  1420  081F                     	;# 
  1421  088C                     	;# 
  1422  088D                     	;# 
  1423  088E                     	;# 
  1424  088F                     	;# 
  1425  0890                     	;# 
  1426  0891                     	;# 
  1427  0892                     	;# 
  1428  0893                     	;# 
  1429  0895                     	;# 
  1430  0896                     	;# 
  1431  0897                     	;# 
  1432  0898                     	;# 
  1433  0899                     	;# 
  1434  089A                     	;# 
  1435  089B                     	;# 
  1436  090C                     	;# 
  1437  090E                     	;# 
  1438  090F                     	;# 
  1439  091F                     	;# 
  1440  091F                     	;# 
  1441  098F                     	;# 
  1442  098F                     	;# 
  1443  0990                     	;# 
  1444  0991                     	;# 
  1445  0992                     	;# 
  1446  0993                     	;# 
  1447  0994                     	;# 
  1448  0995                     	;# 
  1449  0996                     	;# 
  1450  0997                     	;# 
  1451  0E0F                     	;# 
  1452  0E10                     	;# 
  1453  0E11                     	;# 
  1454  0E12                     	;# 
  1455  0E13                     	;# 
  1456  0E14                     	;# 
  1457  0E15                     	;# 
  1458  0E16                     	;# 
  1459  0E17                     	;# 
  1460  0E18                     	;# 
  1461  0E19                     	;# 
  1462  0E1A                     	;# 
  1463  0E1B                     	;# 
  1464  0E1C                     	;# 
  1465  0E1D                     	;# 
  1466  0E1E                     	;# 
  1467  0E1F                     	;# 
  1468  0E20                     	;# 
  1469  0E21                     	;# 
  1470  0E22                     	;# 
  1471  0E23                     	;# 
  1472  0E24                     	;# 
  1473  0E25                     	;# 
  1474  0E26                     	;# 
  1475  0E27                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E30                     	;# 
  1485  0E31                     	;# 
  1486  0E32                     	;# 
  1487  0E33                     	;# 
  1488  0E34                     	;# 
  1489  0E35                     	;# 
  1490  0E36                     	;# 
  1491  0E37                     	;# 
  1492  0E8F                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E93                     	;# 
  1497  0E94                     	;# 
  1498  0E95                     	;# 
  1499  0E96                     	;# 
  1500  0E97                     	;# 
  1501  0E9C                     	;# 
  1502  0E9D                     	;# 
  1503  0E9E                     	;# 
  1504  0EA1                     	;# 
  1505  0EA2                     	;# 
  1506  0EA3                     	;# 
  1507  0EA4                     	;# 
  1508  0EA5                     	;# 
  1509  0EA9                     	;# 
  1510  0EAA                     	;# 
  1511  0EAB                     	;# 
  1512  0EAC                     	;# 
  1513  0EB1                     	;# 
  1514  0EB2                     	;# 
  1515  0EB3                     	;# 
  1516  0EB8                     	;# 
  1517  0EB9                     	;# 
  1518  0EBA                     	;# 
  1519  0EBB                     	;# 
  1520  0EBC                     	;# 
  1521  0EBD                     	;# 
  1522  0EBE                     	;# 
  1523  0EC3                     	;# 
  1524  0EC5                     	;# 
  1525  0EC6                     	;# 
  1526  0EC7                     	;# 
  1527  0EC8                     	;# 
  1528  0EC9                     	;# 
  1529  0ECA                     	;# 
  1530  0ECB                     	;# 
  1531  0ECC                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F38                     	;# 
  1557  0F39                     	;# 
  1558  0F3A                     	;# 
  1559  0F3B                     	;# 
  1560  0F3C                     	;# 
  1561  0F3D                     	;# 
  1562  0F3E                     	;# 
  1563  0F3F                     	;# 
  1564  0F40                     	;# 
  1565  0F41                     	;# 
  1566  0F43                     	;# 
  1567  0F44                     	;# 
  1568  0F45                     	;# 
  1569  0F46                     	;# 
  1570  0F47                     	;# 
  1571  0F48                     	;# 
  1572  0F49                     	;# 
  1573  0F4A                     	;# 
  1574  0F4B                     	;# 
  1575  0F4C                     	;# 
  1576  0F4E                     	;# 
  1577  0F4F                     	;# 
  1578  0F50                     	;# 
  1579  0F51                     	;# 
  1580  0F52                     	;# 
  1581  0F53                     	;# 
  1582  0F54                     	;# 
  1583  0F55                     	;# 
  1584  0F56                     	;# 
  1585  0F57                     	;# 
  1586  0F65                     	;# 
  1587  0F68                     	;# 
  1588  0F69                     	;# 
  1589  0F6A                     	;# 
  1590  0F6B                     	;# 
  1591  0FE4                     	;# 
  1592  0FE5                     	;# 
  1593  0FE6                     	;# 
  1594  0FE7                     	;# 
  1595  0FE8                     	;# 
  1596  0FE9                     	;# 
  1597  0FEA                     	;# 
  1598  0FEB                     	;# 
  1599  0FED                     	;# 
  1600  0FEE                     	;# 
  1601  0FEF                     	;# 
  1602  0000                     	;# 
  1603  0001                     	;# 
  1604  0002                     	;# 
  1605  0003                     	;# 
  1606  0004                     	;# 
  1607  0005                     	;# 
  1608  0006                     	;# 
  1609  0007                     	;# 
  1610  0008                     	;# 
  1611  0009                     	;# 
  1612  000A                     	;# 
  1613  000B                     	;# 
  1614  000C                     	;# 
  1615  000D                     	;# 
  1616  000E                     	;# 
  1617  0010                     	;# 
  1618  0011                     	;# 
  1619  0012                     	;# 
  1620  0013                     	;# 
  1621  0016                     	;# 
  1622  0017                     	;# 
  1623  0018                     	;# 
  1624  001C                     	;# 
  1625  001C                     	;# 
  1626  001D                     	;# 
  1627  001D                     	;# 
  1628  001E                     	;# 
  1629  001F                     	;# 
  1630  008C                     	;# 
  1631  008C                     	;# 
  1632  008D                     	;# 
  1633  008E                     	;# 
  1634  008E                     	;# 
  1635  008F                     	;# 
  1636  0090                     	;# 
  1637  0090                     	;# 
  1638  0091                     	;# 
  1639  0093                     	;# 
  1640  0094                     	;# 
  1641  0095                     	;# 
  1642  0096                     	;# 
  1643  0097                     	;# 
  1644  0098                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009C                     	;# 
  1649  009D                     	;# 
  1650  009E                     	;# 
  1651  010C                     	;# 
  1652  010D                     	;# 
  1653  010E                     	;# 
  1654  010E                     	;# 
  1655  010F                     	;# 
  1656  0110                     	;# 
  1657  0110                     	;# 
  1658  0111                     	;# 
  1659  0112                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0116                     	;# 
  1667  0117                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  0119                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011A                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011C                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011D                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011E                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  018F                     	;# 
  1697  0190                     	;# 
  1698  0191                     	;# 
  1699  0192                     	;# 
  1700  0196                     	;# 
  1701  0197                     	;# 
  1702  0198                     	;# 
  1703  0199                     	;# 
  1704  019A                     	;# 
  1705  019B                     	;# 
  1706  019C                     	;# 
  1707  020C                     	;# 
  1708  020D                     	;# 
  1709  020E                     	;# 
  1710  020F                     	;# 
  1711  020F                     	;# 
  1712  0210                     	;# 
  1713  0210                     	;# 
  1714  0211                     	;# 
  1715  0211                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0215                     	;# 
  1720  0215                     	;# 
  1721  0216                     	;# 
  1722  0216                     	;# 
  1723  0217                     	;# 
  1724  0217                     	;# 
  1725  0218                     	;# 
  1726  0219                     	;# 
  1727  021A                     	;# 
  1728  021B                     	;# 
  1729  021B                     	;# 
  1730  021C                     	;# 
  1731  021C                     	;# 
  1732  021D                     	;# 
  1733  021D                     	;# 
  1734  021E                     	;# 
  1735  021F                     	;# 
  1736  028C                     	;# 
  1737  028C                     	;# 
  1738  028D                     	;# 
  1739  028D                     	;# 
  1740  028E                     	;# 
  1741  028F                     	;# 
  1742  0290                     	;# 
  1743  0290                     	;# 
  1744  0291                     	;# 
  1745  0292                     	;# 
  1746  0292                     	;# 
  1747  0293                     	;# 
  1748  0293                     	;# 
  1749  0294                     	;# 
  1750  0295                     	;# 
  1751  0296                     	;# 
  1752  0296                     	;# 
  1753  0297                     	;# 
  1754  0298                     	;# 
  1755  0298                     	;# 
  1756  0299                     	;# 
  1757  0299                     	;# 
  1758  029A                     	;# 
  1759  029B                     	;# 
  1760  029C                     	;# 
  1761  029C                     	;# 
  1762  029D                     	;# 
  1763  030C                     	;# 
  1764  030C                     	;# 
  1765  030D                     	;# 
  1766  030E                     	;# 
  1767  030F                     	;# 
  1768  0310                     	;# 
  1769  0310                     	;# 
  1770  0311                     	;# 
  1771  0312                     	;# 
  1772  0313                     	;# 
  1773  0314                     	;# 
  1774  0314                     	;# 
  1775  0315                     	;# 
  1776  0316                     	;# 
  1777  0317                     	;# 
  1778  0318                     	;# 
  1779  0318                     	;# 
  1780  0319                     	;# 
  1781  031A                     	;# 
  1782  031B                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  031F                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  0390                     	;# 
  1792  0391                     	;# 
  1793  0392                     	;# 
  1794  040C                     	;# 
  1795  040D                     	;# 
  1796  040E                     	;# 
  1797  040F                     	;# 
  1798  0410                     	;# 
  1799  0411                     	;# 
  1800  0416                     	;# 
  1801  0416                     	;# 
  1802  0417                     	;# 
  1803  0418                     	;# 
  1804  0418                     	;# 
  1805  0419                     	;# 
  1806  041A                     	;# 
  1807  041A                     	;# 
  1808  041B                     	;# 
  1809  041C                     	;# 
  1810  041C                     	;# 
  1811  041D                     	;# 
  1812  041E                     	;# 
  1813  041F                     	;# 
  1814  048C                     	;# 
  1815  048C                     	;# 
  1816  048D                     	;# 
  1817  048E                     	;# 
  1818  048F                     	;# 
  1819  048F                     	;# 
  1820  0490                     	;# 
  1821  0491                     	;# 
  1822  0492                     	;# 
  1823  0492                     	;# 
  1824  0493                     	;# 
  1825  0494                     	;# 
  1826  0495                     	;# 
  1827  0495                     	;# 
  1828  0496                     	;# 
  1829  0497                     	;# 
  1830  0498                     	;# 
  1831  0499                     	;# 
  1832  049A                     	;# 
  1833  049B                     	;# 
  1834  049C                     	;# 
  1835  049D                     	;# 
  1836  050C                     	;# 
  1837  050C                     	;# 
  1838  050D                     	;# 
  1839  050E                     	;# 
  1840  050F                     	;# 
  1841  050F                     	;# 
  1842  0510                     	;# 
  1843  0511                     	;# 
  1844  0512                     	;# 
  1845  0512                     	;# 
  1846  0513                     	;# 
  1847  0514                     	;# 
  1848  0515                     	;# 
  1849  0515                     	;# 
  1850  0516                     	;# 
  1851  0517                     	;# 
  1852  0518                     	;# 
  1853  0519                     	;# 
  1854  051A                     	;# 
  1855  051B                     	;# 
  1856  051C                     	;# 
  1857  051D                     	;# 
  1858  058C                     	;# 
  1859  058C                     	;# 
  1860  058D                     	;# 
  1861  058E                     	;# 
  1862  058F                     	;# 
  1863  058F                     	;# 
  1864  0590                     	;# 
  1865  0591                     	;# 
  1866  0592                     	;# 
  1867  0593                     	;# 
  1868  060C                     	;# 
  1869  060D                     	;# 
  1870  060E                     	;# 
  1871  060F                     	;# 
  1872  0610                     	;# 
  1873  0611                     	;# 
  1874  0612                     	;# 
  1875  0613                     	;# 
  1876  0614                     	;# 
  1877  0616                     	;# 
  1878  0617                     	;# 
  1879  0618                     	;# 
  1880  0619                     	;# 
  1881  061A                     	;# 
  1882  061B                     	;# 
  1883  061C                     	;# 
  1884  061D                     	;# 
  1885  061E                     	;# 
  1886  068C                     	;# 
  1887  068D                     	;# 
  1888  068E                     	;# 
  1889  068F                     	;# 
  1890  0690                     	;# 
  1891  0691                     	;# 
  1892  0692                     	;# 
  1893  0693                     	;# 
  1894  0694                     	;# 
  1895  070C                     	;# 
  1896  070D                     	;# 
  1897  070E                     	;# 
  1898  070F                     	;# 
  1899  0710                     	;# 
  1900  0711                     	;# 
  1901  0712                     	;# 
  1902  0713                     	;# 
  1903  0714                     	;# 
  1904  0716                     	;# 
  1905  0717                     	;# 
  1906  0718                     	;# 
  1907  0719                     	;# 
  1908  071A                     	;# 
  1909  071B                     	;# 
  1910  071C                     	;# 
  1911  071D                     	;# 
  1912  071E                     	;# 
  1913  0796                     	;# 
  1914  0797                     	;# 
  1915  0798                     	;# 
  1916  0799                     	;# 
  1917  079A                     	;# 
  1918  079B                     	;# 
  1919  080C                     	;# 
  1920  080D                     	;# 
  1921  080E                     	;# 
  1922  080F                     	;# 
  1923  0810                     	;# 
  1924  0811                     	;# 
  1925  0812                     	;# 
  1926  0813                     	;# 
  1927  0814                     	;# 
  1928  081A                     	;# 
  1929  081B                     	;# 
  1930  081C                     	;# 
  1931  081D                     	;# 
  1932  081E                     	;# 
  1933  081F                     	;# 
  1934  088C                     	;# 
  1935  088D                     	;# 
  1936  088E                     	;# 
  1937  088F                     	;# 
  1938  0890                     	;# 
  1939  0891                     	;# 
  1940  0892                     	;# 
  1941  0893                     	;# 
  1942  0895                     	;# 
  1943  0896                     	;# 
  1944  0897                     	;# 
  1945  0898                     	;# 
  1946  0899                     	;# 
  1947  089A                     	;# 
  1948  089B                     	;# 
  1949  090C                     	;# 
  1950  090E                     	;# 
  1951  090F                     	;# 
  1952  091F                     	;# 
  1953  091F                     	;# 
  1954  098F                     	;# 
  1955  098F                     	;# 
  1956  0990                     	;# 
  1957  0991                     	;# 
  1958  0992                     	;# 
  1959  0993                     	;# 
  1960  0994                     	;# 
  1961  0995                     	;# 
  1962  0996                     	;# 
  1963  0997                     	;# 
  1964  0E0F                     	;# 
  1965  0E10                     	;# 
  1966  0E11                     	;# 
  1967  0E12                     	;# 
  1968  0E13                     	;# 
  1969  0E14                     	;# 
  1970  0E15                     	;# 
  1971  0E16                     	;# 
  1972  0E17                     	;# 
  1973  0E18                     	;# 
  1974  0E19                     	;# 
  1975  0E1A                     	;# 
  1976  0E1B                     	;# 
  1977  0E1C                     	;# 
  1978  0E1D                     	;# 
  1979  0E1E                     	;# 
  1980  0E1F                     	;# 
  1981  0E20                     	;# 
  1982  0E21                     	;# 
  1983  0E22                     	;# 
  1984  0E23                     	;# 
  1985  0E24                     	;# 
  1986  0E25                     	;# 
  1987  0E26                     	;# 
  1988  0E27                     	;# 
  1989  0E28                     	;# 
  1990  0E29                     	;# 
  1991  0E2A                     	;# 
  1992  0E2B                     	;# 
  1993  0E2C                     	;# 
  1994  0E2D                     	;# 
  1995  0E2E                     	;# 
  1996  0E2F                     	;# 
  1997  0E30                     	;# 
  1998  0E31                     	;# 
  1999  0E32                     	;# 
  2000  0E33                     	;# 
  2001  0E34                     	;# 
  2002  0E35                     	;# 
  2003  0E36                     	;# 
  2004  0E37                     	;# 
  2005  0E8F                     	;# 
  2006  0E90                     	;# 
  2007  0E91                     	;# 
  2008  0E92                     	;# 
  2009  0E93                     	;# 
  2010  0E94                     	;# 
  2011  0E95                     	;# 
  2012  0E96                     	;# 
  2013  0E97                     	;# 
  2014  0E9C                     	;# 
  2015  0E9D                     	;# 
  2016  0E9E                     	;# 
  2017  0EA1                     	;# 
  2018  0EA2                     	;# 
  2019  0EA3                     	;# 
  2020  0EA4                     	;# 
  2021  0EA5                     	;# 
  2022  0EA9                     	;# 
  2023  0EAA                     	;# 
  2024  0EAB                     	;# 
  2025  0EAC                     	;# 
  2026  0EB1                     	;# 
  2027  0EB2                     	;# 
  2028  0EB3                     	;# 
  2029  0EB8                     	;# 
  2030  0EB9                     	;# 
  2031  0EBA                     	;# 
  2032  0EBB                     	;# 
  2033  0EBC                     	;# 
  2034  0EBD                     	;# 
  2035  0EBE                     	;# 
  2036  0EC3                     	;# 
  2037  0EC5                     	;# 
  2038  0EC6                     	;# 
  2039  0EC7                     	;# 
  2040  0EC8                     	;# 
  2041  0EC9                     	;# 
  2042  0ECA                     	;# 
  2043  0ECB                     	;# 
  2044  0ECC                     	;# 
  2045  0F10                     	;# 
  2046  0F11                     	;# 
  2047  0F12                     	;# 
  2048  0F13                     	;# 
  2049  0F14                     	;# 
  2050  0F15                     	;# 
  2051  0F16                     	;# 
  2052  0F17                     	;# 
  2053  0F18                     	;# 
  2054  0F19                     	;# 
  2055  0F1A                     	;# 
  2056  0F1B                     	;# 
  2057  0F1C                     	;# 
  2058  0F1D                     	;# 
  2059  0F1E                     	;# 
  2060  0F1F                     	;# 
  2061  0F20                     	;# 
  2062  0F21                     	;# 
  2063  0F22                     	;# 
  2064  0F23                     	;# 
  2065  0F24                     	;# 
  2066  0F25                     	;# 
  2067  0F26                     	;# 
  2068  0F27                     	;# 
  2069  0F38                     	;# 
  2070  0F39                     	;# 
  2071  0F3A                     	;# 
  2072  0F3B                     	;# 
  2073  0F3C                     	;# 
  2074  0F3D                     	;# 
  2075  0F3E                     	;# 
  2076  0F3F                     	;# 
  2077  0F40                     	;# 
  2078  0F41                     	;# 
  2079  0F43                     	;# 
  2080  0F44                     	;# 
  2081  0F45                     	;# 
  2082  0F46                     	;# 
  2083  0F47                     	;# 
  2084  0F48                     	;# 
  2085  0F49                     	;# 
  2086  0F4A                     	;# 
  2087  0F4B                     	;# 
  2088  0F4C                     	;# 
  2089  0F4E                     	;# 
  2090  0F4F                     	;# 
  2091  0F50                     	;# 
  2092  0F51                     	;# 
  2093  0F52                     	;# 
  2094  0F53                     	;# 
  2095  0F54                     	;# 
  2096  0F55                     	;# 
  2097  0F56                     	;# 
  2098  0F57                     	;# 
  2099  0F65                     	;# 
  2100  0F68                     	;# 
  2101  0F69                     	;# 
  2102  0F6A                     	;# 
  2103  0F6B                     	;# 
  2104  0FE4                     	;# 
  2105  0FE5                     	;# 
  2106  0FE6                     	;# 
  2107  0FE7                     	;# 
  2108  0FE8                     	;# 
  2109  0FE9                     	;# 
  2110  0FEA                     	;# 
  2111  0FEB                     	;# 
  2112  0FED                     	;# 
  2113  0FEE                     	;# 
  2114  0FEF                     	;# 
  2115  0000                     	;# 
  2116  0001                     	;# 
  2117  0002                     	;# 
  2118  0003                     	;# 
  2119  0004                     	;# 
  2120  0005                     	;# 
  2121  0006                     	;# 
  2122  0007                     	;# 
  2123  0008                     	;# 
  2124  0009                     	;# 
  2125  000A                     	;# 
  2126  000B                     	;# 
  2127  000C                     	;# 
  2128  000D                     	;# 
  2129  000E                     	;# 
  2130  0010                     	;# 
  2131  0011                     	;# 
  2132  0012                     	;# 
  2133  0013                     	;# 
  2134  0016                     	;# 
  2135  0017                     	;# 
  2136  0018                     	;# 
  2137  001C                     	;# 
  2138  001C                     	;# 
  2139  001D                     	;# 
  2140  001D                     	;# 
  2141  001E                     	;# 
  2142  001F                     	;# 
  2143  008C                     	;# 
  2144  008C                     	;# 
  2145  008D                     	;# 
  2146  008E                     	;# 
  2147  008E                     	;# 
  2148  008F                     	;# 
  2149  0090                     	;# 
  2150  0090                     	;# 
  2151  0091                     	;# 
  2152  0093                     	;# 
  2153  0094                     	;# 
  2154  0095                     	;# 
  2155  0096                     	;# 
  2156  0097                     	;# 
  2157  0098                     	;# 
  2158  0099                     	;# 
  2159  009A                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  010C                     	;# 
  2165  010D                     	;# 
  2166  010E                     	;# 
  2167  010E                     	;# 
  2168  010F                     	;# 
  2169  0110                     	;# 
  2170  0110                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0114                     	;# 
  2177  0115                     	;# 
  2178  0116                     	;# 
  2179  0116                     	;# 
  2180  0117                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  0119                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011C                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011D                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011E                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  018C                     	;# 
  2207  018D                     	;# 
  2208  018E                     	;# 
  2209  018F                     	;# 
  2210  0190                     	;# 
  2211  0191                     	;# 
  2212  0192                     	;# 
  2213  0196                     	;# 
  2214  0197                     	;# 
  2215  0198                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019B                     	;# 
  2219  019C                     	;# 
  2220  020C                     	;# 
  2221  020D                     	;# 
  2222  020E                     	;# 
  2223  020F                     	;# 
  2224  020F                     	;# 
  2225  0210                     	;# 
  2226  0210                     	;# 
  2227  0211                     	;# 
  2228  0211                     	;# 
  2229  0212                     	;# 
  2230  0213                     	;# 
  2231  0214                     	;# 
  2232  0215                     	;# 
  2233  0215                     	;# 
  2234  0216                     	;# 
  2235  0216                     	;# 
  2236  0217                     	;# 
  2237  0217                     	;# 
  2238  0218                     	;# 
  2239  0219                     	;# 
  2240  021A                     	;# 
  2241  021B                     	;# 
  2242  021B                     	;# 
  2243  021C                     	;# 
  2244  021C                     	;# 
  2245  021D                     	;# 
  2246  021D                     	;# 
  2247  021E                     	;# 
  2248  021F                     	;# 
  2249  028C                     	;# 
  2250  028C                     	;# 
  2251  028D                     	;# 
  2252  028D                     	;# 
  2253  028E                     	;# 
  2254  028F                     	;# 
  2255  0290                     	;# 
  2256  0290                     	;# 
  2257  0291                     	;# 
  2258  0292                     	;# 
  2259  0292                     	;# 
  2260  0293                     	;# 
  2261  0293                     	;# 
  2262  0294                     	;# 
  2263  0295                     	;# 
  2264  0296                     	;# 
  2265  0296                     	;# 
  2266  0297                     	;# 
  2267  0298                     	;# 
  2268  0298                     	;# 
  2269  0299                     	;# 
  2270  0299                     	;# 
  2271  029A                     	;# 
  2272  029B                     	;# 
  2273  029C                     	;# 
  2274  029C                     	;# 
  2275  029D                     	;# 
  2276  030C                     	;# 
  2277  030C                     	;# 
  2278  030D                     	;# 
  2279  030E                     	;# 
  2280  030F                     	;# 
  2281  0310                     	;# 
  2282  0310                     	;# 
  2283  0311                     	;# 
  2284  0312                     	;# 
  2285  0313                     	;# 
  2286  0314                     	;# 
  2287  0314                     	;# 
  2288  0315                     	;# 
  2289  0316                     	;# 
  2290  0317                     	;# 
  2291  0318                     	;# 
  2292  0318                     	;# 
  2293  0319                     	;# 
  2294  031A                     	;# 
  2295  031B                     	;# 
  2296  031C                     	;# 
  2297  031C                     	;# 
  2298  031D                     	;# 
  2299  031E                     	;# 
  2300  031F                     	;# 
  2301  038C                     	;# 
  2302  038D                     	;# 
  2303  038E                     	;# 
  2304  0390                     	;# 
  2305  0391                     	;# 
  2306  0392                     	;# 
  2307  040C                     	;# 
  2308  040D                     	;# 
  2309  040E                     	;# 
  2310  040F                     	;# 
  2311  0410                     	;# 
  2312  0411                     	;# 
  2313  0416                     	;# 
  2314  0416                     	;# 
  2315  0417                     	;# 
  2316  0418                     	;# 
  2317  0418                     	;# 
  2318  0419                     	;# 
  2319  041A                     	;# 
  2320  041A                     	;# 
  2321  041B                     	;# 
  2322  041C                     	;# 
  2323  041C                     	;# 
  2324  041D                     	;# 
  2325  041E                     	;# 
  2326  041F                     	;# 
  2327  048C                     	;# 
  2328  048C                     	;# 
  2329  048D                     	;# 
  2330  048E                     	;# 
  2331  048F                     	;# 
  2332  048F                     	;# 
  2333  0490                     	;# 
  2334  0491                     	;# 
  2335  0492                     	;# 
  2336  0492                     	;# 
  2337  0493                     	;# 
  2338  0494                     	;# 
  2339  0495                     	;# 
  2340  0495                     	;# 
  2341  0496                     	;# 
  2342  0497                     	;# 
  2343  0498                     	;# 
  2344  0499                     	;# 
  2345  049A                     	;# 
  2346  049B                     	;# 
  2347  049C                     	;# 
  2348  049D                     	;# 
  2349  050C                     	;# 
  2350  050C                     	;# 
  2351  050D                     	;# 
  2352  050E                     	;# 
  2353  050F                     	;# 
  2354  050F                     	;# 
  2355  0510                     	;# 
  2356  0511                     	;# 
  2357  0512                     	;# 
  2358  0512                     	;# 
  2359  0513                     	;# 
  2360  0514                     	;# 
  2361  0515                     	;# 
  2362  0515                     	;# 
  2363  0516                     	;# 
  2364  0517                     	;# 
  2365  0518                     	;# 
  2366  0519                     	;# 
  2367  051A                     	;# 
  2368  051B                     	;# 
  2369  051C                     	;# 
  2370  051D                     	;# 
  2371  058C                     	;# 
  2372  058C                     	;# 
  2373  058D                     	;# 
  2374  058E                     	;# 
  2375  058F                     	;# 
  2376  058F                     	;# 
  2377  0590                     	;# 
  2378  0591                     	;# 
  2379  0592                     	;# 
  2380  0593                     	;# 
  2381  060C                     	;# 
  2382  060D                     	;# 
  2383  060E                     	;# 
  2384  060F                     	;# 
  2385  0610                     	;# 
  2386  0611                     	;# 
  2387  0612                     	;# 
  2388  0613                     	;# 
  2389  0614                     	;# 
  2390  0616                     	;# 
  2391  0617                     	;# 
  2392  0618                     	;# 
  2393  0619                     	;# 
  2394  061A                     	;# 
  2395  061B                     	;# 
  2396  061C                     	;# 
  2397  061D                     	;# 
  2398  061E                     	;# 
  2399  068C                     	;# 
  2400  068D                     	;# 
  2401  068E                     	;# 
  2402  068F                     	;# 
  2403  0690                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  070C                     	;# 
  2409  070D                     	;# 
  2410  070E                     	;# 
  2411  070F                     	;# 
  2412  0710                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0716                     	;# 
  2418  0717                     	;# 
  2419  0718                     	;# 
  2420  0719                     	;# 
  2421  071A                     	;# 
  2422  071B                     	;# 
  2423  071C                     	;# 
  2424  071D                     	;# 
  2425  071E                     	;# 
  2426  0796                     	;# 
  2427  0797                     	;# 
  2428  0798                     	;# 
  2429  0799                     	;# 
  2430  079A                     	;# 
  2431  079B                     	;# 
  2432  080C                     	;# 
  2433  080D                     	;# 
  2434  080E                     	;# 
  2435  080F                     	;# 
  2436  0810                     	;# 
  2437  0811                     	;# 
  2438  0812                     	;# 
  2439  0813                     	;# 
  2440  0814                     	;# 
  2441  081A                     	;# 
  2442  081B                     	;# 
  2443  081C                     	;# 
  2444  081D                     	;# 
  2445  081E                     	;# 
  2446  081F                     	;# 
  2447  088C                     	;# 
  2448  088D                     	;# 
  2449  088E                     	;# 
  2450  088F                     	;# 
  2451  0890                     	;# 
  2452  0891                     	;# 
  2453  0892                     	;# 
  2454  0893                     	;# 
  2455  0895                     	;# 
  2456  0896                     	;# 
  2457  0897                     	;# 
  2458  0898                     	;# 
  2459  0899                     	;# 
  2460  089A                     	;# 
  2461  089B                     	;# 
  2462  090C                     	;# 
  2463  090E                     	;# 
  2464  090F                     	;# 
  2465  091F                     	;# 
  2466  091F                     	;# 
  2467  098F                     	;# 
  2468  098F                     	;# 
  2469  0990                     	;# 
  2470  0991                     	;# 
  2471  0992                     	;# 
  2472  0993                     	;# 
  2473  0994                     	;# 
  2474  0995                     	;# 
  2475  0996                     	;# 
  2476  0997                     	;# 
  2477  0E0F                     	;# 
  2478  0E10                     	;# 
  2479  0E11                     	;# 
  2480  0E12                     	;# 
  2481  0E13                     	;# 
  2482  0E14                     	;# 
  2483  0E15                     	;# 
  2484  0E16                     	;# 
  2485  0E17                     	;# 
  2486  0E18                     	;# 
  2487  0E19                     	;# 
  2488  0E1A                     	;# 
  2489  0E1B                     	;# 
  2490  0E1C                     	;# 
  2491  0E1D                     	;# 
  2492  0E1E                     	;# 
  2493  0E1F                     	;# 
  2494  0E20                     	;# 
  2495  0E21                     	;# 
  2496  0E22                     	;# 
  2497  0E23                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E26                     	;# 
  2501  0E27                     	;# 
  2502  0E28                     	;# 
  2503  0E29                     	;# 
  2504  0E2A                     	;# 
  2505  0E2B                     	;# 
  2506  0E2C                     	;# 
  2507  0E2D                     	;# 
  2508  0E2E                     	;# 
  2509  0E2F                     	;# 
  2510  0E30                     	;# 
  2511  0E31                     	;# 
  2512  0E32                     	;# 
  2513  0E33                     	;# 
  2514  0E34                     	;# 
  2515  0E35                     	;# 
  2516  0E36                     	;# 
  2517  0E37                     	;# 
  2518  0E8F                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E93                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E96                     	;# 
  2526  0E97                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA9                     	;# 
  2536  0EAA                     	;# 
  2537  0EAB                     	;# 
  2538  0EAC                     	;# 
  2539  0EB1                     	;# 
  2540  0EB2                     	;# 
  2541  0EB3                     	;# 
  2542  0EB8                     	;# 
  2543  0EB9                     	;# 
  2544  0EBA                     	;# 
  2545  0EBB                     	;# 
  2546  0EBC                     	;# 
  2547  0EBD                     	;# 
  2548  0EBE                     	;# 
  2549  0EC3                     	;# 
  2550  0EC5                     	;# 
  2551  0EC6                     	;# 
  2552  0EC7                     	;# 
  2553  0EC8                     	;# 
  2554  0EC9                     	;# 
  2555  0ECA                     	;# 
  2556  0ECB                     	;# 
  2557  0ECC                     	;# 
  2558  0F10                     	;# 
  2559  0F11                     	;# 
  2560  0F12                     	;# 
  2561  0F13                     	;# 
  2562  0F14                     	;# 
  2563  0F15                     	;# 
  2564  0F16                     	;# 
  2565  0F17                     	;# 
  2566  0F18                     	;# 
  2567  0F19                     	;# 
  2568  0F1A                     	;# 
  2569  0F1B                     	;# 
  2570  0F1C                     	;# 
  2571  0F1D                     	;# 
  2572  0F1E                     	;# 
  2573  0F1F                     	;# 
  2574  0F20                     	;# 
  2575  0F21                     	;# 
  2576  0F22                     	;# 
  2577  0F23                     	;# 
  2578  0F24                     	;# 
  2579  0F25                     	;# 
  2580  0F26                     	;# 
  2581  0F27                     	;# 
  2582  0F38                     	;# 
  2583  0F39                     	;# 
  2584  0F3A                     	;# 
  2585  0F3B                     	;# 
  2586  0F3C                     	;# 
  2587  0F3D                     	;# 
  2588  0F3E                     	;# 
  2589  0F3F                     	;# 
  2590  0F40                     	;# 
  2591  0F41                     	;# 
  2592  0F43                     	;# 
  2593  0F44                     	;# 
  2594  0F45                     	;# 
  2595  0F46                     	;# 
  2596  0F47                     	;# 
  2597  0F48                     	;# 
  2598  0F49                     	;# 
  2599  0F4A                     	;# 
  2600  0F4B                     	;# 
  2601  0F4C                     	;# 
  2602  0F4E                     	;# 
  2603  0F4F                     	;# 
  2604  0F50                     	;# 
  2605  0F51                     	;# 
  2606  0F52                     	;# 
  2607  0F53                     	;# 
  2608  0F54                     	;# 
  2609  0F55                     	;# 
  2610  0F56                     	;# 
  2611  0F57                     	;# 
  2612  0F65                     	;# 
  2613  0F68                     	;# 
  2614  0F69                     	;# 
  2615  0F6A                     	;# 
  2616  0F6B                     	;# 
  2617  0FE4                     	;# 
  2618  0FE5                     	;# 
  2619  0FE6                     	;# 
  2620  0FE7                     	;# 
  2621  0FE8                     	;# 
  2622  0FE9                     	;# 
  2623  0FEA                     	;# 
  2624  0FEB                     	;# 
  2625  0FED                     	;# 
  2626  0FEE                     	;# 
  2627  0FEF                     	;# 
  2628  0000                     	;# 
  2629  0001                     	;# 
  2630  0002                     	;# 
  2631  0003                     	;# 
  2632  0004                     	;# 
  2633  0005                     	;# 
  2634  0006                     	;# 
  2635  0007                     	;# 
  2636  0008                     	;# 
  2637  0009                     	;# 
  2638  000A                     	;# 
  2639  000B                     	;# 
  2640  000C                     	;# 
  2641  000D                     	;# 
  2642  000E                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0016                     	;# 
  2648  0017                     	;# 
  2649  0018                     	;# 
  2650  001C                     	;# 
  2651  001C                     	;# 
  2652  001D                     	;# 
  2653  001D                     	;# 
  2654  001E                     	;# 
  2655  001F                     	;# 
  2656  008C                     	;# 
  2657  008C                     	;# 
  2658  008D                     	;# 
  2659  008E                     	;# 
  2660  008E                     	;# 
  2661  008F                     	;# 
  2662  0090                     	;# 
  2663  0090                     	;# 
  2664  0091                     	;# 
  2665  0093                     	;# 
  2666  0094                     	;# 
  2667  0095                     	;# 
  2668  0096                     	;# 
  2669  0097                     	;# 
  2670  0098                     	;# 
  2671  0099                     	;# 
  2672  009A                     	;# 
  2673  009B                     	;# 
  2674  009C                     	;# 
  2675  009D                     	;# 
  2676  009E                     	;# 
  2677  010C                     	;# 
  2678  010D                     	;# 
  2679  010E                     	;# 
  2680  010E                     	;# 
  2681  010F                     	;# 
  2682  0110                     	;# 
  2683  0110                     	;# 
  2684  0111                     	;# 
  2685  0112                     	;# 
  2686  0112                     	;# 
  2687  0113                     	;# 
  2688  0114                     	;# 
  2689  0114                     	;# 
  2690  0115                     	;# 
  2691  0116                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  0119                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011A                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011C                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011D                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011E                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  018C                     	;# 
  2720  018D                     	;# 
  2721  018E                     	;# 
  2722  018F                     	;# 
  2723  0190                     	;# 
  2724  0191                     	;# 
  2725  0192                     	;# 
  2726  0196                     	;# 
  2727  0197                     	;# 
  2728  0198                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019B                     	;# 
  2732  019C                     	;# 
  2733  020C                     	;# 
  2734  020D                     	;# 
  2735  020E                     	;# 
  2736  020F                     	;# 
  2737  020F                     	;# 
  2738  0210                     	;# 
  2739  0210                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0213                     	;# 
  2744  0214                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0218                     	;# 
  2752  0219                     	;# 
  2753  021A                     	;# 
  2754  021B                     	;# 
  2755  021B                     	;# 
  2756  021C                     	;# 
  2757  021C                     	;# 
  2758  021D                     	;# 
  2759  021D                     	;# 
  2760  021E                     	;# 
  2761  021F                     	;# 
  2762  028C                     	;# 
  2763  028C                     	;# 
  2764  028D                     	;# 
  2765  028D                     	;# 
  2766  028E                     	;# 
  2767  028F                     	;# 
  2768  0290                     	;# 
  2769  0290                     	;# 
  2770  0291                     	;# 
  2771  0292                     	;# 
  2772  0292                     	;# 
  2773  0293                     	;# 
  2774  0293                     	;# 
  2775  0294                     	;# 
  2776  0295                     	;# 
  2777  0296                     	;# 
  2778  0296                     	;# 
  2779  0297                     	;# 
  2780  0298                     	;# 
  2781  0298                     	;# 
  2782  0299                     	;# 
  2783  0299                     	;# 
  2784  029A                     	;# 
  2785  029B                     	;# 
  2786  029C                     	;# 
  2787  029C                     	;# 
  2788  029D                     	;# 
  2789  030C                     	;# 
  2790  030C                     	;# 
  2791  030D                     	;# 
  2792  030E                     	;# 
  2793  030F                     	;# 
  2794  0310                     	;# 
  2795  0310                     	;# 
  2796  0311                     	;# 
  2797  0312                     	;# 
  2798  0313                     	;# 
  2799  0314                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0316                     	;# 
  2803  0317                     	;# 
  2804  0318                     	;# 
  2805  0318                     	;# 
  2806  0319                     	;# 
  2807  031A                     	;# 
  2808  031B                     	;# 
  2809  031C                     	;# 
  2810  031C                     	;# 
  2811  031D                     	;# 
  2812  031E                     	;# 
  2813  031F                     	;# 
  2814  038C                     	;# 
  2815  038D                     	;# 
  2816  038E                     	;# 
  2817  0390                     	;# 
  2818  0391                     	;# 
  2819  0392                     	;# 
  2820  040C                     	;# 
  2821  040D                     	;# 
  2822  040E                     	;# 
  2823  040F                     	;# 
  2824  0410                     	;# 
  2825  0411                     	;# 
  2826  0416                     	;# 
  2827  0416                     	;# 
  2828  0417                     	;# 
  2829  0418                     	;# 
  2830  0418                     	;# 
  2831  0419                     	;# 
  2832  041A                     	;# 
  2833  041A                     	;# 
  2834  041B                     	;# 
  2835  041C                     	;# 
  2836  041C                     	;# 
  2837  041D                     	;# 
  2838  041E                     	;# 
  2839  041F                     	;# 
  2840  048C                     	;# 
  2841  048C                     	;# 
  2842  048D                     	;# 
  2843  048E                     	;# 
  2844  048F                     	;# 
  2845  048F                     	;# 
  2846  0490                     	;# 
  2847  0491                     	;# 
  2848  0492                     	;# 
  2849  0492                     	;# 
  2850  0493                     	;# 
  2851  0494                     	;# 
  2852  0495                     	;# 
  2853  0495                     	;# 
  2854  0496                     	;# 
  2855  0497                     	;# 
  2856  0498                     	;# 
  2857  0499                     	;# 
  2858  049A                     	;# 
  2859  049B                     	;# 
  2860  049C                     	;# 
  2861  049D                     	;# 
  2862  050C                     	;# 
  2863  050C                     	;# 
  2864  050D                     	;# 
  2865  050E                     	;# 
  2866  050F                     	;# 
  2867  050F                     	;# 
  2868  0510                     	;# 
  2869  0511                     	;# 
  2870  0512                     	;# 
  2871  0512                     	;# 
  2872  0513                     	;# 
  2873  0514                     	;# 
  2874  0515                     	;# 
  2875  0515                     	;# 
  2876  0516                     	;# 
  2877  0517                     	;# 
  2878  0518                     	;# 
  2879  0519                     	;# 
  2880  051A                     	;# 
  2881  051B                     	;# 
  2882  051C                     	;# 
  2883  051D                     	;# 
  2884  058C                     	;# 
  2885  058C                     	;# 
  2886  058D                     	;# 
  2887  058E                     	;# 
  2888  058F                     	;# 
  2889  058F                     	;# 
  2890  0590                     	;# 
  2891  0591                     	;# 
  2892  0592                     	;# 
  2893  0593                     	;# 
  2894  060C                     	;# 
  2895  060D                     	;# 
  2896  060E                     	;# 
  2897  060F                     	;# 
  2898  0610                     	;# 
  2899  0611                     	;# 
  2900  0612                     	;# 
  2901  0613                     	;# 
  2902  0614                     	;# 
  2903  0616                     	;# 
  2904  0617                     	;# 
  2905  0618                     	;# 
  2906  0619                     	;# 
  2907  061A                     	;# 
  2908  061B                     	;# 
  2909  061C                     	;# 
  2910  061D                     	;# 
  2911  061E                     	;# 
  2912  068C                     	;# 
  2913  068D                     	;# 
  2914  068E                     	;# 
  2915  068F                     	;# 
  2916  0690                     	;# 
  2917  0691                     	;# 
  2918  0692                     	;# 
  2919  0693                     	;# 
  2920  0694                     	;# 
  2921  070C                     	;# 
  2922  070D                     	;# 
  2923  070E                     	;# 
  2924  070F                     	;# 
  2925  0710                     	;# 
  2926  0711                     	;# 
  2927  0712                     	;# 
  2928  0713                     	;# 
  2929  0714                     	;# 
  2930  0716                     	;# 
  2931  0717                     	;# 
  2932  0718                     	;# 
  2933  0719                     	;# 
  2934  071A                     	;# 
  2935  071B                     	;# 
  2936  071C                     	;# 
  2937  071D                     	;# 
  2938  071E                     	;# 
  2939  0796                     	;# 
  2940  0797                     	;# 
  2941  0798                     	;# 
  2942  0799                     	;# 
  2943  079A                     	;# 
  2944  079B                     	;# 
  2945  080C                     	;# 
  2946  080D                     	;# 
  2947  080E                     	;# 
  2948  080F                     	;# 
  2949  0810                     	;# 
  2950  0811                     	;# 
  2951  0812                     	;# 
  2952  0813                     	;# 
  2953  0814                     	;# 
  2954  081A                     	;# 
  2955  081B                     	;# 
  2956  081C                     	;# 
  2957  081D                     	;# 
  2958  081E                     	;# 
  2959  081F                     	;# 
  2960  088C                     	;# 
  2961  088D                     	;# 
  2962  088E                     	;# 
  2963  088F                     	;# 
  2964  0890                     	;# 
  2965  0891                     	;# 
  2966  0892                     	;# 
  2967  0893                     	;# 
  2968  0895                     	;# 
  2969  0896                     	;# 
  2970  0897                     	;# 
  2971  0898                     	;# 
  2972  0899                     	;# 
  2973  089A                     	;# 
  2974  089B                     	;# 
  2975  090C                     	;# 
  2976  090E                     	;# 
  2977  090F                     	;# 
  2978  091F                     	;# 
  2979  091F                     	;# 
  2980  098F                     	;# 
  2981  098F                     	;# 
  2982  0990                     	;# 
  2983  0991                     	;# 
  2984  0992                     	;# 
  2985  0993                     	;# 
  2986  0994                     	;# 
  2987  0995                     	;# 
  2988  0996                     	;# 
  2989  0997                     	;# 
  2990  0E0F                     	;# 
  2991  0E10                     	;# 
  2992  0E11                     	;# 
  2993  0E12                     	;# 
  2994  0E13                     	;# 
  2995  0E14                     	;# 
  2996  0E15                     	;# 
  2997  0E16                     	;# 
  2998  0E17                     	;# 
  2999  0E18                     	;# 
  3000  0E19                     	;# 
  3001  0E1A                     	;# 
  3002  0E1B                     	;# 
  3003  0E1C                     	;# 
  3004  0E1D                     	;# 
  3005  0E1E                     	;# 
  3006  0E1F                     	;# 
  3007  0E20                     	;# 
  3008  0E21                     	;# 
  3009  0E22                     	;# 
  3010  0E23                     	;# 
  3011  0E24                     	;# 
  3012  0E25                     	;# 
  3013  0E26                     	;# 
  3014  0E27                     	;# 
  3015  0E28                     	;# 
  3016  0E29                     	;# 
  3017  0E2A                     	;# 
  3018  0E2B                     	;# 
  3019  0E2C                     	;# 
  3020  0E2D                     	;# 
  3021  0E2E                     	;# 
  3022  0E2F                     	;# 
  3023  0E30                     	;# 
  3024  0E31                     	;# 
  3025  0E32                     	;# 
  3026  0E33                     	;# 
  3027  0E34                     	;# 
  3028  0E35                     	;# 
  3029  0E36                     	;# 
  3030  0E37                     	;# 
  3031  0E8F                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E93                     	;# 
  3036  0E94                     	;# 
  3037  0E95                     	;# 
  3038  0E96                     	;# 
  3039  0E97                     	;# 
  3040  0E9C                     	;# 
  3041  0E9D                     	;# 
  3042  0E9E                     	;# 
  3043  0EA1                     	;# 
  3044  0EA2                     	;# 
  3045  0EA3                     	;# 
  3046  0EA4                     	;# 
  3047  0EA5                     	;# 
  3048  0EA9                     	;# 
  3049  0EAA                     	;# 
  3050  0EAB                     	;# 
  3051  0EAC                     	;# 
  3052  0EB1                     	;# 
  3053  0EB2                     	;# 
  3054  0EB3                     	;# 
  3055  0EB8                     	;# 
  3056  0EB9                     	;# 
  3057  0EBA                     	;# 
  3058  0EBB                     	;# 
  3059  0EBC                     	;# 
  3060  0EBD                     	;# 
  3061  0EBE                     	;# 
  3062  0EC3                     	;# 
  3063  0EC5                     	;# 
  3064  0EC6                     	;# 
  3065  0EC7                     	;# 
  3066  0EC8                     	;# 
  3067  0EC9                     	;# 
  3068  0ECA                     	;# 
  3069  0ECB                     	;# 
  3070  0ECC                     	;# 
  3071  0F10                     	;# 
  3072  0F11                     	;# 
  3073  0F12                     	;# 
  3074  0F13                     	;# 
  3075  0F14                     	;# 
  3076  0F15                     	;# 
  3077  0F16                     	;# 
  3078  0F17                     	;# 
  3079  0F18                     	;# 
  3080  0F19                     	;# 
  3081  0F1A                     	;# 
  3082  0F1B                     	;# 
  3083  0F1C                     	;# 
  3084  0F1D                     	;# 
  3085  0F1E                     	;# 
  3086  0F1F                     	;# 
  3087  0F20                     	;# 
  3088  0F21                     	;# 
  3089  0F22                     	;# 
  3090  0F23                     	;# 
  3091  0F24                     	;# 
  3092  0F25                     	;# 
  3093  0F26                     	;# 
  3094  0F27                     	;# 
  3095  0F38                     	;# 
  3096  0F39                     	;# 
  3097  0F3A                     	;# 
  3098  0F3B                     	;# 
  3099  0F3C                     	;# 
  3100  0F3D                     	;# 
  3101  0F3E                     	;# 
  3102  0F3F                     	;# 
  3103  0F40                     	;# 
  3104  0F41                     	;# 
  3105  0F43                     	;# 
  3106  0F44                     	;# 
  3107  0F45                     	;# 
  3108  0F46                     	;# 
  3109  0F47                     	;# 
  3110  0F48                     	;# 
  3111  0F49                     	;# 
  3112  0F4A                     	;# 
  3113  0F4B                     	;# 
  3114  0F4C                     	;# 
  3115  0F4E                     	;# 
  3116  0F4F                     	;# 
  3117  0F50                     	;# 
  3118  0F51                     	;# 
  3119  0F52                     	;# 
  3120  0F53                     	;# 
  3121  0F54                     	;# 
  3122  0F55                     	;# 
  3123  0F56                     	;# 
  3124  0F57                     	;# 
  3125  0F65                     	;# 
  3126  0F68                     	;# 
  3127  0F69                     	;# 
  3128  0F6A                     	;# 
  3129  0F6B                     	;# 
  3130  0FE4                     	;# 
  3131  0FE5                     	;# 
  3132  0FE6                     	;# 
  3133  0FE7                     	;# 
  3134  0FE8                     	;# 
  3135  0FE9                     	;# 
  3136  0FEA                     	;# 
  3137  0FEB                     	;# 
  3138  0FED                     	;# 
  3139  0FEE                     	;# 
  3140  0FEF                     	;# 
  3141  0000                     	;# 
  3142  0001                     	;# 
  3143  0002                     	;# 
  3144  0003                     	;# 
  3145  0004                     	;# 
  3146  0005                     	;# 
  3147  0006                     	;# 
  3148  0007                     	;# 
  3149  0008                     	;# 
  3150  0009                     	;# 
  3151  000A                     	;# 
  3152  000B                     	;# 
  3153  000C                     	;# 
  3154  000D                     	;# 
  3155  000E                     	;# 
  3156  0010                     	;# 
  3157  0011                     	;# 
  3158  0012                     	;# 
  3159  0013                     	;# 
  3160  0016                     	;# 
  3161  0017                     	;# 
  3162  0018                     	;# 
  3163  001C                     	;# 
  3164  001C                     	;# 
  3165  001D                     	;# 
  3166  001D                     	;# 
  3167  001E                     	;# 
  3168  001F                     	;# 
  3169  008C                     	;# 
  3170  008C                     	;# 
  3171  008D                     	;# 
  3172  008E                     	;# 
  3173  008E                     	;# 
  3174  008F                     	;# 
  3175  0090                     	;# 
  3176  0090                     	;# 
  3177  0091                     	;# 
  3178  0093                     	;# 
  3179  0094                     	;# 
  3180  0095                     	;# 
  3181  0096                     	;# 
  3182  0097                     	;# 
  3183  0098                     	;# 
  3184  0099                     	;# 
  3185  009A                     	;# 
  3186  009B                     	;# 
  3187  009C                     	;# 
  3188  009D                     	;# 
  3189  009E                     	;# 
  3190  010C                     	;# 
  3191  010D                     	;# 
  3192  010E                     	;# 
  3193  010E                     	;# 
  3194  010F                     	;# 
  3195  0110                     	;# 
  3196  0110                     	;# 
  3197  0111                     	;# 
  3198  0112                     	;# 
  3199  0112                     	;# 
  3200  0113                     	;# 
  3201  0114                     	;# 
  3202  0114                     	;# 
  3203  0115                     	;# 
  3204  0116                     	;# 
  3205  0116                     	;# 
  3206  0117                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  0119                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011A                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011C                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011D                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011E                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  018C                     	;# 
  3233  018D                     	;# 
  3234  018E                     	;# 
  3235  018F                     	;# 
  3236  0190                     	;# 
  3237  0191                     	;# 
  3238  0192                     	;# 
  3239  0196                     	;# 
  3240  0197                     	;# 
  3241  0198                     	;# 
  3242  0199                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019C                     	;# 
  3246  020C                     	;# 
  3247  020D                     	;# 
  3248  020E                     	;# 
  3249  020F                     	;# 
  3250  020F                     	;# 
  3251  0210                     	;# 
  3252  0210                     	;# 
  3253  0211                     	;# 
  3254  0211                     	;# 
  3255  0212                     	;# 
  3256  0213                     	;# 
  3257  0214                     	;# 
  3258  0215                     	;# 
  3259  0215                     	;# 
  3260  0216                     	;# 
  3261  0216                     	;# 
  3262  0217                     	;# 
  3263  0217                     	;# 
  3264  0218                     	;# 
  3265  0219                     	;# 
  3266  021A                     	;# 
  3267  021B                     	;# 
  3268  021B                     	;# 
  3269  021C                     	;# 
  3270  021C                     	;# 
  3271  021D                     	;# 
  3272  021D                     	;# 
  3273  021E                     	;# 
  3274  021F                     	;# 
  3275  028C                     	;# 
  3276  028C                     	;# 
  3277  028D                     	;# 
  3278  028D                     	;# 
  3279  028E                     	;# 
  3280  028F                     	;# 
  3281  0290                     	;# 
  3282  0290                     	;# 
  3283  0291                     	;# 
  3284  0292                     	;# 
  3285  0292                     	;# 
  3286  0293                     	;# 
  3287  0293                     	;# 
  3288  0294                     	;# 
  3289  0295                     	;# 
  3290  0296                     	;# 
  3291  0296                     	;# 
  3292  0297                     	;# 
  3293  0298                     	;# 
  3294  0298                     	;# 
  3295  0299                     	;# 
  3296  0299                     	;# 
  3297  029A                     	;# 
  3298  029B                     	;# 
  3299  029C                     	;# 
  3300  029C                     	;# 
  3301  029D                     	;# 
  3302  030C                     	;# 
  3303  030C                     	;# 
  3304  030D                     	;# 
  3305  030E                     	;# 
  3306  030F                     	;# 
  3307  0310                     	;# 
  3308  0310                     	;# 
  3309  0311                     	;# 
  3310  0312                     	;# 
  3311  0313                     	;# 
  3312  0314                     	;# 
  3313  0314                     	;# 
  3314  0315                     	;# 
  3315  0316                     	;# 
  3316  0317                     	;# 
  3317  0318                     	;# 
  3318  0318                     	;# 
  3319  0319                     	;# 
  3320  031A                     	;# 
  3321  031B                     	;# 
  3322  031C                     	;# 
  3323  031C                     	;# 
  3324  031D                     	;# 
  3325  031E                     	;# 
  3326  031F                     	;# 
  3327  038C                     	;# 
  3328  038D                     	;# 
  3329  038E                     	;# 
  3330  0390                     	;# 
  3331  0391                     	;# 
  3332  0392                     	;# 
  3333  040C                     	;# 
  3334  040D                     	;# 
  3335  040E                     	;# 
  3336  040F                     	;# 
  3337  0410                     	;# 
  3338  0411                     	;# 
  3339  0416                     	;# 
  3340  0416                     	;# 
  3341  0417                     	;# 
  3342  0418                     	;# 
  3343  0418                     	;# 
  3344  0419                     	;# 
  3345  041A                     	;# 
  3346  041A                     	;# 
  3347  041B                     	;# 
  3348  041C                     	;# 
  3349  041C                     	;# 
  3350  041D                     	;# 
  3351  041E                     	;# 
  3352  041F                     	;# 
  3353  048C                     	;# 
  3354  048C                     	;# 
  3355  048D                     	;# 
  3356  048E                     	;# 
  3357  048F                     	;# 
  3358  048F                     	;# 
  3359  0490                     	;# 
  3360  0491                     	;# 
  3361  0492                     	;# 
  3362  0492                     	;# 
  3363  0493                     	;# 
  3364  0494                     	;# 
  3365  0495                     	;# 
  3366  0495                     	;# 
  3367  0496                     	;# 
  3368  0497                     	;# 
  3369  0498                     	;# 
  3370  0499                     	;# 
  3371  049A                     	;# 
  3372  049B                     	;# 
  3373  049C                     	;# 
  3374  049D                     	;# 
  3375  050C                     	;# 
  3376  050C                     	;# 
  3377  050D                     	;# 
  3378  050E                     	;# 
  3379  050F                     	;# 
  3380  050F                     	;# 
  3381  0510                     	;# 
  3382  0511                     	;# 
  3383  0512                     	;# 
  3384  0512                     	;# 
  3385  0513                     	;# 
  3386  0514                     	;# 
  3387  0515                     	;# 
  3388  0515                     	;# 
  3389  0516                     	;# 
  3390  0517                     	;# 
  3391  0518                     	;# 
  3392  0519                     	;# 
  3393  051A                     	;# 
  3394  051B                     	;# 
  3395  051C                     	;# 
  3396  051D                     	;# 
  3397  058C                     	;# 
  3398  058C                     	;# 
  3399  058D                     	;# 
  3400  058E                     	;# 
  3401  058F                     	;# 
  3402  058F                     	;# 
  3403  0590                     	;# 
  3404  0591                     	;# 
  3405  0592                     	;# 
  3406  0593                     	;# 
  3407  060C                     	;# 
  3408  060D                     	;# 
  3409  060E                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0616                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061B                     	;# 
  3422  061C                     	;# 
  3423  061D                     	;# 
  3424  061E                     	;# 
  3425  068C                     	;# 
  3426  068D                     	;# 
  3427  068E                     	;# 
  3428  068F                     	;# 
  3429  0690                     	;# 
  3430  0691                     	;# 
  3431  0692                     	;# 
  3432  0693                     	;# 
  3433  0694                     	;# 
  3434  070C                     	;# 
  3435  070D                     	;# 
  3436  070E                     	;# 
  3437  070F                     	;# 
  3438  0710                     	;# 
  3439  0711                     	;# 
  3440  0712                     	;# 
  3441  0713                     	;# 
  3442  0714                     	;# 
  3443  0716                     	;# 
  3444  0717                     	;# 
  3445  0718                     	;# 
  3446  0719                     	;# 
  3447  071A                     	;# 
  3448  071B                     	;# 
  3449  071C                     	;# 
  3450  071D                     	;# 
  3451  071E                     	;# 
  3452  0796                     	;# 
  3453  0797                     	;# 
  3454  0798                     	;# 
  3455  0799                     	;# 
  3456  079A                     	;# 
  3457  079B                     	;# 
  3458  080C                     	;# 
  3459  080D                     	;# 
  3460  080E                     	;# 
  3461  080F                     	;# 
  3462  0810                     	;# 
  3463  0811                     	;# 
  3464  0812                     	;# 
  3465  0813                     	;# 
  3466  0814                     	;# 
  3467  081A                     	;# 
  3468  081B                     	;# 
  3469  081C                     	;# 
  3470  081D                     	;# 
  3471  081E                     	;# 
  3472  081F                     	;# 
  3473  088C                     	;# 
  3474  088D                     	;# 
  3475  088E                     	;# 
  3476  088F                     	;# 
  3477  0890                     	;# 
  3478  0891                     	;# 
  3479  0892                     	;# 
  3480  0893                     	;# 
  3481  0895                     	;# 
  3482  0896                     	;# 
  3483  0897                     	;# 
  3484  0898                     	;# 
  3485  0899                     	;# 
  3486  089A                     	;# 
  3487  089B                     	;# 
  3488  090C                     	;# 
  3489  090E                     	;# 
  3490  090F                     	;# 
  3491  091F                     	;# 
  3492  091F                     	;# 
  3493  098F                     	;# 
  3494  098F                     	;# 
  3495  0990                     	;# 
  3496  0991                     	;# 
  3497  0992                     	;# 
  3498  0993                     	;# 
  3499  0994                     	;# 
  3500  0995                     	;# 
  3501  0996                     	;# 
  3502  0997                     	;# 
  3503  0E0F                     	;# 
  3504  0E10                     	;# 
  3505  0E11                     	;# 
  3506  0E12                     	;# 
  3507  0E13                     	;# 
  3508  0E14                     	;# 
  3509  0E15                     	;# 
  3510  0E16                     	;# 
  3511  0E17                     	;# 
  3512  0E18                     	;# 
  3513  0E19                     	;# 
  3514  0E1A                     	;# 
  3515  0E1B                     	;# 
  3516  0E1C                     	;# 
  3517  0E1D                     	;# 
  3518  0E1E                     	;# 
  3519  0E1F                     	;# 
  3520  0E20                     	;# 
  3521  0E21                     	;# 
  3522  0E22                     	;# 
  3523  0E23                     	;# 
  3524  0E24                     	;# 
  3525  0E25                     	;# 
  3526  0E26                     	;# 
  3527  0E27                     	;# 
  3528  0E28                     	;# 
  3529  0E29                     	;# 
  3530  0E2A                     	;# 
  3531  0E2B                     	;# 
  3532  0E2C                     	;# 
  3533  0E2D                     	;# 
  3534  0E2E                     	;# 
  3535  0E2F                     	;# 
  3536  0E30                     	;# 
  3537  0E31                     	;# 
  3538  0E32                     	;# 
  3539  0E33                     	;# 
  3540  0E34                     	;# 
  3541  0E35                     	;# 
  3542  0E36                     	;# 
  3543  0E37                     	;# 
  3544  0E8F                     	;# 
  3545  0E90                     	;# 
  3546  0E91                     	;# 
  3547  0E92                     	;# 
  3548  0E93                     	;# 
  3549  0E94                     	;# 
  3550  0E95                     	;# 
  3551  0E96                     	;# 
  3552  0E97                     	;# 
  3553  0E9C                     	;# 
  3554  0E9D                     	;# 
  3555  0E9E                     	;# 
  3556  0EA1                     	;# 
  3557  0EA2                     	;# 
  3558  0EA3                     	;# 
  3559  0EA4                     	;# 
  3560  0EA5                     	;# 
  3561  0EA9                     	;# 
  3562  0EAA                     	;# 
  3563  0EAB                     	;# 
  3564  0EAC                     	;# 
  3565  0EB1                     	;# 
  3566  0EB2                     	;# 
  3567  0EB3                     	;# 
  3568  0EB8                     	;# 
  3569  0EB9                     	;# 
  3570  0EBA                     	;# 
  3571  0EBB                     	;# 
  3572  0EBC                     	;# 
  3573  0EBD                     	;# 
  3574  0EBE                     	;# 
  3575  0EC3                     	;# 
  3576  0EC5                     	;# 
  3577  0EC6                     	;# 
  3578  0EC7                     	;# 
  3579  0EC8                     	;# 
  3580  0EC9                     	;# 
  3581  0ECA                     	;# 
  3582  0ECB                     	;# 
  3583  0ECC                     	;# 
  3584  0F10                     	;# 
  3585  0F11                     	;# 
  3586  0F12                     	;# 
  3587  0F13                     	;# 
  3588  0F14                     	;# 
  3589  0F15                     	;# 
  3590  0F16                     	;# 
  3591  0F17                     	;# 
  3592  0F18                     	;# 
  3593  0F19                     	;# 
  3594  0F1A                     	;# 
  3595  0F1B                     	;# 
  3596  0F1C                     	;# 
  3597  0F1D                     	;# 
  3598  0F1E                     	;# 
  3599  0F1F                     	;# 
  3600  0F20                     	;# 
  3601  0F21                     	;# 
  3602  0F22                     	;# 
  3603  0F23                     	;# 
  3604  0F24                     	;# 
  3605  0F25                     	;# 
  3606  0F26                     	;# 
  3607  0F27                     	;# 
  3608  0F38                     	;# 
  3609  0F39                     	;# 
  3610  0F3A                     	;# 
  3611  0F3B                     	;# 
  3612  0F3C                     	;# 
  3613  0F3D                     	;# 
  3614  0F3E                     	;# 
  3615  0F3F                     	;# 
  3616  0F40                     	;# 
  3617  0F41                     	;# 
  3618  0F43                     	;# 
  3619  0F44                     	;# 
  3620  0F45                     	;# 
  3621  0F46                     	;# 
  3622  0F47                     	;# 
  3623  0F48                     	;# 
  3624  0F49                     	;# 
  3625  0F4A                     	;# 
  3626  0F4B                     	;# 
  3627  0F4C                     	;# 
  3628  0F4E                     	;# 
  3629  0F4F                     	;# 
  3630  0F50                     	;# 
  3631  0F51                     	;# 
  3632  0F52                     	;# 
  3633  0F53                     	;# 
  3634  0F54                     	;# 
  3635  0F55                     	;# 
  3636  0F56                     	;# 
  3637  0F57                     	;# 
  3638  0F65                     	;# 
  3639  0F68                     	;# 
  3640  0F69                     	;# 
  3641  0F6A                     	;# 
  3642  0F6B                     	;# 
  3643  0FE4                     	;# 
  3644  0FE5                     	;# 
  3645  0FE6                     	;# 
  3646  0FE7                     	;# 
  3647  0FE8                     	;# 
  3648  0FE9                     	;# 
  3649  0FEA                     	;# 
  3650  0FEB                     	;# 
  3651  0FED                     	;# 
  3652  0FEE                     	;# 
  3653  0FEF                     	;# 
  3654  0000                     	;# 
  3655  0001                     	;# 
  3656  0002                     	;# 
  3657  0003                     	;# 
  3658  0004                     	;# 
  3659  0005                     	;# 
  3660  0006                     	;# 
  3661  0007                     	;# 
  3662  0008                     	;# 
  3663  0009                     	;# 
  3664  000A                     	;# 
  3665  000B                     	;# 
  3666  000C                     	;# 
  3667  000D                     	;# 
  3668  000E                     	;# 
  3669  0010                     	;# 
  3670  0011                     	;# 
  3671  0012                     	;# 
  3672  0013                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  001C                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001D                     	;# 
  3680  001E                     	;# 
  3681  001F                     	;# 
  3682  008C                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  008E                     	;# 
  3687  008F                     	;# 
  3688  0090                     	;# 
  3689  0090                     	;# 
  3690  0091                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0095                     	;# 
  3694  0096                     	;# 
  3695  0097                     	;# 
  3696  0098                     	;# 
  3697  0099                     	;# 
  3698  009A                     	;# 
  3699  009B                     	;# 
  3700  009C                     	;# 
  3701  009D                     	;# 
  3702  009E                     	;# 
  3703  010C                     	;# 
  3704  010D                     	;# 
  3705  010E                     	;# 
  3706  010E                     	;# 
  3707  010F                     	;# 
  3708  0110                     	;# 
  3709  0110                     	;# 
  3710  0111                     	;# 
  3711  0112                     	;# 
  3712  0112                     	;# 
  3713  0113                     	;# 
  3714  0114                     	;# 
  3715  0114                     	;# 
  3716  0115                     	;# 
  3717  0116                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  0119                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011A                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011C                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011D                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011E                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  018C                     	;# 
  3746  018D                     	;# 
  3747  018E                     	;# 
  3748  018F                     	;# 
  3749  0190                     	;# 
  3750  0191                     	;# 
  3751  0192                     	;# 
  3752  0196                     	;# 
  3753  0197                     	;# 
  3754  0198                     	;# 
  3755  0199                     	;# 
  3756  019A                     	;# 
  3757  019B                     	;# 
  3758  019C                     	;# 
  3759  020C                     	;# 
  3760  020D                     	;# 
  3761  020E                     	;# 
  3762  020F                     	;# 
  3763  020F                     	;# 
  3764  0210                     	;# 
  3765  0210                     	;# 
  3766  0211                     	;# 
  3767  0211                     	;# 
  3768  0212                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0216                     	;# 
  3774  0216                     	;# 
  3775  0217                     	;# 
  3776  0217                     	;# 
  3777  0218                     	;# 
  3778  0219                     	;# 
  3779  021A                     	;# 
  3780  021B                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028C                     	;# 
  3790  028D                     	;# 
  3791  028D                     	;# 
  3792  028E                     	;# 
  3793  028F                     	;# 
  3794  0290                     	;# 
  3795  0290                     	;# 
  3796  0291                     	;# 
  3797  0292                     	;# 
  3798  0292                     	;# 
  3799  0293                     	;# 
  3800  0293                     	;# 
  3801  0294                     	;# 
  3802  0295                     	;# 
  3803  0296                     	;# 
  3804  0296                     	;# 
  3805  0297                     	;# 
  3806  0298                     	;# 
  3807  0298                     	;# 
  3808  0299                     	;# 
  3809  0299                     	;# 
  3810  029A                     	;# 
  3811  029B                     	;# 
  3812  029C                     	;# 
  3813  029C                     	;# 
  3814  029D                     	;# 
  3815  030C                     	;# 
  3816  030C                     	;# 
  3817  030D                     	;# 
  3818  030E                     	;# 
  3819  030F                     	;# 
  3820  0310                     	;# 
  3821  0310                     	;# 
  3822  0311                     	;# 
  3823  0312                     	;# 
  3824  0313                     	;# 
  3825  0314                     	;# 
  3826  0314                     	;# 
  3827  0315                     	;# 
  3828  0316                     	;# 
  3829  0317                     	;# 
  3830  0318                     	;# 
  3831  0318                     	;# 
  3832  0319                     	;# 
  3833  031A                     	;# 
  3834  031B                     	;# 
  3835  031C                     	;# 
  3836  031C                     	;# 
  3837  031D                     	;# 
  3838  031E                     	;# 
  3839  031F                     	;# 
  3840  038C                     	;# 
  3841  038D                     	;# 
  3842  038E                     	;# 
  3843  0390                     	;# 
  3844  0391                     	;# 
  3845  0392                     	;# 
  3846  040C                     	;# 
  3847  040D                     	;# 
  3848  040E                     	;# 
  3849  040F                     	;# 
  3850  0410                     	;# 
  3851  0411                     	;# 
  3852  0416                     	;# 
  3853  0416                     	;# 
  3854  0417                     	;# 
  3855  0418                     	;# 
  3856  0418                     	;# 
  3857  0419                     	;# 
  3858  041A                     	;# 
  3859  041A                     	;# 
  3860  041B                     	;# 
  3861  041C                     	;# 
  3862  041C                     	;# 
  3863  041D                     	;# 
  3864  041E                     	;# 
  3865  041F                     	;# 
  3866  048C                     	;# 
  3867  048C                     	;# 
  3868  048D                     	;# 
  3869  048E                     	;# 
  3870  048F                     	;# 
  3871  048F                     	;# 
  3872  0490                     	;# 
  3873  0491                     	;# 
  3874  0492                     	;# 
  3875  0492                     	;# 
  3876  0493                     	;# 
  3877  0494                     	;# 
  3878  0495                     	;# 
  3879  0495                     	;# 
  3880  0496                     	;# 
  3881  0497                     	;# 
  3882  0498                     	;# 
  3883  0499                     	;# 
  3884  049A                     	;# 
  3885  049B                     	;# 
  3886  049C                     	;# 
  3887  049D                     	;# 
  3888  050C                     	;# 
  3889  050C                     	;# 
  3890  050D                     	;# 
  3891  050E                     	;# 
  3892  050F                     	;# 
  3893  050F                     	;# 
  3894  0510                     	;# 
  3895  0511                     	;# 
  3896  0512                     	;# 
  3897  0512                     	;# 
  3898  0513                     	;# 
  3899  0514                     	;# 
  3900  0515                     	;# 
  3901  0515                     	;# 
  3902  0516                     	;# 
  3903  0517                     	;# 
  3904  0518                     	;# 
  3905  0519                     	;# 
  3906  051A                     	;# 
  3907  051B                     	;# 
  3908  051C                     	;# 
  3909  051D                     	;# 
  3910  058C                     	;# 
  3911  058C                     	;# 
  3912  058D                     	;# 
  3913  058E                     	;# 
  3914  058F                     	;# 
  3915  058F                     	;# 
  3916  0590                     	;# 
  3917  0591                     	;# 
  3918  0592                     	;# 
  3919  0593                     	;# 
  3920  060C                     	;# 
  3921  060D                     	;# 
  3922  060E                     	;# 
  3923  060F                     	;# 
  3924  0610                     	;# 
  3925  0611                     	;# 
  3926  0612                     	;# 
  3927  0613                     	;# 
  3928  0614                     	;# 
  3929  0616                     	;# 
  3930  0617                     	;# 
  3931  0618                     	;# 
  3932  0619                     	;# 
  3933  061A                     	;# 
  3934  061B                     	;# 
  3935  061C                     	;# 
  3936  061D                     	;# 
  3937  061E                     	;# 
  3938  068C                     	;# 
  3939  068D                     	;# 
  3940  068E                     	;# 
  3941  068F                     	;# 
  3942  0690                     	;# 
  3943  0691                     	;# 
  3944  0692                     	;# 
  3945  0693                     	;# 
  3946  0694                     	;# 
  3947  070C                     	;# 
  3948  070D                     	;# 
  3949  070E                     	;# 
  3950  070F                     	;# 
  3951  0710                     	;# 
  3952  0711                     	;# 
  3953  0712                     	;# 
  3954  0713                     	;# 
  3955  0714                     	;# 
  3956  0716                     	;# 
  3957  0717                     	;# 
  3958  0718                     	;# 
  3959  0719                     	;# 
  3960  071A                     	;# 
  3961  071B                     	;# 
  3962  071C                     	;# 
  3963  071D                     	;# 
  3964  071E                     	;# 
  3965  0796                     	;# 
  3966  0797                     	;# 
  3967  0798                     	;# 
  3968  0799                     	;# 
  3969  079A                     	;# 
  3970  079B                     	;# 
  3971  080C                     	;# 
  3972  080D                     	;# 
  3973  080E                     	;# 
  3974  080F                     	;# 
  3975  0810                     	;# 
  3976  0811                     	;# 
  3977  0812                     	;# 
  3978  0813                     	;# 
  3979  0814                     	;# 
  3980  081A                     	;# 
  3981  081B                     	;# 
  3982  081C                     	;# 
  3983  081D                     	;# 
  3984  081E                     	;# 
  3985  081F                     	;# 
  3986  088C                     	;# 
  3987  088D                     	;# 
  3988  088E                     	;# 
  3989  088F                     	;# 
  3990  0890                     	;# 
  3991  0891                     	;# 
  3992  0892                     	;# 
  3993  0893                     	;# 
  3994  0895                     	;# 
  3995  0896                     	;# 
  3996  0897                     	;# 
  3997  0898                     	;# 
  3998  0899                     	;# 
  3999  089A                     	;# 
  4000  089B                     	;# 
  4001  090C                     	;# 
  4002  090E                     	;# 
  4003  090F                     	;# 
  4004  091F                     	;# 
  4005  091F                     	;# 
  4006  098F                     	;# 
  4007  098F                     	;# 
  4008  0990                     	;# 
  4009  0991                     	;# 
  4010  0992                     	;# 
  4011  0993                     	;# 
  4012  0994                     	;# 
  4013  0995                     	;# 
  4014  0996                     	;# 
  4015  0997                     	;# 
  4016  0E0F                     	;# 
  4017  0E10                     	;# 
  4018  0E11                     	;# 
  4019  0E12                     	;# 
  4020  0E13                     	;# 
  4021  0E14                     	;# 
  4022  0E15                     	;# 
  4023  0E16                     	;# 
  4024  0E17                     	;# 
  4025  0E18                     	;# 
  4026  0E19                     	;# 
  4027  0E1A                     	;# 
  4028  0E1B                     	;# 
  4029  0E1C                     	;# 
  4030  0E1D                     	;# 
  4031  0E1E                     	;# 
  4032  0E1F                     	;# 
  4033  0E20                     	;# 
  4034  0E21                     	;# 
  4035  0E22                     	;# 
  4036  0E23                     	;# 
  4037  0E24                     	;# 
  4038  0E25                     	;# 
  4039  0E26                     	;# 
  4040  0E27                     	;# 
  4041  0E28                     	;# 
  4042  0E29                     	;# 
  4043  0E2A                     	;# 
  4044  0E2B                     	;# 
  4045  0E2C                     	;# 
  4046  0E2D                     	;# 
  4047  0E2E                     	;# 
  4048  0E2F                     	;# 
  4049  0E30                     	;# 
  4050  0E31                     	;# 
  4051  0E32                     	;# 
  4052  0E33                     	;# 
  4053  0E34                     	;# 
  4054  0E35                     	;# 
  4055  0E36                     	;# 
  4056  0E37                     	;# 
  4057  0E8F                     	;# 
  4058  0E90                     	;# 
  4059  0E91                     	;# 
  4060  0E92                     	;# 
  4061  0E93                     	;# 
  4062  0E94                     	;# 
  4063  0E95                     	;# 
  4064  0E96                     	;# 
  4065  0E97                     	;# 
  4066  0E9C                     	;# 
  4067  0E9D                     	;# 
  4068  0E9E                     	;# 
  4069  0EA1                     	;# 
  4070  0EA2                     	;# 
  4071  0EA3                     	;# 
  4072  0EA4                     	;# 
  4073  0EA5                     	;# 
  4074  0EA9                     	;# 
  4075  0EAA                     	;# 
  4076  0EAB                     	;# 
  4077  0EAC                     	;# 
  4078  0EB1                     	;# 
  4079  0EB2                     	;# 
  4080  0EB3                     	;# 
  4081  0EB8                     	;# 
  4082  0EB9                     	;# 
  4083  0EBA                     	;# 
  4084  0EBB                     	;# 
  4085  0EBC                     	;# 
  4086  0EBD                     	;# 
  4087  0EBE                     	;# 
  4088  0EC3                     	;# 
  4089  0EC5                     	;# 
  4090  0EC6                     	;# 
  4091  0EC7                     	;# 
  4092  0EC8                     	;# 
  4093  0EC9                     	;# 
  4094  0ECA                     	;# 
  4095  0ECB                     	;# 
  4096  0ECC                     	;# 
  4097  0F10                     	;# 
  4098  0F11                     	;# 
  4099  0F12                     	;# 
  4100  0F13                     	;# 
  4101  0F14                     	;# 
  4102  0F15                     	;# 
  4103  0F16                     	;# 
  4104  0F17                     	;# 
  4105  0F18                     	;# 
  4106  0F19                     	;# 
  4107  0F1A                     	;# 
  4108  0F1B                     	;# 
  4109  0F1C                     	;# 
  4110  0F1D                     	;# 
  4111  0F1E                     	;# 
  4112  0F1F                     	;# 
  4113  0F20                     	;# 
  4114  0F21                     	;# 
  4115  0F22                     	;# 
  4116  0F23                     	;# 
  4117  0F24                     	;# 
  4118  0F25                     	;# 
  4119  0F26                     	;# 
  4120  0F27                     	;# 
  4121  0F38                     	;# 
  4122  0F39                     	;# 
  4123  0F3A                     	;# 
  4124  0F3B                     	;# 
  4125  0F3C                     	;# 
  4126  0F3D                     	;# 
  4127  0F3E                     	;# 
  4128  0F3F                     	;# 
  4129  0F40                     	;# 
  4130  0F41                     	;# 
  4131  0F43                     	;# 
  4132  0F44                     	;# 
  4133  0F45                     	;# 
  4134  0F46                     	;# 
  4135  0F47                     	;# 
  4136  0F48                     	;# 
  4137  0F49                     	;# 
  4138  0F4A                     	;# 
  4139  0F4B                     	;# 
  4140  0F4C                     	;# 
  4141  0F4E                     	;# 
  4142  0F4F                     	;# 
  4143  0F50                     	;# 
  4144  0F51                     	;# 
  4145  0F52                     	;# 
  4146  0F53                     	;# 
  4147  0F54                     	;# 
  4148  0F55                     	;# 
  4149  0F56                     	;# 
  4150  0F57                     	;# 
  4151  0F65                     	;# 
  4152  0F68                     	;# 
  4153  0F69                     	;# 
  4154  0F6A                     	;# 
  4155  0F6B                     	;# 
  4156  0FE4                     	;# 
  4157  0FE5                     	;# 
  4158  0FE6                     	;# 
  4159  0FE7                     	;# 
  4160  0FE8                     	;# 
  4161  0FE9                     	;# 
  4162  0FEA                     	;# 
  4163  0FEB                     	;# 
  4164  0FED                     	;# 
  4165  0FEE                     	;# 
  4166  0FEF                     	;# 
  4167  0000                     	;# 
  4168  0001                     	;# 
  4169  0002                     	;# 
  4170  0003                     	;# 
  4171  0004                     	;# 
  4172  0005                     	;# 
  4173  0006                     	;# 
  4174  0007                     	;# 
  4175  0008                     	;# 
  4176  0009                     	;# 
  4177  000A                     	;# 
  4178  000B                     	;# 
  4179  000C                     	;# 
  4180  000D                     	;# 
  4181  000E                     	;# 
  4182  0010                     	;# 
  4183  0011                     	;# 
  4184  0012                     	;# 
  4185  0013                     	;# 
  4186  0016                     	;# 
  4187  0017                     	;# 
  4188  0018                     	;# 
  4189  001C                     	;# 
  4190  001C                     	;# 
  4191  001D                     	;# 
  4192  001D                     	;# 
  4193  001E                     	;# 
  4194  001F                     	;# 
  4195  008C                     	;# 
  4196  008C                     	;# 
  4197  008D                     	;# 
  4198  008E                     	;# 
  4199  008E                     	;# 
  4200  008F                     	;# 
  4201  0090                     	;# 
  4202  0090                     	;# 
  4203  0091                     	;# 
  4204  0093                     	;# 
  4205  0094                     	;# 
  4206  0095                     	;# 
  4207  0096                     	;# 
  4208  0097                     	;# 
  4209  0098                     	;# 
  4210  0099                     	;# 
  4211  009A                     	;# 
  4212  009B                     	;# 
  4213  009C                     	;# 
  4214  009D                     	;# 
  4215  009E                     	;# 
  4216  010C                     	;# 
  4217  010D                     	;# 
  4218  010E                     	;# 
  4219  010E                     	;# 
  4220  010F                     	;# 
  4221  0110                     	;# 
  4222  0110                     	;# 
  4223  0111                     	;# 
  4224  0112                     	;# 
  4225  0112                     	;# 
  4226  0113                     	;# 
  4227  0114                     	;# 
  4228  0114                     	;# 
  4229  0115                     	;# 
  4230  0116                     	;# 
  4231  0116                     	;# 
  4232  0117                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  0119                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011A                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011B                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011C                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011D                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011E                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  011F                     	;# 
  4258  018C                     	;# 
  4259  018D                     	;# 
  4260  018E                     	;# 
  4261  018F                     	;# 
  4262  0190                     	;# 
  4263  0191                     	;# 
  4264  0192                     	;# 
  4265  0196                     	;# 
  4266  0197                     	;# 
  4267  0198                     	;# 
  4268  0199                     	;# 
  4269  019A                     	;# 
  4270  019B                     	;# 
  4271  019C                     	;# 
  4272  020C                     	;# 
  4273  020D                     	;# 
  4274  020E                     	;# 
  4275  020F                     	;# 
  4276  020F                     	;# 
  4277  0210                     	;# 
  4278  0210                     	;# 
  4279  0211                     	;# 
  4280  0211                     	;# 
  4281  0212                     	;# 
  4282  0213                     	;# 
  4283  0214                     	;# 
  4284  0215                     	;# 
  4285  0215                     	;# 
  4286  0216                     	;# 
  4287  0216                     	;# 
  4288  0217                     	;# 
  4289  0217                     	;# 
  4290  0218                     	;# 
  4291  0219                     	;# 
  4292  021A                     	;# 
  4293  021B                     	;# 
  4294  021B                     	;# 
  4295  021C                     	;# 
  4296  021C                     	;# 
  4297  021D                     	;# 
  4298  021D                     	;# 
  4299  021E                     	;# 
  4300  021F                     	;# 
  4301  028C                     	;# 
  4302  028C                     	;# 
  4303  028D                     	;# 
  4304  028D                     	;# 
  4305  028E                     	;# 
  4306  028F                     	;# 
  4307  0290                     	;# 
  4308  0290                     	;# 
  4309  0291                     	;# 
  4310  0292                     	;# 
  4311  0292                     	;# 
  4312  0293                     	;# 
  4313  0293                     	;# 
  4314  0294                     	;# 
  4315  0295                     	;# 
  4316  0296                     	;# 
  4317  0296                     	;# 
  4318  0297                     	;# 
  4319  0298                     	;# 
  4320  0298                     	;# 
  4321  0299                     	;# 
  4322  0299                     	;# 
  4323  029A                     	;# 
  4324  029B                     	;# 
  4325  029C                     	;# 
  4326  029C                     	;# 
  4327  029D                     	;# 
  4328  030C                     	;# 
  4329  030C                     	;# 
  4330  030D                     	;# 
  4331  030E                     	;# 
  4332  030F                     	;# 
  4333  0310                     	;# 
  4334  0310                     	;# 
  4335  0311                     	;# 
  4336  0312                     	;# 
  4337  0313                     	;# 
  4338  0314                     	;# 
  4339  0314                     	;# 
  4340  0315                     	;# 
  4341  0316                     	;# 
  4342  0317                     	;# 
  4343  0318                     	;# 
  4344  0318                     	;# 
  4345  0319                     	;# 
  4346  031A                     	;# 
  4347  031B                     	;# 
  4348  031C                     	;# 
  4349  031C                     	;# 
  4350  031D                     	;# 
  4351  031E                     	;# 
  4352  031F                     	;# 
  4353  038C                     	;# 
  4354  038D                     	;# 
  4355  038E                     	;# 
  4356  0390                     	;# 
  4357  0391                     	;# 
  4358  0392                     	;# 
  4359  040C                     	;# 
  4360  040D                     	;# 
  4361  040E                     	;# 
  4362  040F                     	;# 
  4363  0410                     	;# 
  4364  0411                     	;# 
  4365  0416                     	;# 
  4366  0416                     	;# 
  4367  0417                     	;# 
  4368  0418                     	;# 
  4369  0418                     	;# 
  4370  0419                     	;# 
  4371  041A                     	;# 
  4372  041A                     	;# 
  4373  041B                     	;# 
  4374  041C                     	;# 
  4375  041C                     	;# 
  4376  041D                     	;# 
  4377  041E                     	;# 
  4378  041F                     	;# 
  4379  048C                     	;# 
  4380  048C                     	;# 
  4381  048D                     	;# 
  4382  048E                     	;# 
  4383  048F                     	;# 
  4384  048F                     	;# 
  4385  0490                     	;# 
  4386  0491                     	;# 
  4387  0492                     	;# 
  4388  0492                     	;# 
  4389  0493                     	;# 
  4390  0494                     	;# 
  4391  0495                     	;# 
  4392  0495                     	;# 
  4393  0496                     	;# 
  4394  0497                     	;# 
  4395  0498                     	;# 
  4396  0499                     	;# 
  4397  049A                     	;# 
  4398  049B                     	;# 
  4399  049C                     	;# 
  4400  049D                     	;# 
  4401  050C                     	;# 
  4402  050C                     	;# 
  4403  050D                     	;# 
  4404  050E                     	;# 
  4405  050F                     	;# 
  4406  050F                     	;# 
  4407  0510                     	;# 
  4408  0511                     	;# 
  4409  0512                     	;# 
  4410  0512                     	;# 
  4411  0513                     	;# 
  4412  0514                     	;# 
  4413  0515                     	;# 
  4414  0515                     	;# 
  4415  0516                     	;# 
  4416  0517                     	;# 
  4417  0518                     	;# 
  4418  0519                     	;# 
  4419  051A                     	;# 
  4420  051B                     	;# 
  4421  051C                     	;# 
  4422  051D                     	;# 
  4423  058C                     	;# 
  4424  058C                     	;# 
  4425  058D                     	;# 
  4426  058E                     	;# 
  4427  058F                     	;# 
  4428  058F                     	;# 
  4429  0590                     	;# 
  4430  0591                     	;# 
  4431  0592                     	;# 
  4432  0593                     	;# 
  4433  060C                     	;# 
  4434  060D                     	;# 
  4435  060E                     	;# 
  4436  060F                     	;# 
  4437  0610                     	;# 
  4438  0611                     	;# 
  4439  0612                     	;# 
  4440  0613                     	;# 
  4441  0614                     	;# 
  4442  0616                     	;# 
  4443  0617                     	;# 
  4444  0618                     	;# 
  4445  0619                     	;# 
  4446  061A                     	;# 
  4447  061B                     	;# 
  4448  061C                     	;# 
  4449  061D                     	;# 
  4450  061E                     	;# 
  4451  068C                     	;# 
  4452  068D                     	;# 
  4453  068E                     	;# 
  4454  068F                     	;# 
  4455  0690                     	;# 
  4456  0691                     	;# 
  4457  0692                     	;# 
  4458  0693                     	;# 
  4459  0694                     	;# 
  4460  070C                     	;# 
  4461  070D                     	;# 
  4462  070E                     	;# 
  4463  070F                     	;# 
  4464  0710                     	;# 
  4465  0711                     	;# 
  4466  0712                     	;# 
  4467  0713                     	;# 
  4468  0714                     	;# 
  4469  0716                     	;# 
  4470  0717                     	;# 
  4471  0718                     	;# 
  4472  0719                     	;# 
  4473  071A                     	;# 
  4474  071B                     	;# 
  4475  071C                     	;# 
  4476  071D                     	;# 
  4477  071E                     	;# 
  4478  0796                     	;# 
  4479  0797                     	;# 
  4480  0798                     	;# 
  4481  0799                     	;# 
  4482  079A                     	;# 
  4483  079B                     	;# 
  4484  080C                     	;# 
  4485  080D                     	;# 
  4486  080E                     	;# 
  4487  080F                     	;# 
  4488  0810                     	;# 
  4489  0811                     	;# 
  4490  0812                     	;# 
  4491  0813                     	;# 
  4492  0814                     	;# 
  4493  081A                     	;# 
  4494  081B                     	;# 
  4495  081C                     	;# 
  4496  081D                     	;# 
  4497  081E                     	;# 
  4498  081F                     	;# 
  4499  088C                     	;# 
  4500  088D                     	;# 
  4501  088E                     	;# 
  4502  088F                     	;# 
  4503  0890                     	;# 
  4504  0891                     	;# 
  4505  0892                     	;# 
  4506  0893                     	;# 
  4507  0895                     	;# 
  4508  0896                     	;# 
  4509  0897                     	;# 
  4510  0898                     	;# 
  4511  0899                     	;# 
  4512  089A                     	;# 
  4513  089B                     	;# 
  4514  090C                     	;# 
  4515  090E                     	;# 
  4516  090F                     	;# 
  4517  091F                     	;# 
  4518  091F                     	;# 
  4519  098F                     	;# 
  4520  098F                     	;# 
  4521  0990                     	;# 
  4522  0991                     	;# 
  4523  0992                     	;# 
  4524  0993                     	;# 
  4525  0994                     	;# 
  4526  0995                     	;# 
  4527  0996                     	;# 
  4528  0997                     	;# 
  4529  0E0F                     	;# 
  4530  0E10                     	;# 
  4531  0E11                     	;# 
  4532  0E12                     	;# 
  4533  0E13                     	;# 
  4534  0E14                     	;# 
  4535  0E15                     	;# 
  4536  0E16                     	;# 
  4537  0E17                     	;# 
  4538  0E18                     	;# 
  4539  0E19                     	;# 
  4540  0E1A                     	;# 
  4541  0E1B                     	;# 
  4542  0E1C                     	;# 
  4543  0E1D                     	;# 
  4544  0E1E                     	;# 
  4545  0E1F                     	;# 
  4546  0E20                     	;# 
  4547  0E21                     	;# 
  4548  0E22                     	;# 
  4549  0E23                     	;# 
  4550  0E24                     	;# 
  4551  0E25                     	;# 
  4552  0E26                     	;# 
  4553  0E27                     	;# 
  4554  0E28                     	;# 
  4555  0E29                     	;# 
  4556  0E2A                     	;# 
  4557  0E2B                     	;# 
  4558  0E2C                     	;# 
  4559  0E2D                     	;# 
  4560  0E2E                     	;# 
  4561  0E2F                     	;# 
  4562  0E30                     	;# 
  4563  0E31                     	;# 
  4564  0E32                     	;# 
  4565  0E33                     	;# 
  4566  0E34                     	;# 
  4567  0E35                     	;# 
  4568  0E36                     	;# 
  4569  0E37                     	;# 
  4570  0E8F                     	;# 
  4571  0E90                     	;# 
  4572  0E91                     	;# 
  4573  0E92                     	;# 
  4574  0E93                     	;# 
  4575  0E94                     	;# 
  4576  0E95                     	;# 
  4577  0E96                     	;# 
  4578  0E97                     	;# 
  4579  0E9C                     	;# 
  4580  0E9D                     	;# 
  4581  0E9E                     	;# 
  4582  0EA1                     	;# 
  4583  0EA2                     	;# 
  4584  0EA3                     	;# 
  4585  0EA4                     	;# 
  4586  0EA5                     	;# 
  4587  0EA9                     	;# 
  4588  0EAA                     	;# 
  4589  0EAB                     	;# 
  4590  0EAC                     	;# 
  4591  0EB1                     	;# 
  4592  0EB2                     	;# 
  4593  0EB3                     	;# 
  4594  0EB8                     	;# 
  4595  0EB9                     	;# 
  4596  0EBA                     	;# 
  4597  0EBB                     	;# 
  4598  0EBC                     	;# 
  4599  0EBD                     	;# 
  4600  0EBE                     	;# 
  4601  0EC3                     	;# 
  4602  0EC5                     	;# 
  4603  0EC6                     	;# 
  4604  0EC7                     	;# 
  4605  0EC8                     	;# 
  4606  0EC9                     	;# 
  4607  0ECA                     	;# 
  4608  0ECB                     	;# 
  4609  0ECC                     	;# 
  4610  0F10                     	;# 
  4611  0F11                     	;# 
  4612  0F12                     	;# 
  4613  0F13                     	;# 
  4614  0F14                     	;# 
  4615  0F15                     	;# 
  4616  0F16                     	;# 
  4617  0F17                     	;# 
  4618  0F18                     	;# 
  4619  0F19                     	;# 
  4620  0F1A                     	;# 
  4621  0F1B                     	;# 
  4622  0F1C                     	;# 
  4623  0F1D                     	;# 
  4624  0F1E                     	;# 
  4625  0F1F                     	;# 
  4626  0F20                     	;# 
  4627  0F21                     	;# 
  4628  0F22                     	;# 
  4629  0F23                     	;# 
  4630  0F24                     	;# 
  4631  0F25                     	;# 
  4632  0F26                     	;# 
  4633  0F27                     	;# 
  4634  0F38                     	;# 
  4635  0F39                     	;# 
  4636  0F3A                     	;# 
  4637  0F3B                     	;# 
  4638  0F3C                     	;# 
  4639  0F3D                     	;# 
  4640  0F3E                     	;# 
  4641  0F3F                     	;# 
  4642  0F40                     	;# 
  4643  0F41                     	;# 
  4644  0F43                     	;# 
  4645  0F44                     	;# 
  4646  0F45                     	;# 
  4647  0F46                     	;# 
  4648  0F47                     	;# 
  4649  0F48                     	;# 
  4650  0F49                     	;# 
  4651  0F4A                     	;# 
  4652  0F4B                     	;# 
  4653  0F4C                     	;# 
  4654  0F4E                     	;# 
  4655  0F4F                     	;# 
  4656  0F50                     	;# 
  4657  0F51                     	;# 
  4658  0F52                     	;# 
  4659  0F53                     	;# 
  4660  0F54                     	;# 
  4661  0F55                     	;# 
  4662  0F56                     	;# 
  4663  0F57                     	;# 
  4664  0F65                     	;# 
  4665  0F68                     	;# 
  4666  0F69                     	;# 
  4667  0F6A                     	;# 
  4668  0F6B                     	;# 
  4669  0FE4                     	;# 
  4670  0FE5                     	;# 
  4671  0FE6                     	;# 
  4672  0FE7                     	;# 
  4673  0FE8                     	;# 
  4674  0FE9                     	;# 
  4675  0FEA                     	;# 
  4676  0FEB                     	;# 
  4677  0FED                     	;# 
  4678  0FEE                     	;# 
  4679  0FEF                     	;_samples
  4680                           
  4681                           	psect	idataBANK1
  4682  1720                     __pidataBANK1:	
  4683                           
  4684                           ;initializer for _PID_MaxOutput
  4685  1720  34FF               	retlw	255
  4686  1721  3403               	retlw	3
  4687                           
  4688                           ;initializer for _setpoint
  4689  1722  3446               	retlw	70
  4690                           
  4691                           	psect	idataBANK2
  4692  0847                     __pidataBANK2:	
  4693                           
  4694                           ;initializer for ___cgram
  4695  0847  340C               	retlw	12
  4696  0848  3412               	retlw	18
  4697  0849  3412               	retlw	18
  4698  084A  340C               	retlw	12
  4699  084B  3400               	retlw	0
  4700  084C  3400               	retlw	0
  4701  084D  3400               	retlw	0
  4702  084E  3400               	retlw	0
  4703  084F  340A               	retlw	10
  4704  0850  3415               	retlw	21
  4705  0851  3411               	retlw	17
  4706  0852  340A               	retlw	10
  4707  0853  3404               	retlw	4
  4708  0854  3400               	retlw	0
  4709  0855  3400               	retlw	0
  4710  0856  3400               	retlw	0
  4711  0857  340A               	retlw	10
  4712  0858  341F               	retlw	31
  4713  0859  341F               	retlw	31
  4714  085A  340E               	retlw	14
  4715  085B  3404               	retlw	4
  4716  085C  3400               	retlw	0
  4717  085D  3400               	retlw	0
  4718  085E  3400               	retlw	0
  4719                           
  4720                           ;initializer for _presets
  4721  085F  3400               	retlw	0
  4722  0860  3446               	retlw	70
  4723  0861  345F               	retlw	95
  4724  0862  3469               	retlw	105
  4725  0863  3478               	retlw	120
  4726                           
  4727                           	psect	stringtext
  4728  1000                     __pstringtext:	
  4729  1000                     log@coeff:	
  4730  1000  3400               	retlw	0
  4731  1001  3400               	retlw	0
  4732  1002  3400               	retlw	0
  4733  1003  3400               	retlw	0
  4734  1004  3480               	retlw	128
  4735  1005  343F               	retlw	63
  4736  1006  34F0               	retlw	240
  4737  1007  34FF               	retlw	255
  4738  1008  34BE               	retlw	190
  4739  1009  34E2               	retlw	226
  4740  100A  34A9               	retlw	169
  4741  100B  343E               	retlw	62
  4742  100C  3483               	retlw	131
  4743  100D  3476               	retlw	118
  4744  100E  34BE               	retlw	190
  4745  100F  34AE               	retlw	174
  4746  1010  342B               	retlw	43
  4747  1011  343E               	retlw	62
  4748  1012  343C               	retlw	60
  4749  1013  34C3               	retlw	195
  4750  1014  34BD               	retlw	189
  4751  1015  34D2               	retlw	210
  4752  1016  3413               	retlw	19
  4753  1017  343D               	retlw	61
  4754  1018  3478               	retlw	120
  4755  1019  34D3               	retlw	211
  4756  101A  34BB               	retlw	187
  4757  101B                     __end_oflog@coeff:	
  4758  0016                     _LATA	set	22
  4759  0017                     _LATB	set	23
  4760  0018                     _LATC	set	24
  4761  001E                     _T0CON0	set	30
  4762  001E                     _T0CON0bits	set	30
  4763  001F                     _T0CON1	set	31
  4764  001D                     _TMR0H	set	29
  4765  001C                     _TMR0L	set	28
  4766  0011                     _TRISA	set	17
  4767  0012                     _TRISB	set	18
  4768  0013                     _TRISC	set	19
  4769  005F                     _GIE	set	95
  4770  0063                     _RA3	set	99
  4771  0064                     _RA4	set	100
  4772  0068                     _RB0	set	104
  4773  0069                     _RB1	set	105
  4774  006A                     _RB2	set	106
  4775  006B                     _RB3	set	107
  4776  006C                     _RB4	set	108
  4777  006D                     _RB5	set	109
  4778  009D                     _ADACQ	set	157
  4779  0099                     _ADACT	set	153
  4780  009B                     _ADCAP	set	155
  4781  0098                     _ADCLK	set	152
  4782  0093                     _ADCON0	set	147
  4783  0093                     _ADCON0bits	set	147
  4784  0094                     _ADCON1	set	148
  4785  0095                     _ADCON2	set	149
  4786  0096                     _ADCON3	set	150
  4787  009E                     _ADPCH	set	158
  4788  009C                     _ADPRE	set	156
  4789  009A                     _ADREF	set	154
  4790  008D                     _ADRESH	set	141
  4791  008C                     _ADRESL	set	140
  4792  0097                     _ADSTAT	set	151
  4793  010F                     _ADLTHH	set	271
  4794  010E                     _ADLTHL	set	270
  4795  010D                     _ADRPT	set	269
  4796  0113                     _ADSTPTH	set	275
  4797  0112                     _ADSTPTL	set	274
  4798  0111                     _ADUTHH	set	273
  4799  0110                     _ADUTHL	set	272
  4800  021F                     _CCPTMRS1bits	set	543
  4801  0290                     _T2CLKCON	set	656
  4802  028E                     _T2CON	set	654
  4803  028E                     _T2CONbits	set	654
  4804  028F                     _T2HLT	set	655
  4805  028D                     _T2PR	set	653
  4806  0291                     _T2RST	set	657
  4807  028C                     _T2TMR	set	652
  4808  038E                     _PWM6CON	set	910
  4809  038D                     _PWM6DCH	set	909
  4810  038C                     _PWM6DCL	set	908
  4811  0716                     _PIE0bits	set	1814
  4812  070C                     _PIR0bits	set	1804
  4813  0710                     _PIR4bits	set	1808
  4814  3865                     _TMR0IF	set	14437
  4815  088D                     _OSCCON1	set	2189
  4816  088F                     _OSCCON3	set	2191
  4817  0891                     _OSCEN	set	2193
  4818  0893                     _OSCFRQ	set	2195
  4819  0892                     _OSCTUNE	set	2194
  4820  090C                     _FVRCON	set	2316
  4821  0E8F                     _PPSLOCK	set	3727
  4822  0E8F                     _PPSLOCKbits	set	3727
  4823  0F38                     _ANSELA	set	3896
  4824  0F43                     _ANSELB	set	3907
  4825  0F4E                     _ANSELC	set	3918
  4826  0F11                     _RA1PPS	set	3857
  4827  0F39                     _WPUA	set	3897
  4828  0F44                     _WPUB	set	3908
  4829  0F4F                     _WPUC	set	3919
  4830  0F65                     _WPUE	set	3941
  4831  101B                     STR_1:	
  4832  101B  3453               	retlw	83	;'S'
  4833  101C  3465               	retlw	101	;'e'
  4834  101D  3474               	retlw	116	;'t'
  4835  101E  3470               	retlw	112	;'p'
  4836  101F  346F               	retlw	111	;'o'
  4837  1020  3469               	retlw	105	;'i'
  4838  1021  346E               	retlw	110	;'n'
  4839  1022  3474               	retlw	116	;'t'
  4840  1023  343F               	retlw	63	;'?'
  4841  1024  3400               	retlw	0
  4842  101B                     
  4843                           ; #config settings
  4844  0000                     
  4845                           	psect	cinit
  4846  07C2                     start_initialization:	
  4847  07C2                     __initialization:		;BIGRAM
  4848                           
  4849                           ; Initialize objects allocated to BANK1
  4850  07C2  0021               	movlb	1	; select bank1
  4851  07C3  3197  2720  3187   	fcall	__pidataBANK1	;fetch initializer
  4852  07C6  00EC               	movwf	__pdataBANK1& (0+127)
  4853  07C7  3197  2721  3187   	fcall	__pidataBANK1+1	;fetch initializer
  4854  07CA  00ED               	movwf	(__pdataBANK1+1)& (0+127)
  4855  07CB  3197  2722  3187   	fcall	__pidataBANK1+2	;fetch initializer
  4856  07CE  00EE               	movwf	(__pdataBANK1+2)& (0+127)
  4857                           
  4858                           ; Initialize objects allocated to BANK2
  4859  07CF  3047               	movlw	low __pidataBANK2
  4860  07D0  0084               	movwf	4
  4861  07D1  3088               	movlw	(high __pidataBANK2)| (0+128)
  4862  07D2  0085               	movwf	5
  4863  07D3  3020               	movlw	low __pdataBANK2
  4864  07D4  0086               	movwf	6
  4865  07D5  3001               	movlw	high __pdataBANK2
  4866  07D6  0087               	movwf	7
  4867  07D7  3000               	movlw	0
  4868  07D8  00FF               	movwf	btemp+1
  4869  07D9  301D               	movlw	29
  4870  07DA  3197  2747  3187   	fcall	init_ram
  4871                           
  4872                           ; Clear objects allocated to BIGRAM
  4873  07DD  308C               	movlw	low (0+9100)
  4874  07DE  0084               	movwf	4
  4875  07DF  3023               	movlw	high (0+9100)
  4876  07E0  0085               	movwf	5
  4877  07E1  3064               	movlw	100
  4878  07E2  00FE               	movwf	btemp
  4879  07E3  3000               	movlw	0
  4880  07E4  00FF               	movwf	btemp+1
  4881  07E5  3197  273B  3187   	fcall	clear_ram0
  4882                           
  4883                           ; Clear objects allocated to BANK1
  4884  07E8  30CE               	movlw	low __pbssBANK1
  4885  07E9  0084               	movwf	4
  4886  07EA  3000               	movlw	high __pbssBANK1
  4887  07EB  0085               	movwf	5
  4888  07EC  301E               	movlw	30
  4889  07ED  00FE               	movwf	btemp
  4890  07EE  3000               	movlw	0
  4891  07EF  00FF               	movwf	btemp+1
  4892  07F0  3197  273B  3187   	fcall	clear_ram0
  4893                           
  4894                           ; Clear objects allocated to BANK2
  4895  07F3  303D               	movlw	low __pbssBANK2
  4896  07F4  0084               	movwf	4
  4897  07F5  3001               	movlw	high __pbssBANK2
  4898  07F6  0085               	movwf	5
  4899  07F7  3010               	movlw	16
  4900  07F8  00FE               	movwf	btemp
  4901  07F9  3000               	movlw	0
  4902  07FA  00FF               	movwf	btemp+1
  4903  07FB  3197  273B         	fcall	clear_ram0
  4904  07FD                     end_of_initialization:	
  4905                           ;End of C runtime variable initialization code
  4906                           
  4907  07FD                     __end_of__initialization:	
  4908  07FD  0020               	movlb	0
  4909  07FE  3184  2C5A         	ljmp	_main	;jump to C main() function
  4910                           
  4911                           	psect	bssBANK1
  4912  00CE                     __pbssBANK1:	
  4913  00CE                     _DerivativeValue:	
  4914  00CE                     	ds	3
  4915  00D1                     _Err:	
  4916  00D1                     	ds	3
  4917  00D4                     _ErrValue:	
  4918  00D4                     	ds	3
  4919  00D7                     _PID_Integrated:	
  4920  00D7                     	ds	3
  4921  00DA                     _PID_Kp:	
  4922  00DA                     	ds	3
  4923  00DD                     _PID_Prev_Error:	
  4924  00DD                     	ds	3
  4925  00E0                     _Result:	
  4926  00E0                     	ds	3
  4927  00E3                     _PID_MinOutput:	
  4928  00E3                     	ds	2
  4929  00E5                     main@sampleIndex:	
  4930  00E5                     	ds	2
  4931  00E7                     _downCount:	
  4932  00E7                     	ds	1
  4933  00E8                     _oldSetpoint:	
  4934  00E8                     	ds	1
  4935  00E9                     _toggleCount:	
  4936  00E9                     	ds	1
  4937  00EA                     _upCount:	
  4938  00EA                     	ds	1
  4939  00EB                     _x:	
  4940  00EB                     	ds	1
  4941                           
  4942                           	psect	dataBANK1
  4943  00EC                     __pdataBANK1:	
  4944  00EC                     _PID_MaxOutput:	
  4945  00EC                     	ds	2
  4946  00EE                     _setpoint:	
  4947  00EE                     	ds	1
  4948                           
  4949                           	psect	bssBANK2
  4950  013D                     __pbssBANK2:	
  4951  013D                     LCD_Write_Int@F13695:	
  4952  013D                     	ds	5
  4953  0142                     _PID_Kd:	
  4954  0142                     	ds	3
  4955  0145                     _PID_Ki:	
  4956  0145                     	ds	3
  4957  0148                     _PID_Prev_Input:	
  4958  0148                     	ds	3
  4959  014B                     _errno:	
  4960  014B                     	ds	2
  4961                           
  4962                           	psect	dataBANK2
  4963  0120                     __pdataBANK2:	
  4964  0120                     ___cgram:	
  4965  0120                     	ds	24
  4966  0138                     _presets:	
  4967  0138                     	ds	5
  4968                           
  4969                           	psect	inittext
  4970  1747                     init_ram:	
  4971  1747  00FE               	movwf	126
  4972  1748                     initloop:	
  4973  1748  0012               	moviw fsr0++
  4974  1749  001E               	movwi fsr1++
  4975  174A  3001               	movlw	1
  4976  174B  02FE               	subwf	126,f
  4977  174C  3000               	movlw	0
  4978  174D  3BFF               	subwfb	127,f
  4979  174E  087F               	movf	127,w
  4980  174F  047E               	iorwf	126,w
  4981  1750  1903               	btfsc	3,2
  4982  1751  3400               	retlw	0
  4983  1752  2F48               	goto	initloop
  4984                           
  4985                           	psect	clrtext
  4986  173B                     clear_ram0:	
  4987                           ;	Called with FSR0 containing the base address, and
  4988                           ;	btemp/btemp+1 has the size to clear
  4989                           
  4990  173B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4991  173C                     clrloop0:	
  4992  173C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4993  173D  3101               	addfsr 0,1
  4994  173E  3001               	movlw	1
  4995  173F  02FE               	subwf	126,f
  4996  1740  3000               	movlw	0
  4997  1741  3BFF               	subwfb	127,f
  4998  1742  087F               	movf	127,w
  4999  1743  047E               	iorwf	126,w
  5000  1744  1903               	btfsc	3,2
  5001  1745  3400               	retlw	0	;all done for this memory range, return
  5002  1746  2F3C               	goto	clrloop0	;have we reached the end yet?
  5003                           
  5004                           	psect	cstackBANK1
  5005  00A0                     __pcstackBANK1:	
  5006  00A0                     ??_readButtons:	
  5007                           
  5008                           ; 1 bytes @ 0x0
  5009  00A0                     	ds	3
  5010  00A3                     ??_tempSetpoint:	
  5011                           
  5012                           ; 1 bytes @ 0x3
  5013  00A3                     	ds	3
  5014  00A6                     ??_main:	
  5015                           
  5016                           ; 1 bytes @ 0x6
  5017  00A6                     	ds	10
  5018  00B0                     main@minutes:	
  5019                           
  5020                           ; 2 bytes @ 0x10
  5021  00B0                     	ds	2
  5022  00B2                     main@R:	
  5023                           
  5024                           ; 3 bytes @ 0x12
  5025  00B2                     	ds	3
  5026  00B5                     _main$1055:	
  5027                           
  5028                           ; 3 bytes @ 0x15
  5029  00B5                     	ds	3
  5030  00B8                     main@toggle:	
  5031                           
  5032                           ; 1 bytes @ 0x18
  5033  00B8                     	ds	1
  5034  00B9                     main@seconds:	
  5035                           
  5036                           ; 2 bytes @ 0x19
  5037  00B9                     	ds	2
  5038  00BB                     main@firstTimeThrough:	
  5039                           
  5040                           ; 1 bytes @ 0x1B
  5041  00BB                     	ds	1
  5042  00BC                     main@counter:	
  5043                           
  5044                           ; 2 bytes @ 0x1C
  5045  00BC                     	ds	2
  5046  00BE                     main@startupTimer:	
  5047                           
  5048                           ; 1 bytes @ 0x1E
  5049  00BE                     	ds	1
  5050  00BF                     main@PWM_Output:	
  5051                           
  5052                           ; 2 bytes @ 0x1F
  5053  00BF                     	ds	2
  5054  00C1                     main@totals:	
  5055                           
  5056                           ; 4 bytes @ 0x21
  5057  00C1                     	ds	4
  5058  00C5                     main@readTemperatureOld:	
  5059                           
  5060                           ; 2 bytes @ 0x25
  5061  00C5                     	ds	2
  5062  00C7                     main@displayTemp:	
  5063                           
  5064                           ; 2 bytes @ 0x27
  5065  00C7                     	ds	2
  5066  00C9                     main@readTemperature:	
  5067                           
  5068                           ; 2 bytes @ 0x29
  5069  00C9                     	ds	2
  5070  00CB                     main@steinhart:	
  5071                           
  5072                           ; 3 bytes @ 0x2B
  5073  00CB                     	ds	3
  5074                           
  5075                           	psect	cstackCOMMON
  5076  0070                     __pcstackCOMMON:	
  5077  0070                     ?_OSCILLATOR_Initialize:	
  5078  0070                     ??_OSCILLATOR_Initialize:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0070                     ?_ADCC_Initialize:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0070                     ??_ADCC_Initialize:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0070                     ?_PWM6_Initialize:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0070                     ??_PWM6_Initialize:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0070                     ?_TMR0_Initialize:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0070                     ??_TMR0_Initialize:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0070                     ?_TMR2_Initialize:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0070                     ??_TMR2_Initialize:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0070                     ?_LCD_Init:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0070                     ?_LCD_Clear:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0070                     ?_InitCustomChars:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0070                     ?_Init_PID:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0070                     ??_Init_PID:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0070                     ?_LCD_Cmd:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0070                     ?_LCD_Write_Char:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0070                     ?_readButtons:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0070                     ?_PIN_MANAGER_Initialize:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0070                     ??_PIN_MANAGER_Initialize:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0070                     ?_SYSTEM_Initialize:	
  5136                           ; 1 bytes @ 0x0
  5137                           
  5138  0070                     ?_LCD_Port:	
  5139                           ; 1 bytes @ 0x0
  5140                           
  5141  0070                     ??_LCD_Port:	
  5142                           ; 1 bytes @ 0x0
  5143                           
  5144  0070                     ?_PWM6_LoadDutyValue:	
  5145                           ; 1 bytes @ 0x0
  5146                           
  5147  0070                     ?_tempSetpoint:	
  5148                           ; 1 bytes @ 0x0
  5149                           
  5150  0070                     ?_main:	
  5151                           ; 1 bytes @ 0x0
  5152                           
  5153  0070                     ?_ADCC_GetSingleConversion:	
  5154                           ; 1 bytes @ 0x0
  5155                           
  5156  0070                     ?___wmul:	
  5157                           ; 2 bytes @ 0x0
  5158                           
  5159  0070                     ?___awdiv:	
  5160                           ; 2 bytes @ 0x0
  5161                           
  5162  0070                     ?___awmod:	
  5163                           ; 2 bytes @ 0x0
  5164                           
  5165  0070                     ?___ftpack:	
  5166                           ; 2 bytes @ 0x0
  5167                           
  5168  0070                     ?_frexp:	
  5169                           ; 3 bytes @ 0x0
  5170                           
  5171  0070                     ?___ftneg:	
  5172                           ; 3 bytes @ 0x0
  5173                           
  5174  0070                     ?___aldiv:	
  5175                           ; 3 bytes @ 0x0
  5176                           
  5177  0070                     PIN_MANAGER_Initialize@state:	
  5178                           ; 4 bytes @ 0x0
  5179                           
  5180  0070                     LCD_Port@a:	
  5181                           ; 1 bytes @ 0x0
  5182                           
  5183  0070                     PWM6_LoadDutyValue@dutyValue:	
  5184                           ; 1 bytes @ 0x0
  5185                           
  5186  0070                     ___wmul@multiplier:	
  5187                           ; 2 bytes @ 0x0
  5188                           
  5189  0070                     ___awdiv@divisor:	
  5190                           ; 2 bytes @ 0x0
  5191                           
  5192  0070                     ___awmod@divisor:	
  5193                           ; 2 bytes @ 0x0
  5194                           
  5195  0070                     ___ftpack@arg:	
  5196                           ; 2 bytes @ 0x0
  5197                           
  5198  0070                     ___ftneg@f1:	
  5199                           ; 3 bytes @ 0x0
  5200                           
  5201  0070                     frexp@value:	
  5202                           ; 3 bytes @ 0x0
  5203                           
  5204  0070                     ___aldiv@divisor:	
  5205                           ; 3 bytes @ 0x0
  5206                           
  5207                           
  5208                           ; 4 bytes @ 0x0
  5209  0070                     	ds	1
  5210  0071                     ??_LCD_Cmd:	
  5211  0071                     ??_LCD_Write_Char:	
  5212                           ; 1 bytes @ 0x1
  5213                           
  5214                           
  5215                           ; 1 bytes @ 0x1
  5216  0071                     	ds	1
  5217  0072                     ??_PWM6_LoadDutyValue:	
  5218  0072                     LCD_Cmd@a:	
  5219                           ; 1 bytes @ 0x2
  5220                           
  5221  0072                     LCD_Write_Char@temp:	
  5222                           ; 1 bytes @ 0x2
  5223                           
  5224  0072                     ___wmul@multiplicand:	
  5225                           ; 1 bytes @ 0x2
  5226                           
  5227  0072                     ___awdiv@dividend:	
  5228                           ; 2 bytes @ 0x2
  5229                           
  5230  0072                     ___awmod@dividend:	
  5231                           ; 2 bytes @ 0x2
  5232                           
  5233                           
  5234                           ; 2 bytes @ 0x2
  5235  0072                     	ds	1
  5236  0073                     ??_LCD_Init:	
  5237  0073                     ??_LCD_Clear:	
  5238                           ; 1 bytes @ 0x3
  5239                           
  5240  0073                     ?_LCD_Set_Cursor:	
  5241                           ; 1 bytes @ 0x3
  5242                           
  5243  0073                     ??_ADCC_GetSingleConversion:	
  5244                           ; 1 bytes @ 0x3
  5245                           
  5246  0073                     ??___ftneg:	
  5247                           ; 1 bytes @ 0x3
  5248                           
  5249  0073                     LCD_Set_Cursor@y:	
  5250                           ; 1 bytes @ 0x3
  5251                           
  5252  0073                     LCD_Write_Char@y:	
  5253                           ; 1 bytes @ 0x3
  5254                           
  5255  0073                     ADCC_GetSingleConversion@channel:	
  5256                           ; 1 bytes @ 0x3
  5257                           
  5258  0073                     ___ftpack@exp:	
  5259                           ; 1 bytes @ 0x3
  5260                           
  5261  0073                     frexp@eptr:	
  5262                           ; 1 bytes @ 0x3
  5263                           
  5264                           
  5265                           ; 1 bytes @ 0x3
  5266  0073                     	ds	1
  5267  0074                     ??_frexp:	
  5268  0074                     ??_LCD_Set_Cursor:	
  5269                           ; 1 bytes @ 0x4
  5270                           
  5271  0074                     ??___wmul:	
  5272                           ; 1 bytes @ 0x4
  5273                           
  5274  0074                     ??___awdiv:	
  5275                           ; 1 bytes @ 0x4
  5276                           
  5277  0074                     ??___awmod:	
  5278                           ; 1 bytes @ 0x4
  5279                           
  5280  0074                     LCD_Write_Char@a:	
  5281                           ; 1 bytes @ 0x4
  5282                           
  5283  0074                     ___ftpack@sign:	
  5284                           ; 1 bytes @ 0x4
  5285                           
  5286  0074                     ___wmul@product:	
  5287                           ; 1 bytes @ 0x4
  5288                           
  5289  0074                     ___aldiv@dividend:	
  5290                           ; 2 bytes @ 0x4
  5291                           
  5292                           
  5293                           ; 4 bytes @ 0x4
  5294  0074                     	ds	1
  5295  0075                     ??_InitCustomChars:	
  5296  0075                     ??___ftpack:	
  5297                           ; 1 bytes @ 0x5
  5298                           
  5299  0075                     ?_LCD_Write_String:	
  5300                           ; 1 bytes @ 0x5
  5301                           
  5302  0075                     LCD_Init@style:	
  5303                           ; 1 bytes @ 0x5
  5304                           
  5305  0075                     ___awdiv@counter:	
  5306                           ; 1 bytes @ 0x5
  5307                           
  5308  0075                     ___awmod@counter:	
  5309                           ; 1 bytes @ 0x5
  5310                           
  5311  0075                     LCD_Write_String@a:	
  5312                           ; 1 bytes @ 0x5
  5313                           
  5314                           
  5315                           ; 2 bytes @ 0x5
  5316  0075                     	ds	1
  5317  0076                     ?___lwdiv:	
  5318  0076                     InitCustomChars@i:	
  5319                           ; 2 bytes @ 0x6
  5320                           
  5321  0076                     LCD_Set_Cursor@x:	
  5322                           ; 1 bytes @ 0x6
  5323                           
  5324  0076                     ___awdiv@sign:	
  5325                           ; 1 bytes @ 0x6
  5326                           
  5327  0076                     ___awmod@sign:	
  5328                           ; 1 bytes @ 0x6
  5329                           
  5330  0076                     ___lwdiv@divisor:	
  5331                           ; 1 bytes @ 0x6
  5332                           
  5333                           
  5334                           ; 2 bytes @ 0x6
  5335  0076                     	ds	1
  5336  0077                     ??_SYSTEM_Initialize:	
  5337  0077                     ??_LCD_Write_String:	
  5338                           ; 1 bytes @ 0x7
  5339                           
  5340  0077                     LCD_Set_Cursor@z:	
  5341                           ; 1 bytes @ 0x7
  5342                           
  5343  0077                     ___awdiv@quotient:	
  5344                           ; 1 bytes @ 0x7
  5345                           
  5346                           
  5347                           ; 2 bytes @ 0x7
  5348  0077                     	ds	1
  5349  0078                     ??___aldiv:	
  5350  0078                     ?___awtoft:	
  5351                           ; 1 bytes @ 0x8
  5352                           
  5353  0078                     ?___lbtoft:	
  5354                           ; 3 bytes @ 0x8
  5355                           
  5356  0078                     ?___lwtoft:	
  5357                           ; 3 bytes @ 0x8
  5358                           
  5359  0078                     LCD_Set_Cursor@w:	
  5360                           ; 3 bytes @ 0x8
  5361                           
  5362  0078                     LCD_Write_String@i:	
  5363                           ; 1 bytes @ 0x8
  5364                           
  5365  0078                     ___awtoft@c:	
  5366                           ; 2 bytes @ 0x8
  5367                           
  5368  0078                     ___lwdiv@dividend:	
  5369                           ; 2 bytes @ 0x8
  5370                           
  5371  0078                     ___lwtoft@c:	
  5372                           ; 2 bytes @ 0x8
  5373                           
  5374                           
  5375                           ; 2 bytes @ 0x8
  5376  0078                     	ds	1
  5377  0079                     LCD_Set_Cursor@temp:	
  5378                           
  5379                           ; 1 bytes @ 0x9
  5380  0079                     	ds	1
  5381  007A                     ??___lwdiv:	
  5382                           
  5383                           ; 1 bytes @ 0xA
  5384  007A                     	ds	1
  5385  007B                     ??___awtoft:	
  5386  007B                     ??___lwtoft:	
  5387                           ; 1 bytes @ 0xB
  5388                           
  5389  007B                     ___lbtoft@c:	
  5390                           ; 1 bytes @ 0xB
  5391                           
  5392  007B                     ___lwdiv@quotient:	
  5393                           ; 1 bytes @ 0xB
  5394                           
  5395                           
  5396                           ; 2 bytes @ 0xB
  5397  007B                     	ds	2
  5398  007D                     ___awtoft@sign:	
  5399  007D                     ___lwdiv@counter:	
  5400                           ; 1 bytes @ 0xD
  5401                           
  5402                           
  5403                           ; 1 bytes @ 0xD
  5404  007D                     	ds	1
  5405  007E                     ??_eval_poly:	
  5406  007E                     ??_PID_Calculate:	
  5407                           ; 1 bytes @ 0xE
  5408                           
  5409  007E                     ??___ftsub:	
  5410                           ; 1 bytes @ 0xE
  5411                           
  5412                           
  5413                           	psect	cstackBANK0
  5414  0020                     __pcstackBANK0:	
  5415                           ; 1 bytes @ 0xE
  5416                           
  5417  0020                     ??___lbtoft:	
  5418  0020                     ?___ftdiv:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0020                     ?___ftmul:	
  5422                           ; 3 bytes @ 0x0
  5423                           
  5424  0020                     ___aldiv@counter:	
  5425                           ; 3 bytes @ 0x0
  5426                           
  5427  0020                     ___ftdiv@f2:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430  0020                     ___ftmul@f1:	
  5431                           ; 3 bytes @ 0x0
  5432                           
  5433                           
  5434                           ; 3 bytes @ 0x0
  5435  0020                     	ds	1
  5436  0021                     ___aldiv@sign:	
  5437                           
  5438                           ; 1 bytes @ 0x1
  5439  0021                     	ds	1
  5440  0022                     ___aldiv@quotient:	
  5441                           
  5442                           ; 4 bytes @ 0x2
  5443  0022                     	ds	1
  5444  0023                     ___ftdiv@f1:	
  5445  0023                     ___ftmul@f2:	
  5446                           ; 3 bytes @ 0x3
  5447                           
  5448                           
  5449                           ; 3 bytes @ 0x3
  5450  0023                     	ds	3
  5451  0026                     ??___ftdiv:	
  5452  0026                     ??___ftmul:	
  5453                           ; 1 bytes @ 0x6
  5454                           
  5455                           
  5456                           ; 1 bytes @ 0x6
  5457  0026                     	ds	4
  5458  002A                     ___ftdiv@cntr:	
  5459  002A                     ___ftmul@exp:	
  5460                           ; 1 bytes @ 0xA
  5461                           
  5462                           
  5463                           ; 1 bytes @ 0xA
  5464  002A                     	ds	1
  5465  002B                     ___ftdiv@f3:	
  5466  002B                     ___ftmul@f3_as_product:	
  5467                           ; 3 bytes @ 0xB
  5468                           
  5469                           
  5470                           ; 3 bytes @ 0xB
  5471  002B                     	ds	3
  5472  002E                     ___ftdiv@exp:	
  5473  002E                     ___ftmul@cntr:	
  5474                           ; 1 bytes @ 0xE
  5475                           
  5476                           
  5477                           ; 1 bytes @ 0xE
  5478  002E                     	ds	1
  5479  002F                     ___ftdiv@sign:	
  5480  002F                     ___ftmul@sign:	
  5481                           ; 1 bytes @ 0xF
  5482                           
  5483                           
  5484                           ; 1 bytes @ 0xF
  5485  002F                     	ds	1
  5486  0030                     ?___ftadd:	
  5487  0030                     ___ftadd@f1:	
  5488                           ; 3 bytes @ 0x10
  5489                           
  5490                           
  5491                           ; 3 bytes @ 0x10
  5492  0030                     	ds	3
  5493  0033                     ___ftadd@f2:	
  5494                           
  5495                           ; 3 bytes @ 0x13
  5496  0033                     	ds	3
  5497  0036                     ??___ftadd:	
  5498                           
  5499                           ; 1 bytes @ 0x16
  5500  0036                     	ds	4
  5501  003A                     ___ftadd@sign:	
  5502                           
  5503                           ; 1 bytes @ 0x1A
  5504  003A                     	ds	1
  5505  003B                     ___ftadd@exp2:	
  5506                           
  5507                           ; 1 bytes @ 0x1B
  5508  003B                     	ds	1
  5509  003C                     ___ftadd@exp1:	
  5510                           
  5511                           ; 1 bytes @ 0x1C
  5512  003C                     	ds	1
  5513  003D                     ?___ftge:	
  5514  003D                     ?_eval_poly:	
  5515                           ; 1 bit 
  5516                           
  5517  003D                     ?___ftsub:	
  5518                           ; 3 bytes @ 0x1D
  5519                           
  5520  003D                     ___ftge@ff1:	
  5521                           ; 3 bytes @ 0x1D
  5522                           
  5523  003D                     ___ftsub@f2:	
  5524                           ; 3 bytes @ 0x1D
  5525                           
  5526  003D                     eval_poly@x:	
  5527                           ; 3 bytes @ 0x1D
  5528                           
  5529                           
  5530                           ; 3 bytes @ 0x1D
  5531  003D                     	ds	3
  5532  0040                     eval_poly@d:	
  5533  0040                     ___ftge@ff2:	
  5534                           ; 2 bytes @ 0x20
  5535                           
  5536  0040                     ___ftsub@f1:	
  5537                           ; 3 bytes @ 0x20
  5538                           
  5539                           
  5540                           ; 3 bytes @ 0x20
  5541  0040                     	ds	2
  5542  0042                     eval_poly@n:	
  5543                           
  5544                           ; 2 bytes @ 0x22
  5545  0042                     	ds	1
  5546  0043                     ??___ftge:	
  5547                           
  5548                           ; 1 bytes @ 0x23
  5549  0043                     	ds	1
  5550  0044                     eval_poly@res:	
  5551                           
  5552                           ; 3 bytes @ 0x24
  5553  0044                     	ds	2
  5554  0046                     ?_PID_Calculate:	
  5555  0046                     PID_Calculate@setpoint:	
  5556                           ; 3 bytes @ 0x26
  5557                           
  5558                           
  5559                           ; 2 bytes @ 0x26
  5560  0046                     	ds	1
  5561  0047                     ?_log:	
  5562  0047                     log@x:	
  5563                           ; 3 bytes @ 0x27
  5564                           
  5565                           
  5566                           ; 3 bytes @ 0x27
  5567  0047                     	ds	1
  5568  0048                     PID_Calculate@temp:	
  5569                           
  5570                           ; 3 bytes @ 0x28
  5571  0048                     	ds	2
  5572  004A                     ??_log:	
  5573                           
  5574                           ; 1 bytes @ 0x2A
  5575  004A                     	ds	1
  5576  004B                     log@exponent:	
  5577  004B                     _PID_Calculate$1054:	
  5578                           ; 2 bytes @ 0x2B
  5579                           
  5580                           
  5581                           ; 3 bytes @ 0x2B
  5582  004B                     	ds	3
  5583  004E                     ?___fttol:	
  5584  004E                     ___fttol@f1:	
  5585                           ; 4 bytes @ 0x2E
  5586                           
  5587                           
  5588                           ; 3 bytes @ 0x2E
  5589  004E                     	ds	4
  5590  0052                     ??___fttol:	
  5591                           
  5592                           ; 1 bytes @ 0x32
  5593  0052                     	ds	4
  5594  0056                     ___fttol@sign1:	
  5595                           
  5596                           ; 1 bytes @ 0x36
  5597  0056                     	ds	1
  5598  0057                     ___fttol@lval:	
  5599                           
  5600                           ; 4 bytes @ 0x37
  5601  0057                     	ds	4
  5602  005B                     ___fttol@exp1:	
  5603                           
  5604                           ; 1 bytes @ 0x3B
  5605  005B                     	ds	1
  5606  005C                     ?_LCD_Write_Int:	
  5607  005C                     LCD_Write_Int@value:	
  5608                           ; 1 bytes @ 0x3C
  5609                           
  5610                           
  5611                           ; 2 bytes @ 0x3C
  5612  005C                     	ds	2
  5613  005E                     LCD_Write_Int@fieldLength:	
  5614                           
  5615                           ; 1 bytes @ 0x3E
  5616  005E                     	ds	1
  5617  005F                     LCD_Write_Int@numPlaces:	
  5618                           
  5619                           ; 1 bytes @ 0x3F
  5620  005F                     	ds	1
  5621  0060                     LCD_Write_Int@sign:	
  5622                           
  5623                           ; 1 bytes @ 0x40
  5624  0060                     	ds	1
  5625  0061                     ??_LCD_Write_Int:	
  5626                           
  5627                           ; 1 bytes @ 0x41
  5628  0061                     	ds	5
  5629  0066                     LCD_Write_Int@str:	
  5630                           
  5631                           ; 5 bytes @ 0x46
  5632  0066                     	ds	5
  5633  006B                     LCD_Write_Int@j:	
  5634                           
  5635                           ; 2 bytes @ 0x4B
  5636  006B                     	ds	2
  5637  006D                     LCD_Write_Int@i:	
  5638                           
  5639                           ; 2 bytes @ 0x4D
  5640  006D                     	ds	2
  5641  006F                     tempSetpoint@counter:	
  5642                           
  5643                           ; 1 bytes @ 0x4F
  5644  006F                     	ds	1
  5645                           
  5646                           	psect	maintext
  5647  045A                     __pmaintext:	
  5648 ;;
  5649 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5650 ;;
  5651 ;; *************** function _main *****************
  5652 ;; Defined at:
  5653 ;;		line 16 in file "main.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  totals          4   33[BANK1 ] long 
  5658 ;;  steinhart       3   43[BANK1 ] float 
  5659 ;;  R               3   18[BANK1 ] float 
  5660 ;;  readTemperat    2   41[BANK1 ] unsigned int 
  5661 ;;  displayTemp     2   39[BANK1 ] unsigned int 
  5662 ;;  readTemperat    2   37[BANK1 ] unsigned int 
  5663 ;;  PWM_Output      2   31[BANK1 ] unsigned int 
  5664 ;;  counter         2   28[BANK1 ] unsigned int 
  5665 ;;  seconds         2   25[BANK1 ] unsigned int 
  5666 ;;  minutes         2   16[BANK1 ] unsigned int 
  5667 ;;  startupTimer    1   30[BANK1 ] unsigned char 
  5668 ;;  firstTimeThr    1   27[BANK1 ] unsigned char 
  5669 ;;  toggle          1   24[BANK1 ] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : B1F/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;Total ram usage:       40 bytes
  5684 ;; Hardware stack levels required when called:    5
  5685 ;; This function calls:
  5686 ;;		_ADCC_GetSingleConversion
  5687 ;;		_LCD_Set_Cursor
  5688 ;;		_LCD_Write_Char
  5689 ;;		_LCD_Write_Int
  5690 ;;		_PID_Calculate
  5691 ;;		_PWM6_LoadDutyValue
  5692 ;;		_SYSTEM_Initialize
  5693 ;;		___aldiv
  5694 ;;		___ftadd
  5695 ;;		___ftdiv
  5696 ;;		___ftge
  5697 ;;		___ftmul
  5698 ;;		___ftneg
  5699 ;;		___ftsub
  5700 ;;		___fttol
  5701 ;;		___lbtoft
  5702 ;;		___lwdiv
  5703 ;;		___lwtoft
  5704 ;;		___wmul
  5705 ;;		_log
  5706 ;;		_readButtons
  5707 ;;		_tempSetpoint
  5708 ;; This function is called by:
  5709 ;;		Startup code after reset
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _main
  5715  045A                     _main:	
  5716                           
  5717                           ;main.c: 18: SYSTEM_Initialize();
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5721  045A  3189  21F8  3184   	fcall	_SYSTEM_Initialize
  5722                           
  5723                           ;main.c: 20: uint16_t readTemperature, PWM_Output = 1023, readTemperatureOld, displayTem
      +                          p = 70, seconds = 0, counter = 0, minutes = 0;
  5724  045D  30FF               	movlw	255
  5725  045E  0021               	movlb	1	; select bank1
  5726  045F  00BF               	movwf	main@PWM_Output^(0+128)
  5727  0460  3003               	movlw	3
  5728  0461  00C0               	movwf	(main@PWM_Output^(0+128)+1)
  5729  0462  3046               	movlw	70
  5730  0463  00C7               	movwf	main@displayTemp^(0+128)
  5731  0464  3000               	movlw	0
  5732  0465  00C8               	movwf	(main@displayTemp^(0+128)+1)
  5733  0466  01B9               	clrf	main@seconds^(0+128)
  5734  0467  01BA               	clrf	(main@seconds+1)^(0+128)
  5735  0468  01BC               	clrf	main@counter^(0+128)
  5736  0469  01BD               	clrf	(main@counter+1)^(0+128)
  5737  046A  01B0               	clrf	main@minutes^(0+128)
  5738  046B  01B1               	clrf	(main@minutes+1)^(0+128)
  5739                           
  5740                           ;main.c: 22: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5741  046C  01BE               	clrf	main@startupTimer^(0+128)
  5742  046D  01BB               	clrf	main@firstTimeThrough^(0+128)
  5743  046E  01B8               	clrf	main@toggle^(0+128)
  5744                           
  5745                           ;main.c: 24: float R, steinhart;
  5746                           ;main.c: 26: static uint16_t sampleIndex = 0;
  5747                           ;main.c: 28: int32_t totals = 0;
  5748  046F  3000               	movlw	0
  5749  0470  00C4               	movwf	(main@totals+3)^(0+128)
  5750  0471  3000               	movlw	0
  5751  0472  00C3               	movwf	(main@totals+2)^(0+128)
  5752  0473  3000               	movlw	0
  5753  0474  00C2               	movwf	(main@totals+1)^(0+128)
  5754  0475  3000               	movlw	0
  5755  0476  00C1               	movwf	main@totals^(0+128)
  5756  0477                     l3044:	
  5757                           ;main.c: 32: while (1)
  5758                           
  5759                           
  5760                           ;main.c: 33: {
  5761                           ;main.c: 34: readTemperature = ADCC_GetSingleConversion(2);
  5762  0477  3002               	movlw	2
  5763  0478  3197  2760  3184   	fcall	_ADCC_GetSingleConversion
  5764  047B  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5765  047C  0021               	movlb	1	; select bank1
  5766  047D  00CA               	movwf	(main@readTemperature+1)^(0+128)
  5767  047E  0870               	movf	?_ADCC_GetSingleConversion,w
  5768  047F  00C9               	movwf	main@readTemperature^(0+128)
  5769                           
  5770                           ;main.c: 36: totals = totals - samples[sampleIndex];
  5771  0480  0841               	movf	main@totals^(0+128),w
  5772  0481  00A6               	movwf	??_main^(0+128)
  5773  0482  0842               	movf	(main@totals+1)^(0+128),w
  5774  0483  00A7               	movwf	(??_main^(0+128)+1)
  5775  0484  0843               	movf	(main@totals+2)^(0+128),w
  5776  0485  00A8               	movwf	(??_main^(0+128)+2)
  5777  0486  0844               	movf	(main@totals+3)^(0+128),w
  5778  0487  00A9               	movwf	(??_main^(0+128)+3)
  5779  0488  0866               	movf	(main@sampleIndex+1)^(0+128),w
  5780  0489  00AB               	movwf	((??_main+4)^(0+128)+1)
  5781  048A  0865               	movf	main@sampleIndex^(0+128),w
  5782  048B  00AA               	movwf	(??_main+4)^(0+128)
  5783  048C  35AA               	lslf	(??_main+4)^(0+128),f
  5784  048D  0DAB               	rlf	((??_main+4)^(0+128)+1),f
  5785  048E  308C               	movlw	140
  5786  048F  072A               	addwf	(??_main+4)^(0+128),w
  5787  0490  0084               	movwf	4
  5788  0491  3023               	movlw	35
  5789  0492  3D2B               	addwfc	(??_main+5)^(0+128),w
  5790  0493  0085               	movwf	5
  5791  0494  3F00               	moviw [0]fsr0
  5792  0495  00AC               	movwf	(??_main+6)^(0+128)
  5793  0496  3F01               	moviw [1]fsr0
  5794  0497  00AD               	movwf	((??_main+6)^(0+128)+1)
  5795  0498  01AE               	clrf	((??_main+6)^(0+128)+2)
  5796  0499  01AF               	clrf	((??_main+6)^(0+128)+3)
  5797  049A  09AC               	comf	(??_main+6)^(0+128),f
  5798  049B  09AD               	comf	((??_main+6)^(0+128)+1),f
  5799  049C  09AE               	comf	((??_main+6)^(0+128)+2),f
  5800  049D  09AF               	comf	((??_main+6)^(0+128)+3),f
  5801  049E  0AAC               	incf	(??_main+6)^(0+128),f
  5802  049F  1903               	skipnz
  5803  04A0  0AAD               	incf	((??_main+6)^(0+128)+1),f
  5804  04A1  1903               	skipnz
  5805  04A2  0AAE               	incf	((??_main+6)^(0+128)+2),f
  5806  04A3  1903               	skipnz
  5807  04A4  0AAF               	incf	((??_main+6)^(0+128)+3),f
  5808  04A5  082C               	movf	(??_main+6)^(0+128),w
  5809  04A6  07A6               	addwf	??_main^(0+128),f
  5810  04A7  082D               	movf	(??_main+7)^(0+128),w
  5811  04A8  3DA7               	addwfc	(??_main^(0+128)+1),f
  5812  04A9  082E               	movf	(??_main+8)^(0+128),w
  5813  04AA  3DA8               	addwfc	(??_main^(0+128)+2),f
  5814  04AB  082F               	movf	(??_main+9)^(0+128),w
  5815  04AC  3DA9               	addwfc	(??_main^(0+128)+3),f
  5816  04AD  0829               	movf	(??_main+3)^(0+128),w
  5817  04AE  00C4               	movwf	(main@totals+3)^(0+128)
  5818  04AF  0828               	movf	(??_main+2)^(0+128),w
  5819  04B0  00C3               	movwf	(main@totals+2)^(0+128)
  5820  04B1  0827               	movf	(??_main+1)^(0+128),w
  5821  04B2  00C2               	movwf	(main@totals+1)^(0+128)
  5822  04B3  0826               	movf	??_main^(0+128),w
  5823  04B4  00C1               	movwf	main@totals^(0+128)
  5824                           
  5825                           ;main.c: 38: samples[sampleIndex] = readTemperature;
  5826  04B5  0866               	movf	(main@sampleIndex+1)^(0+128),w
  5827  04B6  00A7               	movwf	(??_main^(0+128)+1)
  5828  04B7  0865               	movf	main@sampleIndex^(0+128),w
  5829  04B8  00A6               	movwf	??_main^(0+128)
  5830  04B9  35A6               	lslf	??_main^(0+128),f
  5831  04BA  0DA7               	rlf	(??_main^(0+128)+1),f
  5832  04BB  308C               	movlw	140
  5833  04BC  00A8               	movwf	(??_main+2)^(0+128)
  5834  04BD  3023               	movlw	35
  5835  04BE  00A9               	movwf	((??_main+2)^(0+128)+1)
  5836  04BF  0826               	movf	??_main^(0+128),w
  5837  04C0  0728               	addwf	(??_main+2)^(0+128),w
  5838  04C1  0086               	movwf	6
  5839  04C2  0827               	movf	(??_main+1)^(0+128),w
  5840  04C3  3D29               	addwfc	(??_main+3)^(0+128),w
  5841  04C4  0087               	movwf	7
  5842  04C5  0849               	movf	main@readTemperature^(0+128),w
  5843  04C6  3FC0               	movwi [0]fsr1
  5844  04C7  084A               	movf	(main@readTemperature+1)^(0+128),w
  5845  04C8  3FC1               	movwi [1]fsr1
  5846                           
  5847                           ;main.c: 40: totals = totals + samples[sampleIndex];
  5848  04C9  0841               	movf	main@totals^(0+128),w
  5849  04CA  00A6               	movwf	??_main^(0+128)
  5850  04CB  0842               	movf	(main@totals+1)^(0+128),w
  5851  04CC  00A7               	movwf	(??_main^(0+128)+1)
  5852  04CD  0843               	movf	(main@totals+2)^(0+128),w
  5853  04CE  00A8               	movwf	(??_main^(0+128)+2)
  5854  04CF  0844               	movf	(main@totals+3)^(0+128),w
  5855  04D0  00A9               	movwf	(??_main^(0+128)+3)
  5856  04D1  0866               	movf	(main@sampleIndex+1)^(0+128),w
  5857  04D2  00AB               	movwf	((??_main+4)^(0+128)+1)
  5858  04D3  0865               	movf	main@sampleIndex^(0+128),w
  5859  04D4  00AA               	movwf	(??_main+4)^(0+128)
  5860  04D5  35AA               	lslf	(??_main+4)^(0+128),f
  5861  04D6  0DAB               	rlf	((??_main+4)^(0+128)+1),f
  5862  04D7  308C               	movlw	140
  5863  04D8  072A               	addwf	(??_main+4)^(0+128),w
  5864  04D9  0084               	movwf	4
  5865  04DA  3023               	movlw	35
  5866  04DB  3D2B               	addwfc	(??_main+5)^(0+128),w
  5867  04DC  0085               	movwf	5
  5868  04DD  3F00               	moviw [0]fsr0
  5869  04DE  00AC               	movwf	(??_main+6)^(0+128)
  5870  04DF  3F01               	moviw [1]fsr0
  5871  04E0  00AD               	movwf	((??_main+6)^(0+128)+1)
  5872  04E1  01AE               	clrf	((??_main+6)^(0+128)+2)
  5873  04E2  01AF               	clrf	((??_main+6)^(0+128)+3)
  5874  04E3  082C               	movf	(??_main+6)^(0+128),w
  5875  04E4  07A6               	addwf	??_main^(0+128),f
  5876  04E5  082D               	movf	(??_main+7)^(0+128),w
  5877  04E6  3DA7               	addwfc	(??_main^(0+128)+1),f
  5878  04E7  082E               	movf	(??_main+8)^(0+128),w
  5879  04E8  3DA8               	addwfc	(??_main^(0+128)+2),f
  5880  04E9  082F               	movf	(??_main+9)^(0+128),w
  5881  04EA  3DA9               	addwfc	(??_main^(0+128)+3),f
  5882  04EB  0829               	movf	(??_main+3)^(0+128),w
  5883  04EC  00C4               	movwf	(main@totals+3)^(0+128)
  5884  04ED  0828               	movf	(??_main+2)^(0+128),w
  5885  04EE  00C3               	movwf	(main@totals+2)^(0+128)
  5886  04EF  0827               	movf	(??_main+1)^(0+128),w
  5887  04F0  00C2               	movwf	(main@totals+1)^(0+128)
  5888  04F1  0826               	movf	??_main^(0+128),w
  5889  04F2  00C1               	movwf	main@totals^(0+128)
  5890                           
  5891                           ;main.c: 42: sampleIndex += 1;
  5892  04F3  3001               	movlw	1
  5893  04F4  07E5               	addwf	main@sampleIndex^(0+128),f
  5894  04F5  3000               	movlw	0
  5895  04F6  3DE6               	addwfc	(main@sampleIndex+1)^(0+128),f
  5896                           
  5897                           ;main.c: 44: if(sampleIndex >= 50)
  5898  04F7  3000               	movlw	0
  5899  04F8  0266               	subwf	(main@sampleIndex+1)^(0+128),w
  5900  04F9  3032               	movlw	50
  5901  04FA  1903               	skipnz
  5902  04FB  0265               	subwf	main@sampleIndex^(0+128),w
  5903  04FC  1C03               	skipc
  5904  04FD  2D00               	goto	l3056
  5905                           
  5906                           ;main.c: 45: {
  5907                           ;main.c: 46: sampleIndex = 0;
  5908  04FE  01E5               	clrf	main@sampleIndex^(0+128)
  5909  04FF  01E6               	clrf	(main@sampleIndex+1)^(0+128)
  5910  0500                     l3056:	
  5911                           
  5912                           ;main.c: 47: }
  5913                           ;main.c: 49: readTemperature = totals / 50;
  5914  0500  3000               	movlw	0
  5915  0501  00F3               	movwf	___aldiv@divisor+3
  5916  0502  3000               	movlw	0
  5917  0503  00F2               	movwf	___aldiv@divisor+2
  5918  0504  3000               	movlw	0
  5919  0505  00F1               	movwf	___aldiv@divisor+1
  5920  0506  3032               	movlw	50
  5921  0507  00F0               	movwf	___aldiv@divisor
  5922  0508  0844               	movf	(main@totals+3)^(0+128),w
  5923  0509  00F7               	movwf	___aldiv@dividend+3
  5924  050A  0843               	movf	(main@totals+2)^(0+128),w
  5925  050B  00F6               	movwf	___aldiv@dividend+2
  5926  050C  0842               	movf	(main@totals+1)^(0+128),w
  5927  050D  00F5               	movwf	___aldiv@dividend+1
  5928  050E  0841               	movf	main@totals^(0+128),w
  5929  050F  00F4               	movwf	___aldiv@dividend
  5930  0510  318C  2448  3184   	fcall	___aldiv
  5931  0513  0871               	movf	?___aldiv+1,w
  5932  0514  0021               	movlb	1	; select bank1
  5933  0515  00CA               	movwf	(main@readTemperature+1)^(0+128)
  5934  0516  0870               	movf	?___aldiv,w
  5935  0517  00C9               	movwf	main@readTemperature^(0+128)
  5936                           
  5937                           ;main.c: 52: if(startupTimer >= 70)
  5938  0518  3046               	movlw	70
  5939  0519  023E               	subwf	main@startupTimer^(0+128),w
  5940  051A  1C03               	skipc
  5941  051B  2D49               	goto	l3074
  5942                           
  5943                           ;main.c: 53: {
  5944                           ;main.c: 54: if(firstTimeThrough == 0)
  5945  051C  083B               	movf	main@firstTimeThrough^(0+128),w
  5946  051D  1D03               	btfss	3,2
  5947  051E  2D29               	goto	l3068
  5948                           
  5949                           ;main.c: 55: {
  5950                           ;main.c: 56: readTemperatureOld = readTemperature;
  5951  051F  084A               	movf	(main@readTemperature+1)^(0+128),w
  5952  0520  00C6               	movwf	(main@readTemperatureOld+1)^(0+128)
  5953  0521  0849               	movf	main@readTemperature^(0+128),w
  5954  0522  00C5               	movwf	main@readTemperatureOld^(0+128)
  5955                           
  5956                           ;main.c: 57: counter = 0;
  5957  0523  01BC               	clrf	main@counter^(0+128)
  5958  0524  01BD               	clrf	(main@counter+1)^(0+128)
  5959                           
  5960                           ;main.c: 58: firstTimeThrough +=1;
  5961  0525  3001               	movlw	1
  5962  0526  00A6               	movwf	??_main^(0+128)
  5963  0527  0826               	movf	??_main^(0+128),w
  5964  0528  07BB               	addwf	main@firstTimeThrough^(0+128),f
  5965  0529                     l3068:	
  5966                           
  5967                           ;main.c: 59: }
  5968                           ;main.c: 61: if(readTemperature > readTemperatureOld)
  5969  0529  084A               	movf	(main@readTemperature+1)^(0+128),w
  5970  052A  0246               	subwf	(main@readTemperatureOld+1)^(0+128),w
  5971  052B  1D03               	skipz
  5972  052C  2D2F               	goto	u3285
  5973  052D  0849               	movf	main@readTemperature^(0+128),w
  5974  052E  0245               	subwf	main@readTemperatureOld^(0+128),w
  5975  052F                     u3285:	
  5976  052F  1803               	skipnc
  5977  0530  2D35               	goto	l394
  5978                           
  5979                           ;main.c: 62: {
  5980                           ;main.c: 63: readTemperatureOld += 1;
  5981  0531  3001               	movlw	1
  5982  0532  07C5               	addwf	main@readTemperatureOld^(0+128),f
  5983  0533  3000               	movlw	0
  5984  0534  3DC6               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  5985  0535                     l394:	
  5986                           
  5987                           ;main.c: 64: }
  5988                           ;main.c: 66: if(readTemperature < readTemperatureOld)
  5989  0535  0846               	movf	(main@readTemperatureOld+1)^(0+128),w
  5990  0536  024A               	subwf	(main@readTemperature+1)^(0+128),w
  5991  0537  1D03               	skipz
  5992  0538  2D3B               	goto	u3295
  5993  0539  0845               	movf	main@readTemperatureOld^(0+128),w
  5994  053A  0249               	subwf	main@readTemperature^(0+128),w
  5995  053B                     u3295:	
  5996  053B  1803               	skipnc
  5997  053C  2D41               	goto	l395
  5998                           
  5999                           ;main.c: 67: {
  6000                           ;main.c: 68: readTemperatureOld -= 1;
  6001  053D  3001               	movlw	1
  6002  053E  02C5               	subwf	main@readTemperatureOld^(0+128),f
  6003  053F  3000               	movlw	0
  6004  0540  3BC6               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  6005  0541                     l395:	
  6006                           
  6007                           ;main.c: 69: }
  6008                           ;main.c: 71: readTemperature = readTemperatureOld;
  6009  0541  0846               	movf	(main@readTemperatureOld+1)^(0+128),w
  6010  0542  00CA               	movwf	(main@readTemperature+1)^(0+128)
  6011  0543  0845               	movf	main@readTemperatureOld^(0+128),w
  6012  0544  00C9               	movwf	main@readTemperature^(0+128)
  6013                           
  6014                           ;main.c: 73: startupTimer = 69;
  6015  0545  3045               	movlw	69
  6016  0546  00A6               	movwf	??_main^(0+128)
  6017  0547  0826               	movf	??_main^(0+128),w
  6018  0548  00BE               	movwf	main@startupTimer^(0+128)
  6019  0549                     l3074:	
  6020                           
  6021                           ;main.c: 74: }
  6022                           ;main.c: 76: startupTimer +=1;
  6023  0549  3001               	movlw	1
  6024  054A  00A6               	movwf	??_main^(0+128)
  6025  054B  0826               	movf	??_main^(0+128),w
  6026  054C  07BE               	addwf	main@startupTimer^(0+128),f
  6027                           
  6028                           ;main.c: 79: R = 10200/(1023/(float)readTemperature - 1);
  6029  054D  3000               	movlw	0
  6030  054E  0020               	movlb	0	; select bank0
  6031  054F  00B0               	movwf	___ftadd@f1
  6032  0550  3080               	movlw	128
  6033  0551  00B1               	movwf	___ftadd@f1+1
  6034  0552  30BF               	movlw	191
  6035  0553  00B2               	movwf	___ftadd@f1+2
  6036  0554  0021               	movlb	1	; select bank1
  6037  0555  084A               	movf	(main@readTemperature+1)^(0+128),w
  6038  0556  00F9               	movwf	___lwtoft@c+1
  6039  0557  0849               	movf	main@readTemperature^(0+128),w
  6040  0558  00F8               	movwf	___lwtoft@c
  6041  0559  3197  278C  3184   	fcall	___lwtoft
  6042  055C  0878               	movf	?___lwtoft,w
  6043  055D  0020               	movlb	0	; select bank0
  6044  055E  00A0               	movwf	___ftdiv@f2
  6045  055F  0879               	movf	?___lwtoft+1,w
  6046  0560  00A1               	movwf	___ftdiv@f2+1
  6047  0561  087A               	movf	?___lwtoft+2,w
  6048  0562  00A2               	movwf	___ftdiv@f2+2
  6049  0563  30C0               	movlw	192
  6050  0564  00A3               	movwf	___ftdiv@f1
  6051  0565  307F               	movlw	127
  6052  0566  00A4               	movwf	___ftdiv@f1+1
  6053  0567  3044               	movlw	68
  6054  0568  00A5               	movwf	___ftdiv@f1+2
  6055  0569  318D  25DE  3184   	fcall	___ftdiv
  6056  056C  0020               	movlb	0	; select bank0
  6057  056D  0820               	movf	?___ftdiv,w
  6058  056E  00B3               	movwf	___ftadd@f2
  6059  056F  0821               	movf	?___ftdiv+1,w
  6060  0570  00B4               	movwf	___ftadd@f2+1
  6061  0571  0822               	movf	?___ftdiv+2,w
  6062  0572  00B5               	movwf	___ftadd@f2+2
  6063  0573  3181  2184  3184   	fcall	___ftadd
  6064  0576  0020               	movlb	0	; select bank0
  6065  0577  0830               	movf	?___ftadd,w
  6066  0578  0021               	movlb	1	; select bank1
  6067  0579  00B5               	movwf	_main$1055^(0+128)
  6068  057A  0020               	movlb	0	; select bank0
  6069  057B  0831               	movf	?___ftadd+1,w
  6070  057C  0021               	movlb	1	; select bank1
  6071  057D  00B6               	movwf	(_main$1055+1)^(0+128)
  6072  057E  0020               	movlb	0	; select bank0
  6073  057F  0832               	movf	?___ftadd+2,w
  6074  0580  0021               	movlb	1	; select bank1
  6075  0581  00B7               	movwf	(_main$1055+2)^(0+128)
  6076                           
  6077                           ;main.c: 79: R = 10200/(1023/(float)readTemperature - 1);
  6078  0582  0835               	movf	_main$1055^(0+128),w
  6079  0583  0020               	movlb	0	; select bank0
  6080  0584  00A0               	movwf	___ftdiv@f2
  6081  0585  0021               	movlb	1	; select bank1
  6082  0586  0836               	movf	(_main$1055+1)^(0+128),w
  6083  0587  0020               	movlb	0	; select bank0
  6084  0588  00A1               	movwf	___ftdiv@f2+1
  6085  0589  0021               	movlb	1	; select bank1
  6086  058A  0837               	movf	(_main$1055+2)^(0+128),w
  6087  058B  0020               	movlb	0	; select bank0
  6088  058C  00A2               	movwf	___ftdiv@f2+2
  6089  058D  3060               	movlw	96
  6090  058E  00A3               	movwf	___ftdiv@f1
  6091  058F  301F               	movlw	31
  6092  0590  00A4               	movwf	___ftdiv@f1+1
  6093  0591  3046               	movlw	70
  6094  0592  00A5               	movwf	___ftdiv@f1+2
  6095  0593  318D  25DE  3184   	fcall	___ftdiv
  6096  0596  0020               	movlb	0	; select bank0
  6097  0597  0820               	movf	?___ftdiv,w
  6098  0598  0021               	movlb	1	; select bank1
  6099  0599  00B2               	movwf	main@R^(0+128)
  6100  059A  0020               	movlb	0	; select bank0
  6101  059B  0821               	movf	?___ftdiv+1,w
  6102  059C  0021               	movlb	1	; select bank1
  6103  059D  00B3               	movwf	(main@R+1)^(0+128)
  6104  059E  0020               	movlb	0	; select bank0
  6105  059F  0822               	movf	?___ftdiv+2,w
  6106  05A0  0021               	movlb	1	; select bank1
  6107  05A1  00B4               	movwf	(main@R+2)^(0+128)
  6108                           
  6109                           ;main.c: 81: steinhart = R /10061;
  6110  05A2  3034               	movlw	52
  6111  05A3  0020               	movlb	0	; select bank0
  6112  05A4  00A0               	movwf	___ftdiv@f2
  6113  05A5  301D               	movlw	29
  6114  05A6  00A1               	movwf	___ftdiv@f2+1
  6115  05A7  3046               	movlw	70
  6116  05A8  00A2               	movwf	___ftdiv@f2+2
  6117  05A9  0021               	movlb	1	; select bank1
  6118  05AA  0832               	movf	main@R^(0+128),w
  6119  05AB  0020               	movlb	0	; select bank0
  6120  05AC  00A3               	movwf	___ftdiv@f1
  6121  05AD  0021               	movlb	1	; select bank1
  6122  05AE  0833               	movf	(main@R+1)^(0+128),w
  6123  05AF  0020               	movlb	0	; select bank0
  6124  05B0  00A4               	movwf	___ftdiv@f1+1
  6125  05B1  0021               	movlb	1	; select bank1
  6126  05B2  0834               	movf	(main@R+2)^(0+128),w
  6127  05B3  0020               	movlb	0	; select bank0
  6128  05B4  00A5               	movwf	___ftdiv@f1+2
  6129  05B5  318D  25DE  3184   	fcall	___ftdiv
  6130  05B8  0020               	movlb	0	; select bank0
  6131  05B9  0820               	movf	?___ftdiv,w
  6132  05BA  0021               	movlb	1	; select bank1
  6133  05BB  00CB               	movwf	main@steinhart^(0+128)
  6134  05BC  0020               	movlb	0	; select bank0
  6135  05BD  0821               	movf	?___ftdiv+1,w
  6136  05BE  0021               	movlb	1	; select bank1
  6137  05BF  00CC               	movwf	(main@steinhart+1)^(0+128)
  6138  05C0  0020               	movlb	0	; select bank0
  6139  05C1  0822               	movf	?___ftdiv+2,w
  6140  05C2  0021               	movlb	1	; select bank1
  6141  05C3  00CD               	movwf	(main@steinhart+2)^(0+128)
  6142                           
  6143                           ;main.c: 82: steinhart = log(steinhart);
  6144  05C4  084B               	movf	main@steinhart^(0+128),w
  6145  05C5  0020               	movlb	0	; select bank0
  6146  05C6  00C7               	movwf	log@x
  6147  05C7  0021               	movlb	1	; select bank1
  6148  05C8  084C               	movf	(main@steinhart+1)^(0+128),w
  6149  05C9  0020               	movlb	0	; select bank0
  6150  05CA  00C8               	movwf	log@x+1
  6151  05CB  0021               	movlb	1	; select bank1
  6152  05CC  084D               	movf	(main@steinhart+2)^(0+128),w
  6153  05CD  0020               	movlb	0	; select bank0
  6154  05CE  00C9               	movwf	log@x+2
  6155  05CF  318E  2687  3184   	fcall	_log
  6156  05D2  0020               	movlb	0	; select bank0
  6157  05D3  0847               	movf	?_log,w
  6158  05D4  0021               	movlb	1	; select bank1
  6159  05D5  00CB               	movwf	main@steinhart^(0+128)
  6160  05D6  0020               	movlb	0	; select bank0
  6161  05D7  0848               	movf	?_log+1,w
  6162  05D8  0021               	movlb	1	; select bank1
  6163  05D9  00CC               	movwf	(main@steinhart+1)^(0+128)
  6164  05DA  0020               	movlb	0	; select bank0
  6165  05DB  0849               	movf	?_log+2,w
  6166  05DC  0021               	movlb	1	; select bank1
  6167  05DD  00CD               	movwf	(main@steinhart+2)^(0+128)
  6168                           
  6169                           ;main.c: 83: steinhart /= 3995;
  6170  05DE  30B0               	movlw	176
  6171  05DF  0020               	movlb	0	; select bank0
  6172  05E0  00A0               	movwf	___ftdiv@f2
  6173  05E1  3079               	movlw	121
  6174  05E2  00A1               	movwf	___ftdiv@f2+1
  6175  05E3  3045               	movlw	69
  6176  05E4  00A2               	movwf	___ftdiv@f2+2
  6177  05E5  0021               	movlb	1	; select bank1
  6178  05E6  084B               	movf	main@steinhart^(0+128),w
  6179  05E7  0020               	movlb	0	; select bank0
  6180  05E8  00A3               	movwf	___ftdiv@f1
  6181  05E9  0021               	movlb	1	; select bank1
  6182  05EA  084C               	movf	(main@steinhart+1)^(0+128),w
  6183  05EB  0020               	movlb	0	; select bank0
  6184  05EC  00A4               	movwf	___ftdiv@f1+1
  6185  05ED  0021               	movlb	1	; select bank1
  6186  05EE  084D               	movf	(main@steinhart+2)^(0+128),w
  6187  05EF  0020               	movlb	0	; select bank0
  6188  05F0  00A5               	movwf	___ftdiv@f1+2
  6189  05F1  318D  25DE  3184   	fcall	___ftdiv
  6190  05F4  0020               	movlb	0	; select bank0
  6191  05F5  0820               	movf	?___ftdiv,w
  6192  05F6  0021               	movlb	1	; select bank1
  6193  05F7  00CB               	movwf	main@steinhart^(0+128)
  6194  05F8  0020               	movlb	0	; select bank0
  6195  05F9  0821               	movf	?___ftdiv+1,w
  6196  05FA  0021               	movlb	1	; select bank1
  6197  05FB  00CC               	movwf	(main@steinhart+1)^(0+128)
  6198  05FC  0020               	movlb	0	; select bank0
  6199  05FD  0822               	movf	?___ftdiv+2,w
  6200  05FE  0021               	movlb	1	; select bank1
  6201  05FF  00CD               	movwf	(main@steinhart+2)^(0+128)
  6202                           
  6203                           ;main.c: 84: steinhart += 1.0 / (25 + 273.15);
  6204  0600  30CF               	movlw	207
  6205  0601  0020               	movlb	0	; select bank0
  6206  0602  00B0               	movwf	___ftadd@f1
  6207  0603  305B               	movlw	91
  6208  0604  00B1               	movwf	___ftadd@f1+1
  6209  0605  303B               	movlw	59
  6210  0606  00B2               	movwf	___ftadd@f1+2
  6211  0607  0021               	movlb	1	; select bank1
  6212  0608  084B               	movf	main@steinhart^(0+128),w
  6213  0609  0020               	movlb	0	; select bank0
  6214  060A  00B3               	movwf	___ftadd@f2
  6215  060B  0021               	movlb	1	; select bank1
  6216  060C  084C               	movf	(main@steinhart+1)^(0+128),w
  6217  060D  0020               	movlb	0	; select bank0
  6218  060E  00B4               	movwf	___ftadd@f2+1
  6219  060F  0021               	movlb	1	; select bank1
  6220  0610  084D               	movf	(main@steinhart+2)^(0+128),w
  6221  0611  0020               	movlb	0	; select bank0
  6222  0612  00B5               	movwf	___ftadd@f2+2
  6223  0613  3181  2184  3184   	fcall	___ftadd
  6224  0616  0020               	movlb	0	; select bank0
  6225  0617  0830               	movf	?___ftadd,w
  6226  0618  0021               	movlb	1	; select bank1
  6227  0619  00CB               	movwf	main@steinhart^(0+128)
  6228  061A  0020               	movlb	0	; select bank0
  6229  061B  0831               	movf	?___ftadd+1,w
  6230  061C  0021               	movlb	1	; select bank1
  6231  061D  00CC               	movwf	(main@steinhart+1)^(0+128)
  6232  061E  0020               	movlb	0	; select bank0
  6233  061F  0832               	movf	?___ftadd+2,w
  6234  0620  0021               	movlb	1	; select bank1
  6235  0621  00CD               	movwf	(main@steinhart+2)^(0+128)
  6236                           
  6237                           ;main.c: 85: steinhart = 1.0 / steinhart;
  6238  0622  084B               	movf	main@steinhart^(0+128),w
  6239  0623  0020               	movlb	0	; select bank0
  6240  0624  00A0               	movwf	___ftdiv@f2
  6241  0625  0021               	movlb	1	; select bank1
  6242  0626  084C               	movf	(main@steinhart+1)^(0+128),w
  6243  0627  0020               	movlb	0	; select bank0
  6244  0628  00A1               	movwf	___ftdiv@f2+1
  6245  0629  0021               	movlb	1	; select bank1
  6246  062A  084D               	movf	(main@steinhart+2)^(0+128),w
  6247  062B  0020               	movlb	0	; select bank0
  6248  062C  00A2               	movwf	___ftdiv@f2+2
  6249  062D  3000               	movlw	0
  6250  062E  00A3               	movwf	___ftdiv@f1
  6251  062F  3080               	movlw	128
  6252  0630  00A4               	movwf	___ftdiv@f1+1
  6253  0631  303F               	movlw	63
  6254  0632  00A5               	movwf	___ftdiv@f1+2
  6255  0633  318D  25DE  3184   	fcall	___ftdiv
  6256  0636  0020               	movlb	0	; select bank0
  6257  0637  0820               	movf	?___ftdiv,w
  6258  0638  0021               	movlb	1	; select bank1
  6259  0639  00CB               	movwf	main@steinhart^(0+128)
  6260  063A  0020               	movlb	0	; select bank0
  6261  063B  0821               	movf	?___ftdiv+1,w
  6262  063C  0021               	movlb	1	; select bank1
  6263  063D  00CC               	movwf	(main@steinhart+1)^(0+128)
  6264  063E  0020               	movlb	0	; select bank0
  6265  063F  0822               	movf	?___ftdiv+2,w
  6266  0640  0021               	movlb	1	; select bank1
  6267  0641  00CD               	movwf	(main@steinhart+2)^(0+128)
  6268                           
  6269                           ;main.c: 86: steinhart -= 273.15;
  6270  0642  3093               	movlw	147
  6271  0643  0020               	movlb	0	; select bank0
  6272  0644  00BD               	movwf	___ftsub@f2
  6273  0645  3088               	movlw	136
  6274  0646  00BE               	movwf	___ftsub@f2+1
  6275  0647  3043               	movlw	67
  6276  0648  00BF               	movwf	___ftsub@f2+2
  6277  0649  0021               	movlb	1	; select bank1
  6278  064A  084B               	movf	main@steinhart^(0+128),w
  6279  064B  0020               	movlb	0	; select bank0
  6280  064C  00C0               	movwf	___ftsub@f1
  6281  064D  0021               	movlb	1	; select bank1
  6282  064E  084C               	movf	(main@steinhart+1)^(0+128),w
  6283  064F  0020               	movlb	0	; select bank0
  6284  0650  00C1               	movwf	___ftsub@f1+1
  6285  0651  0021               	movlb	1	; select bank1
  6286  0652  084D               	movf	(main@steinhart+2)^(0+128),w
  6287  0653  0020               	movlb	0	; select bank0
  6288  0654  00C2               	movwf	___ftsub@f1+2
  6289  0655  3188  2064  3184   	fcall	___ftsub
  6290  0658  0020               	movlb	0	; select bank0
  6291  0659  083D               	movf	?___ftsub,w
  6292  065A  0021               	movlb	1	; select bank1
  6293  065B  00CB               	movwf	main@steinhart^(0+128)
  6294  065C  0020               	movlb	0	; select bank0
  6295  065D  083E               	movf	?___ftsub+1,w
  6296  065E  0021               	movlb	1	; select bank1
  6297  065F  00CC               	movwf	(main@steinhart+1)^(0+128)
  6298  0660  0020               	movlb	0	; select bank0
  6299  0661  083F               	movf	?___ftsub+2,w
  6300  0662  0021               	movlb	1	; select bank1
  6301  0663  00CD               	movwf	(main@steinhart+2)^(0+128)
  6302                           
  6303                           ;main.c: 89: displayTemp = (uint16_t)(steinhart * 10);
  6304  0664  084B               	movf	main@steinhart^(0+128),w
  6305  0665  0020               	movlb	0	; select bank0
  6306  0666  00A3               	movwf	___ftmul@f2
  6307  0667  0021               	movlb	1	; select bank1
  6308  0668  084C               	movf	(main@steinhart+1)^(0+128),w
  6309  0669  0020               	movlb	0	; select bank0
  6310  066A  00A4               	movwf	___ftmul@f2+1
  6311  066B  0021               	movlb	1	; select bank1
  6312  066C  084D               	movf	(main@steinhart+2)^(0+128),w
  6313  066D  0020               	movlb	0	; select bank0
  6314  066E  00A5               	movwf	___ftmul@f2+2
  6315  066F  3000               	movlw	0
  6316  0670  00A0               	movwf	___ftmul@f1
  6317  0671  3020               	movlw	32
  6318  0672  00A1               	movwf	___ftmul@f1+1
  6319  0673  3041               	movlw	65
  6320  0674  00A2               	movwf	___ftmul@f1+2
  6321  0675  3180  2005  3184   	fcall	___ftmul
  6322  0678  0020               	movlb	0	; select bank0
  6323  0679  0820               	movf	?___ftmul,w
  6324  067A  00CE               	movwf	___fttol@f1
  6325  067B  0821               	movf	?___ftmul+1,w
  6326  067C  00CF               	movwf	___fttol@f1+1
  6327  067D  0822               	movf	?___ftmul+2,w
  6328  067E  00D0               	movwf	___fttol@f1+2
  6329  067F  318C  24CA  3184   	fcall	___fttol
  6330  0682  0020               	movlb	0	; select bank0
  6331  0683  084F               	movf	?___fttol+1,w
  6332  0684  0021               	movlb	1	; select bank1
  6333  0685  00C8               	movwf	(main@displayTemp+1)^(0+128)
  6334  0686  0020               	movlb	0	; select bank0
  6335  0687  084E               	movf	?___fttol,w
  6336  0688  0021               	movlb	1	; select bank1
  6337  0689  00C7               	movwf	main@displayTemp^(0+128)
  6338                           
  6339                           ;main.c: 91: if(toggle == 1)
  6340  068A  0338               	decf	main@toggle^(0+128),w
  6341  068B  1D03               	btfss	3,2
  6342  068C  2EC6               	goto	l3106
  6343                           
  6344                           ;main.c: 92: {
  6345                           ;main.c: 93: displayTemp = displayTemp*9/5+320;
  6346  068D  3005               	movlw	5
  6347  068E  00F6               	movwf	___lwdiv@divisor
  6348  068F  3000               	movlw	0
  6349  0690  00F7               	movwf	___lwdiv@divisor+1
  6350  0691  0848               	movf	(main@displayTemp+1)^(0+128),w
  6351  0692  00F1               	movwf	___wmul@multiplier+1
  6352  0693  0847               	movf	main@displayTemp^(0+128),w
  6353  0694  00F0               	movwf	___wmul@multiplier
  6354  0695  3009               	movlw	9
  6355  0696  00F2               	movwf	___wmul@multiplicand
  6356  0697  3000               	movlw	0
  6357  0698  00F3               	movwf	___wmul@multiplicand+1
  6358  0699  3188  202C  3184   	fcall	___wmul
  6359  069C  0871               	movf	?___wmul+1,w
  6360  069D  00F9               	movwf	___lwdiv@dividend+1
  6361  069E  0870               	movf	?___wmul,w
  6362  069F  00F8               	movwf	___lwdiv@dividend
  6363  06A0  3189  214D  3184   	fcall	___lwdiv
  6364  06A3  0876               	movf	?___lwdiv,w
  6365  06A4  3E40               	addlw	64
  6366  06A5  0021               	movlb	1	; select bank1
  6367  06A6  00C7               	movwf	main@displayTemp^(0+128)
  6368  06A7  3001               	movlw	1
  6369  06A8  3D77               	addwfc	?___lwdiv+1,w
  6370  06A9  00C8               	movwf	(main@displayTemp+1)^(0+128)
  6371                           
  6372                           ;main.c: 94: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6373  06AA  01F3               	clrf	LCD_Set_Cursor@y
  6374  06AB  0AF3               	incf	LCD_Set_Cursor@y,f
  6375  06AC  3000               	movlw	0
  6376  06AD  318A  2234  3184   	fcall	_LCD_Set_Cursor
  6377  06B0  0021               	movlb	1	; select bank1
  6378  06B1  0848               	movf	(main@displayTemp+1)^(0+128),w
  6379  06B2  0020               	movlb	0	; select bank0
  6380  06B3  00DD               	movwf	LCD_Write_Int@value+1
  6381  06B4  0021               	movlb	1	; select bank1
  6382  06B5  0847               	movf	main@displayTemp^(0+128),w
  6383  06B6  0020               	movlb	0	; select bank0
  6384  06B7  00DC               	movwf	LCD_Write_Int@value
  6385  06B8  01DE               	clrf	LCD_Write_Int@fieldLength
  6386  06B9  03DE               	decf	LCD_Write_Int@fieldLength,f
  6387  06BA  01DF               	clrf	LCD_Write_Int@numPlaces
  6388  06BB  0ADF               	incf	LCD_Write_Int@numPlaces,f
  6389  06BC  01E0               	clrf	LCD_Write_Int@sign
  6390  06BD  3180  20B9  3184   	fcall	_LCD_Write_Int
  6391                           
  6392                           ;main.c: 95: LCD_Write_Char(0);
  6393  06C0  3000               	movlw	0
  6394  06C1  3188  20F1  3184   	fcall	_LCD_Write_Char
  6395                           
  6396                           ;main.c: 96: LCD_Write_Char('F');
  6397  06C4  3046               	movlw	70
  6398  06C5  2EE1               	goto	L1
  6399  06C6                     l3106:	
  6400                           ;main.c: 98: }
  6401                           
  6402                           ;main.c: 97: LCD_Write_Char(' ');
  6403                           
  6404                           
  6405                           ;main.c: 99: else
  6406                           ;main.c: 100: {
  6407                           ;main.c: 101: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6408  06C6  01F3               	clrf	LCD_Set_Cursor@y
  6409  06C7  0AF3               	incf	LCD_Set_Cursor@y,f
  6410  06C8  3000               	movlw	0
  6411  06C9  318A  2234  3184   	fcall	_LCD_Set_Cursor
  6412  06CC  0021               	movlb	1	; select bank1
  6413  06CD  0848               	movf	(main@displayTemp+1)^(0+128),w
  6414  06CE  0020               	movlb	0	; select bank0
  6415  06CF  00DD               	movwf	LCD_Write_Int@value+1
  6416  06D0  0021               	movlb	1	; select bank1
  6417  06D1  0847               	movf	main@displayTemp^(0+128),w
  6418  06D2  0020               	movlb	0	; select bank0
  6419  06D3  00DC               	movwf	LCD_Write_Int@value
  6420  06D4  01DE               	clrf	LCD_Write_Int@fieldLength
  6421  06D5  03DE               	decf	LCD_Write_Int@fieldLength,f
  6422  06D6  01DF               	clrf	LCD_Write_Int@numPlaces
  6423  06D7  0ADF               	incf	LCD_Write_Int@numPlaces,f
  6424  06D8  01E0               	clrf	LCD_Write_Int@sign
  6425  06D9  3180  20B9  3184   	fcall	_LCD_Write_Int
  6426                           
  6427                           ;main.c: 102: LCD_Write_Char(0);
  6428  06DC  3000               	movlw	0
  6429  06DD  3188  20F1  3184   	fcall	_LCD_Write_Char
  6430                           
  6431                           ;main.c: 103: LCD_Write_Char('C');
  6432  06E0  3043               	movlw	67
  6433  06E1                     L1:	
  6434  06E1  3188  20F1  3184   	fcall	_LCD_Write_Char
  6435                           
  6436                           ;main.c: 104: LCD_Write_Char(' ');
  6437  06E4  3020               	movlw	32
  6438  06E5  3188  20F1  3184   	fcall	_LCD_Write_Char
  6439                           
  6440                           ;main.c: 105: }
  6441                           ;main.c: 108: extern float DerivativeValue;
  6442                           ;main.c: 109: { LCD_Set_Cursor(1,0); LCD_Write_Int(DerivativeValue,3, 0, 0);};
  6443  06E8  01F3               	clrf	LCD_Set_Cursor@y
  6444  06E9  3001               	movlw	1
  6445  06EA  318A  2234  3184   	fcall	_LCD_Set_Cursor
  6446  06ED  0021               	movlb	1	; select bank1
  6447  06EE  084E               	movf	_DerivativeValue^(0+128),w
  6448  06EF  0020               	movlb	0	; select bank0
  6449  06F0  00CE               	movwf	___fttol@f1
  6450  06F1  0021               	movlb	1	; select bank1
  6451  06F2  084F               	movf	(_DerivativeValue+1)^(0+128),w
  6452  06F3  0020               	movlb	0	; select bank0
  6453  06F4  00CF               	movwf	___fttol@f1+1
  6454  06F5  0021               	movlb	1	; select bank1
  6455  06F6  0850               	movf	(_DerivativeValue+2)^(0+128),w
  6456  06F7  0020               	movlb	0	; select bank0
  6457  06F8  00D0               	movwf	___fttol@f1+2
  6458  06F9  318C  24CA  3184   	fcall	___fttol
  6459  06FC  0020               	movlb	0	; select bank0
  6460  06FD  084F               	movf	?___fttol+1,w
  6461  06FE  00DD               	movwf	LCD_Write_Int@value+1
  6462  06FF  084E               	movf	?___fttol,w
  6463  0700  00DC               	movwf	LCD_Write_Int@value
  6464  0701  3003               	movlw	3
  6465  0702  0021               	movlb	1	; select bank1
  6466  0703  00A6               	movwf	??_main^(0+128)
  6467  0704  0826               	movf	??_main^(0+128),w
  6468  0705  0020               	movlb	0	; select bank0
  6469  0706  00DE               	movwf	LCD_Write_Int@fieldLength
  6470  0707  01DF               	clrf	LCD_Write_Int@numPlaces
  6471  0708  01E0               	clrf	LCD_Write_Int@sign
  6472  0709  3180  20B9  3184   	fcall	_LCD_Write_Int
  6473                           
  6474                           ;main.c: 110: { LCD_Set_Cursor(1,4); LCD_Write_Int(PWM_Output,4, 0, 0);};
  6475  070C  3004               	movlw	4
  6476  070D  0021               	movlb	1	; select bank1
  6477  070E  00A6               	movwf	??_main^(0+128)
  6478  070F  0826               	movf	??_main^(0+128),w
  6479  0710  00F3               	movwf	LCD_Set_Cursor@y
  6480  0711  3001               	movlw	1
  6481  0712  318A  2234  3184   	fcall	_LCD_Set_Cursor
  6482  0715  0021               	movlb	1	; select bank1
  6483  0716  0840               	movf	(main@PWM_Output+1)^(0+128),w
  6484  0717  0020               	movlb	0	; select bank0
  6485  0718  00DD               	movwf	LCD_Write_Int@value+1
  6486  0719  0021               	movlb	1	; select bank1
  6487  071A  083F               	movf	main@PWM_Output^(0+128),w
  6488  071B  0020               	movlb	0	; select bank0
  6489  071C  00DC               	movwf	LCD_Write_Int@value
  6490  071D  3004               	movlw	4
  6491  071E  0021               	movlb	1	; select bank1
  6492  071F  00A6               	movwf	??_main^(0+128)
  6493  0720  0826               	movf	??_main^(0+128),w
  6494  0721  0020               	movlb	0	; select bank0
  6495  0722  00DE               	movwf	LCD_Write_Int@fieldLength
  6496  0723  01DF               	clrf	LCD_Write_Int@numPlaces
  6497  0724  01E0               	clrf	LCD_Write_Int@sign
  6498  0725  3180  20B9  3184   	fcall	_LCD_Write_Int
  6499                           
  6500                           ;main.c: 111: LCD_Write_Char(' ');
  6501  0728  3020               	movlw	32
  6502  0729  3188  20F1  3184   	fcall	_LCD_Write_Char
  6503                           
  6504                           ;main.c: 114: counter +=1;
  6505  072C  3001               	movlw	1
  6506  072D  0021               	movlb	1	; select bank1
  6507  072E  07BC               	addwf	main@counter^(0+128),f
  6508  072F  3000               	movlw	0
  6509  0730  3DBD               	addwfc	(main@counter+1)^(0+128),f
  6510                           
  6511                           ;main.c: 116: if(counter>12)
  6512  0731  3000               	movlw	0
  6513  0732  023D               	subwf	(main@counter+1)^(0+128),w
  6514  0733  300D               	movlw	13
  6515  0734  1903               	skipnz
  6516  0735  023C               	subwf	main@counter^(0+128),w
  6517  0736  1C03               	skipc
  6518  0737  2F6C               	goto	l3134
  6519                           
  6520                           ;main.c: 117: {
  6521                           ;main.c: 119: counter = 0;
  6522  0738  01BC               	clrf	main@counter^(0+128)
  6523  0739  01BD               	clrf	(main@counter+1)^(0+128)
  6524                           
  6525                           ;main.c: 120: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  6526  073A  084B               	movf	main@steinhart^(0+128),w
  6527  073B  0020               	movlb	0	; select bank0
  6528  073C  00C8               	movwf	PID_Calculate@temp
  6529  073D  0021               	movlb	1	; select bank1
  6530  073E  084C               	movf	(main@steinhart+1)^(0+128),w
  6531  073F  0020               	movlb	0	; select bank0
  6532  0740  00C9               	movwf	PID_Calculate@temp+1
  6533  0741  0021               	movlb	1	; select bank1
  6534  0742  084D               	movf	(main@steinhart+2)^(0+128),w
  6535  0743  0020               	movlb	0	; select bank0
  6536  0744  00CA               	movwf	PID_Calculate@temp+2
  6537  0745  0021               	movlb	1	; select bank1
  6538  0746  086E               	movf	_setpoint^(0+128),w
  6539  0747  00A6               	movwf	??_main^(0+128)
  6540  0748  01A7               	clrf	(??_main^(0+128)+1)
  6541  0749  0826               	movf	??_main^(0+128),w
  6542  074A  0020               	movlb	0	; select bank0
  6543  074B  00C6               	movwf	PID_Calculate@setpoint
  6544  074C  0021               	movlb	1	; select bank1
  6545  074D  0827               	movf	(??_main+1)^(0+128),w
  6546  074E  0020               	movlb	0	; select bank0
  6547  074F  00C7               	movwf	PID_Calculate@setpoint+1
  6548  0750  3182  227A  3184   	fcall	_PID_Calculate
  6549  0753  0020               	movlb	0	; select bank0
  6550  0754  0846               	movf	?_PID_Calculate,w
  6551  0755  00CE               	movwf	___fttol@f1
  6552  0756  0847               	movf	?_PID_Calculate+1,w
  6553  0757  00CF               	movwf	___fttol@f1+1
  6554  0758  0848               	movf	?_PID_Calculate+2,w
  6555  0759  00D0               	movwf	___fttol@f1+2
  6556  075A  318C  24CA  3184   	fcall	___fttol
  6557  075D  0020               	movlb	0	; select bank0
  6558  075E  084F               	movf	?___fttol+1,w
  6559  075F  0021               	movlb	1	; select bank1
  6560  0760  00C0               	movwf	(main@PWM_Output+1)^(0+128)
  6561  0761  0020               	movlb	0	; select bank0
  6562  0762  084E               	movf	?___fttol,w
  6563  0763  0021               	movlb	1	; select bank1
  6564  0764  00BF               	movwf	main@PWM_Output^(0+128)
  6565                           
  6566                           ;main.c: 127: PWM6_LoadDutyValue(PWM_Output);
  6567  0765  0840               	movf	(main@PWM_Output+1)^(0+128),w
  6568  0766  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6569  0767  083F               	movf	main@PWM_Output^(0+128),w
  6570  0768  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6571  0769  3197  279F  3184   	fcall	_PWM6_LoadDutyValue
  6572  076C                     l3134:	
  6573                           
  6574                           ;main.c: 128: }
  6575                           ;main.c: 131: if(TMR0IF)
  6576  076C  002E               	movlb	14	; select bank14
  6577  076D  1E8C               	btfss	12,5	;volatile
  6578  076E  2F7B               	goto	l3140
  6579                           
  6580                           ;main.c: 132: {
  6581                           ;main.c: 133: TMR0H = 0x24;
  6582  076F  3024               	movlw	36
  6583  0770  0020               	movlb	0	; select bank0
  6584  0771  009D               	movwf	29	;volatile
  6585                           
  6586                           ;main.c: 134: TMR0L = 0x9F;
  6587  0772  309F               	movlw	159
  6588  0773  009C               	movwf	28	;volatile
  6589                           
  6590                           ;main.c: 135: TMR0IF = 0;
  6591  0774  002E               	movlb	14	; select bank14
  6592  0775  128C               	bcf	12,5	;volatile
  6593                           
  6594                           ;main.c: 136: seconds+=1;
  6595  0776  3001               	movlw	1
  6596  0777  0021               	movlb	1	; select bank1
  6597  0778  07B9               	addwf	main@seconds^(0+128),f
  6598  0779  3000               	movlw	0
  6599  077A  3DBA               	addwfc	(main@seconds+1)^(0+128),f
  6600  077B                     l3140:	
  6601                           
  6602                           ;main.c: 137: }
  6603                           ;main.c: 139: if(setpoint - steinhart < 2)
  6604  077B  0021               	movlb	1	; select bank1
  6605  077C  084B               	movf	main@steinhart^(0+128),w
  6606  077D  00F0               	movwf	___ftneg@f1
  6607  077E  084C               	movf	(main@steinhart+1)^(0+128),w
  6608  077F  00F1               	movwf	___ftneg@f1+1
  6609  0780  084D               	movf	(main@steinhart+2)^(0+128),w
  6610  0781  00F2               	movwf	___ftneg@f1+2
  6611  0782  3197  2723  3184   	fcall	___ftneg
  6612  0785  0870               	movf	?___ftneg,w
  6613  0786  0020               	movlb	0	; select bank0
  6614  0787  00B0               	movwf	___ftadd@f1
  6615  0788  0871               	movf	?___ftneg+1,w
  6616  0789  00B1               	movwf	___ftadd@f1+1
  6617  078A  0872               	movf	?___ftneg+2,w
  6618  078B  00B2               	movwf	___ftadd@f1+2
  6619  078C  0021               	movlb	1	; select bank1
  6620  078D  086E               	movf	_setpoint^(0+128),w
  6621  078E  3197  27E6  3184   	fcall	___lbtoft
  6622  0791  0878               	movf	?___lbtoft,w
  6623  0792  0020               	movlb	0	; select bank0
  6624  0793  00B3               	movwf	___ftadd@f2
  6625  0794  0879               	movf	?___lbtoft+1,w
  6626  0795  00B4               	movwf	___ftadd@f2+1
  6627  0796  087A               	movf	?___lbtoft+2,w
  6628  0797  00B5               	movwf	___ftadd@f2+2
  6629  0798  3181  2184  3184   	fcall	___ftadd
  6630  079B  0020               	movlb	0	; select bank0
  6631  079C  0830               	movf	?___ftadd,w
  6632  079D  00BD               	movwf	___ftge@ff1
  6633  079E  0831               	movf	?___ftadd+1,w
  6634  079F  00BE               	movwf	___ftge@ff1+1
  6635  07A0  0832               	movf	?___ftadd+2,w
  6636  07A1  00BF               	movwf	___ftge@ff1+2
  6637  07A2  3000               	movlw	0
  6638  07A3  00C0               	movwf	___ftge@ff2
  6639  07A4  3000               	movlw	0
  6640  07A5  00C1               	movwf	___ftge@ff2+1
  6641  07A6  3040               	movlw	64
  6642  07A7  00C2               	movwf	___ftge@ff2+2
  6643  07A8  3189  21BC  3184   	fcall	___ftge
  6644  07AB  1803               	btfsc	3,0
  6645  07AC  2FBB               	goto	l3148
  6646                           
  6647                           ;main.c: 140: {
  6648                           ;main.c: 141: if(seconds>63)
  6649  07AD  3000               	movlw	0
  6650  07AE  0021               	movlb	1	; select bank1
  6651  07AF  023A               	subwf	(main@seconds+1)^(0+128),w
  6652  07B0  3040               	movlw	64
  6653  07B1  1903               	skipnz
  6654  07B2  0239               	subwf	main@seconds^(0+128),w
  6655  07B3  1C03               	skipc
  6656  07B4  2FBB               	goto	l3148
  6657                           
  6658                           ;main.c: 142: {
  6659                           ;main.c: 143: minutes+=1;
  6660  07B5  3001               	movlw	1
  6661  07B6  07B0               	addwf	main@minutes^(0+128),f
  6662  07B7  3000               	movlw	0
  6663  07B8  3DB1               	addwfc	(main@minutes+1)^(0+128),f
  6664                           
  6665                           ;main.c: 144: seconds = 0;
  6666  07B9  01B9               	clrf	main@seconds^(0+128)
  6667  07BA  01BA               	clrf	(main@seconds+1)^(0+128)
  6668  07BB                     l3148:	
  6669                           
  6670                           ;main.c: 145: }
  6671                           ;main.c: 146: }
  6672                           ;main.c: 149: readButtons();
  6673  07BB  318D  2551  3184   	fcall	_readButtons
  6674                           
  6675                           ;main.c: 150: tempSetpoint();
  6676  07BE  318F  2737  3184   	fcall	_tempSetpoint
  6677  07C1  2C77               	goto	l3044
  6678  07C2                     __end_of_main:	
  6679                           
  6680                           	psect	text1
  6681  0F37                     __ptext1:	
  6682 ;; *************** function _tempSetpoint *****************
  6683 ;; Defined at:
  6684 ;;		line 12 in file "user.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  counter         1   79[BANK0 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        4 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    4
  6705 ;; This function calls:
  6706 ;;		_LCD_Clear
  6707 ;;		_LCD_Set_Cursor
  6708 ;;		_LCD_Write_Char
  6709 ;;		_LCD_Write_Int
  6710 ;;		_LCD_Write_String
  6711 ;;		_readButtons
  6712 ;; This function is called by:
  6713 ;;		_main
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function _tempSetpoint
  6719  0F37                     _tempSetpoint:	
  6720                           
  6721                           ;user.c: 14: uint8_t counter = 0;
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6725  0F37  0020               	movlb	0	; select bank0
  6726  0F38  01EF               	clrf	tempSetpoint@counter
  6727                           
  6728                           ;user.c: 16: oldSetpoint = setpoint;
  6729  0F39  0021               	movlb	1	; select bank1
  6730  0F3A  086E               	movf	_setpoint^(0+128),w
  6731  0F3B  00A3               	movwf	??_tempSetpoint^(0+128)
  6732  0F3C  0823               	movf	??_tempSetpoint^(0+128),w
  6733  0F3D  00E8               	movwf	_oldSetpoint^(0+128)
  6734  0F3E                     l2776:	
  6735                           ;user.c: 18: while(downCount >= 5)
  6736                           
  6737  0F3E  3005               	movlw	5
  6738  0F3F  0021               	movlb	1	; select bank1
  6739  0F40  0267               	subwf	_downCount^(0+128),w
  6740  0F41  1C03               	btfss	3,0
  6741  0F42  2FE4               	goto	l2804
  6742                           
  6743                           ;user.c: 19: {
  6744                           ;user.c: 20: counter+=1;
  6745  0F43  3001               	movlw	1
  6746  0F44  00A3               	movwf	??_tempSetpoint^(0+128)
  6747  0F45  0823               	movf	??_tempSetpoint^(0+128),w
  6748  0F46  0020               	movlb	0	; select bank0
  6749  0F47  07EF               	addwf	tempSetpoint@counter,f
  6750                           
  6751                           ;user.c: 21: if(counter<=1)
  6752  0F48  3002               	movlw	2
  6753  0F49  026F               	subwf	tempSetpoint@counter,w
  6754  0F4A  1803               	skipnc
  6755  0F4B  2F4F               	goto	l2756
  6756                           
  6757                           ;user.c: 22: {
  6758                           ;user.c: 23: LCD_Clear();
  6759  0F4C  3197  272B  318F   	fcall	_LCD_Clear
  6760  0F4F                     l2756:	
  6761                           
  6762                           ;user.c: 24: }
  6763                           ;user.c: 25: setpoint-=1;
  6764  0F4F  3001               	movlw	1
  6765  0F50  0021               	movlb	1	; select bank1
  6766  0F51  02EE               	subwf	_setpoint^(0+128),f
  6767                           
  6768                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6769  0F52  01F3               	clrf	LCD_Set_Cursor@y
  6770  0F53  3000               	movlw	0
  6771  0F54  318A  2234  318F   	fcall	_LCD_Set_Cursor
  6772  0F57  301B               	movlw	low (STR_1| (0+32768))
  6773  0F58  00F5               	movwf	LCD_Write_String@a
  6774  0F59  3090               	movlw	high (STR_1| (0+32768))
  6775  0F5A  00F6               	movwf	LCD_Write_String@a+1
  6776  0F5B  3188  2012  318F   	fcall	_LCD_Write_String
  6777                           
  6778                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6779  0F5E  01F3               	clrf	LCD_Set_Cursor@y
  6780  0F5F  3001               	movlw	1
  6781  0F60  318A  2234  318F   	fcall	_LCD_Set_Cursor
  6782  0F63  0021               	movlb	1	; select bank1
  6783  0F64  086E               	movf	_setpoint^(0+128),w
  6784  0F65  00A3               	movwf	??_tempSetpoint^(0+128)
  6785  0F66  01A4               	clrf	(??_tempSetpoint^(0+128)+1)
  6786  0F67  0823               	movf	??_tempSetpoint^(0+128),w
  6787  0F68  0020               	movlb	0	; select bank0
  6788  0F69  00DC               	movwf	LCD_Write_Int@value
  6789  0F6A  0021               	movlb	1	; select bank1
  6790  0F6B  0824               	movf	(??_tempSetpoint+1)^(0+128),w
  6791  0F6C  0020               	movlb	0	; select bank0
  6792  0F6D  00DD               	movwf	LCD_Write_Int@value+1
  6793  0F6E  3003               	movlw	3
  6794  0F6F  0021               	movlb	1	; select bank1
  6795  0F70  00A5               	movwf	(??_tempSetpoint+2)^(0+128)
  6796  0F71  0825               	movf	(??_tempSetpoint+2)^(0+128),w
  6797  0F72  0020               	movlb	0	; select bank0
  6798  0F73  00DE               	movwf	LCD_Write_Int@fieldLength
  6799  0F74  01DF               	clrf	LCD_Write_Int@numPlaces
  6800  0F75  01E0               	clrf	LCD_Write_Int@sign
  6801  0F76  3180  20B9  318F   	fcall	_LCD_Write_Int
  6802                           
  6803                           ;user.c: 28: LCD_Write_Char(0);
  6804  0F79  3000               	movlw	0
  6805  0F7A  3188  20F1  318F   	fcall	_LCD_Write_Char
  6806                           
  6807                           ;user.c: 29: LCD_Write_Char('C');
  6808  0F7D  3043               	movlw	67
  6809  0F7E  3188  20F1  318F   	fcall	_LCD_Write_Char
  6810                           
  6811                           ;user.c: 30: LCD_Write_Char(' ');
  6812  0F81  3020               	movlw	32
  6813  0F82  3188  20F1  318F   	fcall	_LCD_Write_Char
  6814                           
  6815                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6816  0F85  3072               	movlw	114
  6817  0F86  0021               	movlb	1	; select bank1
  6818  0F87  00A4               	movwf	(??_tempSetpoint^(0+128)+1)
  6819  0F88  30A1               	movlw	161
  6820  0F89  00A3               	movwf	??_tempSetpoint^(0+128)
  6821  0F8A                     u3357:	
  6822  0F8A  0BA3               	decfsz	??_tempSetpoint^(0+128),f
  6823  0F8B  2F8A               	goto	u3357
  6824  0F8C  0BA4               	decfsz	(??_tempSetpoint^(0+128)+1),f
  6825  0F8D  2F8A               	goto	u3357
  6826  0F8E  3200               	nop2
  6827                           
  6828                           ;user.c: 32: readButtons();
  6829  0F8F  318D  2551  318F   	fcall	_readButtons
  6830  0F92  2F3E               	goto	l2776
  6831  0F93                     l2778:	
  6832                           ;user.c: 33: }
  6833                           ;user.c: 35: while(upCount >= 5)
  6834                           
  6835                           
  6836                           ;user.c: 36: {
  6837                           ;user.c: 37: counter+=1;
  6838  0F93  3001               	movlw	1
  6839  0F94  00A3               	movwf	??_tempSetpoint^(0+128)
  6840  0F95  0823               	movf	??_tempSetpoint^(0+128),w
  6841  0F96  0020               	movlb	0	; select bank0
  6842  0F97  07EF               	addwf	tempSetpoint@counter,f
  6843                           
  6844                           ;user.c: 38: if(counter<=1)
  6845  0F98  3002               	movlw	2
  6846  0F99  026F               	subwf	tempSetpoint@counter,w
  6847  0F9A  1803               	skipnc
  6848  0F9B  2F9F               	goto	l2784
  6849                           
  6850                           ;user.c: 39: {
  6851                           ;user.c: 40: LCD_Clear();
  6852  0F9C  3197  272B  318F   	fcall	_LCD_Clear
  6853  0F9F                     l2784:	
  6854                           
  6855                           ;user.c: 41: }
  6856                           ;user.c: 42: setpoint+=1;
  6857  0F9F  3001               	movlw	1
  6858  0FA0  0021               	movlb	1	; select bank1
  6859  0FA1  00A3               	movwf	??_tempSetpoint^(0+128)
  6860  0FA2  0823               	movf	??_tempSetpoint^(0+128),w
  6861  0FA3  07EE               	addwf	_setpoint^(0+128),f
  6862                           
  6863                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6864  0FA4  01F3               	clrf	LCD_Set_Cursor@y
  6865  0FA5  3000               	movlw	0
  6866  0FA6  318A  2234  318F   	fcall	_LCD_Set_Cursor
  6867  0FA9  301B               	movlw	low (STR_1| (0+32768))
  6868  0FAA  00F5               	movwf	LCD_Write_String@a
  6869  0FAB  3090               	movlw	high (STR_1| (0+32768))
  6870  0FAC  00F6               	movwf	LCD_Write_String@a+1
  6871  0FAD  3188  2012  318F   	fcall	_LCD_Write_String
  6872                           
  6873                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6874  0FB0  01F3               	clrf	LCD_Set_Cursor@y
  6875  0FB1  3001               	movlw	1
  6876  0FB2  318A  2234  318F   	fcall	_LCD_Set_Cursor
  6877  0FB5  0021               	movlb	1	; select bank1
  6878  0FB6  086E               	movf	_setpoint^(0+128),w
  6879  0FB7  00A3               	movwf	??_tempSetpoint^(0+128)
  6880  0FB8  01A4               	clrf	(??_tempSetpoint^(0+128)+1)
  6881  0FB9  0823               	movf	??_tempSetpoint^(0+128),w
  6882  0FBA  0020               	movlb	0	; select bank0
  6883  0FBB  00DC               	movwf	LCD_Write_Int@value
  6884  0FBC  0021               	movlb	1	; select bank1
  6885  0FBD  0824               	movf	(??_tempSetpoint+1)^(0+128),w
  6886  0FBE  0020               	movlb	0	; select bank0
  6887  0FBF  00DD               	movwf	LCD_Write_Int@value+1
  6888  0FC0  3003               	movlw	3
  6889  0FC1  0021               	movlb	1	; select bank1
  6890  0FC2  00A5               	movwf	(??_tempSetpoint+2)^(0+128)
  6891  0FC3  0825               	movf	(??_tempSetpoint+2)^(0+128),w
  6892  0FC4  0020               	movlb	0	; select bank0
  6893  0FC5  00DE               	movwf	LCD_Write_Int@fieldLength
  6894  0FC6  01DF               	clrf	LCD_Write_Int@numPlaces
  6895  0FC7  01E0               	clrf	LCD_Write_Int@sign
  6896  0FC8  3180  20B9  318F   	fcall	_LCD_Write_Int
  6897                           
  6898                           ;user.c: 45: LCD_Write_Char(0);
  6899  0FCB  3000               	movlw	0
  6900  0FCC  3188  20F1  318F   	fcall	_LCD_Write_Char
  6901                           
  6902                           ;user.c: 46: LCD_Write_Char('C');
  6903  0FCF  3043               	movlw	67
  6904  0FD0  3188  20F1  318F   	fcall	_LCD_Write_Char
  6905                           
  6906                           ;user.c: 47: LCD_Write_Char(' ');
  6907  0FD3  3020               	movlw	32
  6908  0FD4  3188  20F1  318F   	fcall	_LCD_Write_Char
  6909                           
  6910                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6911  0FD7  3072               	movlw	114
  6912  0FD8  0021               	movlb	1	; select bank1
  6913  0FD9  00A4               	movwf	(??_tempSetpoint^(0+128)+1)
  6914  0FDA  30A1               	movlw	161
  6915  0FDB  00A3               	movwf	??_tempSetpoint^(0+128)
  6916  0FDC                     u3367:	
  6917  0FDC  0BA3               	decfsz	??_tempSetpoint^(0+128),f
  6918  0FDD  2FDC               	goto	u3367
  6919  0FDE  0BA4               	decfsz	(??_tempSetpoint^(0+128)+1),f
  6920  0FDF  2FDC               	goto	u3367
  6921  0FE0  3200               	nop2
  6922                           
  6923                           ;user.c: 49: readButtons();
  6924  0FE1  318D  2551  318F   	fcall	_readButtons
  6925  0FE4                     l2804:	
  6926  0FE4  3005               	movlw	5
  6927  0FE5  0021               	movlb	1	; select bank1
  6928  0FE6  026A               	subwf	_upCount^(0+128),w
  6929  0FE7  1803               	skipnc
  6930  0FE8  2F93               	goto	l2778
  6931                           
  6932                           ;user.c: 50: }
  6933                           ;user.c: 52: counter = 0;
  6934  0FE9  0020               	movlb	0	; select bank0
  6935  0FEA  01EF               	clrf	tempSetpoint@counter
  6936                           
  6937                           ;user.c: 54: if(oldSetpoint!=setpoint)
  6938  0FEB  0021               	movlb	1	; select bank1
  6939  0FEC  0868               	movf	_oldSetpoint^(0+128),w
  6940  0FED  066E               	xorwf	_setpoint^(0+128),w
  6941  0FEE  1903               	skipnz
  6942  0FEF  0008               	return
  6943                           
  6944                           ;user.c: 55: {
  6945                           ;user.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6946  0FF0  3003               	movlw	3
  6947  0FF1  00A5               	movwf	(??_tempSetpoint^(0+128)+2)
  6948  0FF2  308A               	movlw	138
  6949  0FF3  00A4               	movwf	(??_tempSetpoint^(0+128)+1)
  6950  0FF4  3056               	movlw	86
  6951  0FF5  00A3               	movwf	??_tempSetpoint^(0+128)
  6952  0FF6                     u3377:	
  6953  0FF6  0BA3               	decfsz	??_tempSetpoint^(0+128),f
  6954  0FF7  2FF6               	goto	u3377
  6955  0FF8  0BA4               	decfsz	(??_tempSetpoint^(0+128)+1),f
  6956  0FF9  2FF6               	goto	u3377
  6957  0FFA  0BA5               	decfsz	(??_tempSetpoint^(0+128)+2),f
  6958  0FFB  2FF6               	goto	u3377
  6959  0FFC  3200               	nop2
  6960                           
  6961                           ;user.c: 57: LCD_Clear();
  6962  0FFD  3197  272B         	fcall	_LCD_Clear
  6963  0FFF  0008               	return
  6964  1000                     __end_of_tempSetpoint:	
  6965                           
  6966                           	psect	text2
  6967  0D51                     __ptext2:	
  6968 ;; *************** function _readButtons *****************
  6969 ;; Defined at:
  6970 ;;		line 62 in file "user.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;Total ram usage:        3 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    3
  6991 ;; This function calls:
  6992 ;;		_LCD_Clear
  6993 ;;		_LCD_Set_Cursor
  6994 ;;		_LCD_Write_Char
  6995 ;;		_LCD_Write_Int
  6996 ;;		_LCD_Write_String
  6997 ;; This function is called by:
  6998 ;;		_tempSetpoint
  6999 ;;		_main
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           
  7004                           ;psect for function _readButtons
  7005  0D51                     _readButtons:	
  7006                           
  7007                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7011  0D51  0020               	movlb	0	; select bank0
  7012  0D52  1D8C               	btfss	12,3	;volatile
  7013  0D53  1A0C               	btfsc	12,4	;volatile
  7014  0D54  2DB7               	goto	l2616
  7015                           
  7016                           ;user.c: 65: {
  7017                           ;user.c: 66: downCount = 0;
  7018  0D55  0021               	movlb	1	; select bank1
  7019  0D56  01E7               	clrf	_downCount^(0+128)
  7020                           
  7021                           ;user.c: 67: upCount = 0;
  7022  0D57  01EA               	clrf	_upCount^(0+128)
  7023                           
  7024                           ;user.c: 68: toggleCount+=1;
  7025  0D58  3001               	movlw	1
  7026  0D59  00A0               	movwf	??_readButtons^(0+128)
  7027  0D5A  0820               	movf	??_readButtons^(0+128),w
  7028  0D5B  07E9               	addwf	_toggleCount^(0+128),f
  7029                           
  7030                           ;user.c: 69: if(toggleCount >=6)
  7031  0D5C  3006               	movlw	6
  7032  0D5D  0269               	subwf	_toggleCount^(0+128),w
  7033  0D5E  1C03               	skipc
  7034  0D5F  2DB7               	goto	l2616
  7035                           
  7036                           ;user.c: 70: {
  7037                           ;user.c: 71: x+=1;
  7038  0D60  3001               	movlw	1
  7039  0D61  00A0               	movwf	??_readButtons^(0+128)
  7040  0D62  0820               	movf	??_readButtons^(0+128),w
  7041  0D63  07EB               	addwf	_x^(0+128),f
  7042                           
  7043                           ;user.c: 72: if(x>4)
  7044  0D64  3005               	movlw	5
  7045  0D65  026B               	subwf	_x^(0+128),w
  7046  0D66  1803               	btfsc	3,0
  7047                           
  7048                           ;user.c: 73: {
  7049                           ;user.c: 74: x=0;
  7050  0D67  01EB               	clrf	_x^(0+128)
  7051                           
  7052                           ;user.c: 75: }
  7053                           ;user.c: 76: setpoint = presets[x];
  7054  0D68  086B               	movf	_x^(0+128),w
  7055  0D69  3E38               	addlw	(low (_presets| (0+256)))& (0+255)
  7056  0D6A  0086               	movwf	6
  7057  0D6B  3001               	movlw	1	; select bank2/3
  7058  0D6C  0087               	movwf	7
  7059  0D6D  0801               	movf	1,w
  7060  0D6E  00A0               	movwf	??_readButtons^(0+128)
  7061  0D6F  0820               	movf	??_readButtons^(0+128),w
  7062  0D70  00EE               	movwf	_setpoint^(0+128)
  7063                           
  7064                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  7065  0D71  01F3               	clrf	LCD_Set_Cursor@y
  7066  0D72  3000               	movlw	0
  7067  0D73  318A  2234  318D   	fcall	_LCD_Set_Cursor
  7068  0D76  301B               	movlw	low (STR_1| (0+32768))
  7069  0D77  00F5               	movwf	LCD_Write_String@a
  7070  0D78  3090               	movlw	high (STR_1| (0+32768))
  7071  0D79  00F6               	movwf	LCD_Write_String@a+1
  7072  0D7A  3188  2012  318D   	fcall	_LCD_Write_String
  7073                           
  7074                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  7075  0D7D  01F3               	clrf	LCD_Set_Cursor@y
  7076  0D7E  3001               	movlw	1
  7077  0D7F  318A  2234  318D   	fcall	_LCD_Set_Cursor
  7078  0D82  0021               	movlb	1	; select bank1
  7079  0D83  086E               	movf	_setpoint^(0+128),w
  7080  0D84  00A0               	movwf	??_readButtons^(0+128)
  7081  0D85  01A1               	clrf	(??_readButtons^(0+128)+1)
  7082  0D86  0820               	movf	??_readButtons^(0+128),w
  7083  0D87  0020               	movlb	0	; select bank0
  7084  0D88  00DC               	movwf	LCD_Write_Int@value
  7085  0D89  0021               	movlb	1	; select bank1
  7086  0D8A  0821               	movf	(??_readButtons+1)^(0+128),w
  7087  0D8B  0020               	movlb	0	; select bank0
  7088  0D8C  00DD               	movwf	LCD_Write_Int@value+1
  7089  0D8D  3003               	movlw	3
  7090  0D8E  0021               	movlb	1	; select bank1
  7091  0D8F  00A2               	movwf	(??_readButtons+2)^(0+128)
  7092  0D90  0822               	movf	(??_readButtons+2)^(0+128),w
  7093  0D91  0020               	movlb	0	; select bank0
  7094  0D92  00DE               	movwf	LCD_Write_Int@fieldLength
  7095  0D93  01DF               	clrf	LCD_Write_Int@numPlaces
  7096  0D94  01E0               	clrf	LCD_Write_Int@sign
  7097  0D95  3180  20B9  318D   	fcall	_LCD_Write_Int
  7098                           
  7099                           ;user.c: 79: LCD_Write_Char(0);
  7100  0D98  3000               	movlw	0
  7101  0D99  3188  20F1  318D   	fcall	_LCD_Write_Char
  7102                           
  7103                           ;user.c: 80: LCD_Write_Char('C');
  7104  0D9C  3043               	movlw	67
  7105  0D9D  3188  20F1  318D   	fcall	_LCD_Write_Char
  7106                           
  7107                           ;user.c: 81: LCD_Write_Char(' ');
  7108  0DA0  3020               	movlw	32
  7109  0DA1  3188  20F1  318D   	fcall	_LCD_Write_Char
  7110                           
  7111                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  7112  0DA4  3002               	movlw	2
  7113  0DA5  0021               	movlb	1	; select bank1
  7114  0DA6  00A2               	movwf	(??_readButtons^(0+128)+2)
  7115  0DA7  30E7               	movlw	231
  7116  0DA8  00A1               	movwf	(??_readButtons^(0+128)+1)
  7117  0DA9  3000               	movlw	0
  7118  0DAA  00A0               	movwf	??_readButtons^(0+128)
  7119  0DAB                     u3387:	
  7120  0DAB  0BA0               	decfsz	??_readButtons^(0+128),f
  7121  0DAC  2DAB               	goto	u3387
  7122  0DAD  0BA1               	decfsz	(??_readButtons^(0+128)+1),f
  7123  0DAE  2DAB               	goto	u3387
  7124  0DAF  0BA2               	decfsz	(??_readButtons^(0+128)+2),f
  7125  0DB0  2DAB               	goto	u3387
  7126  0DB1  0000               	nop
  7127                           
  7128                           ;user.c: 83: toggleCount = 0;
  7129  0DB2  0021               	movlb	1	; select bank1
  7130  0DB3  01E9               	clrf	_toggleCount^(0+128)
  7131                           
  7132                           ;user.c: 84: LCD_Clear();
  7133  0DB4  3197  272B  318D   	fcall	_LCD_Clear
  7134  0DB7                     l2616:	
  7135                           
  7136                           ;user.c: 85: }
  7137                           ;user.c: 86: }
  7138                           ;user.c: 88: if(RA3 == 0)
  7139  0DB7  0020               	movlb	0	; select bank0
  7140  0DB8  198C               	btfsc	12,3	;volatile
  7141  0DB9  2DC8               	goto	l2624
  7142                           
  7143                           ;user.c: 89: {
  7144                           ;user.c: 90: downCount +=1;
  7145  0DBA  3001               	movlw	1
  7146  0DBB  0021               	movlb	1	; select bank1
  7147  0DBC  00A0               	movwf	??_readButtons^(0+128)
  7148  0DBD  0820               	movf	??_readButtons^(0+128),w
  7149  0DBE  07E7               	addwf	_downCount^(0+128),f
  7150                           
  7151                           ;user.c: 91: if(downCount>5)
  7152  0DBF  3006               	movlw	6
  7153  0DC0  0267               	subwf	_downCount^(0+128),w
  7154  0DC1  1C03               	skipc
  7155  0DC2  2DCA               	goto	l2626
  7156                           
  7157                           ;user.c: 92: {
  7158                           ;user.c: 93: downCount = 5;
  7159  0DC3  3005               	movlw	5
  7160  0DC4  00A0               	movwf	??_readButtons^(0+128)
  7161  0DC5  0820               	movf	??_readButtons^(0+128),w
  7162  0DC6  00E7               	movwf	_downCount^(0+128)
  7163                           
  7164                           ;user.c: 94: }
  7165                           ;user.c: 95: }
  7166  0DC7  2DCA               	goto	l2626
  7167  0DC8                     l2624:	
  7168                           
  7169                           ;user.c: 96: else
  7170                           ;user.c: 97: {
  7171                           ;user.c: 98: downCount = 0;
  7172  0DC8  0021               	movlb	1	; select bank1
  7173  0DC9  01E7               	clrf	_downCount^(0+128)
  7174  0DCA                     l2626:	
  7175                           
  7176                           ;user.c: 99: }
  7177                           ;user.c: 101: if(RA4 == 0)
  7178  0DCA  0020               	movlb	0	; select bank0
  7179  0DCB  1A0C               	btfsc	12,4	;volatile
  7180  0DCC  2DDB               	goto	l2634
  7181                           
  7182                           ;user.c: 102: {
  7183                           ;user.c: 103: upCount +=1;
  7184  0DCD  3001               	movlw	1
  7185  0DCE  0021               	movlb	1	; select bank1
  7186  0DCF  00A0               	movwf	??_readButtons^(0+128)
  7187  0DD0  0820               	movf	??_readButtons^(0+128),w
  7188  0DD1  07EA               	addwf	_upCount^(0+128),f
  7189                           
  7190                           ;user.c: 104: if(upCount>5)
  7191  0DD2  3006               	movlw	6
  7192  0DD3  026A               	subwf	_upCount^(0+128),w
  7193  0DD4  1C03               	skipc
  7194  0DD5  0008               	return
  7195                           
  7196                           ;user.c: 105: {
  7197                           ;user.c: 106: upCount = 5;
  7198  0DD6  3005               	movlw	5
  7199  0DD7  00A0               	movwf	??_readButtons^(0+128)
  7200  0DD8  0820               	movf	??_readButtons^(0+128),w
  7201  0DD9  00EA               	movwf	_upCount^(0+128)
  7202                           
  7203                           ;user.c: 107: }
  7204                           ;user.c: 108: }
  7205  0DDA  0008               	return
  7206  0DDB                     l2634:	
  7207                           
  7208                           ;user.c: 109: else
  7209                           ;user.c: 110: {
  7210                           ;user.c: 111: upCount = 0;
  7211  0DDB  0021               	movlb	1	; select bank1
  7212  0DDC  01EA               	clrf	_upCount^(0+128)
  7213  0DDD  0008               	return
  7214  0DDE                     __end_of_readButtons:	
  7215                           
  7216                           	psect	text3
  7217  0812                     __ptext3:	
  7218 ;; *************** function _LCD_Write_String *****************
  7219 ;; Defined at:
  7220 ;;		line 239 in file "lcd.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  a               2    5[COMMON] PTR const unsigned char 
  7223 ;;		 -> STR_3(10), STR_2(10), STR_1(10), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  i               2    8[COMMON] int 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;Total ram usage:        5 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:    2
  7242 ;; This function calls:
  7243 ;;		_LCD_Write_Char
  7244 ;; This function is called by:
  7245 ;;		_tempSetpoint
  7246 ;;		_readButtons
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           
  7251                           ;psect for function _LCD_Write_String
  7252  0812                     _LCD_Write_String:	
  7253                           
  7254                           ;lcd.c: 241: int i;
  7255                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7259  0812  01F8               	clrf	LCD_Write_String@i
  7260  0813  01F9               	clrf	LCD_Write_String@i+1
  7261  0814                     l2228:	
  7262  0814  0875               	movf	LCD_Write_String@a,w
  7263  0815  0778               	addwf	LCD_Write_String@i,w
  7264  0816  0084               	movwf	4
  7265  0817  0876               	movf	LCD_Write_String@a+1,w
  7266  0818  3D79               	addwfc	LCD_Write_String@i+1,w
  7267  0819  0085               	movwf	5
  7268  081A  0012               	moviw fsr0++
  7269  081B  1903               	btfsc	3,2
  7270  081C  0008               	return
  7271                           
  7272                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  7273  081D  0875               	movf	LCD_Write_String@a,w
  7274  081E  0778               	addwf	LCD_Write_String@i,w
  7275  081F  0084               	movwf	4
  7276  0820  0876               	movf	LCD_Write_String@a+1,w
  7277  0821  3D79               	addwfc	LCD_Write_String@i+1,w
  7278  0822  0085               	movwf	5
  7279  0823  0800               	movf	0,w	;code access
  7280  0824  3188  20F1  3188   	fcall	_LCD_Write_Char
  7281  0827  3001               	movlw	1
  7282  0828  07F8               	addwf	LCD_Write_String@i,f
  7283  0829  3000               	movlw	0
  7284  082A  3DF9               	addwfc	LCD_Write_String@i+1,f
  7285  082B  2814               	goto	l2228
  7286  082C                     __end_of_LCD_Write_String:	
  7287                           
  7288                           	psect	text4
  7289  00B9                     __ptext4:	
  7290 ;; *************** function _LCD_Write_Int *****************
  7291 ;; Defined at:
  7292 ;;		line 246 in file "lcd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  value           2   60[BANK0 ] int 
  7295 ;;  fieldLength     1   62[BANK0 ] char 
  7296 ;;  numPlaces       1   63[BANK0 ] char 
  7297 ;;  sign            1   64[BANK0 ] char 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  str             5   70[BANK0 ] unsigned char [5]
  7300 ;;  i               2   77[BANK0 ] int 
  7301 ;;  j               2   75[BANK0 ] int 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:       19 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    2
  7318 ;; This function calls:
  7319 ;;		_LCD_Write_Char
  7320 ;;		___awdiv
  7321 ;;		___awmod
  7322 ;; This function is called by:
  7323 ;;		_tempSetpoint
  7324 ;;		_readButtons
  7325 ;;		_main
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function _LCD_Write_Int
  7331  00B9                     _LCD_Write_Int:	
  7332                           
  7333                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7334                           
  7335                           ;incstack = 0
  7336                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7337  00B9  303D               	movlw	low LCD_Write_Int@F13695
  7338  00BA  0086               	movwf	6
  7339  00BB  3001               	movlw	high LCD_Write_Int@F13695
  7340  00BC  0087               	movwf	7
  7341  00BD  3066               	movlw	low LCD_Write_Int@str
  7342  00BE  0084               	movwf	4
  7343  00BF  3000               	movlw	high LCD_Write_Int@str
  7344  00C0  0085               	movwf	5
  7345  00C1  3005               	movlw	5
  7346  00C2  0020               	movlb	0	; select bank0
  7347  00C3  00E1               	movwf	??_LCD_Write_Int
  7348  00C4                     u2090:	
  7349  00C4  0016               	moviw fsr1++
  7350  00C5  001A               	movwi fsr0++
  7351  00C6  0BE1               	decfsz	??_LCD_Write_Int,f
  7352  00C7  28C4               	goto	u2090
  7353                           
  7354                           ;lcd.c: 249: int i=4,j=0;
  7355  00C8  3004               	movlw	4
  7356  00C9  00ED               	movwf	LCD_Write_Int@i
  7357  00CA  3000               	movlw	0
  7358  00CB  00EE               	movwf	LCD_Write_Int@i+1
  7359  00CC  01EB               	clrf	LCD_Write_Int@j
  7360  00CD  01EC               	clrf	LCD_Write_Int@j+1
  7361                           
  7362                           ;lcd.c: 251: if(value<0)
  7363  00CE  1FDD               	btfss	LCD_Write_Int@value+1,7
  7364  00CF  28DB               	goto	l2242
  7365                           
  7366                           ;lcd.c: 252: {
  7367                           ;lcd.c: 253: LCD_Write_Char('-');
  7368  00D0  302D               	movlw	45
  7369  00D1  3188  20F1  3180   	fcall	_LCD_Write_Char
  7370                           
  7371                           ;lcd.c: 254: value=value*-1;
  7372  00D4  0020               	movlb	0	; select bank0
  7373  00D5  09DC               	comf	LCD_Write_Int@value,f
  7374  00D6  09DD               	comf	LCD_Write_Int@value+1,f
  7375  00D7  0ADC               	incf	LCD_Write_Int@value,f
  7376  00D8  1903               	skipnz
  7377  00D9  0ADD               	incf	LCD_Write_Int@value+1,f
  7378                           
  7379                           ;lcd.c: 255: }
  7380  00DA  28E2               	goto	l2252
  7381  00DB                     l2242:	
  7382                           
  7383                           ;lcd.c: 257: else
  7384                           ;lcd.c: 258: {
  7385                           ;lcd.c: 259: if(sign == 1)
  7386  00DB  0360               	decf	LCD_Write_Int@sign,w
  7387  00DC  1D03               	btfss	3,2
  7388  00DD  28E2               	goto	l2252
  7389                           
  7390                           ;lcd.c: 260: {
  7391                           ;lcd.c: 261: LCD_Write_Char('+');
  7392  00DE  302B               	movlw	43
  7393  00DF  3188  20F1  3180   	fcall	_LCD_Write_Char
  7394  00E2                     l2252:	
  7395                           ;lcd.c: 262: }
  7396                           ;lcd.c: 263: }
  7397                           ;lcd.c: 265: while(value)
  7398                           
  7399  00E2  0020               	movlb	0	; select bank0
  7400  00E3  085C               	movf	LCD_Write_Int@value,w
  7401  00E4  045D               	iorwf	LCD_Write_Int@value+1,w
  7402  00E5  1903               	btfsc	3,2
  7403  00E6  2911               	goto	l2254
  7404                           
  7405                           ;lcd.c: 266: {
  7406                           ;lcd.c: 267: str[i]=value%10;
  7407  00E7  300A               	movlw	10
  7408  00E8  00F0               	movwf	___awmod@divisor
  7409  00E9  3000               	movlw	0
  7410  00EA  00F1               	movwf	___awmod@divisor+1
  7411  00EB  0020               	movlb	0	; select bank0
  7412  00EC  085D               	movf	LCD_Write_Int@value+1,w
  7413  00ED  00F3               	movwf	___awmod@dividend+1
  7414  00EE  085C               	movf	LCD_Write_Int@value,w
  7415  00EF  00F2               	movwf	___awmod@dividend
  7416  00F0  318A  2273  3180   	fcall	___awmod
  7417  00F3  0870               	movf	?___awmod,w
  7418  00F4  0020               	movlb	0	; select bank0
  7419  00F5  00E1               	movwf	??_LCD_Write_Int
  7420  00F6  086D               	movf	LCD_Write_Int@i,w
  7421  00F7  3E66               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7422  00F8  0086               	movwf	6
  7423  00F9  0187               	clrf	7
  7424  00FA  0861               	movf	??_LCD_Write_Int,w
  7425  00FB  0081               	movwf	1
  7426                           
  7427                           ;lcd.c: 268: value=value/10;
  7428  00FC  300A               	movlw	10
  7429  00FD  00F0               	movwf	___awdiv@divisor
  7430  00FE  3000               	movlw	0
  7431  00FF  00F1               	movwf	___awdiv@divisor+1
  7432  0100  085D               	movf	LCD_Write_Int@value+1,w
  7433  0101  00F3               	movwf	___awdiv@dividend+1
  7434  0102  085C               	movf	LCD_Write_Int@value,w
  7435  0103  00F2               	movwf	___awdiv@dividend
  7436  0104  318A  22B8  3180   	fcall	___awdiv
  7437  0107  0871               	movf	?___awdiv+1,w
  7438  0108  0020               	movlb	0	; select bank0
  7439  0109  00DD               	movwf	LCD_Write_Int@value+1
  7440  010A  0870               	movf	?___awdiv,w
  7441  010B  00DC               	movwf	LCD_Write_Int@value
  7442                           
  7443                           ;lcd.c: 269: i--;
  7444  010C  30FF               	movlw	255
  7445  010D  07ED               	addwf	LCD_Write_Int@i,f
  7446  010E  30FF               	movlw	255
  7447  010F  3DEE               	addwfc	LCD_Write_Int@i+1,f
  7448  0110  28E2               	goto	l2252
  7449  0111                     l2254:	
  7450                           
  7451                           ;lcd.c: 270: }
  7452                           ;lcd.c: 271: if(fieldLength==-1)
  7453  0111  0A5E               	incf	LCD_Write_Int@fieldLength,w
  7454  0112  1903               	btfsc	3,2
  7455  0113  2919               	goto	l2260
  7456  0114  2921               	goto	l2262
  7457  0115                     l2258:	
  7458                           ;lcd.c: 272: {
  7459                           ;lcd.c: 273: while(str[j]==0)
  7460                           
  7461                           
  7462                           ;lcd.c: 274: {
  7463                           ;lcd.c: 275: j++;
  7464  0115  3001               	movlw	1
  7465  0116  07EB               	addwf	LCD_Write_Int@j,f
  7466  0117  3000               	movlw	0
  7467  0118  3DEC               	addwfc	LCD_Write_Int@j+1,f
  7468  0119                     l2260:	
  7469  0119  086B               	movf	LCD_Write_Int@j,w
  7470  011A  3E66               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7471  011B  0086               	movwf	6
  7472  011C  0187               	clrf	7
  7473  011D  0801               	movf	1,w
  7474  011E  1D03               	btfss	3,2
  7475  011F  2931               	goto	l2264
  7476  0120  2915               	goto	l2258
  7477  0121                     l2262:	
  7478                           ;lcd.c: 276: }
  7479                           ;lcd.c: 277: }
  7480                           
  7481                           
  7482                           ;lcd.c: 278: else
  7483                           ;lcd.c: 279: {
  7484                           ;lcd.c: 280: j=5-fieldLength;
  7485  0121  085E               	movf	LCD_Write_Int@fieldLength,w
  7486  0122  00E1               	movwf	??_LCD_Write_Int
  7487  0123  01E2               	clrf	??_LCD_Write_Int+1
  7488  0124  1BE1               	btfsc	??_LCD_Write_Int,7
  7489  0125  03E2               	decf	??_LCD_Write_Int+1,f
  7490  0126  09E1               	comf	??_LCD_Write_Int,f
  7491  0127  09E2               	comf	??_LCD_Write_Int+1,f
  7492  0128  0AE1               	incf	??_LCD_Write_Int,f
  7493  0129  1903               	skipnz
  7494  012A  0AE2               	incf	??_LCD_Write_Int+1,f
  7495  012B  0861               	movf	??_LCD_Write_Int,w
  7496  012C  3E05               	addlw	5
  7497  012D  00EB               	movwf	LCD_Write_Int@j
  7498  012E  3000               	movlw	0
  7499  012F  3D62               	addwfc	??_LCD_Write_Int+1,w
  7500  0130  00EC               	movwf	LCD_Write_Int@j+1
  7501  0131                     l2264:	
  7502                           
  7503                           ;lcd.c: 281: }
  7504                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7505  0131  086C               	movf	LCD_Write_Int@j+1,w
  7506  0132  00EE               	movwf	LCD_Write_Int@i+1
  7507  0133  086B               	movf	LCD_Write_Int@j,w
  7508  0134  00ED               	movwf	LCD_Write_Int@i
  7509  0135                     l2270:	
  7510  0135  085F               	movf	LCD_Write_Int@numPlaces,w
  7511  0136  00E1               	movwf	??_LCD_Write_Int
  7512  0137  01E2               	clrf	??_LCD_Write_Int+1
  7513  0138  1BE1               	btfsc	??_LCD_Write_Int,7
  7514  0139  03E2               	decf	??_LCD_Write_Int+1,f
  7515  013A  09E1               	comf	??_LCD_Write_Int,f
  7516  013B  09E2               	comf	??_LCD_Write_Int+1,f
  7517  013C  0AE1               	incf	??_LCD_Write_Int,f
  7518  013D  1903               	skipnz
  7519  013E  0AE2               	incf	??_LCD_Write_Int+1,f
  7520  013F  0861               	movf	??_LCD_Write_Int,w
  7521  0140  3E05               	addlw	5
  7522  0141  00E3               	movwf	??_LCD_Write_Int+2
  7523  0142  3000               	movlw	0
  7524  0143  3D62               	addwfc	??_LCD_Write_Int+1,w
  7525  0144  00E4               	movwf	??_LCD_Write_Int+3
  7526  0145  086E               	movf	LCD_Write_Int@i+1,w
  7527  0146  3A80               	xorlw	128
  7528  0147  00E5               	movwf	??_LCD_Write_Int+4
  7529  0148  0864               	movf	??_LCD_Write_Int+3,w
  7530  0149  3A80               	xorlw	128
  7531  014A  0265               	subwf	??_LCD_Write_Int+4,w
  7532  014B  1D03               	skipz
  7533  014C  294F               	goto	u2155
  7534  014D  0863               	movf	??_LCD_Write_Int+2,w
  7535  014E  026D               	subwf	LCD_Write_Int@i,w
  7536  014F                     u2155:	
  7537  014F  1803               	btfsc	3,0
  7538  0150  2961               	goto	l2272
  7539                           
  7540                           ;lcd.c: 284: {
  7541                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7542  0151  0020               	movlb	0	; select bank0
  7543  0152  086D               	movf	LCD_Write_Int@i,w
  7544  0153  3E66               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7545  0154  0086               	movwf	6
  7546  0155  0187               	clrf	7
  7547  0156  0801               	movf	1,w
  7548  0157  3E30               	addlw	48
  7549  0158  3188  20F1  3180   	fcall	_LCD_Write_Char
  7550  015B  3001               	movlw	1
  7551  015C  0020               	movlb	0	; select bank0
  7552  015D  07ED               	addwf	LCD_Write_Int@i,f
  7553  015E  3000               	movlw	0
  7554  015F  3DEE               	addwfc	LCD_Write_Int@i+1,f
  7555  0160  2935               	goto	l2270
  7556  0161                     l2272:	
  7557                           
  7558                           ;lcd.c: 286: }
  7559                           ;lcd.c: 288: if(numPlaces == 1)
  7560  0161  0020               	movlb	0	; select bank0
  7561  0162  035F               	decf	LCD_Write_Int@numPlaces,w
  7562  0163  1D03               	btfss	3,2
  7563  0164  296F               	goto	l2276
  7564                           
  7565                           ;lcd.c: 289: {
  7566                           ;lcd.c: 290: LCD_Write_Char(46);
  7567  0165  302E               	movlw	46
  7568  0166  3188  20F1  3180   	fcall	_LCD_Write_Char
  7569                           
  7570                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7571  0169  0020               	movlb	0	; select bank0
  7572  016A  086A               	movf	LCD_Write_Int@str+4,w
  7573  016B  3E30               	addlw	48
  7574  016C  3188  20F1  3180   	fcall	_LCD_Write_Char
  7575  016F                     l2276:	
  7576                           
  7577                           ;lcd.c: 292: }
  7578                           ;lcd.c: 294: if(numPlaces == 2)
  7579  016F  3002               	movlw	2
  7580  0170  0020               	movlb	0	; select bank0
  7581  0171  065F               	xorwf	LCD_Write_Int@numPlaces,w
  7582  0172  1D03               	btfss	3,2
  7583  0173  0008               	return
  7584                           
  7585                           ;lcd.c: 295: {
  7586                           ;lcd.c: 296: LCD_Write_Char(46);
  7587  0174  302E               	movlw	46
  7588  0175  3188  20F1  3180   	fcall	_LCD_Write_Char
  7589                           
  7590                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7591  0178  0020               	movlb	0	; select bank0
  7592  0179  0869               	movf	LCD_Write_Int@str+3,w
  7593  017A  3E30               	addlw	48
  7594  017B  3188  20F1  3180   	fcall	_LCD_Write_Char
  7595                           
  7596                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7597  017E  0020               	movlb	0	; select bank0
  7598  017F  086A               	movf	LCD_Write_Int@str+4,w
  7599  0180  3E30               	addlw	48
  7600  0181  3188  20F1         	fcall	_LCD_Write_Char
  7601  0183  0008               	return
  7602  0184                     __end_of_LCD_Write_Int:	
  7603                           
  7604                           	psect	text5
  7605  0A73                     __ptext5:	
  7606 ;; *************** function ___awmod *****************
  7607 ;; Defined at:
  7608 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  divisor         2    0[COMMON] int 
  7611 ;;  dividend        2    2[COMMON] int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  sign            1    6[COMMON] unsigned char 
  7614 ;;  counter         1    5[COMMON] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2    0[COMMON] int 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;Total ram usage:        7 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_LCD_Write_Int
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function ___awmod
  7639  0A73                     ___awmod:	
  7640                           
  7641                           ;incstack = 0
  7642                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7643  0A73  01F6               	clrf	___awmod@sign
  7644  0A74  1FF3               	btfss	___awmod@dividend+1,7
  7645  0A75  2A7D               	goto	l2170
  7646  0A76  09F2               	comf	___awmod@dividend,f
  7647  0A77  09F3               	comf	___awmod@dividend+1,f
  7648  0A78  0AF2               	incf	___awmod@dividend,f
  7649  0A79  1903               	skipnz
  7650  0A7A  0AF3               	incf	___awmod@dividend+1,f
  7651  0A7B  01F6               	clrf	___awmod@sign
  7652  0A7C  0AF6               	incf	___awmod@sign,f
  7653  0A7D                     l2170:	
  7654  0A7D  1FF1               	btfss	___awmod@divisor+1,7
  7655  0A7E  2A84               	goto	l2174
  7656  0A7F  09F0               	comf	___awmod@divisor,f
  7657  0A80  09F1               	comf	___awmod@divisor+1,f
  7658  0A81  0AF0               	incf	___awmod@divisor,f
  7659  0A82  1903               	skipnz
  7660  0A83  0AF1               	incf	___awmod@divisor+1,f
  7661  0A84                     l2174:	
  7662  0A84  0870               	movf	___awmod@divisor,w
  7663  0A85  0471               	iorwf	___awmod@divisor+1,w
  7664  0A86  1903               	btfsc	3,2
  7665  0A87  2AAB               	goto	l2192
  7666  0A88  01F5               	clrf	___awmod@counter
  7667  0A89  0AF5               	incf	___awmod@counter,f
  7668  0A8A                     l2182:	
  7669  0A8A  1BF1               	btfsc	___awmod@divisor+1,7
  7670  0A8B  2A96               	goto	l2184
  7671  0A8C  3001               	movlw	1
  7672  0A8D                     u1985:	
  7673  0A8D  35F0               	lslf	___awmod@divisor,f
  7674  0A8E  0DF1               	rlf	___awmod@divisor+1,f
  7675  0A8F  0B89               	decfsz	9,f
  7676  0A90  2A8D               	goto	u1985
  7677  0A91  3001               	movlw	1
  7678  0A92  00F4               	movwf	??___awmod
  7679  0A93  0874               	movf	??___awmod,w
  7680  0A94  07F5               	addwf	___awmod@counter,f
  7681  0A95  2A8A               	goto	l2182
  7682  0A96                     l2184:	
  7683  0A96  0871               	movf	___awmod@divisor+1,w
  7684  0A97  0273               	subwf	___awmod@dividend+1,w
  7685  0A98  1D03               	skipz
  7686  0A99  2A9C               	goto	u2005
  7687  0A9A  0870               	movf	___awmod@divisor,w
  7688  0A9B  0272               	subwf	___awmod@dividend,w
  7689  0A9C                     u2005:	
  7690  0A9C  1C03               	skipc
  7691  0A9D  2AA2               	goto	l2188
  7692  0A9E  0870               	movf	___awmod@divisor,w
  7693  0A9F  02F2               	subwf	___awmod@dividend,f
  7694  0AA0  0871               	movf	___awmod@divisor+1,w
  7695  0AA1  3BF3               	subwfb	___awmod@dividend+1,f
  7696  0AA2                     l2188:	
  7697  0AA2  3001               	movlw	1
  7698  0AA3                     u2015:	
  7699  0AA3  36F1               	lsrf	___awmod@divisor+1,f
  7700  0AA4  0CF0               	rrf	___awmod@divisor,f
  7701  0AA5  0B89               	decfsz	9,f
  7702  0AA6  2AA3               	goto	u2015
  7703  0AA7  3001               	movlw	1
  7704  0AA8  02F5               	subwf	___awmod@counter,f
  7705  0AA9  1D03               	btfss	3,2
  7706  0AAA  2A96               	goto	l2184
  7707  0AAB                     l2192:	
  7708  0AAB  0876               	movf	___awmod@sign,w
  7709  0AAC  1903               	btfsc	3,2
  7710  0AAD  2AB3               	goto	l2196
  7711  0AAE  09F2               	comf	___awmod@dividend,f
  7712  0AAF  09F3               	comf	___awmod@dividend+1,f
  7713  0AB0  0AF2               	incf	___awmod@dividend,f
  7714  0AB1  1903               	skipnz
  7715  0AB2  0AF3               	incf	___awmod@dividend+1,f
  7716  0AB3                     l2196:	
  7717  0AB3  0873               	movf	___awmod@dividend+1,w
  7718  0AB4  00F1               	movwf	?___awmod+1
  7719  0AB5  0872               	movf	___awmod@dividend,w
  7720  0AB6  00F0               	movwf	?___awmod
  7721  0AB7  0008               	return
  7722  0AB8                     __end_of___awmod:	
  7723                           
  7724                           	psect	text6
  7725  0AB8                     __ptext6:	
  7726 ;; *************** function ___awdiv *****************
  7727 ;; Defined at:
  7728 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  divisor         2    0[COMMON] int 
  7731 ;;  dividend        2    2[COMMON] int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  quotient        2    7[COMMON] int 
  7734 ;;  sign            1    6[COMMON] unsigned char 
  7735 ;;  counter         1    5[COMMON] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  2    0[COMMON] int 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;Total ram usage:        9 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_LCD_Write_Int
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           
  7759                           ;psect for function ___awdiv
  7760  0AB8                     ___awdiv:	
  7761                           
  7762                           ;incstack = 0
  7763                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7764  0AB8  01F6               	clrf	___awdiv@sign
  7765  0AB9  1FF1               	btfss	___awdiv@divisor+1,7
  7766  0ABA  2AC2               	goto	l2126
  7767  0ABB  09F0               	comf	___awdiv@divisor,f
  7768  0ABC  09F1               	comf	___awdiv@divisor+1,f
  7769  0ABD  0AF0               	incf	___awdiv@divisor,f
  7770  0ABE  1903               	skipnz
  7771  0ABF  0AF1               	incf	___awdiv@divisor+1,f
  7772  0AC0  01F6               	clrf	___awdiv@sign
  7773  0AC1  0AF6               	incf	___awdiv@sign,f
  7774  0AC2                     l2126:	
  7775  0AC2  1FF3               	btfss	___awdiv@dividend+1,7
  7776  0AC3  2ACD               	goto	l2132
  7777  0AC4  09F2               	comf	___awdiv@dividend,f
  7778  0AC5  09F3               	comf	___awdiv@dividend+1,f
  7779  0AC6  0AF2               	incf	___awdiv@dividend,f
  7780  0AC7  1903               	skipnz
  7781  0AC8  0AF3               	incf	___awdiv@dividend+1,f
  7782  0AC9  3001               	movlw	1
  7783  0ACA  00F4               	movwf	??___awdiv
  7784  0ACB  0874               	movf	??___awdiv,w
  7785  0ACC  06F6               	xorwf	___awdiv@sign,f
  7786  0ACD                     l2132:	
  7787  0ACD  01F7               	clrf	___awdiv@quotient
  7788  0ACE  01F8               	clrf	___awdiv@quotient+1
  7789  0ACF  0870               	movf	___awdiv@divisor,w
  7790  0AD0  0471               	iorwf	___awdiv@divisor+1,w
  7791  0AD1  1903               	btfsc	3,2
  7792  0AD2  2AFC               	goto	l2154
  7793  0AD3  01F5               	clrf	___awdiv@counter
  7794  0AD4  0AF5               	incf	___awdiv@counter,f
  7795  0AD5                     l2142:	
  7796  0AD5  1BF1               	btfsc	___awdiv@divisor+1,7
  7797  0AD6  2AE1               	goto	l2144
  7798  0AD7  3001               	movlw	1
  7799  0AD8                     u1885:	
  7800  0AD8  35F0               	lslf	___awdiv@divisor,f
  7801  0AD9  0DF1               	rlf	___awdiv@divisor+1,f
  7802  0ADA  0B89               	decfsz	9,f
  7803  0ADB  2AD8               	goto	u1885
  7804  0ADC  3001               	movlw	1
  7805  0ADD  00F4               	movwf	??___awdiv
  7806  0ADE  0874               	movf	??___awdiv,w
  7807  0ADF  07F5               	addwf	___awdiv@counter,f
  7808  0AE0  2AD5               	goto	l2142
  7809  0AE1                     l2144:	
  7810  0AE1  3001               	movlw	1
  7811  0AE2                     u1905:	
  7812  0AE2  35F7               	lslf	___awdiv@quotient,f
  7813  0AE3  0DF8               	rlf	___awdiv@quotient+1,f
  7814  0AE4  0B89               	decfsz	9,f
  7815  0AE5  2AE2               	goto	u1905
  7816  0AE6  0871               	movf	___awdiv@divisor+1,w
  7817  0AE7  0273               	subwf	___awdiv@dividend+1,w
  7818  0AE8  1D03               	skipz
  7819  0AE9  2AEC               	goto	u1915
  7820  0AEA  0870               	movf	___awdiv@divisor,w
  7821  0AEB  0272               	subwf	___awdiv@dividend,w
  7822  0AEC                     u1915:	
  7823  0AEC  1C03               	skipc
  7824  0AED  2AF3               	goto	l2150
  7825  0AEE  0870               	movf	___awdiv@divisor,w
  7826  0AEF  02F2               	subwf	___awdiv@dividend,f
  7827  0AF0  0871               	movf	___awdiv@divisor+1,w
  7828  0AF1  3BF3               	subwfb	___awdiv@dividend+1,f
  7829  0AF2  1477               	bsf	___awdiv@quotient,0
  7830  0AF3                     l2150:	
  7831  0AF3  3001               	movlw	1
  7832  0AF4                     u1925:	
  7833  0AF4  36F1               	lsrf	___awdiv@divisor+1,f
  7834  0AF5  0CF0               	rrf	___awdiv@divisor,f
  7835  0AF6  0B89               	decfsz	9,f
  7836  0AF7  2AF4               	goto	u1925
  7837  0AF8  3001               	movlw	1
  7838  0AF9  02F5               	subwf	___awdiv@counter,f
  7839  0AFA  1D03               	btfss	3,2
  7840  0AFB  2AE1               	goto	l2144
  7841  0AFC                     l2154:	
  7842  0AFC  0876               	movf	___awdiv@sign,w
  7843  0AFD  1903               	btfsc	3,2
  7844  0AFE  2B04               	goto	l2158
  7845  0AFF  09F7               	comf	___awdiv@quotient,f
  7846  0B00  09F8               	comf	___awdiv@quotient+1,f
  7847  0B01  0AF7               	incf	___awdiv@quotient,f
  7848  0B02  1903               	skipnz
  7849  0B03  0AF8               	incf	___awdiv@quotient+1,f
  7850  0B04                     l2158:	
  7851  0B04  0878               	movf	___awdiv@quotient+1,w
  7852  0B05  00F1               	movwf	?___awdiv+1
  7853  0B06  0877               	movf	___awdiv@quotient,w
  7854  0B07  00F0               	movwf	?___awdiv
  7855  0B08  0008               	return
  7856  0B09                     __end_of___awdiv:	
  7857                           
  7858                           	psect	text7
  7859  0A34                     __ptext7:	
  7860 ;; *************** function _LCD_Set_Cursor *****************
  7861 ;; Defined at:
  7862 ;;		line 82 in file "lcd.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  x               1    wreg     unsigned char 
  7865 ;;  y               1    3[COMMON] unsigned char 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  x               1    6[COMMON] unsigned char 
  7868 ;;  temp            1    9[COMMON] unsigned char 
  7869 ;;  w               1    8[COMMON] unsigned char 
  7870 ;;  z               1    7[COMMON] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, pclath, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;Total ram usage:        7 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    2
  7887 ;; This function calls:
  7888 ;;		_LCD_Cmd
  7889 ;; This function is called by:
  7890 ;;		_tempSetpoint
  7891 ;;		_readButtons
  7892 ;;		_main
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           
  7897                           ;psect for function _LCD_Set_Cursor
  7898  0A34                     _LCD_Set_Cursor:	
  7899                           
  7900                           ;incstack = 0
  7901                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7902                           ;LCD_Set_Cursor@x stored from wreg
  7903  0A34  00F6               	movwf	LCD_Set_Cursor@x
  7904                           
  7905                           ;lcd.c: 86: char temp,z,w;
  7906                           ;lcd.c: 88: if(x == 0)
  7907  0A35  0876               	movf	LCD_Set_Cursor@x,w
  7908  0A36  1D03               	btfss	3,2
  7909  0A37  2A54               	goto	l2212
  7910                           
  7911                           ;lcd.c: 89: {
  7912                           ;lcd.c: 90: temp = 0x80 + y;
  7913  0A38  0873               	movf	LCD_Set_Cursor@y,w
  7914  0A39  3E80               	addlw	128
  7915  0A3A  00F4               	movwf	??_LCD_Set_Cursor
  7916  0A3B  0874               	movf	??_LCD_Set_Cursor,w
  7917  0A3C  00F9               	movwf	LCD_Set_Cursor@temp
  7918                           
  7919                           ;lcd.c: 91: z = temp>>4;
  7920  0A3D  0879               	movf	LCD_Set_Cursor@temp,w
  7921  0A3E  00F4               	movwf	??_LCD_Set_Cursor
  7922  0A3F  3004               	movlw	4
  7923  0A40                     u2055:	
  7924  0A40  36F4               	lsrf	??_LCD_Set_Cursor,f
  7925  0A41  0B89               	decfsz	9,f
  7926  0A42  2A40               	goto	u2055
  7927  0A43  0874               	movf	??_LCD_Set_Cursor,w
  7928  0A44  00F5               	movwf	??_LCD_Set_Cursor+1
  7929  0A45  0875               	movf	??_LCD_Set_Cursor+1,w
  7930  0A46  00F7               	movwf	LCD_Set_Cursor@z
  7931                           
  7932                           ;lcd.c: 92: w = temp & 0x0F;
  7933  0A47  0879               	movf	LCD_Set_Cursor@temp,w
  7934  0A48  390F               	andlw	15
  7935  0A49  00F4               	movwf	??_LCD_Set_Cursor
  7936  0A4A  0874               	movf	??_LCD_Set_Cursor,w
  7937  0A4B  00F8               	movwf	LCD_Set_Cursor@w
  7938                           
  7939                           ;lcd.c: 93: LCD_Cmd(z);
  7940  0A4C  0877               	movf	LCD_Set_Cursor@z,w
  7941  0A4D  3188  2000  318A   	fcall	_LCD_Cmd
  7942                           
  7943                           ;lcd.c: 94: LCD_Cmd(w);
  7944  0A50  0878               	movf	LCD_Set_Cursor@w,w
  7945  0A51  3188  2000         	fcall	_LCD_Cmd
  7946                           
  7947                           ;lcd.c: 95: }
  7948  0A53  0008               	return
  7949  0A54                     l2212:	
  7950                           
  7951                           ;lcd.c: 97: else if(x == 1)
  7952  0A54  0376               	decf	LCD_Set_Cursor@x,w
  7953  0A55  1D03               	btfss	3,2
  7954  0A56  0008               	return
  7955                           
  7956                           ;lcd.c: 98: {
  7957                           ;lcd.c: 99: temp = 0xC0 + y;
  7958  0A57  0873               	movf	LCD_Set_Cursor@y,w
  7959  0A58  3EC0               	addlw	192
  7960  0A59  00F4               	movwf	??_LCD_Set_Cursor
  7961  0A5A  0874               	movf	??_LCD_Set_Cursor,w
  7962  0A5B  00F9               	movwf	LCD_Set_Cursor@temp
  7963                           
  7964                           ;lcd.c: 100: z = temp>>4;
  7965  0A5C  0879               	movf	LCD_Set_Cursor@temp,w
  7966  0A5D  00F4               	movwf	??_LCD_Set_Cursor
  7967  0A5E  3004               	movlw	4
  7968  0A5F                     u2075:	
  7969  0A5F  36F4               	lsrf	??_LCD_Set_Cursor,f
  7970  0A60  0B89               	decfsz	9,f
  7971  0A61  2A5F               	goto	u2075
  7972  0A62  0874               	movf	??_LCD_Set_Cursor,w
  7973  0A63  00F5               	movwf	??_LCD_Set_Cursor+1
  7974  0A64  0875               	movf	??_LCD_Set_Cursor+1,w
  7975  0A65  00F7               	movwf	LCD_Set_Cursor@z
  7976                           
  7977                           ;lcd.c: 101: w = temp & 0x0F;
  7978  0A66  0879               	movf	LCD_Set_Cursor@temp,w
  7979  0A67  390F               	andlw	15
  7980  0A68  00F4               	movwf	??_LCD_Set_Cursor
  7981  0A69  0874               	movf	??_LCD_Set_Cursor,w
  7982  0A6A  00F8               	movwf	LCD_Set_Cursor@w
  7983                           
  7984                           ;lcd.c: 102: LCD_Cmd(z);
  7985  0A6B  0877               	movf	LCD_Set_Cursor@z,w
  7986  0A6C  3188  2000  318A   	fcall	_LCD_Cmd
  7987                           
  7988                           ;lcd.c: 103: LCD_Cmd(w);
  7989  0A6F  0878               	movf	LCD_Set_Cursor@w,w
  7990  0A70  3188  2000         	fcall	_LCD_Cmd
  7991  0A72  0008               	return
  7992  0A73                     __end_of_LCD_Set_Cursor:	
  7993                           
  7994                           	psect	text8
  7995  0E87                     __ptext8:	
  7996 ;; *************** function _log *****************
  7997 ;; Defined at:
  7998 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  x               3   39[BANK0 ] void 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  exponent        2   43[BANK0 ] int 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  3   39[BANK0 ] int 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8012 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;Total ram usage:        6 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    3
  8019 ;; This function calls:
  8020 ;;		___awtoft
  8021 ;;		___ftadd
  8022 ;;		___ftge
  8023 ;;		___ftmul
  8024 ;;		_eval_poly
  8025 ;;		_frexp
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           
  8032                           ;psect for function _log
  8033  0E87                     _log:	
  8034                           
  8035                           ;incstack = 0
  8036                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8037  0E87  0020               	movlb	0	; select bank0
  8038  0E88  0847               	movf	log@x,w
  8039  0E89  00BD               	movwf	___ftge@ff1
  8040  0E8A  0848               	movf	log@x+1,w
  8041  0E8B  00BE               	movwf	___ftge@ff1+1
  8042  0E8C  0849               	movf	log@x+2,w
  8043  0E8D  00BF               	movwf	___ftge@ff1+2
  8044  0E8E  3000               	movlw	0
  8045  0E8F  00C0               	movwf	___ftge@ff2
  8046  0E90  3000               	movlw	0
  8047  0E91  00C1               	movwf	___ftge@ff2+1
  8048  0E92  3000               	movlw	0
  8049  0E93  00C2               	movwf	___ftge@ff2+2
  8050  0E94  3189  21BC  318E   	fcall	___ftge
  8051  0E97  1803               	btfsc	3,0
  8052  0E98  2EA6               	goto	l2842
  8053  0E99  3021               	movlw	33
  8054  0E9A  0022               	movlb	2	; select bank2
  8055  0E9B  00CB               	movwf	_errno^(0+256)
  8056  0E9C  3000               	movlw	0
  8057  0E9D  00CC               	movwf	(_errno^(0+256)+1)
  8058  0E9E  3000               	movlw	0
  8059  0E9F  0020               	movlb	0	; select bank0
  8060  0EA0  00C7               	movwf	?_log
  8061  0EA1  3000               	movlw	0
  8062  0EA2  00C8               	movwf	?_log+1
  8063  0EA3  3000               	movlw	0
  8064  0EA4  00C9               	movwf	?_log+2
  8065  0EA5  0008               	return
  8066  0EA6                     l2842:	
  8067  0EA6  0020               	movlb	0	; select bank0
  8068  0EA7  0849               	movf	log@x+2,w
  8069  0EA8  0448               	iorwf	log@x+1,w
  8070  0EA9  0447               	iorwf	log@x,w
  8071  0EAA  1D03               	skipz
  8072  0EAB  2EB9               	goto	l2848
  8073  0EAC  3022               	movlw	34
  8074  0EAD  0022               	movlb	2	; select bank2
  8075  0EAE  00CB               	movwf	_errno^(0+256)
  8076  0EAF  3000               	movlw	0
  8077  0EB0  00CC               	movwf	(_errno^(0+256)+1)
  8078  0EB1  3000               	movlw	0
  8079  0EB2  0020               	movlb	0	; select bank0
  8080  0EB3  00C7               	movwf	?_log
  8081  0EB4  3000               	movlw	0
  8082  0EB5  00C8               	movwf	?_log+1
  8083  0EB6  3000               	movlw	0
  8084  0EB7  00C9               	movwf	?_log+2
  8085  0EB8  0008               	return
  8086  0EB9                     l2848:	
  8087  0EB9  3000               	movlw	0
  8088  0EBA  00B0               	movwf	___ftadd@f1
  8089  0EBB  3080               	movlw	128
  8090  0EBC  00B1               	movwf	___ftadd@f1+1
  8091  0EBD  30BF               	movlw	191
  8092  0EBE  00B2               	movwf	___ftadd@f1+2
  8093  0EBF  3000               	movlw	0
  8094  0EC0  00A0               	movwf	___ftmul@f1
  8095  0EC1  3000               	movlw	0
  8096  0EC2  00A1               	movwf	___ftmul@f1+1
  8097  0EC3  3040               	movlw	64
  8098  0EC4  00A2               	movwf	___ftmul@f1+2
  8099  0EC5  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8100  0EC6  00CA               	movwf	??_log
  8101  0EC7  084A               	movf	??_log,w
  8102  0EC8  00F3               	movwf	frexp@eptr
  8103  0EC9  0847               	movf	log@x,w
  8104  0ECA  00F0               	movwf	frexp@value
  8105  0ECB  0848               	movf	log@x+1,w
  8106  0ECC  00F1               	movwf	frexp@value+1
  8107  0ECD  0849               	movf	log@x+2,w
  8108  0ECE  00F2               	movwf	frexp@value+2
  8109  0ECF  3189  2181  318E   	fcall	_frexp
  8110  0ED2  0870               	movf	?_frexp,w
  8111  0ED3  0020               	movlb	0	; select bank0
  8112  0ED4  00A3               	movwf	___ftmul@f2
  8113  0ED5  0871               	movf	?_frexp+1,w
  8114  0ED6  00A4               	movwf	___ftmul@f2+1
  8115  0ED7  0872               	movf	?_frexp+2,w
  8116  0ED8  00A5               	movwf	___ftmul@f2+2
  8117  0ED9  3180  2005  318E   	fcall	___ftmul
  8118  0EDC  0020               	movlb	0	; select bank0
  8119  0EDD  0820               	movf	?___ftmul,w
  8120  0EDE  00B3               	movwf	___ftadd@f2
  8121  0EDF  0821               	movf	?___ftmul+1,w
  8122  0EE0  00B4               	movwf	___ftadd@f2+1
  8123  0EE1  0822               	movf	?___ftmul+2,w
  8124  0EE2  00B5               	movwf	___ftadd@f2+2
  8125  0EE3  3181  2184  318E   	fcall	___ftadd
  8126  0EE6  0020               	movlb	0	; select bank0
  8127  0EE7  0830               	movf	?___ftadd,w
  8128  0EE8  00C7               	movwf	log@x
  8129  0EE9  0831               	movf	?___ftadd+1,w
  8130  0EEA  00C8               	movwf	log@x+1
  8131  0EEB  0832               	movf	?___ftadd+2,w
  8132  0EEC  00C9               	movwf	log@x+2
  8133  0EED  30FF               	movlw	255
  8134  0EEE  07CB               	addwf	log@exponent,f
  8135  0EEF  30FF               	movlw	255
  8136  0EF0  3DCC               	addwfc	log@exponent+1,f
  8137  0EF1  0847               	movf	log@x,w
  8138  0EF2  00BD               	movwf	eval_poly@x
  8139  0EF3  0848               	movf	log@x+1,w
  8140  0EF4  00BE               	movwf	eval_poly@x+1
  8141  0EF5  0849               	movf	log@x+2,w
  8142  0EF6  00BF               	movwf	eval_poly@x+2
  8143  0EF7  3000               	movlw	low (log@coeff| (0+32768))
  8144  0EF8  00C0               	movwf	eval_poly@d
  8145  0EF9  3090               	movlw	high (log@coeff| (0+32768))
  8146  0EFA  00C1               	movwf	eval_poly@d+1
  8147  0EFB  3008               	movlw	8
  8148  0EFC  00C2               	movwf	eval_poly@n
  8149  0EFD  3000               	movlw	0
  8150  0EFE  00C3               	movwf	eval_poly@n+1
  8151  0EFF  318B  2309  318E   	fcall	_eval_poly
  8152  0F02  0020               	movlb	0	; select bank0
  8153  0F03  083D               	movf	?_eval_poly,w
  8154  0F04  00C7               	movwf	log@x
  8155  0F05  083E               	movf	?_eval_poly+1,w
  8156  0F06  00C8               	movwf	log@x+1
  8157  0F07  083F               	movf	?_eval_poly+2,w
  8158  0F08  00C9               	movwf	log@x+2
  8159  0F09  0847               	movf	log@x,w
  8160  0F0A  00B0               	movwf	___ftadd@f1
  8161  0F0B  0848               	movf	log@x+1,w
  8162  0F0C  00B1               	movwf	___ftadd@f1+1
  8163  0F0D  0849               	movf	log@x+2,w
  8164  0F0E  00B2               	movwf	___ftadd@f1+2
  8165  0F0F  3072               	movlw	114
  8166  0F10  00A0               	movwf	___ftmul@f1
  8167  0F11  3031               	movlw	49
  8168  0F12  00A1               	movwf	___ftmul@f1+1
  8169  0F13  303F               	movlw	63
  8170  0F14  00A2               	movwf	___ftmul@f1+2
  8171  0F15  084C               	movf	log@exponent+1,w
  8172  0F16  00F9               	movwf	___awtoft@c+1
  8173  0F17  084B               	movf	log@exponent,w
  8174  0F18  00F8               	movwf	___awtoft@c
  8175  0F19  3188  2082  318E   	fcall	___awtoft
  8176  0F1C  0878               	movf	?___awtoft,w
  8177  0F1D  0020               	movlb	0	; select bank0
  8178  0F1E  00A3               	movwf	___ftmul@f2
  8179  0F1F  0879               	movf	?___awtoft+1,w
  8180  0F20  00A4               	movwf	___ftmul@f2+1
  8181  0F21  087A               	movf	?___awtoft+2,w
  8182  0F22  00A5               	movwf	___ftmul@f2+2
  8183  0F23  3180  2005  318E   	fcall	___ftmul
  8184  0F26  0020               	movlb	0	; select bank0
  8185  0F27  0820               	movf	?___ftmul,w
  8186  0F28  00B3               	movwf	___ftadd@f2
  8187  0F29  0821               	movf	?___ftmul+1,w
  8188  0F2A  00B4               	movwf	___ftadd@f2+1
  8189  0F2B  0822               	movf	?___ftmul+2,w
  8190  0F2C  00B5               	movwf	___ftadd@f2+2
  8191  0F2D  3181  2184         	fcall	___ftadd
  8192  0F2F  0020               	movlb	0	; select bank0
  8193  0F30  0830               	movf	?___ftadd,w
  8194  0F31  00C7               	movwf	?_log
  8195  0F32  0831               	movf	?___ftadd+1,w
  8196  0F33  00C8               	movwf	?_log+1
  8197  0F34  0832               	movf	?___ftadd+2,w
  8198  0F35  00C9               	movwf	?_log+2
  8199  0F36  0008               	return
  8200  0F37                     __end_of_log:	
  8201                           
  8202                           	psect	text9
  8203  0981                     __ptext9:	
  8204 ;; *************** function _frexp *****************
  8205 ;; Defined at:
  8206 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  value           3    0[COMMON] int 
  8209 ;;  eptr            1    3[COMMON] PTR int 
  8210 ;;		 -> log@exponent(2), 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  3    0[COMMON] PTR int 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        6 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_log
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function _frexp
  8237  0981                     _frexp:	
  8238                           
  8239                           ;incstack = 0
  8240                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8241  0981  0872               	movf	frexp@value+2,w
  8242  0982  0471               	iorwf	frexp@value+1,w
  8243  0983  0470               	iorwf	frexp@value,w
  8244  0984  1D03               	skipz
  8245  0985  2993               	goto	l2684
  8246  0986  0873               	movf	frexp@eptr,w
  8247  0987  0086               	movwf	6
  8248  0988  0187               	clrf	7
  8249  0989  3000               	movlw	0
  8250  098A  3FC0               	movwi [0]fsr1
  8251  098B  3FC1               	movwi [1]fsr1
  8252  098C  3000               	movlw	0
  8253  098D  00F0               	movwf	?_frexp
  8254  098E  3000               	movlw	0
  8255  098F  00F1               	movwf	?_frexp+1
  8256  0990  3000               	movlw	0
  8257  0991  00F2               	movwf	?_frexp+2
  8258  0992  0008               	return
  8259  0993                     l2684:	
  8260  0993  0872               	movf	frexp@value+2,w
  8261  0994  397F               	andlw	127
  8262  0995  00F4               	movwf	??_frexp
  8263  0996  01F5               	clrf	??_frexp+1
  8264  0997  35F4               	lslf	??_frexp,f
  8265  0998  0DF5               	rlf	??_frexp+1,f
  8266  0999  0873               	movf	frexp@eptr,w
  8267  099A  0086               	movwf	6
  8268  099B  0187               	clrf	7
  8269  099C  0874               	movf	??_frexp,w
  8270  099D  3FC0               	movwi [0]fsr1
  8271  099E  0875               	movf	??_frexp+1,w
  8272  099F  3FC1               	movwi [1]fsr1
  8273  09A0  0D71               	rlf	frexp@value+1,w
  8274  09A1  0D71               	rlf	frexp@value+1,w
  8275  09A2  3901               	andlw	1
  8276  09A3  00F4               	movwf	??_frexp
  8277  09A4  01F5               	clrf	??_frexp+1
  8278  09A5  0873               	movf	frexp@eptr,w
  8279  09A6  0086               	movwf	6
  8280  09A7  0187               	clrf	7
  8281  09A8  0874               	movf	??_frexp,w
  8282  09A9  0481               	iorwf	1,f
  8283  09AA  3141               	addfsr 1,1
  8284  09AB  0875               	movf	??_frexp+1,w
  8285  09AC  0481               	iorwf	1,f
  8286  09AD  0873               	movf	frexp@eptr,w
  8287  09AE  0086               	movwf	6
  8288  09AF  0187               	clrf	7
  8289  09B0  3082               	movlw	130
  8290  09B1  0781               	addwf	1,f
  8291  09B2  3141               	addfsr 1,1
  8292  09B3  30FF               	movlw	255
  8293  09B4  3D81               	addwfc	1,f
  8294  09B5  317F               	addfsr 1,-1
  8295  09B6  0872               	movf	frexp@value+2,w
  8296  09B7  3980               	andlw	-128
  8297  09B8  383F               	iorlw	63
  8298  09B9  00F2               	movwf	frexp@value+2
  8299  09BA  13F1               	bcf	frexp@value+1,7
  8300  09BB  0008               	return
  8301  09BC                     __end_of_frexp:	
  8302                           
  8303                           	psect	text10
  8304  0B09                     __ptext10:	
  8305 ;; *************** function _eval_poly *****************
  8306 ;; Defined at:
  8307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  x               3   29[BANK0 ] PTR int 
  8310 ;;  d               2   32[BANK0 ] PTR const 
  8311 ;;		 -> log@coeff(27), 
  8312 ;;  n               2   34[BANK0 ] int 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  res             3   36[BANK0 ] int 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  3   29[BANK0 ] int 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8324 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;Total ram usage:       10 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    2
  8331 ;; This function calls:
  8332 ;;		___ftadd
  8333 ;;		___ftmul
  8334 ;;		___wmul
  8335 ;; This function is called by:
  8336 ;;		_log
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _eval_poly
  8342  0B09                     _eval_poly:	
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8346  0B09  0020               	movlb	0	; select bank0
  8347  0B0A  0843               	movf	eval_poly@n+1,w
  8348  0B0B  00F1               	movwf	___wmul@multiplier+1
  8349  0B0C  0842               	movf	eval_poly@n,w
  8350  0B0D  00F0               	movwf	___wmul@multiplier
  8351  0B0E  3003               	movlw	3
  8352  0B0F  00F2               	movwf	___wmul@multiplicand
  8353  0B10  3000               	movlw	0
  8354  0B11  00F3               	movwf	___wmul@multiplicand+1
  8355  0B12  3188  202C  318B   	fcall	___wmul
  8356  0B15  0020               	movlb	0	; select bank0
  8357  0B16  0840               	movf	eval_poly@d,w
  8358  0B17  0770               	addwf	?___wmul,w
  8359  0B18  0084               	movwf	4
  8360  0B19  0841               	movf	eval_poly@d+1,w
  8361  0B1A  3D71               	addwfc	?___wmul+1,w
  8362  0B1B  0085               	movwf	5
  8363  0B1C  3F00               	moviw [0]fsr0
  8364  0B1D  00C4               	movwf	eval_poly@res
  8365  0B1E  3F01               	moviw [1]fsr0
  8366  0B1F  00C5               	movwf	eval_poly@res+1
  8367  0B20  3F02               	moviw [2]fsr0
  8368  0B21                     L2:	
  8369  0B21  00C6               	movwf	eval_poly@res+2
  8370  0B22  0842               	movf	eval_poly@n,w
  8371  0B23  0443               	iorwf	eval_poly@n+1,w
  8372  0B24  1903               	btfsc	3,2
  8373  0B25  2B62               	goto	l2702
  8374  0B26  30FF               	movlw	255
  8375  0B27  07C2               	addwf	eval_poly@n,f
  8376  0B28  30FF               	movlw	255
  8377  0B29  3DC3               	addwfc	eval_poly@n+1,f
  8378  0B2A  0843               	movf	eval_poly@n+1,w
  8379  0B2B  00F1               	movwf	___wmul@multiplier+1
  8380  0B2C  0842               	movf	eval_poly@n,w
  8381  0B2D  00F0               	movwf	___wmul@multiplier
  8382  0B2E  3003               	movlw	3
  8383  0B2F  00F2               	movwf	___wmul@multiplicand
  8384  0B30  3000               	movlw	0
  8385  0B31  00F3               	movwf	___wmul@multiplicand+1
  8386  0B32  3188  202C  318B   	fcall	___wmul
  8387  0B35  0020               	movlb	0	; select bank0
  8388  0B36  0840               	movf	eval_poly@d,w
  8389  0B37  0770               	addwf	?___wmul,w
  8390  0B38  0084               	movwf	4
  8391  0B39  0841               	movf	eval_poly@d+1,w
  8392  0B3A  3D71               	addwfc	?___wmul+1,w
  8393  0B3B  0085               	movwf	5
  8394  0B3C  3F00               	moviw [0]fsr0
  8395  0B3D  00B0               	movwf	___ftadd@f1
  8396  0B3E  3F01               	moviw [1]fsr0
  8397  0B3F  00B1               	movwf	___ftadd@f1+1
  8398  0B40  3F02               	moviw [2]fsr0
  8399  0B41  00B2               	movwf	___ftadd@f1+2
  8400  0B42  0844               	movf	eval_poly@res,w
  8401  0B43  00A0               	movwf	___ftmul@f1
  8402  0B44  0845               	movf	eval_poly@res+1,w
  8403  0B45  00A1               	movwf	___ftmul@f1+1
  8404  0B46  0846               	movf	eval_poly@res+2,w
  8405  0B47  00A2               	movwf	___ftmul@f1+2
  8406  0B48  083D               	movf	eval_poly@x,w
  8407  0B49  00A3               	movwf	___ftmul@f2
  8408  0B4A  083E               	movf	eval_poly@x+1,w
  8409  0B4B  00A4               	movwf	___ftmul@f2+1
  8410  0B4C  083F               	movf	eval_poly@x+2,w
  8411  0B4D  00A5               	movwf	___ftmul@f2+2
  8412  0B4E  3180  2005  318B   	fcall	___ftmul
  8413  0B51  0020               	movlb	0	; select bank0
  8414  0B52  0820               	movf	?___ftmul,w
  8415  0B53  00B3               	movwf	___ftadd@f2
  8416  0B54  0821               	movf	?___ftmul+1,w
  8417  0B55  00B4               	movwf	___ftadd@f2+1
  8418  0B56  0822               	movf	?___ftmul+2,w
  8419  0B57  00B5               	movwf	___ftadd@f2+2
  8420  0B58  3181  2184  318B   	fcall	___ftadd
  8421  0B5B  0020               	movlb	0	; select bank0
  8422  0B5C  0830               	movf	?___ftadd,w
  8423  0B5D  00C4               	movwf	eval_poly@res
  8424  0B5E  0831               	movf	?___ftadd+1,w
  8425  0B5F  00C5               	movwf	eval_poly@res+1
  8426  0B60  0832               	movf	?___ftadd+2,w
  8427  0B61  2B21               	goto	L2
  8428  0B62                     l2702:	
  8429  0B62  0844               	movf	eval_poly@res,w
  8430  0B63  00BD               	movwf	?_eval_poly
  8431  0B64  0845               	movf	eval_poly@res+1,w
  8432  0B65  00BE               	movwf	?_eval_poly+1
  8433  0B66  0846               	movf	eval_poly@res+2,w
  8434  0B67  00BF               	movwf	?_eval_poly+2
  8435  0B68  0008               	return
  8436  0B69                     __end_of_eval_poly:	
  8437                           
  8438                           	psect	text11
  8439  082C                     __ptext11:	
  8440 ;; *************** function ___wmul *****************
  8441 ;; Defined at:
  8442 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  multiplier      2    0[COMMON] unsigned int 
  8445 ;;  multiplicand    2    2[COMMON] unsigned int 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  product         2    4[COMMON] unsigned int 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  2    0[COMMON] unsigned int 
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, status,0
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;Total ram usage:        6 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_main
  8467 ;;		_eval_poly
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           
  8472                           ;psect for function ___wmul
  8473  082C                     ___wmul:	
  8474                           
  8475                           ;incstack = 0
  8476                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8477  082C  01F4               	clrf	___wmul@product
  8478  082D  01F5               	clrf	___wmul@product+1
  8479  082E                     l2282:	
  8480  082E  1C70               	btfss	___wmul@multiplier,0
  8481  082F  2834               	goto	l488
  8482  0830  0872               	movf	___wmul@multiplicand,w
  8483  0831  07F4               	addwf	___wmul@product,f
  8484  0832  0873               	movf	___wmul@multiplicand+1,w
  8485  0833  3DF5               	addwfc	___wmul@product+1,f
  8486  0834                     l488:	
  8487  0834  3001               	movlw	1
  8488  0835                     u2195:	
  8489  0835  35F2               	lslf	___wmul@multiplicand,f
  8490  0836  0DF3               	rlf	___wmul@multiplicand+1,f
  8491  0837  0B89               	decfsz	9,f
  8492  0838  2835               	goto	u2195
  8493  0839  3001               	movlw	1
  8494  083A                     u2205:	
  8495  083A  36F1               	lsrf	___wmul@multiplier+1,f
  8496  083B  0CF0               	rrf	___wmul@multiplier,f
  8497  083C  0B89               	decfsz	9,f
  8498  083D  283A               	goto	u2205
  8499  083E  0870               	movf	___wmul@multiplier,w
  8500  083F  0471               	iorwf	___wmul@multiplier+1,w
  8501  0840  1D03               	btfss	3,2
  8502  0841  282E               	goto	l2282
  8503  0842  0875               	movf	___wmul@product+1,w
  8504  0843  00F1               	movwf	?___wmul+1
  8505  0844  0874               	movf	___wmul@product,w
  8506  0845  00F0               	movwf	?___wmul
  8507  0846  0008               	return
  8508  0847                     __end_of___wmul:	
  8509                           
  8510                           	psect	text12
  8511  178C                     __ptext12:	
  8512 ;; *************** function ___lwtoft *****************
  8513 ;; Defined at:
  8514 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  c               2    8[COMMON] unsigned int 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  3    8[COMMON] float 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, pclath, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;Total ram usage:        4 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    1
  8535 ;; This function calls:
  8536 ;;		___ftpack
  8537 ;; This function is called by:
  8538 ;;		_main
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function ___lwtoft
  8544  178C                     ___lwtoft:	
  8545                           
  8546                           ;incstack = 0
  8547                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8548  178C  0878               	movf	___lwtoft@c,w
  8549  178D  00F0               	movwf	___ftpack@arg
  8550  178E  0879               	movf	___lwtoft@c+1,w
  8551  178F  00F1               	movwf	___ftpack@arg+1
  8552  1790  01F2               	clrf	___ftpack@arg+2
  8553  1791  308E               	movlw	142
  8554  1792  00FB               	movwf	??___lwtoft
  8555  1793  087B               	movf	??___lwtoft,w
  8556  1794  00F3               	movwf	___ftpack@exp
  8557  1795  01F4               	clrf	___ftpack@sign
  8558  1796  318B  2369         	fcall	___ftpack
  8559  1798  0870               	movf	?___ftpack,w
  8560  1799  00F8               	movwf	?___lwtoft
  8561  179A  0871               	movf	?___ftpack+1,w
  8562  179B  00F9               	movwf	?___lwtoft+1
  8563  179C  0872               	movf	?___ftpack+2,w
  8564  179D  00FA               	movwf	?___lwtoft+2
  8565  179E  0008               	return
  8566  179F                     __end_of___lwtoft:	
  8567                           
  8568                           	psect	text13
  8569  094D                     __ptext13:	
  8570 ;; *************** function ___lwdiv *****************
  8571 ;; Defined at:
  8572 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  divisor         2    6[COMMON] unsigned int 
  8575 ;;  dividend        2    8[COMMON] unsigned int 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  quotient        2   11[COMMON] unsigned int 
  8578 ;;  counter         1   13[COMMON] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  2    6[COMMON] unsigned int 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:        8 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function ___lwdiv
  8603  094D                     ___lwdiv:	
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8607  094D  01FB               	clrf	___lwdiv@quotient
  8608  094E  01FC               	clrf	___lwdiv@quotient+1
  8609  094F  0876               	movf	___lwdiv@divisor,w
  8610  0950  0477               	iorwf	___lwdiv@divisor+1,w
  8611  0951  1903               	btfsc	3,2
  8612  0952  297C               	goto	l3016
  8613  0953  01FD               	clrf	___lwdiv@counter
  8614  0954  0AFD               	incf	___lwdiv@counter,f
  8615  0955                     l3004:	
  8616  0955  1BF7               	btfsc	___lwdiv@divisor+1,7
  8617  0956  2961               	goto	l3006
  8618  0957  3001               	movlw	1
  8619  0958                     u3195:	
  8620  0958  35F6               	lslf	___lwdiv@divisor,f
  8621  0959  0DF7               	rlf	___lwdiv@divisor+1,f
  8622  095A  0B89               	decfsz	9,f
  8623  095B  2958               	goto	u3195
  8624  095C  3001               	movlw	1
  8625  095D  00FA               	movwf	??___lwdiv
  8626  095E  087A               	movf	??___lwdiv,w
  8627  095F  07FD               	addwf	___lwdiv@counter,f
  8628  0960  2955               	goto	l3004
  8629  0961                     l3006:	
  8630  0961  3001               	movlw	1
  8631  0962                     u3215:	
  8632  0962  35FB               	lslf	___lwdiv@quotient,f
  8633  0963  0DFC               	rlf	___lwdiv@quotient+1,f
  8634  0964  0B89               	decfsz	9,f
  8635  0965  2962               	goto	u3215
  8636  0966  0877               	movf	___lwdiv@divisor+1,w
  8637  0967  0279               	subwf	___lwdiv@dividend+1,w
  8638  0968  1D03               	skipz
  8639  0969  296C               	goto	u3225
  8640  096A  0876               	movf	___lwdiv@divisor,w
  8641  096B  0278               	subwf	___lwdiv@dividend,w
  8642  096C                     u3225:	
  8643  096C  1C03               	skipc
  8644  096D  2973               	goto	l3012
  8645  096E  0876               	movf	___lwdiv@divisor,w
  8646  096F  02F8               	subwf	___lwdiv@dividend,f
  8647  0970  0877               	movf	___lwdiv@divisor+1,w
  8648  0971  3BF9               	subwfb	___lwdiv@dividend+1,f
  8649  0972  147B               	bsf	___lwdiv@quotient,0
  8650  0973                     l3012:	
  8651  0973  3001               	movlw	1
  8652  0974                     u3235:	
  8653  0974  36F7               	lsrf	___lwdiv@divisor+1,f
  8654  0975  0CF6               	rrf	___lwdiv@divisor,f
  8655  0976  0B89               	decfsz	9,f
  8656  0977  2974               	goto	u3235
  8657  0978  3001               	movlw	1
  8658  0979  02FD               	subwf	___lwdiv@counter,f
  8659  097A  1D03               	btfss	3,2
  8660  097B  2961               	goto	l3006
  8661  097C                     l3016:	
  8662  097C  087C               	movf	___lwdiv@quotient+1,w
  8663  097D  00F7               	movwf	?___lwdiv+1
  8664  097E  087B               	movf	___lwdiv@quotient,w
  8665  097F  00F6               	movwf	?___lwdiv
  8666  0980  0008               	return
  8667  0981                     __end_of___lwdiv:	
  8668                           
  8669                           	psect	text14
  8670  17E6                     __ptext14:	
  8671 ;; *************** function ___lbtoft *****************
  8672 ;; Defined at:
  8673 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  c               1    wreg     unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  c               1   11[COMMON] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  3    8[COMMON] float 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;Total ram usage:        8 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    1
  8694 ;; This function calls:
  8695 ;;		___ftpack
  8696 ;; This function is called by:
  8697 ;;		_main
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           
  8702                           ;psect for function ___lbtoft
  8703  17E6                     ___lbtoft:	
  8704                           
  8705                           ;incstack = 0
  8706                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8707                           ;___lbtoft@c stored from wreg
  8708  17E6  00FB               	movwf	___lbtoft@c
  8709  17E7  087B               	movf	___lbtoft@c,w
  8710  17E8  0020               	movlb	0	; select bank0
  8711  17E9  00A0               	movwf	??___lbtoft
  8712  17EA  01A1               	clrf	??___lbtoft+1
  8713  17EB  01A2               	clrf	??___lbtoft+2
  8714  17EC  0820               	movf	??___lbtoft,w
  8715  17ED  00F0               	movwf	___ftpack@arg
  8716  17EE  0821               	movf	??___lbtoft+1,w
  8717  17EF  00F1               	movwf	___ftpack@arg+1
  8718  17F0  0822               	movf	??___lbtoft+2,w
  8719  17F1  00F2               	movwf	___ftpack@arg+2
  8720  17F2  308E               	movlw	142
  8721  17F3  00A3               	movwf	??___lbtoft+3
  8722  17F4  0823               	movf	??___lbtoft+3,w
  8723  17F5  00F3               	movwf	___ftpack@exp
  8724  17F6  01F4               	clrf	___ftpack@sign
  8725  17F7  318B  2369         	fcall	___ftpack
  8726  17F9  0870               	movf	?___ftpack,w
  8727  17FA  00F8               	movwf	?___lbtoft
  8728  17FB  0871               	movf	?___ftpack+1,w
  8729  17FC  00F9               	movwf	?___lbtoft+1
  8730  17FD  0872               	movf	?___ftpack+2,w
  8731  17FE  00FA               	movwf	?___lbtoft+2
  8732  17FF  0008               	return
  8733  1800                     __end_of___lbtoft:	
  8734                           
  8735                           	psect	text15
  8736  0CCA                     __ptext15:	
  8737 ;; *************** function ___fttol *****************
  8738 ;; Defined at:
  8739 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  f1              3   46[BANK0 ] float 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  lval            4   55[BANK0 ] unsigned long 
  8744 ;;  exp1            1   59[BANK0 ] unsigned char 
  8745 ;;  sign1           1   54[BANK0 ] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  4   46[BANK0 ] long 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:       14 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_main
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           
  8769                           ;psect for function ___fttol
  8770  0CCA                     ___fttol:	
  8771                           
  8772                           ;incstack = 0
  8773                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8774  0CCA  0020               	movlb	0	; select bank0
  8775  0CCB  084E               	movf	___fttol@f1,w
  8776  0CCC  00D2               	movwf	??___fttol
  8777  0CCD  084F               	movf	___fttol@f1+1,w
  8778  0CCE  00D3               	movwf	??___fttol+1
  8779  0CCF  0850               	movf	___fttol@f1+2,w
  8780  0CD0  00D4               	movwf	??___fttol+2
  8781  0CD1  1003               	clrc
  8782  0CD2  0D53               	rlf	??___fttol+1,w
  8783  0CD3  0D54               	rlf	??___fttol+2,w
  8784  0CD4  00D5               	movwf	??___fttol+3
  8785  0CD5  0855               	movf	??___fttol+3,w
  8786  0CD6  00DB               	movwf	___fttol@exp1
  8787  0CD7  085B               	movf	___fttol@exp1,w
  8788  0CD8  1D03               	btfss	3,2
  8789  0CD9  2CE3               	goto	l2954
  8790  0CDA  3000               	movlw	0
  8791  0CDB  00D1               	movwf	?___fttol+3
  8792  0CDC  3000               	movlw	0
  8793  0CDD  00D0               	movwf	?___fttol+2
  8794  0CDE  3000               	movlw	0
  8795  0CDF  00CF               	movwf	?___fttol+1
  8796  0CE0  3000               	movlw	0
  8797  0CE1  00CE               	movwf	?___fttol
  8798  0CE2  0008               	return
  8799  0CE3                     l2954:	
  8800  0CE3  084E               	movf	___fttol@f1,w
  8801  0CE4  00D2               	movwf	??___fttol
  8802  0CE5  084F               	movf	___fttol@f1+1,w
  8803  0CE6  00D3               	movwf	??___fttol+1
  8804  0CE7  0850               	movf	___fttol@f1+2,w
  8805  0CE8  00D4               	movwf	??___fttol+2
  8806  0CE9  3017               	movlw	23
  8807  0CEA                     u3095:	
  8808  0CEA  36D4               	lsrf	??___fttol+2,f
  8809  0CEB  0CD3               	rrf	??___fttol+1,f
  8810  0CEC  0CD2               	rrf	??___fttol,f
  8811  0CED  0B89               	decfsz	9,f
  8812  0CEE  2CEA               	goto	u3095
  8813  0CEF  0852               	movf	??___fttol,w
  8814  0CF0  00D5               	movwf	??___fttol+3
  8815  0CF1  0855               	movf	??___fttol+3,w
  8816  0CF2  00D6               	movwf	___fttol@sign1
  8817  0CF3  17CF               	bsf	___fttol@f1+1,7
  8818  0CF4  30FF               	movlw	255
  8819  0CF5  05CE               	andwf	___fttol@f1,f
  8820  0CF6  30FF               	movlw	255
  8821  0CF7  05CF               	andwf	___fttol@f1+1,f
  8822  0CF8  3000               	movlw	0
  8823  0CF9  05D0               	andwf	___fttol@f1+2,f
  8824  0CFA  084E               	movf	___fttol@f1,w
  8825  0CFB  00D7               	movwf	___fttol@lval
  8826  0CFC  084F               	movf	___fttol@f1+1,w
  8827  0CFD  00D8               	movwf	___fttol@lval+1
  8828  0CFE  0850               	movf	___fttol@f1+2,w
  8829  0CFF  00D9               	movwf	___fttol@lval+2
  8830  0D00  01DA               	clrf	___fttol@lval+3
  8831  0D01  308E               	movlw	142
  8832  0D02  02DB               	subwf	___fttol@exp1,f
  8833  0D03  1FDB               	btfss	___fttol@exp1,7
  8834  0D04  2D21               	goto	l2974
  8835  0D05  085B               	movf	___fttol@exp1,w
  8836  0D06  3A80               	xorlw	128
  8837  0D07  3E8F               	addlw	143
  8838  0D08  1803               	skipnc
  8839  0D09  2D13               	goto	l2972
  8840  0D0A  3000               	movlw	0
  8841  0D0B  00D1               	movwf	?___fttol+3
  8842  0D0C  3000               	movlw	0
  8843  0D0D  00D0               	movwf	?___fttol+2
  8844  0D0E  3000               	movlw	0
  8845  0D0F  00CF               	movwf	?___fttol+1
  8846  0D10  3000               	movlw	0
  8847  0D11  00CE               	movwf	?___fttol
  8848  0D12  0008               	return
  8849  0D13                     l2972:	
  8850  0D13  3001               	movlw	1
  8851  0D14                     u3125:	
  8852  0D14  36DA               	lsrf	___fttol@lval+3,f
  8853  0D15  0CD9               	rrf	___fttol@lval+2,f
  8854  0D16  0CD8               	rrf	___fttol@lval+1,f
  8855  0D17  0CD7               	rrf	___fttol@lval,f
  8856  0D18  0B89               	decfsz	9,f
  8857  0D19  2D14               	goto	u3125
  8858  0D1A  3001               	movlw	1
  8859  0D1B  00D2               	movwf	??___fttol
  8860  0D1C  0852               	movf	??___fttol,w
  8861  0D1D  07DB               	addwf	___fttol@exp1,f
  8862  0D1E  1903               	btfsc	3,2
  8863  0D1F  2D3A               	goto	l2982
  8864  0D20  2D13               	goto	l2972
  8865  0D21                     l2974:	
  8866  0D21  3018               	movlw	24
  8867  0D22  025B               	subwf	___fttol@exp1,w
  8868  0D23  1C03               	skipc
  8869  0D24  2D37               	goto	l740
  8870  0D25  3000               	movlw	0
  8871  0D26  00D1               	movwf	?___fttol+3
  8872  0D27  3000               	movlw	0
  8873  0D28  00D0               	movwf	?___fttol+2
  8874  0D29  3000               	movlw	0
  8875  0D2A  00CF               	movwf	?___fttol+1
  8876  0D2B  3000               	movlw	0
  8877  0D2C  00CE               	movwf	?___fttol
  8878  0D2D  0008               	return
  8879  0D2E                     l2980:	
  8880  0D2E  3001               	movlw	1
  8881  0D2F                     u3155:	
  8882  0D2F  35D7               	lslf	___fttol@lval,f
  8883  0D30  0DD8               	rlf	___fttol@lval+1,f
  8884  0D31  0DD9               	rlf	___fttol@lval+2,f
  8885  0D32  0DDA               	rlf	___fttol@lval+3,f
  8886  0D33  0B89               	decfsz	9,f
  8887  0D34  2D2F               	goto	u3155
  8888  0D35  3001               	movlw	1
  8889  0D36  02DB               	subwf	___fttol@exp1,f
  8890  0D37                     l740:	
  8891  0D37  085B               	movf	___fttol@exp1,w
  8892  0D38  1D03               	btfss	3,2
  8893  0D39  2D2E               	goto	l2980
  8894  0D3A                     l2982:	
  8895  0D3A  0856               	movf	___fttol@sign1,w
  8896  0D3B  1903               	btfsc	3,2
  8897  0D3C  2D48               	goto	l2986
  8898  0D3D  09D7               	comf	___fttol@lval,f
  8899  0D3E  09D8               	comf	___fttol@lval+1,f
  8900  0D3F  09D9               	comf	___fttol@lval+2,f
  8901  0D40  09DA               	comf	___fttol@lval+3,f
  8902  0D41  0AD7               	incf	___fttol@lval,f
  8903  0D42  1903               	skipnz
  8904  0D43  0AD8               	incf	___fttol@lval+1,f
  8905  0D44  1903               	skipnz
  8906  0D45  0AD9               	incf	___fttol@lval+2,f
  8907  0D46  1903               	skipnz
  8908  0D47  0ADA               	incf	___fttol@lval+3,f
  8909  0D48                     l2986:	
  8910  0D48  085A               	movf	___fttol@lval+3,w
  8911  0D49  00D1               	movwf	?___fttol+3
  8912  0D4A  0859               	movf	___fttol@lval+2,w
  8913  0D4B  00D0               	movwf	?___fttol+2
  8914  0D4C  0858               	movf	___fttol@lval+1,w
  8915  0D4D  00CF               	movwf	?___fttol+1
  8916  0D4E  0857               	movf	___fttol@lval,w
  8917  0D4F  00CE               	movwf	?___fttol
  8918  0D50  0008               	return
  8919  0D51                     __end_of___fttol:	
  8920                           
  8921                           	psect	text16
  8922  0864                     __ptext16:	
  8923 ;; *************** function ___ftsub *****************
  8924 ;; Defined at:
  8925 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  f2              3   29[BANK0 ] float 
  8928 ;;  f1              3   32[BANK0 ] float 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  3   29[BANK0 ] float 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8940 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;Total ram usage:        6 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    2
  8947 ;; This function calls:
  8948 ;;		___ftadd
  8949 ;; This function is called by:
  8950 ;;		_main
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function ___ftsub
  8956  0864                     ___ftsub:	
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8960  0864  0020               	movlb	0	; select bank0
  8961  0865  083F               	movf	___ftsub@f2+2,w
  8962  0866  043E               	iorwf	___ftsub@f2+1,w
  8963  0867  043D               	iorwf	___ftsub@f2,w
  8964  0868  1903               	skipnz
  8965  0869  286C               	goto	l2944
  8966  086A  3080               	movlw	128
  8967  086B  06BF               	xorwf	___ftsub@f2+2,f
  8968  086C                     l2944:	
  8969  086C  0840               	movf	___ftsub@f1,w
  8970  086D  00B0               	movwf	___ftadd@f1
  8971  086E  0841               	movf	___ftsub@f1+1,w
  8972  086F  00B1               	movwf	___ftadd@f1+1
  8973  0870  0842               	movf	___ftsub@f1+2,w
  8974  0871  00B2               	movwf	___ftadd@f1+2
  8975  0872  083D               	movf	___ftsub@f2,w
  8976  0873  00B3               	movwf	___ftadd@f2
  8977  0874  083E               	movf	___ftsub@f2+1,w
  8978  0875  00B4               	movwf	___ftadd@f2+1
  8979  0876  083F               	movf	___ftsub@f2+2,w
  8980  0877  00B5               	movwf	___ftadd@f2+2
  8981  0878  3181  2184         	fcall	___ftadd
  8982  087A  0020               	movlb	0	; select bank0
  8983  087B  0830               	movf	?___ftadd,w
  8984  087C  00BD               	movwf	?___ftsub
  8985  087D  0831               	movf	?___ftadd+1,w
  8986  087E  00BE               	movwf	?___ftsub+1
  8987  087F  0832               	movf	?___ftadd+2,w
  8988  0880  00BF               	movwf	?___ftsub+2
  8989  0881  0008               	return
  8990  0882                     __end_of___ftsub:	
  8991                           
  8992                           	psect	text17
  8993  0DDE                     __ptext17:	
  8994 ;; *************** function ___ftdiv *****************
  8995 ;; Defined at:
  8996 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  f2              3    0[BANK0 ] float 
  8999 ;;  f1              3    3[BANK0 ] float 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  f3              3   11[BANK0 ] float 
  9002 ;;  sign            1   15[BANK0 ] unsigned char 
  9003 ;;  exp             1   14[BANK0 ] unsigned char 
  9004 ;;  cntr            1   10[BANK0 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  3    0[BANK0 ] float 
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0, pclath, cstack
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;Total ram usage:       16 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    1
  9021 ;; This function calls:
  9022 ;;		___ftpack
  9023 ;; This function is called by:
  9024 ;;		_main
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           
  9029                           ;psect for function ___ftdiv
  9030  0DDE                     ___ftdiv:	
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9034  0DDE  0020               	movlb	0	; select bank0
  9035  0DDF  0823               	movf	___ftdiv@f1,w
  9036  0DE0  00A6               	movwf	??___ftdiv
  9037  0DE1  0824               	movf	___ftdiv@f1+1,w
  9038  0DE2  00A7               	movwf	??___ftdiv+1
  9039  0DE3  0825               	movf	___ftdiv@f1+2,w
  9040  0DE4  00A8               	movwf	??___ftdiv+2
  9041  0DE5  1003               	clrc
  9042  0DE6  0D27               	rlf	??___ftdiv+1,w
  9043  0DE7  0D28               	rlf	??___ftdiv+2,w
  9044  0DE8  00A9               	movwf	??___ftdiv+3
  9045  0DE9  0829               	movf	??___ftdiv+3,w
  9046  0DEA  00AE               	movwf	___ftdiv@exp
  9047  0DEB  082E               	movf	___ftdiv@exp,w
  9048  0DEC  1D03               	btfss	3,2
  9049  0DED  2DF5               	goto	l2904
  9050  0DEE  3000               	movlw	0
  9051  0DEF  00A0               	movwf	?___ftdiv
  9052  0DF0  3000               	movlw	0
  9053  0DF1  00A1               	movwf	?___ftdiv+1
  9054  0DF2  3000               	movlw	0
  9055  0DF3  00A2               	movwf	?___ftdiv+2
  9056  0DF4  0008               	return
  9057  0DF5                     l2904:	
  9058  0DF5  0820               	movf	___ftdiv@f2,w
  9059  0DF6  00A6               	movwf	??___ftdiv
  9060  0DF7  0821               	movf	___ftdiv@f2+1,w
  9061  0DF8  00A7               	movwf	??___ftdiv+1
  9062  0DF9  0822               	movf	___ftdiv@f2+2,w
  9063  0DFA  00A8               	movwf	??___ftdiv+2
  9064  0DFB  1003               	clrc
  9065  0DFC  0D27               	rlf	??___ftdiv+1,w
  9066  0DFD  0D28               	rlf	??___ftdiv+2,w
  9067  0DFE  00A9               	movwf	??___ftdiv+3
  9068  0DFF  0829               	movf	??___ftdiv+3,w
  9069  0E00  00AF               	movwf	___ftdiv@sign
  9070  0E01  082F               	movf	___ftdiv@sign,w
  9071  0E02  1D03               	btfss	3,2
  9072  0E03  2E0B               	goto	l2910
  9073  0E04  3000               	movlw	0
  9074  0E05  00A0               	movwf	?___ftdiv
  9075  0E06  3000               	movlw	0
  9076  0E07  00A1               	movwf	?___ftdiv+1
  9077  0E08  3000               	movlw	0
  9078  0E09  00A2               	movwf	?___ftdiv+2
  9079  0E0A  0008               	return
  9080  0E0B                     l2910:	
  9081  0E0B  3000               	movlw	0
  9082  0E0C  00AB               	movwf	___ftdiv@f3
  9083  0E0D  3000               	movlw	0
  9084  0E0E  00AC               	movwf	___ftdiv@f3+1
  9085  0E0F  3000               	movlw	0
  9086  0E10  00AD               	movwf	___ftdiv@f3+2
  9087  0E11  3089               	movlw	137
  9088  0E12  072F               	addwf	___ftdiv@sign,w
  9089  0E13  00A6               	movwf	??___ftdiv
  9090  0E14  0826               	movf	??___ftdiv,w
  9091  0E15  02AE               	subwf	___ftdiv@exp,f
  9092  0E16  0823               	movf	___ftdiv@f1,w
  9093  0E17  00A6               	movwf	??___ftdiv
  9094  0E18  0824               	movf	___ftdiv@f1+1,w
  9095  0E19  00A7               	movwf	??___ftdiv+1
  9096  0E1A  0825               	movf	___ftdiv@f1+2,w
  9097  0E1B  00A8               	movwf	??___ftdiv+2
  9098  0E1C  3010               	movlw	16
  9099  0E1D                     u3015:	
  9100  0E1D  36A8               	lsrf	??___ftdiv+2,f
  9101  0E1E  0CA7               	rrf	??___ftdiv+1,f
  9102  0E1F  0CA6               	rrf	??___ftdiv,f
  9103  0E20  0B89               	decfsz	9,f
  9104  0E21  2E1D               	goto	u3015
  9105  0E22  0826               	movf	??___ftdiv,w
  9106  0E23  00A9               	movwf	??___ftdiv+3
  9107  0E24  0829               	movf	??___ftdiv+3,w
  9108  0E25  00AF               	movwf	___ftdiv@sign
  9109  0E26  0820               	movf	___ftdiv@f2,w
  9110  0E27  00A6               	movwf	??___ftdiv
  9111  0E28  0821               	movf	___ftdiv@f2+1,w
  9112  0E29  00A7               	movwf	??___ftdiv+1
  9113  0E2A  0822               	movf	___ftdiv@f2+2,w
  9114  0E2B  00A8               	movwf	??___ftdiv+2
  9115  0E2C  3010               	movlw	16
  9116  0E2D                     u3025:	
  9117  0E2D  36A8               	lsrf	??___ftdiv+2,f
  9118  0E2E  0CA7               	rrf	??___ftdiv+1,f
  9119  0E2F  0CA6               	rrf	??___ftdiv,f
  9120  0E30  0B89               	decfsz	9,f
  9121  0E31  2E2D               	goto	u3025
  9122  0E32  0826               	movf	??___ftdiv,w
  9123  0E33  00A9               	movwf	??___ftdiv+3
  9124  0E34  0829               	movf	??___ftdiv+3,w
  9125  0E35  06AF               	xorwf	___ftdiv@sign,f
  9126  0E36  3080               	movlw	128
  9127  0E37  00A6               	movwf	??___ftdiv
  9128  0E38  0826               	movf	??___ftdiv,w
  9129  0E39  05AF               	andwf	___ftdiv@sign,f
  9130  0E3A  17A4               	bsf	___ftdiv@f1+1,7
  9131  0E3B  30FF               	movlw	255
  9132  0E3C  05A3               	andwf	___ftdiv@f1,f
  9133  0E3D  30FF               	movlw	255
  9134  0E3E  05A4               	andwf	___ftdiv@f1+1,f
  9135  0E3F  3000               	movlw	0
  9136  0E40  05A5               	andwf	___ftdiv@f1+2,f
  9137  0E41  17A1               	bsf	___ftdiv@f2+1,7
  9138  0E42  30FF               	movlw	255
  9139  0E43  05A0               	andwf	___ftdiv@f2,f
  9140  0E44  30FF               	movlw	255
  9141  0E45  05A1               	andwf	___ftdiv@f2+1,f
  9142  0E46  3000               	movlw	0
  9143  0E47  05A2               	andwf	___ftdiv@f2+2,f
  9144  0E48  3018               	movlw	24
  9145  0E49  00A6               	movwf	??___ftdiv
  9146  0E4A  0826               	movf	??___ftdiv,w
  9147  0E4B  00AA               	movwf	___ftdiv@cntr
  9148  0E4C                     l2924:	
  9149  0E4C  3001               	movlw	1
  9150  0E4D                     u3035:	
  9151  0E4D  35AB               	lslf	___ftdiv@f3,f
  9152  0E4E  0DAC               	rlf	___ftdiv@f3+1,f
  9153  0E4F  0DAD               	rlf	___ftdiv@f3+2,f
  9154  0E50  0B89               	decfsz	9,f
  9155  0E51  2E4D               	goto	u3035
  9156  0E52  0822               	movf	___ftdiv@f2+2,w
  9157  0E53  0225               	subwf	___ftdiv@f1+2,w
  9158  0E54  1D03               	skipz
  9159  0E55  2E5C               	goto	u3045
  9160  0E56  0821               	movf	___ftdiv@f2+1,w
  9161  0E57  0224               	subwf	___ftdiv@f1+1,w
  9162  0E58  1D03               	skipz
  9163  0E59  2E5C               	goto	u3045
  9164  0E5A  0820               	movf	___ftdiv@f2,w
  9165  0E5B  0223               	subwf	___ftdiv@f1,w
  9166  0E5C                     u3045:	
  9167  0E5C  1C03               	skipc
  9168  0E5D  2E65               	goto	l2932
  9169  0E5E  0820               	movf	___ftdiv@f2,w
  9170  0E5F  02A3               	subwf	___ftdiv@f1,f
  9171  0E60  0821               	movf	___ftdiv@f2+1,w
  9172  0E61  3BA4               	subwfb	___ftdiv@f1+1,f
  9173  0E62  0822               	movf	___ftdiv@f2+2,w
  9174  0E63  3BA5               	subwfb	___ftdiv@f1+2,f
  9175  0E64  142B               	bsf	___ftdiv@f3,0
  9176  0E65                     l2932:	
  9177  0E65  3001               	movlw	1
  9178  0E66                     u3055:	
  9179  0E66  35A3               	lslf	___ftdiv@f1,f
  9180  0E67  0DA4               	rlf	___ftdiv@f1+1,f
  9181  0E68  0DA5               	rlf	___ftdiv@f1+2,f
  9182  0E69  0B89               	decfsz	9,f
  9183  0E6A  2E66               	goto	u3055
  9184  0E6B  3001               	movlw	1
  9185  0E6C  02AA               	subwf	___ftdiv@cntr,f
  9186  0E6D  1D03               	btfss	3,2
  9187  0E6E  2E4C               	goto	l2924
  9188  0E6F  082B               	movf	___ftdiv@f3,w
  9189  0E70  00F0               	movwf	___ftpack@arg
  9190  0E71  082C               	movf	___ftdiv@f3+1,w
  9191  0E72  00F1               	movwf	___ftpack@arg+1
  9192  0E73  082D               	movf	___ftdiv@f3+2,w
  9193  0E74  00F2               	movwf	___ftpack@arg+2
  9194  0E75  082E               	movf	___ftdiv@exp,w
  9195  0E76  00A6               	movwf	??___ftdiv
  9196  0E77  0826               	movf	??___ftdiv,w
  9197  0E78  00F3               	movwf	___ftpack@exp
  9198  0E79  082F               	movf	___ftdiv@sign,w
  9199  0E7A  00A7               	movwf	??___ftdiv+1
  9200  0E7B  0827               	movf	??___ftdiv+1,w
  9201  0E7C  00F4               	movwf	___ftpack@sign
  9202  0E7D  318B  2369         	fcall	___ftpack
  9203  0E7F  0870               	movf	?___ftpack,w
  9204  0E80  0020               	movlb	0	; select bank0
  9205  0E81  00A0               	movwf	?___ftdiv
  9206  0E82  0871               	movf	?___ftpack+1,w
  9207  0E83  00A1               	movwf	?___ftdiv+1
  9208  0E84  0872               	movf	?___ftpack+2,w
  9209  0E85  00A2               	movwf	?___ftdiv+2
  9210  0E86  0008               	return
  9211  0E87                     __end_of___ftdiv:	
  9212                           
  9213                           	psect	text18
  9214  0C48                     __ptext18:	
  9215 ;; *************** function ___aldiv *****************
  9216 ;; Defined at:
  9217 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  divisor         4    0[COMMON] long 
  9220 ;;  dividend        4    4[COMMON] long 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  quotient        4    2[BANK0 ] long 
  9223 ;;  sign            1    1[BANK0 ] unsigned char 
  9224 ;;  counter         1    0[BANK0 ] unsigned char 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  4    0[COMMON] long 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2, status,0
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;Total ram usage:       15 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_main
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function ___aldiv
  9249  0C48                     ___aldiv:	
  9250                           
  9251                           ;incstack = 0
  9252                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9253  0C48  0020               	movlb	0	; select bank0
  9254  0C49  01A1               	clrf	___aldiv@sign
  9255  0C4A  1FF3               	btfss	___aldiv@divisor+3,7
  9256  0C4B  2C59               	goto	l543
  9257  0C4C  09F0               	comf	___aldiv@divisor,f
  9258  0C4D  09F1               	comf	___aldiv@divisor+1,f
  9259  0C4E  09F2               	comf	___aldiv@divisor+2,f
  9260  0C4F  09F3               	comf	___aldiv@divisor+3,f
  9261  0C50  0AF0               	incf	___aldiv@divisor,f
  9262  0C51  1903               	skipnz
  9263  0C52  0AF1               	incf	___aldiv@divisor+1,f
  9264  0C53  1903               	skipnz
  9265  0C54  0AF2               	incf	___aldiv@divisor+2,f
  9266  0C55  1903               	skipnz
  9267  0C56  0AF3               	incf	___aldiv@divisor+3,f
  9268  0C57  01A1               	clrf	___aldiv@sign
  9269  0C58  0AA1               	incf	___aldiv@sign,f
  9270  0C59                     l543:	
  9271  0C59  1FF7               	btfss	___aldiv@dividend+3,7
  9272  0C5A  2C6A               	goto	l2868
  9273  0C5B  09F4               	comf	___aldiv@dividend,f
  9274  0C5C  09F5               	comf	___aldiv@dividend+1,f
  9275  0C5D  09F6               	comf	___aldiv@dividend+2,f
  9276  0C5E  09F7               	comf	___aldiv@dividend+3,f
  9277  0C5F  0AF4               	incf	___aldiv@dividend,f
  9278  0C60  1903               	skipnz
  9279  0C61  0AF5               	incf	___aldiv@dividend+1,f
  9280  0C62  1903               	skipnz
  9281  0C63  0AF6               	incf	___aldiv@dividend+2,f
  9282  0C64  1903               	skipnz
  9283  0C65  0AF7               	incf	___aldiv@dividend+3,f
  9284  0C66  3001               	movlw	1
  9285  0C67  00F8               	movwf	??___aldiv
  9286  0C68  0878               	movf	??___aldiv,w
  9287  0C69  06A1               	xorwf	___aldiv@sign,f
  9288  0C6A                     l2868:	
  9289  0C6A  3000               	movlw	0
  9290  0C6B  00A5               	movwf	___aldiv@quotient+3
  9291  0C6C  3000               	movlw	0
  9292  0C6D  00A4               	movwf	___aldiv@quotient+2
  9293  0C6E  3000               	movlw	0
  9294  0C6F  00A3               	movwf	___aldiv@quotient+1
  9295  0C70  3000               	movlw	0
  9296  0C71  00A2               	movwf	___aldiv@quotient
  9297  0C72  0873               	movf	___aldiv@divisor+3,w
  9298  0C73  0472               	iorwf	___aldiv@divisor+2,w
  9299  0C74  0471               	iorwf	___aldiv@divisor+1,w
  9300  0C75  0470               	iorwf	___aldiv@divisor,w
  9301  0C76  1903               	skipnz
  9302  0C77  2CB3               	goto	l2890
  9303  0C78  01A0               	clrf	___aldiv@counter
  9304  0C79  0AA0               	incf	___aldiv@counter,f
  9305  0C7A                     l2876:	
  9306  0C7A  1BF3               	btfsc	___aldiv@divisor+3,7
  9307  0C7B  2C88               	goto	l2878
  9308  0C7C  3001               	movlw	1
  9309  0C7D                     u2925:	
  9310  0C7D  35F0               	lslf	___aldiv@divisor,f
  9311  0C7E  0DF1               	rlf	___aldiv@divisor+1,f
  9312  0C7F  0DF2               	rlf	___aldiv@divisor+2,f
  9313  0C80  0DF3               	rlf	___aldiv@divisor+3,f
  9314  0C81  0B89               	decfsz	9,f
  9315  0C82  2C7D               	goto	u2925
  9316  0C83  3001               	movlw	1
  9317  0C84  00F8               	movwf	??___aldiv
  9318  0C85  0878               	movf	??___aldiv,w
  9319  0C86  07A0               	addwf	___aldiv@counter,f
  9320  0C87  2C7A               	goto	l2876
  9321  0C88                     l2878:	
  9322  0C88  3001               	movlw	1
  9323  0C89                     u2945:	
  9324  0C89  35A2               	lslf	___aldiv@quotient,f
  9325  0C8A  0DA3               	rlf	___aldiv@quotient+1,f
  9326  0C8B  0DA4               	rlf	___aldiv@quotient+2,f
  9327  0C8C  0DA5               	rlf	___aldiv@quotient+3,f
  9328  0C8D  0B89               	decfsz	9,f
  9329  0C8E  2C89               	goto	u2945
  9330  0C8F  0873               	movf	___aldiv@divisor+3,w
  9331  0C90  0277               	subwf	___aldiv@dividend+3,w
  9332  0C91  1D03               	skipz
  9333  0C92  2C9D               	goto	u2955
  9334  0C93  0872               	movf	___aldiv@divisor+2,w
  9335  0C94  0276               	subwf	___aldiv@dividend+2,w
  9336  0C95  1D03               	skipz
  9337  0C96  2C9D               	goto	u2955
  9338  0C97  0871               	movf	___aldiv@divisor+1,w
  9339  0C98  0275               	subwf	___aldiv@dividend+1,w
  9340  0C99  1D03               	skipz
  9341  0C9A  2C9D               	goto	u2955
  9342  0C9B  0870               	movf	___aldiv@divisor,w
  9343  0C9C  0274               	subwf	___aldiv@dividend,w
  9344  0C9D                     u2955:	
  9345  0C9D  1C03               	skipc
  9346  0C9E  2CA8               	goto	l2886
  9347  0C9F  0870               	movf	___aldiv@divisor,w
  9348  0CA0  02F4               	subwf	___aldiv@dividend,f
  9349  0CA1  0871               	movf	___aldiv@divisor+1,w
  9350  0CA2  3BF5               	subwfb	___aldiv@dividend+1,f
  9351  0CA3  0872               	movf	___aldiv@divisor+2,w
  9352  0CA4  3BF6               	subwfb	___aldiv@dividend+2,f
  9353  0CA5  0873               	movf	___aldiv@divisor+3,w
  9354  0CA6  3BF7               	subwfb	___aldiv@dividend+3,f
  9355  0CA7  1422               	bsf	___aldiv@quotient,0
  9356  0CA8                     l2886:	
  9357  0CA8  3001               	movlw	1
  9358  0CA9                     u2965:	
  9359  0CA9  36F3               	lsrf	___aldiv@divisor+3,f
  9360  0CAA  0CF2               	rrf	___aldiv@divisor+2,f
  9361  0CAB  0CF1               	rrf	___aldiv@divisor+1,f
  9362  0CAC  0CF0               	rrf	___aldiv@divisor,f
  9363  0CAD  0B89               	decfsz	9,f
  9364  0CAE  2CA9               	goto	u2965
  9365  0CAF  3001               	movlw	1
  9366  0CB0  02A0               	subwf	___aldiv@counter,f
  9367  0CB1  1D03               	btfss	3,2
  9368  0CB2  2C88               	goto	l2878
  9369  0CB3                     l2890:	
  9370  0CB3  0821               	movf	___aldiv@sign,w
  9371  0CB4  1903               	btfsc	3,2
  9372  0CB5  2CC1               	goto	l2894
  9373  0CB6  09A2               	comf	___aldiv@quotient,f
  9374  0CB7  09A3               	comf	___aldiv@quotient+1,f
  9375  0CB8  09A4               	comf	___aldiv@quotient+2,f
  9376  0CB9  09A5               	comf	___aldiv@quotient+3,f
  9377  0CBA  0AA2               	incf	___aldiv@quotient,f
  9378  0CBB  1903               	skipnz
  9379  0CBC  0AA3               	incf	___aldiv@quotient+1,f
  9380  0CBD  1903               	skipnz
  9381  0CBE  0AA4               	incf	___aldiv@quotient+2,f
  9382  0CBF  1903               	skipnz
  9383  0CC0  0AA5               	incf	___aldiv@quotient+3,f
  9384  0CC1                     l2894:	
  9385  0CC1  0825               	movf	___aldiv@quotient+3,w
  9386  0CC2  00F3               	movwf	?___aldiv+3
  9387  0CC3  0824               	movf	___aldiv@quotient+2,w
  9388  0CC4  00F2               	movwf	?___aldiv+2
  9389  0CC5  0823               	movf	___aldiv@quotient+1,w
  9390  0CC6  00F1               	movwf	?___aldiv+1
  9391  0CC7  0822               	movf	___aldiv@quotient,w
  9392  0CC8  00F0               	movwf	?___aldiv
  9393  0CC9  0008               	return
  9394  0CCA                     __end_of___aldiv:	
  9395                           
  9396                           	psect	text19
  9397  09F8                     __ptext19:	
  9398 ;; *************** function _SYSTEM_Initialize *****************
  9399 ;; Defined at:
  9400 ;;		line 37 in file "system.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;Total ram usage:        2 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    3
  9421 ;; This function calls:
  9422 ;;		_ADCC_Initialize
  9423 ;;		_InitCustomChars
  9424 ;;		_Init_PID
  9425 ;;		_LCD_Clear
  9426 ;;		_LCD_Init
  9427 ;;		_OSCILLATOR_Initialize
  9428 ;;		_PIN_MANAGER_Initialize
  9429 ;;		_PWM6_Initialize
  9430 ;;		_TMR0_Initialize
  9431 ;;		_TMR2_Initialize
  9432 ;; This function is called by:
  9433 ;;		_main
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           
  9438                           ;psect for function _SYSTEM_Initialize
  9439  09F8                     _SYSTEM_Initialize:	
  9440                           
  9441                           ;system.c: 40: PIN_MANAGER_Initialize();
  9442                           
  9443                           ;incstack = 0
  9444                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9445  09F8  3189  211B  3189   	fcall	_PIN_MANAGER_Initialize
  9446                           
  9447                           ;system.c: 41: OSCILLATOR_Initialize();
  9448  09FB  3197  2733  3189   	fcall	_OSCILLATOR_Initialize
  9449                           
  9450                           ;system.c: 42: FVRCON = 0x00;
  9451  09FE  0032               	movlb	18	; select bank18
  9452  09FF  018C               	clrf	12	;volatile
  9453                           
  9454                           ;system.c: 43: ADCC_Initialize();
  9455  0A00  3197  27CD  3189   	fcall	_ADCC_Initialize
  9456                           
  9457                           ;system.c: 44: PWM6_Initialize();
  9458  0A03  3197  2753  3189   	fcall	_PWM6_Initialize
  9459                           
  9460                           ;system.c: 45: TMR0_Initialize();
  9461  0A06  3197  276E  3189   	fcall	_TMR0_Initialize
  9462                           
  9463                           ;system.c: 46: TMR2_Initialize();
  9464  0A09  3197  277D  3189   	fcall	_TMR2_Initialize
  9465                           
  9466                           ;system.c: 47: LCD_Init(0X00);
  9467  0A0C  3000               	movlw	0
  9468  0A0D  318B  23CD  3189   	fcall	_LCD_Init
  9469                           
  9470                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
  9471  0A10  3041               	movlw	65
  9472  0A11  00F8               	movwf	??_SYSTEM_Initialize+1
  9473  0A12  30EE               	movlw	238
  9474  0A13  00F7               	movwf	??_SYSTEM_Initialize
  9475  0A14                     u3397:	
  9476  0A14  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9477  0A15  2A14               	goto	u3397
  9478  0A16  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9479  0A17  2A14               	goto	u3397
  9480  0A18  0000               	nop
  9481                           
  9482                           ;system.c: 49: LCD_Clear();
  9483  0A19  3197  272B  3189   	fcall	_LCD_Clear
  9484                           
  9485                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
  9486  0A1C  3021               	movlw	33
  9487  0A1D  00F8               	movwf	??_SYSTEM_Initialize+1
  9488  0A1E  3076               	movlw	118
  9489  0A1F  00F7               	movwf	??_SYSTEM_Initialize
  9490  0A20                     u3407:	
  9491  0A20  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9492  0A21  2A20               	goto	u3407
  9493  0A22  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9494  0A23  2A20               	goto	u3407
  9495  0A24  0000               	nop
  9496                           
  9497                           ;system.c: 51: InitCustomChars();
  9498  0A25  3188  20A2  3189   	fcall	_InitCustomChars
  9499                           
  9500                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
  9501  0A28  3041               	movlw	65
  9502  0A29  00F8               	movwf	??_SYSTEM_Initialize+1
  9503  0A2A  30EE               	movlw	238
  9504  0A2B  00F7               	movwf	??_SYSTEM_Initialize
  9505  0A2C                     u3417:	
  9506  0A2C  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9507  0A2D  2A2C               	goto	u3417
  9508  0A2E  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9509  0A2F  2A2C               	goto	u3417
  9510  0A30  0000               	nop
  9511                           
  9512                           ;system.c: 53: Init_PID();
  9513  0A31  3188  20C8         	fcall	_Init_PID
  9514  0A33  0008               	return
  9515  0A34                     __end_of_SYSTEM_Initialize:	
  9516                           
  9517                           	psect	text20
  9518  177D                     __ptext20:	
  9519 ;; *************** function _TMR2_Initialize *****************
  9520 ;; Defined at:
  9521 ;;		line 21 in file "timers.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_SYSTEM_Initialize
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           
  9549                           ;psect for function _TMR2_Initialize
  9550  177D                     _TMR2_Initialize:	
  9551                           
  9552                           ;timers.c: 23: T2CON = 0x7F;
  9553                           
  9554                           ;incstack = 0
  9555                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9556  177D  307F               	movlw	127
  9557  177E  0025               	movlb	5	; select bank5
  9558  177F  008E               	movwf	14	;volatile
  9559                           
  9560                           ;timers.c: 25: T2CLKCON = 0x01;
  9561  1780  3001               	movlw	1
  9562  1781  0090               	movwf	16	;volatile
  9563                           
  9564                           ;timers.c: 27: T2HLT = 0x00;
  9565  1782  018F               	clrf	15	;volatile
  9566                           
  9567                           ;timers.c: 29: T2RST = 0x00;
  9568  1783  0191               	clrf	17	;volatile
  9569                           
  9570                           ;timers.c: 31: T2PR = 0xFF;
  9571  1784  30FF               	movlw	255
  9572  1785  008D               	movwf	13	;volatile
  9573                           
  9574                           ;timers.c: 33: T2TMR = 0x00;
  9575  1786  018C               	clrf	12	;volatile
  9576                           
  9577                           ;timers.c: 35: PIR4bits.TMR2IF = 0;
  9578  1787  002E               	movlb	14	; select bank14
  9579  1788  1090               	bcf	16,1	;volatile
  9580                           
  9581                           ;timers.c: 37: T2CONbits.TMR2ON = 1;
  9582  1789  0025               	movlb	5	; select bank5
  9583  178A  178E               	bsf	14,7	;volatile
  9584  178B  0008               	return
  9585  178C                     __end_of_TMR2_Initialize:	
  9586                           
  9587                           	psect	text21
  9588  176E                     __ptext21:	
  9589 ;; *************** function _TMR0_Initialize *****************
  9590 ;; Defined at:
  9591 ;;		line 3 in file "timers.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;		None
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;		None
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;Total ram usage:        0 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; This function calls:
  9612 ;;		Nothing
  9613 ;; This function is called by:
  9614 ;;		_SYSTEM_Initialize
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           
  9619                           ;psect for function _TMR0_Initialize
  9620  176E                     _TMR0_Initialize:	
  9621                           
  9622                           ;timers.c: 5: T0CON0 = 0x10;
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in _TMR0_Initialize: [wreg]
  9626  176E  3010               	movlw	16
  9627  176F  0020               	movlb	0	; select bank0
  9628  1770  009E               	movwf	30	;volatile
  9629                           
  9630                           ;timers.c: 7: T0CON1 = 0x42;
  9631  1771  3042               	movlw	66
  9632  1772  009F               	movwf	31	;volatile
  9633                           
  9634                           ;timers.c: 9: TMR0H = 0x24;
  9635  1773  3024               	movlw	36
  9636  1774  009D               	movwf	29	;volatile
  9637                           
  9638                           ;timers.c: 11: TMR0L = 0x9F;
  9639  1775  309F               	movlw	159
  9640  1776  009C               	movwf	28	;volatile
  9641                           
  9642                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
  9643  1777  002E               	movlb	14	; select bank14
  9644  1778  1696               	bsf	22,5	;volatile
  9645                           
  9646                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
  9647  1779  128C               	bcf	12,5	;volatile
  9648                           
  9649                           ;timers.c: 17: T0CON0bits.T0EN = 1;
  9650  177A  0020               	movlb	0	; select bank0
  9651  177B  179E               	bsf	30,7	;volatile
  9652  177C  0008               	return
  9653  177D                     __end_of_TMR0_Initialize:	
  9654                           
  9655                           	psect	text22
  9656  1753                     __ptext22:	
  9657 ;; *************** function _PWM6_Initialize *****************
  9658 ;; Defined at:
  9659 ;;		line 4 in file "pwm6.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;Total ram usage:        0 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_SYSTEM_Initialize
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _PWM6_Initialize
  9688  1753                     _PWM6_Initialize:	
  9689                           
  9690                           ;pwm6.c: 6: PWM6CON = 0x80;
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9694  1753  3080               	movlw	128
  9695  1754  0027               	movlb	7	; select bank7
  9696  1755  008E               	movwf	14	;volatile
  9697                           
  9698                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9699  1756  30FF               	movlw	255
  9700  1757  008D               	movwf	13	;volatile
  9701                           
  9702                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9703  1758  30C0               	movlw	192
  9704  1759  008C               	movwf	12	;volatile
  9705                           
  9706                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9707  175A  0024               	movlb	4	; select bank4
  9708  175B  081F               	movf	31,w	;volatile
  9709  175C  39F3               	andlw	-13
  9710  175D  3804               	iorlw	4
  9711  175E  009F               	movwf	31	;volatile
  9712  175F  0008               	return
  9713  1760                     __end_of_PWM6_Initialize:	
  9714                           
  9715                           	psect	text23
  9716  091B                     __ptext23:	
  9717 ;; *************** function _PIN_MANAGER_Initialize *****************
  9718 ;; Defined at:
  9719 ;;		line 5 in file "pin_manager.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;		None
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  state           1    0[COMMON] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;Total ram usage:        1 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_SYSTEM_Initialize
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _PIN_MANAGER_Initialize
  9748  091B                     _PIN_MANAGER_Initialize:	
  9749                           
  9750                           ;pin_manager.c: 7: LATA = 0x00;
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9754  091B  0020               	movlb	0	; select bank0
  9755  091C  0196               	clrf	22	;volatile
  9756                           
  9757                           ;pin_manager.c: 8: LATB = 0x0;
  9758  091D  0197               	clrf	23	;volatile
  9759                           
  9760                           ;pin_manager.c: 9: LATC = 0x0;
  9761  091E  0198               	clrf	24	;volatile
  9762                           
  9763                           ;pin_manager.c: 11: WPUA = 0x18;
  9764  091F  3018               	movlw	24
  9765  0920  003E               	movlb	30	; select bank30
  9766  0921  00B9               	movwf	57	;volatile
  9767                           
  9768                           ;pin_manager.c: 12: WPUB = 0x00;
  9769  0922  01C4               	clrf	68	;volatile
  9770                           
  9771                           ;pin_manager.c: 13: WPUC = 0x00;
  9772  0923  01CF               	clrf	79	;volatile
  9773                           
  9774                           ;pin_manager.c: 14: WPUE = 0x8;
  9775  0924  3008               	movlw	8
  9776  0925  00E5               	movwf	101	;volatile
  9777                           
  9778                           ;pin_manager.c: 16: TRISA = 0x1C;
  9779  0926  301C               	movlw	28
  9780  0927  0020               	movlb	0	; select bank0
  9781  0928  0091               	movwf	17	;volatile
  9782                           
  9783                           ;pin_manager.c: 17: TRISB = 0x00;
  9784  0929  0192               	clrf	18	;volatile
  9785                           
  9786                           ;pin_manager.c: 18: TRISC = 0x10;
  9787  092A  3010               	movlw	16
  9788  092B  0093               	movwf	19	;volatile
  9789                           
  9790                           ;pin_manager.c: 20: ANSELA = 0x04;
  9791  092C  3004               	movlw	4
  9792  092D  003E               	movlb	30	; select bank30
  9793  092E  00B8               	movwf	56	;volatile
  9794                           
  9795                           ;pin_manager.c: 21: ANSELB = 0x00;
  9796  092F  01C3               	clrf	67	;volatile
  9797                           
  9798                           ;pin_manager.c: 22: ANSELC = 0x00;
  9799  0930  01CE               	clrf	78	;volatile
  9800                           
  9801                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9802  0931  002E               	movlb	14	; select bank14
  9803  0932  1216               	bcf	22,4	;volatile
  9804                           
  9805                           ;pin_manager.c: 25: bool state = GIE;
  9806  0933  3000               	movlw	0
  9807  0934  1B8B               	btfsc	11,7	;volatile
  9808  0935  3001               	movlw	1
  9809  0936  00F0               	movwf	PIN_MANAGER_Initialize@state
  9810                           
  9811                           ;pin_manager.c: 26: GIE = 0;
  9812  0937  138B               	bcf	11,7	;volatile
  9813                           
  9814                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9815  0938  3055               	movlw	85
  9816  0939  003D               	movlb	29	; select bank29
  9817  093A  008F               	movwf	15	;volatile
  9818                           
  9819                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9820  093B  30AA               	movlw	170
  9821  093C  008F               	movwf	15	;volatile
  9822                           
  9823                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9824  093D  100F               	bcf	15,0	;volatile
  9825                           
  9826                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9827  093E  300E               	movlw	14
  9828  093F  003E               	movlb	30	; select bank30
  9829  0940  0091               	movwf	17	;volatile
  9830                           
  9831                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9832  0941  3055               	movlw	85
  9833  0942  003D               	movlb	29	; select bank29
  9834  0943  008F               	movwf	15	;volatile
  9835                           
  9836                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9837  0944  30AA               	movlw	170
  9838  0945  008F               	movwf	15	;volatile
  9839                           
  9840                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9841  0946  140F               	bsf	15,0	;volatile
  9842                           
  9843                           ;pin_manager.c: 39: GIE = state;
  9844  0947  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9845  0948  294B               	goto	u2570
  9846  0949  178B               	bsf	11,7	;volatile
  9847  094A  0008               	return
  9848  094B                     u2570:	
  9849  094B  138B               	bcf	11,7	;volatile
  9850  094C  0008               	return
  9851  094D                     __end_of_PIN_MANAGER_Initialize:	
  9852                           
  9853                           	psect	text24
  9854  1733                     __ptext24:	
  9855 ;; *************** function _OSCILLATOR_Initialize *****************
  9856 ;; Defined at:
  9857 ;;		line 56 in file "system.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;		None
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;Total ram usage:        0 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_SYSTEM_Initialize
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           
  9885                           ;psect for function _OSCILLATOR_Initialize
  9886  1733                     _OSCILLATOR_Initialize:	
  9887                           
  9888                           ;system.c: 58: OSCCON1 = 0x60;
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9892  1733  3060               	movlw	96
  9893  1734  0031               	movlb	17	; select bank17
  9894  1735  008D               	movwf	13	;volatile
  9895                           
  9896                           ;system.c: 60: OSCCON3 = 0x00;
  9897  1736  018F               	clrf	15	;volatile
  9898                           
  9899                           ;system.c: 62: OSCEN = 0x00;
  9900  1737  0191               	clrf	17	;volatile
  9901                           
  9902                           ;system.c: 64: OSCFRQ = 0x00;
  9903  1738  0193               	clrf	19	;volatile
  9904                           
  9905                           ;system.c: 66: OSCTUNE = 0x00;
  9906  1739  0192               	clrf	18	;volatile
  9907  173A  0008               	return
  9908  173B                     __end_of_OSCILLATOR_Initialize:	
  9909                           
  9910                           	psect	text25
  9911  0BCD                     __ptext25:	
  9912 ;; *************** function _LCD_Init *****************
  9913 ;; Defined at:
  9914 ;;		line 154 in file "lcd.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  style           1    wreg     unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  style           1    5[COMMON] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0, pclath, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        3 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    2
  9935 ;; This function calls:
  9936 ;;		_LCD_Cmd
  9937 ;;		_LCD_Port
  9938 ;; This function is called by:
  9939 ;;		_SYSTEM_Initialize
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _LCD_Init
  9945  0BCD                     _LCD_Init:	
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9949                           ;LCD_Init@style stored from wreg
  9950  0BCD  00F5               	movwf	LCD_Init@style
  9951                           
  9952                           ;lcd.c: 156: LCD_Port(0x00);
  9953  0BCE  3000               	movlw	0
  9954  0BCF  3197  27B5  318B   	fcall	_LCD_Port
  9955                           
  9956                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9957  0BD2  3021               	movlw	33
  9958  0BD3  00F4               	movwf	??_LCD_Init+1
  9959  0BD4  3076               	movlw	118
  9960  0BD5  00F3               	movwf	??_LCD_Init
  9961  0BD6                     u3427:	
  9962  0BD6  0BF3               	decfsz	??_LCD_Init,f
  9963  0BD7  2BD6               	goto	u3427
  9964  0BD8  0BF4               	decfsz	??_LCD_Init+1,f
  9965  0BD9  2BD6               	goto	u3427
  9966  0BDA  0000               	nop
  9967                           
  9968                           ;lcd.c: 160: LCD_Cmd(0x03);
  9969  0BDB  3003               	movlw	3
  9970  0BDC  3188  2000  318B   	fcall	_LCD_Cmd
  9971                           
  9972                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9973  0BDF  3004               	movlw	4
  9974  0BE0  00F4               	movwf	??_LCD_Init+1
  9975  0BE1  303D               	movlw	61
  9976  0BE2  00F3               	movwf	??_LCD_Init
  9977  0BE3                     u3437:	
  9978  0BE3  0BF3               	decfsz	??_LCD_Init,f
  9979  0BE4  2BE3               	goto	u3437
  9980  0BE5  0BF4               	decfsz	??_LCD_Init+1,f
  9981  0BE6  2BE3               	goto	u3437
  9982  0BE7  3200               	nop2
  9983                           
  9984                           ;lcd.c: 164: LCD_Cmd(0x03);
  9985  0BE8  3003               	movlw	3
  9986  0BE9  3188  2000  318B   	fcall	_LCD_Cmd
  9987                           
  9988                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9989  0BEC  3009               	movlw	9
  9990  0BED  00F3               	movwf	??_LCD_Init
  9991  0BEE                     u3447:	
  9992  0BEE  0BF3               	decfsz	??_LCD_Init,f
  9993  0BEF  2BEE               	goto	u3447
  9994  0BF0  3200               	nop2	;nop
  9995                           
  9996                           ;lcd.c: 168: LCD_Cmd(0x03);
  9997  0BF1  3003               	movlw	3
  9998  0BF2  3188  2000  318B   	fcall	_LCD_Cmd
  9999                           
 10000                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10001  0BF5  3009               	movlw	9
 10002  0BF6  00F3               	movwf	??_LCD_Init
 10003  0BF7                     u3457:	
 10004  0BF7  0BF3               	decfsz	??_LCD_Init,f
 10005  0BF8  2BF7               	goto	u3457
 10006  0BF9  3200               	nop2	;nop
 10007                           
 10008                           ;lcd.c: 172: LCD_Cmd(0x02);
 10009  0BFA  3002               	movlw	2
 10010  0BFB  3188  2000  318B   	fcall	_LCD_Cmd
 10011                           
 10012                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10013  0BFE  3009               	movlw	9
 10014  0BFF  00F3               	movwf	??_LCD_Init
 10015  0C00                     u3467:	
 10016  0C00  0BF3               	decfsz	??_LCD_Init,f
 10017  0C01  2C00               	goto	u3467
 10018  0C02  3200               	nop2	;nop
 10019                           
 10020                           ;lcd.c: 176: LCD_Cmd(0x2);
 10021  0C03  3002               	movlw	2
 10022  0C04  3188  2000  318B   	fcall	_LCD_Cmd
 10023                           
 10024                           ;lcd.c: 178: LCD_Cmd(0x8);
 10025  0C07  3008               	movlw	8
 10026  0C08  3188  2000  318B   	fcall	_LCD_Cmd
 10027                           
 10028                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10029  0C0B  3009               	movlw	9
 10030  0C0C  00F3               	movwf	??_LCD_Init
 10031  0C0D                     u3477:	
 10032  0C0D  0BF3               	decfsz	??_LCD_Init,f
 10033  0C0E  2C0D               	goto	u3477
 10034  0C0F  3200               	nop2	;nop
 10035                           
 10036                           ;lcd.c: 182: LCD_Cmd(0x0);
 10037  0C10  3000               	movlw	0
 10038  0C11  3188  2000  318B   	fcall	_LCD_Cmd
 10039                           
 10040                           ;lcd.c: 184: LCD_Cmd(0x8);
 10041  0C14  3008               	movlw	8
 10042  0C15  3188  2000  318B   	fcall	_LCD_Cmd
 10043                           
 10044                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10045  0C18  3009               	movlw	9
 10046  0C19  00F3               	movwf	??_LCD_Init
 10047  0C1A                     u3487:	
 10048  0C1A  0BF3               	decfsz	??_LCD_Init,f
 10049  0C1B  2C1A               	goto	u3487
 10050  0C1C  3200               	nop2	;nop
 10051                           
 10052                           ;lcd.c: 188: LCD_Cmd(0x0);
 10053  0C1D  3000               	movlw	0
 10054  0C1E  3188  2000  318B   	fcall	_LCD_Cmd
 10055                           
 10056                           ;lcd.c: 190: LCD_Cmd(0x1);
 10057  0C21  3001               	movlw	1
 10058  0C22  3188  2000  318B   	fcall	_LCD_Cmd
 10059                           
 10060                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10061  0C25  30F9               	movlw	249
 10062  0C26  00F3               	movwf	??_LCD_Init
 10063  0C27                     u3497:	
 10064  0C27  3200               	nop2
 10065  0C28  0BF3               	decfsz	??_LCD_Init,f
 10066  0C29  2C27               	goto	u3497
 10067  0C2A  3200               	nop2	;nop
 10068  0C2B  3200               	nop2	;nop
 10069                           
 10070                           ;lcd.c: 194: LCD_Cmd(0x0);
 10071  0C2C  3000               	movlw	0
 10072  0C2D  3188  2000  318B   	fcall	_LCD_Cmd
 10073                           
 10074                           ;lcd.c: 196: LCD_Cmd(0x6);
 10075  0C30  3006               	movlw	6
 10076  0C31  3188  2000  318B   	fcall	_LCD_Cmd
 10077                           
 10078                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10079  0C34  3009               	movlw	9
 10080  0C35  00F3               	movwf	??_LCD_Init
 10081  0C36                     u3507:	
 10082  0C36  0BF3               	decfsz	??_LCD_Init,f
 10083  0C37  2C36               	goto	u3507
 10084  0C38  3200               	nop2	;nop
 10085                           
 10086                           ;lcd.c: 200: LCD_Cmd(0x0);
 10087  0C39  3000               	movlw	0
 10088  0C3A  3188  2000  318B   	fcall	_LCD_Cmd
 10089                           
 10090                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10091  0C3D  0875               	movf	LCD_Init@style,w
 10092  0C3E  380C               	iorlw	12
 10093  0C3F  3188  2000  318B   	fcall	_LCD_Cmd
 10094                           
 10095                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10096  0C42  3009               	movlw	9
 10097  0C43  00F3               	movwf	??_LCD_Init
 10098  0C44                     u3517:	
 10099  0C44  0BF3               	decfsz	??_LCD_Init,f
 10100  0C45  2C44               	goto	u3517
 10101  0C46  3200               	nop2	;nop
 10102  0C47  0008               	return
 10103  0C48                     __end_of_LCD_Init:	
 10104                           
 10105                           	psect	text26
 10106  172B                     __ptext26:	
 10107 ;; *************** function _LCD_Clear *****************
 10108 ;; Defined at:
 10109 ;;		line 75 in file "lcd.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;		None
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    2
 10130 ;; This function calls:
 10131 ;;		_LCD_Cmd
 10132 ;; This function is called by:
 10133 ;;		_SYSTEM_Initialize
 10134 ;;		_tempSetpoint
 10135 ;;		_readButtons
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           
 10140                           ;psect for function _LCD_Clear
 10141  172B                     _LCD_Clear:	
 10142                           
 10143                           ;lcd.c: 77: LCD_Cmd(0);
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10147  172B  3000               	movlw	0
 10148  172C  3188  2000  3197   	fcall	_LCD_Cmd
 10149                           
 10150                           ;lcd.c: 78: LCD_Cmd(1);
 10151  172F  3001               	movlw	1
 10152  1730  3188  2000         	fcall	_LCD_Cmd
 10153  1732  0008               	return
 10154  1733                     __end_of_LCD_Clear:	
 10155                           
 10156                           	psect	text27
 10157  08C8                     __ptext27:	
 10158 ;; *************** function _Init_PID *****************
 10159 ;; Defined at:
 10160 ;;		line 12 in file "PID_Lib.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;		None
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        0 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_SYSTEM_Initialize
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function _Init_PID
 10189  08C8                     _Init_PID:	
 10190                           
 10191                           ;PID_Lib.c: 14: PID_Kp = .5;
 10192                           
 10193                           ;incstack = 0
 10194                           ; Regs used in _Init_PID: [wreg+status,2]
 10195  08C8  3000               	movlw	0
 10196  08C9  0021               	movlb	1	; select bank1
 10197  08CA  00DA               	movwf	_PID_Kp^(0+128)
 10198  08CB  3000               	movlw	0
 10199  08CC  00DB               	movwf	(_PID_Kp+1)^(0+128)
 10200  08CD  303F               	movlw	63
 10201  08CE  00DC               	movwf	(_PID_Kp+2)^(0+128)
 10202                           
 10203                           ;PID_Lib.c: 15: PID_Ki = .75;
 10204  08CF  3000               	movlw	0
 10205  08D0  0022               	movlb	2	; select bank2
 10206  08D1  00C5               	movwf	_PID_Ki^(0+256)
 10207  08D2  3040               	movlw	64
 10208  08D3  00C6               	movwf	(_PID_Ki+1)^(0+256)
 10209  08D4  303F               	movlw	63
 10210  08D5  00C7               	movwf	(_PID_Ki+2)^(0+256)
 10211                           
 10212                           ;PID_Lib.c: 16: PID_Kd = 200;
 10213  08D6  3000               	movlw	0
 10214  08D7  00C2               	movwf	_PID_Kd^(0+256)
 10215  08D8  3048               	movlw	72
 10216  08D9  00C3               	movwf	(_PID_Kd+1)^(0+256)
 10217  08DA  3043               	movlw	67
 10218  08DB  00C4               	movwf	(_PID_Kd+2)^(0+256)
 10219                           
 10220                           ;PID_Lib.c: 17: PID_MinOutput = 0;
 10221  08DC  0021               	movlb	1	; select bank1
 10222  08DD  01E3               	clrf	_PID_MinOutput^(0+128)
 10223  08DE  01E4               	clrf	(_PID_MinOutput+1)^(0+128)
 10224                           
 10225                           ;PID_Lib.c: 18: PID_MaxOutput = 1023;
 10226  08DF  30FF               	movlw	255
 10227  08E0  00EC               	movwf	_PID_MaxOutput^(0+128)
 10228  08E1  3003               	movlw	3
 10229  08E2  00ED               	movwf	(_PID_MaxOutput^(0+128)+1)
 10230                           
 10231                           ;PID_Lib.c: 19: PID_Integrated = 0;
 10232  08E3  3000               	movlw	0
 10233  08E4  00D7               	movwf	_PID_Integrated^(0+128)
 10234  08E5  3000               	movlw	0
 10235  08E6  00D8               	movwf	(_PID_Integrated+1)^(0+128)
 10236  08E7  3000               	movlw	0
 10237  08E8  00D9               	movwf	(_PID_Integrated+2)^(0+128)
 10238                           
 10239                           ;PID_Lib.c: 20: PID_Prev_Input = 0;
 10240  08E9  3000               	movlw	0
 10241  08EA  0022               	movlb	2	; select bank2
 10242  08EB  00C8               	movwf	_PID_Prev_Input^(0+256)
 10243  08EC  3000               	movlw	0
 10244  08ED  00C9               	movwf	(_PID_Prev_Input+1)^(0+256)
 10245  08EE  3000               	movlw	0
 10246  08EF  00CA               	movwf	(_PID_Prev_Input+2)^(0+256)
 10247  08F0  0008               	return
 10248  08F1                     __end_of_Init_PID:	
 10249                           
 10250                           	psect	text28
 10251  08A2                     __ptext28:	
 10252 ;; *************** function _InitCustomChars *****************
 10253 ;; Defined at:
 10254 ;;		line 29 in file "lcd.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  i               1    6[COMMON] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      void 
 10261 ;; Registers used:
 10262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;Total ram usage:        2 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    2
 10275 ;; This function calls:
 10276 ;;		_LCD_Cmd
 10277 ;;		_LCD_Write_Char
 10278 ;; This function is called by:
 10279 ;;		_SYSTEM_Initialize
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           
 10284                           ;psect for function _InitCustomChars
 10285  08A2                     _InitCustomChars:	
 10286                           
 10287                           ;lcd.c: 31: uint8_t i;
 10288                           ;lcd.c: 32: LCD_Cmd(0x04);
 10289                           
 10290                           ;incstack = 0
 10291                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10292  08A2  3004               	movlw	4
 10293  08A3  3188  2000  3188   	fcall	_LCD_Cmd
 10294                           
 10295                           ;lcd.c: 33: LCD_Cmd(0x00);
 10296  08A6  3000               	movlw	0
 10297  08A7  3188  2000  3188   	fcall	_LCD_Cmd
 10298                           
 10299                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10300  08AA  01F6               	clrf	InitCustomChars@i
 10301  08AB  3018               	movlw	24
 10302  08AC  0276               	subwf	InitCustomChars@i,w
 10303  08AD  1803               	btfsc	3,0
 10304  08AE  28C0               	goto	l2566
 10305  08AF                     l2560:	
 10306                           
 10307                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10308  08AF  0876               	movf	InitCustomChars@i,w
 10309  08B0  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10310  08B1  0086               	movwf	6
 10311  08B2  3001               	movlw	1	; select bank2/3
 10312  08B3  0087               	movwf	7
 10313  08B4  0801               	movf	1,w
 10314  08B5  3188  20F1  3188   	fcall	_LCD_Write_Char
 10315  08B8  3001               	movlw	1
 10316  08B9  00F5               	movwf	??_InitCustomChars
 10317  08BA  0875               	movf	??_InitCustomChars,w
 10318  08BB  07F6               	addwf	InitCustomChars@i,f
 10319  08BC  3018               	movlw	24
 10320  08BD  0276               	subwf	InitCustomChars@i,w
 10321  08BE  1C03               	skipc
 10322  08BF  28AF               	goto	l2560
 10323  08C0                     l2566:	
 10324                           
 10325                           ;lcd.c: 36: LCD_Cmd(0);
 10326  08C0  3000               	movlw	0
 10327  08C1  3188  2000  3188   	fcall	_LCD_Cmd
 10328                           
 10329                           ;lcd.c: 37: LCD_Cmd(2);
 10330  08C4  3002               	movlw	2
 10331  08C5  3188  2000         	fcall	_LCD_Cmd
 10332  08C7  0008               	return
 10333  08C8                     __end_of_InitCustomChars:	
 10334                           
 10335                           	psect	text29
 10336  08F1                     __ptext29:	
 10337 ;; *************** function _LCD_Write_Char *****************
 10338 ;; Defined at:
 10339 ;;		line 223 in file "lcd.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  a               1    wreg     const unsigned char 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  a               1    4[COMMON] const unsigned char 
 10344 ;;  y               1    3[COMMON] unsigned char 
 10345 ;;  temp            1    2[COMMON] unsigned char 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, status,2, status,0, pclath, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;Total ram usage:        4 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; Hardware stack levels required when called:    1
 10362 ;; This function calls:
 10363 ;;		_LCD_Port
 10364 ;; This function is called by:
 10365 ;;		_InitCustomChars
 10366 ;;		_LCD_Write_String
 10367 ;;		_LCD_Write_Int
 10368 ;;		_tempSetpoint
 10369 ;;		_readButtons
 10370 ;;		_main
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           
 10375                           ;psect for function _LCD_Write_Char
 10376  08F1                     _LCD_Write_Char:	
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10380                           ;LCD_Write_Char@a stored from wreg
 10381  08F1  00F4               	movwf	LCD_Write_Char@a
 10382                           
 10383                           ;lcd.c: 225: char temp,y;
 10384                           ;lcd.c: 226: temp = a&0x0F;
 10385  08F2  0874               	movf	LCD_Write_Char@a,w
 10386  08F3  390F               	andlw	15
 10387  08F4  00F1               	movwf	??_LCD_Write_Char
 10388  08F5  0871               	movf	??_LCD_Write_Char,w
 10389  08F6  00F2               	movwf	LCD_Write_Char@temp
 10390                           
 10391                           ;lcd.c: 227: y = a&0xF0;
 10392  08F7  0874               	movf	LCD_Write_Char@a,w
 10393  08F8  39F0               	andlw	240
 10394  08F9  00F1               	movwf	??_LCD_Write_Char
 10395  08FA  0871               	movf	??_LCD_Write_Char,w
 10396  08FB  00F3               	movwf	LCD_Write_Char@y
 10397                           
 10398                           ;lcd.c: 228: RB0 = 1;
 10399  08FC  0020               	movlb	0	; select bank0
 10400  08FD  140D               	bsf	13,0	;volatile
 10401                           
 10402                           ;lcd.c: 229: LCD_Port(y>>4);
 10403  08FE  0873               	movf	LCD_Write_Char@y,w
 10404  08FF  00F1               	movwf	??_LCD_Write_Char
 10405  0900  3004               	movlw	4
 10406  0901                     u1725:	
 10407  0901  36F1               	lsrf	??_LCD_Write_Char,f
 10408  0902  0B89               	decfsz	9,f
 10409  0903  2901               	goto	u1725
 10410  0904  0871               	movf	??_LCD_Write_Char,w
 10411  0905  3197  27B5  3188   	fcall	_LCD_Port
 10412                           
 10413                           ;lcd.c: 230: RB1 = 1;
 10414  0908  0020               	movlb	0	; select bank0
 10415  0909  148D               	bsf	13,1	;volatile
 10416                           
 10417                           ;lcd.c: 231: RB1 = 0;
 10418  090A  108D               	bcf	13,1	;volatile
 10419                           
 10420                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10421  090B  3003               	movlw	3
 10422  090C  00F1               	movwf	??_LCD_Write_Char
 10423  090D                     u3527:	
 10424  090D  0BF1               	decfsz	??_LCD_Write_Char,f
 10425  090E  290D               	goto	u3527
 10426                           
 10427                           ;lcd.c: 233: LCD_Port(temp);
 10428  090F  0872               	movf	LCD_Write_Char@temp,w
 10429  0910  3197  27B5  3188   	fcall	_LCD_Port
 10430                           
 10431                           ;lcd.c: 234: RB1 = 1;
 10432  0913  0020               	movlb	0	; select bank0
 10433  0914  148D               	bsf	13,1	;volatile
 10434                           
 10435                           ;lcd.c: 235: RB1 = 0;
 10436  0915  108D               	bcf	13,1	;volatile
 10437                           
 10438                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10439  0916  3003               	movlw	3
 10440  0917  00F1               	movwf	??_LCD_Write_Char
 10441  0918                     u3537:	
 10442  0918  0BF1               	decfsz	??_LCD_Write_Char,f
 10443  0919  2918               	goto	u3537
 10444  091A  0008               	return
 10445  091B                     __end_of_LCD_Write_Char:	
 10446                           
 10447                           	psect	text30
 10448  0800                     __ptext30:	
 10449 ;; *************** function _LCD_Cmd *****************
 10450 ;; Defined at:
 10451 ;;		line 65 in file "lcd.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  a               1    wreg     unsigned char 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  a               1    2[COMMON] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0, pclath, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;Total ram usage:        2 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    1
 10472 ;; This function calls:
 10473 ;;		_LCD_Port
 10474 ;; This function is called by:
 10475 ;;		_InitCustomChars
 10476 ;;		_LCD_Clear
 10477 ;;		_LCD_Set_Cursor
 10478 ;;		_LCD_Init
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           
 10483                           ;psect for function _LCD_Cmd
 10484  0800                     _LCD_Cmd:	
 10485                           
 10486                           ;incstack = 0
 10487                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10488                           ;LCD_Cmd@a stored from wreg
 10489  0800  00F2               	movwf	LCD_Cmd@a
 10490                           
 10491                           ;lcd.c: 67: RB0 = 0;
 10492  0801  0020               	movlb	0	; select bank0
 10493  0802  100D               	bcf	13,0	;volatile
 10494                           
 10495                           ;lcd.c: 68: LCD_Port(a);
 10496  0803  0872               	movf	LCD_Cmd@a,w
 10497  0804  3197  27B5  3188   	fcall	_LCD_Port
 10498                           
 10499                           ;lcd.c: 69: RB1 = 1;
 10500  0807  0020               	movlb	0	; select bank0
 10501  0808  148D               	bsf	13,1	;volatile
 10502                           
 10503                           ;lcd.c: 70: RB1 = 0;
 10504  0809  108D               	bcf	13,1	;volatile
 10505                           
 10506                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10507  080A  30F9               	movlw	249
 10508  080B  00F1               	movwf	??_LCD_Cmd
 10509  080C                     u3547:	
 10510  080C  0000               	nop
 10511  080D  0BF1               	decfsz	??_LCD_Cmd,f
 10512  080E  280C               	goto	u3547
 10513  080F  3200               	nop2	;nop
 10514  0810  0000               	nop
 10515  0811  0008               	return
 10516  0812                     __end_of_LCD_Cmd:	
 10517                           
 10518                           	psect	text31
 10519  17B5                     __ptext31:	
 10520 ;; *************** function _LCD_Port *****************
 10521 ;; Defined at:
 10522 ;;		line 41 in file "lcd.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  a               1    wreg     unsigned char 
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;  a               1    0[COMMON] unsigned char 
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		wreg
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:        1 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_LCD_Cmd
 10546 ;;		_LCD_Init
 10547 ;;		_LCD_Write_Char
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           
 10552                           ;psect for function _LCD_Port
 10553  17B5                     _LCD_Port:	
 10554                           
 10555                           ;incstack = 0
 10556                           ; Regs used in _LCD_Port: [wreg]
 10557                           ;LCD_Port@a stored from wreg
 10558  17B5  00F0               	movwf	LCD_Port@a
 10559                           
 10560                           ;lcd.c: 43: if(a & 1)
 10561  17B6  1C70               	btfss	LCD_Port@a,0
 10562  17B7  2FBB               	goto	l107
 10563                           
 10564                           ;lcd.c: 44: RB2 = 1;
 10565  17B8  0020               	movlb	0	; select bank0
 10566  17B9  150D               	bsf	13,2	;volatile
 10567  17BA  2FBD               	goto	l2044
 10568  17BB                     l107:	
 10569                           
 10570                           ;lcd.c: 45: else
 10571                           ;lcd.c: 46: RB2 = 0;
 10572  17BB  0020               	movlb	0	; select bank0
 10573  17BC  110D               	bcf	13,2	;volatile
 10574  17BD                     l2044:	
 10575                           
 10576                           ;lcd.c: 48: if(a & 2)
 10577  17BD  1CF0               	btfss	LCD_Port@a,1
 10578  17BE  2FC1               	goto	l109
 10579                           
 10580                           ;lcd.c: 49: RB3 = 1;
 10581  17BF  158D               	bsf	13,3	;volatile
 10582  17C0  2FC2               	goto	l2048
 10583  17C1                     l109:	
 10584                           
 10585                           ;lcd.c: 50: else
 10586                           ;lcd.c: 51: RB3 = 0;
 10587  17C1  118D               	bcf	13,3	;volatile
 10588  17C2                     l2048:	
 10589                           
 10590                           ;lcd.c: 53: if(a & 4)
 10591  17C2  1D70               	btfss	LCD_Port@a,2
 10592  17C3  2FC6               	goto	l111
 10593                           
 10594                           ;lcd.c: 54: RB4 = 1;
 10595  17C4  160D               	bsf	13,4	;volatile
 10596  17C5  2FC7               	goto	l2052
 10597  17C6                     l111:	
 10598                           
 10599                           ;lcd.c: 55: else
 10600                           ;lcd.c: 56: RB4 = 0;
 10601  17C6  120D               	bcf	13,4	;volatile
 10602  17C7                     l2052:	
 10603                           
 10604                           ;lcd.c: 58: if(a & 8)
 10605  17C7  1DF0               	btfss	LCD_Port@a,3
 10606  17C8  2FCB               	goto	l113
 10607                           
 10608                           ;lcd.c: 59: RB5 = 1;
 10609  17C9  168D               	bsf	13,5	;volatile
 10610  17CA  0008               	return
 10611  17CB                     l113:	
 10612                           
 10613                           ;lcd.c: 60: else
 10614                           ;lcd.c: 61: RB5 = 0;
 10615  17CB  128D               	bcf	13,5	;volatile
 10616  17CC  0008               	return
 10617  17CD                     __end_of_LCD_Port:	
 10618                           
 10619                           	psect	text32
 10620  17CD                     __ptext32:	
 10621 ;; *************** function _ADCC_Initialize *****************
 10622 ;; Defined at:
 10623 ;;		line 5 in file "adcc.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, status,2
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_SYSTEM_Initialize
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function _ADCC_Initialize
 10652  17CD                     _ADCC_Initialize:	
 10653                           
 10654                           ;adcc.c: 8: ADCON1 = 0x00;
 10655                           
 10656                           ;incstack = 0
 10657                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10658  17CD  0021               	movlb	1	; select bank1
 10659  17CE  0194               	clrf	20	;volatile
 10660                           
 10661                           ;adcc.c: 10: ADCON2 = 0x00;
 10662  17CF  0195               	clrf	21	;volatile
 10663                           
 10664                           ;adcc.c: 12: ADCON3 = 0x00;
 10665  17D0  0196               	clrf	22	;volatile
 10666                           
 10667                           ;adcc.c: 14: ADACT = 0x00;
 10668  17D1  0199               	clrf	25	;volatile
 10669                           
 10670                           ;adcc.c: 16: ADSTAT = 0x00;
 10671  17D2  0197               	clrf	23	;volatile
 10672                           
 10673                           ;adcc.c: 18: ADCLK = 0x0F;
 10674  17D3  300F               	movlw	15
 10675  17D4  0098               	movwf	24	;volatile
 10676                           
 10677                           ;adcc.c: 21: ADREF = 0x00;
 10678  17D5  019A               	clrf	26	;volatile
 10679                           
 10680                           ;adcc.c: 23: ADCAP = 0x00;
 10681  17D6  019B               	clrf	27	;volatile
 10682                           
 10683                           ;adcc.c: 25: ADPRE = 0x00;
 10684  17D7  019C               	clrf	28	;volatile
 10685                           
 10686                           ;adcc.c: 27: ADACQ = 0x00;
 10687  17D8  019D               	clrf	29	;volatile
 10688                           
 10689                           ;adcc.c: 29: ADPCH = 0x00;
 10690  17D9  019E               	clrf	30	;volatile
 10691                           
 10692                           ;adcc.c: 31: ADRPT = 0x00;
 10693  17DA  0022               	movlb	2	; select bank2
 10694  17DB  018D               	clrf	13	;volatile
 10695                           
 10696                           ;adcc.c: 33: ADLTHL = 0x00;
 10697  17DC  018E               	clrf	14	;volatile
 10698                           
 10699                           ;adcc.c: 35: ADLTHH = 0x00;
 10700  17DD  018F               	clrf	15	;volatile
 10701                           
 10702                           ;adcc.c: 37: ADUTHL = 0x00;
 10703  17DE  0190               	clrf	16	;volatile
 10704                           
 10705                           ;adcc.c: 39: ADUTHH = 0x00;
 10706  17DF  0191               	clrf	17	;volatile
 10707                           
 10708                           ;adcc.c: 41: ADSTPTL = 0x00;
 10709  17E0  0192               	clrf	18	;volatile
 10710                           
 10711                           ;adcc.c: 43: ADSTPTH = 0x00;
 10712  17E1  0193               	clrf	19	;volatile
 10713                           
 10714                           ;adcc.c: 46: ADCON0 = 0x84;
 10715  17E2  3084               	movlw	132
 10716  17E3  0021               	movlb	1	; select bank1
 10717  17E4  0093               	movwf	19	;volatile
 10718  17E5  0008               	return
 10719  17E6                     __end_of_ADCC_Initialize:	
 10720                           
 10721                           	psect	text33
 10722  179F                     __ptext33:	
 10723 ;; *************** function _PWM6_LoadDutyValue *****************
 10724 ;; Defined at:
 10725 ;;		line 15 in file "pwm6.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  dutyValue       2    0[COMMON] unsigned int 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      void 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;Total ram usage:        4 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; This function calls:
 10746 ;;		Nothing
 10747 ;; This function is called by:
 10748 ;;		_main
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           
 10753                           ;psect for function _PWM6_LoadDutyValue
 10754  179F                     _PWM6_LoadDutyValue:	
 10755                           
 10756                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10757                           
 10758                           ;incstack = 0
 10759                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10760  179F  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10761  17A0  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10762  17A1  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10763  17A2  00F2               	movwf	??_PWM6_LoadDutyValue
 10764  17A3  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10765  17A4  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10766  17A5  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10767  17A6  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10768  17A7  0872               	movf	??_PWM6_LoadDutyValue,w
 10769  17A8  0027               	movlb	7	; select bank7
 10770  17A9  008D               	movwf	13	;volatile
 10771                           
 10772                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10773  17AA  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10774  17AB  3903               	andlw	3
 10775  17AC  00F2               	movwf	??_PWM6_LoadDutyValue
 10776  17AD  3005               	movlw	5
 10777  17AE                     u2765:	
 10778  17AE  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10779  17AF  3EFF               	addlw	-1
 10780  17B0  1D03               	skipz
 10781  17B1  2FAE               	goto	u2765
 10782  17B2  3572               	lslf	??_PWM6_LoadDutyValue,w
 10783  17B3  008C               	movwf	12	;volatile
 10784  17B4  0008               	return
 10785  17B5                     __end_of_PWM6_LoadDutyValue:	
 10786                           
 10787                           	psect	text34
 10788  027A                     __ptext34:	
 10789 ;; *************** function _PID_Calculate *****************
 10790 ;; Defined at:
 10791 ;;		line 25 in file "PID_Lib.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  setpoint        2   38[BANK0 ] const int 
 10794 ;;  temp            3   40[BANK0 ] float 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  3   38[BANK0 ] float 
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        8 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    2
 10813 ;; This function calls:
 10814 ;;		___awtoft
 10815 ;;		___ftadd
 10816 ;;		___ftge
 10817 ;;		___ftmul
 10818 ;;		___ftneg
 10819 ;; This function is called by:
 10820 ;;		_main
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function _PID_Calculate
 10826  027A                     _PID_Calculate:	
 10827                           
 10828                           ;PID_Lib.c: 30: Err = setpoint - temp;
 10829                           
 10830                           ;incstack = 0
 10831                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10832  027A  0020               	movlb	0	; select bank0
 10833  027B  0848               	movf	PID_Calculate@temp,w
 10834  027C  00F0               	movwf	___ftneg@f1
 10835  027D  0849               	movf	PID_Calculate@temp+1,w
 10836  027E  00F1               	movwf	___ftneg@f1+1
 10837  027F  084A               	movf	PID_Calculate@temp+2,w
 10838  0280  00F2               	movwf	___ftneg@f1+2
 10839  0281  3197  2723  3182   	fcall	___ftneg
 10840  0284  0870               	movf	?___ftneg,w
 10841  0285  0020               	movlb	0	; select bank0
 10842  0286  00B0               	movwf	___ftadd@f1
 10843  0287  0871               	movf	?___ftneg+1,w
 10844  0288  00B1               	movwf	___ftadd@f1+1
 10845  0289  0872               	movf	?___ftneg+2,w
 10846  028A  00B2               	movwf	___ftadd@f1+2
 10847  028B  0847               	movf	PID_Calculate@setpoint+1,w
 10848  028C  00F9               	movwf	___awtoft@c+1
 10849  028D  0846               	movf	PID_Calculate@setpoint,w
 10850  028E  00F8               	movwf	___awtoft@c
 10851  028F  3188  2082  3182   	fcall	___awtoft
 10852  0292  0878               	movf	?___awtoft,w
 10853  0293  0020               	movlb	0	; select bank0
 10854  0294  00B3               	movwf	___ftadd@f2
 10855  0295  0879               	movf	?___awtoft+1,w
 10856  0296  00B4               	movwf	___ftadd@f2+1
 10857  0297  087A               	movf	?___awtoft+2,w
 10858  0298  00B5               	movwf	___ftadd@f2+2
 10859  0299  3181  2184  3182   	fcall	___ftadd
 10860  029C  0020               	movlb	0	; select bank0
 10861  029D  0830               	movf	?___ftadd,w
 10862  029E  0021               	movlb	1	; select bank1
 10863  029F  00D1               	movwf	_Err^(0+128)
 10864  02A0  0020               	movlb	0	; select bank0
 10865  02A1  0831               	movf	?___ftadd+1,w
 10866  02A2  0021               	movlb	1	; select bank1
 10867  02A3  00D2               	movwf	(_Err+1)^(0+128)
 10868  02A4  0020               	movlb	0	; select bank0
 10869  02A5  0832               	movf	?___ftadd+2,w
 10870  02A6  0021               	movlb	1	; select bank1
 10871  02A7  00D3               	movwf	(_Err+2)^(0+128)
 10872                           
 10873                           ;PID_Lib.c: 32: ErrValue = Err * PID_Kp;
 10874  02A8  085A               	movf	_PID_Kp^(0+128),w
 10875  02A9  0020               	movlb	0	; select bank0
 10876  02AA  00A0               	movwf	___ftmul@f1
 10877  02AB  0021               	movlb	1	; select bank1
 10878  02AC  085B               	movf	(_PID_Kp+1)^(0+128),w
 10879  02AD  0020               	movlb	0	; select bank0
 10880  02AE  00A1               	movwf	___ftmul@f1+1
 10881  02AF  0021               	movlb	1	; select bank1
 10882  02B0  085C               	movf	(_PID_Kp+2)^(0+128),w
 10883  02B1  0020               	movlb	0	; select bank0
 10884  02B2  00A2               	movwf	___ftmul@f1+2
 10885  02B3  0021               	movlb	1	; select bank1
 10886  02B4  0851               	movf	_Err^(0+128),w
 10887  02B5  0020               	movlb	0	; select bank0
 10888  02B6  00A3               	movwf	___ftmul@f2
 10889  02B7  0021               	movlb	1	; select bank1
 10890  02B8  0852               	movf	(_Err+1)^(0+128),w
 10891  02B9  0020               	movlb	0	; select bank0
 10892  02BA  00A4               	movwf	___ftmul@f2+1
 10893  02BB  0021               	movlb	1	; select bank1
 10894  02BC  0853               	movf	(_Err+2)^(0+128),w
 10895  02BD  0020               	movlb	0	; select bank0
 10896  02BE  00A5               	movwf	___ftmul@f2+2
 10897  02BF  3180  2005  3182   	fcall	___ftmul
 10898  02C2  0020               	movlb	0	; select bank0
 10899  02C3  0820               	movf	?___ftmul,w
 10900  02C4  0021               	movlb	1	; select bank1
 10901  02C5  00D4               	movwf	_ErrValue^(0+128)
 10902  02C6  0020               	movlb	0	; select bank0
 10903  02C7  0821               	movf	?___ftmul+1,w
 10904  02C8  0021               	movlb	1	; select bank1
 10905  02C9  00D5               	movwf	(_ErrValue+1)^(0+128)
 10906  02CA  0020               	movlb	0	; select bank0
 10907  02CB  0822               	movf	?___ftmul+2,w
 10908  02CC  0021               	movlb	1	; select bank1
 10909  02CD  00D6               	movwf	(_ErrValue+2)^(0+128)
 10910                           
 10911                           ;PID_Lib.c: 35: PID_Integrated = PID_Integrated + (ErrValue * PID_Ki);
 10912  02CE  0857               	movf	_PID_Integrated^(0+128),w
 10913  02CF  0020               	movlb	0	; select bank0
 10914  02D0  00B0               	movwf	___ftadd@f1
 10915  02D1  0021               	movlb	1	; select bank1
 10916  02D2  0858               	movf	(_PID_Integrated+1)^(0+128),w
 10917  02D3  0020               	movlb	0	; select bank0
 10918  02D4  00B1               	movwf	___ftadd@f1+1
 10919  02D5  0021               	movlb	1	; select bank1
 10920  02D6  0859               	movf	(_PID_Integrated+2)^(0+128),w
 10921  02D7  0020               	movlb	0	; select bank0
 10922  02D8  00B2               	movwf	___ftadd@f1+2
 10923  02D9  0022               	movlb	2	; select bank2
 10924  02DA  0845               	movf	_PID_Ki^(0+256),w
 10925  02DB  0020               	movlb	0	; select bank0
 10926  02DC  00A0               	movwf	___ftmul@f1
 10927  02DD  0022               	movlb	2	; select bank2
 10928  02DE  0846               	movf	(_PID_Ki+1)^(0+256),w
 10929  02DF  0020               	movlb	0	; select bank0
 10930  02E0  00A1               	movwf	___ftmul@f1+1
 10931  02E1  0022               	movlb	2	; select bank2
 10932  02E2  0847               	movf	(_PID_Ki+2)^(0+256),w
 10933  02E3  0020               	movlb	0	; select bank0
 10934  02E4  00A2               	movwf	___ftmul@f1+2
 10935  02E5  0021               	movlb	1	; select bank1
 10936  02E6  0854               	movf	_ErrValue^(0+128),w
 10937  02E7  0020               	movlb	0	; select bank0
 10938  02E8  00A3               	movwf	___ftmul@f2
 10939  02E9  0021               	movlb	1	; select bank1
 10940  02EA  0855               	movf	(_ErrValue+1)^(0+128),w
 10941  02EB  0020               	movlb	0	; select bank0
 10942  02EC  00A4               	movwf	___ftmul@f2+1
 10943  02ED  0021               	movlb	1	; select bank1
 10944  02EE  0856               	movf	(_ErrValue+2)^(0+128),w
 10945  02EF  0020               	movlb	0	; select bank0
 10946  02F0  00A5               	movwf	___ftmul@f2+2
 10947  02F1  3180  2005  3182   	fcall	___ftmul
 10948  02F4  0020               	movlb	0	; select bank0
 10949  02F5  0820               	movf	?___ftmul,w
 10950  02F6  00B3               	movwf	___ftadd@f2
 10951  02F7  0821               	movf	?___ftmul+1,w
 10952  02F8  00B4               	movwf	___ftadd@f2+1
 10953  02F9  0822               	movf	?___ftmul+2,w
 10954  02FA  00B5               	movwf	___ftadd@f2+2
 10955  02FB  3181  2184  3182   	fcall	___ftadd
 10956  02FE  0020               	movlb	0	; select bank0
 10957  02FF  0830               	movf	?___ftadd,w
 10958  0300  0021               	movlb	1	; select bank1
 10959  0301  00D7               	movwf	_PID_Integrated^(0+128)
 10960  0302  0020               	movlb	0	; select bank0
 10961  0303  0831               	movf	?___ftadd+1,w
 10962  0304  0021               	movlb	1	; select bank1
 10963  0305  00D8               	movwf	(_PID_Integrated+1)^(0+128)
 10964  0306  0020               	movlb	0	; select bank0
 10965  0307  0832               	movf	?___ftadd+2,w
 10966  0308  0021               	movlb	1	; select bank1
 10967  0309  00D9               	movwf	(_PID_Integrated+2)^(0+128)
 10968                           
 10969                           ;PID_Lib.c: 37: if (PID_Integrated < PID_MinOutput)
 10970  030A  0857               	movf	_PID_Integrated^(0+128),w
 10971  030B  0020               	movlb	0	; select bank0
 10972  030C  00BD               	movwf	___ftge@ff1
 10973  030D  0021               	movlb	1	; select bank1
 10974  030E  0858               	movf	(_PID_Integrated+1)^(0+128),w
 10975  030F  0020               	movlb	0	; select bank0
 10976  0310  00BE               	movwf	___ftge@ff1+1
 10977  0311  0021               	movlb	1	; select bank1
 10978  0312  0859               	movf	(_PID_Integrated+2)^(0+128),w
 10979  0313  0020               	movlb	0	; select bank0
 10980  0314  00BF               	movwf	___ftge@ff1+2
 10981  0315  0021               	movlb	1	; select bank1
 10982  0316  0864               	movf	(_PID_MinOutput+1)^(0+128),w
 10983  0317  00F9               	movwf	___awtoft@c+1
 10984  0318  0863               	movf	_PID_MinOutput^(0+128),w
 10985  0319  00F8               	movwf	___awtoft@c
 10986  031A  3188  2082  3182   	fcall	___awtoft
 10987  031D  0878               	movf	?___awtoft,w
 10988  031E  0020               	movlb	0	; select bank0
 10989  031F  00C0               	movwf	___ftge@ff2
 10990  0320  0879               	movf	?___awtoft+1,w
 10991  0321  00C1               	movwf	___ftge@ff2+1
 10992  0322  087A               	movf	?___awtoft+2,w
 10993  0323  00C2               	movwf	___ftge@ff2+2
 10994  0324  3189  21BC  3182   	fcall	___ftge
 10995  0327  1803               	btfsc	3,0
 10996  0328  2B38               	goto	l349
 10997                           
 10998                           ;PID_Lib.c: 38: {
 10999                           ;PID_Lib.c: 39: PID_Integrated = PID_MinOutput;
 11000  0329  0021               	movlb	1	; select bank1
 11001  032A  0864               	movf	(_PID_MinOutput+1)^(0+128),w
 11002  032B  00F9               	movwf	___awtoft@c+1
 11003  032C  0863               	movf	_PID_MinOutput^(0+128),w
 11004  032D  00F8               	movwf	___awtoft@c
 11005  032E  3188  2082  3182   	fcall	___awtoft
 11006  0331  0878               	movf	?___awtoft,w
 11007  0332  0021               	movlb	1	; select bank1
 11008  0333  00D7               	movwf	_PID_Integrated^(0+128)
 11009  0334  0879               	movf	?___awtoft+1,w
 11010  0335  00D8               	movwf	(_PID_Integrated+1)^(0+128)
 11011  0336  087A               	movf	?___awtoft+2,w
 11012  0337  00D9               	movwf	(_PID_Integrated+2)^(0+128)
 11013  0338                     l349:	
 11014                           
 11015                           ;PID_Lib.c: 40: }
 11016                           ;PID_Lib.c: 42: if (PID_Integrated > PID_MaxOutput)
 11017  0338  0021               	movlb	1	; select bank1
 11018  0339  086D               	movf	(_PID_MaxOutput+1)^(0+128),w
 11019  033A  00F9               	movwf	___awtoft@c+1
 11020  033B  086C               	movf	_PID_MaxOutput^(0+128),w
 11021  033C  00F8               	movwf	___awtoft@c
 11022  033D  3188  2082  3182   	fcall	___awtoft
 11023  0340  0878               	movf	?___awtoft,w
 11024  0341  0020               	movlb	0	; select bank0
 11025  0342  00BD               	movwf	___ftge@ff1
 11026  0343  0879               	movf	?___awtoft+1,w
 11027  0344  00BE               	movwf	___ftge@ff1+1
 11028  0345  087A               	movf	?___awtoft+2,w
 11029  0346  00BF               	movwf	___ftge@ff1+2
 11030  0347  0021               	movlb	1	; select bank1
 11031  0348  0857               	movf	_PID_Integrated^(0+128),w
 11032  0349  0020               	movlb	0	; select bank0
 11033  034A  00C0               	movwf	___ftge@ff2
 11034  034B  0021               	movlb	1	; select bank1
 11035  034C  0858               	movf	(_PID_Integrated+1)^(0+128),w
 11036  034D  0020               	movlb	0	; select bank0
 11037  034E  00C1               	movwf	___ftge@ff2+1
 11038  034F  0021               	movlb	1	; select bank1
 11039  0350  0859               	movf	(_PID_Integrated+2)^(0+128),w
 11040  0351  0020               	movlb	0	; select bank0
 11041  0352  00C2               	movwf	___ftge@ff2+2
 11042  0353  3189  21BC  3182   	fcall	___ftge
 11043  0356  1803               	btfsc	3,0
 11044  0357  2B67               	goto	l350
 11045                           
 11046                           ;PID_Lib.c: 43: {
 11047                           ;PID_Lib.c: 44: PID_Integrated = PID_MaxOutput;
 11048  0358  0021               	movlb	1	; select bank1
 11049  0359  086D               	movf	(_PID_MaxOutput+1)^(0+128),w
 11050  035A  00F9               	movwf	___awtoft@c+1
 11051  035B  086C               	movf	_PID_MaxOutput^(0+128),w
 11052  035C  00F8               	movwf	___awtoft@c
 11053  035D  3188  2082  3182   	fcall	___awtoft
 11054  0360  0878               	movf	?___awtoft,w
 11055  0361  0021               	movlb	1	; select bank1
 11056  0362  00D7               	movwf	_PID_Integrated^(0+128)
 11057  0363  0879               	movf	?___awtoft+1,w
 11058  0364  00D8               	movwf	(_PID_Integrated+1)^(0+128)
 11059  0365  087A               	movf	?___awtoft+2,w
 11060  0366  00D9               	movwf	(_PID_Integrated+2)^(0+128)
 11061  0367                     l350:	
 11062                           
 11063                           ;PID_Lib.c: 45: }
 11064                           ;PID_Lib.c: 57: DerivativeValue=(Err-PID_Prev_Error)*PID_Kd;
 11065  0367  0022               	movlb	2	; select bank2
 11066  0368  0842               	movf	_PID_Kd^(0+256),w
 11067  0369  0020               	movlb	0	; select bank0
 11068  036A  00A0               	movwf	___ftmul@f1
 11069  036B  0022               	movlb	2	; select bank2
 11070  036C  0843               	movf	(_PID_Kd+1)^(0+256),w
 11071  036D  0020               	movlb	0	; select bank0
 11072  036E  00A1               	movwf	___ftmul@f1+1
 11073  036F  0022               	movlb	2	; select bank2
 11074  0370  0844               	movf	(_PID_Kd+2)^(0+256),w
 11075  0371  0020               	movlb	0	; select bank0
 11076  0372  00A2               	movwf	___ftmul@f1+2
 11077  0373  0021               	movlb	1	; select bank1
 11078  0374  0851               	movf	_Err^(0+128),w
 11079  0375  0020               	movlb	0	; select bank0
 11080  0376  00B0               	movwf	___ftadd@f1
 11081  0377  0021               	movlb	1	; select bank1
 11082  0378  0852               	movf	(_Err+1)^(0+128),w
 11083  0379  0020               	movlb	0	; select bank0
 11084  037A  00B1               	movwf	___ftadd@f1+1
 11085  037B  0021               	movlb	1	; select bank1
 11086  037C  0853               	movf	(_Err+2)^(0+128),w
 11087  037D  0020               	movlb	0	; select bank0
 11088  037E  00B2               	movwf	___ftadd@f1+2
 11089  037F  0021               	movlb	1	; select bank1
 11090  0380  085D               	movf	_PID_Prev_Error^(0+128),w
 11091  0381  00F0               	movwf	___ftneg@f1
 11092  0382  085E               	movf	(_PID_Prev_Error+1)^(0+128),w
 11093  0383  00F1               	movwf	___ftneg@f1+1
 11094  0384  085F               	movf	(_PID_Prev_Error+2)^(0+128),w
 11095  0385  00F2               	movwf	___ftneg@f1+2
 11096  0386  3197  2723  3182   	fcall	___ftneg
 11097  0389  0870               	movf	?___ftneg,w
 11098  038A  0020               	movlb	0	; select bank0
 11099  038B  00B3               	movwf	___ftadd@f2
 11100  038C  0871               	movf	?___ftneg+1,w
 11101  038D  00B4               	movwf	___ftadd@f2+1
 11102  038E  0872               	movf	?___ftneg+2,w
 11103  038F  00B5               	movwf	___ftadd@f2+2
 11104  0390  3181  2184  3182   	fcall	___ftadd
 11105  0393  0020               	movlb	0	; select bank0
 11106  0394  0830               	movf	?___ftadd,w
 11107  0395  00A3               	movwf	___ftmul@f2
 11108  0396  0831               	movf	?___ftadd+1,w
 11109  0397  00A4               	movwf	___ftmul@f2+1
 11110  0398  0832               	movf	?___ftadd+2,w
 11111  0399  00A5               	movwf	___ftmul@f2+2
 11112  039A  3180  2005  3182   	fcall	___ftmul
 11113  039D  0020               	movlb	0	; select bank0
 11114  039E  0820               	movf	?___ftmul,w
 11115  039F  0021               	movlb	1	; select bank1
 11116  03A0  00CE               	movwf	_DerivativeValue^(0+128)
 11117  03A1  0020               	movlb	0	; select bank0
 11118  03A2  0821               	movf	?___ftmul+1,w
 11119  03A3  0021               	movlb	1	; select bank1
 11120  03A4  00CF               	movwf	(_DerivativeValue+1)^(0+128)
 11121  03A5  0020               	movlb	0	; select bank0
 11122  03A6  0822               	movf	?___ftmul+2,w
 11123  03A7  0021               	movlb	1	; select bank1
 11124  03A8  00D0               	movwf	(_DerivativeValue+2)^(0+128)
 11125                           
 11126                           ;PID_Lib.c: 59: PID_Prev_Error = Err;
 11127  03A9  0851               	movf	_Err^(0+128),w
 11128  03AA  00DD               	movwf	_PID_Prev_Error^(0+128)
 11129  03AB  0852               	movf	(_Err+1)^(0+128),w
 11130  03AC  00DE               	movwf	(_PID_Prev_Error+1)^(0+128)
 11131  03AD  0853               	movf	(_Err+2)^(0+128),w
 11132  03AE  00DF               	movwf	(_PID_Prev_Error+2)^(0+128)
 11133                           
 11134                           ;PID_Lib.c: 69: Result = ErrValue + PID_Integrated + DerivativeValue;
 11135  03AF  0857               	movf	_PID_Integrated^(0+128),w
 11136  03B0  0020               	movlb	0	; select bank0
 11137  03B1  00B0               	movwf	___ftadd@f1
 11138  03B2  0021               	movlb	1	; select bank1
 11139  03B3  0858               	movf	(_PID_Integrated+1)^(0+128),w
 11140  03B4  0020               	movlb	0	; select bank0
 11141  03B5  00B1               	movwf	___ftadd@f1+1
 11142  03B6  0021               	movlb	1	; select bank1
 11143  03B7  0859               	movf	(_PID_Integrated+2)^(0+128),w
 11144  03B8  0020               	movlb	0	; select bank0
 11145  03B9  00B2               	movwf	___ftadd@f1+2
 11146  03BA  0021               	movlb	1	; select bank1
 11147  03BB  0854               	movf	_ErrValue^(0+128),w
 11148  03BC  0020               	movlb	0	; select bank0
 11149  03BD  00B3               	movwf	___ftadd@f2
 11150  03BE  0021               	movlb	1	; select bank1
 11151  03BF  0855               	movf	(_ErrValue+1)^(0+128),w
 11152  03C0  0020               	movlb	0	; select bank0
 11153  03C1  00B4               	movwf	___ftadd@f2+1
 11154  03C2  0021               	movlb	1	; select bank1
 11155  03C3  0856               	movf	(_ErrValue+2)^(0+128),w
 11156  03C4  0020               	movlb	0	; select bank0
 11157  03C5  00B5               	movwf	___ftadd@f2+2
 11158  03C6  3181  2184  3182   	fcall	___ftadd
 11159  03C9  0020               	movlb	0	; select bank0
 11160  03CA  0830               	movf	?___ftadd,w
 11161  03CB  00CB               	movwf	_PID_Calculate$1054
 11162  03CC  0831               	movf	?___ftadd+1,w
 11163  03CD  00CC               	movwf	_PID_Calculate$1054+1
 11164  03CE  0832               	movf	?___ftadd+2,w
 11165  03CF  00CD               	movwf	_PID_Calculate$1054+2
 11166                           
 11167                           ;PID_Lib.c: 69: Result = ErrValue + PID_Integrated + DerivativeValue;
 11168  03D0  0021               	movlb	1	; select bank1
 11169  03D1  084E               	movf	_DerivativeValue^(0+128),w
 11170  03D2  0020               	movlb	0	; select bank0
 11171  03D3  00B0               	movwf	___ftadd@f1
 11172  03D4  0021               	movlb	1	; select bank1
 11173  03D5  084F               	movf	(_DerivativeValue+1)^(0+128),w
 11174  03D6  0020               	movlb	0	; select bank0
 11175  03D7  00B1               	movwf	___ftadd@f1+1
 11176  03D8  0021               	movlb	1	; select bank1
 11177  03D9  0850               	movf	(_DerivativeValue+2)^(0+128),w
 11178  03DA  0020               	movlb	0	; select bank0
 11179  03DB  00B2               	movwf	___ftadd@f1+2
 11180  03DC  084B               	movf	_PID_Calculate$1054,w
 11181  03DD  00B3               	movwf	___ftadd@f2
 11182  03DE  084C               	movf	_PID_Calculate$1054+1,w
 11183  03DF  00B4               	movwf	___ftadd@f2+1
 11184  03E0  084D               	movf	_PID_Calculate$1054+2,w
 11185  03E1  00B5               	movwf	___ftadd@f2+2
 11186  03E2  3181  2184  3182   	fcall	___ftadd
 11187  03E5  0020               	movlb	0	; select bank0
 11188  03E6  0830               	movf	?___ftadd,w
 11189  03E7  0021               	movlb	1	; select bank1
 11190  03E8  00E0               	movwf	_Result^(0+128)
 11191  03E9  0020               	movlb	0	; select bank0
 11192  03EA  0831               	movf	?___ftadd+1,w
 11193  03EB  0021               	movlb	1	; select bank1
 11194  03EC  00E1               	movwf	(_Result+1)^(0+128)
 11195  03ED  0020               	movlb	0	; select bank0
 11196  03EE  0832               	movf	?___ftadd+2,w
 11197  03EF  0021               	movlb	1	; select bank1
 11198  03F0  00E2               	movwf	(_Result+2)^(0+128)
 11199                           
 11200                           ;PID_Lib.c: 71: if (Result < PID_MinOutput)
 11201  03F1  0860               	movf	_Result^(0+128),w
 11202  03F2  0020               	movlb	0	; select bank0
 11203  03F3  00BD               	movwf	___ftge@ff1
 11204  03F4  0021               	movlb	1	; select bank1
 11205  03F5  0861               	movf	(_Result+1)^(0+128),w
 11206  03F6  0020               	movlb	0	; select bank0
 11207  03F7  00BE               	movwf	___ftge@ff1+1
 11208  03F8  0021               	movlb	1	; select bank1
 11209  03F9  0862               	movf	(_Result+2)^(0+128),w
 11210  03FA  0020               	movlb	0	; select bank0
 11211  03FB  00BF               	movwf	___ftge@ff1+2
 11212  03FC  0021               	movlb	1	; select bank1
 11213  03FD  0864               	movf	(_PID_MinOutput+1)^(0+128),w
 11214  03FE  00F9               	movwf	___awtoft@c+1
 11215  03FF  0863               	movf	_PID_MinOutput^(0+128),w
 11216  0400  00F8               	movwf	___awtoft@c
 11217  0401  3188  2082  3182   	fcall	___awtoft
 11218  0404  0878               	movf	?___awtoft,w
 11219  0405  0020               	movlb	0	; select bank0
 11220  0406  00C0               	movwf	___ftge@ff2
 11221  0407  0879               	movf	?___awtoft+1,w
 11222  0408  00C1               	movwf	___ftge@ff2+1
 11223  0409  087A               	movf	?___awtoft+2,w
 11224  040A  00C2               	movwf	___ftge@ff2+2
 11225  040B  3189  21BC  3182   	fcall	___ftge
 11226  040E  1803               	btfsc	3,0
 11227  040F  2C1F               	goto	l351
 11228                           
 11229                           ;PID_Lib.c: 72: {
 11230                           ;PID_Lib.c: 73: Result = PID_MinOutput;
 11231  0410  0021               	movlb	1	; select bank1
 11232  0411  0864               	movf	(_PID_MinOutput+1)^(0+128),w
 11233  0412  00F9               	movwf	___awtoft@c+1
 11234  0413  0863               	movf	_PID_MinOutput^(0+128),w
 11235  0414  00F8               	movwf	___awtoft@c
 11236  0415  3188  2082  3182   	fcall	___awtoft
 11237  0418  0878               	movf	?___awtoft,w
 11238  0419  0021               	movlb	1	; select bank1
 11239  041A  00E0               	movwf	_Result^(0+128)
 11240  041B  0879               	movf	?___awtoft+1,w
 11241  041C  00E1               	movwf	(_Result+1)^(0+128)
 11242  041D  087A               	movf	?___awtoft+2,w
 11243  041E  00E2               	movwf	(_Result+2)^(0+128)
 11244  041F                     l351:	
 11245                           
 11246                           ;PID_Lib.c: 74: }
 11247                           ;PID_Lib.c: 76: if (Result > PID_MaxOutput)
 11248  041F  0021               	movlb	1	; select bank1
 11249  0420  086D               	movf	(_PID_MaxOutput+1)^(0+128),w
 11250  0421  00F9               	movwf	___awtoft@c+1
 11251  0422  086C               	movf	_PID_MaxOutput^(0+128),w
 11252  0423  00F8               	movwf	___awtoft@c
 11253  0424  3188  2082  3182   	fcall	___awtoft
 11254  0427  0878               	movf	?___awtoft,w
 11255  0428  0020               	movlb	0	; select bank0
 11256  0429  00BD               	movwf	___ftge@ff1
 11257  042A  0879               	movf	?___awtoft+1,w
 11258  042B  00BE               	movwf	___ftge@ff1+1
 11259  042C  087A               	movf	?___awtoft+2,w
 11260  042D  00BF               	movwf	___ftge@ff1+2
 11261  042E  0021               	movlb	1	; select bank1
 11262  042F  0860               	movf	_Result^(0+128),w
 11263  0430  0020               	movlb	0	; select bank0
 11264  0431  00C0               	movwf	___ftge@ff2
 11265  0432  0021               	movlb	1	; select bank1
 11266  0433  0861               	movf	(_Result+1)^(0+128),w
 11267  0434  0020               	movlb	0	; select bank0
 11268  0435  00C1               	movwf	___ftge@ff2+1
 11269  0436  0021               	movlb	1	; select bank1
 11270  0437  0862               	movf	(_Result+2)^(0+128),w
 11271  0438  0020               	movlb	0	; select bank0
 11272  0439  00C2               	movwf	___ftge@ff2+2
 11273  043A  3189  21BC  3182   	fcall	___ftge
 11274  043D  1803               	btfsc	3,0
 11275  043E  2C4D               	goto	l2832
 11276                           
 11277                           ;PID_Lib.c: 77: {
 11278                           ;PID_Lib.c: 78: Result = PID_MaxOutput;
 11279  043F  0021               	movlb	1	; select bank1
 11280  0440  086D               	movf	(_PID_MaxOutput+1)^(0+128),w
 11281  0441  00F9               	movwf	___awtoft@c+1
 11282  0442  086C               	movf	_PID_MaxOutput^(0+128),w
 11283  0443  00F8               	movwf	___awtoft@c
 11284  0444  3188  2082         	fcall	___awtoft
 11285  0446  0878               	movf	?___awtoft,w
 11286  0447  0021               	movlb	1	; select bank1
 11287  0448  00E0               	movwf	_Result^(0+128)
 11288  0449  0879               	movf	?___awtoft+1,w
 11289  044A  00E1               	movwf	(_Result+1)^(0+128)
 11290  044B  087A               	movf	?___awtoft+2,w
 11291  044C  00E2               	movwf	(_Result+2)^(0+128)
 11292  044D                     l2832:	
 11293                           
 11294                           ;PID_Lib.c: 79: }
 11295                           ;PID_Lib.c: 81: return (Result);
 11296  044D  0021               	movlb	1	; select bank1
 11297  044E  0860               	movf	_Result^(0+128),w
 11298  044F  0020               	movlb	0	; select bank0
 11299  0450  00C6               	movwf	?_PID_Calculate
 11300  0451  0021               	movlb	1	; select bank1
 11301  0452  0861               	movf	(_Result+1)^(0+128),w
 11302  0453  0020               	movlb	0	; select bank0
 11303  0454  00C7               	movwf	?_PID_Calculate+1
 11304  0455  0021               	movlb	1	; select bank1
 11305  0456  0862               	movf	(_Result+2)^(0+128),w
 11306  0457  0020               	movlb	0	; select bank0
 11307  0458  00C8               	movwf	?_PID_Calculate+2
 11308  0459  0008               	return
 11309  045A                     __end_of_PID_Calculate:	
 11310                           
 11311                           	psect	text35
 11312  1723                     __ptext35:	
 11313 ;; *************** function ___ftneg *****************
 11314 ;; Defined at:
 11315 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  f1              3    0[COMMON] float 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  3    0[COMMON] float 
 11322 ;; Registers used:
 11323 ;;		wreg
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11329 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;Total ram usage:        3 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_PID_Calculate
 11339 ;;		_main
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           
 11344                           ;psect for function ___ftneg
 11345  1723                     ___ftneg:	
 11346                           
 11347                           ;incstack = 0
 11348                           ; Regs used in ___ftneg: [wreg]
 11349  1723  0872               	movf	___ftneg@f1+2,w
 11350  1724  0471               	iorwf	___ftneg@f1+1,w
 11351  1725  0470               	iorwf	___ftneg@f1,w
 11352  1726  1903               	skipnz
 11353  1727  0008               	return
 11354  1728  3080               	movlw	128
 11355  1729  06F2               	xorwf	___ftneg@f1+2,f
 11356  172A  0008               	return
 11357  172B                     __end_of___ftneg:	
 11358                           
 11359                           	psect	text36
 11360  0005                     __ptext36:	
 11361 ;; *************** function ___ftmul *****************
 11362 ;; Defined at:
 11363 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  f1              3    0[BANK0 ] float 
 11366 ;;  f2              3    3[BANK0 ] float 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 11369 ;;  sign            1   15[BANK0 ] unsigned char 
 11370 ;;  cntr            1   14[BANK0 ] unsigned char 
 11371 ;;  exp             1   10[BANK0 ] unsigned char 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  3    0[BANK0 ] float 
 11374 ;; Registers used:
 11375 ;;		wreg, status,2, status,0, pclath, cstack
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11381 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;Total ram usage:       16 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:    1
 11388 ;; This function calls:
 11389 ;;		___ftpack
 11390 ;; This function is called by:
 11391 ;;		_PID_Calculate
 11392 ;;		_main
 11393 ;;		_log
 11394 ;;		_eval_poly
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           
 11399                           ;psect for function ___ftmul
 11400  0005                     ___ftmul:	
 11401                           
 11402                           ;incstack = 0
 11403                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11404  0005  0020               	movlb	0	; select bank0
 11405  0006  0820               	movf	___ftmul@f1,w
 11406  0007  00A6               	movwf	??___ftmul
 11407  0008  0821               	movf	___ftmul@f1+1,w
 11408  0009  00A7               	movwf	??___ftmul+1
 11409  000A  0822               	movf	___ftmul@f1+2,w
 11410  000B  00A8               	movwf	??___ftmul+2
 11411  000C  1003               	clrc
 11412  000D  0D27               	rlf	??___ftmul+1,w
 11413  000E  0D28               	rlf	??___ftmul+2,w
 11414  000F  00A9               	movwf	??___ftmul+3
 11415  0010  0829               	movf	??___ftmul+3,w
 11416  0011  00AA               	movwf	___ftmul@exp
 11417  0012  082A               	movf	___ftmul@exp,w
 11418  0013  1D03               	btfss	3,2
 11419  0014  281C               	goto	l2370
 11420  0015  3000               	movlw	0
 11421  0016  00A0               	movwf	?___ftmul
 11422  0017  3000               	movlw	0
 11423  0018  00A1               	movwf	?___ftmul+1
 11424  0019  3000               	movlw	0
 11425  001A  00A2               	movwf	?___ftmul+2
 11426  001B  0008               	return
 11427  001C                     l2370:	
 11428  001C  0823               	movf	___ftmul@f2,w
 11429  001D  00A6               	movwf	??___ftmul
 11430  001E  0824               	movf	___ftmul@f2+1,w
 11431  001F  00A7               	movwf	??___ftmul+1
 11432  0020  0825               	movf	___ftmul@f2+2,w
 11433  0021  00A8               	movwf	??___ftmul+2
 11434  0022  1003               	clrc
 11435  0023  0D27               	rlf	??___ftmul+1,w
 11436  0024  0D28               	rlf	??___ftmul+2,w
 11437  0025  00A9               	movwf	??___ftmul+3
 11438  0026  0829               	movf	??___ftmul+3,w
 11439  0027  00AF               	movwf	___ftmul@sign
 11440  0028  082F               	movf	___ftmul@sign,w
 11441  0029  1D03               	btfss	3,2
 11442  002A  2832               	goto	l2376
 11443  002B  3000               	movlw	0
 11444  002C  00A0               	movwf	?___ftmul
 11445  002D  3000               	movlw	0
 11446  002E  00A1               	movwf	?___ftmul+1
 11447  002F  3000               	movlw	0
 11448  0030  00A2               	movwf	?___ftmul+2
 11449  0031  0008               	return
 11450  0032                     l2376:	
 11451  0032  082F               	movf	___ftmul@sign,w
 11452  0033  3E7B               	addlw	123
 11453  0034  00A6               	movwf	??___ftmul
 11454  0035  0826               	movf	??___ftmul,w
 11455  0036  07AA               	addwf	___ftmul@exp,f
 11456  0037  0820               	movf	___ftmul@f1,w
 11457  0038  00A6               	movwf	??___ftmul
 11458  0039  0821               	movf	___ftmul@f1+1,w
 11459  003A  00A7               	movwf	??___ftmul+1
 11460  003B  0822               	movf	___ftmul@f1+2,w
 11461  003C  00A8               	movwf	??___ftmul+2
 11462  003D  3010               	movlw	16
 11463  003E                     u2475:	
 11464  003E  36A8               	lsrf	??___ftmul+2,f
 11465  003F  0CA7               	rrf	??___ftmul+1,f
 11466  0040  0CA6               	rrf	??___ftmul,f
 11467  0041  0B89               	decfsz	9,f
 11468  0042  283E               	goto	u2475
 11469  0043  0826               	movf	??___ftmul,w
 11470  0044  00A9               	movwf	??___ftmul+3
 11471  0045  0829               	movf	??___ftmul+3,w
 11472  0046  00AF               	movwf	___ftmul@sign
 11473  0047  0823               	movf	___ftmul@f2,w
 11474  0048  00A6               	movwf	??___ftmul
 11475  0049  0824               	movf	___ftmul@f2+1,w
 11476  004A  00A7               	movwf	??___ftmul+1
 11477  004B  0825               	movf	___ftmul@f2+2,w
 11478  004C  00A8               	movwf	??___ftmul+2
 11479  004D  3010               	movlw	16
 11480  004E                     u2485:	
 11481  004E  36A8               	lsrf	??___ftmul+2,f
 11482  004F  0CA7               	rrf	??___ftmul+1,f
 11483  0050  0CA6               	rrf	??___ftmul,f
 11484  0051  0B89               	decfsz	9,f
 11485  0052  284E               	goto	u2485
 11486  0053  0826               	movf	??___ftmul,w
 11487  0054  00A9               	movwf	??___ftmul+3
 11488  0055  0829               	movf	??___ftmul+3,w
 11489  0056  06AF               	xorwf	___ftmul@sign,f
 11490  0057  3080               	movlw	128
 11491  0058  00A6               	movwf	??___ftmul
 11492  0059  0826               	movf	??___ftmul,w
 11493  005A  05AF               	andwf	___ftmul@sign,f
 11494  005B  17A1               	bsf	___ftmul@f1+1,7
 11495  005C  17A4               	bsf	___ftmul@f2+1,7
 11496  005D  30FF               	movlw	255
 11497  005E  05A3               	andwf	___ftmul@f2,f
 11498  005F  30FF               	movlw	255
 11499  0060  05A4               	andwf	___ftmul@f2+1,f
 11500  0061  3000               	movlw	0
 11501  0062  05A5               	andwf	___ftmul@f2+2,f
 11502  0063  3000               	movlw	0
 11503  0064  00AB               	movwf	___ftmul@f3_as_product
 11504  0065  3000               	movlw	0
 11505  0066  00AC               	movwf	___ftmul@f3_as_product+1
 11506  0067  3000               	movlw	0
 11507  0068  00AD               	movwf	___ftmul@f3_as_product+2
 11508  0069  3007               	movlw	7
 11509  006A  00A6               	movwf	??___ftmul
 11510  006B  0826               	movf	??___ftmul,w
 11511  006C  00AE               	movwf	___ftmul@cntr
 11512  006D                     l2388:	
 11513  006D  1C20               	btfss	___ftmul@f1,0
 11514  006E  2875               	goto	l2392
 11515  006F  0823               	movf	___ftmul@f2,w
 11516  0070  07AB               	addwf	___ftmul@f3_as_product,f
 11517  0071  0824               	movf	___ftmul@f2+1,w
 11518  0072  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11519  0073  0825               	movf	___ftmul@f2+2,w
 11520  0074  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11521  0075                     l2392:	
 11522  0075  3001               	movlw	1
 11523  0076                     u2505:	
 11524  0076  36A2               	lsrf	___ftmul@f1+2,f
 11525  0077  0CA1               	rrf	___ftmul@f1+1,f
 11526  0078  0CA0               	rrf	___ftmul@f1,f
 11527  0079  0B89               	decfsz	9,f
 11528  007A  2876               	goto	u2505
 11529  007B  3001               	movlw	1
 11530  007C                     u2515:	
 11531  007C  35A3               	lslf	___ftmul@f2,f
 11532  007D  0DA4               	rlf	___ftmul@f2+1,f
 11533  007E  0DA5               	rlf	___ftmul@f2+2,f
 11534  007F  0B89               	decfsz	9,f
 11535  0080  287C               	goto	u2515
 11536  0081  3001               	movlw	1
 11537  0082  02AE               	subwf	___ftmul@cntr,f
 11538  0083  1D03               	btfss	3,2
 11539  0084  286D               	goto	l2388
 11540  0085  3009               	movlw	9
 11541  0086  00A6               	movwf	??___ftmul
 11542  0087  0826               	movf	??___ftmul,w
 11543  0088  00AE               	movwf	___ftmul@cntr
 11544  0089                     l2400:	
 11545  0089  1C20               	btfss	___ftmul@f1,0
 11546  008A  2891               	goto	l2404
 11547  008B  0823               	movf	___ftmul@f2,w
 11548  008C  07AB               	addwf	___ftmul@f3_as_product,f
 11549  008D  0824               	movf	___ftmul@f2+1,w
 11550  008E  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11551  008F  0825               	movf	___ftmul@f2+2,w
 11552  0090  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11553  0091                     l2404:	
 11554  0091  3001               	movlw	1
 11555  0092                     u2545:	
 11556  0092  36A2               	lsrf	___ftmul@f1+2,f
 11557  0093  0CA1               	rrf	___ftmul@f1+1,f
 11558  0094  0CA0               	rrf	___ftmul@f1,f
 11559  0095  0B89               	decfsz	9,f
 11560  0096  2892               	goto	u2545
 11561  0097  3001               	movlw	1
 11562  0098                     u2555:	
 11563  0098  36AD               	lsrf	___ftmul@f3_as_product+2,f
 11564  0099  0CAC               	rrf	___ftmul@f3_as_product+1,f
 11565  009A  0CAB               	rrf	___ftmul@f3_as_product,f
 11566  009B  0B89               	decfsz	9,f
 11567  009C  2898               	goto	u2555
 11568  009D  3001               	movlw	1
 11569  009E  02AE               	subwf	___ftmul@cntr,f
 11570  009F  1D03               	btfss	3,2
 11571  00A0  2889               	goto	l2400
 11572  00A1  082B               	movf	___ftmul@f3_as_product,w
 11573  00A2  00F0               	movwf	___ftpack@arg
 11574  00A3  082C               	movf	___ftmul@f3_as_product+1,w
 11575  00A4  00F1               	movwf	___ftpack@arg+1
 11576  00A5  082D               	movf	___ftmul@f3_as_product+2,w
 11577  00A6  00F2               	movwf	___ftpack@arg+2
 11578  00A7  082A               	movf	___ftmul@exp,w
 11579  00A8  00A6               	movwf	??___ftmul
 11580  00A9  0826               	movf	??___ftmul,w
 11581  00AA  00F3               	movwf	___ftpack@exp
 11582  00AB  082F               	movf	___ftmul@sign,w
 11583  00AC  00A7               	movwf	??___ftmul+1
 11584  00AD  0827               	movf	??___ftmul+1,w
 11585  00AE  00F4               	movwf	___ftpack@sign
 11586  00AF  318B  2369         	fcall	___ftpack
 11587  00B1  0870               	movf	?___ftpack,w
 11588  00B2  0020               	movlb	0	; select bank0
 11589  00B3  00A0               	movwf	?___ftmul
 11590  00B4  0871               	movf	?___ftpack+1,w
 11591  00B5  00A1               	movwf	?___ftmul+1
 11592  00B6  0872               	movf	?___ftpack+2,w
 11593  00B7  00A2               	movwf	?___ftmul+2
 11594  00B8  0008               	return
 11595  00B9                     __end_of___ftmul:	
 11596                           
 11597                           	psect	text37
 11598  09BC                     __ptext37:	
 11599 ;; *************** function ___ftge *****************
 11600 ;; Defined at:
 11601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  ff1             3   29[BANK0 ] float 
 11604 ;;  ff2             3   32[BANK0 ] float 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;		None               void
 11609 ;; Registers used:
 11610 ;;		wreg, status,2, status,0
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11616 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;Total ram usage:        9 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_PID_Calculate
 11626 ;;		_main
 11627 ;;		_log
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           
 11632                           ;psect for function ___ftge
 11633  09BC                     ___ftge:	
 11634                           
 11635                           ;incstack = 0
 11636                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 11637  09BC  0020               	movlb	0	; select bank0
 11638  09BD  1FBF               	btfss	___ftge@ff1+2,7
 11639  09BE  29D3               	goto	l2652
 11640  09BF  093D               	comf	___ftge@ff1,w
 11641  09C0  00C3               	movwf	??___ftge
 11642  09C1  093E               	comf	___ftge@ff1+1,w
 11643  09C2  00C4               	movwf	??___ftge+1
 11644  09C3  093F               	comf	___ftge@ff1+2,w
 11645  09C4  00C5               	movwf	??___ftge+2
 11646  09C5  0AC3               	incf	??___ftge,f
 11647  09C6  1903               	skipnz
 11648  09C7  0AC4               	incf	??___ftge+1,f
 11649  09C8  1903               	skipnz
 11650  09C9  0AC5               	incf	??___ftge+2,f
 11651  09CA  3000               	movlw	0
 11652  09CB  0743               	addwf	??___ftge,w
 11653  09CC  00BD               	movwf	___ftge@ff1
 11654  09CD  3000               	movlw	0
 11655  09CE  3D44               	addwfc	??___ftge+1,w
 11656  09CF  00BE               	movwf	___ftge@ff1+1
 11657  09D0  3080               	movlw	128
 11658  09D1  3D45               	addwfc	??___ftge+2,w
 11659  09D2  00BF               	movwf	___ftge@ff1+2
 11660  09D3                     l2652:	
 11661  09D3  1FC2               	btfss	___ftge@ff2+2,7
 11662  09D4  29E9               	goto	l2656
 11663  09D5  0940               	comf	___ftge@ff2,w
 11664  09D6  00C3               	movwf	??___ftge
 11665  09D7  0941               	comf	___ftge@ff2+1,w
 11666  09D8  00C4               	movwf	??___ftge+1
 11667  09D9  0942               	comf	___ftge@ff2+2,w
 11668  09DA  00C5               	movwf	??___ftge+2
 11669  09DB  0AC3               	incf	??___ftge,f
 11670  09DC  1903               	skipnz
 11671  09DD  0AC4               	incf	??___ftge+1,f
 11672  09DE  1903               	skipnz
 11673  09DF  0AC5               	incf	??___ftge+2,f
 11674  09E0  3000               	movlw	0
 11675  09E1  0743               	addwf	??___ftge,w
 11676  09E2  00C0               	movwf	___ftge@ff2
 11677  09E3  3000               	movlw	0
 11678  09E4  3D44               	addwfc	??___ftge+1,w
 11679  09E5  00C1               	movwf	___ftge@ff2+1
 11680  09E6  3080               	movlw	128
 11681  09E7  3D45               	addwfc	??___ftge+2,w
 11682  09E8  00C2               	movwf	___ftge@ff2+2
 11683  09E9                     l2656:	
 11684  09E9  3080               	movlw	128
 11685  09EA  06BF               	xorwf	___ftge@ff1+2,f
 11686  09EB  3080               	movlw	128
 11687  09EC  06C2               	xorwf	___ftge@ff2+2,f
 11688  09ED  0842               	movf	___ftge@ff2+2,w
 11689  09EE  023F               	subwf	___ftge@ff1+2,w
 11690  09EF  1D03               	skipz
 11691  09F0  0008               	return
 11692  09F1  0841               	movf	___ftge@ff2+1,w
 11693  09F2  023E               	subwf	___ftge@ff1+1,w
 11694  09F3  1D03               	skipz
 11695  09F4  0008               	return
 11696  09F5  0840               	movf	___ftge@ff2,w
 11697  09F6  023D               	subwf	___ftge@ff1,w
 11698  09F7  0008               	return
 11699  09F8                     __end_of___ftge:	
 11700                           
 11701                           	psect	text38
 11702  0184                     __ptext38:	
 11703 ;; *************** function ___ftadd *****************
 11704 ;; Defined at:
 11705 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;  f1              3   16[BANK0 ] float 
 11708 ;;  f2              3   19[BANK0 ] float 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  exp1            1   28[BANK0 ] unsigned char 
 11711 ;;  exp2            1   27[BANK0 ] unsigned char 
 11712 ;;  sign            1   26[BANK0 ] unsigned char 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  3   16[BANK0 ] float 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0, pclath, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11722 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;Total ram usage:       13 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    1
 11729 ;; This function calls:
 11730 ;;		___ftpack
 11731 ;; This function is called by:
 11732 ;;		_PID_Calculate
 11733 ;;		_main
 11734 ;;		___ftsub
 11735 ;;		_log
 11736 ;;		_eval_poly
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           
 11741                           ;psect for function ___ftadd
 11742  0184                     ___ftadd:	
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11746  0184  0020               	movlb	0	; select bank0
 11747  0185  0830               	movf	___ftadd@f1,w
 11748  0186  00B6               	movwf	??___ftadd
 11749  0187  0831               	movf	___ftadd@f1+1,w
 11750  0188  00B7               	movwf	??___ftadd+1
 11751  0189  0832               	movf	___ftadd@f1+2,w
 11752  018A  00B8               	movwf	??___ftadd+2
 11753  018B  1003               	clrc
 11754  018C  0D37               	rlf	??___ftadd+1,w
 11755  018D  0D38               	rlf	??___ftadd+2,w
 11756  018E  00B9               	movwf	??___ftadd+3
 11757  018F  0839               	movf	??___ftadd+3,w
 11758  0190  00BC               	movwf	___ftadd@exp1
 11759  0191  0833               	movf	___ftadd@f2,w
 11760  0192  00B6               	movwf	??___ftadd
 11761  0193  0834               	movf	___ftadd@f2+1,w
 11762  0194  00B7               	movwf	??___ftadd+1
 11763  0195  0835               	movf	___ftadd@f2+2,w
 11764  0196  00B8               	movwf	??___ftadd+2
 11765  0197  1003               	clrc
 11766  0198  0D37               	rlf	??___ftadd+1,w
 11767  0199  0D38               	rlf	??___ftadd+2,w
 11768  019A  00B9               	movwf	??___ftadd+3
 11769  019B  0839               	movf	??___ftadd+3,w
 11770  019C  00BB               	movwf	___ftadd@exp2
 11771  019D  083C               	movf	___ftadd@exp1,w
 11772  019E  1903               	btfsc	3,2
 11773  019F  29AC               	goto	l2300
 11774  01A0  083B               	movf	___ftadd@exp2,w
 11775  01A1  023C               	subwf	___ftadd@exp1,w
 11776  01A2  1803               	skipnc
 11777  01A3  29B3               	goto	l2304
 11778  01A4  033C               	decf	___ftadd@exp1,w
 11779  01A5  3AFF               	xorlw	255
 11780  01A6  073B               	addwf	___ftadd@exp2,w
 11781  01A7  00B6               	movwf	??___ftadd
 11782  01A8  3019               	movlw	25
 11783  01A9  0236               	subwf	??___ftadd,w
 11784  01AA  1C03               	skipc
 11785  01AB  29B3               	goto	l2304
 11786  01AC                     l2300:	
 11787  01AC  0833               	movf	___ftadd@f2,w
 11788  01AD  00B0               	movwf	?___ftadd
 11789  01AE  0834               	movf	___ftadd@f2+1,w
 11790  01AF  00B1               	movwf	?___ftadd+1
 11791  01B0  0835               	movf	___ftadd@f2+2,w
 11792  01B1  00B2               	movwf	?___ftadd+2
 11793  01B2  0008               	return
 11794  01B3                     l2304:	
 11795  01B3  083B               	movf	___ftadd@exp2,w
 11796  01B4  1903               	btfsc	3,2
 11797  01B5  0008               	return
 11798  01B6  083C               	movf	___ftadd@exp1,w
 11799  01B7  023B               	subwf	___ftadd@exp2,w
 11800  01B8  1803               	skipnc
 11801  01B9  29C2               	goto	l2310
 11802  01BA  033B               	decf	___ftadd@exp2,w
 11803  01BB  3AFF               	xorlw	255
 11804  01BC  073C               	addwf	___ftadd@exp1,w
 11805  01BD  00B6               	movwf	??___ftadd
 11806  01BE  3019               	movlw	25
 11807  01BF  0236               	subwf	??___ftadd,w
 11808  01C0  1803               	btfsc	3,0
 11809  01C1  0008               	return
 11810  01C2                     l2310:	
 11811  01C2  3006               	movlw	6
 11812  01C3  00B6               	movwf	??___ftadd
 11813  01C4  0836               	movf	??___ftadd,w
 11814  01C5  00BA               	movwf	___ftadd@sign
 11815  01C6  1BB2               	btfsc	___ftadd@f1+2,7
 11816  01C7  17BA               	bsf	___ftadd@sign,7
 11817  01C8  1BB5               	btfsc	___ftadd@f2+2,7
 11818  01C9  173A               	bsf	___ftadd@sign,6
 11819  01CA  17B1               	bsf	___ftadd@f1+1,7
 11820  01CB  30FF               	movlw	255
 11821  01CC  05B0               	andwf	___ftadd@f1,f
 11822  01CD  30FF               	movlw	255
 11823  01CE  05B1               	andwf	___ftadd@f1+1,f
 11824  01CF  3000               	movlw	0
 11825  01D0  05B2               	andwf	___ftadd@f1+2,f
 11826  01D1  17B4               	bsf	___ftadd@f2+1,7
 11827  01D2  30FF               	movlw	255
 11828  01D3  05B3               	andwf	___ftadd@f2,f
 11829  01D4  30FF               	movlw	255
 11830  01D5  05B4               	andwf	___ftadd@f2+1,f
 11831  01D6  3000               	movlw	0
 11832  01D7  05B5               	andwf	___ftadd@f2+2,f
 11833  01D8  083B               	movf	___ftadd@exp2,w
 11834  01D9  023C               	subwf	___ftadd@exp1,w
 11835  01DA  1803               	skipnc
 11836  01DB  29FE               	goto	l2332
 11837  01DC                     l2322:	
 11838  01DC  3001               	movlw	1
 11839  01DD                     u2315:	
 11840  01DD  35B3               	lslf	___ftadd@f2,f
 11841  01DE  0DB4               	rlf	___ftadd@f2+1,f
 11842  01DF  0DB5               	rlf	___ftadd@f2+2,f
 11843  01E0  0B89               	decfsz	9,f
 11844  01E1  29DD               	goto	u2315
 11845  01E2  3001               	movlw	1
 11846  01E3  02BB               	subwf	___ftadd@exp2,f
 11847  01E4  083B               	movf	___ftadd@exp2,w
 11848  01E5  063C               	xorwf	___ftadd@exp1,w
 11849  01E6  1903               	skipnz
 11850  01E7  29F9               	goto	l2330
 11851  01E8  3001               	movlw	1
 11852  01E9  02BA               	subwf	___ftadd@sign,f
 11853  01EA  083A               	movf	___ftadd@sign,w
 11854  01EB  3907               	andlw	7
 11855  01EC  1903               	btfsc	3,2
 11856  01ED  29F9               	goto	l2330
 11857  01EE  29DC               	goto	l2322
 11858  01EF                     l2328:	
 11859  01EF  3001               	movlw	1
 11860  01F0                     u2345:	
 11861  01F0  36B2               	lsrf	___ftadd@f1+2,f
 11862  01F1  0CB1               	rrf	___ftadd@f1+1,f
 11863  01F2  0CB0               	rrf	___ftadd@f1,f
 11864  01F3  0B89               	decfsz	9,f
 11865  01F4  29F0               	goto	u2345
 11866  01F5  3001               	movlw	1
 11867  01F6  00B6               	movwf	??___ftadd
 11868  01F7  0836               	movf	??___ftadd,w
 11869  01F8  07BC               	addwf	___ftadd@exp1,f
 11870  01F9                     l2330:	
 11871  01F9  083C               	movf	___ftadd@exp1,w
 11872  01FA  063B               	xorwf	___ftadd@exp2,w
 11873  01FB  1903               	btfsc	3,2
 11874  01FC  2A23               	goto	l680
 11875  01FD  29EF               	goto	l2328
 11876  01FE                     l2332:	
 11877  01FE  083C               	movf	___ftadd@exp1,w
 11878  01FF  023B               	subwf	___ftadd@exp2,w
 11879  0200  1803               	skipnc
 11880  0201  2A23               	goto	l680
 11881  0202                     l2334:	
 11882  0202  3001               	movlw	1
 11883  0203                     u2375:	
 11884  0203  35B0               	lslf	___ftadd@f1,f
 11885  0204  0DB1               	rlf	___ftadd@f1+1,f
 11886  0205  0DB2               	rlf	___ftadd@f1+2,f
 11887  0206  0B89               	decfsz	9,f
 11888  0207  2A03               	goto	u2375
 11889  0208  3001               	movlw	1
 11890  0209  02BC               	subwf	___ftadd@exp1,f
 11891  020A  083B               	movf	___ftadd@exp2,w
 11892  020B  063C               	xorwf	___ftadd@exp1,w
 11893  020C  1903               	skipnz
 11894  020D  2A1F               	goto	l2342
 11895  020E  3001               	movlw	1
 11896  020F  02BA               	subwf	___ftadd@sign,f
 11897  0210  083A               	movf	___ftadd@sign,w
 11898  0211  3907               	andlw	7
 11899  0212  1903               	btfsc	3,2
 11900  0213  2A1F               	goto	l2342
 11901  0214  2A02               	goto	l2334
 11902  0215                     l2340:	
 11903  0215  3001               	movlw	1
 11904  0216                     u2405:	
 11905  0216  36B5               	lsrf	___ftadd@f2+2,f
 11906  0217  0CB4               	rrf	___ftadd@f2+1,f
 11907  0218  0CB3               	rrf	___ftadd@f2,f
 11908  0219  0B89               	decfsz	9,f
 11909  021A  2A16               	goto	u2405
 11910  021B  3001               	movlw	1
 11911  021C  00B6               	movwf	??___ftadd
 11912  021D  0836               	movf	??___ftadd,w
 11913  021E  07BB               	addwf	___ftadd@exp2,f
 11914  021F                     l2342:	
 11915  021F  083C               	movf	___ftadd@exp1,w
 11916  0220  063B               	xorwf	___ftadd@exp2,w
 11917  0221  1D03               	skipz
 11918  0222  2A15               	goto	l2340
 11919  0223                     l680:	
 11920  0223  1FBA               	btfss	___ftadd@sign,7
 11921  0224  2A35               	goto	l2346
 11922  0225  30FF               	movlw	255
 11923  0226  06B0               	xorwf	___ftadd@f1,f
 11924  0227  30FF               	movlw	255
 11925  0228  06B1               	xorwf	___ftadd@f1+1,f
 11926  0229  30FF               	movlw	255
 11927  022A  06B2               	xorwf	___ftadd@f1+2,f
 11928  022B  3001               	movlw	1
 11929  022C  07B0               	addwf	___ftadd@f1,f
 11930  022D  3000               	movlw	0
 11931  022E  1803               	skipnc
 11932  022F  3001               	movlw	1
 11933  0230  07B1               	addwf	___ftadd@f1+1,f
 11934  0231  3000               	movlw	0
 11935  0232  1803               	skipnc
 11936  0233  3001               	movlw	1
 11937  0234  07B2               	addwf	___ftadd@f1+2,f
 11938  0235                     l2346:	
 11939  0235  1F3A               	btfss	___ftadd@sign,6
 11940  0236  2A47               	goto	l2350
 11941  0237  30FF               	movlw	255
 11942  0238  06B3               	xorwf	___ftadd@f2,f
 11943  0239  30FF               	movlw	255
 11944  023A  06B4               	xorwf	___ftadd@f2+1,f
 11945  023B  30FF               	movlw	255
 11946  023C  06B5               	xorwf	___ftadd@f2+2,f
 11947  023D  3001               	movlw	1
 11948  023E  07B3               	addwf	___ftadd@f2,f
 11949  023F  3000               	movlw	0
 11950  0240  1803               	skipnc
 11951  0241  3001               	movlw	1
 11952  0242  07B4               	addwf	___ftadd@f2+1,f
 11953  0243  3000               	movlw	0
 11954  0244  1803               	skipnc
 11955  0245  3001               	movlw	1
 11956  0246  07B5               	addwf	___ftadd@f2+2,f
 11957  0247                     l2350:	
 11958  0247  01BA               	clrf	___ftadd@sign
 11959  0248  0830               	movf	___ftadd@f1,w
 11960  0249  07B3               	addwf	___ftadd@f2,f
 11961  024A  0831               	movf	___ftadd@f1+1,w
 11962  024B  3DB4               	addwfc	___ftadd@f2+1,f
 11963  024C  0832               	movf	___ftadd@f1+2,w
 11964  024D  3DB5               	addwfc	___ftadd@f2+2,f
 11965  024E  1FB5               	btfss	___ftadd@f2+2,7
 11966  024F  2A62               	goto	l2360
 11967  0250  30FF               	movlw	255
 11968  0251  06B3               	xorwf	___ftadd@f2,f
 11969  0252  30FF               	movlw	255
 11970  0253  06B4               	xorwf	___ftadd@f2+1,f
 11971  0254  30FF               	movlw	255
 11972  0255  06B5               	xorwf	___ftadd@f2+2,f
 11973  0256  3001               	movlw	1
 11974  0257  07B3               	addwf	___ftadd@f2,f
 11975  0258  3000               	movlw	0
 11976  0259  1803               	skipnc
 11977  025A  3001               	movlw	1
 11978  025B  07B4               	addwf	___ftadd@f2+1,f
 11979  025C  3000               	movlw	0
 11980  025D  1803               	skipnc
 11981  025E  3001               	movlw	1
 11982  025F  07B5               	addwf	___ftadd@f2+2,f
 11983  0260  01BA               	clrf	___ftadd@sign
 11984  0261  0ABA               	incf	___ftadd@sign,f
 11985  0262                     l2360:	
 11986  0262  0833               	movf	___ftadd@f2,w
 11987  0263  00F0               	movwf	___ftpack@arg
 11988  0264  0834               	movf	___ftadd@f2+1,w
 11989  0265  00F1               	movwf	___ftpack@arg+1
 11990  0266  0835               	movf	___ftadd@f2+2,w
 11991  0267  00F2               	movwf	___ftpack@arg+2
 11992  0268  083C               	movf	___ftadd@exp1,w
 11993  0269  00B6               	movwf	??___ftadd
 11994  026A  0836               	movf	??___ftadd,w
 11995  026B  00F3               	movwf	___ftpack@exp
 11996  026C  083A               	movf	___ftadd@sign,w
 11997  026D  00B7               	movwf	??___ftadd+1
 11998  026E  0837               	movf	??___ftadd+1,w
 11999  026F  00F4               	movwf	___ftpack@sign
 12000  0270  318B  2369         	fcall	___ftpack
 12001  0272  0870               	movf	?___ftpack,w
 12002  0273  0020               	movlb	0	; select bank0
 12003  0274  00B0               	movwf	?___ftadd
 12004  0275  0871               	movf	?___ftpack+1,w
 12005  0276  00B1               	movwf	?___ftadd+1
 12006  0277  0872               	movf	?___ftpack+2,w
 12007  0278  00B2               	movwf	?___ftadd+2
 12008  0279  0008               	return
 12009  027A                     __end_of___ftadd:	
 12010                           
 12011                           	psect	text39
 12012  0882                     __ptext39:	
 12013 ;; *************** function ___awtoft *****************
 12014 ;; Defined at:
 12015 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  c               2    8[COMMON] int 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  sign            1   13[COMMON] unsigned char 
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  3    8[COMMON] float 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0, pclath, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12029 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;Total ram usage:        6 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    1
 12036 ;; This function calls:
 12037 ;;		___ftpack
 12038 ;; This function is called by:
 12039 ;;		_PID_Calculate
 12040 ;;		_log
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           
 12045                           ;psect for function ___awtoft
 12046  0882                     ___awtoft:	
 12047                           
 12048                           ;incstack = 0
 12049                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 12050  0882  01FD               	clrf	___awtoft@sign
 12051  0883  1FF9               	btfss	___awtoft@c+1,7
 12052  0884  288C               	goto	l2644
 12053  0885  09F8               	comf	___awtoft@c,f
 12054  0886  09F9               	comf	___awtoft@c+1,f
 12055  0887  0AF8               	incf	___awtoft@c,f
 12056  0888  1903               	skipnz
 12057  0889  0AF9               	incf	___awtoft@c+1,f
 12058  088A  01FD               	clrf	___awtoft@sign
 12059  088B  0AFD               	incf	___awtoft@sign,f
 12060  088C                     l2644:	
 12061  088C  0878               	movf	___awtoft@c,w
 12062  088D  00F0               	movwf	___ftpack@arg
 12063  088E  0879               	movf	___awtoft@c+1,w
 12064  088F  00F1               	movwf	___ftpack@arg+1
 12065  0890  01F2               	clrf	___ftpack@arg+2
 12066  0891  308E               	movlw	142
 12067  0892  00FB               	movwf	??___awtoft
 12068  0893  087B               	movf	??___awtoft,w
 12069  0894  00F3               	movwf	___ftpack@exp
 12070  0895  087D               	movf	___awtoft@sign,w
 12071  0896  00FC               	movwf	??___awtoft+1
 12072  0897  087C               	movf	??___awtoft+1,w
 12073  0898  00F4               	movwf	___ftpack@sign
 12074  0899  318B  2369         	fcall	___ftpack
 12075  089B  0870               	movf	?___ftpack,w
 12076  089C  00F8               	movwf	?___awtoft
 12077  089D  0871               	movf	?___ftpack+1,w
 12078  089E  00F9               	movwf	?___awtoft+1
 12079  089F  0872               	movf	?___ftpack+2,w
 12080  08A0  00FA               	movwf	?___awtoft+2
 12081  08A1  0008               	return
 12082  08A2                     __end_of___awtoft:	
 12083                           
 12084                           	psect	text40
 12085  0B69                     __ptext40:	
 12086 ;; *************** function ___ftpack *****************
 12087 ;; Defined at:
 12088 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  arg             3    0[COMMON] unsigned um
 12091 ;;  exp             1    3[COMMON] unsigned char 
 12092 ;;  sign            1    4[COMMON] unsigned char 
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  3    0[COMMON] float 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12104 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;Total ram usage:        8 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; This function calls:
 12111 ;;		Nothing
 12112 ;; This function is called by:
 12113 ;;		___awtoft
 12114 ;;		___ftadd
 12115 ;;		___ftdiv
 12116 ;;		___ftmul
 12117 ;;		___lbtoft
 12118 ;;		___lwtoft
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           
 12123                           ;psect for function ___ftpack
 12124  0B69                     ___ftpack:	
 12125                           
 12126                           ;incstack = 0
 12127                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12128  0B69  0873               	movf	___ftpack@exp,w
 12129  0B6A  1903               	btfsc	3,2
 12130  0B6B  2B71               	goto	l2090
 12131  0B6C  0872               	movf	___ftpack@arg+2,w
 12132  0B6D  0471               	iorwf	___ftpack@arg+1,w
 12133  0B6E  0470               	iorwf	___ftpack@arg,w
 12134  0B6F  1D03               	skipz
 12135  0B70  2B82               	goto	l2096
 12136  0B71                     l2090:	
 12137  0B71  3000               	movlw	0
 12138  0B72  00F0               	movwf	?___ftpack
 12139  0B73  3000               	movlw	0
 12140  0B74  00F1               	movwf	?___ftpack+1
 12141  0B75  3000               	movlw	0
 12142  0B76  00F2               	movwf	?___ftpack+2
 12143  0B77  0008               	return
 12144  0B78                     l2094:	
 12145  0B78  3001               	movlw	1
 12146  0B79  00F5               	movwf	??___ftpack
 12147  0B7A  0875               	movf	??___ftpack,w
 12148  0B7B  07F3               	addwf	___ftpack@exp,f
 12149  0B7C  3001               	movlw	1
 12150  0B7D                     u1755:	
 12151  0B7D  36F2               	lsrf	___ftpack@arg+2,f
 12152  0B7E  0CF1               	rrf	___ftpack@arg+1,f
 12153  0B7F  0CF0               	rrf	___ftpack@arg,f
 12154  0B80  0B89               	decfsz	9,f
 12155  0B81  2B7D               	goto	u1755
 12156  0B82                     l2096:	
 12157  0B82  30FE               	movlw	254
 12158  0B83  0572               	andwf	___ftpack@arg+2,w
 12159  0B84  1903               	btfsc	3,2
 12160  0B85  2B9B               	goto	l649
 12161  0B86  2B78               	goto	l2094
 12162  0B87                     l2098:	
 12163  0B87  3001               	movlw	1
 12164  0B88  00F5               	movwf	??___ftpack
 12165  0B89  0875               	movf	??___ftpack,w
 12166  0B8A  07F3               	addwf	___ftpack@exp,f
 12167  0B8B  3001               	movlw	1
 12168  0B8C  07F0               	addwf	___ftpack@arg,f
 12169  0B8D  3000               	movlw	0
 12170  0B8E  1803               	skipnc
 12171  0B8F  3001               	movlw	1
 12172  0B90  07F1               	addwf	___ftpack@arg+1,f
 12173  0B91  3000               	movlw	0
 12174  0B92  1803               	skipnc
 12175  0B93  3001               	movlw	1
 12176  0B94  07F2               	addwf	___ftpack@arg+2,f
 12177  0B95  3001               	movlw	1
 12178  0B96                     u1775:	
 12179  0B96  36F2               	lsrf	___ftpack@arg+2,f
 12180  0B97  0CF1               	rrf	___ftpack@arg+1,f
 12181  0B98  0CF0               	rrf	___ftpack@arg,f
 12182  0B99  0B89               	decfsz	9,f
 12183  0B9A  2B96               	goto	u1775
 12184  0B9B                     l649:	
 12185  0B9B  30FF               	movlw	255
 12186  0B9C  0572               	andwf	___ftpack@arg+2,w
 12187  0B9D  1903               	btfsc	3,2
 12188  0B9E  2BA8               	goto	l2106
 12189  0B9F  2B87               	goto	l2098
 12190  0BA0                     l2104:	
 12191  0BA0  3001               	movlw	1
 12192  0BA1  02F3               	subwf	___ftpack@exp,f
 12193  0BA2  3001               	movlw	1
 12194  0BA3                     u1795:	
 12195  0BA3  35F0               	lslf	___ftpack@arg,f
 12196  0BA4  0DF1               	rlf	___ftpack@arg+1,f
 12197  0BA5  0DF2               	rlf	___ftpack@arg+2,f
 12198  0BA6  0B89               	decfsz	9,f
 12199  0BA7  2BA3               	goto	u1795
 12200  0BA8                     l2106:	
 12201  0BA8  1BF1               	btfsc	___ftpack@arg+1,7
 12202  0BA9  2BAE               	goto	l656
 12203  0BAA  3002               	movlw	2
 12204  0BAB  0273               	subwf	___ftpack@exp,w
 12205  0BAC  1803               	skipnc
 12206  0BAD  2BA0               	goto	l2104
 12207  0BAE                     l656:	
 12208  0BAE  1873               	btfsc	___ftpack@exp,0
 12209  0BAF  2BB6               	goto	l657
 12210  0BB0  30FF               	movlw	255
 12211  0BB1  05F0               	andwf	___ftpack@arg,f
 12212  0BB2  307F               	movlw	127
 12213  0BB3  05F1               	andwf	___ftpack@arg+1,f
 12214  0BB4  30FF               	movlw	255
 12215  0BB5  05F2               	andwf	___ftpack@arg+2,f
 12216  0BB6                     l657:	
 12217  0BB6  1003               	clrc
 12218  0BB7  0CF3               	rrf	___ftpack@exp,f
 12219  0BB8  0873               	movf	___ftpack@exp,w
 12220  0BB9  00F5               	movwf	??___ftpack
 12221  0BBA  01F6               	clrf	??___ftpack+1
 12222  0BBB  01F7               	clrf	??___ftpack+2
 12223  0BBC  3010               	movlw	16
 12224  0BBD                     u1835:	
 12225  0BBD  35F5               	lslf	??___ftpack,f
 12226  0BBE  0DF6               	rlf	??___ftpack+1,f
 12227  0BBF  0DF7               	rlf	??___ftpack+2,f
 12228  0BC0  0B89               	decfsz	9,f
 12229  0BC1  2BBD               	goto	u1835
 12230  0BC2  0875               	movf	??___ftpack,w
 12231  0BC3  04F0               	iorwf	___ftpack@arg,f
 12232  0BC4  0876               	movf	??___ftpack+1,w
 12233  0BC5  04F1               	iorwf	___ftpack@arg+1,f
 12234  0BC6  0877               	movf	??___ftpack+2,w
 12235  0BC7  04F2               	iorwf	___ftpack@arg+2,f
 12236  0BC8  0874               	movf	___ftpack@sign,w
 12237  0BC9  1903               	btfsc	3,2
 12238  0BCA  0008               	return
 12239  0BCB  17F2               	bsf	___ftpack@arg+2,7
 12240  0BCC  0008               	return
 12241  0BCD                     __end_of___ftpack:	
 12242                           
 12243                           	psect	text41
 12244  1760                     __ptext41:	
 12245 ;; *************** function _ADCC_GetSingleConversion *****************
 12246 ;; Defined at:
 12247 ;;		line 52 in file "adcc.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  channel         1    wreg     enum E13559
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  channel         1    3[COMMON] enum E13559
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  2    0[COMMON] unsigned int 
 12254 ;; Registers used:
 12255 ;;		wreg
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        4 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_main
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           
 12275                           ;psect for function _ADCC_GetSingleConversion
 12276  1760                     _ADCC_GetSingleConversion:	
 12277                           
 12278                           ;incstack = 0
 12279                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12280                           ;ADCC_GetSingleConversion@channel stored from wreg
 12281  1760  00F3               	movwf	ADCC_GetSingleConversion@channel
 12282                           
 12283                           ;adcc.c: 55: ADPCH = channel;
 12284  1761  0873               	movf	ADCC_GetSingleConversion@channel,w
 12285  1762  0021               	movlb	1	; select bank1
 12286  1763  009E               	movwf	30	;volatile
 12287                           
 12288                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 12289  1764  1793               	bsf	19,7	;volatile
 12290                           
 12291                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 12292  1765  1313               	bcf	19,6	;volatile
 12293                           
 12294                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 12295  1766  1413               	bsf	19,0	;volatile
 12296  1767                     l224:	
 12297                           ;adcc.c: 68: {
 12298                           
 12299                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 12300                           
 12301  1767  1813               	btfsc	19,0	;volatile
 12302  1768  2F67               	goto	l224
 12303                           
 12304                           ;adcc.c: 69: }
 12305                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 12306  1769  080D               	movf	13,w	;volatile
 12307  176A  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12308  176B  080C               	movf	12,w	;volatile
 12309  176C  00F0               	movwf	?_ADCC_GetSingleConversion
 12310  176D  0008               	return
 12311  176E                     __end_of_ADCC_GetSingleConversion:	
 12312  007E                     btemp	set	126	;btemp
 12313  007E                     wtemp	set	126
 12314  007E                     wtemp0	set	126
 12315  0080                     wtemp1	set	128
 12316  0082                     wtemp2	set	130
 12317  0084                     wtemp3	set	132
 12318  0086                     wtemp4	set	134
 12319  0088                     wtemp5	set	136
 12320  007F                     wtemp6	set	127
 12321  007E                     ttemp	set	126
 12322  007E                     ttemp0	set	126
 12323  0081                     ttemp1	set	129
 12324  0084                     ttemp2	set	132
 12325  0087                     ttemp3	set	135
 12326  007F                     ttemp4	set	127
 12327  007E                     ltemp	set	126
 12328  007E                     ltemp0	set	126
 12329  0082                     ltemp1	set	130
 12330  0086                     ltemp2	set	134
 12331  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    27
    Data        32
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     46      79
    BANK2            80      0      45
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_tempSetpoint
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_Int->___fttol
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_tempSetpoint
    _tempSetpoint->_readButtons

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   67953
                                              6 BANK1     40    40      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    9240
                                             79 BANK0      1     1      0
                                              3 BANK1      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4596
                                              0 BANK1      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     427
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2971
                                             60 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             46 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        8     3      5   10505
                                             38 BANK0      8     3      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     244
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
       _PID_Calculate (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
       ___fttol (ARG)
         _PID_Calculate (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
       ___fttol (ARG)
         _PID_Calculate (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
         ___fttol (ARG)
           _PID_Calculate (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2E      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2D       9       56.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Sep 10 17:16:19 2017

                                _x 00EB                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                     _PID_Prev_Error 00DD  
                   _PID_Prev_Input 0148                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l111 17C6  
                              l113 17CB                                l107 17BB  
                              l109 17C1                                l224 1767  
                              l350 0367                                l351 041F  
                              l349 0338                                l543 0C59  
                              l394 0535                                l395 0541  
                              l740 0D37                                l656 0BAE  
                              l680 0223                                l488 0834  
                              l657 0BB6                                l649 0B9B  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RA3 0063  
                              _RB2 006A                                _RA4 0064  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _Err 00D1                                _log 0E87  
                     ___awmod@sign 0076                    _TMR2_Initialize 177D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0812                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0A34  
                     ___ftdiv@sign 002F                               l2104 0BA0  
                             l2106 0BA8                               l2300 01AC  
                             l2052 17C7                               l2044 17BD  
                             l3012 0973                               l3004 0955  
                             l2212 0A54                               l2132 0ACD  
                             l2310 01C2                               l3006 0961  
                             l2150 0AF3                               l2142 0AD5  
                             l2126 0AC2                               l2304 01B3  
                             l2400 0089                               l2048 17C2  
                             l3016 097C                               l2144 0AE1  
                             l2090 0B71                               l2330 01F9  
                             l2322 01DC                               l2154 0AFC  
                             l2170 0A7D                               l2242 00DB  
                             l3106 06C6                               l2340 0215  
                             l2332 01FE                               l2404 0091  
                             l2260 0119                               l2252 00E2  
                             l2228 0814                               l3140 077B  
                             l3044 0477                               l2094 0B78  
                             l2350 0247                               l2342 021F  
                             l2334 0202                               l2158 0B04  
                             l2182 0A8A                               l2174 0A84  
                             l2270 0135                               l2262 0121  
                             l2254 0111                               l3134 076C  
                             l2096 0B82                               l2360 0262  
                             l2328 01EF                               l2184 0A96  
                             l2192 0AAB                               l2272 0161  
                             l2264 0131                               l3056 0500  
                             l2098 0B87                               l2346 0235  
                             l2370 001C                               l2282 082E  
                             l2258 0115                               l3074 0549  
                             l2196 0AB3                               l2188 0AA2  
                             l2276 016F                               l3148 07BB  
                             l3068 0529                               l2702 0B62  
                             l2392 0075                               l2376 0032  
                             l2560 08AF                               l2624 0DC8  
                             l2616 0DB7                               l2634 0DDB  
                             l2626 0DCA                               l2644 088C  
                             l2652 09D3                               l2388 006D  
                             l2804 0FE4                               l2566 08C0  
                             l2910 0E0B                               l2656 09E9  
                             l2832 044D                               l2904 0DF5  
                             l2842 0EA6                               l2932 0E65  
                             l2924 0E4C                               l2684 0993  
                             l2756 0F4F                               l2944 086C  
                             l2848 0EB9                               l2784 0F9F  
                             l2776 0F3E                               l2890 0CB3  
                             l2954 0CE3                               l2778 0F93  
                             l2876 0C7A                               l2868 0C6A  
                             l2980 0D2E                               l2972 0D13  
                             l2894 0CC1                               l2886 0CA8  
                             l2878 0C88                               l2982 0D3A  
                             l2974 0D21                               l2986 0D48  
                             ?_log 0047                               STR_1 101B  
                             STR_2 101B                               STR_3 101B  
                             u2005 0A9C                               u2015 0AA3  
                             u2205 083A                               _LATA 0016  
                             _LATB 0017                               u3015 0E1D  
                             u2055 0A40                               _LATC 0018  
                             u3025 0E2D                               u2090 00C4  
                             u2315 01DD                               u3035 0E4D  
                             u2075 0A5F                               u2155 014F  
                             u2405 0216                               u3045 0E5C  
                             u3125 0D14                               u3055 0E66  
                             u3215 0962                               u2345 01F0  
                             u2505 0076                               u3225 096C  
                             _T2PR 028D                               u2515 007C  
                             u3155 0D2F                               u3235 0974  
                             u2195 0835                               u1725 0901  
                             u2375 0203                               u3407 0A20  
                             u3095 0CEA                               u2545 0092  
                             u3417 0A2C                               u1905 0AE2  
                      main@counter 00BC                               u2570 094B  
                             u1835 0BBD                               u1755 0B7D  
                             u2555 0098                               u2475 003E  
                             u3507 0C36                               u3427 0BD6  
                             u3195 0958                               u1915 0AEC  
                             u2485 004E                               u3517 0C44  
                             u3437 0BE3                               u1925 0AF4  
                             u3357 0F8A                               u3285 052F  
                             u1775 0B96                               u3527 090D  
                             u3447 0BEE                               u3367 0FDC  
                             u3295 053B                               u3537 0918  
                             u3457 0BF7                               u3377 0FF6  
                             u1795 0BA3                               u3547 080C  
                             u3467 0C00                               u3387 0DAB  
                             u2765 17AE                               u3477 0C0D  
                             u3397 0A14                               u2925 0C7D  
                             u1885 0AD8                               u3487 0C1A  
                             u3497 0C27                               u2945 0C89  
                             u1985 0A8D                               u2955 0C9D  
                             u2965 0CA9                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B0                        main@seconds 00B9  
                             _main 045A                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             ltemp 007E                               start 0002  
               ??_LCD_Write_String 0077                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 00B9                       ___ftmul@sign 002F  
                     ___fttol@exp1 005B                       ___fttol@lval 0057  
                            ??_log 004A            __end_of_TMR0_Initialize 177D  
                 __end_of_LCD_Init 0C48                   __end_of_LCD_Port 17CD  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 173B                    __end_of___aldiv 0CCA  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0B09  
                            _ADPRE 009C                    __end_of___ftadd 027A  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0AB8  
                            _ADRPT 010D                    __end_of___ftdiv 0E87  
                  __end_of___ftneg 172B                    __end_of___ftmul 00B9  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0882  
                  __end_of___fttol 0D51                              _T2CON 028E  
              main@readTemperature 00C9                              _T2HLT 028F  
                  __end_of___lwdiv 0981                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 1753             __end_of_LCD_Set_Cursor 0A73  
                    ___awtoft@sign 007D                              _frexp 0981  
                            _errno 014B                      ___ftpack@sign 0074  
                            main@R 00B2                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 005C                     _LCD_Write_Char 08F1  
                  __initialization 07C2                        log@exponent 004B  
                     __end_of_main 07C2                   __end_of_Init_PID 08F1  
          __end_of_TMR2_Initialize 178C                             ??_main 00A6  
                    ___fttol@sign1 0056                  __end_of_LCD_Clear 1733  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 08A2  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0BCD  
                 __end_of___lbtoft 1800                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 179F  
                           _PID_Kd 0142                             _PID_Ki 0145  
                           _PID_Kp 00DA                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 091B  
                   __CFG_PWRTE$OFF 0000                             _Result 00E0  
                     _CCPTMRS1bits 021F                             ___ftge 09BC  
           LCD_Write_Int@numPlaces 005F                          ??___aldiv 0078  
                           ___wmul 082C                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0026  
                        ??___ftneg 0073                          ??___ftmul 0026  
                        ??___ftsub 007E                          ??___fttol 0052  
                        ??___lwdiv 007A                   ?_TMR0_Initialize 0070  
          __end_of_PWM6_Initialize 1760                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
            ___ftmul@f3_as_product 002B                    _ADCC_Initialize 17CD  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                 LCD_Write_Int@str 0066                      main@steinhart 00CB  
                  _InitCustomChars 08A2                    LCD_Set_Cursor@w 0078  
                  LCD_Set_Cursor@x 0076                    LCD_Set_Cursor@y 0073  
                  LCD_Set_Cursor@z 0077                  _SYSTEM_Initialize 09F8  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0061                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 004E  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK1 1720                       __pidataBANK2 0847  
              ??_SYSTEM_Initialize 0077                      __end_of_frexp 09BC  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
             __size_of_readButtons 008D                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0A34                         __pbssBANK1 00CE  
                       __pbssBANK2 013D                 __size_of_eval_poly 0060  
                        ?_Init_PID 0070                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070             __size_of_PID_Calculate 01E0  
                       __pmaintext 045A                            ?___ftge 003D  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 17E6         __end_of_PWM6_LoadDutyValue 17B5  
        __size_of_LCD_Write_String 001A                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                        ?___lbtoft 0078                            _ADSTPTH 0113  
                          _ADSTPTL 0112                          ?___lwtoft 0078  
          __end_of_InitCustomChars 08C8                            _LCD_Cmd 0800  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PWM6DCH 038D  
                          _PWM6DCL 038C                            _PWM6CON 038E  
                          _PPSLOCK 0E8F                         ??_Init_PID 0070  
            PID_Calculate@setpoint 0046                      ?_tempSetpoint 0070  
             __CFG_SCANE$available 0000                            ___aldiv 0C48  
                          ___cgram 0120                    __size_of___ftge 003C  
                          ___awdiv 0AB8                            ___ftadd 0184  
                          ___awmod 0A73                            ___ftdiv 0DDE  
                          ___ftneg 1723                    __size_of___wmul 001B  
                          ___ftmul 0005                            ___ftsub 0864  
                          ___fttol 0CCA                            ___lwdiv 094D  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 0020                  __end_of_eval_poly 0B69  
                 ??_LCD_Set_Cursor 0074                            __ptext1 0F37  
                          __ptext2 0D51                            __ptext3 0812  
                          __ptext4 00B9                            __ptext5 0A73  
                          __ptext6 0AB8                            __ptext7 0A34  
                          __ptext8 0E87                            __ptext9 0981  
                       ??___lwtoft 007B                      _PID_Calculate 027A  
            _OSCILLATOR_Initialize 1733                          _T2CONbits 028E  
                     __size_of_log 00B0                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 00EA                            _samples 238C  
                        _LCD_Clear 172B                            _presets 0138  
       __size_of_SYSTEM_Initialize 003C                            clrloop0 173C  
             end_of_initialization 07FD                            init_ram 1747  
                          initloop 1748                     ??_tempSetpoint 00A3  
                    _PID_MaxOutput 00EC                   ___aldiv@quotient 0022  
                LCD_Write_Int@sign 0060                      _PID_MinOutput 00E3  
              tempSetpoint@counter 006F                       __pstringtext 1000  
                 ?_ADCC_Initialize 0070   __end_of_ADCC_GetSingleConversion 176E  
            __CFG_WDTCPS$WDTCPS_31 0000                     ?_PID_Calculate 0046  
               _PID_Calculate$1054 004B                   ?_InitCustomChars 0070  
                       ?_LCD_Clear 0070                   __CFG_FEXTOSC$OFF 0000  
                LCD_Write_String@a 0075                  LCD_Write_String@i 0078  
                 ??_LCD_Write_Char 0071                        ___ftdiv@exp 002E  
                __size_of_LCD_Init 007B                         main@toggle 00B8  
                __size_of_LCD_Port 0018                         main@totals 00C1  
                      ___ftmul@exp 002A                     __end_of___ftge 09F8  
                   __end_of___wmul 0847                   _LCD_Write_String 0812  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07C2  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 0F37  
                       frexp@value 0070                    _DerivativeValue 00CE  
         LCD_Write_Int@fieldLength 005E                  __size_of_Init_PID 0029  
            __end_of_LCD_Write_Int 0184                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 0074  
                      __pdataBANK1 00EC                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 00A0  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                         ?_LCD_Cmd 0070                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 1760                  __size_of___ftpack 0064  
                __size_of___lbtoft 001A                        __pbssBIGRAM 238C  
                         LCD_Cmd@a 0072                          ___latbits 0002  
                __size_of___lwtoft 0013                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0               __end_of_tempSetpoint 1000  
               _PWM6_LoadDutyValue 179F           __size_of_TMR2_Initialize 000F  
                      ??_LCD_Clear 0073                ?_PWM6_LoadDutyValue 0070  
                        _main$1055 00B5                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 091B                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0030                           ?___awmod 0070  
                         ?___ftdiv 0020                           ?___ftneg 0070  
                         ?___ftmul 0020                           ?___ftsub 003D  
                         ?___fttol 004E                           ?___lwdiv 0076  
                  main@displayTemp 00C7               ??_PWM6_LoadDutyValue 0072  
                        _downCount 00E7                          _eval_poly 0B09  
              __end_of_readButtons 0DDE           __size_of_PWM6_Initialize 000D  
                 ___lwdiv@quotient 007B                     __size_of_frexp 003B  
                         _T2CLKCON 0290             main@readTemperatureOld 00C5  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0BCD  
                   ___wmul@product 0074                           _LCD_Port 17B5  
                        clear_ram0 173B                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
                         _ErrValue 00D4           __end_of_LCD_Write_String 082C  
                         _Init_PID 08C8                  ??_TMR2_Initialize 0070  
                        frexp@eptr 0073               main@firstTimeThrough 00BB  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 006D  
                   LCD_Write_Int@j 006B                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0D51  
                         ___awtoft 0882                           ___ftpack 0B69  
                         ___lbtoft 17E6              __size_of_tempSetpoint 00C9  
                         ___lwtoft 178C                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00E5  
                  ___lwdiv@divisor 0076                        _oldSetpoint 00E8  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0B09                           __ptext11 082C  
                         __ptext20 177D                           __ptext12 178C  
                         __ptext21 176E                           __ptext13 094D  
                         __ptext30 0800                           __ptext22 1753  
                         __ptext14 17E6                           __ptext31 17B5  
                         __ptext23 091B                           __ptext15 0CCA  
                         __ptext40 0B69                           __ptext32 17CD  
                         __ptext24 1733                           __ptext16 0864  
                         __ptext41 1760                           __ptext33 179F  
                         __ptext25 0BCD                           __ptext17 0DDE  
                         __ptext34 027A                           __ptext26 172B  
                         __ptext18 0C48                           __ptext35 1723  
                         __ptext27 08C8                           __ptext19 09F8  
                         __ptext36 0005                           __ptext28 08A2  
                         __ptext37 09BC                           __ptext29 08F1  
                         __ptext38 0184                           __ptext39 0882  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F13695 013D                  ??_PWM6_Initialize 0070  
                    __size_of_main 0368               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 0F37         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 00EE        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                   main@startupTimer 00BE  
               LCD_Set_Cursor@temp 0079                 LCD_Write_Int@value 005C  
            __end_of_PID_Calculate 045A                    _TMR0_Initialize 176E  
                   _PID_Integrated 00D7                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00CB        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 094D                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00BF                        _toggleCount 00E9  
                ??_InitCustomChars 0075  
