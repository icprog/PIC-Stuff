

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Oct 05 22:18:25 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5BC,52
    57                           	dabs	1,0x238C,0,_samples
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  001C                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0119                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011C                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0198                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  020F                     	;# 
   168  020F                     	;# 
   169  0210                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0218                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028D                     	;# 
   197  028E                     	;# 
   198  028F                     	;# 
   199  0290                     	;# 
   200  0290                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0296                     	;# 
   210  0297                     	;# 
   211  0298                     	;# 
   212  0298                     	;# 
   213  0299                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029C                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  030C                     	;# 
   221  030C                     	;# 
   222  030D                     	;# 
   223  030E                     	;# 
   224  030F                     	;# 
   225  0310                     	;# 
   226  0310                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0314                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  040C                     	;# 
   252  040D                     	;# 
   253  040E                     	;# 
   254  040F                     	;# 
   255  0410                     	;# 
   256  0411                     	;# 
   257  0416                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  0418                     	;# 
   262  0419                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  048C                     	;# 
   272  048C                     	;# 
   273  048D                     	;# 
   274  048E                     	;# 
   275  048F                     	;# 
   276  048F                     	;# 
   277  0490                     	;# 
   278  0491                     	;# 
   279  0492                     	;# 
   280  0492                     	;# 
   281  0493                     	;# 
   282  0494                     	;# 
   283  0495                     	;# 
   284  0495                     	;# 
   285  0496                     	;# 
   286  0497                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  050C                     	;# 
   294  050C                     	;# 
   295  050D                     	;# 
   296  050E                     	;# 
   297  050F                     	;# 
   298  050F                     	;# 
   299  0510                     	;# 
   300  0511                     	;# 
   301  0512                     	;# 
   302  0512                     	;# 
   303  0513                     	;# 
   304  0514                     	;# 
   305  0515                     	;# 
   306  0515                     	;# 
   307  0516                     	;# 
   308  0517                     	;# 
   309  0518                     	;# 
   310  0519                     	;# 
   311  051A                     	;# 
   312  051B                     	;# 
   313  051C                     	;# 
   314  051D                     	;# 
   315  058C                     	;# 
   316  058C                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0591                     	;# 
   323  0592                     	;# 
   324  0593                     	;# 
   325  060C                     	;# 
   326  060D                     	;# 
   327  060E                     	;# 
   328  060F                     	;# 
   329  0610                     	;# 
   330  0611                     	;# 
   331  0612                     	;# 
   332  0613                     	;# 
   333  0614                     	;# 
   334  0616                     	;# 
   335  0617                     	;# 
   336  0618                     	;# 
   337  0619                     	;# 
   338  061A                     	;# 
   339  061B                     	;# 
   340  061C                     	;# 
   341  061D                     	;# 
   342  061E                     	;# 
   343  068C                     	;# 
   344  068D                     	;# 
   345  068E                     	;# 
   346  068F                     	;# 
   347  0690                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  070C                     	;# 
   353  070D                     	;# 
   354  070E                     	;# 
   355  070F                     	;# 
   356  0710                     	;# 
   357  0711                     	;# 
   358  0712                     	;# 
   359  0713                     	;# 
   360  0714                     	;# 
   361  0716                     	;# 
   362  0717                     	;# 
   363  0718                     	;# 
   364  0719                     	;# 
   365  071A                     	;# 
   366  071B                     	;# 
   367  071C                     	;# 
   368  071D                     	;# 
   369  071E                     	;# 
   370  0796                     	;# 
   371  0797                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  079A                     	;# 
   375  079B                     	;# 
   376  080C                     	;# 
   377  080D                     	;# 
   378  080E                     	;# 
   379  080F                     	;# 
   380  0810                     	;# 
   381  0811                     	;# 
   382  0812                     	;# 
   383  0813                     	;# 
   384  0814                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  081E                     	;# 
   390  081F                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  089A                     	;# 
   405  089B                     	;# 
   406  090C                     	;# 
   407  090E                     	;# 
   408  090F                     	;# 
   409  091F                     	;# 
   410  091F                     	;# 
   411  098F                     	;# 
   412  098F                     	;# 
   413  0990                     	;# 
   414  0991                     	;# 
   415  0992                     	;# 
   416  0993                     	;# 
   417  0994                     	;# 
   418  0995                     	;# 
   419  0996                     	;# 
   420  0997                     	;# 
   421  0E0F                     	;# 
   422  0E10                     	;# 
   423  0E11                     	;# 
   424  0E12                     	;# 
   425  0E13                     	;# 
   426  0E14                     	;# 
   427  0E15                     	;# 
   428  0E16                     	;# 
   429  0E17                     	;# 
   430  0E18                     	;# 
   431  0E19                     	;# 
   432  0E1A                     	;# 
   433  0E1B                     	;# 
   434  0E1C                     	;# 
   435  0E1D                     	;# 
   436  0E1E                     	;# 
   437  0E1F                     	;# 
   438  0E20                     	;# 
   439  0E21                     	;# 
   440  0E22                     	;# 
   441  0E23                     	;# 
   442  0E24                     	;# 
   443  0E25                     	;# 
   444  0E26                     	;# 
   445  0E27                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E2C                     	;# 
   451  0E2D                     	;# 
   452  0E2E                     	;# 
   453  0E2F                     	;# 
   454  0E30                     	;# 
   455  0E31                     	;# 
   456  0E32                     	;# 
   457  0E33                     	;# 
   458  0E34                     	;# 
   459  0E35                     	;# 
   460  0E36                     	;# 
   461  0E37                     	;# 
   462  0E8F                     	;# 
   463  0E90                     	;# 
   464  0E91                     	;# 
   465  0E92                     	;# 
   466  0E93                     	;# 
   467  0E94                     	;# 
   468  0E95                     	;# 
   469  0E96                     	;# 
   470  0E97                     	;# 
   471  0E9C                     	;# 
   472  0E9D                     	;# 
   473  0E9E                     	;# 
   474  0EA1                     	;# 
   475  0EA2                     	;# 
   476  0EA3                     	;# 
   477  0EA4                     	;# 
   478  0EA5                     	;# 
   479  0EA9                     	;# 
   480  0EAA                     	;# 
   481  0EAB                     	;# 
   482  0EAC                     	;# 
   483  0EB1                     	;# 
   484  0EB2                     	;# 
   485  0EB3                     	;# 
   486  0EB8                     	;# 
   487  0EB9                     	;# 
   488  0EBA                     	;# 
   489  0EBB                     	;# 
   490  0EBC                     	;# 
   491  0EBD                     	;# 
   492  0EBE                     	;# 
   493  0EC3                     	;# 
   494  0EC5                     	;# 
   495  0EC6                     	;# 
   496  0EC7                     	;# 
   497  0EC8                     	;# 
   498  0EC9                     	;# 
   499  0ECA                     	;# 
   500  0ECB                     	;# 
   501  0ECC                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F38                     	;# 
   527  0F39                     	;# 
   528  0F3A                     	;# 
   529  0F3B                     	;# 
   530  0F3C                     	;# 
   531  0F3D                     	;# 
   532  0F3E                     	;# 
   533  0F3F                     	;# 
   534  0F40                     	;# 
   535  0F41                     	;# 
   536  0F43                     	;# 
   537  0F44                     	;# 
   538  0F45                     	;# 
   539  0F46                     	;# 
   540  0F47                     	;# 
   541  0F48                     	;# 
   542  0F49                     	;# 
   543  0F4A                     	;# 
   544  0F4B                     	;# 
   545  0F4C                     	;# 
   546  0F4E                     	;# 
   547  0F4F                     	;# 
   548  0F50                     	;# 
   549  0F51                     	;# 
   550  0F52                     	;# 
   551  0F53                     	;# 
   552  0F54                     	;# 
   553  0F55                     	;# 
   554  0F56                     	;# 
   555  0F57                     	;# 
   556  0F65                     	;# 
   557  0F68                     	;# 
   558  0F69                     	;# 
   559  0F6A                     	;# 
   560  0F6B                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  001C                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0110                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0114                     	;# 
   634  0115                     	;# 
   635  0116                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0119                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011C                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011D                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011E                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  018F                     	;# 
   667  0190                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0196                     	;# 
   671  0197                     	;# 
   672  0198                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  020C                     	;# 
   678  020D                     	;# 
   679  020E                     	;# 
   680  020F                     	;# 
   681  020F                     	;# 
   682  0210                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  0218                     	;# 
   696  0219                     	;# 
   697  021A                     	;# 
   698  021B                     	;# 
   699  021B                     	;# 
   700  021C                     	;# 
   701  021C                     	;# 
   702  021D                     	;# 
   703  021D                     	;# 
   704  021E                     	;# 
   705  021F                     	;# 
   706  028C                     	;# 
   707  028C                     	;# 
   708  028D                     	;# 
   709  028D                     	;# 
   710  028E                     	;# 
   711  028F                     	;# 
   712  0290                     	;# 
   713  0290                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0292                     	;# 
   717  0293                     	;# 
   718  0293                     	;# 
   719  0294                     	;# 
   720  0295                     	;# 
   721  0296                     	;# 
   722  0296                     	;# 
   723  0297                     	;# 
   724  0298                     	;# 
   725  0298                     	;# 
   726  0299                     	;# 
   727  0299                     	;# 
   728  029A                     	;# 
   729  029B                     	;# 
   730  029C                     	;# 
   731  029C                     	;# 
   732  029D                     	;# 
   733  030C                     	;# 
   734  030C                     	;# 
   735  030D                     	;# 
   736  030E                     	;# 
   737  030F                     	;# 
   738  0310                     	;# 
   739  0310                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0314                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0317                     	;# 
   748  0318                     	;# 
   749  0318                     	;# 
   750  0319                     	;# 
   751  031A                     	;# 
   752  031B                     	;# 
   753  031C                     	;# 
   754  031C                     	;# 
   755  031D                     	;# 
   756  031E                     	;# 
   757  031F                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  040C                     	;# 
   765  040D                     	;# 
   766  040E                     	;# 
   767  040F                     	;# 
   768  0410                     	;# 
   769  0411                     	;# 
   770  0416                     	;# 
   771  0416                     	;# 
   772  0417                     	;# 
   773  0418                     	;# 
   774  0418                     	;# 
   775  0419                     	;# 
   776  041A                     	;# 
   777  041A                     	;# 
   778  041B                     	;# 
   779  041C                     	;# 
   780  041C                     	;# 
   781  041D                     	;# 
   782  041E                     	;# 
   783  041F                     	;# 
   784  048C                     	;# 
   785  048C                     	;# 
   786  048D                     	;# 
   787  048E                     	;# 
   788  048F                     	;# 
   789  048F                     	;# 
   790  0490                     	;# 
   791  0491                     	;# 
   792  0492                     	;# 
   793  0492                     	;# 
   794  0493                     	;# 
   795  0494                     	;# 
   796  0495                     	;# 
   797  0495                     	;# 
   798  0496                     	;# 
   799  0497                     	;# 
   800  0498                     	;# 
   801  0499                     	;# 
   802  049A                     	;# 
   803  049B                     	;# 
   804  049C                     	;# 
   805  049D                     	;# 
   806  050C                     	;# 
   807  050C                     	;# 
   808  050D                     	;# 
   809  050E                     	;# 
   810  050F                     	;# 
   811  050F                     	;# 
   812  0510                     	;# 
   813  0511                     	;# 
   814  0512                     	;# 
   815  0512                     	;# 
   816  0513                     	;# 
   817  0514                     	;# 
   818  0515                     	;# 
   819  0515                     	;# 
   820  0516                     	;# 
   821  0517                     	;# 
   822  0518                     	;# 
   823  0519                     	;# 
   824  051A                     	;# 
   825  051B                     	;# 
   826  051C                     	;# 
   827  051D                     	;# 
   828  058C                     	;# 
   829  058C                     	;# 
   830  058D                     	;# 
   831  058E                     	;# 
   832  058F                     	;# 
   833  058F                     	;# 
   834  0590                     	;# 
   835  0591                     	;# 
   836  0592                     	;# 
   837  0593                     	;# 
   838  060C                     	;# 
   839  060D                     	;# 
   840  060E                     	;# 
   841  060F                     	;# 
   842  0610                     	;# 
   843  0611                     	;# 
   844  0612                     	;# 
   845  0613                     	;# 
   846  0614                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061D                     	;# 
   855  061E                     	;# 
   856  068C                     	;# 
   857  068D                     	;# 
   858  068E                     	;# 
   859  068F                     	;# 
   860  0690                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  070C                     	;# 
   866  070D                     	;# 
   867  070E                     	;# 
   868  070F                     	;# 
   869  0710                     	;# 
   870  0711                     	;# 
   871  0712                     	;# 
   872  0713                     	;# 
   873  0714                     	;# 
   874  0716                     	;# 
   875  0717                     	;# 
   876  0718                     	;# 
   877  0719                     	;# 
   878  071A                     	;# 
   879  071B                     	;# 
   880  071C                     	;# 
   881  071D                     	;# 
   882  071E                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081B                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  091F                     	;# 
   924  098F                     	;# 
   925  098F                     	;# 
   926  0990                     	;# 
   927  0991                     	;# 
   928  0992                     	;# 
   929  0993                     	;# 
   930  0994                     	;# 
   931  0995                     	;# 
   932  0996                     	;# 
   933  0997                     	;# 
   934  0E0F                     	;# 
   935  0E10                     	;# 
   936  0E11                     	;# 
   937  0E12                     	;# 
   938  0E13                     	;# 
   939  0E14                     	;# 
   940  0E15                     	;# 
   941  0E16                     	;# 
   942  0E17                     	;# 
   943  0E18                     	;# 
   944  0E19                     	;# 
   945  0E1A                     	;# 
   946  0E1B                     	;# 
   947  0E1C                     	;# 
   948  0E1D                     	;# 
   949  0E1E                     	;# 
   950  0E1F                     	;# 
   951  0E20                     	;# 
   952  0E21                     	;# 
   953  0E22                     	;# 
   954  0E23                     	;# 
   955  0E24                     	;# 
   956  0E25                     	;# 
   957  0E26                     	;# 
   958  0E27                     	;# 
   959  0E28                     	;# 
   960  0E29                     	;# 
   961  0E2A                     	;# 
   962  0E2B                     	;# 
   963  0E2C                     	;# 
   964  0E2D                     	;# 
   965  0E2E                     	;# 
   966  0E2F                     	;# 
   967  0E30                     	;# 
   968  0E31                     	;# 
   969  0E32                     	;# 
   970  0E33                     	;# 
   971  0E34                     	;# 
   972  0E35                     	;# 
   973  0E36                     	;# 
   974  0E37                     	;# 
   975  0E8F                     	;# 
   976  0E90                     	;# 
   977  0E91                     	;# 
   978  0E92                     	;# 
   979  0E93                     	;# 
   980  0E94                     	;# 
   981  0E95                     	;# 
   982  0E96                     	;# 
   983  0E97                     	;# 
   984  0E9C                     	;# 
   985  0E9D                     	;# 
   986  0E9E                     	;# 
   987  0EA1                     	;# 
   988  0EA2                     	;# 
   989  0EA3                     	;# 
   990  0EA4                     	;# 
   991  0EA5                     	;# 
   992  0EA9                     	;# 
   993  0EAA                     	;# 
   994  0EAB                     	;# 
   995  0EAC                     	;# 
   996  0EB1                     	;# 
   997  0EB2                     	;# 
   998  0EB3                     	;# 
   999  0EB8                     	;# 
  1000  0EB9                     	;# 
  1001  0EBA                     	;# 
  1002  0EBB                     	;# 
  1003  0EBC                     	;# 
  1004  0EBD                     	;# 
  1005  0EBE                     	;# 
  1006  0EC3                     	;# 
  1007  0EC5                     	;# 
  1008  0EC6                     	;# 
  1009  0EC7                     	;# 
  1010  0EC8                     	;# 
  1011  0EC9                     	;# 
  1012  0ECA                     	;# 
  1013  0ECB                     	;# 
  1014  0ECC                     	;# 
  1015  0F10                     	;# 
  1016  0F11                     	;# 
  1017  0F12                     	;# 
  1018  0F13                     	;# 
  1019  0F14                     	;# 
  1020  0F15                     	;# 
  1021  0F16                     	;# 
  1022  0F17                     	;# 
  1023  0F18                     	;# 
  1024  0F19                     	;# 
  1025  0F1A                     	;# 
  1026  0F1B                     	;# 
  1027  0F1C                     	;# 
  1028  0F1D                     	;# 
  1029  0F1E                     	;# 
  1030  0F1F                     	;# 
  1031  0F20                     	;# 
  1032  0F21                     	;# 
  1033  0F22                     	;# 
  1034  0F23                     	;# 
  1035  0F24                     	;# 
  1036  0F25                     	;# 
  1037  0F26                     	;# 
  1038  0F27                     	;# 
  1039  0F38                     	;# 
  1040  0F39                     	;# 
  1041  0F3A                     	;# 
  1042  0F3B                     	;# 
  1043  0F3C                     	;# 
  1044  0F3D                     	;# 
  1045  0F3E                     	;# 
  1046  0F3F                     	;# 
  1047  0F40                     	;# 
  1048  0F41                     	;# 
  1049  0F43                     	;# 
  1050  0F44                     	;# 
  1051  0F45                     	;# 
  1052  0F46                     	;# 
  1053  0F47                     	;# 
  1054  0F48                     	;# 
  1055  0F49                     	;# 
  1056  0F4A                     	;# 
  1057  0F4B                     	;# 
  1058  0F4C                     	;# 
  1059  0F4E                     	;# 
  1060  0F4F                     	;# 
  1061  0F50                     	;# 
  1062  0F51                     	;# 
  1063  0F52                     	;# 
  1064  0F53                     	;# 
  1065  0F54                     	;# 
  1066  0F55                     	;# 
  1067  0F56                     	;# 
  1068  0F57                     	;# 
  1069  0F65                     	;# 
  1070  0F68                     	;# 
  1071  0F69                     	;# 
  1072  0F6A                     	;# 
  1073  0F6B                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0010                     	;# 
  1101  0011                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  001C                     	;# 
  1108  001C                     	;# 
  1109  001D                     	;# 
  1110  001D                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008C                     	;# 
  1115  008D                     	;# 
  1116  008E                     	;# 
  1117  008E                     	;# 
  1118  008F                     	;# 
  1119  0090                     	;# 
  1120  0090                     	;# 
  1121  0091                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  010E                     	;# 
  1138  010F                     	;# 
  1139  0110                     	;# 
  1140  0110                     	;# 
  1141  0111                     	;# 
  1142  0112                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0119                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011C                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011D                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011E                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178  018E                     	;# 
  1179  018F                     	;# 
  1180  0190                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0198                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019C                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020F                     	;# 
  1194  020F                     	;# 
  1195  0210                     	;# 
  1196  0210                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0213                     	;# 
  1201  0214                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0216                     	;# 
  1205  0216                     	;# 
  1206  0217                     	;# 
  1207  0217                     	;# 
  1208  0218                     	;# 
  1209  0219                     	;# 
  1210  021A                     	;# 
  1211  021B                     	;# 
  1212  021B                     	;# 
  1213  021C                     	;# 
  1214  021C                     	;# 
  1215  021D                     	;# 
  1216  021D                     	;# 
  1217  021E                     	;# 
  1218  021F                     	;# 
  1219  028C                     	;# 
  1220  028C                     	;# 
  1221  028D                     	;# 
  1222  028D                     	;# 
  1223  028E                     	;# 
  1224  028F                     	;# 
  1225  0290                     	;# 
  1226  0290                     	;# 
  1227  0291                     	;# 
  1228  0292                     	;# 
  1229  0292                     	;# 
  1230  0293                     	;# 
  1231  0293                     	;# 
  1232  0294                     	;# 
  1233  0295                     	;# 
  1234  0296                     	;# 
  1235  0296                     	;# 
  1236  0297                     	;# 
  1237  0298                     	;# 
  1238  0298                     	;# 
  1239  0299                     	;# 
  1240  0299                     	;# 
  1241  029A                     	;# 
  1242  029B                     	;# 
  1243  029C                     	;# 
  1244  029C                     	;# 
  1245  029D                     	;# 
  1246  030C                     	;# 
  1247  030C                     	;# 
  1248  030D                     	;# 
  1249  030E                     	;# 
  1250  030F                     	;# 
  1251  0310                     	;# 
  1252  0310                     	;# 
  1253  0311                     	;# 
  1254  0312                     	;# 
  1255  0313                     	;# 
  1256  0314                     	;# 
  1257  0314                     	;# 
  1258  0315                     	;# 
  1259  0316                     	;# 
  1260  0317                     	;# 
  1261  0318                     	;# 
  1262  0318                     	;# 
  1263  0319                     	;# 
  1264  031A                     	;# 
  1265  031B                     	;# 
  1266  031C                     	;# 
  1267  031C                     	;# 
  1268  031D                     	;# 
  1269  031E                     	;# 
  1270  031F                     	;# 
  1271  038C                     	;# 
  1272  038D                     	;# 
  1273  038E                     	;# 
  1274  0390                     	;# 
  1275  0391                     	;# 
  1276  0392                     	;# 
  1277  040C                     	;# 
  1278  040D                     	;# 
  1279  040E                     	;# 
  1280  040F                     	;# 
  1281  0410                     	;# 
  1282  0411                     	;# 
  1283  0416                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  0418                     	;# 
  1287  0418                     	;# 
  1288  0419                     	;# 
  1289  041A                     	;# 
  1290  041A                     	;# 
  1291  041B                     	;# 
  1292  041C                     	;# 
  1293  041C                     	;# 
  1294  041D                     	;# 
  1295  041E                     	;# 
  1296  041F                     	;# 
  1297  048C                     	;# 
  1298  048C                     	;# 
  1299  048D                     	;# 
  1300  048E                     	;# 
  1301  048F                     	;# 
  1302  048F                     	;# 
  1303  0490                     	;# 
  1304  0491                     	;# 
  1305  0492                     	;# 
  1306  0492                     	;# 
  1307  0493                     	;# 
  1308  0494                     	;# 
  1309  0495                     	;# 
  1310  0495                     	;# 
  1311  0496                     	;# 
  1312  0497                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  050C                     	;# 
  1320  050C                     	;# 
  1321  050D                     	;# 
  1322  050E                     	;# 
  1323  050F                     	;# 
  1324  050F                     	;# 
  1325  0510                     	;# 
  1326  0511                     	;# 
  1327  0512                     	;# 
  1328  0512                     	;# 
  1329  0513                     	;# 
  1330  0514                     	;# 
  1331  0515                     	;# 
  1332  0515                     	;# 
  1333  0516                     	;# 
  1334  0517                     	;# 
  1335  0518                     	;# 
  1336  0519                     	;# 
  1337  051A                     	;# 
  1338  051B                     	;# 
  1339  051C                     	;# 
  1340  051D                     	;# 
  1341  058C                     	;# 
  1342  058C                     	;# 
  1343  058D                     	;# 
  1344  058E                     	;# 
  1345  058F                     	;# 
  1346  058F                     	;# 
  1347  0590                     	;# 
  1348  0591                     	;# 
  1349  0592                     	;# 
  1350  0593                     	;# 
  1351  060C                     	;# 
  1352  060D                     	;# 
  1353  060E                     	;# 
  1354  060F                     	;# 
  1355  0610                     	;# 
  1356  0611                     	;# 
  1357  0612                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  061A                     	;# 
  1365  061B                     	;# 
  1366  061C                     	;# 
  1367  061D                     	;# 
  1368  061E                     	;# 
  1369  068C                     	;# 
  1370  068D                     	;# 
  1371  068E                     	;# 
  1372  068F                     	;# 
  1373  0690                     	;# 
  1374  0691                     	;# 
  1375  0692                     	;# 
  1376  0693                     	;# 
  1377  0694                     	;# 
  1378  070C                     	;# 
  1379  070D                     	;# 
  1380  070E                     	;# 
  1381  070F                     	;# 
  1382  0710                     	;# 
  1383  0711                     	;# 
  1384  0712                     	;# 
  1385  0713                     	;# 
  1386  0714                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  071A                     	;# 
  1392  071B                     	;# 
  1393  071C                     	;# 
  1394  071D                     	;# 
  1395  071E                     	;# 
  1396  0796                     	;# 
  1397  0797                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  080C                     	;# 
  1403  080D                     	;# 
  1404  080E                     	;# 
  1405  080F                     	;# 
  1406  0810                     	;# 
  1407  0811                     	;# 
  1408  0812                     	;# 
  1409  0813                     	;# 
  1410  0814                     	;# 
  1411  081A                     	;# 
  1412  081B                     	;# 
  1413  081C                     	;# 
  1414  081D                     	;# 
  1415  081E                     	;# 
  1416  081F                     	;# 
  1417  088C                     	;# 
  1418  088D                     	;# 
  1419  088E                     	;# 
  1420  088F                     	;# 
  1421  0890                     	;# 
  1422  0891                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0897                     	;# 
  1428  0898                     	;# 
  1429  0899                     	;# 
  1430  089A                     	;# 
  1431  089B                     	;# 
  1432  090C                     	;# 
  1433  090E                     	;# 
  1434  090F                     	;# 
  1435  091F                     	;# 
  1436  091F                     	;# 
  1437  098F                     	;# 
  1438  098F                     	;# 
  1439  0990                     	;# 
  1440  0991                     	;# 
  1441  0992                     	;# 
  1442  0993                     	;# 
  1443  0994                     	;# 
  1444  0995                     	;# 
  1445  0996                     	;# 
  1446  0997                     	;# 
  1447  0E0F                     	;# 
  1448  0E10                     	;# 
  1449  0E11                     	;# 
  1450  0E12                     	;# 
  1451  0E13                     	;# 
  1452  0E14                     	;# 
  1453  0E15                     	;# 
  1454  0E16                     	;# 
  1455  0E17                     	;# 
  1456  0E18                     	;# 
  1457  0E19                     	;# 
  1458  0E1A                     	;# 
  1459  0E1B                     	;# 
  1460  0E1C                     	;# 
  1461  0E1D                     	;# 
  1462  0E1E                     	;# 
  1463  0E1F                     	;# 
  1464  0E20                     	;# 
  1465  0E21                     	;# 
  1466  0E22                     	;# 
  1467  0E23                     	;# 
  1468  0E24                     	;# 
  1469  0E25                     	;# 
  1470  0E26                     	;# 
  1471  0E27                     	;# 
  1472  0E28                     	;# 
  1473  0E29                     	;# 
  1474  0E2A                     	;# 
  1475  0E2B                     	;# 
  1476  0E2C                     	;# 
  1477  0E2D                     	;# 
  1478  0E2E                     	;# 
  1479  0E2F                     	;# 
  1480  0E30                     	;# 
  1481  0E31                     	;# 
  1482  0E32                     	;# 
  1483  0E33                     	;# 
  1484  0E34                     	;# 
  1485  0E35                     	;# 
  1486  0E36                     	;# 
  1487  0E37                     	;# 
  1488  0E8F                     	;# 
  1489  0E90                     	;# 
  1490  0E91                     	;# 
  1491  0E92                     	;# 
  1492  0E93                     	;# 
  1493  0E94                     	;# 
  1494  0E95                     	;# 
  1495  0E96                     	;# 
  1496  0E97                     	;# 
  1497  0E9C                     	;# 
  1498  0E9D                     	;# 
  1499  0E9E                     	;# 
  1500  0EA1                     	;# 
  1501  0EA2                     	;# 
  1502  0EA3                     	;# 
  1503  0EA4                     	;# 
  1504  0EA5                     	;# 
  1505  0EA9                     	;# 
  1506  0EAA                     	;# 
  1507  0EAB                     	;# 
  1508  0EAC                     	;# 
  1509  0EB1                     	;# 
  1510  0EB2                     	;# 
  1511  0EB3                     	;# 
  1512  0EB8                     	;# 
  1513  0EB9                     	;# 
  1514  0EBA                     	;# 
  1515  0EBB                     	;# 
  1516  0EBC                     	;# 
  1517  0EBD                     	;# 
  1518  0EBE                     	;# 
  1519  0EC3                     	;# 
  1520  0EC5                     	;# 
  1521  0EC6                     	;# 
  1522  0EC7                     	;# 
  1523  0EC8                     	;# 
  1524  0EC9                     	;# 
  1525  0ECA                     	;# 
  1526  0ECB                     	;# 
  1527  0ECC                     	;# 
  1528  0F10                     	;# 
  1529  0F11                     	;# 
  1530  0F12                     	;# 
  1531  0F13                     	;# 
  1532  0F14                     	;# 
  1533  0F15                     	;# 
  1534  0F16                     	;# 
  1535  0F17                     	;# 
  1536  0F18                     	;# 
  1537  0F19                     	;# 
  1538  0F1A                     	;# 
  1539  0F1B                     	;# 
  1540  0F1C                     	;# 
  1541  0F1D                     	;# 
  1542  0F1E                     	;# 
  1543  0F1F                     	;# 
  1544  0F20                     	;# 
  1545  0F21                     	;# 
  1546  0F22                     	;# 
  1547  0F23                     	;# 
  1548  0F24                     	;# 
  1549  0F25                     	;# 
  1550  0F26                     	;# 
  1551  0F27                     	;# 
  1552  0F38                     	;# 
  1553  0F39                     	;# 
  1554  0F3A                     	;# 
  1555  0F3B                     	;# 
  1556  0F3C                     	;# 
  1557  0F3D                     	;# 
  1558  0F3E                     	;# 
  1559  0F3F                     	;# 
  1560  0F40                     	;# 
  1561  0F41                     	;# 
  1562  0F43                     	;# 
  1563  0F44                     	;# 
  1564  0F45                     	;# 
  1565  0F46                     	;# 
  1566  0F47                     	;# 
  1567  0F48                     	;# 
  1568  0F49                     	;# 
  1569  0F4A                     	;# 
  1570  0F4B                     	;# 
  1571  0F4C                     	;# 
  1572  0F4E                     	;# 
  1573  0F4F                     	;# 
  1574  0F50                     	;# 
  1575  0F51                     	;# 
  1576  0F52                     	;# 
  1577  0F53                     	;# 
  1578  0F54                     	;# 
  1579  0F55                     	;# 
  1580  0F56                     	;# 
  1581  0F57                     	;# 
  1582  0F65                     	;# 
  1583  0F68                     	;# 
  1584  0F69                     	;# 
  1585  0F6A                     	;# 
  1586  0F6B                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598  0000                     	;# 
  1599  0001                     	;# 
  1600  0002                     	;# 
  1601  0003                     	;# 
  1602  0004                     	;# 
  1603  0005                     	;# 
  1604  0006                     	;# 
  1605  0007                     	;# 
  1606  0008                     	;# 
  1607  0009                     	;# 
  1608  000A                     	;# 
  1609  000B                     	;# 
  1610  000C                     	;# 
  1611  000D                     	;# 
  1612  000E                     	;# 
  1613  0010                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0013                     	;# 
  1617  0016                     	;# 
  1618  0017                     	;# 
  1619  0018                     	;# 
  1620  001C                     	;# 
  1621  001C                     	;# 
  1622  001D                     	;# 
  1623  001D                     	;# 
  1624  001E                     	;# 
  1625  001F                     	;# 
  1626  008C                     	;# 
  1627  008C                     	;# 
  1628  008D                     	;# 
  1629  008E                     	;# 
  1630  008E                     	;# 
  1631  008F                     	;# 
  1632  0090                     	;# 
  1633  0090                     	;# 
  1634  0091                     	;# 
  1635  0093                     	;# 
  1636  0094                     	;# 
  1637  0095                     	;# 
  1638  0096                     	;# 
  1639  0097                     	;# 
  1640  0098                     	;# 
  1641  0099                     	;# 
  1642  009A                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  010E                     	;# 
  1651  010F                     	;# 
  1652  0110                     	;# 
  1653  0110                     	;# 
  1654  0111                     	;# 
  1655  0112                     	;# 
  1656  0112                     	;# 
  1657  0113                     	;# 
  1658  0114                     	;# 
  1659  0114                     	;# 
  1660  0115                     	;# 
  1661  0116                     	;# 
  1662  0116                     	;# 
  1663  0117                     	;# 
  1664  0119                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  011A                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011C                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011E                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  018C                     	;# 
  1690  018D                     	;# 
  1691  018E                     	;# 
  1692  018F                     	;# 
  1693  0190                     	;# 
  1694  0191                     	;# 
  1695  0192                     	;# 
  1696  0196                     	;# 
  1697  0197                     	;# 
  1698  0198                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  020C                     	;# 
  1704  020D                     	;# 
  1705  020E                     	;# 
  1706  020F                     	;# 
  1707  020F                     	;# 
  1708  0210                     	;# 
  1709  0210                     	;# 
  1710  0211                     	;# 
  1711  0211                     	;# 
  1712  0212                     	;# 
  1713  0213                     	;# 
  1714  0214                     	;# 
  1715  0215                     	;# 
  1716  0215                     	;# 
  1717  0216                     	;# 
  1718  0216                     	;# 
  1719  0217                     	;# 
  1720  0217                     	;# 
  1721  0218                     	;# 
  1722  0219                     	;# 
  1723  021A                     	;# 
  1724  021B                     	;# 
  1725  021B                     	;# 
  1726  021C                     	;# 
  1727  021C                     	;# 
  1728  021D                     	;# 
  1729  021D                     	;# 
  1730  021E                     	;# 
  1731  021F                     	;# 
  1732  028C                     	;# 
  1733  028C                     	;# 
  1734  028D                     	;# 
  1735  028D                     	;# 
  1736  028E                     	;# 
  1737  028F                     	;# 
  1738  0290                     	;# 
  1739  0290                     	;# 
  1740  0291                     	;# 
  1741  0292                     	;# 
  1742  0292                     	;# 
  1743  0293                     	;# 
  1744  0293                     	;# 
  1745  0294                     	;# 
  1746  0295                     	;# 
  1747  0296                     	;# 
  1748  0296                     	;# 
  1749  0297                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  0299                     	;# 
  1754  029A                     	;# 
  1755  029B                     	;# 
  1756  029C                     	;# 
  1757  029C                     	;# 
  1758  029D                     	;# 
  1759  030C                     	;# 
  1760  030C                     	;# 
  1761  030D                     	;# 
  1762  030E                     	;# 
  1763  030F                     	;# 
  1764  0310                     	;# 
  1765  0310                     	;# 
  1766  0311                     	;# 
  1767  0312                     	;# 
  1768  0313                     	;# 
  1769  0314                     	;# 
  1770  0314                     	;# 
  1771  0315                     	;# 
  1772  0316                     	;# 
  1773  0317                     	;# 
  1774  0318                     	;# 
  1775  0318                     	;# 
  1776  0319                     	;# 
  1777  031A                     	;# 
  1778  031B                     	;# 
  1779  031C                     	;# 
  1780  031C                     	;# 
  1781  031D                     	;# 
  1782  031E                     	;# 
  1783  031F                     	;# 
  1784  038C                     	;# 
  1785  038D                     	;# 
  1786  038E                     	;# 
  1787  0390                     	;# 
  1788  0391                     	;# 
  1789  0392                     	;# 
  1790  040C                     	;# 
  1791  040D                     	;# 
  1792  040E                     	;# 
  1793  040F                     	;# 
  1794  0410                     	;# 
  1795  0411                     	;# 
  1796  0416                     	;# 
  1797  0416                     	;# 
  1798  0417                     	;# 
  1799  0418                     	;# 
  1800  0418                     	;# 
  1801  0419                     	;# 
  1802  041A                     	;# 
  1803  041A                     	;# 
  1804  041B                     	;# 
  1805  041C                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  041F                     	;# 
  1810  048C                     	;# 
  1811  048C                     	;# 
  1812  048D                     	;# 
  1813  048E                     	;# 
  1814  048F                     	;# 
  1815  048F                     	;# 
  1816  0490                     	;# 
  1817  0491                     	;# 
  1818  0492                     	;# 
  1819  0492                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0495                     	;# 
  1823  0495                     	;# 
  1824  0496                     	;# 
  1825  0497                     	;# 
  1826  0498                     	;# 
  1827  0499                     	;# 
  1828  049A                     	;# 
  1829  049B                     	;# 
  1830  049C                     	;# 
  1831  049D                     	;# 
  1832  050C                     	;# 
  1833  050C                     	;# 
  1834  050D                     	;# 
  1835  050E                     	;# 
  1836  050F                     	;# 
  1837  050F                     	;# 
  1838  0510                     	;# 
  1839  0511                     	;# 
  1840  0512                     	;# 
  1841  0512                     	;# 
  1842  0513                     	;# 
  1843  0514                     	;# 
  1844  0515                     	;# 
  1845  0515                     	;# 
  1846  0516                     	;# 
  1847  0517                     	;# 
  1848  0518                     	;# 
  1849  0519                     	;# 
  1850  051A                     	;# 
  1851  051B                     	;# 
  1852  051C                     	;# 
  1853  051D                     	;# 
  1854  058C                     	;# 
  1855  058C                     	;# 
  1856  058D                     	;# 
  1857  058E                     	;# 
  1858  058F                     	;# 
  1859  058F                     	;# 
  1860  0590                     	;# 
  1861  0591                     	;# 
  1862  0592                     	;# 
  1863  0593                     	;# 
  1864  060C                     	;# 
  1865  060D                     	;# 
  1866  060E                     	;# 
  1867  060F                     	;# 
  1868  0610                     	;# 
  1869  0611                     	;# 
  1870  0612                     	;# 
  1871  0613                     	;# 
  1872  0614                     	;# 
  1873  0616                     	;# 
  1874  0617                     	;# 
  1875  0618                     	;# 
  1876  0619                     	;# 
  1877  061A                     	;# 
  1878  061B                     	;# 
  1879  061C                     	;# 
  1880  061D                     	;# 
  1881  061E                     	;# 
  1882  068C                     	;# 
  1883  068D                     	;# 
  1884  068E                     	;# 
  1885  068F                     	;# 
  1886  0690                     	;# 
  1887  0691                     	;# 
  1888  0692                     	;# 
  1889  0693                     	;# 
  1890  0694                     	;# 
  1891  070C                     	;# 
  1892  070D                     	;# 
  1893  070E                     	;# 
  1894  070F                     	;# 
  1895  0710                     	;# 
  1896  0711                     	;# 
  1897  0712                     	;# 
  1898  0713                     	;# 
  1899  0714                     	;# 
  1900  0716                     	;# 
  1901  0717                     	;# 
  1902  0718                     	;# 
  1903  0719                     	;# 
  1904  071A                     	;# 
  1905  071B                     	;# 
  1906  071C                     	;# 
  1907  071D                     	;# 
  1908  071E                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081B                     	;# 
  1926  081C                     	;# 
  1927  081D                     	;# 
  1928  081E                     	;# 
  1929  081F                     	;# 
  1930  088C                     	;# 
  1931  088D                     	;# 
  1932  088E                     	;# 
  1933  088F                     	;# 
  1934  0890                     	;# 
  1935  0891                     	;# 
  1936  0892                     	;# 
  1937  0893                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0897                     	;# 
  1941  0898                     	;# 
  1942  0899                     	;# 
  1943  089A                     	;# 
  1944  089B                     	;# 
  1945  090C                     	;# 
  1946  090E                     	;# 
  1947  090F                     	;# 
  1948  091F                     	;# 
  1949  091F                     	;# 
  1950  098F                     	;# 
  1951  098F                     	;# 
  1952  0990                     	;# 
  1953  0991                     	;# 
  1954  0992                     	;# 
  1955  0993                     	;# 
  1956  0994                     	;# 
  1957  0995                     	;# 
  1958  0996                     	;# 
  1959  0997                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E23                     	;# 
  1981  0E24                     	;# 
  1982  0E25                     	;# 
  1983  0E26                     	;# 
  1984  0E27                     	;# 
  1985  0E28                     	;# 
  1986  0E29                     	;# 
  1987  0E2A                     	;# 
  1988  0E2B                     	;# 
  1989  0E2C                     	;# 
  1990  0E2D                     	;# 
  1991  0E2E                     	;# 
  1992  0E2F                     	;# 
  1993  0E30                     	;# 
  1994  0E31                     	;# 
  1995  0E32                     	;# 
  1996  0E33                     	;# 
  1997  0E34                     	;# 
  1998  0E35                     	;# 
  1999  0E36                     	;# 
  2000  0E37                     	;# 
  2001  0E8F                     	;# 
  2002  0E90                     	;# 
  2003  0E91                     	;# 
  2004  0E92                     	;# 
  2005  0E93                     	;# 
  2006  0E94                     	;# 
  2007  0E95                     	;# 
  2008  0E96                     	;# 
  2009  0E97                     	;# 
  2010  0E9C                     	;# 
  2011  0E9D                     	;# 
  2012  0E9E                     	;# 
  2013  0EA1                     	;# 
  2014  0EA2                     	;# 
  2015  0EA3                     	;# 
  2016  0EA4                     	;# 
  2017  0EA5                     	;# 
  2018  0EA9                     	;# 
  2019  0EAA                     	;# 
  2020  0EAB                     	;# 
  2021  0EAC                     	;# 
  2022  0EB1                     	;# 
  2023  0EB2                     	;# 
  2024  0EB3                     	;# 
  2025  0EB8                     	;# 
  2026  0EB9                     	;# 
  2027  0EBA                     	;# 
  2028  0EBB                     	;# 
  2029  0EBC                     	;# 
  2030  0EBD                     	;# 
  2031  0EBE                     	;# 
  2032  0EC3                     	;# 
  2033  0EC5                     	;# 
  2034  0EC6                     	;# 
  2035  0EC7                     	;# 
  2036  0EC8                     	;# 
  2037  0EC9                     	;# 
  2038  0ECA                     	;# 
  2039  0ECB                     	;# 
  2040  0ECC                     	;# 
  2041  0F10                     	;# 
  2042  0F11                     	;# 
  2043  0F12                     	;# 
  2044  0F13                     	;# 
  2045  0F14                     	;# 
  2046  0F15                     	;# 
  2047  0F16                     	;# 
  2048  0F17                     	;# 
  2049  0F18                     	;# 
  2050  0F19                     	;# 
  2051  0F1A                     	;# 
  2052  0F1B                     	;# 
  2053  0F1C                     	;# 
  2054  0F1D                     	;# 
  2055  0F1E                     	;# 
  2056  0F1F                     	;# 
  2057  0F20                     	;# 
  2058  0F21                     	;# 
  2059  0F22                     	;# 
  2060  0F23                     	;# 
  2061  0F24                     	;# 
  2062  0F25                     	;# 
  2063  0F26                     	;# 
  2064  0F27                     	;# 
  2065  0F38                     	;# 
  2066  0F39                     	;# 
  2067  0F3A                     	;# 
  2068  0F3B                     	;# 
  2069  0F3C                     	;# 
  2070  0F3D                     	;# 
  2071  0F3E                     	;# 
  2072  0F3F                     	;# 
  2073  0F40                     	;# 
  2074  0F41                     	;# 
  2075  0F43                     	;# 
  2076  0F44                     	;# 
  2077  0F45                     	;# 
  2078  0F46                     	;# 
  2079  0F47                     	;# 
  2080  0F48                     	;# 
  2081  0F49                     	;# 
  2082  0F4A                     	;# 
  2083  0F4B                     	;# 
  2084  0F4C                     	;# 
  2085  0F4E                     	;# 
  2086  0F4F                     	;# 
  2087  0F50                     	;# 
  2088  0F51                     	;# 
  2089  0F52                     	;# 
  2090  0F53                     	;# 
  2091  0F54                     	;# 
  2092  0F55                     	;# 
  2093  0F56                     	;# 
  2094  0F57                     	;# 
  2095  0F65                     	;# 
  2096  0F68                     	;# 
  2097  0F69                     	;# 
  2098  0F6A                     	;# 
  2099  0F6B                     	;# 
  2100  0FE4                     	;# 
  2101  0FE5                     	;# 
  2102  0FE6                     	;# 
  2103  0FE7                     	;# 
  2104  0FE8                     	;# 
  2105  0FE9                     	;# 
  2106  0FEA                     	;# 
  2107  0FEB                     	;# 
  2108  0FED                     	;# 
  2109  0FEE                     	;# 
  2110  0FEF                     	;# 
  2111  0000                     	;# 
  2112  0001                     	;# 
  2113  0002                     	;# 
  2114  0003                     	;# 
  2115  0004                     	;# 
  2116  0005                     	;# 
  2117  0006                     	;# 
  2118  0007                     	;# 
  2119  0008                     	;# 
  2120  0009                     	;# 
  2121  000A                     	;# 
  2122  000B                     	;# 
  2123  000C                     	;# 
  2124  000D                     	;# 
  2125  000E                     	;# 
  2126  0010                     	;# 
  2127  0011                     	;# 
  2128  0012                     	;# 
  2129  0013                     	;# 
  2130  0016                     	;# 
  2131  0017                     	;# 
  2132  0018                     	;# 
  2133  001C                     	;# 
  2134  001C                     	;# 
  2135  001D                     	;# 
  2136  001D                     	;# 
  2137  001E                     	;# 
  2138  001F                     	;# 
  2139  008C                     	;# 
  2140  008C                     	;# 
  2141  008D                     	;# 
  2142  008E                     	;# 
  2143  008E                     	;# 
  2144  008F                     	;# 
  2145  0090                     	;# 
  2146  0090                     	;# 
  2147  0091                     	;# 
  2148  0093                     	;# 
  2149  0094                     	;# 
  2150  0095                     	;# 
  2151  0096                     	;# 
  2152  0097                     	;# 
  2153  0098                     	;# 
  2154  0099                     	;# 
  2155  009A                     	;# 
  2156  009B                     	;# 
  2157  009C                     	;# 
  2158  009D                     	;# 
  2159  009E                     	;# 
  2160  010C                     	;# 
  2161  010D                     	;# 
  2162  010E                     	;# 
  2163  010E                     	;# 
  2164  010F                     	;# 
  2165  0110                     	;# 
  2166  0110                     	;# 
  2167  0111                     	;# 
  2168  0112                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0114                     	;# 
  2173  0115                     	;# 
  2174  0116                     	;# 
  2175  0116                     	;# 
  2176  0117                     	;# 
  2177  0119                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  011A                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011C                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011D                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011E                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  018C                     	;# 
  2203  018D                     	;# 
  2204  018E                     	;# 
  2205  018F                     	;# 
  2206  0190                     	;# 
  2207  0191                     	;# 
  2208  0192                     	;# 
  2209  0196                     	;# 
  2210  0197                     	;# 
  2211  0198                     	;# 
  2212  0199                     	;# 
  2213  019A                     	;# 
  2214  019B                     	;# 
  2215  019C                     	;# 
  2216  020C                     	;# 
  2217  020D                     	;# 
  2218  020E                     	;# 
  2219  020F                     	;# 
  2220  020F                     	;# 
  2221  0210                     	;# 
  2222  0210                     	;# 
  2223  0211                     	;# 
  2224  0211                     	;# 
  2225  0212                     	;# 
  2226  0213                     	;# 
  2227  0214                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0218                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021B                     	;# 
  2239  021C                     	;# 
  2240  021C                     	;# 
  2241  021D                     	;# 
  2242  021D                     	;# 
  2243  021E                     	;# 
  2244  021F                     	;# 
  2245  028C                     	;# 
  2246  028C                     	;# 
  2247  028D                     	;# 
  2248  028D                     	;# 
  2249  028E                     	;# 
  2250  028F                     	;# 
  2251  0290                     	;# 
  2252  0290                     	;# 
  2253  0291                     	;# 
  2254  0292                     	;# 
  2255  0292                     	;# 
  2256  0293                     	;# 
  2257  0293                     	;# 
  2258  0294                     	;# 
  2259  0295                     	;# 
  2260  0296                     	;# 
  2261  0296                     	;# 
  2262  0297                     	;# 
  2263  0298                     	;# 
  2264  0298                     	;# 
  2265  0299                     	;# 
  2266  0299                     	;# 
  2267  029A                     	;# 
  2268  029B                     	;# 
  2269  029C                     	;# 
  2270  029C                     	;# 
  2271  029D                     	;# 
  2272  030C                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0310                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  0314                     	;# 
  2283  0314                     	;# 
  2284  0315                     	;# 
  2285  0316                     	;# 
  2286  0317                     	;# 
  2287  0318                     	;# 
  2288  0318                     	;# 
  2289  0319                     	;# 
  2290  031A                     	;# 
  2291  031B                     	;# 
  2292  031C                     	;# 
  2293  031C                     	;# 
  2294  031D                     	;# 
  2295  031E                     	;# 
  2296  031F                     	;# 
  2297  038C                     	;# 
  2298  038D                     	;# 
  2299  038E                     	;# 
  2300  0390                     	;# 
  2301  0391                     	;# 
  2302  0392                     	;# 
  2303  040C                     	;# 
  2304  040D                     	;# 
  2305  040E                     	;# 
  2306  040F                     	;# 
  2307  0410                     	;# 
  2308  0411                     	;# 
  2309  0416                     	;# 
  2310  0416                     	;# 
  2311  0417                     	;# 
  2312  0418                     	;# 
  2313  0418                     	;# 
  2314  0419                     	;# 
  2315  041A                     	;# 
  2316  041A                     	;# 
  2317  041B                     	;# 
  2318  041C                     	;# 
  2319  041C                     	;# 
  2320  041D                     	;# 
  2321  041E                     	;# 
  2322  041F                     	;# 
  2323  048C                     	;# 
  2324  048C                     	;# 
  2325  048D                     	;# 
  2326  048E                     	;# 
  2327  048F                     	;# 
  2328  048F                     	;# 
  2329  0490                     	;# 
  2330  0491                     	;# 
  2331  0492                     	;# 
  2332  0492                     	;# 
  2333  0493                     	;# 
  2334  0494                     	;# 
  2335  0495                     	;# 
  2336  0495                     	;# 
  2337  0496                     	;# 
  2338  0497                     	;# 
  2339  0498                     	;# 
  2340  0499                     	;# 
  2341  049A                     	;# 
  2342  049B                     	;# 
  2343  049C                     	;# 
  2344  049D                     	;# 
  2345  050C                     	;# 
  2346  050C                     	;# 
  2347  050D                     	;# 
  2348  050E                     	;# 
  2349  050F                     	;# 
  2350  050F                     	;# 
  2351  0510                     	;# 
  2352  0511                     	;# 
  2353  0512                     	;# 
  2354  0512                     	;# 
  2355  0513                     	;# 
  2356  0514                     	;# 
  2357  0515                     	;# 
  2358  0515                     	;# 
  2359  0516                     	;# 
  2360  0517                     	;# 
  2361  0518                     	;# 
  2362  0519                     	;# 
  2363  051A                     	;# 
  2364  051B                     	;# 
  2365  051C                     	;# 
  2366  051D                     	;# 
  2367  058C                     	;# 
  2368  058C                     	;# 
  2369  058D                     	;# 
  2370  058E                     	;# 
  2371  058F                     	;# 
  2372  058F                     	;# 
  2373  0590                     	;# 
  2374  0591                     	;# 
  2375  0592                     	;# 
  2376  0593                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  0616                     	;# 
  2387  0617                     	;# 
  2388  0618                     	;# 
  2389  0619                     	;# 
  2390  061A                     	;# 
  2391  061B                     	;# 
  2392  061C                     	;# 
  2393  061D                     	;# 
  2394  061E                     	;# 
  2395  068C                     	;# 
  2396  068D                     	;# 
  2397  068E                     	;# 
  2398  068F                     	;# 
  2399  0690                     	;# 
  2400  0691                     	;# 
  2401  0692                     	;# 
  2402  0693                     	;# 
  2403  0694                     	;# 
  2404  070C                     	;# 
  2405  070D                     	;# 
  2406  070E                     	;# 
  2407  070F                     	;# 
  2408  0710                     	;# 
  2409  0711                     	;# 
  2410  0712                     	;# 
  2411  0713                     	;# 
  2412  0714                     	;# 
  2413  0716                     	;# 
  2414  0717                     	;# 
  2415  0718                     	;# 
  2416  0719                     	;# 
  2417  071A                     	;# 
  2418  071B                     	;# 
  2419  071C                     	;# 
  2420  071D                     	;# 
  2421  071E                     	;# 
  2422  0796                     	;# 
  2423  0797                     	;# 
  2424  0798                     	;# 
  2425  0799                     	;# 
  2426  079A                     	;# 
  2427  079B                     	;# 
  2428  080C                     	;# 
  2429  080D                     	;# 
  2430  080E                     	;# 
  2431  080F                     	;# 
  2432  0810                     	;# 
  2433  0811                     	;# 
  2434  0812                     	;# 
  2435  0813                     	;# 
  2436  0814                     	;# 
  2437  081A                     	;# 
  2438  081B                     	;# 
  2439  081C                     	;# 
  2440  081D                     	;# 
  2441  081E                     	;# 
  2442  081F                     	;# 
  2443  088C                     	;# 
  2444  088D                     	;# 
  2445  088E                     	;# 
  2446  088F                     	;# 
  2447  0890                     	;# 
  2448  0891                     	;# 
  2449  0892                     	;# 
  2450  0893                     	;# 
  2451  0895                     	;# 
  2452  0896                     	;# 
  2453  0897                     	;# 
  2454  0898                     	;# 
  2455  0899                     	;# 
  2456  089A                     	;# 
  2457  089B                     	;# 
  2458  090C                     	;# 
  2459  090E                     	;# 
  2460  090F                     	;# 
  2461  091F                     	;# 
  2462  091F                     	;# 
  2463  098F                     	;# 
  2464  098F                     	;# 
  2465  0990                     	;# 
  2466  0991                     	;# 
  2467  0992                     	;# 
  2468  0993                     	;# 
  2469  0994                     	;# 
  2470  0995                     	;# 
  2471  0996                     	;# 
  2472  0997                     	;# 
  2473  0E0F                     	;# 
  2474  0E10                     	;# 
  2475  0E11                     	;# 
  2476  0E12                     	;# 
  2477  0E13                     	;# 
  2478  0E14                     	;# 
  2479  0E15                     	;# 
  2480  0E16                     	;# 
  2481  0E17                     	;# 
  2482  0E18                     	;# 
  2483  0E19                     	;# 
  2484  0E1A                     	;# 
  2485  0E1B                     	;# 
  2486  0E1C                     	;# 
  2487  0E1D                     	;# 
  2488  0E1E                     	;# 
  2489  0E1F                     	;# 
  2490  0E20                     	;# 
  2491  0E21                     	;# 
  2492  0E22                     	;# 
  2493  0E23                     	;# 
  2494  0E24                     	;# 
  2495  0E25                     	;# 
  2496  0E26                     	;# 
  2497  0E27                     	;# 
  2498  0E28                     	;# 
  2499  0E29                     	;# 
  2500  0E2A                     	;# 
  2501  0E2B                     	;# 
  2502  0E2C                     	;# 
  2503  0E2D                     	;# 
  2504  0E2E                     	;# 
  2505  0E2F                     	;# 
  2506  0E30                     	;# 
  2507  0E31                     	;# 
  2508  0E32                     	;# 
  2509  0E33                     	;# 
  2510  0E34                     	;# 
  2511  0E35                     	;# 
  2512  0E36                     	;# 
  2513  0E37                     	;# 
  2514  0E8F                     	;# 
  2515  0E90                     	;# 
  2516  0E91                     	;# 
  2517  0E92                     	;# 
  2518  0E93                     	;# 
  2519  0E94                     	;# 
  2520  0E95                     	;# 
  2521  0E96                     	;# 
  2522  0E97                     	;# 
  2523  0E9C                     	;# 
  2524  0E9D                     	;# 
  2525  0E9E                     	;# 
  2526  0EA1                     	;# 
  2527  0EA2                     	;# 
  2528  0EA3                     	;# 
  2529  0EA4                     	;# 
  2530  0EA5                     	;# 
  2531  0EA9                     	;# 
  2532  0EAA                     	;# 
  2533  0EAB                     	;# 
  2534  0EAC                     	;# 
  2535  0EB1                     	;# 
  2536  0EB2                     	;# 
  2537  0EB3                     	;# 
  2538  0EB8                     	;# 
  2539  0EB9                     	;# 
  2540  0EBA                     	;# 
  2541  0EBB                     	;# 
  2542  0EBC                     	;# 
  2543  0EBD                     	;# 
  2544  0EBE                     	;# 
  2545  0EC3                     	;# 
  2546  0EC5                     	;# 
  2547  0EC6                     	;# 
  2548  0EC7                     	;# 
  2549  0EC8                     	;# 
  2550  0EC9                     	;# 
  2551  0ECA                     	;# 
  2552  0ECB                     	;# 
  2553  0ECC                     	;# 
  2554  0F10                     	;# 
  2555  0F11                     	;# 
  2556  0F12                     	;# 
  2557  0F13                     	;# 
  2558  0F14                     	;# 
  2559  0F15                     	;# 
  2560  0F16                     	;# 
  2561  0F17                     	;# 
  2562  0F18                     	;# 
  2563  0F19                     	;# 
  2564  0F1A                     	;# 
  2565  0F1B                     	;# 
  2566  0F1C                     	;# 
  2567  0F1D                     	;# 
  2568  0F1E                     	;# 
  2569  0F1F                     	;# 
  2570  0F20                     	;# 
  2571  0F21                     	;# 
  2572  0F22                     	;# 
  2573  0F23                     	;# 
  2574  0F24                     	;# 
  2575  0F25                     	;# 
  2576  0F26                     	;# 
  2577  0F27                     	;# 
  2578  0F38                     	;# 
  2579  0F39                     	;# 
  2580  0F3A                     	;# 
  2581  0F3B                     	;# 
  2582  0F3C                     	;# 
  2583  0F3D                     	;# 
  2584  0F3E                     	;# 
  2585  0F3F                     	;# 
  2586  0F40                     	;# 
  2587  0F41                     	;# 
  2588  0F43                     	;# 
  2589  0F44                     	;# 
  2590  0F45                     	;# 
  2591  0F46                     	;# 
  2592  0F47                     	;# 
  2593  0F48                     	;# 
  2594  0F49                     	;# 
  2595  0F4A                     	;# 
  2596  0F4B                     	;# 
  2597  0F4C                     	;# 
  2598  0F4E                     	;# 
  2599  0F4F                     	;# 
  2600  0F50                     	;# 
  2601  0F51                     	;# 
  2602  0F52                     	;# 
  2603  0F53                     	;# 
  2604  0F54                     	;# 
  2605  0F55                     	;# 
  2606  0F56                     	;# 
  2607  0F57                     	;# 
  2608  0F65                     	;# 
  2609  0F68                     	;# 
  2610  0F69                     	;# 
  2611  0F6A                     	;# 
  2612  0F6B                     	;# 
  2613  0FE4                     	;# 
  2614  0FE5                     	;# 
  2615  0FE6                     	;# 
  2616  0FE7                     	;# 
  2617  0FE8                     	;# 
  2618  0FE9                     	;# 
  2619  0FEA                     	;# 
  2620  0FEB                     	;# 
  2621  0FED                     	;# 
  2622  0FEE                     	;# 
  2623  0FEF                     	;# 
  2624  0000                     	;# 
  2625  0001                     	;# 
  2626  0002                     	;# 
  2627  0003                     	;# 
  2628  0004                     	;# 
  2629  0005                     	;# 
  2630  0006                     	;# 
  2631  0007                     	;# 
  2632  0008                     	;# 
  2633  0009                     	;# 
  2634  000A                     	;# 
  2635  000B                     	;# 
  2636  000C                     	;# 
  2637  000D                     	;# 
  2638  000E                     	;# 
  2639  0010                     	;# 
  2640  0011                     	;# 
  2641  0012                     	;# 
  2642  0013                     	;# 
  2643  0016                     	;# 
  2644  0017                     	;# 
  2645  0018                     	;# 
  2646  001C                     	;# 
  2647  001C                     	;# 
  2648  001D                     	;# 
  2649  001D                     	;# 
  2650  001E                     	;# 
  2651  001F                     	;# 
  2652  008C                     	;# 
  2653  008C                     	;# 
  2654  008D                     	;# 
  2655  008E                     	;# 
  2656  008E                     	;# 
  2657  008F                     	;# 
  2658  0090                     	;# 
  2659  0090                     	;# 
  2660  0091                     	;# 
  2661  0093                     	;# 
  2662  0094                     	;# 
  2663  0095                     	;# 
  2664  0096                     	;# 
  2665  0097                     	;# 
  2666  0098                     	;# 
  2667  0099                     	;# 
  2668  009A                     	;# 
  2669  009B                     	;# 
  2670  009C                     	;# 
  2671  009D                     	;# 
  2672  009E                     	;# 
  2673  010C                     	;# 
  2674  010D                     	;# 
  2675  010E                     	;# 
  2676  010E                     	;# 
  2677  010F                     	;# 
  2678  0110                     	;# 
  2679  0110                     	;# 
  2680  0111                     	;# 
  2681  0112                     	;# 
  2682  0112                     	;# 
  2683  0113                     	;# 
  2684  0114                     	;# 
  2685  0114                     	;# 
  2686  0115                     	;# 
  2687  0116                     	;# 
  2688  0116                     	;# 
  2689  0117                     	;# 
  2690  0119                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  011A                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011C                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011D                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011E                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  018C                     	;# 
  2716  018D                     	;# 
  2717  018E                     	;# 
  2718  018F                     	;# 
  2719  0190                     	;# 
  2720  0191                     	;# 
  2721  0192                     	;# 
  2722  0196                     	;# 
  2723  0197                     	;# 
  2724  0198                     	;# 
  2725  0199                     	;# 
  2726  019A                     	;# 
  2727  019B                     	;# 
  2728  019C                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  020E                     	;# 
  2732  020F                     	;# 
  2733  020F                     	;# 
  2734  0210                     	;# 
  2735  0210                     	;# 
  2736  0211                     	;# 
  2737  0211                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0214                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0216                     	;# 
  2744  0216                     	;# 
  2745  0217                     	;# 
  2746  0217                     	;# 
  2747  0218                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021B                     	;# 
  2752  021C                     	;# 
  2753  021C                     	;# 
  2754  021D                     	;# 
  2755  021D                     	;# 
  2756  021E                     	;# 
  2757  021F                     	;# 
  2758  028C                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028D                     	;# 
  2762  028E                     	;# 
  2763  028F                     	;# 
  2764  0290                     	;# 
  2765  0290                     	;# 
  2766  0291                     	;# 
  2767  0292                     	;# 
  2768  0292                     	;# 
  2769  0293                     	;# 
  2770  0293                     	;# 
  2771  0294                     	;# 
  2772  0295                     	;# 
  2773  0296                     	;# 
  2774  0296                     	;# 
  2775  0297                     	;# 
  2776  0298                     	;# 
  2777  0298                     	;# 
  2778  0299                     	;# 
  2779  0299                     	;# 
  2780  029A                     	;# 
  2781  029B                     	;# 
  2782  029C                     	;# 
  2783  029C                     	;# 
  2784  029D                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0317                     	;# 
  2800  0318                     	;# 
  2801  0318                     	;# 
  2802  0319                     	;# 
  2803  031A                     	;# 
  2804  031B                     	;# 
  2805  031C                     	;# 
  2806  031C                     	;# 
  2807  031D                     	;# 
  2808  031E                     	;# 
  2809  031F                     	;# 
  2810  038C                     	;# 
  2811  038D                     	;# 
  2812  038E                     	;# 
  2813  0390                     	;# 
  2814  0391                     	;# 
  2815  0392                     	;# 
  2816  040C                     	;# 
  2817  040D                     	;# 
  2818  040E                     	;# 
  2819  040F                     	;# 
  2820  0410                     	;# 
  2821  0411                     	;# 
  2822  0416                     	;# 
  2823  0416                     	;# 
  2824  0417                     	;# 
  2825  0418                     	;# 
  2826  0418                     	;# 
  2827  0419                     	;# 
  2828  041A                     	;# 
  2829  041A                     	;# 
  2830  041B                     	;# 
  2831  041C                     	;# 
  2832  041C                     	;# 
  2833  041D                     	;# 
  2834  041E                     	;# 
  2835  041F                     	;# 
  2836  048C                     	;# 
  2837  048C                     	;# 
  2838  048D                     	;# 
  2839  048E                     	;# 
  2840  048F                     	;# 
  2841  048F                     	;# 
  2842  0490                     	;# 
  2843  0491                     	;# 
  2844  0492                     	;# 
  2845  0492                     	;# 
  2846  0493                     	;# 
  2847  0494                     	;# 
  2848  0495                     	;# 
  2849  0495                     	;# 
  2850  0496                     	;# 
  2851  0497                     	;# 
  2852  0498                     	;# 
  2853  0499                     	;# 
  2854  049A                     	;# 
  2855  049B                     	;# 
  2856  049C                     	;# 
  2857  049D                     	;# 
  2858  050C                     	;# 
  2859  050C                     	;# 
  2860  050D                     	;# 
  2861  050E                     	;# 
  2862  050F                     	;# 
  2863  050F                     	;# 
  2864  0510                     	;# 
  2865  0511                     	;# 
  2866  0512                     	;# 
  2867  0512                     	;# 
  2868  0513                     	;# 
  2869  0514                     	;# 
  2870  0515                     	;# 
  2871  0515                     	;# 
  2872  0516                     	;# 
  2873  0517                     	;# 
  2874  0518                     	;# 
  2875  0519                     	;# 
  2876  051A                     	;# 
  2877  051B                     	;# 
  2878  051C                     	;# 
  2879  051D                     	;# 
  2880  058C                     	;# 
  2881  058C                     	;# 
  2882  058D                     	;# 
  2883  058E                     	;# 
  2884  058F                     	;# 
  2885  058F                     	;# 
  2886  0590                     	;# 
  2887  0591                     	;# 
  2888  0592                     	;# 
  2889  0593                     	;# 
  2890  060C                     	;# 
  2891  060D                     	;# 
  2892  060E                     	;# 
  2893  060F                     	;# 
  2894  0610                     	;# 
  2895  0611                     	;# 
  2896  0612                     	;# 
  2897  0613                     	;# 
  2898  0614                     	;# 
  2899  0616                     	;# 
  2900  0617                     	;# 
  2901  0618                     	;# 
  2902  0619                     	;# 
  2903  061A                     	;# 
  2904  061B                     	;# 
  2905  061C                     	;# 
  2906  061D                     	;# 
  2907  061E                     	;# 
  2908  068C                     	;# 
  2909  068D                     	;# 
  2910  068E                     	;# 
  2911  068F                     	;# 
  2912  0690                     	;# 
  2913  0691                     	;# 
  2914  0692                     	;# 
  2915  0693                     	;# 
  2916  0694                     	;# 
  2917  070C                     	;# 
  2918  070D                     	;# 
  2919  070E                     	;# 
  2920  070F                     	;# 
  2921  0710                     	;# 
  2922  0711                     	;# 
  2923  0712                     	;# 
  2924  0713                     	;# 
  2925  0714                     	;# 
  2926  0716                     	;# 
  2927  0717                     	;# 
  2928  0718                     	;# 
  2929  0719                     	;# 
  2930  071A                     	;# 
  2931  071B                     	;# 
  2932  071C                     	;# 
  2933  071D                     	;# 
  2934  071E                     	;# 
  2935  0796                     	;# 
  2936  0797                     	;# 
  2937  0798                     	;# 
  2938  0799                     	;# 
  2939  079A                     	;# 
  2940  079B                     	;# 
  2941  080C                     	;# 
  2942  080D                     	;# 
  2943  080E                     	;# 
  2944  080F                     	;# 
  2945  0810                     	;# 
  2946  0811                     	;# 
  2947  0812                     	;# 
  2948  0813                     	;# 
  2949  0814                     	;# 
  2950  081A                     	;# 
  2951  081B                     	;# 
  2952  081C                     	;# 
  2953  081D                     	;# 
  2954  081E                     	;# 
  2955  081F                     	;# 
  2956  088C                     	;# 
  2957  088D                     	;# 
  2958  088E                     	;# 
  2959  088F                     	;# 
  2960  0890                     	;# 
  2961  0891                     	;# 
  2962  0892                     	;# 
  2963  0893                     	;# 
  2964  0895                     	;# 
  2965  0896                     	;# 
  2966  0897                     	;# 
  2967  0898                     	;# 
  2968  0899                     	;# 
  2969  089A                     	;# 
  2970  089B                     	;# 
  2971  090C                     	;# 
  2972  090E                     	;# 
  2973  090F                     	;# 
  2974  091F                     	;# 
  2975  091F                     	;# 
  2976  098F                     	;# 
  2977  098F                     	;# 
  2978  0990                     	;# 
  2979  0991                     	;# 
  2980  0992                     	;# 
  2981  0993                     	;# 
  2982  0994                     	;# 
  2983  0995                     	;# 
  2984  0996                     	;# 
  2985  0997                     	;# 
  2986  0E0F                     	;# 
  2987  0E10                     	;# 
  2988  0E11                     	;# 
  2989  0E12                     	;# 
  2990  0E13                     	;# 
  2991  0E14                     	;# 
  2992  0E15                     	;# 
  2993  0E16                     	;# 
  2994  0E17                     	;# 
  2995  0E18                     	;# 
  2996  0E19                     	;# 
  2997  0E1A                     	;# 
  2998  0E1B                     	;# 
  2999  0E1C                     	;# 
  3000  0E1D                     	;# 
  3001  0E1E                     	;# 
  3002  0E1F                     	;# 
  3003  0E20                     	;# 
  3004  0E21                     	;# 
  3005  0E22                     	;# 
  3006  0E23                     	;# 
  3007  0E24                     	;# 
  3008  0E25                     	;# 
  3009  0E26                     	;# 
  3010  0E27                     	;# 
  3011  0E28                     	;# 
  3012  0E29                     	;# 
  3013  0E2A                     	;# 
  3014  0E2B                     	;# 
  3015  0E2C                     	;# 
  3016  0E2D                     	;# 
  3017  0E2E                     	;# 
  3018  0E2F                     	;# 
  3019  0E30                     	;# 
  3020  0E31                     	;# 
  3021  0E32                     	;# 
  3022  0E33                     	;# 
  3023  0E34                     	;# 
  3024  0E35                     	;# 
  3025  0E36                     	;# 
  3026  0E37                     	;# 
  3027  0E8F                     	;# 
  3028  0E90                     	;# 
  3029  0E91                     	;# 
  3030  0E92                     	;# 
  3031  0E93                     	;# 
  3032  0E94                     	;# 
  3033  0E95                     	;# 
  3034  0E96                     	;# 
  3035  0E97                     	;# 
  3036  0E9C                     	;# 
  3037  0E9D                     	;# 
  3038  0E9E                     	;# 
  3039  0EA1                     	;# 
  3040  0EA2                     	;# 
  3041  0EA3                     	;# 
  3042  0EA4                     	;# 
  3043  0EA5                     	;# 
  3044  0EA9                     	;# 
  3045  0EAA                     	;# 
  3046  0EAB                     	;# 
  3047  0EAC                     	;# 
  3048  0EB1                     	;# 
  3049  0EB2                     	;# 
  3050  0EB3                     	;# 
  3051  0EB8                     	;# 
  3052  0EB9                     	;# 
  3053  0EBA                     	;# 
  3054  0EBB                     	;# 
  3055  0EBC                     	;# 
  3056  0EBD                     	;# 
  3057  0EBE                     	;# 
  3058  0EC3                     	;# 
  3059  0EC5                     	;# 
  3060  0EC6                     	;# 
  3061  0EC7                     	;# 
  3062  0EC8                     	;# 
  3063  0EC9                     	;# 
  3064  0ECA                     	;# 
  3065  0ECB                     	;# 
  3066  0ECC                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F38                     	;# 
  3092  0F39                     	;# 
  3093  0F3A                     	;# 
  3094  0F3B                     	;# 
  3095  0F3C                     	;# 
  3096  0F3D                     	;# 
  3097  0F3E                     	;# 
  3098  0F3F                     	;# 
  3099  0F40                     	;# 
  3100  0F41                     	;# 
  3101  0F43                     	;# 
  3102  0F44                     	;# 
  3103  0F45                     	;# 
  3104  0F46                     	;# 
  3105  0F47                     	;# 
  3106  0F48                     	;# 
  3107  0F49                     	;# 
  3108  0F4A                     	;# 
  3109  0F4B                     	;# 
  3110  0F4C                     	;# 
  3111  0F4E                     	;# 
  3112  0F4F                     	;# 
  3113  0F50                     	;# 
  3114  0F51                     	;# 
  3115  0F52                     	;# 
  3116  0F53                     	;# 
  3117  0F54                     	;# 
  3118  0F55                     	;# 
  3119  0F56                     	;# 
  3120  0F57                     	;# 
  3121  0F65                     	;# 
  3122  0F68                     	;# 
  3123  0F69                     	;# 
  3124  0F6A                     	;# 
  3125  0F6B                     	;# 
  3126  0FE4                     	;# 
  3127  0FE5                     	;# 
  3128  0FE6                     	;# 
  3129  0FE7                     	;# 
  3130  0FE8                     	;# 
  3131  0FE9                     	;# 
  3132  0FEA                     	;# 
  3133  0FEB                     	;# 
  3134  0FED                     	;# 
  3135  0FEE                     	;# 
  3136  0FEF                     	;# 
  3137  0000                     	;# 
  3138  0001                     	;# 
  3139  0002                     	;# 
  3140  0003                     	;# 
  3141  0004                     	;# 
  3142  0005                     	;# 
  3143  0006                     	;# 
  3144  0007                     	;# 
  3145  0008                     	;# 
  3146  0009                     	;# 
  3147  000A                     	;# 
  3148  000B                     	;# 
  3149  000C                     	;# 
  3150  000D                     	;# 
  3151  000E                     	;# 
  3152  0010                     	;# 
  3153  0011                     	;# 
  3154  0012                     	;# 
  3155  0013                     	;# 
  3156  0016                     	;# 
  3157  0017                     	;# 
  3158  0018                     	;# 
  3159  001C                     	;# 
  3160  001C                     	;# 
  3161  001D                     	;# 
  3162  001D                     	;# 
  3163  001E                     	;# 
  3164  001F                     	;# 
  3165  008C                     	;# 
  3166  008C                     	;# 
  3167  008D                     	;# 
  3168  008E                     	;# 
  3169  008E                     	;# 
  3170  008F                     	;# 
  3171  0090                     	;# 
  3172  0090                     	;# 
  3173  0091                     	;# 
  3174  0093                     	;# 
  3175  0094                     	;# 
  3176  0095                     	;# 
  3177  0096                     	;# 
  3178  0097                     	;# 
  3179  0098                     	;# 
  3180  0099                     	;# 
  3181  009A                     	;# 
  3182  009B                     	;# 
  3183  009C                     	;# 
  3184  009D                     	;# 
  3185  009E                     	;# 
  3186  010C                     	;# 
  3187  010D                     	;# 
  3188  010E                     	;# 
  3189  010E                     	;# 
  3190  010F                     	;# 
  3191  0110                     	;# 
  3192  0110                     	;# 
  3193  0111                     	;# 
  3194  0112                     	;# 
  3195  0112                     	;# 
  3196  0113                     	;# 
  3197  0114                     	;# 
  3198  0114                     	;# 
  3199  0115                     	;# 
  3200  0116                     	;# 
  3201  0116                     	;# 
  3202  0117                     	;# 
  3203  0119                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  011A                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011C                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011D                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011E                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  018C                     	;# 
  3229  018D                     	;# 
  3230  018E                     	;# 
  3231  018F                     	;# 
  3232  0190                     	;# 
  3233  0191                     	;# 
  3234  0192                     	;# 
  3235  0196                     	;# 
  3236  0197                     	;# 
  3237  0198                     	;# 
  3238  0199                     	;# 
  3239  019A                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  020C                     	;# 
  3243  020D                     	;# 
  3244  020E                     	;# 
  3245  020F                     	;# 
  3246  020F                     	;# 
  3247  0210                     	;# 
  3248  0210                     	;# 
  3249  0211                     	;# 
  3250  0211                     	;# 
  3251  0212                     	;# 
  3252  0213                     	;# 
  3253  0214                     	;# 
  3254  0215                     	;# 
  3255  0215                     	;# 
  3256  0216                     	;# 
  3257  0216                     	;# 
  3258  0217                     	;# 
  3259  0217                     	;# 
  3260  0218                     	;# 
  3261  0219                     	;# 
  3262  021A                     	;# 
  3263  021B                     	;# 
  3264  021B                     	;# 
  3265  021C                     	;# 
  3266  021C                     	;# 
  3267  021D                     	;# 
  3268  021D                     	;# 
  3269  021E                     	;# 
  3270  021F                     	;# 
  3271  028C                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028D                     	;# 
  3275  028E                     	;# 
  3276  028F                     	;# 
  3277  0290                     	;# 
  3278  0290                     	;# 
  3279  0291                     	;# 
  3280  0292                     	;# 
  3281  0292                     	;# 
  3282  0293                     	;# 
  3283  0293                     	;# 
  3284  0294                     	;# 
  3285  0295                     	;# 
  3286  0296                     	;# 
  3287  0296                     	;# 
  3288  0297                     	;# 
  3289  0298                     	;# 
  3290  0298                     	;# 
  3291  0299                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029C                     	;# 
  3296  029C                     	;# 
  3297  029D                     	;# 
  3298  030C                     	;# 
  3299  030C                     	;# 
  3300  030D                     	;# 
  3301  030E                     	;# 
  3302  030F                     	;# 
  3303  0310                     	;# 
  3304  0310                     	;# 
  3305  0311                     	;# 
  3306  0312                     	;# 
  3307  0313                     	;# 
  3308  0314                     	;# 
  3309  0314                     	;# 
  3310  0315                     	;# 
  3311  0316                     	;# 
  3312  0317                     	;# 
  3313  0318                     	;# 
  3314  0318                     	;# 
  3315  0319                     	;# 
  3316  031A                     	;# 
  3317  031B                     	;# 
  3318  031C                     	;# 
  3319  031C                     	;# 
  3320  031D                     	;# 
  3321  031E                     	;# 
  3322  031F                     	;# 
  3323  038C                     	;# 
  3324  038D                     	;# 
  3325  038E                     	;# 
  3326  0390                     	;# 
  3327  0391                     	;# 
  3328  0392                     	;# 
  3329  040C                     	;# 
  3330  040D                     	;# 
  3331  040E                     	;# 
  3332  040F                     	;# 
  3333  0410                     	;# 
  3334  0411                     	;# 
  3335  0416                     	;# 
  3336  0416                     	;# 
  3337  0417                     	;# 
  3338  0418                     	;# 
  3339  0418                     	;# 
  3340  0419                     	;# 
  3341  041A                     	;# 
  3342  041A                     	;# 
  3343  041B                     	;# 
  3344  041C                     	;# 
  3345  041C                     	;# 
  3346  041D                     	;# 
  3347  041E                     	;# 
  3348  041F                     	;# 
  3349  048C                     	;# 
  3350  048C                     	;# 
  3351  048D                     	;# 
  3352  048E                     	;# 
  3353  048F                     	;# 
  3354  048F                     	;# 
  3355  0490                     	;# 
  3356  0491                     	;# 
  3357  0492                     	;# 
  3358  0492                     	;# 
  3359  0493                     	;# 
  3360  0494                     	;# 
  3361  0495                     	;# 
  3362  0495                     	;# 
  3363  0496                     	;# 
  3364  0497                     	;# 
  3365  0498                     	;# 
  3366  0499                     	;# 
  3367  049A                     	;# 
  3368  049B                     	;# 
  3369  049C                     	;# 
  3370  049D                     	;# 
  3371  050C                     	;# 
  3372  050C                     	;# 
  3373  050D                     	;# 
  3374  050E                     	;# 
  3375  050F                     	;# 
  3376  050F                     	;# 
  3377  0510                     	;# 
  3378  0511                     	;# 
  3379  0512                     	;# 
  3380  0512                     	;# 
  3381  0513                     	;# 
  3382  0514                     	;# 
  3383  0515                     	;# 
  3384  0515                     	;# 
  3385  0516                     	;# 
  3386  0517                     	;# 
  3387  0518                     	;# 
  3388  0519                     	;# 
  3389  051A                     	;# 
  3390  051B                     	;# 
  3391  051C                     	;# 
  3392  051D                     	;# 
  3393  058C                     	;# 
  3394  058C                     	;# 
  3395  058D                     	;# 
  3396  058E                     	;# 
  3397  058F                     	;# 
  3398  058F                     	;# 
  3399  0590                     	;# 
  3400  0591                     	;# 
  3401  0592                     	;# 
  3402  0593                     	;# 
  3403  060C                     	;# 
  3404  060D                     	;# 
  3405  060E                     	;# 
  3406  060F                     	;# 
  3407  0610                     	;# 
  3408  0611                     	;# 
  3409  0612                     	;# 
  3410  0613                     	;# 
  3411  0614                     	;# 
  3412  0616                     	;# 
  3413  0617                     	;# 
  3414  0618                     	;# 
  3415  0619                     	;# 
  3416  061A                     	;# 
  3417  061B                     	;# 
  3418  061C                     	;# 
  3419  061D                     	;# 
  3420  061E                     	;# 
  3421  068C                     	;# 
  3422  068D                     	;# 
  3423  068E                     	;# 
  3424  068F                     	;# 
  3425  0690                     	;# 
  3426  0691                     	;# 
  3427  0692                     	;# 
  3428  0693                     	;# 
  3429  0694                     	;# 
  3430  070C                     	;# 
  3431  070D                     	;# 
  3432  070E                     	;# 
  3433  070F                     	;# 
  3434  0710                     	;# 
  3435  0711                     	;# 
  3436  0712                     	;# 
  3437  0713                     	;# 
  3438  0714                     	;# 
  3439  0716                     	;# 
  3440  0717                     	;# 
  3441  0718                     	;# 
  3442  0719                     	;# 
  3443  071A                     	;# 
  3444  071B                     	;# 
  3445  071C                     	;# 
  3446  071D                     	;# 
  3447  071E                     	;# 
  3448  0796                     	;# 
  3449  0797                     	;# 
  3450  0798                     	;# 
  3451  0799                     	;# 
  3452  079A                     	;# 
  3453  079B                     	;# 
  3454  080C                     	;# 
  3455  080D                     	;# 
  3456  080E                     	;# 
  3457  080F                     	;# 
  3458  0810                     	;# 
  3459  0811                     	;# 
  3460  0812                     	;# 
  3461  0813                     	;# 
  3462  0814                     	;# 
  3463  081A                     	;# 
  3464  081B                     	;# 
  3465  081C                     	;# 
  3466  081D                     	;# 
  3467  081E                     	;# 
  3468  081F                     	;# 
  3469  088C                     	;# 
  3470  088D                     	;# 
  3471  088E                     	;# 
  3472  088F                     	;# 
  3473  0890                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0893                     	;# 
  3477  0895                     	;# 
  3478  0896                     	;# 
  3479  0897                     	;# 
  3480  0898                     	;# 
  3481  0899                     	;# 
  3482  089A                     	;# 
  3483  089B                     	;# 
  3484  090C                     	;# 
  3485  090E                     	;# 
  3486  090F                     	;# 
  3487  091F                     	;# 
  3488  091F                     	;# 
  3489  098F                     	;# 
  3490  098F                     	;# 
  3491  0990                     	;# 
  3492  0991                     	;# 
  3493  0992                     	;# 
  3494  0993                     	;# 
  3495  0994                     	;# 
  3496  0995                     	;# 
  3497  0996                     	;# 
  3498  0997                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E2F                     	;# 
  3532  0E30                     	;# 
  3533  0E31                     	;# 
  3534  0E32                     	;# 
  3535  0E33                     	;# 
  3536  0E34                     	;# 
  3537  0E35                     	;# 
  3538  0E36                     	;# 
  3539  0E37                     	;# 
  3540  0E8F                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E93                     	;# 
  3545  0E94                     	;# 
  3546  0E95                     	;# 
  3547  0E96                     	;# 
  3548  0E97                     	;# 
  3549  0E9C                     	;# 
  3550  0E9D                     	;# 
  3551  0E9E                     	;# 
  3552  0EA1                     	;# 
  3553  0EA2                     	;# 
  3554  0EA3                     	;# 
  3555  0EA4                     	;# 
  3556  0EA5                     	;# 
  3557  0EA9                     	;# 
  3558  0EAA                     	;# 
  3559  0EAB                     	;# 
  3560  0EAC                     	;# 
  3561  0EB1                     	;# 
  3562  0EB2                     	;# 
  3563  0EB3                     	;# 
  3564  0EB8                     	;# 
  3565  0EB9                     	;# 
  3566  0EBA                     	;# 
  3567  0EBB                     	;# 
  3568  0EBC                     	;# 
  3569  0EBD                     	;# 
  3570  0EBE                     	;# 
  3571  0EC3                     	;# 
  3572  0EC5                     	;# 
  3573  0EC6                     	;# 
  3574  0EC7                     	;# 
  3575  0EC8                     	;# 
  3576  0EC9                     	;# 
  3577  0ECA                     	;# 
  3578  0ECB                     	;# 
  3579  0ECC                     	;# 
  3580  0F10                     	;# 
  3581  0F11                     	;# 
  3582  0F12                     	;# 
  3583  0F13                     	;# 
  3584  0F14                     	;# 
  3585  0F15                     	;# 
  3586  0F16                     	;# 
  3587  0F17                     	;# 
  3588  0F18                     	;# 
  3589  0F19                     	;# 
  3590  0F1A                     	;# 
  3591  0F1B                     	;# 
  3592  0F1C                     	;# 
  3593  0F1D                     	;# 
  3594  0F1E                     	;# 
  3595  0F1F                     	;# 
  3596  0F20                     	;# 
  3597  0F21                     	;# 
  3598  0F22                     	;# 
  3599  0F23                     	;# 
  3600  0F24                     	;# 
  3601  0F25                     	;# 
  3602  0F26                     	;# 
  3603  0F27                     	;# 
  3604  0F38                     	;# 
  3605  0F39                     	;# 
  3606  0F3A                     	;# 
  3607  0F3B                     	;# 
  3608  0F3C                     	;# 
  3609  0F3D                     	;# 
  3610  0F3E                     	;# 
  3611  0F3F                     	;# 
  3612  0F40                     	;# 
  3613  0F41                     	;# 
  3614  0F43                     	;# 
  3615  0F44                     	;# 
  3616  0F45                     	;# 
  3617  0F46                     	;# 
  3618  0F47                     	;# 
  3619  0F48                     	;# 
  3620  0F49                     	;# 
  3621  0F4A                     	;# 
  3622  0F4B                     	;# 
  3623  0F4C                     	;# 
  3624  0F4E                     	;# 
  3625  0F4F                     	;# 
  3626  0F50                     	;# 
  3627  0F51                     	;# 
  3628  0F52                     	;# 
  3629  0F53                     	;# 
  3630  0F54                     	;# 
  3631  0F55                     	;# 
  3632  0F56                     	;# 
  3633  0F57                     	;# 
  3634  0F65                     	;# 
  3635  0F68                     	;# 
  3636  0F69                     	;# 
  3637  0F6A                     	;# 
  3638  0F6B                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;_samples
  3650                           
  3651                           	psect	idataBANK0
  3652  0000'                    __pidataBANK0:	
  3653                           
  3654                           ;initializer for _presets
  3655  0000' 3400               	retlw	0
  3656  0001' 3446               	retlw	70
  3657  0002' 345F               	retlw	95
  3658  0003' 3469               	retlw	105
  3659  0004' 3478               	retlw	120
  3660                           
  3661                           	psect	idataBANK1
  3662  0000'                    __pidataBANK1:	
  3663                           
  3664                           ;initializer for ___cgram
  3665  0000' 340C               	retlw	12
  3666  0001' 3412               	retlw	18
  3667  0002' 3412               	retlw	18
  3668  0003' 340C               	retlw	12
  3669  0004' 3400               	retlw	0
  3670  0005' 3400               	retlw	0
  3671  0006' 3400               	retlw	0
  3672  0007' 3400               	retlw	0
  3673  0008' 340A               	retlw	10
  3674  0009' 3415               	retlw	21
  3675  000A' 3411               	retlw	17
  3676  000B' 340A               	retlw	10
  3677  000C' 3404               	retlw	4
  3678  000D' 3400               	retlw	0
  3679  000E' 3400               	retlw	0
  3680  000F' 3400               	retlw	0
  3681  0010' 340A               	retlw	10
  3682  0011' 341F               	retlw	31
  3683  0012' 341F               	retlw	31
  3684  0013' 340E               	retlw	14
  3685  0014' 3404               	retlw	4
  3686  0015' 3400               	retlw	0
  3687  0016' 3400               	retlw	0
  3688  0017' 3400               	retlw	0
  3689                           
  3690                           ;initializer for _setpoint
  3691  0018' 3446               	retlw	70
  3692                           
  3693                           	psect	stringtext
  3694  0000'                    __pstringtext:	
  3695  0000'                    log@coeff:	
  3696  0000' 3400               	retlw	0
  3697  0001' 3400               	retlw	0
  3698  0002' 3400               	retlw	0
  3699  0003' 3400               	retlw	0
  3700  0004' 3480               	retlw	128
  3701  0005' 343F               	retlw	63
  3702  0006' 34F0               	retlw	240
  3703  0007' 34FF               	retlw	255
  3704  0008' 34BE               	retlw	190
  3705  0009' 34E2               	retlw	226
  3706  000A' 34A9               	retlw	169
  3707  000B' 343E               	retlw	62
  3708  000C' 3483               	retlw	131
  3709  000D' 3476               	retlw	118
  3710  000E' 34BE               	retlw	190
  3711  000F' 34AE               	retlw	174
  3712  0010' 342B               	retlw	43
  3713  0011' 343E               	retlw	62
  3714  0012' 343C               	retlw	60
  3715  0013' 34C3               	retlw	195
  3716  0014' 34BD               	retlw	189
  3717  0015' 34D2               	retlw	210
  3718  0016' 3413               	retlw	19
  3719  0017' 343D               	retlw	61
  3720  0018' 3478               	retlw	120
  3721  0019' 34D3               	retlw	211
  3722  001A' 34BB               	retlw	187
  3723  001B'                    __end_oflog@coeff:	
  3724  0016                     _LATA	set	22
  3725  0017                     _LATB	set	23
  3726  0018                     _LATC	set	24
  3727  001E                     _T0CON0	set	30
  3728  001E                     _T0CON0bits	set	30
  3729  001F                     _T0CON1	set	31
  3730  001D                     _TMR0H	set	29
  3731  001C                     _TMR0L	set	28
  3732  0011                     _TRISA	set	17
  3733  0012                     _TRISB	set	18
  3734  0013                     _TRISC	set	19
  3735  005F                     _GIE	set	95
  3736  0068                     _RB0	set	104
  3737  0069                     _RB1	set	105
  3738  006A                     _RB2	set	106
  3739  006B                     _RB3	set	107
  3740  006C                     _RB4	set	108
  3741  006D                     _RB5	set	109
  3742  009D                     _ADACQ	set	157
  3743  0099                     _ADACT	set	153
  3744  009B                     _ADCAP	set	155
  3745  0098                     _ADCLK	set	152
  3746  0093                     _ADCON0	set	147
  3747  0093                     _ADCON0bits	set	147
  3748  0094                     _ADCON1	set	148
  3749  0095                     _ADCON2	set	149
  3750  0096                     _ADCON3	set	150
  3751  009E                     _ADPCH	set	158
  3752  009C                     _ADPRE	set	156
  3753  009A                     _ADREF	set	154
  3754  008D                     _ADRESH	set	141
  3755  008C                     _ADRESL	set	140
  3756  0097                     _ADSTAT	set	151
  3757  010F                     _ADLTHH	set	271
  3758  010E                     _ADLTHL	set	270
  3759  010D                     _ADRPT	set	269
  3760  0113                     _ADSTPTH	set	275
  3761  0112                     _ADSTPTL	set	274
  3762  0111                     _ADUTHH	set	273
  3763  0110                     _ADUTHL	set	272
  3764  021F                     _CCPTMRS1bits	set	543
  3765  0290                     _T2CLKCON	set	656
  3766  028E                     _T2CON	set	654
  3767  028E                     _T2CONbits	set	654
  3768  028F                     _T2HLT	set	655
  3769  028D                     _T2PR	set	653
  3770  0291                     _T2RST	set	657
  3771  028C                     _T2TMR	set	652
  3772  038E                     _PWM6CON	set	910
  3773  038D                     _PWM6DCH	set	909
  3774  038C                     _PWM6DCL	set	908
  3775  0716                     _PIE0bits	set	1814
  3776  070C                     _PIR0bits	set	1804
  3777  0710                     _PIR4bits	set	1808
  3778  3865                     _TMR0IF	set	14437
  3779  088D                     _OSCCON1	set	2189
  3780  088F                     _OSCCON3	set	2191
  3781  0891                     _OSCEN	set	2193
  3782  0893                     _OSCFRQ	set	2195
  3783  0892                     _OSCTUNE	set	2194
  3784  090C                     _FVRCON	set	2316
  3785  0E8F                     _PPSLOCK	set	3727
  3786  0E8F                     _PPSLOCKbits	set	3727
  3787  0F38                     _ANSELA	set	3896
  3788  0F43                     _ANSELB	set	3907
  3789  0F4E                     _ANSELC	set	3918
  3790  0F11                     _RA1PPS	set	3857
  3791  0F39                     _WPUA	set	3897
  3792  0F44                     _WPUB	set	3908
  3793  0F4F                     _WPUC	set	3919
  3794  0F65                     _WPUE	set	3941
  3795  001B'                    STR_1:	
  3796  001B' 3454               	retlw	84	;'T'
  3797  001C' 3469               	retlw	105	;'i'
  3798  001D' 346D               	retlw	109	;'m'
  3799  001E' 3465               	retlw	101	;'e'
  3800  001F' 343A               	retlw	58	;':'
  3801  0020' 3400               	retlw	0
  3802                           
  3803                           ; #config settings
  3804  0000                     
  3805                           	psect	cinit
  3806  0000'                    start_initialization:	
  3807  0000'                    __initialization:		;BIGRAM
  3808                           
  3809                           ; Initialize objects allocated to BANK0
  3810  0000' 3000'              	movlw	low __pidataBANK0
  3811  0001' 0084               	movwf	4
  3812  0002' 3000'              	movlw	(high __pidataBANK0)| (0+128)
  3813  0003' 0085               	movwf	5
  3814  0004' 3000'              	movlw	low __pdataBANK0
  3815  0005' 0086               	movwf	6
  3816  0006' 3000'              	movlw	high __pdataBANK0
  3817  0007' 0087               	movwf	7
  3818  0008' 3000               	movlw	0
  3819  0009' 00FF               	movwf	btemp+1
  3820  000A' 3005               	movlw	5
  3821  000B' 3180' 2000' 3180'  	fcall	init_ram
  3822                           
  3823                           ; Initialize objects allocated to BANK1
  3824  000E' 3000'              	movlw	low __pidataBANK1
  3825  000F' 0084               	movwf	4
  3826  0010' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  3827  0011' 0085               	movwf	5
  3828  0012' 3000'              	movlw	low __pdataBANK1
  3829  0013' 0086               	movwf	6
  3830  0014' 3000'              	movlw	high __pdataBANK1
  3831  0015' 0087               	movwf	7
  3832  0016' 3000               	movlw	0
  3833  0017' 00FF               	movwf	btemp+1
  3834  0018' 3019               	movlw	25
  3835  0019' 3180' 2000' 3180'  	fcall	init_ram
  3836                           
  3837                           ; Clear objects allocated to BIGRAM
  3838  001C' 308C               	movlw	low (0+9100)
  3839  001D' 0084               	movwf	4
  3840  001E' 3023               	movlw	high (0+9100)
  3841  001F' 0085               	movwf	5
  3842  0020' 3064               	movlw	100
  3843  0021' 00FE               	movwf	btemp
  3844  0022' 3000               	movlw	0
  3845  0023' 00FF               	movwf	btemp+1
  3846  0024' 3180' 2000'        	fcall	clear_ram0
  3847                           
  3848                           ; Clear objects allocated to BANK0
  3849  0026' 0180'              	clrf	__pbssBANK0& (0+127)
  3850  0027' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
  3851  0028' 0180'              	clrf	(__pbssBANK0+2)& (0+127)
  3852  0029' 0180'              	clrf	(__pbssBANK0+3)& (0+127)
  3853  002A' 0180'              	clrf	(__pbssBANK0+4)& (0+127)
  3854  002B' 0180'              	clrf	(__pbssBANK0+5)& (0+127)
  3855  002C' 0180'              	clrf	(__pbssBANK0+6)& (0+127)
  3856                           
  3857                           ; Clear objects allocated to BANK1
  3858  002D' 0021               	movlb	1	; select bank1
  3859  002E' 0180'              	clrf	__pbssBANK1& (0+127)
  3860  002F' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
  3861  0030'                    end_of_initialization:	
  3862                           ;End of C runtime variable initialization code
  3863                           
  3864  0030'                    __end_of__initialization:	
  3865  0030' 0020               	movlb	0
  3866  0031' 3180' 2800'        	ljmp	_main	;jump to C main() function
  3867                           
  3868                           	psect	bssBANK0
  3869  0000'                    __pbssBANK0:	
  3870  0000'                    LCD_Write_Int@F13694:	
  3871  0000'                    	ds	5
  3872  0005'                    _errno:	
  3873  0005'                    	ds	2
  3874                           
  3875                           	psect	dataBANK0
  3876  0000'                    __pdataBANK0:	
  3877  0000'                    _presets:	
  3878  0000'                    	ds	5
  3879                           
  3880                           	psect	bssBANK1
  3881  0000'                    __pbssBANK1:	
  3882  0000'                    main@sampleIndex:	
  3883  0000'                    	ds	2
  3884                           
  3885                           	psect	dataBANK1
  3886  0000'                    __pdataBANK1:	
  3887  0000'                    ___cgram:	
  3888  0000'                    	ds	24
  3889  0018'                    _setpoint:	
  3890  0018'                    	ds	1
  3891                           
  3892                           	psect	inittext
  3893  0000'                    init_ram:	
  3894  0000' 00FE               	movwf	126
  3895  0001'                    initloop:	
  3896  0001' 0012               	moviw fsr0++
  3897  0002' 001E               	movwi fsr1++
  3898  0003' 3001               	movlw	1
  3899  0004' 02FE               	subwf	126,f
  3900  0005' 3000               	movlw	0
  3901  0006' 3BFF               	subwfb	127,f
  3902  0007' 087F               	movf	127,w
  3903  0008' 047E               	iorwf	126,w
  3904  0009' 1903               	btfsc	3,2
  3905  000A' 3400               	retlw	0
  3906  000B' 2800'              	goto	initloop
  3907                           
  3908                           	psect	clrtext
  3909  0000'                    clear_ram0:	
  3910                           ;	Called with FSR0 containing the base address, and
  3911                           ;	btemp/btemp+1 has the size to clear
  3912                           
  3913  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  3914  0001'                    clrloop0:	
  3915  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  3916  0002' 3101               	addfsr 0,1
  3917  0003' 3001               	movlw	1
  3918  0004' 02FE               	subwf	126,f
  3919  0005' 3000               	movlw	0
  3920  0006' 3BFF               	subwfb	127,f
  3921  0007' 087F               	movf	127,w
  3922  0008' 047E               	iorwf	126,w
  3923  0009' 1903               	btfsc	3,2
  3924  000A' 3400               	retlw	0	;all done for this memory range, return
  3925  000B' 2800'              	goto	clrloop0	;have we reached the end yet?
  3926                           
  3927                           	psect	cstackBANK1
  3928  0000'                    __pcstackBANK1:	
  3929  0000'                    main@R:	
  3930                           
  3931                           ; 3 bytes @ 0x0
  3932  0000'                    	ds	3
  3933  0003'                    _main$1015:	
  3934                           
  3935                           ; 3 bytes @ 0x3
  3936  0003'                    	ds	3
  3937  0006'                    main@PWM_Output:	
  3938                           
  3939                           ; 2 bytes @ 0x6
  3940  0006'                    	ds	2
  3941  0008'                    main@minutes:	
  3942                           
  3943                           ; 2 bytes @ 0x8
  3944  0008'                    	ds	2
  3945  000A'                    main@seconds:	
  3946                           
  3947                           ; 2 bytes @ 0xA
  3948  000A'                    	ds	2
  3949  000C'                    main@counter:	
  3950                           
  3951                           ; 2 bytes @ 0xC
  3952  000C'                    	ds	2
  3953  000E'                    main@readTemperature:	
  3954                           
  3955                           ; 2 bytes @ 0xE
  3956  000E'                    	ds	2
  3957  0010'                    main@toggle:	
  3958                           
  3959                           ; 1 bytes @ 0x10
  3960  0010'                    	ds	1
  3961  0011'                    main@displayTemp:	
  3962                           
  3963                           ; 2 bytes @ 0x11
  3964  0011'                    	ds	2
  3965  0013'                    main@totals:	
  3966                           
  3967                           ; 4 bytes @ 0x13
  3968  0013'                    	ds	4
  3969  0017'                    main@steinhart:	
  3970                           
  3971                           ; 3 bytes @ 0x17
  3972  0017'                    	ds	3
  3973                           
  3974                           	psect	cstackCOMMON
  3975  0000'                    __pcstackCOMMON:	
  3976  0000'                    ?_LCD_Cmd:	
  3977  0000'                    ?_LCD_Write_Char:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0000'                    ?_OSCILLATOR_Initialize:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0000'                    ??_OSCILLATOR_Initialize:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0000'                    ?_ADCC_Initialize:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989  0000'                    ??_ADCC_Initialize:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0000'                    ?_PWM6_Initialize:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995  0000'                    ??_PWM6_Initialize:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0000'                    ?_TMR0_Initialize:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0000'                    ??_TMR0_Initialize:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0000'                    ?_TMR2_Initialize:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0000'                    ??_TMR2_Initialize:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0000'                    ?_Init_PID:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0000'                    ??_Init_PID:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0000'                    ?_readButtons:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0000'                    ??_readButtons:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0000'                    ?_tempSetpoint:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0000'                    ??_tempSetpoint:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0000'                    ?_InitCustomChars:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0000'                    ?_LCD_Port:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0000'                    ??_LCD_Port:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0000'                    ?_LCD_Clear:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0000'                    ?_LCD_Init:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0000'                    ?_PIN_MANAGER_Initialize:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046  0000'                    ??_PIN_MANAGER_Initialize:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049  0000'                    ?_SYSTEM_Initialize:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052  0000'                    ?_PWM6_LoadDutyValue:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0000'                    ?_main:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058  0000'                    ?_ADCC_GetSingleConversion:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061  0000'                    ?___wmul:	
  4062                           ; 2 bytes @ 0x0
  4063                           
  4064  0000'                    ?___awdiv:	
  4065                           ; 2 bytes @ 0x0
  4066                           
  4067  0000'                    ?___awmod:	
  4068                           ; 2 bytes @ 0x0
  4069                           
  4070  0000'                    ?_PID_Calculate:	
  4071                           ; 2 bytes @ 0x0
  4072                           
  4073  0000'                    ?___ftpack:	
  4074                           ; 3 bytes @ 0x0
  4075                           
  4076  0000'                    ?_frexp:	
  4077                           ; 3 bytes @ 0x0
  4078                           
  4079  0000'                    ?___ftneg:	
  4080                           ; 3 bytes @ 0x0
  4081                           
  4082  0000'                    ?___aldiv:	
  4083                           ; 3 bytes @ 0x0
  4084                           
  4085  0000'                    LCD_Port@a:	
  4086                           ; 4 bytes @ 0x0
  4087                           
  4088  0000'                    PIN_MANAGER_Initialize@state:	
  4089                           ; 1 bytes @ 0x0
  4090                           
  4091  0000'                    PWM6_LoadDutyValue@dutyValue:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094  0000'                    _PID_Calculate$0:	
  4095                           ; 2 bytes @ 0x0
  4096                           
  4097  0000'                    ___wmul@multiplier:	
  4098                           ; 2 bytes @ 0x0
  4099                           
  4100  0000'                    ___awdiv@divisor:	
  4101                           ; 2 bytes @ 0x0
  4102                           
  4103  0000'                    ___awmod@divisor:	
  4104                           ; 2 bytes @ 0x0
  4105                           
  4106  0000'                    ___ftpack@arg:	
  4107                           ; 2 bytes @ 0x0
  4108                           
  4109  0000'                    ___ftneg@f1:	
  4110                           ; 3 bytes @ 0x0
  4111                           
  4112  0000'                    frexp@value:	
  4113                           ; 3 bytes @ 0x0
  4114                           
  4115  0000'                    ___aldiv@divisor:	
  4116                           ; 3 bytes @ 0x0
  4117                           
  4118                           
  4119                           ; 4 bytes @ 0x0
  4120  0000'                    	ds	1
  4121  0001'                    ??_LCD_Cmd:	
  4122  0001'                    ??_LCD_Write_Char:	
  4123                           ; 1 bytes @ 0x1
  4124                           
  4125                           
  4126                           ; 1 bytes @ 0x1
  4127  0001'                    	ds	1
  4128  0002'                    ??_PWM6_LoadDutyValue:	
  4129  0002'                    LCD_Cmd@a:	
  4130                           ; 1 bytes @ 0x2
  4131                           
  4132  0002'                    LCD_Write_Char@temp:	
  4133                           ; 1 bytes @ 0x2
  4134                           
  4135  0002'                    ___wmul@multiplicand:	
  4136                           ; 1 bytes @ 0x2
  4137                           
  4138  0002'                    ___awdiv@dividend:	
  4139                           ; 2 bytes @ 0x2
  4140                           
  4141  0002'                    ___awmod@dividend:	
  4142                           ; 2 bytes @ 0x2
  4143                           
  4144  0002'                    _PID_Calculate$1:	
  4145                           ; 2 bytes @ 0x2
  4146                           
  4147                           
  4148                           ; 3 bytes @ 0x2
  4149  0002'                    	ds	1
  4150  0003'                    ??_LCD_Clear:	
  4151  0003'                    ?_LCD_Set_Cursor:	
  4152                           ; 1 bytes @ 0x3
  4153                           
  4154  0003'                    ??_LCD_Init:	
  4155                           ; 1 bytes @ 0x3
  4156                           
  4157  0003'                    ??_ADCC_GetSingleConversion:	
  4158                           ; 1 bytes @ 0x3
  4159                           
  4160  0003'                    ??___ftneg:	
  4161                           ; 1 bytes @ 0x3
  4162                           
  4163  0003'                    LCD_Set_Cursor@y:	
  4164                           ; 1 bytes @ 0x3
  4165                           
  4166  0003'                    LCD_Write_Char@y:	
  4167                           ; 1 bytes @ 0x3
  4168                           
  4169  0003'                    ADCC_GetSingleConversion@channel:	
  4170                           ; 1 bytes @ 0x3
  4171                           
  4172  0003'                    ___ftpack@exp:	
  4173                           ; 1 bytes @ 0x3
  4174                           
  4175  0003'                    frexp@eptr:	
  4176                           ; 1 bytes @ 0x3
  4177                           
  4178                           
  4179                           ; 1 bytes @ 0x3
  4180  0003'                    	ds	1
  4181  0004'                    ??_frexp:	
  4182  0004'                    ??_LCD_Set_Cursor:	
  4183                           ; 1 bytes @ 0x4
  4184                           
  4185  0004'                    ??___wmul:	
  4186                           ; 1 bytes @ 0x4
  4187                           
  4188  0004'                    ??___awdiv:	
  4189                           ; 1 bytes @ 0x4
  4190                           
  4191  0004'                    ??___awmod:	
  4192                           ; 1 bytes @ 0x4
  4193                           
  4194  0004'                    LCD_Write_Char@a:	
  4195                           ; 1 bytes @ 0x4
  4196                           
  4197  0004'                    ___ftpack@sign:	
  4198                           ; 1 bytes @ 0x4
  4199                           
  4200  0004'                    ___wmul@product:	
  4201                           ; 1 bytes @ 0x4
  4202                           
  4203  0004'                    ___aldiv@dividend:	
  4204                           ; 2 bytes @ 0x4
  4205                           
  4206                           
  4207                           ; 4 bytes @ 0x4
  4208  0004'                    	ds	1
  4209  0005'                    ??_PID_Calculate:	
  4210  0005'                    ??___ftpack:	
  4211                           ; 1 bytes @ 0x5
  4212                           
  4213  0005'                    ??_InitCustomChars:	
  4214                           ; 1 bytes @ 0x5
  4215                           
  4216  0005'                    ?_LCD_Write_String:	
  4217                           ; 1 bytes @ 0x5
  4218                           
  4219  0005'                    LCD_Init@style:	
  4220                           ; 1 bytes @ 0x5
  4221                           
  4222  0005'                    ___awdiv@counter:	
  4223                           ; 1 bytes @ 0x5
  4224                           
  4225  0005'                    ___awmod@counter:	
  4226                           ; 1 bytes @ 0x5
  4227                           
  4228  0005'                    LCD_Write_String@a:	
  4229                           ; 1 bytes @ 0x5
  4230                           
  4231                           
  4232                           ; 2 bytes @ 0x5
  4233  0005'                    	ds	1
  4234  0006'                    ?___lwdiv:	
  4235  0006'                    InitCustomChars@i:	
  4236                           ; 2 bytes @ 0x6
  4237                           
  4238  0006'                    LCD_Set_Cursor@x:	
  4239                           ; 1 bytes @ 0x6
  4240                           
  4241  0006'                    ___awdiv@sign:	
  4242                           ; 1 bytes @ 0x6
  4243                           
  4244  0006'                    ___awmod@sign:	
  4245                           ; 1 bytes @ 0x6
  4246                           
  4247  0006'                    ___lwdiv@divisor:	
  4248                           ; 1 bytes @ 0x6
  4249                           
  4250                           
  4251                           ; 2 bytes @ 0x6
  4252  0006'                    	ds	1
  4253  0007'                    ??_LCD_Write_String:	
  4254  0007'                    ??_SYSTEM_Initialize:	
  4255                           ; 1 bytes @ 0x7
  4256                           
  4257  0007'                    LCD_Set_Cursor@z:	
  4258                           ; 1 bytes @ 0x7
  4259                           
  4260  0007'                    ___awdiv@quotient:	
  4261                           ; 1 bytes @ 0x7
  4262                           
  4263                           
  4264                           ; 2 bytes @ 0x7
  4265  0007'                    	ds	1
  4266  0008'                    ??___aldiv:	
  4267  0008'                    ?___awtoft:	
  4268                           ; 1 bytes @ 0x8
  4269                           
  4270  0008'                    ?___lbtoft:	
  4271                           ; 3 bytes @ 0x8
  4272                           
  4273  0008'                    ?___lwtoft:	
  4274                           ; 3 bytes @ 0x8
  4275                           
  4276  0008'                    LCD_Set_Cursor@w:	
  4277                           ; 3 bytes @ 0x8
  4278                           
  4279  0008'                    LCD_Write_String@i:	
  4280                           ; 1 bytes @ 0x8
  4281                           
  4282  0008'                    ___awtoft@c:	
  4283                           ; 2 bytes @ 0x8
  4284                           
  4285  0008'                    ___lwdiv@dividend:	
  4286                           ; 2 bytes @ 0x8
  4287                           
  4288  0008'                    ___lwtoft@c:	
  4289                           ; 2 bytes @ 0x8
  4290                           
  4291                           
  4292                           ; 2 bytes @ 0x8
  4293  0008'                    	ds	1
  4294  0009'                    ?_LCD_Write_Int:	
  4295  0009'                    LCD_Set_Cursor@temp:	
  4296                           ; 1 bytes @ 0x9
  4297                           
  4298  0009'                    LCD_Write_Int@value:	
  4299                           ; 1 bytes @ 0x9
  4300                           
  4301                           
  4302                           ; 2 bytes @ 0x9
  4303  0009'                    	ds	1
  4304  000A'                    ??___lwdiv:	
  4305                           
  4306                           ; 1 bytes @ 0xA
  4307  000A'                    	ds	1
  4308  000B'                    ??___awtoft:	
  4309  000B'                    ??___lwtoft:	
  4310                           ; 1 bytes @ 0xB
  4311                           
  4312  000B'                    LCD_Write_Int@fieldLength:	
  4313                           ; 1 bytes @ 0xB
  4314                           
  4315  000B'                    ___lbtoft@c:	
  4316                           ; 1 bytes @ 0xB
  4317                           
  4318  000B'                    ___lwdiv@quotient:	
  4319                           ; 1 bytes @ 0xB
  4320                           
  4321                           
  4322                           ; 2 bytes @ 0xB
  4323  000B'                    	ds	1
  4324  000C'                    LCD_Write_Int@numPlaces:	
  4325                           
  4326                           ; 1 bytes @ 0xC
  4327  000C'                    	ds	1
  4328  000D'                    LCD_Write_Int@sign:	
  4329  000D'                    ___awtoft@sign:	
  4330                           ; 1 bytes @ 0xD
  4331                           
  4332  000D'                    ___lwdiv@counter:	
  4333                           ; 1 bytes @ 0xD
  4334                           
  4335                           
  4336                           ; 1 bytes @ 0xD
  4337  000D'                    	ds	1
  4338  000E'                    ??_eval_poly:	
  4339  000E'                    ??___ftsub:	
  4340                           ; 1 bytes @ 0xE
  4341                           
  4342                           
  4343                           	psect	cstackBANK0
  4344  0000'                    __pcstackBANK0:	
  4345                           ; 1 bytes @ 0xE
  4346                           
  4347  0000'                    ??_LCD_Write_Int:	
  4348  0000'                    ??___lbtoft:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0000'                    ?___ftdiv:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0000'                    ?___ftmul:	
  4355                           ; 3 bytes @ 0x0
  4356                           
  4357  0000'                    ___aldiv@counter:	
  4358                           ; 3 bytes @ 0x0
  4359                           
  4360  0000'                    ___ftdiv@f2:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0000'                    ___ftmul@f1:	
  4364                           ; 3 bytes @ 0x0
  4365                           
  4366                           
  4367                           ; 3 bytes @ 0x0
  4368  0000'                    	ds	1
  4369  0001'                    ___aldiv@sign:	
  4370                           
  4371                           ; 1 bytes @ 0x1
  4372  0001'                    	ds	1
  4373  0002'                    ___aldiv@quotient:	
  4374                           
  4375                           ; 4 bytes @ 0x2
  4376  0002'                    	ds	1
  4377  0003'                    ___ftdiv@f1:	
  4378  0003'                    ___ftmul@f2:	
  4379                           ; 3 bytes @ 0x3
  4380                           
  4381                           
  4382                           ; 3 bytes @ 0x3
  4383  0003'                    	ds	2
  4384  0005'                    LCD_Write_Int@str:	
  4385                           
  4386                           ; 5 bytes @ 0x5
  4387  0005'                    	ds	1
  4388  0006'                    ??___ftdiv:	
  4389  0006'                    ??___ftmul:	
  4390                           ; 1 bytes @ 0x6
  4391                           
  4392                           
  4393                           ; 1 bytes @ 0x6
  4394  0006'                    	ds	4
  4395  000A'                    ___ftdiv@cntr:	
  4396  000A'                    ___ftmul@exp:	
  4397                           ; 1 bytes @ 0xA
  4398                           
  4399  000A'                    LCD_Write_Int@j:	
  4400                           ; 1 bytes @ 0xA
  4401                           
  4402                           
  4403                           ; 2 bytes @ 0xA
  4404  000A'                    	ds	1
  4405  000B'                    ___ftdiv@f3:	
  4406  000B'                    ___ftmul@f3_as_product:	
  4407                           ; 3 bytes @ 0xB
  4408                           
  4409                           
  4410                           ; 3 bytes @ 0xB
  4411  000B'                    	ds	1
  4412  000C'                    LCD_Write_Int@i:	
  4413                           
  4414                           ; 2 bytes @ 0xC
  4415  000C'                    	ds	2
  4416  000E'                    ___ftdiv@exp:	
  4417  000E'                    ___ftmul@cntr:	
  4418                           ; 1 bytes @ 0xE
  4419                           
  4420                           
  4421                           ; 1 bytes @ 0xE
  4422  000E'                    	ds	1
  4423  000F'                    ___ftdiv@sign:	
  4424  000F'                    ___ftmul@sign:	
  4425                           ; 1 bytes @ 0xF
  4426                           
  4427                           
  4428                           ; 1 bytes @ 0xF
  4429  000F'                    	ds	1
  4430  0010'                    ?___ftadd:	
  4431  0010'                    ?___fttol:	
  4432                           ; 3 bytes @ 0x10
  4433                           
  4434  0010'                    ___ftadd@f1:	
  4435                           ; 4 bytes @ 0x10
  4436                           
  4437  0010'                    ___fttol@f1:	
  4438                           ; 3 bytes @ 0x10
  4439                           
  4440                           
  4441                           ; 3 bytes @ 0x10
  4442  0010'                    	ds	3
  4443  0013'                    ___ftadd@f2:	
  4444                           
  4445                           ; 3 bytes @ 0x13
  4446  0013'                    	ds	1
  4447  0014'                    ??___fttol:	
  4448                           
  4449                           ; 1 bytes @ 0x14
  4450  0014'                    	ds	2
  4451  0016'                    ??___ftadd:	
  4452                           
  4453                           ; 1 bytes @ 0x16
  4454  0016'                    	ds	2
  4455  0018'                    ___fttol@sign1:	
  4456                           
  4457                           ; 1 bytes @ 0x18
  4458  0018'                    	ds	1
  4459  0019'                    ___fttol@lval:	
  4460                           
  4461                           ; 4 bytes @ 0x19
  4462  0019'                    	ds	1
  4463  001A'                    ___ftadd@sign:	
  4464                           
  4465                           ; 1 bytes @ 0x1A
  4466  001A'                    	ds	1
  4467  001B'                    ___ftadd@exp2:	
  4468                           
  4469                           ; 1 bytes @ 0x1B
  4470  001B'                    	ds	1
  4471  001C'                    ___ftadd@exp1:	
  4472                           
  4473                           ; 1 bytes @ 0x1C
  4474  001C'                    	ds	1
  4475  001D'                    ?___ftge:	
  4476  001D'                    ?_eval_poly:	
  4477                           ; 1 bit 
  4478                           
  4479  001D'                    ?___ftsub:	
  4480                           ; 3 bytes @ 0x1D
  4481                           
  4482  001D'                    ___fttol@exp1:	
  4483                           ; 3 bytes @ 0x1D
  4484                           
  4485  001D'                    ___ftge@ff1:	
  4486                           ; 1 bytes @ 0x1D
  4487                           
  4488  001D'                    ___ftsub@f2:	
  4489                           ; 3 bytes @ 0x1D
  4490                           
  4491  001D'                    eval_poly@x:	
  4492                           ; 3 bytes @ 0x1D
  4493                           
  4494                           
  4495                           ; 3 bytes @ 0x1D
  4496  001D'                    	ds	3
  4497  0020'                    eval_poly@d:	
  4498  0020'                    ___ftge@ff2:	
  4499                           ; 2 bytes @ 0x20
  4500                           
  4501  0020'                    ___ftsub@f1:	
  4502                           ; 3 bytes @ 0x20
  4503                           
  4504                           
  4505                           ; 3 bytes @ 0x20
  4506  0020'                    	ds	2
  4507  0022'                    eval_poly@n:	
  4508                           
  4509                           ; 2 bytes @ 0x22
  4510  0022'                    	ds	1
  4511  0023'                    ??___ftge:	
  4512                           
  4513                           ; 1 bytes @ 0x23
  4514  0023'                    	ds	1
  4515  0024'                    eval_poly@res:	
  4516                           
  4517                           ; 3 bytes @ 0x24
  4518  0024'                    	ds	3
  4519  0027'                    ?_log:	
  4520  0027'                    log@x:	
  4521                           ; 3 bytes @ 0x27
  4522                           
  4523                           
  4524                           ; 3 bytes @ 0x27
  4525  0027'                    	ds	3
  4526  002A'                    ??_log:	
  4527                           
  4528                           ; 1 bytes @ 0x2A
  4529  002A'                    	ds	1
  4530  002B'                    log@exponent:	
  4531                           
  4532                           ; 2 bytes @ 0x2B
  4533  002B'                    	ds	2
  4534  002D'                    ??_main:	
  4535                           
  4536                           ; 1 bytes @ 0x2D
  4537  002D'                    	ds	10
  4538                           
  4539                           	psect	maintext
  4540  0000'                    __pmaintext:	
  4541 ;;
  4542 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  4543 ;;
  4544 ;; *************** function _main *****************
  4545 ;; Defined at:
  4546 ;;		line 13 in file "main.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  totals          4   19[BANK1 ] long 
  4551 ;;  steinhart       3   23[BANK1 ] float 
  4552 ;;  R               3    0[BANK1 ] float 
  4553 ;;  displayTemp     2   17[BANK1 ] unsigned int 
  4554 ;;  readTemperat    2   14[BANK1 ] unsigned int 
  4555 ;;  counter         2   12[BANK1 ] unsigned int 
  4556 ;;  seconds         2   10[BANK1 ] unsigned int 
  4557 ;;  minutes         2    8[BANK1 ] unsigned int 
  4558 ;;  PWM_Output      2    6[BANK1 ] unsigned int 
  4559 ;;  readTemperat    2    0        unsigned int 
  4560 ;;  toggle          1   16[BANK1 ] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : B1F/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Totals:         0      10      26       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;Total ram usage:       36 bytes
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		_ADCC_GetSingleConversion
  4578 ;;		_LCD_Set_Cursor
  4579 ;;		_LCD_Write_Char
  4580 ;;		_LCD_Write_Int
  4581 ;;		_LCD_Write_String
  4582 ;;		_PID_Calculate
  4583 ;;		_PWM6_LoadDutyValue
  4584 ;;		_SYSTEM_Initialize
  4585 ;;		___aldiv
  4586 ;;		___ftadd
  4587 ;;		___ftdiv
  4588 ;;		___ftge
  4589 ;;		___ftmul
  4590 ;;		___ftneg
  4591 ;;		___ftsub
  4592 ;;		___fttol
  4593 ;;		___lbtoft
  4594 ;;		___lwdiv
  4595 ;;		___lwtoft
  4596 ;;		___wmul
  4597 ;;		_log
  4598 ;;		_readButtons
  4599 ;;		_tempSetpoint
  4600 ;; This function is called by:
  4601 ;;		Startup code after reset
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function _main
  4607  0000'                    _main:	
  4608                           
  4609                           ;main.c: 15: SYSTEM_Initialize();
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _main: [allreg]
  4613  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  4614                           
  4615                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  4616  0003' 0021               	movlb	1	; select bank1
  4617  0004' 0180'              	clrf	main@PWM_Output^(0+128)
  4618  0005' 0180'              	clrf	(main@PWM_Output+1)^(0+128)
  4619  0006' 0180'              	clrf	main@seconds^(0+128)
  4620  0007' 0180'              	clrf	(main@seconds+1)^(0+128)
  4621  0008' 0180'              	clrf	main@counter^(0+128)
  4622  0009' 0180'              	clrf	(main@counter+1)^(0+128)
  4623  000A' 0180'              	clrf	main@minutes^(0+128)
  4624  000B' 0180'              	clrf	(main@minutes+1)^(0+128)
  4625                           
  4626                           ;main.c: 19: uint8_t toggle = 0;
  4627  000C' 0180'              	clrf	main@toggle^(0+128)
  4628                           
  4629                           ;main.c: 21: float R, steinhart;
  4630                           ;main.c: 23: static uint16_t sampleIndex = 0;
  4631                           ;main.c: 25: int32_t totals = 0;
  4632  000D' 3000               	movlw	0
  4633  000E' 0080'              	movwf	(main@totals+3)^(0+128)
  4634  000F' 3000               	movlw	0
  4635  0010' 0080'              	movwf	(main@totals+2)^(0+128)
  4636  0011' 3000               	movlw	0
  4637  0012' 0080'              	movwf	(main@totals+1)^(0+128)
  4638  0013' 3000               	movlw	0
  4639  0014' 0080'              	movwf	main@totals^(0+128)
  4640  0015'                    l2608:	
  4641                           ;main.c: 28: while (1)
  4642                           
  4643                           
  4644                           ;main.c: 29: {
  4645                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  4646  0015' 3002               	movlw	2
  4647  0016' 3180' 2000' 3180'  	fcall	_ADCC_GetSingleConversion
  4648  0019' 0801'              	movf	?_ADCC_GetSingleConversion+1,w
  4649  001A' 0021               	movlb	1	; select bank1
  4650  001B' 0080'              	movwf	(main@readTemperature+1)^(0+128)
  4651  001C' 0800'              	movf	?_ADCC_GetSingleConversion,w
  4652  001D' 0080'              	movwf	main@readTemperature^(0+128)
  4653                           
  4654                           ;main.c: 32: totals = totals - samples[sampleIndex];
  4655  001E' 0800'              	movf	main@totals^(0+128),w
  4656  001F' 0020               	movlb	0	; select bank0
  4657  0020' 00AD'              	movwf	??_main
  4658  0021' 0021               	movlb	1	; select bank1
  4659  0022' 0800'              	movf	(main@totals+1)^(0+128),w
  4660  0023' 0020               	movlb	0	; select bank0
  4661  0024' 00AE'              	movwf	??_main+1
  4662  0025' 0021               	movlb	1	; select bank1
  4663  0026' 0800'              	movf	(main@totals+2)^(0+128),w
  4664  0027' 0020               	movlb	0	; select bank0
  4665  0028' 00AF'              	movwf	??_main+2
  4666  0029' 0021               	movlb	1	; select bank1
  4667  002A' 0800'              	movf	(main@totals+3)^(0+128),w
  4668  002B' 0020               	movlb	0	; select bank0
  4669  002C' 00B0'              	movwf	??_main+3
  4670  002D' 0021               	movlb	1	; select bank1
  4671  002E' 0800'              	movf	(main@sampleIndex+1)^(0+128),w
  4672  002F' 0020               	movlb	0	; select bank0
  4673  0030' 00B2'              	movwf	??_main+5
  4674  0031' 0021               	movlb	1	; select bank1
  4675  0032' 0800'              	movf	main@sampleIndex^(0+128),w
  4676  0033' 0020               	movlb	0	; select bank0
  4677  0034' 00B1'              	movwf	??_main+4
  4678  0035' 35B1'              	lslf	??_main+4,f
  4679  0036' 0DB2'              	rlf	??_main+5,f
  4680  0037' 308C               	movlw	140
  4681  0038' 0731'              	addwf	??_main+4,w
  4682  0039' 0084               	movwf	4
  4683  003A' 3023               	movlw	35
  4684  003B' 3D32'              	addwfc	??_main+5,w
  4685  003C' 0085               	movwf	5
  4686  003D' 3F00               	moviw [0]fsr0
  4687  003E' 00B3'              	movwf	??_main+6
  4688  003F' 3F01               	moviw [1]fsr0
  4689  0040' 00B4'              	movwf	??_main+7
  4690  0041' 01B5'              	clrf	??_main+8
  4691  0042' 01B6'              	clrf	??_main+9
  4692  0043' 09B3'              	comf	??_main+6,f
  4693  0044' 09B4'              	comf	??_main+7,f
  4694  0045' 09B5'              	comf	??_main+8,f
  4695  0046' 09B6'              	comf	??_main+9,f
  4696  0047' 0AB3'              	incf	??_main+6,f
  4697  0048' 1903               	skipnz
  4698  0049' 0AB4'              	incf	??_main+7,f
  4699  004A' 1903               	skipnz
  4700  004B' 0AB5'              	incf	??_main+8,f
  4701  004C' 1903               	skipnz
  4702  004D' 0AB6'              	incf	??_main+9,f
  4703  004E' 0833'              	movf	??_main+6,w
  4704  004F' 07AD'              	addwf	??_main,f
  4705  0050' 0834'              	movf	??_main+7,w
  4706  0051' 3DAE'              	addwfc	??_main+1,f
  4707  0052' 0835'              	movf	??_main+8,w
  4708  0053' 3DAF'              	addwfc	??_main+2,f
  4709  0054' 0836'              	movf	??_main+9,w
  4710  0055' 3DB0'              	addwfc	??_main+3,f
  4711  0056' 0830'              	movf	??_main+3,w
  4712  0057' 0021               	movlb	1	; select bank1
  4713  0058' 0080'              	movwf	(main@totals+3)^(0+128)
  4714  0059' 0020               	movlb	0	; select bank0
  4715  005A' 082F'              	movf	??_main+2,w
  4716  005B' 0021               	movlb	1	; select bank1
  4717  005C' 0080'              	movwf	(main@totals+2)^(0+128)
  4718  005D' 0020               	movlb	0	; select bank0
  4719  005E' 082E'              	movf	??_main+1,w
  4720  005F' 0021               	movlb	1	; select bank1
  4721  0060' 0080'              	movwf	(main@totals+1)^(0+128)
  4722  0061' 0020               	movlb	0	; select bank0
  4723  0062' 082D'              	movf	??_main,w
  4724  0063' 0021               	movlb	1	; select bank1
  4725  0064' 0080'              	movwf	main@totals^(0+128)
  4726                           
  4727                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  4728  0065' 0800'              	movf	(main@sampleIndex+1)^(0+128),w
  4729  0066' 0020               	movlb	0	; select bank0
  4730  0067' 00AE'              	movwf	??_main+1
  4731  0068' 0021               	movlb	1	; select bank1
  4732  0069' 0800'              	movf	main@sampleIndex^(0+128),w
  4733  006A' 0020               	movlb	0	; select bank0
  4734  006B' 00AD'              	movwf	??_main
  4735  006C' 35AD'              	lslf	??_main,f
  4736  006D' 0DAE'              	rlf	??_main+1,f
  4737  006E' 308C               	movlw	140
  4738  006F' 00AF'              	movwf	??_main+2
  4739  0070' 3023               	movlw	35
  4740  0071' 00B0'              	movwf	??_main+3
  4741  0072' 082D'              	movf	??_main,w
  4742  0073' 072F'              	addwf	??_main+2,w
  4743  0074' 0086               	movwf	6
  4744  0075' 082E'              	movf	??_main+1,w
  4745  0076' 3D30'              	addwfc	??_main+3,w
  4746  0077' 0087               	movwf	7
  4747  0078' 0021               	movlb	1	; select bank1
  4748  0079' 0800'              	movf	main@readTemperature^(0+128),w
  4749  007A' 3FC0               	movwi [0]fsr1
  4750  007B' 0800'              	movf	(main@readTemperature+1)^(0+128),w
  4751  007C' 3FC1               	movwi [1]fsr1
  4752                           
  4753                           ;main.c: 36: totals = totals + samples[sampleIndex];
  4754  007D' 0800'              	movf	main@totals^(0+128),w
  4755  007E' 0020               	movlb	0	; select bank0
  4756  007F' 00AD'              	movwf	??_main
  4757  0080' 0021               	movlb	1	; select bank1
  4758  0081' 0800'              	movf	(main@totals+1)^(0+128),w
  4759  0082' 0020               	movlb	0	; select bank0
  4760  0083' 00AE'              	movwf	??_main+1
  4761  0084' 0021               	movlb	1	; select bank1
  4762  0085' 0800'              	movf	(main@totals+2)^(0+128),w
  4763  0086' 0020               	movlb	0	; select bank0
  4764  0087' 00AF'              	movwf	??_main+2
  4765  0088' 0021               	movlb	1	; select bank1
  4766  0089' 0800'              	movf	(main@totals+3)^(0+128),w
  4767  008A' 0020               	movlb	0	; select bank0
  4768  008B' 00B0'              	movwf	??_main+3
  4769  008C' 0021               	movlb	1	; select bank1
  4770  008D' 0800'              	movf	(main@sampleIndex+1)^(0+128),w
  4771  008E' 0020               	movlb	0	; select bank0
  4772  008F' 00B2'              	movwf	??_main+5
  4773  0090' 0021               	movlb	1	; select bank1
  4774  0091' 0800'              	movf	main@sampleIndex^(0+128),w
  4775  0092' 0020               	movlb	0	; select bank0
  4776  0093' 00B1'              	movwf	??_main+4
  4777  0094' 35B1'              	lslf	??_main+4,f
  4778  0095' 0DB2'              	rlf	??_main+5,f
  4779  0096' 308C               	movlw	140
  4780  0097' 0731'              	addwf	??_main+4,w
  4781  0098' 0084               	movwf	4
  4782  0099' 3023               	movlw	35
  4783  009A' 3D32'              	addwfc	??_main+5,w
  4784  009B' 0085               	movwf	5
  4785  009C' 3F00               	moviw [0]fsr0
  4786  009D' 00B3'              	movwf	??_main+6
  4787  009E' 3F01               	moviw [1]fsr0
  4788  009F' 00B4'              	movwf	??_main+7
  4789  00A0' 01B5'              	clrf	??_main+8
  4790  00A1' 01B6'              	clrf	??_main+9
  4791  00A2' 0833'              	movf	??_main+6,w
  4792  00A3' 07AD'              	addwf	??_main,f
  4793  00A4' 0834'              	movf	??_main+7,w
  4794  00A5' 3DAE'              	addwfc	??_main+1,f
  4795  00A6' 0835'              	movf	??_main+8,w
  4796  00A7' 3DAF'              	addwfc	??_main+2,f
  4797  00A8' 0836'              	movf	??_main+9,w
  4798  00A9' 3DB0'              	addwfc	??_main+3,f
  4799  00AA' 0830'              	movf	??_main+3,w
  4800  00AB' 0021               	movlb	1	; select bank1
  4801  00AC' 0080'              	movwf	(main@totals+3)^(0+128)
  4802  00AD' 0020               	movlb	0	; select bank0
  4803  00AE' 082F'              	movf	??_main+2,w
  4804  00AF' 0021               	movlb	1	; select bank1
  4805  00B0' 0080'              	movwf	(main@totals+2)^(0+128)
  4806  00B1' 0020               	movlb	0	; select bank0
  4807  00B2' 082E'              	movf	??_main+1,w
  4808  00B3' 0021               	movlb	1	; select bank1
  4809  00B4' 0080'              	movwf	(main@totals+1)^(0+128)
  4810  00B5' 0020               	movlb	0	; select bank0
  4811  00B6' 082D'              	movf	??_main,w
  4812  00B7' 0021               	movlb	1	; select bank1
  4813  00B8' 0080'              	movwf	main@totals^(0+128)
  4814                           
  4815                           ;main.c: 38: sampleIndex += 1;
  4816  00B9' 3001               	movlw	1
  4817  00BA' 0780'              	addwf	main@sampleIndex^(0+128),f
  4818  00BB' 3000               	movlw	0
  4819  00BC' 3D80'              	addwfc	(main@sampleIndex+1)^(0+128),f
  4820                           
  4821                           ;main.c: 40: if(sampleIndex >= 50)
  4822  00BD' 3000               	movlw	0
  4823  00BE' 0200'              	subwf	(main@sampleIndex+1)^(0+128),w
  4824  00BF' 3032               	movlw	50
  4825  00C0' 1903               	skipnz
  4826  00C1' 0200'              	subwf	main@sampleIndex^(0+128),w
  4827  00C2' 1C03               	skipc
  4828  00C3' 2800'              	goto	l2622
  4829                           
  4830                           ;main.c: 41: {
  4831                           ;main.c: 42: sampleIndex = 0;
  4832  00C4' 0180'              	clrf	main@sampleIndex^(0+128)
  4833  00C5' 0180'              	clrf	(main@sampleIndex+1)^(0+128)
  4834  00C6'                    l2622:	
  4835                           
  4836                           ;main.c: 43: }
  4837                           ;main.c: 45: readTemperature = totals / 50;
  4838  00C6' 3000               	movlw	0
  4839  00C7' 0083'              	movwf	___aldiv@divisor+3
  4840  00C8' 3000               	movlw	0
  4841  00C9' 0082'              	movwf	___aldiv@divisor+2
  4842  00CA' 3000               	movlw	0
  4843  00CB' 0081'              	movwf	___aldiv@divisor+1
  4844  00CC' 3032               	movlw	50
  4845  00CD' 0080'              	movwf	___aldiv@divisor
  4846  00CE' 0800'              	movf	(main@totals+3)^(0+128),w
  4847  00CF' 0087'              	movwf	___aldiv@dividend+3
  4848  00D0' 0800'              	movf	(main@totals+2)^(0+128),w
  4849  00D1' 0086'              	movwf	___aldiv@dividend+2
  4850  00D2' 0800'              	movf	(main@totals+1)^(0+128),w
  4851  00D3' 0085'              	movwf	___aldiv@dividend+1
  4852  00D4' 0800'              	movf	main@totals^(0+128),w
  4853  00D5' 0084'              	movwf	___aldiv@dividend
  4854  00D6' 3180' 2000' 3180'  	fcall	___aldiv
  4855  00D9' 0801'              	movf	?___aldiv+1,w
  4856  00DA' 0021               	movlb	1	; select bank1
  4857  00DB' 0080'              	movwf	(main@readTemperature+1)^(0+128)
  4858  00DC' 0800'              	movf	?___aldiv,w
  4859  00DD' 0080'              	movwf	main@readTemperature^(0+128)
  4860                           
  4861                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  4862  00DE' 3000               	movlw	0
  4863  00DF' 0020               	movlb	0	; select bank0
  4864  00E0' 0090'              	movwf	___ftadd@f1
  4865  00E1' 3080               	movlw	128
  4866  00E2' 0091'              	movwf	___ftadd@f1+1
  4867  00E3' 30BF               	movlw	191
  4868  00E4' 0092'              	movwf	___ftadd@f1+2
  4869  00E5' 0021               	movlb	1	; select bank1
  4870  00E6' 0800'              	movf	(main@readTemperature+1)^(0+128),w
  4871  00E7' 0089'              	movwf	___lwtoft@c+1
  4872  00E8' 0800'              	movf	main@readTemperature^(0+128),w
  4873  00E9' 0088'              	movwf	___lwtoft@c
  4874  00EA' 3180' 2000' 3180'  	fcall	___lwtoft
  4875  00ED' 0808'              	movf	?___lwtoft,w
  4876  00EE' 0020               	movlb	0	; select bank0
  4877  00EF' 0080'              	movwf	___ftdiv@f2
  4878  00F0' 0809'              	movf	?___lwtoft+1,w
  4879  00F1' 0081'              	movwf	___ftdiv@f2+1
  4880  00F2' 080A'              	movf	?___lwtoft+2,w
  4881  00F3' 0082'              	movwf	___ftdiv@f2+2
  4882  00F4' 30C0               	movlw	192
  4883  00F5' 0083'              	movwf	___ftdiv@f1
  4884  00F6' 307F               	movlw	127
  4885  00F7' 0084'              	movwf	___ftdiv@f1+1
  4886  00F8' 3044               	movlw	68
  4887  00F9' 0085'              	movwf	___ftdiv@f1+2
  4888  00FA' 3180' 2000' 3180'  	fcall	___ftdiv
  4889  00FD' 0020               	movlb	0	; select bank0
  4890  00FE' 0800'              	movf	?___ftdiv,w
  4891  00FF' 0093'              	movwf	___ftadd@f2
  4892  0100' 0801'              	movf	?___ftdiv+1,w
  4893  0101' 0094'              	movwf	___ftadd@f2+1
  4894  0102' 0802'              	movf	?___ftdiv+2,w
  4895  0103' 0095'              	movwf	___ftadd@f2+2
  4896  0104' 3180' 2000' 3180'  	fcall	___ftadd
  4897  0107' 0020               	movlb	0	; select bank0
  4898  0108' 0810'              	movf	?___ftadd,w
  4899  0109' 0021               	movlb	1	; select bank1
  4900  010A' 0080'              	movwf	_main$1015^(0+128)
  4901  010B' 0020               	movlb	0	; select bank0
  4902  010C' 0811'              	movf	?___ftadd+1,w
  4903  010D' 0021               	movlb	1	; select bank1
  4904  010E' 0080'              	movwf	(_main$1015+1)^(0+128)
  4905  010F' 0020               	movlb	0	; select bank0
  4906  0110' 0812'              	movf	?___ftadd+2,w
  4907  0111' 0021               	movlb	1	; select bank1
  4908  0112' 0080'              	movwf	(_main$1015+2)^(0+128)
  4909                           
  4910                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  4911  0113' 0800'              	movf	_main$1015^(0+128),w
  4912  0114' 0020               	movlb	0	; select bank0
  4913  0115' 0080'              	movwf	___ftdiv@f2
  4914  0116' 0021               	movlb	1	; select bank1
  4915  0117' 0800'              	movf	(_main$1015+1)^(0+128),w
  4916  0118' 0020               	movlb	0	; select bank0
  4917  0119' 0081'              	movwf	___ftdiv@f2+1
  4918  011A' 0021               	movlb	1	; select bank1
  4919  011B' 0800'              	movf	(_main$1015+2)^(0+128),w
  4920  011C' 0020               	movlb	0	; select bank0
  4921  011D' 0082'              	movwf	___ftdiv@f2+2
  4922  011E' 3060               	movlw	96
  4923  011F' 0083'              	movwf	___ftdiv@f1
  4924  0120' 301F               	movlw	31
  4925  0121' 0084'              	movwf	___ftdiv@f1+1
  4926  0122' 3046               	movlw	70
  4927  0123' 0085'              	movwf	___ftdiv@f1+2
  4928  0124' 3180' 2000' 3180'  	fcall	___ftdiv
  4929  0127' 0020               	movlb	0	; select bank0
  4930  0128' 0800'              	movf	?___ftdiv,w
  4931  0129' 0021               	movlb	1	; select bank1
  4932  012A' 0080'              	movwf	main@R^(0+128)
  4933  012B' 0020               	movlb	0	; select bank0
  4934  012C' 0801'              	movf	?___ftdiv+1,w
  4935  012D' 0021               	movlb	1	; select bank1
  4936  012E' 0080'              	movwf	(main@R+1)^(0+128)
  4937  012F' 0020               	movlb	0	; select bank0
  4938  0130' 0802'              	movf	?___ftdiv+2,w
  4939  0131' 0021               	movlb	1	; select bank1
  4940  0132' 0080'              	movwf	(main@R+2)^(0+128)
  4941                           
  4942                           ;main.c: 50: steinhart = R /10061;
  4943  0133' 3034               	movlw	52
  4944  0134' 0020               	movlb	0	; select bank0
  4945  0135' 0080'              	movwf	___ftdiv@f2
  4946  0136' 301D               	movlw	29
  4947  0137' 0081'              	movwf	___ftdiv@f2+1
  4948  0138' 3046               	movlw	70
  4949  0139' 0082'              	movwf	___ftdiv@f2+2
  4950  013A' 0021               	movlb	1	; select bank1
  4951  013B' 0800'              	movf	main@R^(0+128),w
  4952  013C' 0020               	movlb	0	; select bank0
  4953  013D' 0083'              	movwf	___ftdiv@f1
  4954  013E' 0021               	movlb	1	; select bank1
  4955  013F' 0800'              	movf	(main@R+1)^(0+128),w
  4956  0140' 0020               	movlb	0	; select bank0
  4957  0141' 0084'              	movwf	___ftdiv@f1+1
  4958  0142' 0021               	movlb	1	; select bank1
  4959  0143' 0800'              	movf	(main@R+2)^(0+128),w
  4960  0144' 0020               	movlb	0	; select bank0
  4961  0145' 0085'              	movwf	___ftdiv@f1+2
  4962  0146' 3180' 2000' 3180'  	fcall	___ftdiv
  4963  0149' 0020               	movlb	0	; select bank0
  4964  014A' 0800'              	movf	?___ftdiv,w
  4965  014B' 0021               	movlb	1	; select bank1
  4966  014C' 0080'              	movwf	main@steinhart^(0+128)
  4967  014D' 0020               	movlb	0	; select bank0
  4968  014E' 0801'              	movf	?___ftdiv+1,w
  4969  014F' 0021               	movlb	1	; select bank1
  4970  0150' 0080'              	movwf	(main@steinhart+1)^(0+128)
  4971  0151' 0020               	movlb	0	; select bank0
  4972  0152' 0802'              	movf	?___ftdiv+2,w
  4973  0153' 0021               	movlb	1	; select bank1
  4974  0154' 0080'              	movwf	(main@steinhart+2)^(0+128)
  4975                           
  4976                           ;main.c: 51: steinhart = log(steinhart);
  4977  0155' 0800'              	movf	main@steinhart^(0+128),w
  4978  0156' 0020               	movlb	0	; select bank0
  4979  0157' 00A7'              	movwf	log@x
  4980  0158' 0021               	movlb	1	; select bank1
  4981  0159' 0800'              	movf	(main@steinhart+1)^(0+128),w
  4982  015A' 0020               	movlb	0	; select bank0
  4983  015B' 00A8'              	movwf	log@x+1
  4984  015C' 0021               	movlb	1	; select bank1
  4985  015D' 0800'              	movf	(main@steinhart+2)^(0+128),w
  4986  015E' 0020               	movlb	0	; select bank0
  4987  015F' 00A9'              	movwf	log@x+2
  4988  0160' 3180' 2000' 3180'  	fcall	_log
  4989  0163' 0020               	movlb	0	; select bank0
  4990  0164' 0827'              	movf	?_log,w
  4991  0165' 0021               	movlb	1	; select bank1
  4992  0166' 0080'              	movwf	main@steinhart^(0+128)
  4993  0167' 0020               	movlb	0	; select bank0
  4994  0168' 0828'              	movf	?_log+1,w
  4995  0169' 0021               	movlb	1	; select bank1
  4996  016A' 0080'              	movwf	(main@steinhart+1)^(0+128)
  4997  016B' 0020               	movlb	0	; select bank0
  4998  016C' 0829'              	movf	?_log+2,w
  4999  016D' 0021               	movlb	1	; select bank1
  5000  016E' 0080'              	movwf	(main@steinhart+2)^(0+128)
  5001                           
  5002                           ;main.c: 52: steinhart /= 3995;
  5003  016F' 30B0               	movlw	176
  5004  0170' 0020               	movlb	0	; select bank0
  5005  0171' 0080'              	movwf	___ftdiv@f2
  5006  0172' 3079               	movlw	121
  5007  0173' 0081'              	movwf	___ftdiv@f2+1
  5008  0174' 3045               	movlw	69
  5009  0175' 0082'              	movwf	___ftdiv@f2+2
  5010  0176' 0021               	movlb	1	; select bank1
  5011  0177' 0800'              	movf	main@steinhart^(0+128),w
  5012  0178' 0020               	movlb	0	; select bank0
  5013  0179' 0083'              	movwf	___ftdiv@f1
  5014  017A' 0021               	movlb	1	; select bank1
  5015  017B' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5016  017C' 0020               	movlb	0	; select bank0
  5017  017D' 0084'              	movwf	___ftdiv@f1+1
  5018  017E' 0021               	movlb	1	; select bank1
  5019  017F' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5020  0180' 0020               	movlb	0	; select bank0
  5021  0181' 0085'              	movwf	___ftdiv@f1+2
  5022  0182' 3180' 2000' 3180'  	fcall	___ftdiv
  5023  0185' 0020               	movlb	0	; select bank0
  5024  0186' 0800'              	movf	?___ftdiv,w
  5025  0187' 0021               	movlb	1	; select bank1
  5026  0188' 0080'              	movwf	main@steinhart^(0+128)
  5027  0189' 0020               	movlb	0	; select bank0
  5028  018A' 0801'              	movf	?___ftdiv+1,w
  5029  018B' 0021               	movlb	1	; select bank1
  5030  018C' 0080'              	movwf	(main@steinhart+1)^(0+128)
  5031  018D' 0020               	movlb	0	; select bank0
  5032  018E' 0802'              	movf	?___ftdiv+2,w
  5033  018F' 0021               	movlb	1	; select bank1
  5034  0190' 0080'              	movwf	(main@steinhart+2)^(0+128)
  5035                           
  5036                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5037  0191' 30CF               	movlw	207
  5038  0192' 0020               	movlb	0	; select bank0
  5039  0193' 0090'              	movwf	___ftadd@f1
  5040  0194' 305B               	movlw	91
  5041  0195' 0091'              	movwf	___ftadd@f1+1
  5042  0196' 303B               	movlw	59
  5043  0197' 0092'              	movwf	___ftadd@f1+2
  5044  0198' 0021               	movlb	1	; select bank1
  5045  0199' 0800'              	movf	main@steinhart^(0+128),w
  5046  019A' 0020               	movlb	0	; select bank0
  5047  019B' 0093'              	movwf	___ftadd@f2
  5048  019C' 0021               	movlb	1	; select bank1
  5049  019D' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5050  019E' 0020               	movlb	0	; select bank0
  5051  019F' 0094'              	movwf	___ftadd@f2+1
  5052  01A0' 0021               	movlb	1	; select bank1
  5053  01A1' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5054  01A2' 0020               	movlb	0	; select bank0
  5055  01A3' 0095'              	movwf	___ftadd@f2+2
  5056  01A4' 3180' 2000' 3180'  	fcall	___ftadd
  5057  01A7' 0020               	movlb	0	; select bank0
  5058  01A8' 0810'              	movf	?___ftadd,w
  5059  01A9' 0021               	movlb	1	; select bank1
  5060  01AA' 0080'              	movwf	main@steinhart^(0+128)
  5061  01AB' 0020               	movlb	0	; select bank0
  5062  01AC' 0811'              	movf	?___ftadd+1,w
  5063  01AD' 0021               	movlb	1	; select bank1
  5064  01AE' 0080'              	movwf	(main@steinhart+1)^(0+128)
  5065  01AF' 0020               	movlb	0	; select bank0
  5066  01B0' 0812'              	movf	?___ftadd+2,w
  5067  01B1' 0021               	movlb	1	; select bank1
  5068  01B2' 0080'              	movwf	(main@steinhart+2)^(0+128)
  5069                           
  5070                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5071  01B3' 0800'              	movf	main@steinhart^(0+128),w
  5072  01B4' 0020               	movlb	0	; select bank0
  5073  01B5' 0080'              	movwf	___ftdiv@f2
  5074  01B6' 0021               	movlb	1	; select bank1
  5075  01B7' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5076  01B8' 0020               	movlb	0	; select bank0
  5077  01B9' 0081'              	movwf	___ftdiv@f2+1
  5078  01BA' 0021               	movlb	1	; select bank1
  5079  01BB' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5080  01BC' 0020               	movlb	0	; select bank0
  5081  01BD' 0082'              	movwf	___ftdiv@f2+2
  5082  01BE' 3000               	movlw	0
  5083  01BF' 0083'              	movwf	___ftdiv@f1
  5084  01C0' 3080               	movlw	128
  5085  01C1' 0084'              	movwf	___ftdiv@f1+1
  5086  01C2' 303F               	movlw	63
  5087  01C3' 0085'              	movwf	___ftdiv@f1+2
  5088  01C4' 3180' 2000' 3180'  	fcall	___ftdiv
  5089  01C7' 0020               	movlb	0	; select bank0
  5090  01C8' 0800'              	movf	?___ftdiv,w
  5091  01C9' 0021               	movlb	1	; select bank1
  5092  01CA' 0080'              	movwf	main@steinhart^(0+128)
  5093  01CB' 0020               	movlb	0	; select bank0
  5094  01CC' 0801'              	movf	?___ftdiv+1,w
  5095  01CD' 0021               	movlb	1	; select bank1
  5096  01CE' 0080'              	movwf	(main@steinhart+1)^(0+128)
  5097  01CF' 0020               	movlb	0	; select bank0
  5098  01D0' 0802'              	movf	?___ftdiv+2,w
  5099  01D1' 0021               	movlb	1	; select bank1
  5100  01D2' 0080'              	movwf	(main@steinhart+2)^(0+128)
  5101                           
  5102                           ;main.c: 55: steinhart -= 273.15;
  5103  01D3' 3093               	movlw	147
  5104  01D4' 0020               	movlb	0	; select bank0
  5105  01D5' 009D'              	movwf	___ftsub@f2
  5106  01D6' 3088               	movlw	136
  5107  01D7' 009E'              	movwf	___ftsub@f2+1
  5108  01D8' 3043               	movlw	67
  5109  01D9' 009F'              	movwf	___ftsub@f2+2
  5110  01DA' 0021               	movlb	1	; select bank1
  5111  01DB' 0800'              	movf	main@steinhart^(0+128),w
  5112  01DC' 0020               	movlb	0	; select bank0
  5113  01DD' 00A0'              	movwf	___ftsub@f1
  5114  01DE' 0021               	movlb	1	; select bank1
  5115  01DF' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5116  01E0' 0020               	movlb	0	; select bank0
  5117  01E1' 00A1'              	movwf	___ftsub@f1+1
  5118  01E2' 0021               	movlb	1	; select bank1
  5119  01E3' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5120  01E4' 0020               	movlb	0	; select bank0
  5121  01E5' 00A2'              	movwf	___ftsub@f1+2
  5122  01E6' 3180' 2000' 3180'  	fcall	___ftsub
  5123  01E9' 0020               	movlb	0	; select bank0
  5124  01EA' 081D'              	movf	?___ftsub,w
  5125  01EB' 0021               	movlb	1	; select bank1
  5126  01EC' 0080'              	movwf	main@steinhart^(0+128)
  5127  01ED' 0020               	movlb	0	; select bank0
  5128  01EE' 081E'              	movf	?___ftsub+1,w
  5129  01EF' 0021               	movlb	1	; select bank1
  5130  01F0' 0080'              	movwf	(main@steinhart+1)^(0+128)
  5131  01F1' 0020               	movlb	0	; select bank0
  5132  01F2' 081F'              	movf	?___ftsub+2,w
  5133  01F3' 0021               	movlb	1	; select bank1
  5134  01F4' 0080'              	movwf	(main@steinhart+2)^(0+128)
  5135                           
  5136                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5137  01F5' 0800'              	movf	main@steinhart^(0+128),w
  5138  01F6' 0020               	movlb	0	; select bank0
  5139  01F7' 0083'              	movwf	___ftmul@f2
  5140  01F8' 0021               	movlb	1	; select bank1
  5141  01F9' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5142  01FA' 0020               	movlb	0	; select bank0
  5143  01FB' 0084'              	movwf	___ftmul@f2+1
  5144  01FC' 0021               	movlb	1	; select bank1
  5145  01FD' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5146  01FE' 0020               	movlb	0	; select bank0
  5147  01FF' 0085'              	movwf	___ftmul@f2+2
  5148  0200' 3000               	movlw	0
  5149  0201' 0080'              	movwf	___ftmul@f1
  5150  0202' 3020               	movlw	32
  5151  0203' 0081'              	movwf	___ftmul@f1+1
  5152  0204' 3041               	movlw	65
  5153  0205' 0082'              	movwf	___ftmul@f1+2
  5154  0206' 3180' 2000' 3180'  	fcall	___ftmul
  5155  0209' 0020               	movlb	0	; select bank0
  5156  020A' 0800'              	movf	?___ftmul,w
  5157  020B' 0090'              	movwf	___fttol@f1
  5158  020C' 0801'              	movf	?___ftmul+1,w
  5159  020D' 0091'              	movwf	___fttol@f1+1
  5160  020E' 0802'              	movf	?___ftmul+2,w
  5161  020F' 0092'              	movwf	___fttol@f1+2
  5162  0210' 3180' 2000' 3180'  	fcall	___fttol
  5163  0213' 0020               	movlb	0	; select bank0
  5164  0214' 0811'              	movf	?___fttol+1,w
  5165  0215' 0021               	movlb	1	; select bank1
  5166  0216' 0080'              	movwf	(main@displayTemp+1)^(0+128)
  5167  0217' 0020               	movlb	0	; select bank0
  5168  0218' 0810'              	movf	?___fttol,w
  5169  0219' 0021               	movlb	1	; select bank1
  5170  021A' 0080'              	movwf	main@displayTemp^(0+128)
  5171                           
  5172                           ;main.c: 60: if(toggle == 1)
  5173  021B' 0300'              	decf	main@toggle^(0+128),w
  5174  021C' 1D03               	btfss	3,2
  5175  021D' 2800'              	goto	l2654
  5176                           
  5177                           ;main.c: 61: {
  5178                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5179  021E' 3005               	movlw	5
  5180  021F' 0086'              	movwf	___lwdiv@divisor
  5181  0220' 3000               	movlw	0
  5182  0221' 0087'              	movwf	___lwdiv@divisor+1
  5183  0222' 0800'              	movf	(main@displayTemp+1)^(0+128),w
  5184  0223' 0081'              	movwf	___wmul@multiplier+1
  5185  0224' 0800'              	movf	main@displayTemp^(0+128),w
  5186  0225' 0080'              	movwf	___wmul@multiplier
  5187  0226' 3009               	movlw	9
  5188  0227' 0082'              	movwf	___wmul@multiplicand
  5189  0228' 3000               	movlw	0
  5190  0229' 0083'              	movwf	___wmul@multiplicand+1
  5191  022A' 3180' 2000' 3180'  	fcall	___wmul
  5192  022D' 0801'              	movf	?___wmul+1,w
  5193  022E' 0089'              	movwf	___lwdiv@dividend+1
  5194  022F' 0800'              	movf	?___wmul,w
  5195  0230' 0088'              	movwf	___lwdiv@dividend
  5196  0231' 3180' 2000' 3180'  	fcall	___lwdiv
  5197  0234' 0806'              	movf	?___lwdiv,w
  5198  0235' 3E40               	addlw	64
  5199  0236' 0021               	movlb	1	; select bank1
  5200  0237' 0080'              	movwf	main@displayTemp^(0+128)
  5201  0238' 3001               	movlw	1
  5202  0239' 3D07'              	addwfc	?___lwdiv+1,w
  5203  023A' 0080'              	movwf	(main@displayTemp+1)^(0+128)
  5204                           
  5205                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5206  023B' 0183'              	clrf	LCD_Set_Cursor@y
  5207  023C' 3000               	movlw	0
  5208  023D' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  5209  0240' 0021               	movlb	1	; select bank1
  5210  0241' 0800'              	movf	(main@displayTemp+1)^(0+128),w
  5211  0242' 008A'              	movwf	LCD_Write_Int@value+1
  5212  0243' 0800'              	movf	main@displayTemp^(0+128),w
  5213  0244' 0089'              	movwf	LCD_Write_Int@value
  5214  0245' 018B'              	clrf	LCD_Write_Int@fieldLength
  5215  0246' 038B'              	decf	LCD_Write_Int@fieldLength,f
  5216  0247' 018C'              	clrf	LCD_Write_Int@numPlaces
  5217  0248' 0A8C'              	incf	LCD_Write_Int@numPlaces,f
  5218  0249' 018D'              	clrf	LCD_Write_Int@sign
  5219  024A' 3180' 2000' 3180'  	fcall	_LCD_Write_Int
  5220                           
  5221                           ;main.c: 65: LCD_Write_Char(0);
  5222  024D' 3000               	movlw	0
  5223  024E' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  5224                           
  5225                           ;main.c: 66: LCD_Write_Char('F');
  5226  0251' 3046               	movlw	70
  5227  0252' 2800'              	goto	L1
  5228  0253'                    l2654:	
  5229                           ;main.c: 68: }
  5230                           
  5231                           ;main.c: 67: LCD_Write_Char(' ');
  5232                           
  5233                           
  5234                           ;main.c: 69: else
  5235                           ;main.c: 70: {
  5236                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5237  0253' 0183'              	clrf	LCD_Set_Cursor@y
  5238  0254' 3000               	movlw	0
  5239  0255' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  5240  0258' 0021               	movlb	1	; select bank1
  5241  0259' 0800'              	movf	(main@displayTemp+1)^(0+128),w
  5242  025A' 008A'              	movwf	LCD_Write_Int@value+1
  5243  025B' 0800'              	movf	main@displayTemp^(0+128),w
  5244  025C' 0089'              	movwf	LCD_Write_Int@value
  5245  025D' 018B'              	clrf	LCD_Write_Int@fieldLength
  5246  025E' 038B'              	decf	LCD_Write_Int@fieldLength,f
  5247  025F' 018C'              	clrf	LCD_Write_Int@numPlaces
  5248  0260' 0A8C'              	incf	LCD_Write_Int@numPlaces,f
  5249  0261' 018D'              	clrf	LCD_Write_Int@sign
  5250  0262' 3180' 2000' 3180'  	fcall	_LCD_Write_Int
  5251                           
  5252                           ;main.c: 72: LCD_Write_Char(0);
  5253  0265' 3000               	movlw	0
  5254  0266' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  5255                           
  5256                           ;main.c: 73: LCD_Write_Char('C');
  5257  0269' 3043               	movlw	67
  5258  026A'                    L1:	
  5259  026A' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  5260                           
  5261                           ;main.c: 74: LCD_Write_Char(' ');
  5262  026D' 3020               	movlw	32
  5263  026E' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  5264                           
  5265                           ;main.c: 75: }
  5266                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5267  0271' 0183'              	clrf	LCD_Set_Cursor@y
  5268  0272' 3001               	movlw	1
  5269  0273' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  5270  0276' 3000'              	movlw	low (STR_1| (0+32768))
  5271  0277' 0085'              	movwf	LCD_Write_String@a
  5272  0278' 3000'              	movlw	high (STR_1| (0+32768))
  5273  0279' 0086'              	movwf	LCD_Write_String@a+1
  5274  027A' 3180' 2000' 3180'  	fcall	_LCD_Write_String
  5275                           
  5276                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5277  027D' 3005               	movlw	5
  5278  027E' 0020               	movlb	0	; select bank0
  5279  027F' 00AD'              	movwf	??_main
  5280  0280' 082D'              	movf	??_main,w
  5281  0281' 0083'              	movwf	LCD_Set_Cursor@y
  5282  0282' 3001               	movlw	1
  5283  0283' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  5284  0286' 0021               	movlb	1	; select bank1
  5285  0287' 0800'              	movf	(main@minutes+1)^(0+128),w
  5286  0288' 008A'              	movwf	LCD_Write_Int@value+1
  5287  0289' 0800'              	movf	main@minutes^(0+128),w
  5288  028A' 0089'              	movwf	LCD_Write_Int@value
  5289  028B' 3003               	movlw	3
  5290  028C' 0020               	movlb	0	; select bank0
  5291  028D' 00AD'              	movwf	??_main
  5292  028E' 082D'              	movf	??_main,w
  5293  028F' 008B'              	movwf	LCD_Write_Int@fieldLength
  5294  0290' 018C'              	clrf	LCD_Write_Int@numPlaces
  5295  0291' 018D'              	clrf	LCD_Write_Int@sign
  5296  0292' 3180' 2000' 3180'  	fcall	_LCD_Write_Int
  5297                           
  5298                           ;main.c: 81: counter +=1;
  5299  0295' 3001               	movlw	1
  5300  0296' 0021               	movlb	1	; select bank1
  5301  0297' 0780'              	addwf	main@counter^(0+128),f
  5302  0298' 3000               	movlw	0
  5303  0299' 3D80'              	addwfc	(main@counter+1)^(0+128),f
  5304                           
  5305                           ;main.c: 83: if(counter>12)
  5306  029A' 3000               	movlw	0
  5307  029B' 0200'              	subwf	(main@counter+1)^(0+128),w
  5308  029C' 300D               	movlw	13
  5309  029D' 1903               	skipnz
  5310  029E' 0200'              	subwf	main@counter^(0+128),w
  5311  029F' 1C03               	skipc
  5312  02A0' 2800'              	goto	l2684
  5313                           
  5314                           ;main.c: 84: {
  5315                           ;main.c: 85: toggle = 1-toggle;
  5316  02A1' 0300'              	decf	main@toggle^(0+128),w
  5317  02A2' 3AFF               	xorlw	255
  5318  02A3' 3E01               	addlw	1
  5319  02A4' 0020               	movlb	0	; select bank0
  5320  02A5' 00AD'              	movwf	??_main
  5321  02A6' 082D'              	movf	??_main,w
  5322  02A7' 0021               	movlb	1	; select bank1
  5323  02A8' 0080'              	movwf	main@toggle^(0+128)
  5324                           
  5325                           ;main.c: 86: counter = 0;
  5326  02A9' 0180'              	clrf	main@counter^(0+128)
  5327  02AA' 0180'              	clrf	(main@counter+1)^(0+128)
  5328                           
  5329                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5330  02AB' 0800'              	movf	main@steinhart^(0+128),w
  5331  02AC' 0082'              	movwf	_PID_Calculate$1
  5332  02AD' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5333  02AE' 0083'              	movwf	_PID_Calculate$1+1
  5334  02AF' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5335  02B0' 0084'              	movwf	_PID_Calculate$1+2
  5336  02B1' 0800'              	movf	_setpoint^(0+128),w
  5337  02B2' 0020               	movlb	0	; select bank0
  5338  02B3' 00AD'              	movwf	??_main
  5339  02B4' 01AE'              	clrf	??_main+1
  5340  02B5' 082D'              	movf	??_main,w
  5341  02B6' 0080'              	movwf	_PID_Calculate$0
  5342  02B7' 082E'              	movf	??_main+1,w
  5343  02B8' 0081'              	movwf	_PID_Calculate$0+1
  5344  02B9' 3180' 2000' 3180'  	fcall	_PID_Calculate
  5345  02BC' 0800'              	movf	?_PID_Calculate,w
  5346  02BD' 0020               	movlb	0	; select bank0
  5347  02BE' 0090'              	movwf	___fttol@f1
  5348  02BF' 0801'              	movf	?_PID_Calculate+1,w
  5349  02C0' 0091'              	movwf	___fttol@f1+1
  5350  02C1' 0802'              	movf	?_PID_Calculate+2,w
  5351  02C2' 0092'              	movwf	___fttol@f1+2
  5352  02C3' 3180' 2000' 3180'  	fcall	___fttol
  5353  02C6' 0020               	movlb	0	; select bank0
  5354  02C7' 0811'              	movf	?___fttol+1,w
  5355  02C8' 0021               	movlb	1	; select bank1
  5356  02C9' 0080'              	movwf	(main@PWM_Output+1)^(0+128)
  5357  02CA' 0020               	movlb	0	; select bank0
  5358  02CB' 0810'              	movf	?___fttol,w
  5359  02CC' 0021               	movlb	1	; select bank1
  5360  02CD' 0080'              	movwf	main@PWM_Output^(0+128)
  5361                           
  5362                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  5363  02CE' 0800'              	movf	(main@PWM_Output+1)^(0+128),w
  5364  02CF' 0081'              	movwf	PWM6_LoadDutyValue@dutyValue+1
  5365  02D0' 0800'              	movf	main@PWM_Output^(0+128),w
  5366  02D1' 0080'              	movwf	PWM6_LoadDutyValue@dutyValue
  5367  02D2' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
  5368  02D5'                    l2684:	
  5369                           
  5370                           ;main.c: 89: }
  5371                           ;main.c: 92: if(TMR0IF)
  5372  02D5' 002E               	movlb	14	; select bank14
  5373  02D6' 1E8C               	btfss	12,5	;volatile
  5374  02D7' 2800'              	goto	l2690
  5375                           
  5376                           ;main.c: 93: {
  5377                           ;main.c: 94: TMR0H = 0x24;
  5378  02D8' 3024               	movlw	36
  5379  02D9' 0020               	movlb	0	; select bank0
  5380  02DA' 009D               	movwf	29	;volatile
  5381                           
  5382                           ;main.c: 95: TMR0L = 0x9F;
  5383  02DB' 309F               	movlw	159
  5384  02DC' 009C               	movwf	28	;volatile
  5385                           
  5386                           ;main.c: 96: TMR0IF = 0;
  5387  02DD' 002E               	movlb	14	; select bank14
  5388  02DE' 128C               	bcf	12,5	;volatile
  5389                           
  5390                           ;main.c: 97: seconds+=1;
  5391  02DF' 3001               	movlw	1
  5392  02E0' 0021               	movlb	1	; select bank1
  5393  02E1' 0780'              	addwf	main@seconds^(0+128),f
  5394  02E2' 3000               	movlw	0
  5395  02E3' 3D80'              	addwfc	(main@seconds+1)^(0+128),f
  5396  02E4'                    l2690:	
  5397                           
  5398                           ;main.c: 98: }
  5399                           ;main.c: 100: if(setpoint - steinhart < 2)
  5400  02E4' 0021               	movlb	1	; select bank1
  5401  02E5' 0800'              	movf	main@steinhart^(0+128),w
  5402  02E6' 0080'              	movwf	___ftneg@f1
  5403  02E7' 0800'              	movf	(main@steinhart+1)^(0+128),w
  5404  02E8' 0081'              	movwf	___ftneg@f1+1
  5405  02E9' 0800'              	movf	(main@steinhart+2)^(0+128),w
  5406  02EA' 0082'              	movwf	___ftneg@f1+2
  5407  02EB' 3180' 2000' 3180'  	fcall	___ftneg
  5408  02EE' 0800'              	movf	?___ftneg,w
  5409  02EF' 0020               	movlb	0	; select bank0
  5410  02F0' 0090'              	movwf	___ftadd@f1
  5411  02F1' 0801'              	movf	?___ftneg+1,w
  5412  02F2' 0091'              	movwf	___ftadd@f1+1
  5413  02F3' 0802'              	movf	?___ftneg+2,w
  5414  02F4' 0092'              	movwf	___ftadd@f1+2
  5415  02F5' 0021               	movlb	1	; select bank1
  5416  02F6' 0800'              	movf	_setpoint^(0+128),w
  5417  02F7' 3180' 2000' 3180'  	fcall	___lbtoft
  5418  02FA' 0808'              	movf	?___lbtoft,w
  5419  02FB' 0020               	movlb	0	; select bank0
  5420  02FC' 0093'              	movwf	___ftadd@f2
  5421  02FD' 0809'              	movf	?___lbtoft+1,w
  5422  02FE' 0094'              	movwf	___ftadd@f2+1
  5423  02FF' 080A'              	movf	?___lbtoft+2,w
  5424  0300' 0095'              	movwf	___ftadd@f2+2
  5425  0301' 3180' 2000' 3180'  	fcall	___ftadd
  5426  0304' 0020               	movlb	0	; select bank0
  5427  0305' 0810'              	movf	?___ftadd,w
  5428  0306' 009D'              	movwf	___ftge@ff1
  5429  0307' 0811'              	movf	?___ftadd+1,w
  5430  0308' 009E'              	movwf	___ftge@ff1+1
  5431  0309' 0812'              	movf	?___ftadd+2,w
  5432  030A' 009F'              	movwf	___ftge@ff1+2
  5433  030B' 3000               	movlw	0
  5434  030C' 00A0'              	movwf	___ftge@ff2
  5435  030D' 3000               	movlw	0
  5436  030E' 00A1'              	movwf	___ftge@ff2+1
  5437  030F' 3040               	movlw	64
  5438  0310' 00A2'              	movwf	___ftge@ff2+2
  5439  0311' 3180' 2000' 3180'  	fcall	___ftge
  5440  0314' 1803               	btfsc	3,0
  5441  0315' 2800'              	goto	l2698
  5442                           
  5443                           ;main.c: 101: {
  5444                           ;main.c: 102: if(seconds>63)
  5445  0316' 3000               	movlw	0
  5446  0317' 0021               	movlb	1	; select bank1
  5447  0318' 0200'              	subwf	(main@seconds+1)^(0+128),w
  5448  0319' 3040               	movlw	64
  5449  031A' 1903               	skipnz
  5450  031B' 0200'              	subwf	main@seconds^(0+128),w
  5451  031C' 1C03               	skipc
  5452  031D' 2800'              	goto	l2698
  5453                           
  5454                           ;main.c: 103: {
  5455                           ;main.c: 104: minutes+=1;
  5456  031E' 3001               	movlw	1
  5457  031F' 0780'              	addwf	main@minutes^(0+128),f
  5458  0320' 3000               	movlw	0
  5459  0321' 3D80'              	addwfc	(main@minutes+1)^(0+128),f
  5460                           
  5461                           ;main.c: 105: seconds = 0;
  5462  0322' 0180'              	clrf	main@seconds^(0+128)
  5463  0323' 0180'              	clrf	(main@seconds+1)^(0+128)
  5464  0324'                    l2698:	
  5465                           
  5466                           ;main.c: 106: }
  5467                           ;main.c: 107: }
  5468                           ;main.c: 109: readButtons();
  5469  0324' 3180' 2000' 3180'  	fcall	_readButtons
  5470                           
  5471                           ;main.c: 110: tempSetpoint();
  5472  0327' 3180' 2000' 3180'  	fcall	_tempSetpoint
  5473  032A' 2800'              	goto	l2608
  5474  032B'                    __end_of_main:	
  5475                           
  5476                           	psect	text1
  5477  0000'                    __ptext1:	
  5478 ;; *************** function _log *****************
  5479 ;; Defined at:
  5480 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  x               3   39[BANK0 ] void 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  exponent        2   43[BANK0 ] int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  3   39[BANK0 ] int 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5494 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;Total ram usage:        6 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    3
  5501 ;; This function calls:
  5502 ;;		___awtoft
  5503 ;;		___ftadd
  5504 ;;		___ftge
  5505 ;;		___ftmul
  5506 ;;		_eval_poly
  5507 ;;		_frexp
  5508 ;; This function is called by:
  5509 ;;		_main
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _log
  5515  0000'                    _log:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5519  0000' 0020               	movlb	0	; select bank0
  5520  0001' 0827'              	movf	log@x,w
  5521  0002' 009D'              	movwf	___ftge@ff1
  5522  0003' 0828'              	movf	log@x+1,w
  5523  0004' 009E'              	movwf	___ftge@ff1+1
  5524  0005' 0829'              	movf	log@x+2,w
  5525  0006' 009F'              	movwf	___ftge@ff1+2
  5526  0007' 3000               	movlw	0
  5527  0008' 00A0'              	movwf	___ftge@ff2
  5528  0009' 3000               	movlw	0
  5529  000A' 00A1'              	movwf	___ftge@ff2+1
  5530  000B' 3000               	movlw	0
  5531  000C' 00A2'              	movwf	___ftge@ff2+2
  5532  000D' 3180' 2000' 3180'  	fcall	___ftge
  5533  0010' 1803               	btfsc	3,0
  5534  0011' 2800'              	goto	l2404
  5535  0012' 3021               	movlw	33
  5536  0013' 0020               	movlb	0	; select bank0
  5537  0014' 0085'              	movwf	_errno
  5538  0015' 3000               	movlw	0
  5539  0016' 0086'              	movwf	_errno+1
  5540  0017' 3000               	movlw	0
  5541  0018' 00A7'              	movwf	?_log
  5542  0019' 3000               	movlw	0
  5543  001A' 00A8'              	movwf	?_log+1
  5544  001B' 3000               	movlw	0
  5545  001C' 00A9'              	movwf	?_log+2
  5546  001D' 0008               	return
  5547  001E'                    l2404:	
  5548  001E' 0020               	movlb	0	; select bank0
  5549  001F' 0829'              	movf	log@x+2,w
  5550  0020' 0428'              	iorwf	log@x+1,w
  5551  0021' 0427'              	iorwf	log@x,w
  5552  0022' 1D03               	skipz
  5553  0023' 2800'              	goto	l2410
  5554  0024' 3022               	movlw	34
  5555  0025' 0085'              	movwf	_errno
  5556  0026' 3000               	movlw	0
  5557  0027' 0086'              	movwf	_errno+1
  5558  0028' 3000               	movlw	0
  5559  0029' 00A7'              	movwf	?_log
  5560  002A' 3000               	movlw	0
  5561  002B' 00A8'              	movwf	?_log+1
  5562  002C' 3000               	movlw	0
  5563  002D' 00A9'              	movwf	?_log+2
  5564  002E' 0008               	return
  5565  002F'                    l2410:	
  5566  002F' 3000               	movlw	0
  5567  0030' 0090'              	movwf	___ftadd@f1
  5568  0031' 3080               	movlw	128
  5569  0032' 0091'              	movwf	___ftadd@f1+1
  5570  0033' 30BF               	movlw	191
  5571  0034' 0092'              	movwf	___ftadd@f1+2
  5572  0035' 3000               	movlw	0
  5573  0036' 0080'              	movwf	___ftmul@f1
  5574  0037' 3000               	movlw	0
  5575  0038' 0081'              	movwf	___ftmul@f1+1
  5576  0039' 3040               	movlw	64
  5577  003A' 0082'              	movwf	___ftmul@f1+2
  5578  003B' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  5579  003C' 00AA'              	movwf	??_log
  5580  003D' 082A'              	movf	??_log,w
  5581  003E' 0083'              	movwf	frexp@eptr
  5582  003F' 0827'              	movf	log@x,w
  5583  0040' 0080'              	movwf	frexp@value
  5584  0041' 0828'              	movf	log@x+1,w
  5585  0042' 0081'              	movwf	frexp@value+1
  5586  0043' 0829'              	movf	log@x+2,w
  5587  0044' 0082'              	movwf	frexp@value+2
  5588  0045' 3180' 2000' 3180'  	fcall	_frexp
  5589  0048' 0800'              	movf	?_frexp,w
  5590  0049' 0020               	movlb	0	; select bank0
  5591  004A' 0083'              	movwf	___ftmul@f2
  5592  004B' 0801'              	movf	?_frexp+1,w
  5593  004C' 0084'              	movwf	___ftmul@f2+1
  5594  004D' 0802'              	movf	?_frexp+2,w
  5595  004E' 0085'              	movwf	___ftmul@f2+2
  5596  004F' 3180' 2000' 3180'  	fcall	___ftmul
  5597  0052' 0020               	movlb	0	; select bank0
  5598  0053' 0800'              	movf	?___ftmul,w
  5599  0054' 0093'              	movwf	___ftadd@f2
  5600  0055' 0801'              	movf	?___ftmul+1,w
  5601  0056' 0094'              	movwf	___ftadd@f2+1
  5602  0057' 0802'              	movf	?___ftmul+2,w
  5603  0058' 0095'              	movwf	___ftadd@f2+2
  5604  0059' 3180' 2000' 3180'  	fcall	___ftadd
  5605  005C' 0020               	movlb	0	; select bank0
  5606  005D' 0810'              	movf	?___ftadd,w
  5607  005E' 00A7'              	movwf	log@x
  5608  005F' 0811'              	movf	?___ftadd+1,w
  5609  0060' 00A8'              	movwf	log@x+1
  5610  0061' 0812'              	movf	?___ftadd+2,w
  5611  0062' 00A9'              	movwf	log@x+2
  5612  0063' 30FF               	movlw	255
  5613  0064' 07AB'              	addwf	log@exponent,f
  5614  0065' 30FF               	movlw	255
  5615  0066' 3DAC'              	addwfc	log@exponent+1,f
  5616  0067' 0827'              	movf	log@x,w
  5617  0068' 009D'              	movwf	eval_poly@x
  5618  0069' 0828'              	movf	log@x+1,w
  5619  006A' 009E'              	movwf	eval_poly@x+1
  5620  006B' 0829'              	movf	log@x+2,w
  5621  006C' 009F'              	movwf	eval_poly@x+2
  5622  006D' 3000'              	movlw	low (log@coeff| (0+32768))
  5623  006E' 00A0'              	movwf	eval_poly@d
  5624  006F' 3000'              	movlw	high (log@coeff| (0+32768))
  5625  0070' 00A1'              	movwf	eval_poly@d+1
  5626  0071' 3008               	movlw	8
  5627  0072' 00A2'              	movwf	eval_poly@n
  5628  0073' 3000               	movlw	0
  5629  0074' 00A3'              	movwf	eval_poly@n+1
  5630  0075' 3180' 2000' 3180'  	fcall	_eval_poly
  5631  0078' 0020               	movlb	0	; select bank0
  5632  0079' 081D'              	movf	?_eval_poly,w
  5633  007A' 00A7'              	movwf	log@x
  5634  007B' 081E'              	movf	?_eval_poly+1,w
  5635  007C' 00A8'              	movwf	log@x+1
  5636  007D' 081F'              	movf	?_eval_poly+2,w
  5637  007E' 00A9'              	movwf	log@x+2
  5638  007F' 0827'              	movf	log@x,w
  5639  0080' 0090'              	movwf	___ftadd@f1
  5640  0081' 0828'              	movf	log@x+1,w
  5641  0082' 0091'              	movwf	___ftadd@f1+1
  5642  0083' 0829'              	movf	log@x+2,w
  5643  0084' 0092'              	movwf	___ftadd@f1+2
  5644  0085' 3072               	movlw	114
  5645  0086' 0080'              	movwf	___ftmul@f1
  5646  0087' 3031               	movlw	49
  5647  0088' 0081'              	movwf	___ftmul@f1+1
  5648  0089' 303F               	movlw	63
  5649  008A' 0082'              	movwf	___ftmul@f1+2
  5650  008B' 082C'              	movf	log@exponent+1,w
  5651  008C' 0089'              	movwf	___awtoft@c+1
  5652  008D' 082B'              	movf	log@exponent,w
  5653  008E' 0088'              	movwf	___awtoft@c
  5654  008F' 3180' 2000' 3180'  	fcall	___awtoft
  5655  0092' 0808'              	movf	?___awtoft,w
  5656  0093' 0020               	movlb	0	; select bank0
  5657  0094' 0083'              	movwf	___ftmul@f2
  5658  0095' 0809'              	movf	?___awtoft+1,w
  5659  0096' 0084'              	movwf	___ftmul@f2+1
  5660  0097' 080A'              	movf	?___awtoft+2,w
  5661  0098' 0085'              	movwf	___ftmul@f2+2
  5662  0099' 3180' 2000' 3180'  	fcall	___ftmul
  5663  009C' 0020               	movlb	0	; select bank0
  5664  009D' 0800'              	movf	?___ftmul,w
  5665  009E' 0093'              	movwf	___ftadd@f2
  5666  009F' 0801'              	movf	?___ftmul+1,w
  5667  00A0' 0094'              	movwf	___ftadd@f2+1
  5668  00A1' 0802'              	movf	?___ftmul+2,w
  5669  00A2' 0095'              	movwf	___ftadd@f2+2
  5670  00A3' 3180' 2000'        	fcall	___ftadd
  5671  00A5' 0020               	movlb	0	; select bank0
  5672  00A6' 0810'              	movf	?___ftadd,w
  5673  00A7' 00A7'              	movwf	?_log
  5674  00A8' 0811'              	movf	?___ftadd+1,w
  5675  00A9' 00A8'              	movwf	?_log+1
  5676  00AA' 0812'              	movf	?___ftadd+2,w
  5677  00AB' 00A9'              	movwf	?_log+2
  5678  00AC' 0008               	return
  5679  00AD'                    __end_of_log:	
  5680                           
  5681                           	psect	text2
  5682  0000'                    __ptext2:	
  5683 ;; *************** function _frexp *****************
  5684 ;; Defined at:
  5685 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  value           3    0[COMMON] int 
  5688 ;;  eptr            1    3[COMMON] PTR int 
  5689 ;;		 -> log@exponent(2), 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  3    0[COMMON] PTR int 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;Total ram usage:        6 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_log
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           
  5715                           ;psect for function _frexp
  5716  0000'                    _frexp:	
  5717                           
  5718                           ;incstack = 0
  5719                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5720  0000' 0802'              	movf	frexp@value+2,w
  5721  0001' 0401'              	iorwf	frexp@value+1,w
  5722  0002' 0400'              	iorwf	frexp@value,w
  5723  0003' 1D03               	skipz
  5724  0004' 2800'              	goto	l2258
  5725  0005' 0803'              	movf	frexp@eptr,w
  5726  0006' 0086               	movwf	6
  5727  0007' 0187               	clrf	7
  5728  0008' 3000               	movlw	0
  5729  0009' 3FC0               	movwi [0]fsr1
  5730  000A' 3FC1               	movwi [1]fsr1
  5731  000B' 3000               	movlw	0
  5732  000C' 0080'              	movwf	?_frexp
  5733  000D' 3000               	movlw	0
  5734  000E' 0081'              	movwf	?_frexp+1
  5735  000F' 3000               	movlw	0
  5736  0010' 0082'              	movwf	?_frexp+2
  5737  0011' 0008               	return
  5738  0012'                    l2258:	
  5739  0012' 0802'              	movf	frexp@value+2,w
  5740  0013' 397F               	andlw	127
  5741  0014' 0084'              	movwf	??_frexp
  5742  0015' 0185'              	clrf	??_frexp+1
  5743  0016' 3584'              	lslf	??_frexp,f
  5744  0017' 0D85'              	rlf	??_frexp+1,f
  5745  0018' 0803'              	movf	frexp@eptr,w
  5746  0019' 0086               	movwf	6
  5747  001A' 0187               	clrf	7
  5748  001B' 0804'              	movf	??_frexp,w
  5749  001C' 3FC0               	movwi [0]fsr1
  5750  001D' 0805'              	movf	??_frexp+1,w
  5751  001E' 3FC1               	movwi [1]fsr1
  5752  001F' 0D01'              	rlf	frexp@value+1,w
  5753  0020' 0D01'              	rlf	frexp@value+1,w
  5754  0021' 3901               	andlw	1
  5755  0022' 0084'              	movwf	??_frexp
  5756  0023' 0185'              	clrf	??_frexp+1
  5757  0024' 0803'              	movf	frexp@eptr,w
  5758  0025' 0086               	movwf	6
  5759  0026' 0187               	clrf	7
  5760  0027' 0804'              	movf	??_frexp,w
  5761  0028' 0481               	iorwf	1,f
  5762  0029' 3141               	addfsr 1,1
  5763  002A' 0805'              	movf	??_frexp+1,w
  5764  002B' 0481               	iorwf	1,f
  5765  002C' 0803'              	movf	frexp@eptr,w
  5766  002D' 0086               	movwf	6
  5767  002E' 0187               	clrf	7
  5768  002F' 3082               	movlw	130
  5769  0030' 0781               	addwf	1,f
  5770  0031' 3141               	addfsr 1,1
  5771  0032' 30FF               	movlw	255
  5772  0033' 3D81               	addwfc	1,f
  5773  0034' 317F               	addfsr 1,-1
  5774  0035' 0802'              	movf	frexp@value+2,w
  5775  0036' 3980               	andlw	-128
  5776  0037' 383F               	iorlw	63
  5777  0038' 0082'              	movwf	frexp@value+2
  5778  0039' 1381'              	bcf	frexp@value+1,7
  5779  003A' 0008               	return
  5780  003B'                    __end_of_frexp:	
  5781                           
  5782                           	psect	text3
  5783  0000'                    __ptext3:	
  5784 ;; *************** function _eval_poly *****************
  5785 ;; Defined at:
  5786 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  x               3   29[BANK0 ] PTR int 
  5789 ;;  d               2   32[BANK0 ] PTR const 
  5790 ;;		 -> log@coeff(27), 
  5791 ;;  n               2   34[BANK0 ] int 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  res             3   36[BANK0 ] int 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  3   29[BANK0 ] int 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5803 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;Total ram usage:       10 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    2
  5810 ;; This function calls:
  5811 ;;		___ftadd
  5812 ;;		___ftmul
  5813 ;;		___wmul
  5814 ;; This function is called by:
  5815 ;;		_log
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           
  5820                           ;psect for function _eval_poly
  5821  0000'                    _eval_poly:	
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5825  0000' 0020               	movlb	0	; select bank0
  5826  0001' 0823'              	movf	eval_poly@n+1,w
  5827  0002' 0081'              	movwf	___wmul@multiplier+1
  5828  0003' 0822'              	movf	eval_poly@n,w
  5829  0004' 0080'              	movwf	___wmul@multiplier
  5830  0005' 3003               	movlw	3
  5831  0006' 0082'              	movwf	___wmul@multiplicand
  5832  0007' 3000               	movlw	0
  5833  0008' 0083'              	movwf	___wmul@multiplicand+1
  5834  0009' 3180' 2000' 3180'  	fcall	___wmul
  5835  000C' 0020               	movlb	0	; select bank0
  5836  000D' 0820'              	movf	eval_poly@d,w
  5837  000E' 0700'              	addwf	?___wmul,w
  5838  000F' 0084               	movwf	4
  5839  0010' 0821'              	movf	eval_poly@d+1,w
  5840  0011' 3D01'              	addwfc	?___wmul+1,w
  5841  0012' 0085               	movwf	5
  5842  0013' 3F00               	moviw [0]fsr0
  5843  0014' 00A4'              	movwf	eval_poly@res
  5844  0015' 3F01               	moviw [1]fsr0
  5845  0016' 00A5'              	movwf	eval_poly@res+1
  5846  0017' 3F02               	moviw [2]fsr0
  5847  0018'                    L2:	
  5848  0018' 00A6'              	movwf	eval_poly@res+2
  5849  0019' 0822'              	movf	eval_poly@n,w
  5850  001A' 0423'              	iorwf	eval_poly@n+1,w
  5851  001B' 1903               	btfsc	3,2
  5852  001C' 2800'              	goto	l2276
  5853  001D' 30FF               	movlw	255
  5854  001E' 07A2'              	addwf	eval_poly@n,f
  5855  001F' 30FF               	movlw	255
  5856  0020' 3DA3'              	addwfc	eval_poly@n+1,f
  5857  0021' 0823'              	movf	eval_poly@n+1,w
  5858  0022' 0081'              	movwf	___wmul@multiplier+1
  5859  0023' 0822'              	movf	eval_poly@n,w
  5860  0024' 0080'              	movwf	___wmul@multiplier
  5861  0025' 3003               	movlw	3
  5862  0026' 0082'              	movwf	___wmul@multiplicand
  5863  0027' 3000               	movlw	0
  5864  0028' 0083'              	movwf	___wmul@multiplicand+1
  5865  0029' 3180' 2000' 3180'  	fcall	___wmul
  5866  002C' 0020               	movlb	0	; select bank0
  5867  002D' 0820'              	movf	eval_poly@d,w
  5868  002E' 0700'              	addwf	?___wmul,w
  5869  002F' 0084               	movwf	4
  5870  0030' 0821'              	movf	eval_poly@d+1,w
  5871  0031' 3D01'              	addwfc	?___wmul+1,w
  5872  0032' 0085               	movwf	5
  5873  0033' 3F00               	moviw [0]fsr0
  5874  0034' 0090'              	movwf	___ftadd@f1
  5875  0035' 3F01               	moviw [1]fsr0
  5876  0036' 0091'              	movwf	___ftadd@f1+1
  5877  0037' 3F02               	moviw [2]fsr0
  5878  0038' 0092'              	movwf	___ftadd@f1+2
  5879  0039' 0824'              	movf	eval_poly@res,w
  5880  003A' 0080'              	movwf	___ftmul@f1
  5881  003B' 0825'              	movf	eval_poly@res+1,w
  5882  003C' 0081'              	movwf	___ftmul@f1+1
  5883  003D' 0826'              	movf	eval_poly@res+2,w
  5884  003E' 0082'              	movwf	___ftmul@f1+2
  5885  003F' 081D'              	movf	eval_poly@x,w
  5886  0040' 0083'              	movwf	___ftmul@f2
  5887  0041' 081E'              	movf	eval_poly@x+1,w
  5888  0042' 0084'              	movwf	___ftmul@f2+1
  5889  0043' 081F'              	movf	eval_poly@x+2,w
  5890  0044' 0085'              	movwf	___ftmul@f2+2
  5891  0045' 3180' 2000' 3180'  	fcall	___ftmul
  5892  0048' 0020               	movlb	0	; select bank0
  5893  0049' 0800'              	movf	?___ftmul,w
  5894  004A' 0093'              	movwf	___ftadd@f2
  5895  004B' 0801'              	movf	?___ftmul+1,w
  5896  004C' 0094'              	movwf	___ftadd@f2+1
  5897  004D' 0802'              	movf	?___ftmul+2,w
  5898  004E' 0095'              	movwf	___ftadd@f2+2
  5899  004F' 3180' 2000' 3180'  	fcall	___ftadd
  5900  0052' 0020               	movlb	0	; select bank0
  5901  0053' 0810'              	movf	?___ftadd,w
  5902  0054' 00A4'              	movwf	eval_poly@res
  5903  0055' 0811'              	movf	?___ftadd+1,w
  5904  0056' 00A5'              	movwf	eval_poly@res+1
  5905  0057' 0812'              	movf	?___ftadd+2,w
  5906  0058' 2800'              	goto	L2
  5907  0059'                    l2276:	
  5908  0059' 0824'              	movf	eval_poly@res,w
  5909  005A' 009D'              	movwf	?_eval_poly
  5910  005B' 0825'              	movf	eval_poly@res+1,w
  5911  005C' 009E'              	movwf	?_eval_poly+1
  5912  005D' 0826'              	movf	eval_poly@res+2,w
  5913  005E' 009F'              	movwf	?_eval_poly+2
  5914  005F' 0008               	return
  5915  0060'                    __end_of_eval_poly:	
  5916                           
  5917                           	psect	text4
  5918  0000'                    __ptext4:	
  5919 ;; *************** function ___wmul *****************
  5920 ;; Defined at:
  5921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  multiplier      2    0[COMMON] unsigned int 
  5924 ;;  multiplicand    2    2[COMMON] unsigned int 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  product         2    4[COMMON] unsigned int 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  2    0[COMMON] unsigned int 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;Total ram usage:        6 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;;		_eval_poly
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function ___wmul
  5952  0000'                    ___wmul:	
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5956  0000' 0184'              	clrf	___wmul@product
  5957  0001' 0185'              	clrf	___wmul@product+1
  5958  0002'                    l1848:	
  5959  0002' 1C00'              	btfss	___wmul@multiplier,0
  5960  0003' 2800'              	goto	l394
  5961  0004' 0802'              	movf	___wmul@multiplicand,w
  5962  0005' 0784'              	addwf	___wmul@product,f
  5963  0006' 0803'              	movf	___wmul@multiplicand+1,w
  5964  0007' 3D85'              	addwfc	___wmul@product+1,f
  5965  0008'                    l394:	
  5966  0008' 3001               	movlw	1
  5967  0009'                    u1655:	
  5968  0009' 3582'              	lslf	___wmul@multiplicand,f
  5969  000A' 0D83'              	rlf	___wmul@multiplicand+1,f
  5970  000B' 0B89               	decfsz	9,f
  5971  000C' 2800'              	goto	u1655
  5972  000D' 3001               	movlw	1
  5973  000E'                    u1665:	
  5974  000E' 3681'              	lsrf	___wmul@multiplier+1,f
  5975  000F' 0C80'              	rrf	___wmul@multiplier,f
  5976  0010' 0B89               	decfsz	9,f
  5977  0011' 2800'              	goto	u1665
  5978  0012' 0800'              	movf	___wmul@multiplier,w
  5979  0013' 0401'              	iorwf	___wmul@multiplier+1,w
  5980  0014' 1D03               	btfss	3,2
  5981  0015' 2800'              	goto	l1848
  5982  0016' 0805'              	movf	___wmul@product+1,w
  5983  0017' 0081'              	movwf	?___wmul+1
  5984  0018' 0804'              	movf	___wmul@product,w
  5985  0019' 0080'              	movwf	?___wmul
  5986  001A' 0008               	return
  5987  001B'                    __end_of___wmul:	
  5988                           
  5989                           	psect	text5
  5990  0000'                    __ptext5:	
  5991 ;; *************** function ___ftmul *****************
  5992 ;; Defined at:
  5993 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  f1              3    0[BANK0 ] float 
  5996 ;;  f2              3    3[BANK0 ] float 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5999 ;;  sign            1   15[BANK0 ] unsigned char 
  6000 ;;  cntr            1   14[BANK0 ] unsigned char 
  6001 ;;  exp             1   10[BANK0 ] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  3    0[BANK0 ] float 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, pclath, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6011 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;Total ram usage:       16 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    1
  6018 ;; This function calls:
  6019 ;;		___ftpack
  6020 ;; This function is called by:
  6021 ;;		_main
  6022 ;;		_log
  6023 ;;		_eval_poly
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function ___ftmul
  6029  0000'                    ___ftmul:	
  6030                           
  6031                           ;incstack = 0
  6032                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6033  0000' 0020               	movlb	0	; select bank0
  6034  0001' 0800'              	movf	___ftmul@f1,w
  6035  0002' 0086'              	movwf	??___ftmul
  6036  0003' 0801'              	movf	___ftmul@f1+1,w
  6037  0004' 0087'              	movwf	??___ftmul+1
  6038  0005' 0802'              	movf	___ftmul@f1+2,w
  6039  0006' 0088'              	movwf	??___ftmul+2
  6040  0007' 1003               	clrc
  6041  0008' 0D07'              	rlf	??___ftmul+1,w
  6042  0009' 0D08'              	rlf	??___ftmul+2,w
  6043  000A' 0089'              	movwf	??___ftmul+3
  6044  000B' 0809'              	movf	??___ftmul+3,w
  6045  000C' 008A'              	movwf	___ftmul@exp
  6046  000D' 080A'              	movf	___ftmul@exp,w
  6047  000E' 1D03               	btfss	3,2
  6048  000F' 2800'              	goto	l1936
  6049  0010' 3000               	movlw	0
  6050  0011' 0080'              	movwf	?___ftmul
  6051  0012' 3000               	movlw	0
  6052  0013' 0081'              	movwf	?___ftmul+1
  6053  0014' 3000               	movlw	0
  6054  0015' 0082'              	movwf	?___ftmul+2
  6055  0016' 0008               	return
  6056  0017'                    l1936:	
  6057  0017' 0803'              	movf	___ftmul@f2,w
  6058  0018' 0086'              	movwf	??___ftmul
  6059  0019' 0804'              	movf	___ftmul@f2+1,w
  6060  001A' 0087'              	movwf	??___ftmul+1
  6061  001B' 0805'              	movf	___ftmul@f2+2,w
  6062  001C' 0088'              	movwf	??___ftmul+2
  6063  001D' 1003               	clrc
  6064  001E' 0D07'              	rlf	??___ftmul+1,w
  6065  001F' 0D08'              	rlf	??___ftmul+2,w
  6066  0020' 0089'              	movwf	??___ftmul+3
  6067  0021' 0809'              	movf	??___ftmul+3,w
  6068  0022' 008F'              	movwf	___ftmul@sign
  6069  0023' 080F'              	movf	___ftmul@sign,w
  6070  0024' 1D03               	btfss	3,2
  6071  0025' 2800'              	goto	l1942
  6072  0026' 3000               	movlw	0
  6073  0027' 0080'              	movwf	?___ftmul
  6074  0028' 3000               	movlw	0
  6075  0029' 0081'              	movwf	?___ftmul+1
  6076  002A' 3000               	movlw	0
  6077  002B' 0082'              	movwf	?___ftmul+2
  6078  002C' 0008               	return
  6079  002D'                    l1942:	
  6080  002D' 080F'              	movf	___ftmul@sign,w
  6081  002E' 3E7B               	addlw	123
  6082  002F' 0086'              	movwf	??___ftmul
  6083  0030' 0806'              	movf	??___ftmul,w
  6084  0031' 078A'              	addwf	___ftmul@exp,f
  6085  0032' 0800'              	movf	___ftmul@f1,w
  6086  0033' 0086'              	movwf	??___ftmul
  6087  0034' 0801'              	movf	___ftmul@f1+1,w
  6088  0035' 0087'              	movwf	??___ftmul+1
  6089  0036' 0802'              	movf	___ftmul@f1+2,w
  6090  0037' 0088'              	movwf	??___ftmul+2
  6091  0038' 3010               	movlw	16
  6092  0039'                    u1935:	
  6093  0039' 3688'              	lsrf	??___ftmul+2,f
  6094  003A' 0C87'              	rrf	??___ftmul+1,f
  6095  003B' 0C86'              	rrf	??___ftmul,f
  6096  003C' 0B89               	decfsz	9,f
  6097  003D' 2800'              	goto	u1935
  6098  003E' 0806'              	movf	??___ftmul,w
  6099  003F' 0089'              	movwf	??___ftmul+3
  6100  0040' 0809'              	movf	??___ftmul+3,w
  6101  0041' 008F'              	movwf	___ftmul@sign
  6102  0042' 0803'              	movf	___ftmul@f2,w
  6103  0043' 0086'              	movwf	??___ftmul
  6104  0044' 0804'              	movf	___ftmul@f2+1,w
  6105  0045' 0087'              	movwf	??___ftmul+1
  6106  0046' 0805'              	movf	___ftmul@f2+2,w
  6107  0047' 0088'              	movwf	??___ftmul+2
  6108  0048' 3010               	movlw	16
  6109  0049'                    u1945:	
  6110  0049' 3688'              	lsrf	??___ftmul+2,f
  6111  004A' 0C87'              	rrf	??___ftmul+1,f
  6112  004B' 0C86'              	rrf	??___ftmul,f
  6113  004C' 0B89               	decfsz	9,f
  6114  004D' 2800'              	goto	u1945
  6115  004E' 0806'              	movf	??___ftmul,w
  6116  004F' 0089'              	movwf	??___ftmul+3
  6117  0050' 0809'              	movf	??___ftmul+3,w
  6118  0051' 068F'              	xorwf	___ftmul@sign,f
  6119  0052' 3080               	movlw	128
  6120  0053' 0086'              	movwf	??___ftmul
  6121  0054' 0806'              	movf	??___ftmul,w
  6122  0055' 058F'              	andwf	___ftmul@sign,f
  6123  0056' 1781'              	bsf	___ftmul@f1+1,7
  6124  0057' 1784'              	bsf	___ftmul@f2+1,7
  6125  0058' 30FF               	movlw	255
  6126  0059' 0583'              	andwf	___ftmul@f2,f
  6127  005A' 30FF               	movlw	255
  6128  005B' 0584'              	andwf	___ftmul@f2+1,f
  6129  005C' 3000               	movlw	0
  6130  005D' 0585'              	andwf	___ftmul@f2+2,f
  6131  005E' 3000               	movlw	0
  6132  005F' 008B'              	movwf	___ftmul@f3_as_product
  6133  0060' 3000               	movlw	0
  6134  0061' 008C'              	movwf	___ftmul@f3_as_product+1
  6135  0062' 3000               	movlw	0
  6136  0063' 008D'              	movwf	___ftmul@f3_as_product+2
  6137  0064' 3007               	movlw	7
  6138  0065' 0086'              	movwf	??___ftmul
  6139  0066' 0806'              	movf	??___ftmul,w
  6140  0067' 008E'              	movwf	___ftmul@cntr
  6141  0068'                    l1954:	
  6142  0068' 1C00'              	btfss	___ftmul@f1,0
  6143  0069' 2800'              	goto	l1958
  6144  006A' 0803'              	movf	___ftmul@f2,w
  6145  006B' 078B'              	addwf	___ftmul@f3_as_product,f
  6146  006C' 0804'              	movf	___ftmul@f2+1,w
  6147  006D' 3D8C'              	addwfc	___ftmul@f3_as_product+1,f
  6148  006E' 0805'              	movf	___ftmul@f2+2,w
  6149  006F' 3D8D'              	addwfc	___ftmul@f3_as_product+2,f
  6150  0070'                    l1958:	
  6151  0070' 3001               	movlw	1
  6152  0071'                    u1965:	
  6153  0071' 3682'              	lsrf	___ftmul@f1+2,f
  6154  0072' 0C81'              	rrf	___ftmul@f1+1,f
  6155  0073' 0C80'              	rrf	___ftmul@f1,f
  6156  0074' 0B89               	decfsz	9,f
  6157  0075' 2800'              	goto	u1965
  6158  0076' 3001               	movlw	1
  6159  0077'                    u1975:	
  6160  0077' 3583'              	lslf	___ftmul@f2,f
  6161  0078' 0D84'              	rlf	___ftmul@f2+1,f
  6162  0079' 0D85'              	rlf	___ftmul@f2+2,f
  6163  007A' 0B89               	decfsz	9,f
  6164  007B' 2800'              	goto	u1975
  6165  007C' 3001               	movlw	1
  6166  007D' 028E'              	subwf	___ftmul@cntr,f
  6167  007E' 1D03               	btfss	3,2
  6168  007F' 2800'              	goto	l1954
  6169  0080' 3009               	movlw	9
  6170  0081' 0086'              	movwf	??___ftmul
  6171  0082' 0806'              	movf	??___ftmul,w
  6172  0083' 008E'              	movwf	___ftmul@cntr
  6173  0084'                    l1966:	
  6174  0084' 1C00'              	btfss	___ftmul@f1,0
  6175  0085' 2800'              	goto	l1970
  6176  0086' 0803'              	movf	___ftmul@f2,w
  6177  0087' 078B'              	addwf	___ftmul@f3_as_product,f
  6178  0088' 0804'              	movf	___ftmul@f2+1,w
  6179  0089' 3D8C'              	addwfc	___ftmul@f3_as_product+1,f
  6180  008A' 0805'              	movf	___ftmul@f2+2,w
  6181  008B' 3D8D'              	addwfc	___ftmul@f3_as_product+2,f
  6182  008C'                    l1970:	
  6183  008C' 3001               	movlw	1
  6184  008D'                    u2005:	
  6185  008D' 3682'              	lsrf	___ftmul@f1+2,f
  6186  008E' 0C81'              	rrf	___ftmul@f1+1,f
  6187  008F' 0C80'              	rrf	___ftmul@f1,f
  6188  0090' 0B89               	decfsz	9,f
  6189  0091' 2800'              	goto	u2005
  6190  0092' 3001               	movlw	1
  6191  0093'                    u2015:	
  6192  0093' 368D'              	lsrf	___ftmul@f3_as_product+2,f
  6193  0094' 0C8C'              	rrf	___ftmul@f3_as_product+1,f
  6194  0095' 0C8B'              	rrf	___ftmul@f3_as_product,f
  6195  0096' 0B89               	decfsz	9,f
  6196  0097' 2800'              	goto	u2015
  6197  0098' 3001               	movlw	1
  6198  0099' 028E'              	subwf	___ftmul@cntr,f
  6199  009A' 1D03               	btfss	3,2
  6200  009B' 2800'              	goto	l1966
  6201  009C' 080B'              	movf	___ftmul@f3_as_product,w
  6202  009D' 0080'              	movwf	___ftpack@arg
  6203  009E' 080C'              	movf	___ftmul@f3_as_product+1,w
  6204  009F' 0081'              	movwf	___ftpack@arg+1
  6205  00A0' 080D'              	movf	___ftmul@f3_as_product+2,w
  6206  00A1' 0082'              	movwf	___ftpack@arg+2
  6207  00A2' 080A'              	movf	___ftmul@exp,w
  6208  00A3' 0086'              	movwf	??___ftmul
  6209  00A4' 0806'              	movf	??___ftmul,w
  6210  00A5' 0083'              	movwf	___ftpack@exp
  6211  00A6' 080F'              	movf	___ftmul@sign,w
  6212  00A7' 0087'              	movwf	??___ftmul+1
  6213  00A8' 0807'              	movf	??___ftmul+1,w
  6214  00A9' 0084'              	movwf	___ftpack@sign
  6215  00AA' 3180' 2000'        	fcall	___ftpack
  6216  00AC' 0800'              	movf	?___ftpack,w
  6217  00AD' 0020               	movlb	0	; select bank0
  6218  00AE' 0080'              	movwf	?___ftmul
  6219  00AF' 0801'              	movf	?___ftpack+1,w
  6220  00B0' 0081'              	movwf	?___ftmul+1
  6221  00B1' 0802'              	movf	?___ftpack+2,w
  6222  00B2' 0082'              	movwf	?___ftmul+2
  6223  00B3' 0008               	return
  6224  00B4'                    __end_of___ftmul:	
  6225                           
  6226                           	psect	text6
  6227  0000'                    __ptext6:	
  6228 ;; *************** function ___ftge *****************
  6229 ;; Defined at:
  6230 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  ff1             3   29[BANK0 ] float 
  6233 ;;  ff2             3   32[BANK0 ] float 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6245 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;Total ram usage:        9 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_main
  6255 ;;		_log
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function ___ftge
  6261  0000'                    ___ftge:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6265  0000' 0020               	movlb	0	; select bank0
  6266  0001' 1F9F'              	btfss	___ftge@ff1+2,7
  6267  0002' 2800'              	goto	l2234
  6268  0003' 091D'              	comf	___ftge@ff1,w
  6269  0004' 00A3'              	movwf	??___ftge
  6270  0005' 091E'              	comf	___ftge@ff1+1,w
  6271  0006' 00A4'              	movwf	??___ftge+1
  6272  0007' 091F'              	comf	___ftge@ff1+2,w
  6273  0008' 00A5'              	movwf	??___ftge+2
  6274  0009' 0AA3'              	incf	??___ftge,f
  6275  000A' 1903               	skipnz
  6276  000B' 0AA4'              	incf	??___ftge+1,f
  6277  000C' 1903               	skipnz
  6278  000D' 0AA5'              	incf	??___ftge+2,f
  6279  000E' 3000               	movlw	0
  6280  000F' 0723'              	addwf	??___ftge,w
  6281  0010' 009D'              	movwf	___ftge@ff1
  6282  0011' 3000               	movlw	0
  6283  0012' 3D24'              	addwfc	??___ftge+1,w
  6284  0013' 009E'              	movwf	___ftge@ff1+1
  6285  0014' 3080               	movlw	128
  6286  0015' 3D25'              	addwfc	??___ftge+2,w
  6287  0016' 009F'              	movwf	___ftge@ff1+2
  6288  0017'                    l2234:	
  6289  0017' 1FA2'              	btfss	___ftge@ff2+2,7
  6290  0018' 2800'              	goto	l2238
  6291  0019' 0920'              	comf	___ftge@ff2,w
  6292  001A' 00A3'              	movwf	??___ftge
  6293  001B' 0921'              	comf	___ftge@ff2+1,w
  6294  001C' 00A4'              	movwf	??___ftge+1
  6295  001D' 0922'              	comf	___ftge@ff2+2,w
  6296  001E' 00A5'              	movwf	??___ftge+2
  6297  001F' 0AA3'              	incf	??___ftge,f
  6298  0020' 1903               	skipnz
  6299  0021' 0AA4'              	incf	??___ftge+1,f
  6300  0022' 1903               	skipnz
  6301  0023' 0AA5'              	incf	??___ftge+2,f
  6302  0024' 3000               	movlw	0
  6303  0025' 0723'              	addwf	??___ftge,w
  6304  0026' 00A0'              	movwf	___ftge@ff2
  6305  0027' 3000               	movlw	0
  6306  0028' 3D24'              	addwfc	??___ftge+1,w
  6307  0029' 00A1'              	movwf	___ftge@ff2+1
  6308  002A' 3080               	movlw	128
  6309  002B' 3D25'              	addwfc	??___ftge+2,w
  6310  002C' 00A2'              	movwf	___ftge@ff2+2
  6311  002D'                    l2238:	
  6312  002D' 3080               	movlw	128
  6313  002E' 069F'              	xorwf	___ftge@ff1+2,f
  6314  002F' 3080               	movlw	128
  6315  0030' 06A2'              	xorwf	___ftge@ff2+2,f
  6316  0031' 0822'              	movf	___ftge@ff2+2,w
  6317  0032' 021F'              	subwf	___ftge@ff1+2,w
  6318  0033' 1D03               	skipz
  6319  0034' 0008               	return
  6320  0035' 0821'              	movf	___ftge@ff2+1,w
  6321  0036' 021E'              	subwf	___ftge@ff1+1,w
  6322  0037' 1D03               	skipz
  6323  0038' 0008               	return
  6324  0039' 0820'              	movf	___ftge@ff2,w
  6325  003A' 021D'              	subwf	___ftge@ff1,w
  6326  003B' 0008               	return
  6327  003C'                    __end_of___ftge:	
  6328                           
  6329                           	psect	text7
  6330  0000'                    __ptext7:	
  6331 ;; *************** function ___awtoft *****************
  6332 ;; Defined at:
  6333 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  c               2    8[COMMON] int 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  sign            1   13[COMMON] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  3    8[COMMON] float 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, pclath, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6347 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;Total ram usage:        6 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    1
  6354 ;; This function calls:
  6355 ;;		___ftpack
  6356 ;; This function is called by:
  6357 ;;		_log
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           
  6362                           ;psect for function ___awtoft
  6363  0000'                    ___awtoft:	
  6364                           
  6365                           ;incstack = 0
  6366                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6367  0000' 018D'              	clrf	___awtoft@sign
  6368  0001' 1F89'              	btfss	___awtoft@c+1,7
  6369  0002' 2800'              	goto	l2226
  6370  0003' 0988'              	comf	___awtoft@c,f
  6371  0004' 0989'              	comf	___awtoft@c+1,f
  6372  0005' 0A88'              	incf	___awtoft@c,f
  6373  0006' 1903               	skipnz
  6374  0007' 0A89'              	incf	___awtoft@c+1,f
  6375  0008' 018D'              	clrf	___awtoft@sign
  6376  0009' 0A8D'              	incf	___awtoft@sign,f
  6377  000A'                    l2226:	
  6378  000A' 0808'              	movf	___awtoft@c,w
  6379  000B' 0080'              	movwf	___ftpack@arg
  6380  000C' 0809'              	movf	___awtoft@c+1,w
  6381  000D' 0081'              	movwf	___ftpack@arg+1
  6382  000E' 0182'              	clrf	___ftpack@arg+2
  6383  000F' 308E               	movlw	142
  6384  0010' 008B'              	movwf	??___awtoft
  6385  0011' 080B'              	movf	??___awtoft,w
  6386  0012' 0083'              	movwf	___ftpack@exp
  6387  0013' 080D'              	movf	___awtoft@sign,w
  6388  0014' 008C'              	movwf	??___awtoft+1
  6389  0015' 080C'              	movf	??___awtoft+1,w
  6390  0016' 0084'              	movwf	___ftpack@sign
  6391  0017' 3180' 2000'        	fcall	___ftpack
  6392  0019' 0800'              	movf	?___ftpack,w
  6393  001A' 0088'              	movwf	?___awtoft
  6394  001B' 0801'              	movf	?___ftpack+1,w
  6395  001C' 0089'              	movwf	?___awtoft+1
  6396  001D' 0802'              	movf	?___ftpack+2,w
  6397  001E' 008A'              	movwf	?___awtoft+2
  6398  001F' 0008               	return
  6399  0020'                    __end_of___awtoft:	
  6400                           
  6401                           	psect	text8
  6402  0000'                    __ptext8:	
  6403 ;; *************** function ___lwtoft *****************
  6404 ;; Defined at:
  6405 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  c               2    8[COMMON] unsigned int 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  3    8[COMMON] float 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;Total ram usage:        4 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    1
  6426 ;; This function calls:
  6427 ;;		___ftpack
  6428 ;; This function is called by:
  6429 ;;		_main
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           
  6434                           ;psect for function ___lwtoft
  6435  0000'                    ___lwtoft:	
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6439  0000' 0808'              	movf	___lwtoft@c,w
  6440  0001' 0080'              	movwf	___ftpack@arg
  6441  0002' 0809'              	movf	___lwtoft@c+1,w
  6442  0003' 0081'              	movwf	___ftpack@arg+1
  6443  0004' 0182'              	clrf	___ftpack@arg+2
  6444  0005' 308E               	movlw	142
  6445  0006' 008B'              	movwf	??___lwtoft
  6446  0007' 080B'              	movf	??___lwtoft,w
  6447  0008' 0083'              	movwf	___ftpack@exp
  6448  0009' 0184'              	clrf	___ftpack@sign
  6449  000A' 3180' 2000'        	fcall	___ftpack
  6450  000C' 0800'              	movf	?___ftpack,w
  6451  000D' 0088'              	movwf	?___lwtoft
  6452  000E' 0801'              	movf	?___ftpack+1,w
  6453  000F' 0089'              	movwf	?___lwtoft+1
  6454  0010' 0802'              	movf	?___ftpack+2,w
  6455  0011' 008A'              	movwf	?___lwtoft+2
  6456  0012' 0008               	return
  6457  0013'                    __end_of___lwtoft:	
  6458                           
  6459                           	psect	text9
  6460  0000'                    __ptext9:	
  6461 ;; *************** function ___lwdiv *****************
  6462 ;; Defined at:
  6463 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  divisor         2    6[COMMON] unsigned int 
  6466 ;;  dividend        2    8[COMMON] unsigned int 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  quotient        2   11[COMMON] unsigned int 
  6469 ;;  counter         1   13[COMMON] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  2    6[COMMON] unsigned int 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;Total ram usage:        8 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           
  6493                           ;psect for function ___lwdiv
  6494  0000'                    ___lwdiv:	
  6495                           
  6496                           ;incstack = 0
  6497                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6498  0000' 018B'              	clrf	___lwdiv@quotient
  6499  0001' 018C'              	clrf	___lwdiv@quotient+1
  6500  0002' 0806'              	movf	___lwdiv@divisor,w
  6501  0003' 0407'              	iorwf	___lwdiv@divisor+1,w
  6502  0004' 1903               	btfsc	3,2
  6503  0005' 2800'              	goto	l2586
  6504  0006' 018D'              	clrf	___lwdiv@counter
  6505  0007' 0A8D'              	incf	___lwdiv@counter,f
  6506  0008'                    l2574:	
  6507  0008' 1B87'              	btfsc	___lwdiv@divisor+1,7
  6508  0009' 2800'              	goto	l2576
  6509  000A' 3001               	movlw	1
  6510  000B'                    u2815:	
  6511  000B' 3586'              	lslf	___lwdiv@divisor,f
  6512  000C' 0D87'              	rlf	___lwdiv@divisor+1,f
  6513  000D' 0B89               	decfsz	9,f
  6514  000E' 2800'              	goto	u2815
  6515  000F' 3001               	movlw	1
  6516  0010' 008A'              	movwf	??___lwdiv
  6517  0011' 080A'              	movf	??___lwdiv,w
  6518  0012' 078D'              	addwf	___lwdiv@counter,f
  6519  0013' 2800'              	goto	l2574
  6520  0014'                    l2576:	
  6521  0014' 3001               	movlw	1
  6522  0015'                    u2835:	
  6523  0015' 358B'              	lslf	___lwdiv@quotient,f
  6524  0016' 0D8C'              	rlf	___lwdiv@quotient+1,f
  6525  0017' 0B89               	decfsz	9,f
  6526  0018' 2800'              	goto	u2835
  6527  0019' 0807'              	movf	___lwdiv@divisor+1,w
  6528  001A' 0209'              	subwf	___lwdiv@dividend+1,w
  6529  001B' 1D03               	skipz
  6530  001C' 2800'              	goto	u2845
  6531  001D' 0806'              	movf	___lwdiv@divisor,w
  6532  001E' 0208'              	subwf	___lwdiv@dividend,w
  6533  001F'                    u2845:	
  6534  001F' 1C03               	skipc
  6535  0020' 2800'              	goto	l2582
  6536  0021' 0806'              	movf	___lwdiv@divisor,w
  6537  0022' 0288'              	subwf	___lwdiv@dividend,f
  6538  0023' 0807'              	movf	___lwdiv@divisor+1,w
  6539  0024' 3B89'              	subwfb	___lwdiv@dividend+1,f
  6540  0025' 140B'              	bsf	___lwdiv@quotient,0
  6541  0026'                    l2582:	
  6542  0026' 3001               	movlw	1
  6543  0027'                    u2855:	
  6544  0027' 3687'              	lsrf	___lwdiv@divisor+1,f
  6545  0028' 0C86'              	rrf	___lwdiv@divisor,f
  6546  0029' 0B89               	decfsz	9,f
  6547  002A' 2800'              	goto	u2855
  6548  002B' 3001               	movlw	1
  6549  002C' 028D'              	subwf	___lwdiv@counter,f
  6550  002D' 1D03               	btfss	3,2
  6551  002E' 2800'              	goto	l2576
  6552  002F'                    l2586:	
  6553  002F' 080C'              	movf	___lwdiv@quotient+1,w
  6554  0030' 0087'              	movwf	?___lwdiv+1
  6555  0031' 080B'              	movf	___lwdiv@quotient,w
  6556  0032' 0086'              	movwf	?___lwdiv
  6557  0033' 0008               	return
  6558  0034'                    __end_of___lwdiv:	
  6559                           
  6560                           	psect	text10
  6561  0000'                    __ptext10:	
  6562 ;; *************** function ___lbtoft *****************
  6563 ;; Defined at:
  6564 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  c               1    wreg     unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  c               1   11[COMMON] unsigned char 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  3    8[COMMON] float 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0, pclath, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        8 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    1
  6585 ;; This function calls:
  6586 ;;		___ftpack
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function ___lbtoft
  6594  0000'                    ___lbtoft:	
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  6598                           ;___lbtoft@c stored from wreg
  6599  0000' 008B'              	movwf	___lbtoft@c
  6600  0001' 080B'              	movf	___lbtoft@c,w
  6601  0002' 0020               	movlb	0	; select bank0
  6602  0003' 0080'              	movwf	??___lbtoft
  6603  0004' 0181'              	clrf	??___lbtoft+1
  6604  0005' 0182'              	clrf	??___lbtoft+2
  6605  0006' 0800'              	movf	??___lbtoft,w
  6606  0007' 0080'              	movwf	___ftpack@arg
  6607  0008' 0801'              	movf	??___lbtoft+1,w
  6608  0009' 0081'              	movwf	___ftpack@arg+1
  6609  000A' 0802'              	movf	??___lbtoft+2,w
  6610  000B' 0082'              	movwf	___ftpack@arg+2
  6611  000C' 308E               	movlw	142
  6612  000D' 0083'              	movwf	??___lbtoft+3
  6613  000E' 0803'              	movf	??___lbtoft+3,w
  6614  000F' 0083'              	movwf	___ftpack@exp
  6615  0010' 0184'              	clrf	___ftpack@sign
  6616  0011' 3180' 2000'        	fcall	___ftpack
  6617  0013' 0800'              	movf	?___ftpack,w
  6618  0014' 0088'              	movwf	?___lbtoft
  6619  0015' 0801'              	movf	?___ftpack+1,w
  6620  0016' 0089'              	movwf	?___lbtoft+1
  6621  0017' 0802'              	movf	?___ftpack+2,w
  6622  0018' 008A'              	movwf	?___lbtoft+2
  6623  0019' 0008               	return
  6624  001A'                    __end_of___lbtoft:	
  6625                           
  6626                           	psect	text11
  6627  0000'                    __ptext11:	
  6628 ;; *************** function ___fttol *****************
  6629 ;; Defined at:
  6630 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  f1              3   16[BANK0 ] float 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  lval            4   25[BANK0 ] unsigned long 
  6635 ;;  exp1            1   29[BANK0 ] unsigned char 
  6636 ;;  sign1           1   24[BANK0 ] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  4   16[BANK0 ] long 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;Total ram usage:       14 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function ___fttol
  6661  0000'                    ___fttol:	
  6662                           
  6663                           ;incstack = 0
  6664                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6665  0000' 0020               	movlb	0	; select bank0
  6666  0001' 0810'              	movf	___fttol@f1,w
  6667  0002' 0094'              	movwf	??___fttol
  6668  0003' 0811'              	movf	___fttol@f1+1,w
  6669  0004' 0095'              	movwf	??___fttol+1
  6670  0005' 0812'              	movf	___fttol@f1+2,w
  6671  0006' 0096'              	movwf	??___fttol+2
  6672  0007' 1003               	clrc
  6673  0008' 0D15'              	rlf	??___fttol+1,w
  6674  0009' 0D16'              	rlf	??___fttol+2,w
  6675  000A' 0097'              	movwf	??___fttol+3
  6676  000B' 0817'              	movf	??___fttol+3,w
  6677  000C' 009D'              	movwf	___fttol@exp1
  6678  000D' 081D'              	movf	___fttol@exp1,w
  6679  000E' 1D03               	btfss	3,2
  6680  000F' 2800'              	goto	l2524
  6681  0010' 3000               	movlw	0
  6682  0011' 0093'              	movwf	?___fttol+3
  6683  0012' 3000               	movlw	0
  6684  0013' 0092'              	movwf	?___fttol+2
  6685  0014' 3000               	movlw	0
  6686  0015' 0091'              	movwf	?___fttol+1
  6687  0016' 3000               	movlw	0
  6688  0017' 0090'              	movwf	?___fttol
  6689  0018' 0008               	return
  6690  0019'                    l2524:	
  6691  0019' 0810'              	movf	___fttol@f1,w
  6692  001A' 0094'              	movwf	??___fttol
  6693  001B' 0811'              	movf	___fttol@f1+1,w
  6694  001C' 0095'              	movwf	??___fttol+1
  6695  001D' 0812'              	movf	___fttol@f1+2,w
  6696  001E' 0096'              	movwf	??___fttol+2
  6697  001F' 3017               	movlw	23
  6698  0020'                    u2715:	
  6699  0020' 3696'              	lsrf	??___fttol+2,f
  6700  0021' 0C95'              	rrf	??___fttol+1,f
  6701  0022' 0C94'              	rrf	??___fttol,f
  6702  0023' 0B89               	decfsz	9,f
  6703  0024' 2800'              	goto	u2715
  6704  0025' 0814'              	movf	??___fttol,w
  6705  0026' 0097'              	movwf	??___fttol+3
  6706  0027' 0817'              	movf	??___fttol+3,w
  6707  0028' 0098'              	movwf	___fttol@sign1
  6708  0029' 1791'              	bsf	___fttol@f1+1,7
  6709  002A' 30FF               	movlw	255
  6710  002B' 0590'              	andwf	___fttol@f1,f
  6711  002C' 30FF               	movlw	255
  6712  002D' 0591'              	andwf	___fttol@f1+1,f
  6713  002E' 3000               	movlw	0
  6714  002F' 0592'              	andwf	___fttol@f1+2,f
  6715  0030' 0810'              	movf	___fttol@f1,w
  6716  0031' 0099'              	movwf	___fttol@lval
  6717  0032' 0811'              	movf	___fttol@f1+1,w
  6718  0033' 009A'              	movwf	___fttol@lval+1
  6719  0034' 0812'              	movf	___fttol@f1+2,w
  6720  0035' 009B'              	movwf	___fttol@lval+2
  6721  0036' 019C'              	clrf	___fttol@lval+3
  6722  0037' 308E               	movlw	142
  6723  0038' 029D'              	subwf	___fttol@exp1,f
  6724  0039' 1F9D'              	btfss	___fttol@exp1,7
  6725  003A' 2800'              	goto	l2544
  6726  003B' 081D'              	movf	___fttol@exp1,w
  6727  003C' 3A80               	xorlw	128
  6728  003D' 3E8F               	addlw	143
  6729  003E' 1803               	skipnc
  6730  003F' 2800'              	goto	l2542
  6731  0040' 3000               	movlw	0
  6732  0041' 0093'              	movwf	?___fttol+3
  6733  0042' 3000               	movlw	0
  6734  0043' 0092'              	movwf	?___fttol+2
  6735  0044' 3000               	movlw	0
  6736  0045' 0091'              	movwf	?___fttol+1
  6737  0046' 3000               	movlw	0
  6738  0047' 0090'              	movwf	?___fttol
  6739  0048' 0008               	return
  6740  0049'                    l2542:	
  6741  0049' 3001               	movlw	1
  6742  004A'                    u2745:	
  6743  004A' 369C'              	lsrf	___fttol@lval+3,f
  6744  004B' 0C9B'              	rrf	___fttol@lval+2,f
  6745  004C' 0C9A'              	rrf	___fttol@lval+1,f
  6746  004D' 0C99'              	rrf	___fttol@lval,f
  6747  004E' 0B89               	decfsz	9,f
  6748  004F' 2800'              	goto	u2745
  6749  0050' 3001               	movlw	1
  6750  0051' 0094'              	movwf	??___fttol
  6751  0052' 0814'              	movf	??___fttol,w
  6752  0053' 079D'              	addwf	___fttol@exp1,f
  6753  0054' 1903               	btfsc	3,2
  6754  0055' 2800'              	goto	l2552
  6755  0056' 2800'              	goto	l2542
  6756  0057'                    l2544:	
  6757  0057' 3018               	movlw	24
  6758  0058' 021D'              	subwf	___fttol@exp1,w
  6759  0059' 1C03               	skipc
  6760  005A' 2800'              	goto	l646
  6761  005B' 3000               	movlw	0
  6762  005C' 0093'              	movwf	?___fttol+3
  6763  005D' 3000               	movlw	0
  6764  005E' 0092'              	movwf	?___fttol+2
  6765  005F' 3000               	movlw	0
  6766  0060' 0091'              	movwf	?___fttol+1
  6767  0061' 3000               	movlw	0
  6768  0062' 0090'              	movwf	?___fttol
  6769  0063' 0008               	return
  6770  0064'                    l2550:	
  6771  0064' 3001               	movlw	1
  6772  0065'                    u2775:	
  6773  0065' 3599'              	lslf	___fttol@lval,f
  6774  0066' 0D9A'              	rlf	___fttol@lval+1,f
  6775  0067' 0D9B'              	rlf	___fttol@lval+2,f
  6776  0068' 0D9C'              	rlf	___fttol@lval+3,f
  6777  0069' 0B89               	decfsz	9,f
  6778  006A' 2800'              	goto	u2775
  6779  006B' 3001               	movlw	1
  6780  006C' 029D'              	subwf	___fttol@exp1,f
  6781  006D'                    l646:	
  6782  006D' 081D'              	movf	___fttol@exp1,w
  6783  006E' 1D03               	btfss	3,2
  6784  006F' 2800'              	goto	l2550
  6785  0070'                    l2552:	
  6786  0070' 0818'              	movf	___fttol@sign1,w
  6787  0071' 1903               	btfsc	3,2
  6788  0072' 2800'              	goto	l2556
  6789  0073' 0999'              	comf	___fttol@lval,f
  6790  0074' 099A'              	comf	___fttol@lval+1,f
  6791  0075' 099B'              	comf	___fttol@lval+2,f
  6792  0076' 099C'              	comf	___fttol@lval+3,f
  6793  0077' 0A99'              	incf	___fttol@lval,f
  6794  0078' 1903               	skipnz
  6795  0079' 0A9A'              	incf	___fttol@lval+1,f
  6796  007A' 1903               	skipnz
  6797  007B' 0A9B'              	incf	___fttol@lval+2,f
  6798  007C' 1903               	skipnz
  6799  007D' 0A9C'              	incf	___fttol@lval+3,f
  6800  007E'                    l2556:	
  6801  007E' 081C'              	movf	___fttol@lval+3,w
  6802  007F' 0093'              	movwf	?___fttol+3
  6803  0080' 081B'              	movf	___fttol@lval+2,w
  6804  0081' 0092'              	movwf	?___fttol+2
  6805  0082' 081A'              	movf	___fttol@lval+1,w
  6806  0083' 0091'              	movwf	?___fttol+1
  6807  0084' 0819'              	movf	___fttol@lval,w
  6808  0085' 0090'              	movwf	?___fttol
  6809  0086' 0008               	return
  6810  0087'                    __end_of___fttol:	
  6811                           
  6812                           	psect	text12
  6813  0000'                    __ptext12:	
  6814 ;; *************** function ___ftsub *****************
  6815 ;; Defined at:
  6816 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  f2              3   29[BANK0 ] float 
  6819 ;;  f1              3   32[BANK0 ] float 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  3   29[BANK0 ] float 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, pclath, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6831 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;Total ram usage:        6 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    2
  6838 ;; This function calls:
  6839 ;;		___ftadd
  6840 ;; This function is called by:
  6841 ;;		_main
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           
  6846                           ;psect for function ___ftsub
  6847  0000'                    ___ftsub:	
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6851  0000' 0020               	movlb	0	; select bank0
  6852  0001' 081F'              	movf	___ftsub@f2+2,w
  6853  0002' 041E'              	iorwf	___ftsub@f2+1,w
  6854  0003' 041D'              	iorwf	___ftsub@f2,w
  6855  0004' 1903               	skipnz
  6856  0005' 2800'              	goto	l2514
  6857  0006' 3080               	movlw	128
  6858  0007' 069F'              	xorwf	___ftsub@f2+2,f
  6859  0008'                    l2514:	
  6860  0008' 0820'              	movf	___ftsub@f1,w
  6861  0009' 0090'              	movwf	___ftadd@f1
  6862  000A' 0821'              	movf	___ftsub@f1+1,w
  6863  000B' 0091'              	movwf	___ftadd@f1+1
  6864  000C' 0822'              	movf	___ftsub@f1+2,w
  6865  000D' 0092'              	movwf	___ftadd@f1+2
  6866  000E' 081D'              	movf	___ftsub@f2,w
  6867  000F' 0093'              	movwf	___ftadd@f2
  6868  0010' 081E'              	movf	___ftsub@f2+1,w
  6869  0011' 0094'              	movwf	___ftadd@f2+1
  6870  0012' 081F'              	movf	___ftsub@f2+2,w
  6871  0013' 0095'              	movwf	___ftadd@f2+2
  6872  0014' 3180' 2000'        	fcall	___ftadd
  6873  0016' 0020               	movlb	0	; select bank0
  6874  0017' 0810'              	movf	?___ftadd,w
  6875  0018' 009D'              	movwf	?___ftsub
  6876  0019' 0811'              	movf	?___ftadd+1,w
  6877  001A' 009E'              	movwf	?___ftsub+1
  6878  001B' 0812'              	movf	?___ftadd+2,w
  6879  001C' 009F'              	movwf	?___ftsub+2
  6880  001D' 0008               	return
  6881  001E'                    __end_of___ftsub:	
  6882                           
  6883                           	psect	text13
  6884  0000'                    __ptext13:	
  6885 ;; *************** function ___ftadd *****************
  6886 ;; Defined at:
  6887 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  f1              3   16[BANK0 ] float 
  6890 ;;  f2              3   19[BANK0 ] float 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  exp1            1   28[BANK0 ] unsigned char 
  6893 ;;  exp2            1   27[BANK0 ] unsigned char 
  6894 ;;  sign            1   26[BANK0 ] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  3   16[BANK0 ] float 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;Total ram usage:       13 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    1
  6911 ;; This function calls:
  6912 ;;		___ftpack
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;;		___ftsub
  6916 ;;		_log
  6917 ;;		_eval_poly
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function ___ftadd
  6923  0000'                    ___ftadd:	
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6927  0000' 0020               	movlb	0	; select bank0
  6928  0001' 0810'              	movf	___ftadd@f1,w
  6929  0002' 0096'              	movwf	??___ftadd
  6930  0003' 0811'              	movf	___ftadd@f1+1,w
  6931  0004' 0097'              	movwf	??___ftadd+1
  6932  0005' 0812'              	movf	___ftadd@f1+2,w
  6933  0006' 0098'              	movwf	??___ftadd+2
  6934  0007' 1003               	clrc
  6935  0008' 0D17'              	rlf	??___ftadd+1,w
  6936  0009' 0D18'              	rlf	??___ftadd+2,w
  6937  000A' 0099'              	movwf	??___ftadd+3
  6938  000B' 0819'              	movf	??___ftadd+3,w
  6939  000C' 009C'              	movwf	___ftadd@exp1
  6940  000D' 0813'              	movf	___ftadd@f2,w
  6941  000E' 0096'              	movwf	??___ftadd
  6942  000F' 0814'              	movf	___ftadd@f2+1,w
  6943  0010' 0097'              	movwf	??___ftadd+1
  6944  0011' 0815'              	movf	___ftadd@f2+2,w
  6945  0012' 0098'              	movwf	??___ftadd+2
  6946  0013' 1003               	clrc
  6947  0014' 0D17'              	rlf	??___ftadd+1,w
  6948  0015' 0D18'              	rlf	??___ftadd+2,w
  6949  0016' 0099'              	movwf	??___ftadd+3
  6950  0017' 0819'              	movf	??___ftadd+3,w
  6951  0018' 009B'              	movwf	___ftadd@exp2
  6952  0019' 081C'              	movf	___ftadd@exp1,w
  6953  001A' 1903               	btfsc	3,2
  6954  001B' 2800'              	goto	l1866
  6955  001C' 081B'              	movf	___ftadd@exp2,w
  6956  001D' 021C'              	subwf	___ftadd@exp1,w
  6957  001E' 1803               	skipnc
  6958  001F' 2800'              	goto	l1870
  6959  0020' 031C'              	decf	___ftadd@exp1,w
  6960  0021' 3AFF               	xorlw	255
  6961  0022' 071B'              	addwf	___ftadd@exp2,w
  6962  0023' 0096'              	movwf	??___ftadd
  6963  0024' 3019               	movlw	25
  6964  0025' 0216'              	subwf	??___ftadd,w
  6965  0026' 1C03               	skipc
  6966  0027' 2800'              	goto	l1870
  6967  0028'                    l1866:	
  6968  0028' 0813'              	movf	___ftadd@f2,w
  6969  0029' 0090'              	movwf	?___ftadd
  6970  002A' 0814'              	movf	___ftadd@f2+1,w
  6971  002B' 0091'              	movwf	?___ftadd+1
  6972  002C' 0815'              	movf	___ftadd@f2+2,w
  6973  002D' 0092'              	movwf	?___ftadd+2
  6974  002E' 0008               	return
  6975  002F'                    l1870:	
  6976  002F' 081B'              	movf	___ftadd@exp2,w
  6977  0030' 1903               	btfsc	3,2
  6978  0031' 0008               	return
  6979  0032' 081C'              	movf	___ftadd@exp1,w
  6980  0033' 021B'              	subwf	___ftadd@exp2,w
  6981  0034' 1803               	skipnc
  6982  0035' 2800'              	goto	l1876
  6983  0036' 031B'              	decf	___ftadd@exp2,w
  6984  0037' 3AFF               	xorlw	255
  6985  0038' 071C'              	addwf	___ftadd@exp1,w
  6986  0039' 0096'              	movwf	??___ftadd
  6987  003A' 3019               	movlw	25
  6988  003B' 0216'              	subwf	??___ftadd,w
  6989  003C' 1803               	btfsc	3,0
  6990  003D' 0008               	return
  6991  003E'                    l1876:	
  6992  003E' 3006               	movlw	6
  6993  003F' 0096'              	movwf	??___ftadd
  6994  0040' 0816'              	movf	??___ftadd,w
  6995  0041' 009A'              	movwf	___ftadd@sign
  6996  0042' 1B92'              	btfsc	___ftadd@f1+2,7
  6997  0043' 179A'              	bsf	___ftadd@sign,7
  6998  0044' 1B95'              	btfsc	___ftadd@f2+2,7
  6999  0045' 171A'              	bsf	___ftadd@sign,6
  7000  0046' 1791'              	bsf	___ftadd@f1+1,7
  7001  0047' 30FF               	movlw	255
  7002  0048' 0590'              	andwf	___ftadd@f1,f
  7003  0049' 30FF               	movlw	255
  7004  004A' 0591'              	andwf	___ftadd@f1+1,f
  7005  004B' 3000               	movlw	0
  7006  004C' 0592'              	andwf	___ftadd@f1+2,f
  7007  004D' 1794'              	bsf	___ftadd@f2+1,7
  7008  004E' 30FF               	movlw	255
  7009  004F' 0593'              	andwf	___ftadd@f2,f
  7010  0050' 30FF               	movlw	255
  7011  0051' 0594'              	andwf	___ftadd@f2+1,f
  7012  0052' 3000               	movlw	0
  7013  0053' 0595'              	andwf	___ftadd@f2+2,f
  7014  0054' 081B'              	movf	___ftadd@exp2,w
  7015  0055' 021C'              	subwf	___ftadd@exp1,w
  7016  0056' 1803               	skipnc
  7017  0057' 2800'              	goto	l1898
  7018  0058'                    l1888:	
  7019  0058' 3001               	movlw	1
  7020  0059'                    u1775:	
  7021  0059' 3593'              	lslf	___ftadd@f2,f
  7022  005A' 0D94'              	rlf	___ftadd@f2+1,f
  7023  005B' 0D95'              	rlf	___ftadd@f2+2,f
  7024  005C' 0B89               	decfsz	9,f
  7025  005D' 2800'              	goto	u1775
  7026  005E' 3001               	movlw	1
  7027  005F' 029B'              	subwf	___ftadd@exp2,f
  7028  0060' 081B'              	movf	___ftadd@exp2,w
  7029  0061' 061C'              	xorwf	___ftadd@exp1,w
  7030  0062' 1903               	skipnz
  7031  0063' 2800'              	goto	l1896
  7032  0064' 3001               	movlw	1
  7033  0065' 029A'              	subwf	___ftadd@sign,f
  7034  0066' 081A'              	movf	___ftadd@sign,w
  7035  0067' 3907               	andlw	7
  7036  0068' 1903               	btfsc	3,2
  7037  0069' 2800'              	goto	l1896
  7038  006A' 2800'              	goto	l1888
  7039  006B'                    l1894:	
  7040  006B' 3001               	movlw	1
  7041  006C'                    u1805:	
  7042  006C' 3692'              	lsrf	___ftadd@f1+2,f
  7043  006D' 0C91'              	rrf	___ftadd@f1+1,f
  7044  006E' 0C90'              	rrf	___ftadd@f1,f
  7045  006F' 0B89               	decfsz	9,f
  7046  0070' 2800'              	goto	u1805
  7047  0071' 3001               	movlw	1
  7048  0072' 0096'              	movwf	??___ftadd
  7049  0073' 0816'              	movf	??___ftadd,w
  7050  0074' 079C'              	addwf	___ftadd@exp1,f
  7051  0075'                    l1896:	
  7052  0075' 081C'              	movf	___ftadd@exp1,w
  7053  0076' 061B'              	xorwf	___ftadd@exp2,w
  7054  0077' 1903               	btfsc	3,2
  7055  0078' 2800'              	goto	l586
  7056  0079' 2800'              	goto	l1894
  7057  007A'                    l1898:	
  7058  007A' 081C'              	movf	___ftadd@exp1,w
  7059  007B' 021B'              	subwf	___ftadd@exp2,w
  7060  007C' 1803               	skipnc
  7061  007D' 2800'              	goto	l586
  7062  007E'                    l1900:	
  7063  007E' 3001               	movlw	1
  7064  007F'                    u1835:	
  7065  007F' 3590'              	lslf	___ftadd@f1,f
  7066  0080' 0D91'              	rlf	___ftadd@f1+1,f
  7067  0081' 0D92'              	rlf	___ftadd@f1+2,f
  7068  0082' 0B89               	decfsz	9,f
  7069  0083' 2800'              	goto	u1835
  7070  0084' 3001               	movlw	1
  7071  0085' 029C'              	subwf	___ftadd@exp1,f
  7072  0086' 081B'              	movf	___ftadd@exp2,w
  7073  0087' 061C'              	xorwf	___ftadd@exp1,w
  7074  0088' 1903               	skipnz
  7075  0089' 2800'              	goto	l1908
  7076  008A' 3001               	movlw	1
  7077  008B' 029A'              	subwf	___ftadd@sign,f
  7078  008C' 081A'              	movf	___ftadd@sign,w
  7079  008D' 3907               	andlw	7
  7080  008E' 1903               	btfsc	3,2
  7081  008F' 2800'              	goto	l1908
  7082  0090' 2800'              	goto	l1900
  7083  0091'                    l1906:	
  7084  0091' 3001               	movlw	1
  7085  0092'                    u1865:	
  7086  0092' 3695'              	lsrf	___ftadd@f2+2,f
  7087  0093' 0C94'              	rrf	___ftadd@f2+1,f
  7088  0094' 0C93'              	rrf	___ftadd@f2,f
  7089  0095' 0B89               	decfsz	9,f
  7090  0096' 2800'              	goto	u1865
  7091  0097' 3001               	movlw	1
  7092  0098' 0096'              	movwf	??___ftadd
  7093  0099' 0816'              	movf	??___ftadd,w
  7094  009A' 079B'              	addwf	___ftadd@exp2,f
  7095  009B'                    l1908:	
  7096  009B' 081C'              	movf	___ftadd@exp1,w
  7097  009C' 061B'              	xorwf	___ftadd@exp2,w
  7098  009D' 1D03               	skipz
  7099  009E' 2800'              	goto	l1906
  7100  009F'                    l586:	
  7101  009F' 1F9A'              	btfss	___ftadd@sign,7
  7102  00A0' 2800'              	goto	l1912
  7103  00A1' 30FF               	movlw	255
  7104  00A2' 0690'              	xorwf	___ftadd@f1,f
  7105  00A3' 30FF               	movlw	255
  7106  00A4' 0691'              	xorwf	___ftadd@f1+1,f
  7107  00A5' 30FF               	movlw	255
  7108  00A6' 0692'              	xorwf	___ftadd@f1+2,f
  7109  00A7' 3001               	movlw	1
  7110  00A8' 0790'              	addwf	___ftadd@f1,f
  7111  00A9' 3000               	movlw	0
  7112  00AA' 1803               	skipnc
  7113  00AB' 3001               	movlw	1
  7114  00AC' 0791'              	addwf	___ftadd@f1+1,f
  7115  00AD' 3000               	movlw	0
  7116  00AE' 1803               	skipnc
  7117  00AF' 3001               	movlw	1
  7118  00B0' 0792'              	addwf	___ftadd@f1+2,f
  7119  00B1'                    l1912:	
  7120  00B1' 1F1A'              	btfss	___ftadd@sign,6
  7121  00B2' 2800'              	goto	l1916
  7122  00B3' 30FF               	movlw	255
  7123  00B4' 0693'              	xorwf	___ftadd@f2,f
  7124  00B5' 30FF               	movlw	255
  7125  00B6' 0694'              	xorwf	___ftadd@f2+1,f
  7126  00B7' 30FF               	movlw	255
  7127  00B8' 0695'              	xorwf	___ftadd@f2+2,f
  7128  00B9' 3001               	movlw	1
  7129  00BA' 0793'              	addwf	___ftadd@f2,f
  7130  00BB' 3000               	movlw	0
  7131  00BC' 1803               	skipnc
  7132  00BD' 3001               	movlw	1
  7133  00BE' 0794'              	addwf	___ftadd@f2+1,f
  7134  00BF' 3000               	movlw	0
  7135  00C0' 1803               	skipnc
  7136  00C1' 3001               	movlw	1
  7137  00C2' 0795'              	addwf	___ftadd@f2+2,f
  7138  00C3'                    l1916:	
  7139  00C3' 019A'              	clrf	___ftadd@sign
  7140  00C4' 0810'              	movf	___ftadd@f1,w
  7141  00C5' 0793'              	addwf	___ftadd@f2,f
  7142  00C6' 0811'              	movf	___ftadd@f1+1,w
  7143  00C7' 3D94'              	addwfc	___ftadd@f2+1,f
  7144  00C8' 0812'              	movf	___ftadd@f1+2,w
  7145  00C9' 3D95'              	addwfc	___ftadd@f2+2,f
  7146  00CA' 1F95'              	btfss	___ftadd@f2+2,7
  7147  00CB' 2800'              	goto	l1926
  7148  00CC' 30FF               	movlw	255
  7149  00CD' 0693'              	xorwf	___ftadd@f2,f
  7150  00CE' 30FF               	movlw	255
  7151  00CF' 0694'              	xorwf	___ftadd@f2+1,f
  7152  00D0' 30FF               	movlw	255
  7153  00D1' 0695'              	xorwf	___ftadd@f2+2,f
  7154  00D2' 3001               	movlw	1
  7155  00D3' 0793'              	addwf	___ftadd@f2,f
  7156  00D4' 3000               	movlw	0
  7157  00D5' 1803               	skipnc
  7158  00D6' 3001               	movlw	1
  7159  00D7' 0794'              	addwf	___ftadd@f2+1,f
  7160  00D8' 3000               	movlw	0
  7161  00D9' 1803               	skipnc
  7162  00DA' 3001               	movlw	1
  7163  00DB' 0795'              	addwf	___ftadd@f2+2,f
  7164  00DC' 019A'              	clrf	___ftadd@sign
  7165  00DD' 0A9A'              	incf	___ftadd@sign,f
  7166  00DE'                    l1926:	
  7167  00DE' 0813'              	movf	___ftadd@f2,w
  7168  00DF' 0080'              	movwf	___ftpack@arg
  7169  00E0' 0814'              	movf	___ftadd@f2+1,w
  7170  00E1' 0081'              	movwf	___ftpack@arg+1
  7171  00E2' 0815'              	movf	___ftadd@f2+2,w
  7172  00E3' 0082'              	movwf	___ftpack@arg+2
  7173  00E4' 081C'              	movf	___ftadd@exp1,w
  7174  00E5' 0096'              	movwf	??___ftadd
  7175  00E6' 0816'              	movf	??___ftadd,w
  7176  00E7' 0083'              	movwf	___ftpack@exp
  7177  00E8' 081A'              	movf	___ftadd@sign,w
  7178  00E9' 0097'              	movwf	??___ftadd+1
  7179  00EA' 0817'              	movf	??___ftadd+1,w
  7180  00EB' 0084'              	movwf	___ftpack@sign
  7181  00EC' 3180' 2000'        	fcall	___ftpack
  7182  00EE' 0800'              	movf	?___ftpack,w
  7183  00EF' 0020               	movlb	0	; select bank0
  7184  00F0' 0090'              	movwf	?___ftadd
  7185  00F1' 0801'              	movf	?___ftpack+1,w
  7186  00F2' 0091'              	movwf	?___ftadd+1
  7187  00F3' 0802'              	movf	?___ftpack+2,w
  7188  00F4' 0092'              	movwf	?___ftadd+2
  7189  00F5' 0008               	return
  7190  00F6'                    __end_of___ftadd:	
  7191                           
  7192                           	psect	text14
  7193  0000'                    __ptext14:	
  7194 ;; *************** function ___ftneg *****************
  7195 ;; Defined at:
  7196 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  f1              3    0[COMMON] float 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  3    0[COMMON] float 
  7203 ;; Registers used:
  7204 ;;		wreg
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7210 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;Total ram usage:        3 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_main
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           
  7224                           ;psect for function ___ftneg
  7225  0000'                    ___ftneg:	
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in ___ftneg: [wreg]
  7229  0000' 0802'              	movf	___ftneg@f1+2,w
  7230  0001' 0401'              	iorwf	___ftneg@f1+1,w
  7231  0002' 0400'              	iorwf	___ftneg@f1,w
  7232  0003' 1903               	skipnz
  7233  0004' 0008               	return
  7234  0005' 3080               	movlw	128
  7235  0006' 0682'              	xorwf	___ftneg@f1+2,f
  7236  0007' 0008               	return
  7237  0008'                    __end_of___ftneg:	
  7238                           
  7239                           	psect	text15
  7240  0000'                    __ptext15:	
  7241 ;; *************** function ___ftdiv *****************
  7242 ;; Defined at:
  7243 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  f2              3    0[BANK0 ] float 
  7246 ;;  f1              3    3[BANK0 ] float 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  f3              3   11[BANK0 ] float 
  7249 ;;  sign            1   15[BANK0 ] unsigned char 
  7250 ;;  exp             1   14[BANK0 ] unsigned char 
  7251 ;;  cntr            1   10[BANK0 ] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  3    0[BANK0 ] float 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0, pclath, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7261 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;Total ram usage:       16 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; Hardware stack levels required when called:    1
  7268 ;; This function calls:
  7269 ;;		___ftpack
  7270 ;; This function is called by:
  7271 ;;		_main
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           
  7276                           ;psect for function ___ftdiv
  7277  0000'                    ___ftdiv:	
  7278                           
  7279                           ;incstack = 0
  7280                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7281  0000' 0020               	movlb	0	; select bank0
  7282  0001' 0803'              	movf	___ftdiv@f1,w
  7283  0002' 0086'              	movwf	??___ftdiv
  7284  0003' 0804'              	movf	___ftdiv@f1+1,w
  7285  0004' 0087'              	movwf	??___ftdiv+1
  7286  0005' 0805'              	movf	___ftdiv@f1+2,w
  7287  0006' 0088'              	movwf	??___ftdiv+2
  7288  0007' 1003               	clrc
  7289  0008' 0D07'              	rlf	??___ftdiv+1,w
  7290  0009' 0D08'              	rlf	??___ftdiv+2,w
  7291  000A' 0089'              	movwf	??___ftdiv+3
  7292  000B' 0809'              	movf	??___ftdiv+3,w
  7293  000C' 008E'              	movwf	___ftdiv@exp
  7294  000D' 080E'              	movf	___ftdiv@exp,w
  7295  000E' 1D03               	btfss	3,2
  7296  000F' 2800'              	goto	l2466
  7297  0010' 3000               	movlw	0
  7298  0011' 0080'              	movwf	?___ftdiv
  7299  0012' 3000               	movlw	0
  7300  0013' 0081'              	movwf	?___ftdiv+1
  7301  0014' 3000               	movlw	0
  7302  0015' 0082'              	movwf	?___ftdiv+2
  7303  0016' 0008               	return
  7304  0017'                    l2466:	
  7305  0017' 0800'              	movf	___ftdiv@f2,w
  7306  0018' 0086'              	movwf	??___ftdiv
  7307  0019' 0801'              	movf	___ftdiv@f2+1,w
  7308  001A' 0087'              	movwf	??___ftdiv+1
  7309  001B' 0802'              	movf	___ftdiv@f2+2,w
  7310  001C' 0088'              	movwf	??___ftdiv+2
  7311  001D' 1003               	clrc
  7312  001E' 0D07'              	rlf	??___ftdiv+1,w
  7313  001F' 0D08'              	rlf	??___ftdiv+2,w
  7314  0020' 0089'              	movwf	??___ftdiv+3
  7315  0021' 0809'              	movf	??___ftdiv+3,w
  7316  0022' 008F'              	movwf	___ftdiv@sign
  7317  0023' 080F'              	movf	___ftdiv@sign,w
  7318  0024' 1D03               	btfss	3,2
  7319  0025' 2800'              	goto	l2472
  7320  0026' 3000               	movlw	0
  7321  0027' 0080'              	movwf	?___ftdiv
  7322  0028' 3000               	movlw	0
  7323  0029' 0081'              	movwf	?___ftdiv+1
  7324  002A' 3000               	movlw	0
  7325  002B' 0082'              	movwf	?___ftdiv+2
  7326  002C' 0008               	return
  7327  002D'                    l2472:	
  7328  002D' 3000               	movlw	0
  7329  002E' 008B'              	movwf	___ftdiv@f3
  7330  002F' 3000               	movlw	0
  7331  0030' 008C'              	movwf	___ftdiv@f3+1
  7332  0031' 3000               	movlw	0
  7333  0032' 008D'              	movwf	___ftdiv@f3+2
  7334  0033' 3089               	movlw	137
  7335  0034' 070F'              	addwf	___ftdiv@sign,w
  7336  0035' 0086'              	movwf	??___ftdiv
  7337  0036' 0806'              	movf	??___ftdiv,w
  7338  0037' 028E'              	subwf	___ftdiv@exp,f
  7339  0038' 0803'              	movf	___ftdiv@f1,w
  7340  0039' 0086'              	movwf	??___ftdiv
  7341  003A' 0804'              	movf	___ftdiv@f1+1,w
  7342  003B' 0087'              	movwf	??___ftdiv+1
  7343  003C' 0805'              	movf	___ftdiv@f1+2,w
  7344  003D' 0088'              	movwf	??___ftdiv+2
  7345  003E' 3010               	movlw	16
  7346  003F'                    u2625:	
  7347  003F' 3688'              	lsrf	??___ftdiv+2,f
  7348  0040' 0C87'              	rrf	??___ftdiv+1,f
  7349  0041' 0C86'              	rrf	??___ftdiv,f
  7350  0042' 0B89               	decfsz	9,f
  7351  0043' 2800'              	goto	u2625
  7352  0044' 0806'              	movf	??___ftdiv,w
  7353  0045' 0089'              	movwf	??___ftdiv+3
  7354  0046' 0809'              	movf	??___ftdiv+3,w
  7355  0047' 008F'              	movwf	___ftdiv@sign
  7356  0048' 0800'              	movf	___ftdiv@f2,w
  7357  0049' 0086'              	movwf	??___ftdiv
  7358  004A' 0801'              	movf	___ftdiv@f2+1,w
  7359  004B' 0087'              	movwf	??___ftdiv+1
  7360  004C' 0802'              	movf	___ftdiv@f2+2,w
  7361  004D' 0088'              	movwf	??___ftdiv+2
  7362  004E' 3010               	movlw	16
  7363  004F'                    u2635:	
  7364  004F' 3688'              	lsrf	??___ftdiv+2,f
  7365  0050' 0C87'              	rrf	??___ftdiv+1,f
  7366  0051' 0C86'              	rrf	??___ftdiv,f
  7367  0052' 0B89               	decfsz	9,f
  7368  0053' 2800'              	goto	u2635
  7369  0054' 0806'              	movf	??___ftdiv,w
  7370  0055' 0089'              	movwf	??___ftdiv+3
  7371  0056' 0809'              	movf	??___ftdiv+3,w
  7372  0057' 068F'              	xorwf	___ftdiv@sign,f
  7373  0058' 3080               	movlw	128
  7374  0059' 0086'              	movwf	??___ftdiv
  7375  005A' 0806'              	movf	??___ftdiv,w
  7376  005B' 058F'              	andwf	___ftdiv@sign,f
  7377  005C' 1784'              	bsf	___ftdiv@f1+1,7
  7378  005D' 30FF               	movlw	255
  7379  005E' 0583'              	andwf	___ftdiv@f1,f
  7380  005F' 30FF               	movlw	255
  7381  0060' 0584'              	andwf	___ftdiv@f1+1,f
  7382  0061' 3000               	movlw	0
  7383  0062' 0585'              	andwf	___ftdiv@f1+2,f
  7384  0063' 1781'              	bsf	___ftdiv@f2+1,7
  7385  0064' 30FF               	movlw	255
  7386  0065' 0580'              	andwf	___ftdiv@f2,f
  7387  0066' 30FF               	movlw	255
  7388  0067' 0581'              	andwf	___ftdiv@f2+1,f
  7389  0068' 3000               	movlw	0
  7390  0069' 0582'              	andwf	___ftdiv@f2+2,f
  7391  006A' 3018               	movlw	24
  7392  006B' 0086'              	movwf	??___ftdiv
  7393  006C' 0806'              	movf	??___ftdiv,w
  7394  006D' 008A'              	movwf	___ftdiv@cntr
  7395  006E'                    l2486:	
  7396  006E' 3001               	movlw	1
  7397  006F'                    u2645:	
  7398  006F' 358B'              	lslf	___ftdiv@f3,f
  7399  0070' 0D8C'              	rlf	___ftdiv@f3+1,f
  7400  0071' 0D8D'              	rlf	___ftdiv@f3+2,f
  7401  0072' 0B89               	decfsz	9,f
  7402  0073' 2800'              	goto	u2645
  7403  0074' 0802'              	movf	___ftdiv@f2+2,w
  7404  0075' 0205'              	subwf	___ftdiv@f1+2,w
  7405  0076' 1D03               	skipz
  7406  0077' 2800'              	goto	u2655
  7407  0078' 0801'              	movf	___ftdiv@f2+1,w
  7408  0079' 0204'              	subwf	___ftdiv@f1+1,w
  7409  007A' 1D03               	skipz
  7410  007B' 2800'              	goto	u2655
  7411  007C' 0800'              	movf	___ftdiv@f2,w
  7412  007D' 0203'              	subwf	___ftdiv@f1,w
  7413  007E'                    u2655:	
  7414  007E' 1C03               	skipc
  7415  007F' 2800'              	goto	l2494
  7416  0080' 0800'              	movf	___ftdiv@f2,w
  7417  0081' 0283'              	subwf	___ftdiv@f1,f
  7418  0082' 0801'              	movf	___ftdiv@f2+1,w
  7419  0083' 3B84'              	subwfb	___ftdiv@f1+1,f
  7420  0084' 0802'              	movf	___ftdiv@f2+2,w
  7421  0085' 3B85'              	subwfb	___ftdiv@f1+2,f
  7422  0086' 140B'              	bsf	___ftdiv@f3,0
  7423  0087'                    l2494:	
  7424  0087' 3001               	movlw	1
  7425  0088'                    u2665:	
  7426  0088' 3583'              	lslf	___ftdiv@f1,f
  7427  0089' 0D84'              	rlf	___ftdiv@f1+1,f
  7428  008A' 0D85'              	rlf	___ftdiv@f1+2,f
  7429  008B' 0B89               	decfsz	9,f
  7430  008C' 2800'              	goto	u2665
  7431  008D' 3001               	movlw	1
  7432  008E' 028A'              	subwf	___ftdiv@cntr,f
  7433  008F' 1D03               	btfss	3,2
  7434  0090' 2800'              	goto	l2486
  7435  0091' 080B'              	movf	___ftdiv@f3,w
  7436  0092' 0080'              	movwf	___ftpack@arg
  7437  0093' 080C'              	movf	___ftdiv@f3+1,w
  7438  0094' 0081'              	movwf	___ftpack@arg+1
  7439  0095' 080D'              	movf	___ftdiv@f3+2,w
  7440  0096' 0082'              	movwf	___ftpack@arg+2
  7441  0097' 080E'              	movf	___ftdiv@exp,w
  7442  0098' 0086'              	movwf	??___ftdiv
  7443  0099' 0806'              	movf	??___ftdiv,w
  7444  009A' 0083'              	movwf	___ftpack@exp
  7445  009B' 080F'              	movf	___ftdiv@sign,w
  7446  009C' 0087'              	movwf	??___ftdiv+1
  7447  009D' 0807'              	movf	??___ftdiv+1,w
  7448  009E' 0084'              	movwf	___ftpack@sign
  7449  009F' 3180' 2000'        	fcall	___ftpack
  7450  00A1' 0800'              	movf	?___ftpack,w
  7451  00A2' 0020               	movlb	0	; select bank0
  7452  00A3' 0080'              	movwf	?___ftdiv
  7453  00A4' 0801'              	movf	?___ftpack+1,w
  7454  00A5' 0081'              	movwf	?___ftdiv+1
  7455  00A6' 0802'              	movf	?___ftpack+2,w
  7456  00A7' 0082'              	movwf	?___ftdiv+2
  7457  00A8' 0008               	return
  7458  00A9'                    __end_of___ftdiv:	
  7459                           
  7460                           	psect	text16
  7461  0000'                    __ptext16:	
  7462 ;; *************** function ___ftpack *****************
  7463 ;; Defined at:
  7464 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  arg             3    0[COMMON] unsigned um
  7467 ;;  exp             1    3[COMMON] unsigned char 
  7468 ;;  sign            1    4[COMMON] unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  3    0[COMMON] float 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7480 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;Total ram usage:        8 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		___awtoft
  7490 ;;		___ftadd
  7491 ;;		___ftdiv
  7492 ;;		___ftmul
  7493 ;;		___lbtoft
  7494 ;;		___lwtoft
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function ___ftpack
  7500  0000'                    ___ftpack:	
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7504  0000' 0803'              	movf	___ftpack@exp,w
  7505  0001' 1903               	btfsc	3,2
  7506  0002' 2800'              	goto	l1788
  7507  0003' 0802'              	movf	___ftpack@arg+2,w
  7508  0004' 0401'              	iorwf	___ftpack@arg+1,w
  7509  0005' 0400'              	iorwf	___ftpack@arg,w
  7510  0006' 1D03               	skipz
  7511  0007' 2800'              	goto	l1794
  7512  0008'                    l1788:	
  7513  0008' 3000               	movlw	0
  7514  0009' 0080'              	movwf	?___ftpack
  7515  000A' 3000               	movlw	0
  7516  000B' 0081'              	movwf	?___ftpack+1
  7517  000C' 3000               	movlw	0
  7518  000D' 0082'              	movwf	?___ftpack+2
  7519  000E' 0008               	return
  7520  000F'                    l1792:	
  7521  000F' 3001               	movlw	1
  7522  0010' 0085'              	movwf	??___ftpack
  7523  0011' 0805'              	movf	??___ftpack,w
  7524  0012' 0783'              	addwf	___ftpack@exp,f
  7525  0013' 3001               	movlw	1
  7526  0014'                    u1535:	
  7527  0014' 3682'              	lsrf	___ftpack@arg+2,f
  7528  0015' 0C81'              	rrf	___ftpack@arg+1,f
  7529  0016' 0C80'              	rrf	___ftpack@arg,f
  7530  0017' 0B89               	decfsz	9,f
  7531  0018' 2800'              	goto	u1535
  7532  0019'                    l1794:	
  7533  0019' 30FE               	movlw	254
  7534  001A' 0502'              	andwf	___ftpack@arg+2,w
  7535  001B' 1903               	btfsc	3,2
  7536  001C' 2800'              	goto	l555
  7537  001D' 2800'              	goto	l1792
  7538  001E'                    l1796:	
  7539  001E' 3001               	movlw	1
  7540  001F' 0085'              	movwf	??___ftpack
  7541  0020' 0805'              	movf	??___ftpack,w
  7542  0021' 0783'              	addwf	___ftpack@exp,f
  7543  0022' 3001               	movlw	1
  7544  0023' 0780'              	addwf	___ftpack@arg,f
  7545  0024' 3000               	movlw	0
  7546  0025' 1803               	skipnc
  7547  0026' 3001               	movlw	1
  7548  0027' 0781'              	addwf	___ftpack@arg+1,f
  7549  0028' 3000               	movlw	0
  7550  0029' 1803               	skipnc
  7551  002A' 3001               	movlw	1
  7552  002B' 0782'              	addwf	___ftpack@arg+2,f
  7553  002C' 3001               	movlw	1
  7554  002D'                    u1555:	
  7555  002D' 3682'              	lsrf	___ftpack@arg+2,f
  7556  002E' 0C81'              	rrf	___ftpack@arg+1,f
  7557  002F' 0C80'              	rrf	___ftpack@arg,f
  7558  0030' 0B89               	decfsz	9,f
  7559  0031' 2800'              	goto	u1555
  7560  0032'                    l555:	
  7561  0032' 30FF               	movlw	255
  7562  0033' 0502'              	andwf	___ftpack@arg+2,w
  7563  0034' 1903               	btfsc	3,2
  7564  0035' 2800'              	goto	l1804
  7565  0036' 2800'              	goto	l1796
  7566  0037'                    l1802:	
  7567  0037' 3001               	movlw	1
  7568  0038' 0283'              	subwf	___ftpack@exp,f
  7569  0039' 3001               	movlw	1
  7570  003A'                    u1575:	
  7571  003A' 3580'              	lslf	___ftpack@arg,f
  7572  003B' 0D81'              	rlf	___ftpack@arg+1,f
  7573  003C' 0D82'              	rlf	___ftpack@arg+2,f
  7574  003D' 0B89               	decfsz	9,f
  7575  003E' 2800'              	goto	u1575
  7576  003F'                    l1804:	
  7577  003F' 1B81'              	btfsc	___ftpack@arg+1,7
  7578  0040' 2800'              	goto	l562
  7579  0041' 3002               	movlw	2
  7580  0042' 0203'              	subwf	___ftpack@exp,w
  7581  0043' 1803               	skipnc
  7582  0044' 2800'              	goto	l1802
  7583  0045'                    l562:	
  7584  0045' 1803'              	btfsc	___ftpack@exp,0
  7585  0046' 2800'              	goto	l563
  7586  0047' 30FF               	movlw	255
  7587  0048' 0580'              	andwf	___ftpack@arg,f
  7588  0049' 307F               	movlw	127
  7589  004A' 0581'              	andwf	___ftpack@arg+1,f
  7590  004B' 30FF               	movlw	255
  7591  004C' 0582'              	andwf	___ftpack@arg+2,f
  7592  004D'                    l563:	
  7593  004D' 1003               	clrc
  7594  004E' 0C83'              	rrf	___ftpack@exp,f
  7595  004F' 0803'              	movf	___ftpack@exp,w
  7596  0050' 0085'              	movwf	??___ftpack
  7597  0051' 0186'              	clrf	??___ftpack+1
  7598  0052' 0187'              	clrf	??___ftpack+2
  7599  0053' 3010               	movlw	16
  7600  0054'                    u1615:	
  7601  0054' 3585'              	lslf	??___ftpack,f
  7602  0055' 0D86'              	rlf	??___ftpack+1,f
  7603  0056' 0D87'              	rlf	??___ftpack+2,f
  7604  0057' 0B89               	decfsz	9,f
  7605  0058' 2800'              	goto	u1615
  7606  0059' 0805'              	movf	??___ftpack,w
  7607  005A' 0480'              	iorwf	___ftpack@arg,f
  7608  005B' 0806'              	movf	??___ftpack+1,w
  7609  005C' 0481'              	iorwf	___ftpack@arg+1,f
  7610  005D' 0807'              	movf	??___ftpack+2,w
  7611  005E' 0482'              	iorwf	___ftpack@arg+2,f
  7612  005F' 0804'              	movf	___ftpack@sign,w
  7613  0060' 1903               	btfsc	3,2
  7614  0061' 0008               	return
  7615  0062' 1782'              	bsf	___ftpack@arg+2,7
  7616  0063' 0008               	return
  7617  0064'                    __end_of___ftpack:	
  7618                           
  7619                           	psect	text17
  7620  0000'                    __ptext17:	
  7621 ;; *************** function ___aldiv *****************
  7622 ;; Defined at:
  7623 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  divisor         4    0[COMMON] long 
  7626 ;;  dividend        4    4[COMMON] long 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  quotient        4    2[BANK0 ] long 
  7629 ;;  sign            1    1[BANK0 ] unsigned char 
  7630 ;;  counter         1    0[BANK0 ] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  4    0[COMMON] long 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7640 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;Total ram usage:       15 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function ___aldiv
  7655  0000'                    ___aldiv:	
  7656                           
  7657                           ;incstack = 0
  7658                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7659  0000' 0020               	movlb	0	; select bank0
  7660  0001' 0181'              	clrf	___aldiv@sign
  7661  0002' 1F83'              	btfss	___aldiv@divisor+3,7
  7662  0003' 2800'              	goto	l449
  7663  0004' 0980'              	comf	___aldiv@divisor,f
  7664  0005' 0981'              	comf	___aldiv@divisor+1,f
  7665  0006' 0982'              	comf	___aldiv@divisor+2,f
  7666  0007' 0983'              	comf	___aldiv@divisor+3,f
  7667  0008' 0A80'              	incf	___aldiv@divisor,f
  7668  0009' 1903               	skipnz
  7669  000A' 0A81'              	incf	___aldiv@divisor+1,f
  7670  000B' 1903               	skipnz
  7671  000C' 0A82'              	incf	___aldiv@divisor+2,f
  7672  000D' 1903               	skipnz
  7673  000E' 0A83'              	incf	___aldiv@divisor+3,f
  7674  000F' 0181'              	clrf	___aldiv@sign
  7675  0010' 0A81'              	incf	___aldiv@sign,f
  7676  0011'                    l449:	
  7677  0011' 1F87'              	btfss	___aldiv@dividend+3,7
  7678  0012' 2800'              	goto	l2430
  7679  0013' 0984'              	comf	___aldiv@dividend,f
  7680  0014' 0985'              	comf	___aldiv@dividend+1,f
  7681  0015' 0986'              	comf	___aldiv@dividend+2,f
  7682  0016' 0987'              	comf	___aldiv@dividend+3,f
  7683  0017' 0A84'              	incf	___aldiv@dividend,f
  7684  0018' 1903               	skipnz
  7685  0019' 0A85'              	incf	___aldiv@dividend+1,f
  7686  001A' 1903               	skipnz
  7687  001B' 0A86'              	incf	___aldiv@dividend+2,f
  7688  001C' 1903               	skipnz
  7689  001D' 0A87'              	incf	___aldiv@dividend+3,f
  7690  001E' 3001               	movlw	1
  7691  001F' 0088'              	movwf	??___aldiv
  7692  0020' 0808'              	movf	??___aldiv,w
  7693  0021' 0681'              	xorwf	___aldiv@sign,f
  7694  0022'                    l2430:	
  7695  0022' 3000               	movlw	0
  7696  0023' 0085'              	movwf	___aldiv@quotient+3
  7697  0024' 3000               	movlw	0
  7698  0025' 0084'              	movwf	___aldiv@quotient+2
  7699  0026' 3000               	movlw	0
  7700  0027' 0083'              	movwf	___aldiv@quotient+1
  7701  0028' 3000               	movlw	0
  7702  0029' 0082'              	movwf	___aldiv@quotient
  7703  002A' 0803'              	movf	___aldiv@divisor+3,w
  7704  002B' 0402'              	iorwf	___aldiv@divisor+2,w
  7705  002C' 0401'              	iorwf	___aldiv@divisor+1,w
  7706  002D' 0400'              	iorwf	___aldiv@divisor,w
  7707  002E' 1903               	skipnz
  7708  002F' 2800'              	goto	l2452
  7709  0030' 0180'              	clrf	___aldiv@counter
  7710  0031' 0A80'              	incf	___aldiv@counter,f
  7711  0032'                    l2438:	
  7712  0032' 1B83'              	btfsc	___aldiv@divisor+3,7
  7713  0033' 2800'              	goto	l2440
  7714  0034' 3001               	movlw	1
  7715  0035'                    u2535:	
  7716  0035' 3580'              	lslf	___aldiv@divisor,f
  7717  0036' 0D81'              	rlf	___aldiv@divisor+1,f
  7718  0037' 0D82'              	rlf	___aldiv@divisor+2,f
  7719  0038' 0D83'              	rlf	___aldiv@divisor+3,f
  7720  0039' 0B89               	decfsz	9,f
  7721  003A' 2800'              	goto	u2535
  7722  003B' 3001               	movlw	1
  7723  003C' 0088'              	movwf	??___aldiv
  7724  003D' 0808'              	movf	??___aldiv,w
  7725  003E' 0780'              	addwf	___aldiv@counter,f
  7726  003F' 2800'              	goto	l2438
  7727  0040'                    l2440:	
  7728  0040' 3001               	movlw	1
  7729  0041'                    u2555:	
  7730  0041' 3582'              	lslf	___aldiv@quotient,f
  7731  0042' 0D83'              	rlf	___aldiv@quotient+1,f
  7732  0043' 0D84'              	rlf	___aldiv@quotient+2,f
  7733  0044' 0D85'              	rlf	___aldiv@quotient+3,f
  7734  0045' 0B89               	decfsz	9,f
  7735  0046' 2800'              	goto	u2555
  7736  0047' 0803'              	movf	___aldiv@divisor+3,w
  7737  0048' 0207'              	subwf	___aldiv@dividend+3,w
  7738  0049' 1D03               	skipz
  7739  004A' 2800'              	goto	u2565
  7740  004B' 0802'              	movf	___aldiv@divisor+2,w
  7741  004C' 0206'              	subwf	___aldiv@dividend+2,w
  7742  004D' 1D03               	skipz
  7743  004E' 2800'              	goto	u2565
  7744  004F' 0801'              	movf	___aldiv@divisor+1,w
  7745  0050' 0205'              	subwf	___aldiv@dividend+1,w
  7746  0051' 1D03               	skipz
  7747  0052' 2800'              	goto	u2565
  7748  0053' 0800'              	movf	___aldiv@divisor,w
  7749  0054' 0204'              	subwf	___aldiv@dividend,w
  7750  0055'                    u2565:	
  7751  0055' 1C03               	skipc
  7752  0056' 2800'              	goto	l2448
  7753  0057' 0800'              	movf	___aldiv@divisor,w
  7754  0058' 0284'              	subwf	___aldiv@dividend,f
  7755  0059' 0801'              	movf	___aldiv@divisor+1,w
  7756  005A' 3B85'              	subwfb	___aldiv@dividend+1,f
  7757  005B' 0802'              	movf	___aldiv@divisor+2,w
  7758  005C' 3B86'              	subwfb	___aldiv@dividend+2,f
  7759  005D' 0803'              	movf	___aldiv@divisor+3,w
  7760  005E' 3B87'              	subwfb	___aldiv@dividend+3,f
  7761  005F' 1402'              	bsf	___aldiv@quotient,0
  7762  0060'                    l2448:	
  7763  0060' 3001               	movlw	1
  7764  0061'                    u2575:	
  7765  0061' 3683'              	lsrf	___aldiv@divisor+3,f
  7766  0062' 0C82'              	rrf	___aldiv@divisor+2,f
  7767  0063' 0C81'              	rrf	___aldiv@divisor+1,f
  7768  0064' 0C80'              	rrf	___aldiv@divisor,f
  7769  0065' 0B89               	decfsz	9,f
  7770  0066' 2800'              	goto	u2575
  7771  0067' 3001               	movlw	1
  7772  0068' 0280'              	subwf	___aldiv@counter,f
  7773  0069' 1D03               	btfss	3,2
  7774  006A' 2800'              	goto	l2440
  7775  006B'                    l2452:	
  7776  006B' 0801'              	movf	___aldiv@sign,w
  7777  006C' 1903               	btfsc	3,2
  7778  006D' 2800'              	goto	l2456
  7779  006E' 0982'              	comf	___aldiv@quotient,f
  7780  006F' 0983'              	comf	___aldiv@quotient+1,f
  7781  0070' 0984'              	comf	___aldiv@quotient+2,f
  7782  0071' 0985'              	comf	___aldiv@quotient+3,f
  7783  0072' 0A82'              	incf	___aldiv@quotient,f
  7784  0073' 1903               	skipnz
  7785  0074' 0A83'              	incf	___aldiv@quotient+1,f
  7786  0075' 1903               	skipnz
  7787  0076' 0A84'              	incf	___aldiv@quotient+2,f
  7788  0077' 1903               	skipnz
  7789  0078' 0A85'              	incf	___aldiv@quotient+3,f
  7790  0079'                    l2456:	
  7791  0079' 0805'              	movf	___aldiv@quotient+3,w
  7792  007A' 0083'              	movwf	?___aldiv+3
  7793  007B' 0804'              	movf	___aldiv@quotient+2,w
  7794  007C' 0082'              	movwf	?___aldiv+2
  7795  007D' 0803'              	movf	___aldiv@quotient+1,w
  7796  007E' 0081'              	movwf	?___aldiv+1
  7797  007F' 0802'              	movf	___aldiv@quotient,w
  7798  0080' 0080'              	movwf	?___aldiv
  7799  0081' 0008               	return
  7800  0082'                    __end_of___aldiv:	
  7801                           
  7802                           	psect	text18
  7803  0000'                    __ptext18:	
  7804 ;; *************** function _SYSTEM_Initialize *****************
  7805 ;; Defined at:
  7806 ;;		line 37 in file "system.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:        2 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    3
  7827 ;; This function calls:
  7828 ;;		_ADCC_Initialize
  7829 ;;		_InitCustomChars
  7830 ;;		_Init_PID
  7831 ;;		_LCD_Clear
  7832 ;;		_LCD_Init
  7833 ;;		_OSCILLATOR_Initialize
  7834 ;;		_PIN_MANAGER_Initialize
  7835 ;;		_PWM6_Initialize
  7836 ;;		_TMR0_Initialize
  7837 ;;		_TMR2_Initialize
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _SYSTEM_Initialize
  7845  0000'                    _SYSTEM_Initialize:	
  7846                           
  7847                           ;system.c: 39: PIN_MANAGER_Initialize();
  7848                           
  7849                           ;incstack = 0
  7850                           ; Regs used in _SYSTEM_Initialize: [allreg]
  7851  0000' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  7852                           
  7853                           ;system.c: 40: OSCILLATOR_Initialize();
  7854  0003' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  7855                           
  7856                           ;system.c: 41: FVRCON = 0x00;
  7857  0006' 0032               	movlb	18	; select bank18
  7858  0007' 018C               	clrf	12	;volatile
  7859                           
  7860                           ;system.c: 42: ADCC_Initialize();
  7861  0008' 3180' 2000' 3180'  	fcall	_ADCC_Initialize
  7862                           
  7863                           ;system.c: 43: PWM6_Initialize();
  7864  000B' 3180' 2000' 3180'  	fcall	_PWM6_Initialize
  7865                           
  7866                           ;system.c: 44: TMR0_Initialize();
  7867  000E' 3180' 2000' 3180'  	fcall	_TMR0_Initialize
  7868                           
  7869                           ;system.c: 45: TMR2_Initialize();
  7870  0011' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  7871                           
  7872                           ;system.c: 46: LCD_Init(0X00);
  7873  0014' 3000               	movlw	0
  7874  0015' 3180' 2000' 3180'  	fcall	_LCD_Init
  7875                           
  7876                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  7877  0018' 3041               	movlw	65
  7878  0019' 0088'              	movwf	??_SYSTEM_Initialize+1
  7879  001A' 30EE               	movlw	238
  7880  001B' 0087'              	movwf	??_SYSTEM_Initialize
  7881  001C'                    u2937:	
  7882  001C' 0B87'              	decfsz	??_SYSTEM_Initialize,f
  7883  001D' 2800'              	goto	u2937
  7884  001E' 0B88'              	decfsz	??_SYSTEM_Initialize+1,f
  7885  001F' 2800'              	goto	u2937
  7886  0020' 0000               	nop
  7887                           
  7888                           ;system.c: 48: LCD_Clear();
  7889  0021' 3180' 2000' 3180'  	fcall	_LCD_Clear
  7890                           
  7891                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  7892  0024' 3021               	movlw	33
  7893  0025' 0088'              	movwf	??_SYSTEM_Initialize+1
  7894  0026' 3076               	movlw	118
  7895  0027' 0087'              	movwf	??_SYSTEM_Initialize
  7896  0028'                    u2947:	
  7897  0028' 0B87'              	decfsz	??_SYSTEM_Initialize,f
  7898  0029' 2800'              	goto	u2947
  7899  002A' 0B88'              	decfsz	??_SYSTEM_Initialize+1,f
  7900  002B' 2800'              	goto	u2947
  7901  002C' 0000               	nop
  7902                           
  7903                           ;system.c: 50: InitCustomChars();
  7904  002D' 3180' 2000' 3180'  	fcall	_InitCustomChars
  7905                           
  7906                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  7907  0030' 3041               	movlw	65
  7908  0031' 0088'              	movwf	??_SYSTEM_Initialize+1
  7909  0032' 30EE               	movlw	238
  7910  0033' 0087'              	movwf	??_SYSTEM_Initialize
  7911  0034'                    u2957:	
  7912  0034' 0B87'              	decfsz	??_SYSTEM_Initialize,f
  7913  0035' 2800'              	goto	u2957
  7914  0036' 0B88'              	decfsz	??_SYSTEM_Initialize+1,f
  7915  0037' 2800'              	goto	u2957
  7916  0038' 0000               	nop
  7917                           
  7918                           ;system.c: 52: Init_PID();
  7919  0039' 3180' 2000'        	fcall	_Init_PID
  7920  003B' 0008               	return
  7921  003C'                    __end_of_SYSTEM_Initialize:	
  7922                           
  7923                           	psect	text19
  7924  0000'                    __ptext19:	
  7925 ;; *************** function _TMR2_Initialize *****************
  7926 ;; Defined at:
  7927 ;;		line 15 in file "timers.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;		None
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;		None
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7945 ;;Total ram usage:        0 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_SYSTEM_Initialize
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function _TMR2_Initialize
  7956  0000'                    _TMR2_Initialize:	
  7957                           
  7958                           ;timers.c: 17: T2CON = 0x7F;
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7962  0000' 307F               	movlw	127
  7963  0001' 0025               	movlb	5	; select bank5
  7964  0002' 008E               	movwf	14	;volatile
  7965                           
  7966                           ;timers.c: 18: T2CLKCON = 0x01;
  7967  0003' 3001               	movlw	1
  7968  0004' 0090               	movwf	16	;volatile
  7969                           
  7970                           ;timers.c: 19: T2HLT = 0x00;
  7971  0005' 018F               	clrf	15	;volatile
  7972                           
  7973                           ;timers.c: 20: T2RST = 0x00;
  7974  0006' 0191               	clrf	17	;volatile
  7975                           
  7976                           ;timers.c: 21: T2PR = 0xFF;
  7977  0007' 30FF               	movlw	255
  7978  0008' 008D               	movwf	13	;volatile
  7979                           
  7980                           ;timers.c: 22: T2TMR = 0x00;
  7981  0009' 018C               	clrf	12	;volatile
  7982                           
  7983                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  7984  000A' 002E               	movlb	14	; select bank14
  7985  000B' 1090               	bcf	16,1	;volatile
  7986                           
  7987                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  7988  000C' 0025               	movlb	5	; select bank5
  7989  000D' 178E               	bsf	14,7	;volatile
  7990  000E' 0008               	return
  7991  000F'                    __end_of_TMR2_Initialize:	
  7992                           
  7993                           	psect	text20
  7994  0000'                    __ptext20:	
  7995 ;; *************** function _TMR0_Initialize *****************
  7996 ;; Defined at:
  7997 ;;		line 3 in file "timers.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;		None
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;Total ram usage:        0 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_SYSTEM_Initialize
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function _TMR0_Initialize
  8026  0000'                    _TMR0_Initialize:	
  8027                           
  8028                           ;timers.c: 5: T0CON0 = 0x10;
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in _TMR0_Initialize: [wreg]
  8032  0000' 3010               	movlw	16
  8033  0001' 0020               	movlb	0	; select bank0
  8034  0002' 009E               	movwf	30	;volatile
  8035                           
  8036                           ;timers.c: 6: T0CON1 = 0x42;
  8037  0003' 3042               	movlw	66
  8038  0004' 009F               	movwf	31	;volatile
  8039                           
  8040                           ;timers.c: 7: TMR0H = 0x24;
  8041  0005' 3024               	movlw	36
  8042  0006' 009D               	movwf	29	;volatile
  8043                           
  8044                           ;timers.c: 8: TMR0L = 0x9F;
  8045  0007' 309F               	movlw	159
  8046  0008' 009C               	movwf	28	;volatile
  8047                           
  8048                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  8049  0009' 002E               	movlb	14	; select bank14
  8050  000A' 1696               	bsf	22,5	;volatile
  8051                           
  8052                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  8053  000B' 128C               	bcf	12,5	;volatile
  8054                           
  8055                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  8056  000C' 0020               	movlb	0	; select bank0
  8057  000D' 179E               	bsf	30,7	;volatile
  8058  000E' 0008               	return
  8059  000F'                    __end_of_TMR0_Initialize:	
  8060                           
  8061                           	psect	text21
  8062  0000'                    __ptext21:	
  8063 ;; *************** function _PWM6_Initialize *****************
  8064 ;; Defined at:
  8065 ;;		line 4 in file "pwm6.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, status,2, status,0
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_SYSTEM_Initialize
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           
  8093                           ;psect for function _PWM6_Initialize
  8094  0000'                    _PWM6_Initialize:	
  8095                           
  8096                           ;pwm6.c: 6: PWM6CON = 0x80;
  8097                           
  8098                           ;incstack = 0
  8099                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8100  0000' 3080               	movlw	128
  8101  0001' 0027               	movlb	7	; select bank7
  8102  0002' 008E               	movwf	14	;volatile
  8103                           
  8104                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  8105  0003' 30FF               	movlw	255
  8106  0004' 008D               	movwf	13	;volatile
  8107                           
  8108                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  8109  0005' 30C0               	movlw	192
  8110  0006' 008C               	movwf	12	;volatile
  8111                           
  8112                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  8113  0007' 0024               	movlb	4	; select bank4
  8114  0008' 081F               	movf	31,w	;volatile
  8115  0009' 39F3               	andlw	-13
  8116  000A' 3804               	iorlw	4
  8117  000B' 009F               	movwf	31	;volatile
  8118  000C' 0008               	return
  8119  000D'                    __end_of_PWM6_Initialize:	
  8120                           
  8121                           	psect	text22
  8122  0000'                    __ptext22:	
  8123 ;; *************** function _PIN_MANAGER_Initialize *****************
  8124 ;; Defined at:
  8125 ;;		line 5 in file "pin_manager.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  state           1    0[COMMON] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;Total ram usage:        1 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_SYSTEM_Initialize
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function _PIN_MANAGER_Initialize
  8154  0000'                    _PIN_MANAGER_Initialize:	
  8155                           
  8156                           ;pin_manager.c: 7: LATA = 0x00;
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8160  0000' 0020               	movlb	0	; select bank0
  8161  0001' 0196               	clrf	22	;volatile
  8162                           
  8163                           ;pin_manager.c: 8: LATB = 0x0;
  8164  0002' 0197               	clrf	23	;volatile
  8165                           
  8166                           ;pin_manager.c: 9: LATC = 0x0;
  8167  0003' 0198               	clrf	24	;volatile
  8168                           
  8169                           ;pin_manager.c: 11: WPUA = 0x18;
  8170  0004' 3018               	movlw	24
  8171  0005' 003E               	movlb	30	; select bank30
  8172  0006' 00B9               	movwf	57	;volatile
  8173                           
  8174                           ;pin_manager.c: 12: WPUB = 0x00;
  8175  0007' 01C4               	clrf	68	;volatile
  8176                           
  8177                           ;pin_manager.c: 13: WPUC = 0x00;
  8178  0008' 01CF               	clrf	79	;volatile
  8179                           
  8180                           ;pin_manager.c: 14: WPUE = 0x8;
  8181  0009' 3008               	movlw	8
  8182  000A' 00E5               	movwf	101	;volatile
  8183                           
  8184                           ;pin_manager.c: 16: TRISA = 0x1C;
  8185  000B' 301C               	movlw	28
  8186  000C' 0020               	movlb	0	; select bank0
  8187  000D' 0091               	movwf	17	;volatile
  8188                           
  8189                           ;pin_manager.c: 17: TRISB = 0x00;
  8190  000E' 0192               	clrf	18	;volatile
  8191                           
  8192                           ;pin_manager.c: 18: TRISC = 0x10;
  8193  000F' 3010               	movlw	16
  8194  0010' 0093               	movwf	19	;volatile
  8195                           
  8196                           ;pin_manager.c: 20: ANSELA = 0x04;
  8197  0011' 3004               	movlw	4
  8198  0012' 003E               	movlb	30	; select bank30
  8199  0013' 00B8               	movwf	56	;volatile
  8200                           
  8201                           ;pin_manager.c: 21: ANSELB = 0x00;
  8202  0014' 01C3               	clrf	67	;volatile
  8203                           
  8204                           ;pin_manager.c: 22: ANSELC = 0x00;
  8205  0015' 01CE               	clrf	78	;volatile
  8206                           
  8207                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  8208  0016' 002E               	movlb	14	; select bank14
  8209  0017' 1216               	bcf	22,4	;volatile
  8210                           
  8211                           ;pin_manager.c: 25: bool state = GIE;
  8212  0018' 3000               	movlw	0
  8213  0019' 1B8B               	btfsc	11,7	;volatile
  8214  001A' 3001               	movlw	1
  8215  001B' 0080'              	movwf	PIN_MANAGER_Initialize@state
  8216                           
  8217                           ;pin_manager.c: 26: GIE = 0;
  8218  001C' 138B               	bcf	11,7	;volatile
  8219                           
  8220                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  8221  001D' 3055               	movlw	85
  8222  001E' 003D               	movlb	29	; select bank29
  8223  001F' 008F               	movwf	15	;volatile
  8224                           
  8225                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  8226  0020' 30AA               	movlw	170
  8227  0021' 008F               	movwf	15	;volatile
  8228                           
  8229                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  8230  0022' 100F               	bcf	15,0	;volatile
  8231                           
  8232                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  8233  0023' 300E               	movlw	14
  8234  0024' 003E               	movlb	30	; select bank30
  8235  0025' 0091               	movwf	17	;volatile
  8236                           
  8237                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  8238  0026' 3055               	movlw	85
  8239  0027' 003D               	movlb	29	; select bank29
  8240  0028' 008F               	movwf	15	;volatile
  8241                           
  8242                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  8243  0029' 30AA               	movlw	170
  8244  002A' 008F               	movwf	15	;volatile
  8245                           
  8246                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  8247  002B' 140F               	bsf	15,0	;volatile
  8248                           
  8249                           ;pin_manager.c: 39: GIE = state;
  8250  002C' 1C00'              	btfss	PIN_MANAGER_Initialize@state,0
  8251  002D' 2800'              	goto	u2050
  8252  002E' 178B               	bsf	11,7	;volatile
  8253  002F' 0008               	return
  8254  0030'                    u2050:	
  8255  0030' 138B               	bcf	11,7	;volatile
  8256  0031' 0008               	return
  8257  0032'                    __end_of_PIN_MANAGER_Initialize:	
  8258                           
  8259                           	psect	text23
  8260  0000'                    __ptext23:	
  8261 ;; *************** function _OSCILLATOR_Initialize *****************
  8262 ;; Defined at:
  8263 ;;		line 55 in file "system.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_SYSTEM_Initialize
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _OSCILLATOR_Initialize
  8292  0000'                    _OSCILLATOR_Initialize:	
  8293                           
  8294                           ;system.c: 57: OSCCON1 = 0x60;
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8298  0000' 3060               	movlw	96
  8299  0001' 0031               	movlb	17	; select bank17
  8300  0002' 008D               	movwf	13	;volatile
  8301                           
  8302                           ;system.c: 58: OSCCON3 = 0x00;
  8303  0003' 018F               	clrf	15	;volatile
  8304                           
  8305                           ;system.c: 59: OSCEN = 0x00;
  8306  0004' 0191               	clrf	17	;volatile
  8307                           
  8308                           ;system.c: 60: OSCFRQ = 0x00;
  8309  0005' 0193               	clrf	19	;volatile
  8310                           
  8311                           ;system.c: 61: OSCTUNE = 0x00;
  8312  0006' 0192               	clrf	18	;volatile
  8313  0007' 0008               	return
  8314  0008'                    __end_of_OSCILLATOR_Initialize:	
  8315                           
  8316                           	psect	text24
  8317  0000'                    __ptext24:	
  8318 ;; *************** function _LCD_Init *****************
  8319 ;; Defined at:
  8320 ;;		line 154 in file "lcd.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  style           1    wreg     unsigned char 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  style           1    5[COMMON] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, pclath, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;Total ram usage:        3 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    2
  8341 ;; This function calls:
  8342 ;;		_LCD_Cmd
  8343 ;;		_LCD_Port
  8344 ;; This function is called by:
  8345 ;;		_SYSTEM_Initialize
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function _LCD_Init
  8351  0000'                    _LCD_Init:	
  8352                           
  8353                           ;incstack = 0
  8354                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8355                           ;LCD_Init@style stored from wreg
  8356  0000' 0085'              	movwf	LCD_Init@style
  8357                           
  8358                           ;lcd.c: 156: LCD_Port(0x00);
  8359  0001' 3000               	movlw	0
  8360  0002' 3180' 2000' 3180'  	fcall	_LCD_Port
  8361                           
  8362                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8363  0005' 3021               	movlw	33
  8364  0006' 0084'              	movwf	??_LCD_Init+1
  8365  0007' 3076               	movlw	118
  8366  0008' 0083'              	movwf	??_LCD_Init
  8367  0009'                    u2967:	
  8368  0009' 0B83'              	decfsz	??_LCD_Init,f
  8369  000A' 2800'              	goto	u2967
  8370  000B' 0B84'              	decfsz	??_LCD_Init+1,f
  8371  000C' 2800'              	goto	u2967
  8372  000D' 0000               	nop
  8373                           
  8374                           ;lcd.c: 160: LCD_Cmd(0x03);
  8375  000E' 3003               	movlw	3
  8376  000F' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8377                           
  8378                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8379  0012' 3004               	movlw	4
  8380  0013' 0084'              	movwf	??_LCD_Init+1
  8381  0014' 303D               	movlw	61
  8382  0015' 0083'              	movwf	??_LCD_Init
  8383  0016'                    u2977:	
  8384  0016' 0B83'              	decfsz	??_LCD_Init,f
  8385  0017' 2800'              	goto	u2977
  8386  0018' 0B84'              	decfsz	??_LCD_Init+1,f
  8387  0019' 2800'              	goto	u2977
  8388  001A' 3200               	nop2
  8389                           
  8390                           ;lcd.c: 164: LCD_Cmd(0x03);
  8391  001B' 3003               	movlw	3
  8392  001C' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8393                           
  8394                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8395  001F' 3009               	movlw	9
  8396  0020' 0083'              	movwf	??_LCD_Init
  8397  0021'                    u2987:	
  8398  0021' 0B83'              	decfsz	??_LCD_Init,f
  8399  0022' 2800'              	goto	u2987
  8400  0023' 3200               	nop2	;nop
  8401                           
  8402                           ;lcd.c: 168: LCD_Cmd(0x03);
  8403  0024' 3003               	movlw	3
  8404  0025' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8405                           
  8406                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8407  0028' 3009               	movlw	9
  8408  0029' 0083'              	movwf	??_LCD_Init
  8409  002A'                    u2997:	
  8410  002A' 0B83'              	decfsz	??_LCD_Init,f
  8411  002B' 2800'              	goto	u2997
  8412  002C' 3200               	nop2	;nop
  8413                           
  8414                           ;lcd.c: 172: LCD_Cmd(0x02);
  8415  002D' 3002               	movlw	2
  8416  002E' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8417                           
  8418                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8419  0031' 3009               	movlw	9
  8420  0032' 0083'              	movwf	??_LCD_Init
  8421  0033'                    u3007:	
  8422  0033' 0B83'              	decfsz	??_LCD_Init,f
  8423  0034' 2800'              	goto	u3007
  8424  0035' 3200               	nop2	;nop
  8425                           
  8426                           ;lcd.c: 176: LCD_Cmd(0x2);
  8427  0036' 3002               	movlw	2
  8428  0037' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8429                           
  8430                           ;lcd.c: 178: LCD_Cmd(0x8);
  8431  003A' 3008               	movlw	8
  8432  003B' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8433                           
  8434                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8435  003E' 3009               	movlw	9
  8436  003F' 0083'              	movwf	??_LCD_Init
  8437  0040'                    u3017:	
  8438  0040' 0B83'              	decfsz	??_LCD_Init,f
  8439  0041' 2800'              	goto	u3017
  8440  0042' 3200               	nop2	;nop
  8441                           
  8442                           ;lcd.c: 182: LCD_Cmd(0x0);
  8443  0043' 3000               	movlw	0
  8444  0044' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8445                           
  8446                           ;lcd.c: 184: LCD_Cmd(0x8);
  8447  0047' 3008               	movlw	8
  8448  0048' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8449                           
  8450                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8451  004B' 3009               	movlw	9
  8452  004C' 0083'              	movwf	??_LCD_Init
  8453  004D'                    u3027:	
  8454  004D' 0B83'              	decfsz	??_LCD_Init,f
  8455  004E' 2800'              	goto	u3027
  8456  004F' 3200               	nop2	;nop
  8457                           
  8458                           ;lcd.c: 188: LCD_Cmd(0x0);
  8459  0050' 3000               	movlw	0
  8460  0051' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8461                           
  8462                           ;lcd.c: 190: LCD_Cmd(0x1);
  8463  0054' 3001               	movlw	1
  8464  0055' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8465                           
  8466                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8467  0058' 30F9               	movlw	249
  8468  0059' 0083'              	movwf	??_LCD_Init
  8469  005A'                    u3037:	
  8470  005A' 3200               	nop2
  8471  005B' 0B83'              	decfsz	??_LCD_Init,f
  8472  005C' 2800'              	goto	u3037
  8473  005D' 3200               	nop2	;nop
  8474  005E' 3200               	nop2	;nop
  8475                           
  8476                           ;lcd.c: 194: LCD_Cmd(0x0);
  8477  005F' 3000               	movlw	0
  8478  0060' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8479                           
  8480                           ;lcd.c: 196: LCD_Cmd(0x6);
  8481  0063' 3006               	movlw	6
  8482  0064' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8483                           
  8484                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8485  0067' 3009               	movlw	9
  8486  0068' 0083'              	movwf	??_LCD_Init
  8487  0069'                    u3047:	
  8488  0069' 0B83'              	decfsz	??_LCD_Init,f
  8489  006A' 2800'              	goto	u3047
  8490  006B' 3200               	nop2	;nop
  8491                           
  8492                           ;lcd.c: 200: LCD_Cmd(0x0);
  8493  006C' 3000               	movlw	0
  8494  006D' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8495                           
  8496                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8497  0070' 0805'              	movf	LCD_Init@style,w
  8498  0071' 380C               	iorlw	12
  8499  0072' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8500                           
  8501                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8502  0075' 3009               	movlw	9
  8503  0076' 0083'              	movwf	??_LCD_Init
  8504  0077'                    u3057:	
  8505  0077' 0B83'              	decfsz	??_LCD_Init,f
  8506  0078' 2800'              	goto	u3057
  8507  0079' 3200               	nop2	;nop
  8508  007A' 0008               	return
  8509  007B'                    __end_of_LCD_Init:	
  8510                           
  8511                           	psect	text25
  8512  0000'                    __ptext25:	
  8513 ;; *************** function _LCD_Clear *****************
  8514 ;; Defined at:
  8515 ;;		line 75 in file "lcd.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, pclath, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    2
  8536 ;; This function calls:
  8537 ;;		_LCD_Cmd
  8538 ;; This function is called by:
  8539 ;;		_SYSTEM_Initialize
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           
  8544                           ;psect for function _LCD_Clear
  8545  0000'                    _LCD_Clear:	
  8546                           
  8547                           ;lcd.c: 77: LCD_Cmd(0);
  8548                           
  8549                           ;incstack = 0
  8550                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8551  0000' 3000               	movlw	0
  8552  0001' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8553                           
  8554                           ;lcd.c: 78: LCD_Cmd(1);
  8555  0004' 3001               	movlw	1
  8556  0005' 3180' 2000'        	fcall	_LCD_Cmd
  8557  0007' 0008               	return
  8558  0008'                    __end_of_LCD_Clear:	
  8559                           
  8560                           	psect	text26
  8561  0000'                    __ptext26:	
  8562 ;; *************** function _InitCustomChars *****************
  8563 ;; Defined at:
  8564 ;;		line 29 in file "lcd.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  i               1    6[COMMON] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        2 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    2
  8585 ;; This function calls:
  8586 ;;		_LCD_Cmd
  8587 ;;		_LCD_Write_Char
  8588 ;; This function is called by:
  8589 ;;		_SYSTEM_Initialize
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           
  8594                           ;psect for function _InitCustomChars
  8595  0000'                    _InitCustomChars:	
  8596                           
  8597                           ;lcd.c: 31: uint8_t i;
  8598                           ;lcd.c: 32: LCD_Cmd(0x04);
  8599                           
  8600                           ;incstack = 0
  8601                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8602  0000' 3004               	movlw	4
  8603  0001' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8604                           
  8605                           ;lcd.c: 33: LCD_Cmd(0x00);
  8606  0004' 3000               	movlw	0
  8607  0005' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8608                           
  8609                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8610  0008' 0186'              	clrf	InitCustomChars@i
  8611  0009' 3018               	movlw	24
  8612  000A' 0206'              	subwf	InitCustomChars@i,w
  8613  000B' 1803               	btfsc	3,0
  8614  000C' 2800'              	goto	l1994
  8615  000D'                    l1988:	
  8616                           
  8617                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8618  000D' 0806'              	movf	InitCustomChars@i,w
  8619  000E' 3E00'              	addlw	(low (___cgram| 0))& (0+255)
  8620  000F' 0086               	movwf	6
  8621  0010' 0187               	clrf	7
  8622  0011' 0801               	movf	1,w
  8623  0012' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  8624  0015' 3001               	movlw	1
  8625  0016' 0085'              	movwf	??_InitCustomChars
  8626  0017' 0805'              	movf	??_InitCustomChars,w
  8627  0018' 0786'              	addwf	InitCustomChars@i,f
  8628  0019' 3018               	movlw	24
  8629  001A' 0206'              	subwf	InitCustomChars@i,w
  8630  001B' 1C03               	skipc
  8631  001C' 2800'              	goto	l1988
  8632  001D'                    l1994:	
  8633                           
  8634                           ;lcd.c: 36: LCD_Cmd(0);
  8635  001D' 3000               	movlw	0
  8636  001E' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  8637                           
  8638                           ;lcd.c: 37: LCD_Cmd(2);
  8639  0021' 3002               	movlw	2
  8640  0022' 3180' 2000'        	fcall	_LCD_Cmd
  8641  0024' 0008               	return
  8642  0025'                    __end_of_InitCustomChars:	
  8643                           
  8644                           	psect	text27
  8645  0000'                    __ptext27:	
  8646 ;; *************** function _ADCC_Initialize *****************
  8647 ;; Defined at:
  8648 ;;		line 5 in file "adcc.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;Total ram usage:        0 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_SYSTEM_Initialize
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _ADCC_Initialize
  8677  0000'                    _ADCC_Initialize:	
  8678                           
  8679                           ;adcc.c: 8: ADCON1 = 0x00;
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  8683  0000' 0021               	movlb	1	; select bank1
  8684  0001' 0194               	clrf	20	;volatile
  8685                           
  8686                           ;adcc.c: 10: ADCON2 = 0x00;
  8687  0002' 0195               	clrf	21	;volatile
  8688                           
  8689                           ;adcc.c: 12: ADCON3 = 0x00;
  8690  0003' 0196               	clrf	22	;volatile
  8691                           
  8692                           ;adcc.c: 14: ADACT = 0x00;
  8693  0004' 0199               	clrf	25	;volatile
  8694                           
  8695                           ;adcc.c: 16: ADSTAT = 0x00;
  8696  0005' 0197               	clrf	23	;volatile
  8697                           
  8698                           ;adcc.c: 18: ADCLK = 0x0F;
  8699  0006' 300F               	movlw	15
  8700  0007' 0098               	movwf	24	;volatile
  8701                           
  8702                           ;adcc.c: 21: ADREF = 0x00;
  8703  0008' 019A               	clrf	26	;volatile
  8704                           
  8705                           ;adcc.c: 23: ADCAP = 0x00;
  8706  0009' 019B               	clrf	27	;volatile
  8707                           
  8708                           ;adcc.c: 25: ADPRE = 0x00;
  8709  000A' 019C               	clrf	28	;volatile
  8710                           
  8711                           ;adcc.c: 27: ADACQ = 0x00;
  8712  000B' 019D               	clrf	29	;volatile
  8713                           
  8714                           ;adcc.c: 29: ADPCH = 0x00;
  8715  000C' 019E               	clrf	30	;volatile
  8716                           
  8717                           ;adcc.c: 31: ADRPT = 0x00;
  8718  000D' 0022               	movlb	2	; select bank2
  8719  000E' 018D               	clrf	13	;volatile
  8720                           
  8721                           ;adcc.c: 33: ADLTHL = 0x00;
  8722  000F' 018E               	clrf	14	;volatile
  8723                           
  8724                           ;adcc.c: 35: ADLTHH = 0x00;
  8725  0010' 018F               	clrf	15	;volatile
  8726                           
  8727                           ;adcc.c: 37: ADUTHL = 0x00;
  8728  0011' 0190               	clrf	16	;volatile
  8729                           
  8730                           ;adcc.c: 39: ADUTHH = 0x00;
  8731  0012' 0191               	clrf	17	;volatile
  8732                           
  8733                           ;adcc.c: 41: ADSTPTL = 0x00;
  8734  0013' 0192               	clrf	18	;volatile
  8735                           
  8736                           ;adcc.c: 43: ADSTPTH = 0x00;
  8737  0014' 0193               	clrf	19	;volatile
  8738                           
  8739                           ;adcc.c: 46: ADCON0 = 0x84;
  8740  0015' 3084               	movlw	132
  8741  0016' 0021               	movlb	1	; select bank1
  8742  0017' 0093               	movwf	19	;volatile
  8743  0018' 0008               	return
  8744  0019'                    __end_of_ADCC_Initialize:	
  8745                           
  8746                           	psect	text28
  8747  0000'                    __ptext28:	
  8748 ;; *************** function _PWM6_LoadDutyValue *****************
  8749 ;; Defined at:
  8750 ;;		line 15 in file "pwm6.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  dutyValue       2    0[COMMON] unsigned int 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;Total ram usage:        4 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           
  8778                           ;psect for function _PWM6_LoadDutyValue
  8779  0000'                    _PWM6_LoadDutyValue:	
  8780                           
  8781                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
  8782                           
  8783                           ;incstack = 0
  8784                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  8785  0000' 0801'              	movf	PWM6_LoadDutyValue@dutyValue+1,w
  8786  0001' 0083'              	movwf	??_PWM6_LoadDutyValue+1
  8787  0002' 0800'              	movf	PWM6_LoadDutyValue@dutyValue,w
  8788  0003' 0082'              	movwf	??_PWM6_LoadDutyValue
  8789  0004' 3683'              	lsrf	??_PWM6_LoadDutyValue+1,f
  8790  0005' 0C82'              	rrf	??_PWM6_LoadDutyValue,f
  8791  0006' 3683'              	lsrf	??_PWM6_LoadDutyValue+1,f
  8792  0007' 0C82'              	rrf	??_PWM6_LoadDutyValue,f
  8793  0008' 0802'              	movf	??_PWM6_LoadDutyValue,w
  8794  0009' 0027               	movlb	7	; select bank7
  8795  000A' 008D               	movwf	13	;volatile
  8796                           
  8797                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
  8798  000B' 0800'              	movf	PWM6_LoadDutyValue@dutyValue,w
  8799  000C' 3903               	andlw	3
  8800  000D' 0082'              	movwf	??_PWM6_LoadDutyValue
  8801  000E' 3005               	movlw	5
  8802  000F'                    u2475:	
  8803  000F' 3582'              	lslf	??_PWM6_LoadDutyValue,f
  8804  0010' 3EFF               	addlw	-1
  8805  0011' 1D03               	skipz
  8806  0012' 2800'              	goto	u2475
  8807  0013' 3502'              	lslf	??_PWM6_LoadDutyValue,w
  8808  0014' 008C               	movwf	12	;volatile
  8809  0015' 0008               	return
  8810  0016'                    __end_of_PWM6_LoadDutyValue:	
  8811                           
  8812                           	psect	text29
  8813  0000'                    __ptext29:	
  8814 ;; *************** function _LCD_Write_String *****************
  8815 ;; Defined at:
  8816 ;;		line 239 in file "lcd.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  a               2    5[COMMON] PTR const unsigned char 
  8819 ;;		 -> STR_1(6), 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  i               2    8[COMMON] int 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;Total ram usage:        5 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    2
  8838 ;; This function calls:
  8839 ;;		_LCD_Write_Char
  8840 ;; This function is called by:
  8841 ;;		_main
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _LCD_Write_String
  8847  0000'                    _LCD_Write_String:	
  8848                           
  8849                           ;lcd.c: 241: int i;
  8850                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  8851                           
  8852                           ;incstack = 0
  8853                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8854  0000' 0188'              	clrf	LCD_Write_String@i
  8855  0001' 0189'              	clrf	LCD_Write_String@i+1
  8856  0002'                    l2306:	
  8857  0002' 0805'              	movf	LCD_Write_String@a,w
  8858  0003' 0708'              	addwf	LCD_Write_String@i,w
  8859  0004' 0084               	movwf	4
  8860  0005' 0806'              	movf	LCD_Write_String@a+1,w
  8861  0006' 3D09'              	addwfc	LCD_Write_String@i+1,w
  8862  0007' 0085               	movwf	5
  8863  0008' 0012               	moviw fsr0++
  8864  0009' 1903               	btfsc	3,2
  8865  000A' 0008               	return
  8866                           
  8867                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  8868  000B' 0805'              	movf	LCD_Write_String@a,w
  8869  000C' 0708'              	addwf	LCD_Write_String@i,w
  8870  000D' 0084               	movwf	4
  8871  000E' 0806'              	movf	LCD_Write_String@a+1,w
  8872  000F' 3D09'              	addwfc	LCD_Write_String@i+1,w
  8873  0010' 0085               	movwf	5
  8874  0011' 0800               	movf	0,w	;code access
  8875  0012' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  8876  0015' 3001               	movlw	1
  8877  0016' 0788'              	addwf	LCD_Write_String@i,f
  8878  0017' 3000               	movlw	0
  8879  0018' 3D89'              	addwfc	LCD_Write_String@i+1,f
  8880  0019' 2800'              	goto	l2306
  8881  001A'                    __end_of_LCD_Write_String:	
  8882                           
  8883                           	psect	text30
  8884  0000'                    __ptext30:	
  8885 ;; *************** function _LCD_Write_Int *****************
  8886 ;; Defined at:
  8887 ;;		line 246 in file "lcd.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  value           2    9[COMMON] int 
  8890 ;;  fieldLength     1   11[COMMON] char 
  8891 ;;  numPlaces       1   12[COMMON] char 
  8892 ;;  sign            1   13[COMMON] char 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  str             5    5[BANK0 ] unsigned char [5]
  8895 ;;  i               2   12[BANK0 ] int 
  8896 ;;  j               2   10[BANK0 ] int 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8906 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;Total ram usage:       19 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    2
  8913 ;; This function calls:
  8914 ;;		_LCD_Write_Char
  8915 ;;		___awdiv
  8916 ;;		___awmod
  8917 ;; This function is called by:
  8918 ;;		_main
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           
  8923                           ;psect for function _LCD_Write_Int
  8924  0000'                    _LCD_Write_Int:	
  8925                           
  8926                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  8927                           
  8928                           ;incstack = 0
  8929                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8930  0000' 3000'              	movlw	low LCD_Write_Int@F13694
  8931  0001' 0086               	movwf	6
  8932  0002' 3000'              	movlw	high LCD_Write_Int@F13694
  8933  0003' 0087               	movwf	7
  8934  0004' 3000'              	movlw	low LCD_Write_Int@str
  8935  0005' 0084               	movwf	4
  8936  0006' 3000'              	movlw	high LCD_Write_Int@str
  8937  0007' 0085               	movwf	5
  8938  0008' 3005               	movlw	5
  8939  0009' 0020               	movlb	0	; select bank0
  8940  000A' 0080'              	movwf	??_LCD_Write_Int
  8941  000B'                    u2370:	
  8942  000B' 0016               	moviw fsr1++
  8943  000C' 001A               	movwi fsr0++
  8944  000D' 0B80'              	decfsz	??_LCD_Write_Int,f
  8945  000E' 2800'              	goto	u2370
  8946                           
  8947                           ;lcd.c: 249: int i=4,j=0;
  8948  000F' 3004               	movlw	4
  8949  0010' 008C'              	movwf	LCD_Write_Int@i
  8950  0011' 3000               	movlw	0
  8951  0012' 008D'              	movwf	LCD_Write_Int@i+1
  8952  0013' 018A'              	clrf	LCD_Write_Int@j
  8953  0014' 018B'              	clrf	LCD_Write_Int@j+1
  8954                           
  8955                           ;lcd.c: 251: if(value<0)
  8956  0015' 1F8A'              	btfss	LCD_Write_Int@value+1,7
  8957  0016' 2800'              	goto	l2320
  8958                           
  8959                           ;lcd.c: 252: {
  8960                           ;lcd.c: 253: LCD_Write_Char('-');
  8961  0017' 302D               	movlw	45
  8962  0018' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  8963                           
  8964                           ;lcd.c: 254: value=value*-1;
  8965  001B' 0989'              	comf	LCD_Write_Int@value,f
  8966  001C' 098A'              	comf	LCD_Write_Int@value+1,f
  8967  001D' 0A89'              	incf	LCD_Write_Int@value,f
  8968  001E' 1903               	skipnz
  8969  001F' 0A8A'              	incf	LCD_Write_Int@value+1,f
  8970                           
  8971                           ;lcd.c: 255: }
  8972  0020' 2800'              	goto	l2330
  8973  0021'                    l2320:	
  8974                           
  8975                           ;lcd.c: 257: else
  8976                           ;lcd.c: 258: {
  8977                           ;lcd.c: 259: if(sign == 1)
  8978  0021' 030D'              	decf	LCD_Write_Int@sign,w
  8979  0022' 1D03               	btfss	3,2
  8980  0023' 2800'              	goto	l2330
  8981                           
  8982                           ;lcd.c: 260: {
  8983                           ;lcd.c: 261: LCD_Write_Char('+');
  8984  0024' 302B               	movlw	43
  8985  0025' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  8986  0028'                    l2330:	
  8987                           ;lcd.c: 262: }
  8988                           ;lcd.c: 263: }
  8989                           ;lcd.c: 265: while(value)
  8990                           
  8991  0028' 0809'              	movf	LCD_Write_Int@value,w
  8992  0029' 040A'              	iorwf	LCD_Write_Int@value+1,w
  8993  002A' 1903               	btfsc	3,2
  8994  002B' 2800'              	goto	l2332
  8995                           
  8996                           ;lcd.c: 266: {
  8997                           ;lcd.c: 267: str[i]=value%10;
  8998  002C' 300A               	movlw	10
  8999  002D' 0080'              	movwf	___awmod@divisor
  9000  002E' 3000               	movlw	0
  9001  002F' 0081'              	movwf	___awmod@divisor+1
  9002  0030' 080A'              	movf	LCD_Write_Int@value+1,w
  9003  0031' 0083'              	movwf	___awmod@dividend+1
  9004  0032' 0809'              	movf	LCD_Write_Int@value,w
  9005  0033' 0082'              	movwf	___awmod@dividend
  9006  0034' 3180' 2000' 3180'  	fcall	___awmod
  9007  0037' 0800'              	movf	?___awmod,w
  9008  0038' 0020               	movlb	0	; select bank0
  9009  0039' 0080'              	movwf	??_LCD_Write_Int
  9010  003A' 080C'              	movf	LCD_Write_Int@i,w
  9011  003B' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9012  003C' 0086               	movwf	6
  9013  003D' 0187               	clrf	7
  9014  003E' 0800'              	movf	??_LCD_Write_Int,w
  9015  003F' 0081               	movwf	1
  9016                           
  9017                           ;lcd.c: 268: value=value/10;
  9018  0040' 300A               	movlw	10
  9019  0041' 0080'              	movwf	___awdiv@divisor
  9020  0042' 3000               	movlw	0
  9021  0043' 0081'              	movwf	___awdiv@divisor+1
  9022  0044' 080A'              	movf	LCD_Write_Int@value+1,w
  9023  0045' 0083'              	movwf	___awdiv@dividend+1
  9024  0046' 0809'              	movf	LCD_Write_Int@value,w
  9025  0047' 0082'              	movwf	___awdiv@dividend
  9026  0048' 3180' 2000' 3180'  	fcall	___awdiv
  9027  004B' 0801'              	movf	?___awdiv+1,w
  9028  004C' 008A'              	movwf	LCD_Write_Int@value+1
  9029  004D' 0800'              	movf	?___awdiv,w
  9030  004E' 0089'              	movwf	LCD_Write_Int@value
  9031                           
  9032                           ;lcd.c: 269: i--;
  9033  004F' 30FF               	movlw	255
  9034  0050' 0020               	movlb	0	; select bank0
  9035  0051' 078C'              	addwf	LCD_Write_Int@i,f
  9036  0052' 30FF               	movlw	255
  9037  0053' 3D8D'              	addwfc	LCD_Write_Int@i+1,f
  9038  0054' 2800'              	goto	l2330
  9039  0055'                    l2332:	
  9040                           
  9041                           ;lcd.c: 270: }
  9042                           ;lcd.c: 271: if(fieldLength==-1)
  9043  0055' 0A0B'              	incf	LCD_Write_Int@fieldLength,w
  9044  0056' 1903               	btfsc	3,2
  9045  0057' 2800'              	goto	l2338
  9046  0058' 2800'              	goto	l2340
  9047  0059'                    l2336:	
  9048                           ;lcd.c: 272: {
  9049                           ;lcd.c: 273: while(str[j]==0)
  9050                           
  9051                           
  9052                           ;lcd.c: 274: {
  9053                           ;lcd.c: 275: j++;
  9054  0059' 3001               	movlw	1
  9055  005A' 0020               	movlb	0	; select bank0
  9056  005B' 078A'              	addwf	LCD_Write_Int@j,f
  9057  005C' 3000               	movlw	0
  9058  005D' 3D8B'              	addwfc	LCD_Write_Int@j+1,f
  9059  005E'                    l2338:	
  9060  005E' 0020               	movlb	0	; select bank0
  9061  005F' 080A'              	movf	LCD_Write_Int@j,w
  9062  0060' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9063  0061' 0086               	movwf	6
  9064  0062' 0187               	clrf	7
  9065  0063' 0801               	movf	1,w
  9066  0064' 1D03               	btfss	3,2
  9067  0065' 2800'              	goto	l2342
  9068  0066' 2800'              	goto	l2336
  9069  0067'                    l2340:	
  9070                           ;lcd.c: 276: }
  9071                           ;lcd.c: 277: }
  9072                           
  9073                           
  9074                           ;lcd.c: 278: else
  9075                           ;lcd.c: 279: {
  9076                           ;lcd.c: 280: j=5-fieldLength;
  9077  0067' 080B'              	movf	LCD_Write_Int@fieldLength,w
  9078  0068' 0020               	movlb	0	; select bank0
  9079  0069' 0080'              	movwf	??_LCD_Write_Int
  9080  006A' 0181'              	clrf	??_LCD_Write_Int+1
  9081  006B' 1B80'              	btfsc	??_LCD_Write_Int,7
  9082  006C' 0381'              	decf	??_LCD_Write_Int+1,f
  9083  006D' 0980'              	comf	??_LCD_Write_Int,f
  9084  006E' 0981'              	comf	??_LCD_Write_Int+1,f
  9085  006F' 0A80'              	incf	??_LCD_Write_Int,f
  9086  0070' 1903               	skipnz
  9087  0071' 0A81'              	incf	??_LCD_Write_Int+1,f
  9088  0072' 0800'              	movf	??_LCD_Write_Int,w
  9089  0073' 3E05               	addlw	5
  9090  0074' 008A'              	movwf	LCD_Write_Int@j
  9091  0075' 3000               	movlw	0
  9092  0076' 3D01'              	addwfc	??_LCD_Write_Int+1,w
  9093  0077' 008B'              	movwf	LCD_Write_Int@j+1
  9094  0078'                    l2342:	
  9095                           
  9096                           ;lcd.c: 281: }
  9097                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  9098  0078' 080B'              	movf	LCD_Write_Int@j+1,w
  9099  0079' 008D'              	movwf	LCD_Write_Int@i+1
  9100  007A' 080A'              	movf	LCD_Write_Int@j,w
  9101  007B' 008C'              	movwf	LCD_Write_Int@i
  9102  007C'                    l2348:	
  9103  007C' 080C'              	movf	LCD_Write_Int@numPlaces,w
  9104  007D' 0080'              	movwf	??_LCD_Write_Int
  9105  007E' 0181'              	clrf	??_LCD_Write_Int+1
  9106  007F' 1B80'              	btfsc	??_LCD_Write_Int,7
  9107  0080' 0381'              	decf	??_LCD_Write_Int+1,f
  9108  0081' 0980'              	comf	??_LCD_Write_Int,f
  9109  0082' 0981'              	comf	??_LCD_Write_Int+1,f
  9110  0083' 0A80'              	incf	??_LCD_Write_Int,f
  9111  0084' 1903               	skipnz
  9112  0085' 0A81'              	incf	??_LCD_Write_Int+1,f
  9113  0086' 0800'              	movf	??_LCD_Write_Int,w
  9114  0087' 3E05               	addlw	5
  9115  0088' 0082'              	movwf	??_LCD_Write_Int+2
  9116  0089' 3000               	movlw	0
  9117  008A' 3D01'              	addwfc	??_LCD_Write_Int+1,w
  9118  008B' 0083'              	movwf	??_LCD_Write_Int+3
  9119  008C' 080D'              	movf	LCD_Write_Int@i+1,w
  9120  008D' 3A80               	xorlw	128
  9121  008E' 0084'              	movwf	??_LCD_Write_Int+4
  9122  008F' 0803'              	movf	??_LCD_Write_Int+3,w
  9123  0090' 3A80               	xorlw	128
  9124  0091' 0204'              	subwf	??_LCD_Write_Int+4,w
  9125  0092' 1D03               	skipz
  9126  0093' 2800'              	goto	u2435
  9127  0094' 0802'              	movf	??_LCD_Write_Int+2,w
  9128  0095' 020C'              	subwf	LCD_Write_Int@i,w
  9129  0096'                    u2435:	
  9130  0096' 1803               	btfsc	3,0
  9131  0097' 2800'              	goto	l2350
  9132                           
  9133                           ;lcd.c: 284: {
  9134                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  9135  0098' 0020               	movlb	0	; select bank0
  9136  0099' 080C'              	movf	LCD_Write_Int@i,w
  9137  009A' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9138  009B' 0086               	movwf	6
  9139  009C' 0187               	clrf	7
  9140  009D' 0801               	movf	1,w
  9141  009E' 3E30               	addlw	48
  9142  009F' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  9143  00A2' 3001               	movlw	1
  9144  00A3' 0020               	movlb	0	; select bank0
  9145  00A4' 078C'              	addwf	LCD_Write_Int@i,f
  9146  00A5' 3000               	movlw	0
  9147  00A6' 3D8D'              	addwfc	LCD_Write_Int@i+1,f
  9148  00A7' 2800'              	goto	l2348
  9149  00A8'                    l2350:	
  9150                           
  9151                           ;lcd.c: 286: }
  9152                           ;lcd.c: 288: if(numPlaces == 1)
  9153  00A8' 030C'              	decf	LCD_Write_Int@numPlaces,w
  9154  00A9' 1D03               	btfss	3,2
  9155  00AA' 2800'              	goto	l2354
  9156                           
  9157                           ;lcd.c: 289: {
  9158                           ;lcd.c: 290: LCD_Write_Char(46);
  9159  00AB' 302E               	movlw	46
  9160  00AC' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  9161                           
  9162                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  9163  00AF' 0020               	movlb	0	; select bank0
  9164  00B0' 0809'              	movf	LCD_Write_Int@str+4,w
  9165  00B1' 3E30               	addlw	48
  9166  00B2' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  9167  00B5'                    l2354:	
  9168                           
  9169                           ;lcd.c: 292: }
  9170                           ;lcd.c: 294: if(numPlaces == 2)
  9171  00B5' 3002               	movlw	2
  9172  00B6' 060C'              	xorwf	LCD_Write_Int@numPlaces,w
  9173  00B7' 1D03               	btfss	3,2
  9174  00B8' 0008               	return
  9175                           
  9176                           ;lcd.c: 295: {
  9177                           ;lcd.c: 296: LCD_Write_Char(46);
  9178  00B9' 302E               	movlw	46
  9179  00BA' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  9180                           
  9181                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  9182  00BD' 0020               	movlb	0	; select bank0
  9183  00BE' 0808'              	movf	LCD_Write_Int@str+3,w
  9184  00BF' 3E30               	addlw	48
  9185  00C0' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  9186                           
  9187                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  9188  00C3' 0020               	movlb	0	; select bank0
  9189  00C4' 0809'              	movf	LCD_Write_Int@str+4,w
  9190  00C5' 3E30               	addlw	48
  9191  00C6' 3180' 2000'        	fcall	_LCD_Write_Char
  9192  00C8' 0008               	return
  9193  00C9'                    __end_of_LCD_Write_Int:	
  9194                           
  9195                           	psect	text31
  9196  0000'                    __ptext31:	
  9197 ;; *************** function ___awmod *****************
  9198 ;; Defined at:
  9199 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  divisor         2    0[COMMON] int 
  9202 ;;  dividend        2    2[COMMON] int 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  sign            1    6[COMMON] unsigned char 
  9205 ;;  counter         1    5[COMMON] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2    0[COMMON] int 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;Total ram usage:        7 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_LCD_Write_Int
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           
  9229                           ;psect for function ___awmod
  9230  0000'                    ___awmod:	
  9231                           
  9232                           ;incstack = 0
  9233                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9234  0000' 0186'              	clrf	___awmod@sign
  9235  0001' 1F83'              	btfss	___awmod@dividend+1,7
  9236  0002' 2800'              	goto	l2188
  9237  0003' 0982'              	comf	___awmod@dividend,f
  9238  0004' 0983'              	comf	___awmod@dividend+1,f
  9239  0005' 0A82'              	incf	___awmod@dividend,f
  9240  0006' 1903               	skipnz
  9241  0007' 0A83'              	incf	___awmod@dividend+1,f
  9242  0008' 0186'              	clrf	___awmod@sign
  9243  0009' 0A86'              	incf	___awmod@sign,f
  9244  000A'                    l2188:	
  9245  000A' 1F81'              	btfss	___awmod@divisor+1,7
  9246  000B' 2800'              	goto	l2192
  9247  000C' 0980'              	comf	___awmod@divisor,f
  9248  000D' 0981'              	comf	___awmod@divisor+1,f
  9249  000E' 0A80'              	incf	___awmod@divisor,f
  9250  000F' 1903               	skipnz
  9251  0010' 0A81'              	incf	___awmod@divisor+1,f
  9252  0011'                    l2192:	
  9253  0011' 0800'              	movf	___awmod@divisor,w
  9254  0012' 0401'              	iorwf	___awmod@divisor+1,w
  9255  0013' 1903               	btfsc	3,2
  9256  0014' 2800'              	goto	l2210
  9257  0015' 0185'              	clrf	___awmod@counter
  9258  0016' 0A85'              	incf	___awmod@counter,f
  9259  0017'                    l2200:	
  9260  0017' 1B81'              	btfsc	___awmod@divisor+1,7
  9261  0018' 2800'              	goto	l2202
  9262  0019' 3001               	movlw	1
  9263  001A'                    u2205:	
  9264  001A' 3580'              	lslf	___awmod@divisor,f
  9265  001B' 0D81'              	rlf	___awmod@divisor+1,f
  9266  001C' 0B89               	decfsz	9,f
  9267  001D' 2800'              	goto	u2205
  9268  001E' 3001               	movlw	1
  9269  001F' 0084'              	movwf	??___awmod
  9270  0020' 0804'              	movf	??___awmod,w
  9271  0021' 0785'              	addwf	___awmod@counter,f
  9272  0022' 2800'              	goto	l2200
  9273  0023'                    l2202:	
  9274  0023' 0801'              	movf	___awmod@divisor+1,w
  9275  0024' 0203'              	subwf	___awmod@dividend+1,w
  9276  0025' 1D03               	skipz
  9277  0026' 2800'              	goto	u2225
  9278  0027' 0800'              	movf	___awmod@divisor,w
  9279  0028' 0202'              	subwf	___awmod@dividend,w
  9280  0029'                    u2225:	
  9281  0029' 1C03               	skipc
  9282  002A' 2800'              	goto	l2206
  9283  002B' 0800'              	movf	___awmod@divisor,w
  9284  002C' 0282'              	subwf	___awmod@dividend,f
  9285  002D' 0801'              	movf	___awmod@divisor+1,w
  9286  002E' 3B83'              	subwfb	___awmod@dividend+1,f
  9287  002F'                    l2206:	
  9288  002F' 3001               	movlw	1
  9289  0030'                    u2235:	
  9290  0030' 3681'              	lsrf	___awmod@divisor+1,f
  9291  0031' 0C80'              	rrf	___awmod@divisor,f
  9292  0032' 0B89               	decfsz	9,f
  9293  0033' 2800'              	goto	u2235
  9294  0034' 3001               	movlw	1
  9295  0035' 0285'              	subwf	___awmod@counter,f
  9296  0036' 1D03               	btfss	3,2
  9297  0037' 2800'              	goto	l2202
  9298  0038'                    l2210:	
  9299  0038' 0806'              	movf	___awmod@sign,w
  9300  0039' 1903               	btfsc	3,2
  9301  003A' 2800'              	goto	l2214
  9302  003B' 0982'              	comf	___awmod@dividend,f
  9303  003C' 0983'              	comf	___awmod@dividend+1,f
  9304  003D' 0A82'              	incf	___awmod@dividend,f
  9305  003E' 1903               	skipnz
  9306  003F' 0A83'              	incf	___awmod@dividend+1,f
  9307  0040'                    l2214:	
  9308  0040' 0803'              	movf	___awmod@dividend+1,w
  9309  0041' 0081'              	movwf	?___awmod+1
  9310  0042' 0802'              	movf	___awmod@dividend,w
  9311  0043' 0080'              	movwf	?___awmod
  9312  0044' 0008               	return
  9313  0045'                    __end_of___awmod:	
  9314                           
  9315                           	psect	text32
  9316  0000'                    __ptext32:	
  9317 ;; *************** function ___awdiv *****************
  9318 ;; Defined at:
  9319 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  divisor         2    0[COMMON] int 
  9322 ;;  dividend        2    2[COMMON] int 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  quotient        2    7[COMMON] int 
  9325 ;;  sign            1    6[COMMON] unsigned char 
  9326 ;;  counter         1    5[COMMON] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  2    0[COMMON] int 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;Total ram usage:        9 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_LCD_Write_Int
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function ___awdiv
  9351  0000'                    ___awdiv:	
  9352                           
  9353                           ;incstack = 0
  9354                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9355  0000' 0186'              	clrf	___awdiv@sign
  9356  0001' 1F81'              	btfss	___awdiv@divisor+1,7
  9357  0002' 2800'              	goto	l2144
  9358  0003' 0980'              	comf	___awdiv@divisor,f
  9359  0004' 0981'              	comf	___awdiv@divisor+1,f
  9360  0005' 0A80'              	incf	___awdiv@divisor,f
  9361  0006' 1903               	skipnz
  9362  0007' 0A81'              	incf	___awdiv@divisor+1,f
  9363  0008' 0186'              	clrf	___awdiv@sign
  9364  0009' 0A86'              	incf	___awdiv@sign,f
  9365  000A'                    l2144:	
  9366  000A' 1F83'              	btfss	___awdiv@dividend+1,7
  9367  000B' 2800'              	goto	l2150
  9368  000C' 0982'              	comf	___awdiv@dividend,f
  9369  000D' 0983'              	comf	___awdiv@dividend+1,f
  9370  000E' 0A82'              	incf	___awdiv@dividend,f
  9371  000F' 1903               	skipnz
  9372  0010' 0A83'              	incf	___awdiv@dividend+1,f
  9373  0011' 3001               	movlw	1
  9374  0012' 0084'              	movwf	??___awdiv
  9375  0013' 0804'              	movf	??___awdiv,w
  9376  0014' 0686'              	xorwf	___awdiv@sign,f
  9377  0015'                    l2150:	
  9378  0015' 0187'              	clrf	___awdiv@quotient
  9379  0016' 0188'              	clrf	___awdiv@quotient+1
  9380  0017' 0800'              	movf	___awdiv@divisor,w
  9381  0018' 0401'              	iorwf	___awdiv@divisor+1,w
  9382  0019' 1903               	btfsc	3,2
  9383  001A' 2800'              	goto	l2172
  9384  001B' 0185'              	clrf	___awdiv@counter
  9385  001C' 0A85'              	incf	___awdiv@counter,f
  9386  001D'                    l2160:	
  9387  001D' 1B81'              	btfsc	___awdiv@divisor+1,7
  9388  001E' 2800'              	goto	l2162
  9389  001F' 3001               	movlw	1
  9390  0020'                    u2105:	
  9391  0020' 3580'              	lslf	___awdiv@divisor,f
  9392  0021' 0D81'              	rlf	___awdiv@divisor+1,f
  9393  0022' 0B89               	decfsz	9,f
  9394  0023' 2800'              	goto	u2105
  9395  0024' 3001               	movlw	1
  9396  0025' 0084'              	movwf	??___awdiv
  9397  0026' 0804'              	movf	??___awdiv,w
  9398  0027' 0785'              	addwf	___awdiv@counter,f
  9399  0028' 2800'              	goto	l2160
  9400  0029'                    l2162:	
  9401  0029' 3001               	movlw	1
  9402  002A'                    u2125:	
  9403  002A' 3587'              	lslf	___awdiv@quotient,f
  9404  002B' 0D88'              	rlf	___awdiv@quotient+1,f
  9405  002C' 0B89               	decfsz	9,f
  9406  002D' 2800'              	goto	u2125
  9407  002E' 0801'              	movf	___awdiv@divisor+1,w
  9408  002F' 0203'              	subwf	___awdiv@dividend+1,w
  9409  0030' 1D03               	skipz
  9410  0031' 2800'              	goto	u2135
  9411  0032' 0800'              	movf	___awdiv@divisor,w
  9412  0033' 0202'              	subwf	___awdiv@dividend,w
  9413  0034'                    u2135:	
  9414  0034' 1C03               	skipc
  9415  0035' 2800'              	goto	l2168
  9416  0036' 0800'              	movf	___awdiv@divisor,w
  9417  0037' 0282'              	subwf	___awdiv@dividend,f
  9418  0038' 0801'              	movf	___awdiv@divisor+1,w
  9419  0039' 3B83'              	subwfb	___awdiv@dividend+1,f
  9420  003A' 1407'              	bsf	___awdiv@quotient,0
  9421  003B'                    l2168:	
  9422  003B' 3001               	movlw	1
  9423  003C'                    u2145:	
  9424  003C' 3681'              	lsrf	___awdiv@divisor+1,f
  9425  003D' 0C80'              	rrf	___awdiv@divisor,f
  9426  003E' 0B89               	decfsz	9,f
  9427  003F' 2800'              	goto	u2145
  9428  0040' 3001               	movlw	1
  9429  0041' 0285'              	subwf	___awdiv@counter,f
  9430  0042' 1D03               	btfss	3,2
  9431  0043' 2800'              	goto	l2162
  9432  0044'                    l2172:	
  9433  0044' 0806'              	movf	___awdiv@sign,w
  9434  0045' 1903               	btfsc	3,2
  9435  0046' 2800'              	goto	l2176
  9436  0047' 0987'              	comf	___awdiv@quotient,f
  9437  0048' 0988'              	comf	___awdiv@quotient+1,f
  9438  0049' 0A87'              	incf	___awdiv@quotient,f
  9439  004A' 1903               	skipnz
  9440  004B' 0A88'              	incf	___awdiv@quotient+1,f
  9441  004C'                    l2176:	
  9442  004C' 0808'              	movf	___awdiv@quotient+1,w
  9443  004D' 0081'              	movwf	?___awdiv+1
  9444  004E' 0807'              	movf	___awdiv@quotient,w
  9445  004F' 0080'              	movwf	?___awdiv
  9446  0050' 0008               	return
  9447  0051'                    __end_of___awdiv:	
  9448                           
  9449                           	psect	text33
  9450  0000'                    __ptext33:	
  9451 ;; *************** function _LCD_Write_Char *****************
  9452 ;; Defined at:
  9453 ;;		line 223 in file "lcd.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  a               1    wreg     const unsigned char 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  a               1    4[COMMON] const unsigned char 
  9458 ;;  y               1    3[COMMON] unsigned char 
  9459 ;;  temp            1    2[COMMON] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, pclath, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;Total ram usage:        4 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    1
  9476 ;; This function calls:
  9477 ;;		_LCD_Port
  9478 ;; This function is called by:
  9479 ;;		_InitCustomChars
  9480 ;;		_LCD_Write_String
  9481 ;;		_LCD_Write_Int
  9482 ;;		_main
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           
  9487                           ;psect for function _LCD_Write_Char
  9488  0000'                    _LCD_Write_Char:	
  9489                           
  9490                           ;incstack = 0
  9491                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9492                           ;LCD_Write_Char@a stored from wreg
  9493  0000' 0084'              	movwf	LCD_Write_Char@a
  9494                           
  9495                           ;lcd.c: 225: char temp,y;
  9496                           ;lcd.c: 226: temp = a&0x0F;
  9497  0001' 0804'              	movf	LCD_Write_Char@a,w
  9498  0002' 390F               	andlw	15
  9499  0003' 0081'              	movwf	??_LCD_Write_Char
  9500  0004' 0801'              	movf	??_LCD_Write_Char,w
  9501  0005' 0082'              	movwf	LCD_Write_Char@temp
  9502                           
  9503                           ;lcd.c: 227: y = a&0xF0;
  9504  0006' 0804'              	movf	LCD_Write_Char@a,w
  9505  0007' 39F0               	andlw	240
  9506  0008' 0081'              	movwf	??_LCD_Write_Char
  9507  0009' 0801'              	movf	??_LCD_Write_Char,w
  9508  000A' 0083'              	movwf	LCD_Write_Char@y
  9509                           
  9510                           ;lcd.c: 228: RB0 = 1;
  9511  000B' 0020               	movlb	0	; select bank0
  9512  000C' 140D               	bsf	13,0	;volatile
  9513                           
  9514                           ;lcd.c: 229: LCD_Port(y>>4);
  9515  000D' 0803'              	movf	LCD_Write_Char@y,w
  9516  000E' 0081'              	movwf	??_LCD_Write_Char
  9517  000F' 3004               	movlw	4
  9518  0010'                    u1635:	
  9519  0010' 3681'              	lsrf	??_LCD_Write_Char,f
  9520  0011' 0B89               	decfsz	9,f
  9521  0012' 2800'              	goto	u1635
  9522  0013' 0801'              	movf	??_LCD_Write_Char,w
  9523  0014' 3180' 2000' 3180'  	fcall	_LCD_Port
  9524                           
  9525                           ;lcd.c: 230: RB1 = 1;
  9526  0017' 0020               	movlb	0	; select bank0
  9527  0018' 148D               	bsf	13,1	;volatile
  9528                           
  9529                           ;lcd.c: 231: RB1 = 0;
  9530  0019' 108D               	bcf	13,1	;volatile
  9531                           
  9532                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9533  001A' 3003               	movlw	3
  9534  001B' 0081'              	movwf	??_LCD_Write_Char
  9535  001C'                    u3067:	
  9536  001C' 0B81'              	decfsz	??_LCD_Write_Char,f
  9537  001D' 2800'              	goto	u3067
  9538                           
  9539                           ;lcd.c: 233: LCD_Port(temp);
  9540  001E' 0802'              	movf	LCD_Write_Char@temp,w
  9541  001F' 3180' 2000' 3180'  	fcall	_LCD_Port
  9542                           
  9543                           ;lcd.c: 234: RB1 = 1;
  9544  0022' 0020               	movlb	0	; select bank0
  9545  0023' 148D               	bsf	13,1	;volatile
  9546                           
  9547                           ;lcd.c: 235: RB1 = 0;
  9548  0024' 108D               	bcf	13,1	;volatile
  9549                           
  9550                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9551  0025' 3003               	movlw	3
  9552  0026' 0081'              	movwf	??_LCD_Write_Char
  9553  0027'                    u3077:	
  9554  0027' 0B81'              	decfsz	??_LCD_Write_Char,f
  9555  0028' 2800'              	goto	u3077
  9556  0029' 0008               	return
  9557  002A'                    __end_of_LCD_Write_Char:	
  9558                           
  9559                           	psect	text34
  9560  0000'                    __ptext34:	
  9561 ;; *************** function _LCD_Set_Cursor *****************
  9562 ;; Defined at:
  9563 ;;		line 82 in file "lcd.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  x               1    wreg     unsigned char 
  9566 ;;  y               1    3[COMMON] unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  x               1    6[COMMON] unsigned char 
  9569 ;;  temp            1    9[COMMON] unsigned char 
  9570 ;;  w               1    8[COMMON] unsigned char 
  9571 ;;  z               1    7[COMMON] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0, pclath, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;Total ram usage:        7 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    2
  9588 ;; This function calls:
  9589 ;;		_LCD_Cmd
  9590 ;; This function is called by:
  9591 ;;		_main
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function _LCD_Set_Cursor
  9597  0000'                    _LCD_Set_Cursor:	
  9598                           
  9599                           ;incstack = 0
  9600                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9601                           ;LCD_Set_Cursor@x stored from wreg
  9602  0000' 0086'              	movwf	LCD_Set_Cursor@x
  9603                           
  9604                           ;lcd.c: 86: char temp,z,w;
  9605                           ;lcd.c: 88: if(x == 0)
  9606  0001' 0806'              	movf	LCD_Set_Cursor@x,w
  9607  0002' 1D03               	btfss	3,2
  9608  0003' 2800'              	goto	l2290
  9609                           
  9610                           ;lcd.c: 89: {
  9611                           ;lcd.c: 90: temp = 0x80 + y;
  9612  0004' 0803'              	movf	LCD_Set_Cursor@y,w
  9613  0005' 3E80               	addlw	128
  9614  0006' 0084'              	movwf	??_LCD_Set_Cursor
  9615  0007' 0804'              	movf	??_LCD_Set_Cursor,w
  9616  0008' 0089'              	movwf	LCD_Set_Cursor@temp
  9617                           
  9618                           ;lcd.c: 91: z = temp>>4;
  9619  0009' 0809'              	movf	LCD_Set_Cursor@temp,w
  9620  000A' 0084'              	movwf	??_LCD_Set_Cursor
  9621  000B' 3004               	movlw	4
  9622  000C'                    u2335:	
  9623  000C' 3684'              	lsrf	??_LCD_Set_Cursor,f
  9624  000D' 0B89               	decfsz	9,f
  9625  000E' 2800'              	goto	u2335
  9626  000F' 0804'              	movf	??_LCD_Set_Cursor,w
  9627  0010' 0085'              	movwf	??_LCD_Set_Cursor+1
  9628  0011' 0805'              	movf	??_LCD_Set_Cursor+1,w
  9629  0012' 0087'              	movwf	LCD_Set_Cursor@z
  9630                           
  9631                           ;lcd.c: 92: w = temp & 0x0F;
  9632  0013' 0809'              	movf	LCD_Set_Cursor@temp,w
  9633  0014' 390F               	andlw	15
  9634  0015' 0084'              	movwf	??_LCD_Set_Cursor
  9635  0016' 0804'              	movf	??_LCD_Set_Cursor,w
  9636  0017' 0088'              	movwf	LCD_Set_Cursor@w
  9637                           
  9638                           ;lcd.c: 93: LCD_Cmd(z);
  9639  0018' 0807'              	movf	LCD_Set_Cursor@z,w
  9640  0019' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  9641                           
  9642                           ;lcd.c: 94: LCD_Cmd(w);
  9643  001C' 0808'              	movf	LCD_Set_Cursor@w,w
  9644  001D' 3180' 2000'        	fcall	_LCD_Cmd
  9645                           
  9646                           ;lcd.c: 95: }
  9647  001F' 0008               	return
  9648  0020'                    l2290:	
  9649                           
  9650                           ;lcd.c: 97: else if(x == 1)
  9651  0020' 0306'              	decf	LCD_Set_Cursor@x,w
  9652  0021' 1D03               	btfss	3,2
  9653  0022' 0008               	return
  9654                           
  9655                           ;lcd.c: 98: {
  9656                           ;lcd.c: 99: temp = 0xC0 + y;
  9657  0023' 0803'              	movf	LCD_Set_Cursor@y,w
  9658  0024' 3EC0               	addlw	192
  9659  0025' 0084'              	movwf	??_LCD_Set_Cursor
  9660  0026' 0804'              	movf	??_LCD_Set_Cursor,w
  9661  0027' 0089'              	movwf	LCD_Set_Cursor@temp
  9662                           
  9663                           ;lcd.c: 100: z = temp>>4;
  9664  0028' 0809'              	movf	LCD_Set_Cursor@temp,w
  9665  0029' 0084'              	movwf	??_LCD_Set_Cursor
  9666  002A' 3004               	movlw	4
  9667  002B'                    u2355:	
  9668  002B' 3684'              	lsrf	??_LCD_Set_Cursor,f
  9669  002C' 0B89               	decfsz	9,f
  9670  002D' 2800'              	goto	u2355
  9671  002E' 0804'              	movf	??_LCD_Set_Cursor,w
  9672  002F' 0085'              	movwf	??_LCD_Set_Cursor+1
  9673  0030' 0805'              	movf	??_LCD_Set_Cursor+1,w
  9674  0031' 0087'              	movwf	LCD_Set_Cursor@z
  9675                           
  9676                           ;lcd.c: 101: w = temp & 0x0F;
  9677  0032' 0809'              	movf	LCD_Set_Cursor@temp,w
  9678  0033' 390F               	andlw	15
  9679  0034' 0084'              	movwf	??_LCD_Set_Cursor
  9680  0035' 0804'              	movf	??_LCD_Set_Cursor,w
  9681  0036' 0088'              	movwf	LCD_Set_Cursor@w
  9682                           
  9683                           ;lcd.c: 102: LCD_Cmd(z);
  9684  0037' 0807'              	movf	LCD_Set_Cursor@z,w
  9685  0038' 3180' 2000' 3180'  	fcall	_LCD_Cmd
  9686                           
  9687                           ;lcd.c: 103: LCD_Cmd(w);
  9688  003B' 0808'              	movf	LCD_Set_Cursor@w,w
  9689  003C' 3180' 2000'        	fcall	_LCD_Cmd
  9690  003E' 0008               	return
  9691  003F'                    __end_of_LCD_Set_Cursor:	
  9692                           
  9693                           	psect	text35
  9694  0000'                    __ptext35:	
  9695 ;; *************** function _LCD_Cmd *****************
  9696 ;; Defined at:
  9697 ;;		line 65 in file "lcd.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  a               1    wreg     unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  a               1    2[COMMON] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      void 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, pclath, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;Total ram usage:        2 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    1
  9718 ;; This function calls:
  9719 ;;		_LCD_Port
  9720 ;; This function is called by:
  9721 ;;		_InitCustomChars
  9722 ;;		_LCD_Clear
  9723 ;;		_LCD_Set_Cursor
  9724 ;;		_LCD_Init
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           
  9729                           ;psect for function _LCD_Cmd
  9730  0000'                    _LCD_Cmd:	
  9731                           
  9732                           ;incstack = 0
  9733                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9734                           ;LCD_Cmd@a stored from wreg
  9735  0000' 0082'              	movwf	LCD_Cmd@a
  9736                           
  9737                           ;lcd.c: 67: RB0 = 0;
  9738  0001' 0020               	movlb	0	; select bank0
  9739  0002' 100D               	bcf	13,0	;volatile
  9740                           
  9741                           ;lcd.c: 68: LCD_Port(a);
  9742  0003' 0802'              	movf	LCD_Cmd@a,w
  9743  0004' 3180' 2000' 3180'  	fcall	_LCD_Port
  9744                           
  9745                           ;lcd.c: 69: RB1 = 1;
  9746  0007' 0020               	movlb	0	; select bank0
  9747  0008' 148D               	bsf	13,1	;volatile
  9748                           
  9749                           ;lcd.c: 70: RB1 = 0;
  9750  0009' 108D               	bcf	13,1	;volatile
  9751                           
  9752                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9753  000A' 30F9               	movlw	249
  9754  000B' 0081'              	movwf	??_LCD_Cmd
  9755  000C'                    u3087:	
  9756  000C' 0000               	nop
  9757  000D' 0B81'              	decfsz	??_LCD_Cmd,f
  9758  000E' 2800'              	goto	u3087
  9759  000F' 3200               	nop2	;nop
  9760  0010' 0000               	nop
  9761  0011' 0008               	return
  9762  0012'                    __end_of_LCD_Cmd:	
  9763                           
  9764                           	psect	text36
  9765  0000'                    __ptext36:	
  9766 ;; *************** function _LCD_Port *****************
  9767 ;; Defined at:
  9768 ;;		line 41 in file "lcd.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  a               1    wreg     unsigned char 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  a               1    0[COMMON] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;Total ram usage:        1 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_LCD_Cmd
  9792 ;;		_LCD_Init
  9793 ;;		_LCD_Write_Char
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           
  9798                           ;psect for function _LCD_Port
  9799  0000'                    _LCD_Port:	
  9800                           
  9801                           ;incstack = 0
  9802                           ; Regs used in _LCD_Port: [wreg]
  9803                           ;LCD_Port@a stored from wreg
  9804  0000' 0080'              	movwf	LCD_Port@a
  9805                           
  9806                           ;lcd.c: 43: if(a & 1)
  9807  0001' 1C00'              	btfss	LCD_Port@a,0
  9808  0002' 2800'              	goto	l28
  9809                           
  9810                           ;lcd.c: 44: RB2 = 1;
  9811  0003' 0020               	movlb	0	; select bank0
  9812  0004' 150D               	bsf	13,2	;volatile
  9813  0005' 2800'              	goto	l1772
  9814  0006'                    l28:	
  9815                           
  9816                           ;lcd.c: 45: else
  9817                           ;lcd.c: 46: RB2 = 0;
  9818  0006' 0020               	movlb	0	; select bank0
  9819  0007' 110D               	bcf	13,2	;volatile
  9820  0008'                    l1772:	
  9821                           
  9822                           ;lcd.c: 48: if(a & 2)
  9823  0008' 1C80'              	btfss	LCD_Port@a,1
  9824  0009' 2800'              	goto	l30
  9825                           
  9826                           ;lcd.c: 49: RB3 = 1;
  9827  000A' 158D               	bsf	13,3	;volatile
  9828  000B' 2800'              	goto	l1776
  9829  000C'                    l30:	
  9830                           
  9831                           ;lcd.c: 50: else
  9832                           ;lcd.c: 51: RB3 = 0;
  9833  000C' 118D               	bcf	13,3	;volatile
  9834  000D'                    l1776:	
  9835                           
  9836                           ;lcd.c: 53: if(a & 4)
  9837  000D' 1D00'              	btfss	LCD_Port@a,2
  9838  000E' 2800'              	goto	l32
  9839                           
  9840                           ;lcd.c: 54: RB4 = 1;
  9841  000F' 160D               	bsf	13,4	;volatile
  9842  0010' 2800'              	goto	l1780
  9843  0011'                    l32:	
  9844                           
  9845                           ;lcd.c: 55: else
  9846                           ;lcd.c: 56: RB4 = 0;
  9847  0011' 120D               	bcf	13,4	;volatile
  9848  0012'                    l1780:	
  9849                           
  9850                           ;lcd.c: 58: if(a & 8)
  9851  0012' 1D80'              	btfss	LCD_Port@a,3
  9852  0013' 2800'              	goto	l34
  9853                           
  9854                           ;lcd.c: 59: RB5 = 1;
  9855  0014' 168D               	bsf	13,5	;volatile
  9856  0015' 0008               	return
  9857  0016'                    l34:	
  9858                           
  9859                           ;lcd.c: 60: else
  9860                           ;lcd.c: 61: RB5 = 0;
  9861  0016' 128D               	bcf	13,5	;volatile
  9862  0017' 0008               	return
  9863  0018'                    __end_of_LCD_Port:	
  9864                           
  9865                           	psect	text37
  9866  0000'                    __ptext37:	
  9867 ;; *************** function _ADCC_GetSingleConversion *****************
  9868 ;; Defined at:
  9869 ;;		line 52 in file "adcc.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  channel         1    wreg     enum E13559
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  channel         1    3[COMMON] enum E13559
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  2    0[COMMON] unsigned int 
  9876 ;; Registers used:
  9877 ;;		wreg
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        4 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_main
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _ADCC_GetSingleConversion
  9898  0000'                    _ADCC_GetSingleConversion:	
  9899                           
  9900                           ;incstack = 0
  9901                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  9902                           ;ADCC_GetSingleConversion@channel stored from wreg
  9903  0000' 0083'              	movwf	ADCC_GetSingleConversion@channel
  9904                           
  9905                           ;adcc.c: 55: ADPCH = channel;
  9906  0001' 0803'              	movf	ADCC_GetSingleConversion@channel,w
  9907  0002' 0021               	movlb	1	; select bank1
  9908  0003' 009E               	movwf	30	;volatile
  9909                           
  9910                           ;adcc.c: 58: ADCON0bits.ADON = 1;
  9911  0004' 1793               	bsf	19,7	;volatile
  9912                           
  9913                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
  9914  0005' 1313               	bcf	19,6	;volatile
  9915                           
  9916                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
  9917  0006' 1413               	bsf	19,0	;volatile
  9918  0007'                    l210:	
  9919                           ;adcc.c: 68: {
  9920                           
  9921                           ;adcc.c: 67: while (ADCON0bits.ADGO)
  9922                           
  9923  0007' 1813               	btfsc	19,0	;volatile
  9924  0008' 2800'              	goto	l210
  9925                           
  9926                           ;adcc.c: 69: }
  9927                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
  9928  0009' 080D               	movf	13,w	;volatile
  9929  000A' 0081'              	movwf	?_ADCC_GetSingleConversion+1
  9930  000B' 080C               	movf	12,w	;volatile
  9931  000C' 0080'              	movwf	?_ADCC_GetSingleConversion
  9932  000D' 0008               	return
  9933  000E'                    __end_of_ADCC_GetSingleConversion:	
  9934  007E                     btemp	set	126	;btemp
  9935  007E                     wtemp	set	126
  9936  007E                     wtemp0	set	126
  9937  0080                     wtemp1	set	128
  9938  0082                     wtemp2	set	130
  9939  0084                     wtemp3	set	132
  9940  0086                     wtemp4	set	134
  9941  0088                     wtemp5	set	136
  9942  007F                     wtemp6	set	127
  9943  007E                     ttemp	set	126
  9944  007E                     ttemp0	set	126
  9945  0081                     ttemp1	set	129
  9946  0084                     ttemp2	set	132
  9947  0087                     ttemp3	set	135
  9948  007F                     ttemp4	set	127
  9949  007E                     ltemp	set	126
  9950  007E                     ltemp0	set	126
  9951  0082                     ltemp1	set	130
  9952  0086                     ltemp2	set	134
  9953  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    27
    Data        30
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      67
    BANK1            80     26      53
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftge->___ftadd
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   38065
                                             45 BANK0     10    10      0
                                              0 BANK1     26    26      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15656
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6729
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2615
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     428
                                             29 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3540
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3367
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     138
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        5     0      5      20
                                              0 COMMON     5     0      5
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     321
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2123
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     592
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
   _tempSetpoint

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      43       5       83.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      35       7       66.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      86      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      86      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Oct 05 22:18:25 2017

                      __CFG_CP$OFF 0000                                 l30 000C  
                               l32 0011                                 l34 0016  
                               l28 0006                       ___awdiv@sign 0006  
              ___wmul@multiplicand 0002        __size_of_PWM6_LoadDutyValue 0016  
                     ___ftadd@exp1 001C                       ___ftadd@exp2 001B  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 001A  
                              l210 0007                                l449 0011  
                              l562 0045                                l394 0008  
                              l563 004D                                l555 0032  
                              l646 006D                                l586 009F  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RB2 006A  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _log 0000                       ___awmod@sign 0006  
                  _TMR2_Initialize 0000                       __CFG_BORV$LO 0000  
                              wreg 0009                    __end_of_LCD_Cmd 0012  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 000A  
                   _LCD_Set_Cursor 0000                       ___ftdiv@sign 000F  
                             l2200 0017                               l2202 0023  
                             l2210 0038                               l2150 0015  
                             l2214 0040                               l2206 002F  
                             l2160 001D                               l2144 000A  
                             l2320 0021                               l2162 0029  
                             l2330 0028                               l2306 0002  
                             l2226 000A                               l2234 0017  
                             l2410 002F                               l2172 0044  
                             l2340 0067                               l2332 0055  
                             l2404 001E                               l2350 00A8  
                             l2342 0078                               l2430 0022  
                             l2238 002D                               l2176 004C  
                             l2168 003B                               l2192 0011  
                             l2336 0059                               l2440 0040  
                             l2290 0020                               l2354 00B5  
                             l2338 005E                               l1802 0037  
                             l2514 0008                               l2258 0012  
                             l2188 000A                               l2348 007C  
                             l2452 006B                               l1804 003F  
                             l1900 007E                               l2524 0019  
                             l2276 0059                               l2438 0032  
                             l2550 0064                               l2542 0049  
                             l2622 00C6                               l2456 0079  
                             l2448 0060                               l2472 002D  
                             l1912 00B1                               l2552 0070  
                             l2544 0057                               l2608 0015  
                             l2466 0017                               l1906 0091  
                             l1780 0012                               l1772 0008  
                             l1916 00C3                               l1908 009B  
                             l2556 007E                               l2494 0087  
                             l2486 006E                               l1926 00DE  
                             l1870 002F                               l2582 0026  
                             l2574 0008                               l1942 002D  
                             l2654 0253                               l1776 000D  
                             l1792 000F                               l2576 0014  
                             l1936 0017                               l1848 0002  
                             l1794 0019                               l1866 0028  
                             l2586 002F                               l1970 008C  
                             l1954 0068                               l2690 02E4  
                             l1796 001E                               l1788 0008  
                             l1876 003E                               l2684 02D5  
                             l1894 006B                               l1966 0084  
                             l1958 0070                               l1896 0075  
                             l1888 0058                               l1994 001D  
                             l1898 007A                               l2698 0324  
                             l1988 000D                               ?_log 0027  
                             STR_1 001B                               u2005 008D  
                             u2015 0093                               u2105 0020  
                             u2050 0030                               u2125 002A  
                             u2205 001A                               _LATA 0016  
                             _LATB 0017                               u2135 0034  
                             u3007 0033                               _LATC 0018  
                             u2145 003C                               u2225 0029  
                             u3017 0040                               u2235 0030  
                             u3027 004D                               u3037 005A  
                             u2335 000C                               u3047 0069  
                             u1615 0054                               u1535 0014  
                             u3057 0077                               u2370 000B  
                             _T2PR 028D                               u2355 002B  
                             u3067 001C                               u1635 0010  
                             u2435 0096                               u1555 002D  
                             u3077 0027                               u1805 006C  
                             u3087 000C                               u2535 0035  
                             u1575 003A                               u1655 0009  
                             u2625 003F                               u1665 000E  
                      main@counter 000C                               u2475 000F  
                             u2555 0041                               u2635 004F  
                             u1835 007F                               u2715 0020  
                             u2565 0055                               u2645 006F  
                             u2575 0061                               u2655 007E  
                             u1775 0059                               u2815 000B  
                             u1935 0039                               u2665 0088  
                             u1865 0092                               u2745 004A  
                             u1945 0049                               u2835 0015  
                             u2845 001F                               u1965 0071  
                             u2775 0065                               u2855 0027  
                             u1975 0077                               u2937 001C  
                             u2947 0028                               u2957 0034  
                             u2967 0009                               u2977 0016  
                             u2987 0021                               u2997 002A  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                ?_LCD_Write_String 0005                        main@minutes 0008  
                      main@seconds 000A                               _main 0000  
                     ___ftpack@arg 0000                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0003                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0027                               ltemp 007E  
                             start 0000*                ??_LCD_Write_String 0007  
                             ttemp 007E                               wtemp 007E  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 000E                      _LCD_Write_Int 0000  
                     ___ftmul@sign 000F                       ___fttol@exp1 001D  
                            ??_log 002A                       ___fttol@lval 0019  
          __end_of_TMR0_Initialize 000F                   __end_of_LCD_Init 007B  
                 __end_of_LCD_Port 0018                       ?_readButtons 0000  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 0008  
                  __end_of___aldiv 0082                              _ADACQ 009D  
                            _ADCAP 009B                              _ADACT 0099  
                            ?_main 0000                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0051                              _ADPRE 009C  
                  __end_of___ftadd 00F6                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0045                              _ADRPT 010D  
                  __end_of___ftdiv 00A9                    __end_of___ftneg 0008  
                  __end_of___ftmul 00B4                    ___awdiv@divisor 0000  
                  __end_of___ftsub 001E                    __end_of___fttol 0087  
                            _T2CON 028E                main@readTemperature 000E  
                            _T2HLT 028F                    __end_of___lwdiv 0034  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0005                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0000  
           __end_of_LCD_Set_Cursor 003F                      ___awtoft@sign 000D  
                            _frexp 0000                              _errno 0005  
                    ___ftpack@sign 0004                              main@R 0000  
                   __CFG_BOREN$OFF 0000                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0006                     ?_LCD_Write_Int 0009  
                   _LCD_Write_Char 0000                    __initialization 0000  
                      log@exponent 002B                       __end_of_main 032B  
          __end_of_TMR2_Initialize 000F                             ??_main 002D  
                    ___fttol@sign1 0018                  __end_of_LCD_Clear 0008  
                        ??_LCD_Cmd 0001                    ?_LCD_Set_Cursor 0003  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0000                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0002  
                           _ADUTHL 0110                   __end_of___awtoft 0020  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0064  
                 __end_of___lbtoft 001A                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0013  
                           _OSCFRQ 0893                             _TMR0IF 3865  
           __end_of_LCD_Write_Char 002A                     __CFG_PWRTE$OFF 0000  
                     _CCPTMRS1bits 021F                             ___ftge 0000  
           LCD_Write_Int@numPlaces 000C                          ??___aldiv 0008  
                           ___wmul 0000                          ??___awdiv 0004  
                        ??___ftadd 0016                     __CFG_STVREN$ON 0000  
                        ??___awmod 0004                          ??___ftdiv 0006  
                        ??___ftneg 0003                          ??___ftmul 0006  
                        ??___ftsub 000E                          ??___fttol 0014  
                        ??___lwdiv 000A                   ?_TMR0_Initialize 0000  
          __end_of_PWM6_Initialize 000D                   ___awdiv@quotient 0007  
                  ___awmod@divisor 0000                    ___awmod@counter 0005  
            ___ftmul@f3_as_product 000B                    _ADCC_Initialize 0000  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0000  
                 LCD_Write_Int@str 0005                      main@steinhart 0017  
                  _InitCustomChars 0000                    LCD_Set_Cursor@w 0008  
                  LCD_Set_Cursor@x 0006                    LCD_Set_Cursor@y 0003  
                  LCD_Set_Cursor@z 0007                  _SYSTEM_Initialize 0000  
                 __end_oflog@coeff 001B            __end_of__initialization 0030  
                        ?_LCD_Init 0000                          ?_LCD_Port 0000  
                       ___ftadd@f1 0010                         ___ftadd@f2 0013  
                       ___ftge@ff1 001D                         ___ftge@ff2 0020  
                  ??_LCD_Write_Int 0000                 ?_SYSTEM_Initialize 0000  
                     eval_poly@res 0024                         ___ftdiv@f1 0003  
                       ___ftdiv@f2 0000                         ___ftdiv@f3 000B  
                  ?_LCD_Write_Char 0000                         ___ftneg@f1 0000  
                    LCD_Init@style 0005                         ___awtoft@c 0008  
                       ___lbtoft@c 000B                         ___ftmul@f1 0000  
                       ___ftmul@f2 0003                         ___ftsub@f1 0020  
                       ___ftsub@f2 001D                         ___fttol@f1 0010  
                   __pcstackCOMMON 0000                          LCD_Port@a 0000  
                     __pidataBANK0 0000                       __pidataBANK1 0000  
              ??_SYSTEM_Initialize 0007                      __end_of_frexp 003B  
                 ?_TMR2_Initialize 0000                         ___lwtoft@c 0008  
                          ??_frexp 0004          __end_of_SYSTEM_Initialize 003C  
                       __pbssBANK0 0000                         __pbssBANK1 0000  
               __size_of_eval_poly 0060                          ?_Init_PID 0000  
                       ??_LCD_Init 0003                         ??_LCD_Port 0000  
                       __pmaintext 0000                            ?___ftge 001D  
                          ?___wmul 0000                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 0019         __end_of_PWM6_LoadDutyValue 0016  
        __size_of_LCD_Write_String 001A                   ?_PWM6_Initialize 0000  
                        ?___awtoft 0008                          ?___ftpack 0000  
                        ?___lbtoft 0008                            _ADSTPTH 0113  
                          _ADSTPTL 0112                          ?___lwtoft 0008  
          __end_of_InitCustomChars 0025                            _LCD_Cmd 0000  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PWM6DCH 038D  
                          _PWM6DCL 038C                            _PWM6CON 038E  
                          _PPSLOCK 0E8F                         ??_Init_PID 0000  
                    ?_tempSetpoint 0000               __CFG_SCANE$available 0000  
                          ___aldiv 0000                            ___cgram 0000  
                  __size_of___ftge 003C                            ___awdiv 0000  
                          ___ftadd 0000                            ___awmod 0000  
                          ___ftdiv 0000                            ___ftneg 0000  
                  __size_of___wmul 001B                            ___ftmul 0000  
                          ___ftsub 0000                            ___fttol 0000  
                          ___lwdiv 0000                         ??___awtoft 000B  
                       ??___ftpack 0005                         ??___lbtoft 0000  
                __end_of_eval_poly 0060                   ??_LCD_Set_Cursor 0004  
                          __ptext1 0000                            __ptext2 0000  
                          __ptext3 0000                            __ptext4 0000  
                          __ptext5 0000                            __ptext6 0000  
                          __ptext7 0000                            __ptext8 0000  
                          __ptext9 0000                         ??___lwtoft 000B  
                    _PID_Calculate 0000*             _OSCILLATOR_Initialize 0000  
                        _T2CONbits 028E                       __size_of_log 00AD  
                 ___awmod@dividend 0002                   ___aldiv@dividend 0004  
         ??_PIN_MANAGER_Initialize 0000                            _samples 238C  
                        _LCD_Clear 0000                            _presets 0000  
       __size_of_SYSTEM_Initialize 003C                            clrloop0 0001  
             end_of_initialization 0030                            init_ram 0000  
                          initloop 0001                     ??_tempSetpoint 0000  
                 ___aldiv@quotient 0002                  LCD_Write_Int@sign 000D  
                     __pstringtext 0000                   ?_ADCC_Initialize 0000  
 __end_of_ADCC_GetSingleConversion 000E              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0000                   ?_InitCustomChars 0000  
                       ?_LCD_Clear 0000                   __CFG_FEXTOSC$OFF 0000  
                LCD_Write_String@a 0005                  LCD_Write_String@i 0008  
                 ??_LCD_Write_Char 0001                        ___ftdiv@exp 000E  
                __size_of_LCD_Init 007B                         main@toggle 0010  
                __size_of_LCD_Port 0018                         main@totals 0013  
                      ___ftmul@exp 000A                     __end_of___ftge 003C  
                   __end_of___wmul 001B                   _LCD_Write_String 0000  
           ?_OSCILLATOR_Initialize 0000                start_initialization 0000  
                       eval_poly@d 0020                         eval_poly@n 0022  
                       eval_poly@x 001D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 00AD  
                       frexp@value 0000           LCD_Write_Int@fieldLength 000B  
            __end_of_LCD_Write_Int 00C9                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0023                           ??___wmul 0004  
                      __pdataBANK0 0000                        __pdataBANK1 0000  
                  ??_PID_Calculate 0005                      ??_readButtons 0000  
                  LCD_Write_Char@a 0004                    LCD_Write_Char@y 0003  
                         ?_LCD_Cmd 0000                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 0000                  __size_of___ftpack 0064  
                __size_of___lbtoft 001A                        __pbssBIGRAM 238C  
                         LCD_Cmd@a 0002                          ___latbits 0002  
                __size_of___lwtoft 0013                      __pcstackBANK0 0000  
                    __pcstackBANK1 0000                 _PWM6_LoadDutyValue 0000  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0003  
              ?_PWM6_LoadDutyValue 0000                          _main$1015 0003  
                 ___lwdiv@dividend 0008             _PIN_MANAGER_Initialize 0000  
                         ?___aldiv 0000    ADCC_GetSingleConversion@channel 0003  
                         ?___awdiv 0000                           ?___ftadd 0010  
                         ?___awmod 0000                           ?___ftdiv 0000  
                         ?___ftneg 0000                           ?___ftmul 0000  
                         ?___ftsub 001D                           ?___fttol 0010  
                         ?___lwdiv 0006                    main@displayTemp 0011  
             ??_PWM6_LoadDutyValue 0002                    _PID_Calculate$0 0000  
                  _PID_Calculate$1 0002                          _eval_poly 0000  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 000B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
                  ___aldiv@divisor 0000                  ??_TMR0_Initialize 0000  
                  ___aldiv@counter 0000                           _LCD_Init 0000  
                   ___wmul@product 0004                           _LCD_Port 0000  
                        clear_ram0 0000                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0000  
                       ?_eval_poly 001D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 001A                           _Init_PID 0000* 
                ??_TMR2_Initialize 0000                          frexp@eptr 0003  
          ??_OSCILLATOR_Initialize 0000                     LCD_Write_Int@i 000C  
                   LCD_Write_Int@j 000A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0000* 
                         ___awtoft 0000                           ___ftpack 0000  
                         ___lbtoft 0000                           ___lwtoft 0000  
                       _T0CON0bits 001E           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 0000                    ___lwdiv@divisor 0006  
                  ___lwdiv@counter 000D                           __ptext10 0000  
                         __ptext11 0000                           __ptext20 0000  
                         __ptext12 0000                           __ptext21 0000  
                         __ptext13 0000                           __ptext30 0000  
                         __ptext22 0000                           __ptext14 0000  
                         __ptext31 0000                           __ptext23 0000  
                         __ptext15 0000                           __ptext32 0000  
                         __ptext24 0000                           __ptext16 0000  
                         __ptext33 0000                           __ptext25 0000  
                         __ptext17 0000                           __ptext34 0000  
                         __ptext26 0000                           __ptext18 0000  
                         __ptext35 0000                           __ptext27 0000  
                         __ptext19 0000                           __ptext36 0000  
                         __ptext28 0000                           __ptext37 0000  
                         __ptext29 0000            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13694 0000  
                ??_PWM6_Initialize 0000                      __size_of_main 032B  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 0000* 
       ??_ADCC_GetSingleConversion 0003                           _setpoint 0018  
      PIN_MANAGER_Initialize@state 0000                           log@coeff 0000  
                      ??_eval_poly 000E                 LCD_Write_Char@temp 0002  
          ?_PIN_MANAGER_Initialize 0000                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
               LCD_Set_Cursor@temp 0009                 LCD_Write_Int@value 0009  
                  _TMR0_Initialize 0000                       ___aldiv@sign 0001  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0000  
   __end_of_PIN_MANAGER_Initialize 0032                  ??_ADCC_Initialize 0000  
                   main@PWM_Output 0006                  ??_InitCustomChars 0005  
