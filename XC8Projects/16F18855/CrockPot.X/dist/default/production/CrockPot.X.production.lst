

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Oct 05 22:34:07 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5BC,52
    63                           	dabs	1,0x238C,0,_samples
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.44
    67                           ; Generated 14/09/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F18855 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  001C                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0110                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  018E                     	;# 
   194  018F                     	;# 
   195  0190                     	;# 
   196  0191                     	;# 
   197  0192                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200  0198                     	;# 
   201  0199                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019C                     	;# 
   205  020C                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  020E                     	;# 
   209  020F                     	;# 
   210  020F                     	;# 
   211  0210                     	;# 
   212  0210                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0218                     	;# 
   226  0218                     	;# 
   227  0219                     	;# 
   228  021A                     	;# 
   229  021B                     	;# 
   230  021B                     	;# 
   231  021C                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028D                     	;# 
   241  028E                     	;# 
   242  028F                     	;# 
   243  0290                     	;# 
   244  0290                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0293                     	;# 
   250  0294                     	;# 
   251  0295                     	;# 
   252  0296                     	;# 
   253  0296                     	;# 
   254  0297                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029C                     	;# 
   263  029D                     	;# 
   264  030C                     	;# 
   265  030C                     	;# 
   266  030D                     	;# 
   267  030E                     	;# 
   268  030F                     	;# 
   269  0310                     	;# 
   270  0310                     	;# 
   271  0311                     	;# 
   272  0312                     	;# 
   273  0313                     	;# 
   274  0314                     	;# 
   275  0314                     	;# 
   276  0315                     	;# 
   277  0316                     	;# 
   278  0317                     	;# 
   279  0318                     	;# 
   280  0318                     	;# 
   281  0319                     	;# 
   282  031A                     	;# 
   283  031B                     	;# 
   284  031C                     	;# 
   285  031C                     	;# 
   286  031D                     	;# 
   287  031E                     	;# 
   288  031F                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  038E                     	;# 
   292  0390                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  040C                     	;# 
   296  040D                     	;# 
   297  040E                     	;# 
   298  040F                     	;# 
   299  0410                     	;# 
   300  0411                     	;# 
   301  0416                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  0418                     	;# 
   305  0418                     	;# 
   306  0419                     	;# 
   307  041A                     	;# 
   308  041A                     	;# 
   309  041B                     	;# 
   310  041C                     	;# 
   311  041C                     	;# 
   312  041D                     	;# 
   313  041E                     	;# 
   314  041F                     	;# 
   315  048C                     	;# 
   316  048C                     	;# 
   317  048D                     	;# 
   318  048E                     	;# 
   319  048F                     	;# 
   320  048F                     	;# 
   321  0490                     	;# 
   322  0491                     	;# 
   323  0492                     	;# 
   324  0492                     	;# 
   325  0493                     	;# 
   326  0494                     	;# 
   327  0495                     	;# 
   328  0495                     	;# 
   329  0496                     	;# 
   330  0497                     	;# 
   331  0498                     	;# 
   332  0499                     	;# 
   333  049A                     	;# 
   334  049B                     	;# 
   335  049C                     	;# 
   336  049D                     	;# 
   337  050C                     	;# 
   338  050C                     	;# 
   339  050D                     	;# 
   340  050E                     	;# 
   341  050F                     	;# 
   342  050F                     	;# 
   343  0510                     	;# 
   344  0511                     	;# 
   345  0512                     	;# 
   346  0512                     	;# 
   347  0513                     	;# 
   348  0514                     	;# 
   349  0515                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  051B                     	;# 
   357  051C                     	;# 
   358  051D                     	;# 
   359  058C                     	;# 
   360  058C                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  0590                     	;# 
   366  0591                     	;# 
   367  0592                     	;# 
   368  0593                     	;# 
   369  060C                     	;# 
   370  060D                     	;# 
   371  060E                     	;# 
   372  060F                     	;# 
   373  0610                     	;# 
   374  0611                     	;# 
   375  0612                     	;# 
   376  0613                     	;# 
   377  0614                     	;# 
   378  0616                     	;# 
   379  0617                     	;# 
   380  0618                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061D                     	;# 
   386  061E                     	;# 
   387  068C                     	;# 
   388  068D                     	;# 
   389  068E                     	;# 
   390  068F                     	;# 
   391  0690                     	;# 
   392  0691                     	;# 
   393  0692                     	;# 
   394  0693                     	;# 
   395  0694                     	;# 
   396  070C                     	;# 
   397  070D                     	;# 
   398  070E                     	;# 
   399  070F                     	;# 
   400  0710                     	;# 
   401  0711                     	;# 
   402  0712                     	;# 
   403  0713                     	;# 
   404  0714                     	;# 
   405  0716                     	;# 
   406  0717                     	;# 
   407  0718                     	;# 
   408  0719                     	;# 
   409  071A                     	;# 
   410  071B                     	;# 
   411  071C                     	;# 
   412  071D                     	;# 
   413  071E                     	;# 
   414  0796                     	;# 
   415  0797                     	;# 
   416  0798                     	;# 
   417  0799                     	;# 
   418  079A                     	;# 
   419  079B                     	;# 
   420  080C                     	;# 
   421  080D                     	;# 
   422  080E                     	;# 
   423  080F                     	;# 
   424  0810                     	;# 
   425  0811                     	;# 
   426  0812                     	;# 
   427  0813                     	;# 
   428  0814                     	;# 
   429  081A                     	;# 
   430  081B                     	;# 
   431  081C                     	;# 
   432  081D                     	;# 
   433  081E                     	;# 
   434  081F                     	;# 
   435  088C                     	;# 
   436  088D                     	;# 
   437  088E                     	;# 
   438  088F                     	;# 
   439  0890                     	;# 
   440  0891                     	;# 
   441  0892                     	;# 
   442  0893                     	;# 
   443  0895                     	;# 
   444  0896                     	;# 
   445  0897                     	;# 
   446  0898                     	;# 
   447  0899                     	;# 
   448  089A                     	;# 
   449  089B                     	;# 
   450  090C                     	;# 
   451  090E                     	;# 
   452  090F                     	;# 
   453  091F                     	;# 
   454  091F                     	;# 
   455  098F                     	;# 
   456  098F                     	;# 
   457  0990                     	;# 
   458  0991                     	;# 
   459  0992                     	;# 
   460  0993                     	;# 
   461  0994                     	;# 
   462  0995                     	;# 
   463  0996                     	;# 
   464  0997                     	;# 
   465  0E0F                     	;# 
   466  0E10                     	;# 
   467  0E11                     	;# 
   468  0E12                     	;# 
   469  0E13                     	;# 
   470  0E14                     	;# 
   471  0E15                     	;# 
   472  0E16                     	;# 
   473  0E17                     	;# 
   474  0E18                     	;# 
   475  0E19                     	;# 
   476  0E1A                     	;# 
   477  0E1B                     	;# 
   478  0E1C                     	;# 
   479  0E1D                     	;# 
   480  0E1E                     	;# 
   481  0E1F                     	;# 
   482  0E20                     	;# 
   483  0E21                     	;# 
   484  0E22                     	;# 
   485  0E23                     	;# 
   486  0E24                     	;# 
   487  0E25                     	;# 
   488  0E26                     	;# 
   489  0E27                     	;# 
   490  0E28                     	;# 
   491  0E29                     	;# 
   492  0E2A                     	;# 
   493  0E2B                     	;# 
   494  0E2C                     	;# 
   495  0E2D                     	;# 
   496  0E2E                     	;# 
   497  0E2F                     	;# 
   498  0E30                     	;# 
   499  0E31                     	;# 
   500  0E32                     	;# 
   501  0E33                     	;# 
   502  0E34                     	;# 
   503  0E35                     	;# 
   504  0E36                     	;# 
   505  0E37                     	;# 
   506  0E8F                     	;# 
   507  0E90                     	;# 
   508  0E91                     	;# 
   509  0E92                     	;# 
   510  0E93                     	;# 
   511  0E94                     	;# 
   512  0E95                     	;# 
   513  0E96                     	;# 
   514  0E97                     	;# 
   515  0E9C                     	;# 
   516  0E9D                     	;# 
   517  0E9E                     	;# 
   518  0EA1                     	;# 
   519  0EA2                     	;# 
   520  0EA3                     	;# 
   521  0EA4                     	;# 
   522  0EA5                     	;# 
   523  0EA9                     	;# 
   524  0EAA                     	;# 
   525  0EAB                     	;# 
   526  0EAC                     	;# 
   527  0EB1                     	;# 
   528  0EB2                     	;# 
   529  0EB3                     	;# 
   530  0EB8                     	;# 
   531  0EB9                     	;# 
   532  0EBA                     	;# 
   533  0EBB                     	;# 
   534  0EBC                     	;# 
   535  0EBD                     	;# 
   536  0EBE                     	;# 
   537  0EC3                     	;# 
   538  0EC5                     	;# 
   539  0EC6                     	;# 
   540  0EC7                     	;# 
   541  0EC8                     	;# 
   542  0EC9                     	;# 
   543  0ECA                     	;# 
   544  0ECB                     	;# 
   545  0ECC                     	;# 
   546  0F10                     	;# 
   547  0F11                     	;# 
   548  0F12                     	;# 
   549  0F13                     	;# 
   550  0F14                     	;# 
   551  0F15                     	;# 
   552  0F16                     	;# 
   553  0F17                     	;# 
   554  0F18                     	;# 
   555  0F19                     	;# 
   556  0F1A                     	;# 
   557  0F1B                     	;# 
   558  0F1C                     	;# 
   559  0F1D                     	;# 
   560  0F1E                     	;# 
   561  0F1F                     	;# 
   562  0F20                     	;# 
   563  0F21                     	;# 
   564  0F22                     	;# 
   565  0F23                     	;# 
   566  0F24                     	;# 
   567  0F25                     	;# 
   568  0F26                     	;# 
   569  0F27                     	;# 
   570  0F38                     	;# 
   571  0F39                     	;# 
   572  0F3A                     	;# 
   573  0F3B                     	;# 
   574  0F3C                     	;# 
   575  0F3D                     	;# 
   576  0F3E                     	;# 
   577  0F3F                     	;# 
   578  0F40                     	;# 
   579  0F41                     	;# 
   580  0F43                     	;# 
   581  0F44                     	;# 
   582  0F45                     	;# 
   583  0F46                     	;# 
   584  0F47                     	;# 
   585  0F48                     	;# 
   586  0F49                     	;# 
   587  0F4A                     	;# 
   588  0F4B                     	;# 
   589  0F4C                     	;# 
   590  0F4E                     	;# 
   591  0F4F                     	;# 
   592  0F50                     	;# 
   593  0F51                     	;# 
   594  0F52                     	;# 
   595  0F53                     	;# 
   596  0F54                     	;# 
   597  0F55                     	;# 
   598  0F56                     	;# 
   599  0F57                     	;# 
   600  0F65                     	;# 
   601  0F68                     	;# 
   602  0F69                     	;# 
   603  0F6A                     	;# 
   604  0F6B                     	;# 
   605  0FE4                     	;# 
   606  0FE5                     	;# 
   607  0FE6                     	;# 
   608  0FE7                     	;# 
   609  0FE8                     	;# 
   610  0FE9                     	;# 
   611  0FEA                     	;# 
   612  0FEB                     	;# 
   613  0FED                     	;# 
   614  0FEE                     	;# 
   615  0FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  0010                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0013                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  001C                     	;# 
   639  001C                     	;# 
   640  001D                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  008C                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008E                     	;# 
   649  008F                     	;# 
   650  0090                     	;# 
   651  0090                     	;# 
   652  0091                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  010C                     	;# 
   666  010D                     	;# 
   667  010E                     	;# 
   668  010E                     	;# 
   669  010F                     	;# 
   670  0110                     	;# 
   671  0110                     	;# 
   672  0111                     	;# 
   673  0112                     	;# 
   674  0112                     	;# 
   675  0113                     	;# 
   676  0114                     	;# 
   677  0114                     	;# 
   678  0115                     	;# 
   679  0116                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0119                     	;# 
   683  0119                     	;# 
   684  0119                     	;# 
   685  011A                     	;# 
   686  011A                     	;# 
   687  011A                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011C                     	;# 
   694  011C                     	;# 
   695  011C                     	;# 
   696  011D                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  011E                     	;# 
   700  011E                     	;# 
   701  011E                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  018F                     	;# 
   711  0190                     	;# 
   712  0191                     	;# 
   713  0192                     	;# 
   714  0196                     	;# 
   715  0197                     	;# 
   716  0198                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  020C                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  020E                     	;# 
   725  020F                     	;# 
   726  020F                     	;# 
   727  0210                     	;# 
   728  0210                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0218                     	;# 
   742  0218                     	;# 
   743  0219                     	;# 
   744  021A                     	;# 
   745  021B                     	;# 
   746  021B                     	;# 
   747  021C                     	;# 
   748  021C                     	;# 
   749  021D                     	;# 
   750  021D                     	;# 
   751  021E                     	;# 
   752  021F                     	;# 
   753  028C                     	;# 
   754  028C                     	;# 
   755  028D                     	;# 
   756  028D                     	;# 
   757  028E                     	;# 
   758  028F                     	;# 
   759  0290                     	;# 
   760  0290                     	;# 
   761  0291                     	;# 
   762  0292                     	;# 
   763  0292                     	;# 
   764  0293                     	;# 
   765  0293                     	;# 
   766  0294                     	;# 
   767  0295                     	;# 
   768  0296                     	;# 
   769  0296                     	;# 
   770  0297                     	;# 
   771  0298                     	;# 
   772  0298                     	;# 
   773  0299                     	;# 
   774  0299                     	;# 
   775  029A                     	;# 
   776  029B                     	;# 
   777  029C                     	;# 
   778  029C                     	;# 
   779  029D                     	;# 
   780  030C                     	;# 
   781  030C                     	;# 
   782  030D                     	;# 
   783  030E                     	;# 
   784  030F                     	;# 
   785  0310                     	;# 
   786  0310                     	;# 
   787  0311                     	;# 
   788  0312                     	;# 
   789  0313                     	;# 
   790  0314                     	;# 
   791  0314                     	;# 
   792  0315                     	;# 
   793  0316                     	;# 
   794  0317                     	;# 
   795  0318                     	;# 
   796  0318                     	;# 
   797  0319                     	;# 
   798  031A                     	;# 
   799  031B                     	;# 
   800  031C                     	;# 
   801  031C                     	;# 
   802  031D                     	;# 
   803  031E                     	;# 
   804  031F                     	;# 
   805  038C                     	;# 
   806  038D                     	;# 
   807  038E                     	;# 
   808  0390                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  040C                     	;# 
   812  040D                     	;# 
   813  040E                     	;# 
   814  040F                     	;# 
   815  0410                     	;# 
   816  0411                     	;# 
   817  0416                     	;# 
   818  0416                     	;# 
   819  0417                     	;# 
   820  0418                     	;# 
   821  0418                     	;# 
   822  0419                     	;# 
   823  041A                     	;# 
   824  041A                     	;# 
   825  041B                     	;# 
   826  041C                     	;# 
   827  041C                     	;# 
   828  041D                     	;# 
   829  041E                     	;# 
   830  041F                     	;# 
   831  048C                     	;# 
   832  048C                     	;# 
   833  048D                     	;# 
   834  048E                     	;# 
   835  048F                     	;# 
   836  048F                     	;# 
   837  0490                     	;# 
   838  0491                     	;# 
   839  0492                     	;# 
   840  0492                     	;# 
   841  0493                     	;# 
   842  0494                     	;# 
   843  0495                     	;# 
   844  0495                     	;# 
   845  0496                     	;# 
   846  0497                     	;# 
   847  0498                     	;# 
   848  0499                     	;# 
   849  049A                     	;# 
   850  049B                     	;# 
   851  049C                     	;# 
   852  049D                     	;# 
   853  050C                     	;# 
   854  050C                     	;# 
   855  050D                     	;# 
   856  050E                     	;# 
   857  050F                     	;# 
   858  050F                     	;# 
   859  0510                     	;# 
   860  0511                     	;# 
   861  0512                     	;# 
   862  0512                     	;# 
   863  0513                     	;# 
   864  0514                     	;# 
   865  0515                     	;# 
   866  0515                     	;# 
   867  0516                     	;# 
   868  0517                     	;# 
   869  0518                     	;# 
   870  0519                     	;# 
   871  051A                     	;# 
   872  051B                     	;# 
   873  051C                     	;# 
   874  051D                     	;# 
   875  058C                     	;# 
   876  058C                     	;# 
   877  058D                     	;# 
   878  058E                     	;# 
   879  058F                     	;# 
   880  058F                     	;# 
   881  0590                     	;# 
   882  0591                     	;# 
   883  0592                     	;# 
   884  0593                     	;# 
   885  060C                     	;# 
   886  060D                     	;# 
   887  060E                     	;# 
   888  060F                     	;# 
   889  0610                     	;# 
   890  0611                     	;# 
   891  0612                     	;# 
   892  0613                     	;# 
   893  0614                     	;# 
   894  0616                     	;# 
   895  0617                     	;# 
   896  0618                     	;# 
   897  0619                     	;# 
   898  061A                     	;# 
   899  061B                     	;# 
   900  061C                     	;# 
   901  061D                     	;# 
   902  061E                     	;# 
   903  068C                     	;# 
   904  068D                     	;# 
   905  068E                     	;# 
   906  068F                     	;# 
   907  0690                     	;# 
   908  0691                     	;# 
   909  0692                     	;# 
   910  0693                     	;# 
   911  0694                     	;# 
   912  070C                     	;# 
   913  070D                     	;# 
   914  070E                     	;# 
   915  070F                     	;# 
   916  0710                     	;# 
   917  0711                     	;# 
   918  0712                     	;# 
   919  0713                     	;# 
   920  0714                     	;# 
   921  0716                     	;# 
   922  0717                     	;# 
   923  0718                     	;# 
   924  0719                     	;# 
   925  071A                     	;# 
   926  071B                     	;# 
   927  071C                     	;# 
   928  071D                     	;# 
   929  071E                     	;# 
   930  0796                     	;# 
   931  0797                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  079B                     	;# 
   936  080C                     	;# 
   937  080D                     	;# 
   938  080E                     	;# 
   939  080F                     	;# 
   940  0810                     	;# 
   941  0811                     	;# 
   942  0812                     	;# 
   943  0813                     	;# 
   944  0814                     	;# 
   945  081A                     	;# 
   946  081B                     	;# 
   947  081C                     	;# 
   948  081D                     	;# 
   949  081E                     	;# 
   950  081F                     	;# 
   951  088C                     	;# 
   952  088D                     	;# 
   953  088E                     	;# 
   954  088F                     	;# 
   955  0890                     	;# 
   956  0891                     	;# 
   957  0892                     	;# 
   958  0893                     	;# 
   959  0895                     	;# 
   960  0896                     	;# 
   961  0897                     	;# 
   962  0898                     	;# 
   963  0899                     	;# 
   964  089A                     	;# 
   965  089B                     	;# 
   966  090C                     	;# 
   967  090E                     	;# 
   968  090F                     	;# 
   969  091F                     	;# 
   970  091F                     	;# 
   971  098F                     	;# 
   972  098F                     	;# 
   973  0990                     	;# 
   974  0991                     	;# 
   975  0992                     	;# 
   976  0993                     	;# 
   977  0994                     	;# 
   978  0995                     	;# 
   979  0996                     	;# 
   980  0997                     	;# 
   981  0E0F                     	;# 
   982  0E10                     	;# 
   983  0E11                     	;# 
   984  0E12                     	;# 
   985  0E13                     	;# 
   986  0E14                     	;# 
   987  0E15                     	;# 
   988  0E16                     	;# 
   989  0E17                     	;# 
   990  0E18                     	;# 
   991  0E19                     	;# 
   992  0E1A                     	;# 
   993  0E1B                     	;# 
   994  0E1C                     	;# 
   995  0E1D                     	;# 
   996  0E1E                     	;# 
   997  0E1F                     	;# 
   998  0E20                     	;# 
   999  0E21                     	;# 
  1000  0E22                     	;# 
  1001  0E23                     	;# 
  1002  0E24                     	;# 
  1003  0E25                     	;# 
  1004  0E26                     	;# 
  1005  0E27                     	;# 
  1006  0E28                     	;# 
  1007  0E29                     	;# 
  1008  0E2A                     	;# 
  1009  0E2B                     	;# 
  1010  0E2C                     	;# 
  1011  0E2D                     	;# 
  1012  0E2E                     	;# 
  1013  0E2F                     	;# 
  1014  0E30                     	;# 
  1015  0E31                     	;# 
  1016  0E32                     	;# 
  1017  0E33                     	;# 
  1018  0E34                     	;# 
  1019  0E35                     	;# 
  1020  0E36                     	;# 
  1021  0E37                     	;# 
  1022  0E8F                     	;# 
  1023  0E90                     	;# 
  1024  0E91                     	;# 
  1025  0E92                     	;# 
  1026  0E93                     	;# 
  1027  0E94                     	;# 
  1028  0E95                     	;# 
  1029  0E96                     	;# 
  1030  0E97                     	;# 
  1031  0E9C                     	;# 
  1032  0E9D                     	;# 
  1033  0E9E                     	;# 
  1034  0EA1                     	;# 
  1035  0EA2                     	;# 
  1036  0EA3                     	;# 
  1037  0EA4                     	;# 
  1038  0EA5                     	;# 
  1039  0EA9                     	;# 
  1040  0EAA                     	;# 
  1041  0EAB                     	;# 
  1042  0EAC                     	;# 
  1043  0EB1                     	;# 
  1044  0EB2                     	;# 
  1045  0EB3                     	;# 
  1046  0EB8                     	;# 
  1047  0EB9                     	;# 
  1048  0EBA                     	;# 
  1049  0EBB                     	;# 
  1050  0EBC                     	;# 
  1051  0EBD                     	;# 
  1052  0EBE                     	;# 
  1053  0EC3                     	;# 
  1054  0EC5                     	;# 
  1055  0EC6                     	;# 
  1056  0EC7                     	;# 
  1057  0EC8                     	;# 
  1058  0EC9                     	;# 
  1059  0ECA                     	;# 
  1060  0ECB                     	;# 
  1061  0ECC                     	;# 
  1062  0F10                     	;# 
  1063  0F11                     	;# 
  1064  0F12                     	;# 
  1065  0F13                     	;# 
  1066  0F14                     	;# 
  1067  0F15                     	;# 
  1068  0F16                     	;# 
  1069  0F17                     	;# 
  1070  0F18                     	;# 
  1071  0F19                     	;# 
  1072  0F1A                     	;# 
  1073  0F1B                     	;# 
  1074  0F1C                     	;# 
  1075  0F1D                     	;# 
  1076  0F1E                     	;# 
  1077  0F1F                     	;# 
  1078  0F20                     	;# 
  1079  0F21                     	;# 
  1080  0F22                     	;# 
  1081  0F23                     	;# 
  1082  0F24                     	;# 
  1083  0F25                     	;# 
  1084  0F26                     	;# 
  1085  0F27                     	;# 
  1086  0F38                     	;# 
  1087  0F39                     	;# 
  1088  0F3A                     	;# 
  1089  0F3B                     	;# 
  1090  0F3C                     	;# 
  1091  0F3D                     	;# 
  1092  0F3E                     	;# 
  1093  0F3F                     	;# 
  1094  0F40                     	;# 
  1095  0F41                     	;# 
  1096  0F43                     	;# 
  1097  0F44                     	;# 
  1098  0F45                     	;# 
  1099  0F46                     	;# 
  1100  0F47                     	;# 
  1101  0F48                     	;# 
  1102  0F49                     	;# 
  1103  0F4A                     	;# 
  1104  0F4B                     	;# 
  1105  0F4C                     	;# 
  1106  0F4E                     	;# 
  1107  0F4F                     	;# 
  1108  0F50                     	;# 
  1109  0F51                     	;# 
  1110  0F52                     	;# 
  1111  0F53                     	;# 
  1112  0F54                     	;# 
  1113  0F55                     	;# 
  1114  0F56                     	;# 
  1115  0F57                     	;# 
  1116  0F65                     	;# 
  1117  0F68                     	;# 
  1118  0F69                     	;# 
  1119  0F6A                     	;# 
  1120  0F6B                     	;# 
  1121  0FE4                     	;# 
  1122  0FE5                     	;# 
  1123  0FE6                     	;# 
  1124  0FE7                     	;# 
  1125  0FE8                     	;# 
  1126  0FE9                     	;# 
  1127  0FEA                     	;# 
  1128  0FEB                     	;# 
  1129  0FED                     	;# 
  1130  0FEE                     	;# 
  1131  0FEF                     	;# 
  1132  0000                     	;# 
  1133  0001                     	;# 
  1134  0002                     	;# 
  1135  0003                     	;# 
  1136  0004                     	;# 
  1137  0005                     	;# 
  1138  0006                     	;# 
  1139  0007                     	;# 
  1140  0008                     	;# 
  1141  0009                     	;# 
  1142  000A                     	;# 
  1143  000B                     	;# 
  1144  000C                     	;# 
  1145  000D                     	;# 
  1146  000E                     	;# 
  1147  0010                     	;# 
  1148  0011                     	;# 
  1149  0012                     	;# 
  1150  0013                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  001C                     	;# 
  1155  001C                     	;# 
  1156  001D                     	;# 
  1157  001D                     	;# 
  1158  001E                     	;# 
  1159  001F                     	;# 
  1160  008C                     	;# 
  1161  008C                     	;# 
  1162  008D                     	;# 
  1163  008E                     	;# 
  1164  008E                     	;# 
  1165  008F                     	;# 
  1166  0090                     	;# 
  1167  0090                     	;# 
  1168  0091                     	;# 
  1169  0093                     	;# 
  1170  0094                     	;# 
  1171  0095                     	;# 
  1172  0096                     	;# 
  1173  0097                     	;# 
  1174  0098                     	;# 
  1175  0099                     	;# 
  1176  009A                     	;# 
  1177  009B                     	;# 
  1178  009C                     	;# 
  1179  009D                     	;# 
  1180  009E                     	;# 
  1181  010C                     	;# 
  1182  010D                     	;# 
  1183  010E                     	;# 
  1184  010E                     	;# 
  1185  010F                     	;# 
  1186  0110                     	;# 
  1187  0110                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0112                     	;# 
  1191  0113                     	;# 
  1192  0114                     	;# 
  1193  0114                     	;# 
  1194  0115                     	;# 
  1195  0116                     	;# 
  1196  0116                     	;# 
  1197  0117                     	;# 
  1198  0119                     	;# 
  1199  0119                     	;# 
  1200  0119                     	;# 
  1201  011A                     	;# 
  1202  011A                     	;# 
  1203  011A                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011C                     	;# 
  1210  011C                     	;# 
  1211  011C                     	;# 
  1212  011D                     	;# 
  1213  011D                     	;# 
  1214  011D                     	;# 
  1215  011E                     	;# 
  1216  011E                     	;# 
  1217  011E                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  018C                     	;# 
  1224  018D                     	;# 
  1225  018E                     	;# 
  1226  018F                     	;# 
  1227  0190                     	;# 
  1228  0191                     	;# 
  1229  0192                     	;# 
  1230  0196                     	;# 
  1231  0197                     	;# 
  1232  0198                     	;# 
  1233  0199                     	;# 
  1234  019A                     	;# 
  1235  019B                     	;# 
  1236  019C                     	;# 
  1237  020C                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  020F                     	;# 
  1242  020F                     	;# 
  1243  0210                     	;# 
  1244  0210                     	;# 
  1245  0211                     	;# 
  1246  0211                     	;# 
  1247  0212                     	;# 
  1248  0212                     	;# 
  1249  0213                     	;# 
  1250  0214                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0216                     	;# 
  1254  0216                     	;# 
  1255  0217                     	;# 
  1256  0217                     	;# 
  1257  0218                     	;# 
  1258  0218                     	;# 
  1259  0219                     	;# 
  1260  021A                     	;# 
  1261  021B                     	;# 
  1262  021B                     	;# 
  1263  021C                     	;# 
  1264  021C                     	;# 
  1265  021D                     	;# 
  1266  021D                     	;# 
  1267  021E                     	;# 
  1268  021F                     	;# 
  1269  028C                     	;# 
  1270  028C                     	;# 
  1271  028D                     	;# 
  1272  028D                     	;# 
  1273  028E                     	;# 
  1274  028F                     	;# 
  1275  0290                     	;# 
  1276  0290                     	;# 
  1277  0291                     	;# 
  1278  0292                     	;# 
  1279  0292                     	;# 
  1280  0293                     	;# 
  1281  0293                     	;# 
  1282  0294                     	;# 
  1283  0295                     	;# 
  1284  0296                     	;# 
  1285  0296                     	;# 
  1286  0297                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  029B                     	;# 
  1293  029C                     	;# 
  1294  029C                     	;# 
  1295  029D                     	;# 
  1296  030C                     	;# 
  1297  030C                     	;# 
  1298  030D                     	;# 
  1299  030E                     	;# 
  1300  030F                     	;# 
  1301  0310                     	;# 
  1302  0310                     	;# 
  1303  0311                     	;# 
  1304  0312                     	;# 
  1305  0313                     	;# 
  1306  0314                     	;# 
  1307  0314                     	;# 
  1308  0315                     	;# 
  1309  0316                     	;# 
  1310  0317                     	;# 
  1311  0318                     	;# 
  1312  0318                     	;# 
  1313  0319                     	;# 
  1314  031A                     	;# 
  1315  031B                     	;# 
  1316  031C                     	;# 
  1317  031C                     	;# 
  1318  031D                     	;# 
  1319  031E                     	;# 
  1320  031F                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  038E                     	;# 
  1324  0390                     	;# 
  1325  0391                     	;# 
  1326  0392                     	;# 
  1327  040C                     	;# 
  1328  040D                     	;# 
  1329  040E                     	;# 
  1330  040F                     	;# 
  1331  0410                     	;# 
  1332  0411                     	;# 
  1333  0416                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  0418                     	;# 
  1337  0418                     	;# 
  1338  0419                     	;# 
  1339  041A                     	;# 
  1340  041A                     	;# 
  1341  041B                     	;# 
  1342  041C                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  041F                     	;# 
  1347  048C                     	;# 
  1348  048C                     	;# 
  1349  048D                     	;# 
  1350  048E                     	;# 
  1351  048F                     	;# 
  1352  048F                     	;# 
  1353  0490                     	;# 
  1354  0491                     	;# 
  1355  0492                     	;# 
  1356  0492                     	;# 
  1357  0493                     	;# 
  1358  0494                     	;# 
  1359  0495                     	;# 
  1360  0495                     	;# 
  1361  0496                     	;# 
  1362  0497                     	;# 
  1363  0498                     	;# 
  1364  0499                     	;# 
  1365  049A                     	;# 
  1366  049B                     	;# 
  1367  049C                     	;# 
  1368  049D                     	;# 
  1369  050C                     	;# 
  1370  050C                     	;# 
  1371  050D                     	;# 
  1372  050E                     	;# 
  1373  050F                     	;# 
  1374  050F                     	;# 
  1375  0510                     	;# 
  1376  0511                     	;# 
  1377  0512                     	;# 
  1378  0512                     	;# 
  1379  0513                     	;# 
  1380  0514                     	;# 
  1381  0515                     	;# 
  1382  0515                     	;# 
  1383  0516                     	;# 
  1384  0517                     	;# 
  1385  0518                     	;# 
  1386  0519                     	;# 
  1387  051A                     	;# 
  1388  051B                     	;# 
  1389  051C                     	;# 
  1390  051D                     	;# 
  1391  058C                     	;# 
  1392  058C                     	;# 
  1393  058D                     	;# 
  1394  058E                     	;# 
  1395  058F                     	;# 
  1396  058F                     	;# 
  1397  0590                     	;# 
  1398  0591                     	;# 
  1399  0592                     	;# 
  1400  0593                     	;# 
  1401  060C                     	;# 
  1402  060D                     	;# 
  1403  060E                     	;# 
  1404  060F                     	;# 
  1405  0610                     	;# 
  1406  0611                     	;# 
  1407  0612                     	;# 
  1408  0613                     	;# 
  1409  0614                     	;# 
  1410  0616                     	;# 
  1411  0617                     	;# 
  1412  0618                     	;# 
  1413  0619                     	;# 
  1414  061A                     	;# 
  1415  061B                     	;# 
  1416  061C                     	;# 
  1417  061D                     	;# 
  1418  061E                     	;# 
  1419  068C                     	;# 
  1420  068D                     	;# 
  1421  068E                     	;# 
  1422  068F                     	;# 
  1423  0690                     	;# 
  1424  0691                     	;# 
  1425  0692                     	;# 
  1426  0693                     	;# 
  1427  0694                     	;# 
  1428  070C                     	;# 
  1429  070D                     	;# 
  1430  070E                     	;# 
  1431  070F                     	;# 
  1432  0710                     	;# 
  1433  0711                     	;# 
  1434  0712                     	;# 
  1435  0713                     	;# 
  1436  0714                     	;# 
  1437  0716                     	;# 
  1438  0717                     	;# 
  1439  0718                     	;# 
  1440  0719                     	;# 
  1441  071A                     	;# 
  1442  071B                     	;# 
  1443  071C                     	;# 
  1444  071D                     	;# 
  1445  071E                     	;# 
  1446  0796                     	;# 
  1447  0797                     	;# 
  1448  0798                     	;# 
  1449  0799                     	;# 
  1450  079A                     	;# 
  1451  079B                     	;# 
  1452  080C                     	;# 
  1453  080D                     	;# 
  1454  080E                     	;# 
  1455  080F                     	;# 
  1456  0810                     	;# 
  1457  0811                     	;# 
  1458  0812                     	;# 
  1459  0813                     	;# 
  1460  0814                     	;# 
  1461  081A                     	;# 
  1462  081B                     	;# 
  1463  081C                     	;# 
  1464  081D                     	;# 
  1465  081E                     	;# 
  1466  081F                     	;# 
  1467  088C                     	;# 
  1468  088D                     	;# 
  1469  088E                     	;# 
  1470  088F                     	;# 
  1471  0890                     	;# 
  1472  0891                     	;# 
  1473  0892                     	;# 
  1474  0893                     	;# 
  1475  0895                     	;# 
  1476  0896                     	;# 
  1477  0897                     	;# 
  1478  0898                     	;# 
  1479  0899                     	;# 
  1480  089A                     	;# 
  1481  089B                     	;# 
  1482  090C                     	;# 
  1483  090E                     	;# 
  1484  090F                     	;# 
  1485  091F                     	;# 
  1486  091F                     	;# 
  1487  098F                     	;# 
  1488  098F                     	;# 
  1489  0990                     	;# 
  1490  0991                     	;# 
  1491  0992                     	;# 
  1492  0993                     	;# 
  1493  0994                     	;# 
  1494  0995                     	;# 
  1495  0996                     	;# 
  1496  0997                     	;# 
  1497  0E0F                     	;# 
  1498  0E10                     	;# 
  1499  0E11                     	;# 
  1500  0E12                     	;# 
  1501  0E13                     	;# 
  1502  0E14                     	;# 
  1503  0E15                     	;# 
  1504  0E16                     	;# 
  1505  0E17                     	;# 
  1506  0E18                     	;# 
  1507  0E19                     	;# 
  1508  0E1A                     	;# 
  1509  0E1B                     	;# 
  1510  0E1C                     	;# 
  1511  0E1D                     	;# 
  1512  0E1E                     	;# 
  1513  0E1F                     	;# 
  1514  0E20                     	;# 
  1515  0E21                     	;# 
  1516  0E22                     	;# 
  1517  0E23                     	;# 
  1518  0E24                     	;# 
  1519  0E25                     	;# 
  1520  0E26                     	;# 
  1521  0E27                     	;# 
  1522  0E28                     	;# 
  1523  0E29                     	;# 
  1524  0E2A                     	;# 
  1525  0E2B                     	;# 
  1526  0E2C                     	;# 
  1527  0E2D                     	;# 
  1528  0E2E                     	;# 
  1529  0E2F                     	;# 
  1530  0E30                     	;# 
  1531  0E31                     	;# 
  1532  0E32                     	;# 
  1533  0E33                     	;# 
  1534  0E34                     	;# 
  1535  0E35                     	;# 
  1536  0E36                     	;# 
  1537  0E37                     	;# 
  1538  0E8F                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E93                     	;# 
  1543  0E94                     	;# 
  1544  0E95                     	;# 
  1545  0E96                     	;# 
  1546  0E97                     	;# 
  1547  0E9C                     	;# 
  1548  0E9D                     	;# 
  1549  0E9E                     	;# 
  1550  0EA1                     	;# 
  1551  0EA2                     	;# 
  1552  0EA3                     	;# 
  1553  0EA4                     	;# 
  1554  0EA5                     	;# 
  1555  0EA9                     	;# 
  1556  0EAA                     	;# 
  1557  0EAB                     	;# 
  1558  0EAC                     	;# 
  1559  0EB1                     	;# 
  1560  0EB2                     	;# 
  1561  0EB3                     	;# 
  1562  0EB8                     	;# 
  1563  0EB9                     	;# 
  1564  0EBA                     	;# 
  1565  0EBB                     	;# 
  1566  0EBC                     	;# 
  1567  0EBD                     	;# 
  1568  0EBE                     	;# 
  1569  0EC3                     	;# 
  1570  0EC5                     	;# 
  1571  0EC6                     	;# 
  1572  0EC7                     	;# 
  1573  0EC8                     	;# 
  1574  0EC9                     	;# 
  1575  0ECA                     	;# 
  1576  0ECB                     	;# 
  1577  0ECC                     	;# 
  1578  0F10                     	;# 
  1579  0F11                     	;# 
  1580  0F12                     	;# 
  1581  0F13                     	;# 
  1582  0F14                     	;# 
  1583  0F15                     	;# 
  1584  0F16                     	;# 
  1585  0F17                     	;# 
  1586  0F18                     	;# 
  1587  0F19                     	;# 
  1588  0F1A                     	;# 
  1589  0F1B                     	;# 
  1590  0F1C                     	;# 
  1591  0F1D                     	;# 
  1592  0F1E                     	;# 
  1593  0F1F                     	;# 
  1594  0F20                     	;# 
  1595  0F21                     	;# 
  1596  0F22                     	;# 
  1597  0F23                     	;# 
  1598  0F24                     	;# 
  1599  0F25                     	;# 
  1600  0F26                     	;# 
  1601  0F27                     	;# 
  1602  0F38                     	;# 
  1603  0F39                     	;# 
  1604  0F3A                     	;# 
  1605  0F3B                     	;# 
  1606  0F3C                     	;# 
  1607  0F3D                     	;# 
  1608  0F3E                     	;# 
  1609  0F3F                     	;# 
  1610  0F40                     	;# 
  1611  0F41                     	;# 
  1612  0F43                     	;# 
  1613  0F44                     	;# 
  1614  0F45                     	;# 
  1615  0F46                     	;# 
  1616  0F47                     	;# 
  1617  0F48                     	;# 
  1618  0F49                     	;# 
  1619  0F4A                     	;# 
  1620  0F4B                     	;# 
  1621  0F4C                     	;# 
  1622  0F4E                     	;# 
  1623  0F4F                     	;# 
  1624  0F50                     	;# 
  1625  0F51                     	;# 
  1626  0F52                     	;# 
  1627  0F53                     	;# 
  1628  0F54                     	;# 
  1629  0F55                     	;# 
  1630  0F56                     	;# 
  1631  0F57                     	;# 
  1632  0F65                     	;# 
  1633  0F68                     	;# 
  1634  0F69                     	;# 
  1635  0F6A                     	;# 
  1636  0F6B                     	;# 
  1637  0FE4                     	;# 
  1638  0FE5                     	;# 
  1639  0FE6                     	;# 
  1640  0FE7                     	;# 
  1641  0FE8                     	;# 
  1642  0FE9                     	;# 
  1643  0FEA                     	;# 
  1644  0FEB                     	;# 
  1645  0FED                     	;# 
  1646  0FEE                     	;# 
  1647  0FEF                     	;# 
  1648  0000                     	;# 
  1649  0001                     	;# 
  1650  0002                     	;# 
  1651  0003                     	;# 
  1652  0004                     	;# 
  1653  0005                     	;# 
  1654  0006                     	;# 
  1655  0007                     	;# 
  1656  0008                     	;# 
  1657  0009                     	;# 
  1658  000A                     	;# 
  1659  000B                     	;# 
  1660  000C                     	;# 
  1661  000D                     	;# 
  1662  000E                     	;# 
  1663  0010                     	;# 
  1664  0011                     	;# 
  1665  0012                     	;# 
  1666  0013                     	;# 
  1667  0016                     	;# 
  1668  0017                     	;# 
  1669  0018                     	;# 
  1670  001C                     	;# 
  1671  001C                     	;# 
  1672  001D                     	;# 
  1673  001D                     	;# 
  1674  001E                     	;# 
  1675  001F                     	;# 
  1676  008C                     	;# 
  1677  008C                     	;# 
  1678  008D                     	;# 
  1679  008E                     	;# 
  1680  008E                     	;# 
  1681  008F                     	;# 
  1682  0090                     	;# 
  1683  0090                     	;# 
  1684  0091                     	;# 
  1685  0093                     	;# 
  1686  0094                     	;# 
  1687  0095                     	;# 
  1688  0096                     	;# 
  1689  0097                     	;# 
  1690  0098                     	;# 
  1691  0099                     	;# 
  1692  009A                     	;# 
  1693  009B                     	;# 
  1694  009C                     	;# 
  1695  009D                     	;# 
  1696  009E                     	;# 
  1697  010C                     	;# 
  1698  010D                     	;# 
  1699  010E                     	;# 
  1700  010E                     	;# 
  1701  010F                     	;# 
  1702  0110                     	;# 
  1703  0110                     	;# 
  1704  0111                     	;# 
  1705  0112                     	;# 
  1706  0112                     	;# 
  1707  0113                     	;# 
  1708  0114                     	;# 
  1709  0114                     	;# 
  1710  0115                     	;# 
  1711  0116                     	;# 
  1712  0116                     	;# 
  1713  0117                     	;# 
  1714  0119                     	;# 
  1715  0119                     	;# 
  1716  0119                     	;# 
  1717  011A                     	;# 
  1718  011A                     	;# 
  1719  011A                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011C                     	;# 
  1726  011C                     	;# 
  1727  011C                     	;# 
  1728  011D                     	;# 
  1729  011D                     	;# 
  1730  011D                     	;# 
  1731  011E                     	;# 
  1732  011E                     	;# 
  1733  011E                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  018E                     	;# 
  1742  018F                     	;# 
  1743  0190                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0196                     	;# 
  1747  0197                     	;# 
  1748  0198                     	;# 
  1749  0199                     	;# 
  1750  019A                     	;# 
  1751  019B                     	;# 
  1752  019C                     	;# 
  1753  020C                     	;# 
  1754  020C                     	;# 
  1755  020D                     	;# 
  1756  020E                     	;# 
  1757  020F                     	;# 
  1758  020F                     	;# 
  1759  0210                     	;# 
  1760  0210                     	;# 
  1761  0211                     	;# 
  1762  0211                     	;# 
  1763  0212                     	;# 
  1764  0212                     	;# 
  1765  0213                     	;# 
  1766  0214                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0216                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0217                     	;# 
  1773  0218                     	;# 
  1774  0218                     	;# 
  1775  0219                     	;# 
  1776  021A                     	;# 
  1777  021B                     	;# 
  1778  021B                     	;# 
  1779  021C                     	;# 
  1780  021C                     	;# 
  1781  021D                     	;# 
  1782  021D                     	;# 
  1783  021E                     	;# 
  1784  021F                     	;# 
  1785  028C                     	;# 
  1786  028C                     	;# 
  1787  028D                     	;# 
  1788  028D                     	;# 
  1789  028E                     	;# 
  1790  028F                     	;# 
  1791  0290                     	;# 
  1792  0290                     	;# 
  1793  0291                     	;# 
  1794  0292                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0293                     	;# 
  1798  0294                     	;# 
  1799  0295                     	;# 
  1800  0296                     	;# 
  1801  0296                     	;# 
  1802  0297                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029C                     	;# 
  1811  029D                     	;# 
  1812  030C                     	;# 
  1813  030C                     	;# 
  1814  030D                     	;# 
  1815  030E                     	;# 
  1816  030F                     	;# 
  1817  0310                     	;# 
  1818  0310                     	;# 
  1819  0311                     	;# 
  1820  0312                     	;# 
  1821  0313                     	;# 
  1822  0314                     	;# 
  1823  0314                     	;# 
  1824  0315                     	;# 
  1825  0316                     	;# 
  1826  0317                     	;# 
  1827  0318                     	;# 
  1828  0318                     	;# 
  1829  0319                     	;# 
  1830  031A                     	;# 
  1831  031B                     	;# 
  1832  031C                     	;# 
  1833  031C                     	;# 
  1834  031D                     	;# 
  1835  031E                     	;# 
  1836  031F                     	;# 
  1837  038C                     	;# 
  1838  038D                     	;# 
  1839  038E                     	;# 
  1840  0390                     	;# 
  1841  0391                     	;# 
  1842  0392                     	;# 
  1843  040C                     	;# 
  1844  040D                     	;# 
  1845  040E                     	;# 
  1846  040F                     	;# 
  1847  0410                     	;# 
  1848  0411                     	;# 
  1849  0416                     	;# 
  1850  0416                     	;# 
  1851  0417                     	;# 
  1852  0418                     	;# 
  1853  0418                     	;# 
  1854  0419                     	;# 
  1855  041A                     	;# 
  1856  041A                     	;# 
  1857  041B                     	;# 
  1858  041C                     	;# 
  1859  041C                     	;# 
  1860  041D                     	;# 
  1861  041E                     	;# 
  1862  041F                     	;# 
  1863  048C                     	;# 
  1864  048C                     	;# 
  1865  048D                     	;# 
  1866  048E                     	;# 
  1867  048F                     	;# 
  1868  048F                     	;# 
  1869  0490                     	;# 
  1870  0491                     	;# 
  1871  0492                     	;# 
  1872  0492                     	;# 
  1873  0493                     	;# 
  1874  0494                     	;# 
  1875  0495                     	;# 
  1876  0495                     	;# 
  1877  0496                     	;# 
  1878  0497                     	;# 
  1879  0498                     	;# 
  1880  0499                     	;# 
  1881  049A                     	;# 
  1882  049B                     	;# 
  1883  049C                     	;# 
  1884  049D                     	;# 
  1885  050C                     	;# 
  1886  050C                     	;# 
  1887  050D                     	;# 
  1888  050E                     	;# 
  1889  050F                     	;# 
  1890  050F                     	;# 
  1891  0510                     	;# 
  1892  0511                     	;# 
  1893  0512                     	;# 
  1894  0512                     	;# 
  1895  0513                     	;# 
  1896  0514                     	;# 
  1897  0515                     	;# 
  1898  0515                     	;# 
  1899  0516                     	;# 
  1900  0517                     	;# 
  1901  0518                     	;# 
  1902  0519                     	;# 
  1903  051A                     	;# 
  1904  051B                     	;# 
  1905  051C                     	;# 
  1906  051D                     	;# 
  1907  058C                     	;# 
  1908  058C                     	;# 
  1909  058D                     	;# 
  1910  058E                     	;# 
  1911  058F                     	;# 
  1912  058F                     	;# 
  1913  0590                     	;# 
  1914  0591                     	;# 
  1915  0592                     	;# 
  1916  0593                     	;# 
  1917  060C                     	;# 
  1918  060D                     	;# 
  1919  060E                     	;# 
  1920  060F                     	;# 
  1921  0610                     	;# 
  1922  0611                     	;# 
  1923  0612                     	;# 
  1924  0613                     	;# 
  1925  0614                     	;# 
  1926  0616                     	;# 
  1927  0617                     	;# 
  1928  0618                     	;# 
  1929  0619                     	;# 
  1930  061A                     	;# 
  1931  061B                     	;# 
  1932  061C                     	;# 
  1933  061D                     	;# 
  1934  061E                     	;# 
  1935  068C                     	;# 
  1936  068D                     	;# 
  1937  068E                     	;# 
  1938  068F                     	;# 
  1939  0690                     	;# 
  1940  0691                     	;# 
  1941  0692                     	;# 
  1942  0693                     	;# 
  1943  0694                     	;# 
  1944  070C                     	;# 
  1945  070D                     	;# 
  1946  070E                     	;# 
  1947  070F                     	;# 
  1948  0710                     	;# 
  1949  0711                     	;# 
  1950  0712                     	;# 
  1951  0713                     	;# 
  1952  0714                     	;# 
  1953  0716                     	;# 
  1954  0717                     	;# 
  1955  0718                     	;# 
  1956  0719                     	;# 
  1957  071A                     	;# 
  1958  071B                     	;# 
  1959  071C                     	;# 
  1960  071D                     	;# 
  1961  071E                     	;# 
  1962  0796                     	;# 
  1963  0797                     	;# 
  1964  0798                     	;# 
  1965  0799                     	;# 
  1966  079A                     	;# 
  1967  079B                     	;# 
  1968  080C                     	;# 
  1969  080D                     	;# 
  1970  080E                     	;# 
  1971  080F                     	;# 
  1972  0810                     	;# 
  1973  0811                     	;# 
  1974  0812                     	;# 
  1975  0813                     	;# 
  1976  0814                     	;# 
  1977  081A                     	;# 
  1978  081B                     	;# 
  1979  081C                     	;# 
  1980  081D                     	;# 
  1981  081E                     	;# 
  1982  081F                     	;# 
  1983  088C                     	;# 
  1984  088D                     	;# 
  1985  088E                     	;# 
  1986  088F                     	;# 
  1987  0890                     	;# 
  1988  0891                     	;# 
  1989  0892                     	;# 
  1990  0893                     	;# 
  1991  0895                     	;# 
  1992  0896                     	;# 
  1993  0897                     	;# 
  1994  0898                     	;# 
  1995  0899                     	;# 
  1996  089A                     	;# 
  1997  089B                     	;# 
  1998  090C                     	;# 
  1999  090E                     	;# 
  2000  090F                     	;# 
  2001  091F                     	;# 
  2002  091F                     	;# 
  2003  098F                     	;# 
  2004  098F                     	;# 
  2005  0990                     	;# 
  2006  0991                     	;# 
  2007  0992                     	;# 
  2008  0993                     	;# 
  2009  0994                     	;# 
  2010  0995                     	;# 
  2011  0996                     	;# 
  2012  0997                     	;# 
  2013  0E0F                     	;# 
  2014  0E10                     	;# 
  2015  0E11                     	;# 
  2016  0E12                     	;# 
  2017  0E13                     	;# 
  2018  0E14                     	;# 
  2019  0E15                     	;# 
  2020  0E16                     	;# 
  2021  0E17                     	;# 
  2022  0E18                     	;# 
  2023  0E19                     	;# 
  2024  0E1A                     	;# 
  2025  0E1B                     	;# 
  2026  0E1C                     	;# 
  2027  0E1D                     	;# 
  2028  0E1E                     	;# 
  2029  0E1F                     	;# 
  2030  0E20                     	;# 
  2031  0E21                     	;# 
  2032  0E22                     	;# 
  2033  0E23                     	;# 
  2034  0E24                     	;# 
  2035  0E25                     	;# 
  2036  0E26                     	;# 
  2037  0E27                     	;# 
  2038  0E28                     	;# 
  2039  0E29                     	;# 
  2040  0E2A                     	;# 
  2041  0E2B                     	;# 
  2042  0E2C                     	;# 
  2043  0E2D                     	;# 
  2044  0E2E                     	;# 
  2045  0E2F                     	;# 
  2046  0E30                     	;# 
  2047  0E31                     	;# 
  2048  0E32                     	;# 
  2049  0E33                     	;# 
  2050  0E34                     	;# 
  2051  0E35                     	;# 
  2052  0E36                     	;# 
  2053  0E37                     	;# 
  2054  0E8F                     	;# 
  2055  0E90                     	;# 
  2056  0E91                     	;# 
  2057  0E92                     	;# 
  2058  0E93                     	;# 
  2059  0E94                     	;# 
  2060  0E95                     	;# 
  2061  0E96                     	;# 
  2062  0E97                     	;# 
  2063  0E9C                     	;# 
  2064  0E9D                     	;# 
  2065  0E9E                     	;# 
  2066  0EA1                     	;# 
  2067  0EA2                     	;# 
  2068  0EA3                     	;# 
  2069  0EA4                     	;# 
  2070  0EA5                     	;# 
  2071  0EA9                     	;# 
  2072  0EAA                     	;# 
  2073  0EAB                     	;# 
  2074  0EAC                     	;# 
  2075  0EB1                     	;# 
  2076  0EB2                     	;# 
  2077  0EB3                     	;# 
  2078  0EB8                     	;# 
  2079  0EB9                     	;# 
  2080  0EBA                     	;# 
  2081  0EBB                     	;# 
  2082  0EBC                     	;# 
  2083  0EBD                     	;# 
  2084  0EBE                     	;# 
  2085  0EC3                     	;# 
  2086  0EC5                     	;# 
  2087  0EC6                     	;# 
  2088  0EC7                     	;# 
  2089  0EC8                     	;# 
  2090  0EC9                     	;# 
  2091  0ECA                     	;# 
  2092  0ECB                     	;# 
  2093  0ECC                     	;# 
  2094  0F10                     	;# 
  2095  0F11                     	;# 
  2096  0F12                     	;# 
  2097  0F13                     	;# 
  2098  0F14                     	;# 
  2099  0F15                     	;# 
  2100  0F16                     	;# 
  2101  0F17                     	;# 
  2102  0F18                     	;# 
  2103  0F19                     	;# 
  2104  0F1A                     	;# 
  2105  0F1B                     	;# 
  2106  0F1C                     	;# 
  2107  0F1D                     	;# 
  2108  0F1E                     	;# 
  2109  0F1F                     	;# 
  2110  0F20                     	;# 
  2111  0F21                     	;# 
  2112  0F22                     	;# 
  2113  0F23                     	;# 
  2114  0F24                     	;# 
  2115  0F25                     	;# 
  2116  0F26                     	;# 
  2117  0F27                     	;# 
  2118  0F38                     	;# 
  2119  0F39                     	;# 
  2120  0F3A                     	;# 
  2121  0F3B                     	;# 
  2122  0F3C                     	;# 
  2123  0F3D                     	;# 
  2124  0F3E                     	;# 
  2125  0F3F                     	;# 
  2126  0F40                     	;# 
  2127  0F41                     	;# 
  2128  0F43                     	;# 
  2129  0F44                     	;# 
  2130  0F45                     	;# 
  2131  0F46                     	;# 
  2132  0F47                     	;# 
  2133  0F48                     	;# 
  2134  0F49                     	;# 
  2135  0F4A                     	;# 
  2136  0F4B                     	;# 
  2137  0F4C                     	;# 
  2138  0F4E                     	;# 
  2139  0F4F                     	;# 
  2140  0F50                     	;# 
  2141  0F51                     	;# 
  2142  0F52                     	;# 
  2143  0F53                     	;# 
  2144  0F54                     	;# 
  2145  0F55                     	;# 
  2146  0F56                     	;# 
  2147  0F57                     	;# 
  2148  0F65                     	;# 
  2149  0F68                     	;# 
  2150  0F69                     	;# 
  2151  0F6A                     	;# 
  2152  0F6B                     	;# 
  2153  0FE4                     	;# 
  2154  0FE5                     	;# 
  2155  0FE6                     	;# 
  2156  0FE7                     	;# 
  2157  0FE8                     	;# 
  2158  0FE9                     	;# 
  2159  0FEA                     	;# 
  2160  0FEB                     	;# 
  2161  0FED                     	;# 
  2162  0FEE                     	;# 
  2163  0FEF                     	;# 
  2164  0000                     	;# 
  2165  0001                     	;# 
  2166  0002                     	;# 
  2167  0003                     	;# 
  2168  0004                     	;# 
  2169  0005                     	;# 
  2170  0006                     	;# 
  2171  0007                     	;# 
  2172  0008                     	;# 
  2173  0009                     	;# 
  2174  000A                     	;# 
  2175  000B                     	;# 
  2176  000C                     	;# 
  2177  000D                     	;# 
  2178  000E                     	;# 
  2179  0010                     	;# 
  2180  0011                     	;# 
  2181  0012                     	;# 
  2182  0013                     	;# 
  2183  0016                     	;# 
  2184  0017                     	;# 
  2185  0018                     	;# 
  2186  001C                     	;# 
  2187  001C                     	;# 
  2188  001D                     	;# 
  2189  001D                     	;# 
  2190  001E                     	;# 
  2191  001F                     	;# 
  2192  008C                     	;# 
  2193  008C                     	;# 
  2194  008D                     	;# 
  2195  008E                     	;# 
  2196  008E                     	;# 
  2197  008F                     	;# 
  2198  0090                     	;# 
  2199  0090                     	;# 
  2200  0091                     	;# 
  2201  0093                     	;# 
  2202  0094                     	;# 
  2203  0095                     	;# 
  2204  0096                     	;# 
  2205  0097                     	;# 
  2206  0098                     	;# 
  2207  0099                     	;# 
  2208  009A                     	;# 
  2209  009B                     	;# 
  2210  009C                     	;# 
  2211  009D                     	;# 
  2212  009E                     	;# 
  2213  010C                     	;# 
  2214  010D                     	;# 
  2215  010E                     	;# 
  2216  010E                     	;# 
  2217  010F                     	;# 
  2218  0110                     	;# 
  2219  0110                     	;# 
  2220  0111                     	;# 
  2221  0112                     	;# 
  2222  0112                     	;# 
  2223  0113                     	;# 
  2224  0114                     	;# 
  2225  0114                     	;# 
  2226  0115                     	;# 
  2227  0116                     	;# 
  2228  0116                     	;# 
  2229  0117                     	;# 
  2230  0119                     	;# 
  2231  0119                     	;# 
  2232  0119                     	;# 
  2233  011A                     	;# 
  2234  011A                     	;# 
  2235  011A                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011C                     	;# 
  2242  011C                     	;# 
  2243  011C                     	;# 
  2244  011D                     	;# 
  2245  011D                     	;# 
  2246  011D                     	;# 
  2247  011E                     	;# 
  2248  011E                     	;# 
  2249  011E                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  018C                     	;# 
  2256  018D                     	;# 
  2257  018E                     	;# 
  2258  018F                     	;# 
  2259  0190                     	;# 
  2260  0191                     	;# 
  2261  0192                     	;# 
  2262  0196                     	;# 
  2263  0197                     	;# 
  2264  0198                     	;# 
  2265  0199                     	;# 
  2266  019A                     	;# 
  2267  019B                     	;# 
  2268  019C                     	;# 
  2269  020C                     	;# 
  2270  020C                     	;# 
  2271  020D                     	;# 
  2272  020E                     	;# 
  2273  020F                     	;# 
  2274  020F                     	;# 
  2275  0210                     	;# 
  2276  0210                     	;# 
  2277  0211                     	;# 
  2278  0211                     	;# 
  2279  0212                     	;# 
  2280  0212                     	;# 
  2281  0213                     	;# 
  2282  0214                     	;# 
  2283  0215                     	;# 
  2284  0215                     	;# 
  2285  0216                     	;# 
  2286  0216                     	;# 
  2287  0217                     	;# 
  2288  0217                     	;# 
  2289  0218                     	;# 
  2290  0218                     	;# 
  2291  0219                     	;# 
  2292  021A                     	;# 
  2293  021B                     	;# 
  2294  021B                     	;# 
  2295  021C                     	;# 
  2296  021C                     	;# 
  2297  021D                     	;# 
  2298  021D                     	;# 
  2299  021E                     	;# 
  2300  021F                     	;# 
  2301  028C                     	;# 
  2302  028C                     	;# 
  2303  028D                     	;# 
  2304  028D                     	;# 
  2305  028E                     	;# 
  2306  028F                     	;# 
  2307  0290                     	;# 
  2308  0290                     	;# 
  2309  0291                     	;# 
  2310  0292                     	;# 
  2311  0292                     	;# 
  2312  0293                     	;# 
  2313  0293                     	;# 
  2314  0294                     	;# 
  2315  0295                     	;# 
  2316  0296                     	;# 
  2317  0296                     	;# 
  2318  0297                     	;# 
  2319  0298                     	;# 
  2320  0298                     	;# 
  2321  0299                     	;# 
  2322  0299                     	;# 
  2323  029A                     	;# 
  2324  029B                     	;# 
  2325  029C                     	;# 
  2326  029C                     	;# 
  2327  029D                     	;# 
  2328  030C                     	;# 
  2329  030C                     	;# 
  2330  030D                     	;# 
  2331  030E                     	;# 
  2332  030F                     	;# 
  2333  0310                     	;# 
  2334  0310                     	;# 
  2335  0311                     	;# 
  2336  0312                     	;# 
  2337  0313                     	;# 
  2338  0314                     	;# 
  2339  0314                     	;# 
  2340  0315                     	;# 
  2341  0316                     	;# 
  2342  0317                     	;# 
  2343  0318                     	;# 
  2344  0318                     	;# 
  2345  0319                     	;# 
  2346  031A                     	;# 
  2347  031B                     	;# 
  2348  031C                     	;# 
  2349  031C                     	;# 
  2350  031D                     	;# 
  2351  031E                     	;# 
  2352  031F                     	;# 
  2353  038C                     	;# 
  2354  038D                     	;# 
  2355  038E                     	;# 
  2356  0390                     	;# 
  2357  0391                     	;# 
  2358  0392                     	;# 
  2359  040C                     	;# 
  2360  040D                     	;# 
  2361  040E                     	;# 
  2362  040F                     	;# 
  2363  0410                     	;# 
  2364  0411                     	;# 
  2365  0416                     	;# 
  2366  0416                     	;# 
  2367  0417                     	;# 
  2368  0418                     	;# 
  2369  0418                     	;# 
  2370  0419                     	;# 
  2371  041A                     	;# 
  2372  041A                     	;# 
  2373  041B                     	;# 
  2374  041C                     	;# 
  2375  041C                     	;# 
  2376  041D                     	;# 
  2377  041E                     	;# 
  2378  041F                     	;# 
  2379  048C                     	;# 
  2380  048C                     	;# 
  2381  048D                     	;# 
  2382  048E                     	;# 
  2383  048F                     	;# 
  2384  048F                     	;# 
  2385  0490                     	;# 
  2386  0491                     	;# 
  2387  0492                     	;# 
  2388  0492                     	;# 
  2389  0493                     	;# 
  2390  0494                     	;# 
  2391  0495                     	;# 
  2392  0495                     	;# 
  2393  0496                     	;# 
  2394  0497                     	;# 
  2395  0498                     	;# 
  2396  0499                     	;# 
  2397  049A                     	;# 
  2398  049B                     	;# 
  2399  049C                     	;# 
  2400  049D                     	;# 
  2401  050C                     	;# 
  2402  050C                     	;# 
  2403  050D                     	;# 
  2404  050E                     	;# 
  2405  050F                     	;# 
  2406  050F                     	;# 
  2407  0510                     	;# 
  2408  0511                     	;# 
  2409  0512                     	;# 
  2410  0512                     	;# 
  2411  0513                     	;# 
  2412  0514                     	;# 
  2413  0515                     	;# 
  2414  0515                     	;# 
  2415  0516                     	;# 
  2416  0517                     	;# 
  2417  0518                     	;# 
  2418  0519                     	;# 
  2419  051A                     	;# 
  2420  051B                     	;# 
  2421  051C                     	;# 
  2422  051D                     	;# 
  2423  058C                     	;# 
  2424  058C                     	;# 
  2425  058D                     	;# 
  2426  058E                     	;# 
  2427  058F                     	;# 
  2428  058F                     	;# 
  2429  0590                     	;# 
  2430  0591                     	;# 
  2431  0592                     	;# 
  2432  0593                     	;# 
  2433  060C                     	;# 
  2434  060D                     	;# 
  2435  060E                     	;# 
  2436  060F                     	;# 
  2437  0610                     	;# 
  2438  0611                     	;# 
  2439  0612                     	;# 
  2440  0613                     	;# 
  2441  0614                     	;# 
  2442  0616                     	;# 
  2443  0617                     	;# 
  2444  0618                     	;# 
  2445  0619                     	;# 
  2446  061A                     	;# 
  2447  061B                     	;# 
  2448  061C                     	;# 
  2449  061D                     	;# 
  2450  061E                     	;# 
  2451  068C                     	;# 
  2452  068D                     	;# 
  2453  068E                     	;# 
  2454  068F                     	;# 
  2455  0690                     	;# 
  2456  0691                     	;# 
  2457  0692                     	;# 
  2458  0693                     	;# 
  2459  0694                     	;# 
  2460  070C                     	;# 
  2461  070D                     	;# 
  2462  070E                     	;# 
  2463  070F                     	;# 
  2464  0710                     	;# 
  2465  0711                     	;# 
  2466  0712                     	;# 
  2467  0713                     	;# 
  2468  0714                     	;# 
  2469  0716                     	;# 
  2470  0717                     	;# 
  2471  0718                     	;# 
  2472  0719                     	;# 
  2473  071A                     	;# 
  2474  071B                     	;# 
  2475  071C                     	;# 
  2476  071D                     	;# 
  2477  071E                     	;# 
  2478  0796                     	;# 
  2479  0797                     	;# 
  2480  0798                     	;# 
  2481  0799                     	;# 
  2482  079A                     	;# 
  2483  079B                     	;# 
  2484  080C                     	;# 
  2485  080D                     	;# 
  2486  080E                     	;# 
  2487  080F                     	;# 
  2488  0810                     	;# 
  2489  0811                     	;# 
  2490  0812                     	;# 
  2491  0813                     	;# 
  2492  0814                     	;# 
  2493  081A                     	;# 
  2494  081B                     	;# 
  2495  081C                     	;# 
  2496  081D                     	;# 
  2497  081E                     	;# 
  2498  081F                     	;# 
  2499  088C                     	;# 
  2500  088D                     	;# 
  2501  088E                     	;# 
  2502  088F                     	;# 
  2503  0890                     	;# 
  2504  0891                     	;# 
  2505  0892                     	;# 
  2506  0893                     	;# 
  2507  0895                     	;# 
  2508  0896                     	;# 
  2509  0897                     	;# 
  2510  0898                     	;# 
  2511  0899                     	;# 
  2512  089A                     	;# 
  2513  089B                     	;# 
  2514  090C                     	;# 
  2515  090E                     	;# 
  2516  090F                     	;# 
  2517  091F                     	;# 
  2518  091F                     	;# 
  2519  098F                     	;# 
  2520  098F                     	;# 
  2521  0990                     	;# 
  2522  0991                     	;# 
  2523  0992                     	;# 
  2524  0993                     	;# 
  2525  0994                     	;# 
  2526  0995                     	;# 
  2527  0996                     	;# 
  2528  0997                     	;# 
  2529  0E0F                     	;# 
  2530  0E10                     	;# 
  2531  0E11                     	;# 
  2532  0E12                     	;# 
  2533  0E13                     	;# 
  2534  0E14                     	;# 
  2535  0E15                     	;# 
  2536  0E16                     	;# 
  2537  0E17                     	;# 
  2538  0E18                     	;# 
  2539  0E19                     	;# 
  2540  0E1A                     	;# 
  2541  0E1B                     	;# 
  2542  0E1C                     	;# 
  2543  0E1D                     	;# 
  2544  0E1E                     	;# 
  2545  0E1F                     	;# 
  2546  0E20                     	;# 
  2547  0E21                     	;# 
  2548  0E22                     	;# 
  2549  0E23                     	;# 
  2550  0E24                     	;# 
  2551  0E25                     	;# 
  2552  0E26                     	;# 
  2553  0E27                     	;# 
  2554  0E28                     	;# 
  2555  0E29                     	;# 
  2556  0E2A                     	;# 
  2557  0E2B                     	;# 
  2558  0E2C                     	;# 
  2559  0E2D                     	;# 
  2560  0E2E                     	;# 
  2561  0E2F                     	;# 
  2562  0E30                     	;# 
  2563  0E31                     	;# 
  2564  0E32                     	;# 
  2565  0E33                     	;# 
  2566  0E34                     	;# 
  2567  0E35                     	;# 
  2568  0E36                     	;# 
  2569  0E37                     	;# 
  2570  0E8F                     	;# 
  2571  0E90                     	;# 
  2572  0E91                     	;# 
  2573  0E92                     	;# 
  2574  0E93                     	;# 
  2575  0E94                     	;# 
  2576  0E95                     	;# 
  2577  0E96                     	;# 
  2578  0E97                     	;# 
  2579  0E9C                     	;# 
  2580  0E9D                     	;# 
  2581  0E9E                     	;# 
  2582  0EA1                     	;# 
  2583  0EA2                     	;# 
  2584  0EA3                     	;# 
  2585  0EA4                     	;# 
  2586  0EA5                     	;# 
  2587  0EA9                     	;# 
  2588  0EAA                     	;# 
  2589  0EAB                     	;# 
  2590  0EAC                     	;# 
  2591  0EB1                     	;# 
  2592  0EB2                     	;# 
  2593  0EB3                     	;# 
  2594  0EB8                     	;# 
  2595  0EB9                     	;# 
  2596  0EBA                     	;# 
  2597  0EBB                     	;# 
  2598  0EBC                     	;# 
  2599  0EBD                     	;# 
  2600  0EBE                     	;# 
  2601  0EC3                     	;# 
  2602  0EC5                     	;# 
  2603  0EC6                     	;# 
  2604  0EC7                     	;# 
  2605  0EC8                     	;# 
  2606  0EC9                     	;# 
  2607  0ECA                     	;# 
  2608  0ECB                     	;# 
  2609  0ECC                     	;# 
  2610  0F10                     	;# 
  2611  0F11                     	;# 
  2612  0F12                     	;# 
  2613  0F13                     	;# 
  2614  0F14                     	;# 
  2615  0F15                     	;# 
  2616  0F16                     	;# 
  2617  0F17                     	;# 
  2618  0F18                     	;# 
  2619  0F19                     	;# 
  2620  0F1A                     	;# 
  2621  0F1B                     	;# 
  2622  0F1C                     	;# 
  2623  0F1D                     	;# 
  2624  0F1E                     	;# 
  2625  0F1F                     	;# 
  2626  0F20                     	;# 
  2627  0F21                     	;# 
  2628  0F22                     	;# 
  2629  0F23                     	;# 
  2630  0F24                     	;# 
  2631  0F25                     	;# 
  2632  0F26                     	;# 
  2633  0F27                     	;# 
  2634  0F38                     	;# 
  2635  0F39                     	;# 
  2636  0F3A                     	;# 
  2637  0F3B                     	;# 
  2638  0F3C                     	;# 
  2639  0F3D                     	;# 
  2640  0F3E                     	;# 
  2641  0F3F                     	;# 
  2642  0F40                     	;# 
  2643  0F41                     	;# 
  2644  0F43                     	;# 
  2645  0F44                     	;# 
  2646  0F45                     	;# 
  2647  0F46                     	;# 
  2648  0F47                     	;# 
  2649  0F48                     	;# 
  2650  0F49                     	;# 
  2651  0F4A                     	;# 
  2652  0F4B                     	;# 
  2653  0F4C                     	;# 
  2654  0F4E                     	;# 
  2655  0F4F                     	;# 
  2656  0F50                     	;# 
  2657  0F51                     	;# 
  2658  0F52                     	;# 
  2659  0F53                     	;# 
  2660  0F54                     	;# 
  2661  0F55                     	;# 
  2662  0F56                     	;# 
  2663  0F57                     	;# 
  2664  0F65                     	;# 
  2665  0F68                     	;# 
  2666  0F69                     	;# 
  2667  0F6A                     	;# 
  2668  0F6B                     	;# 
  2669  0FE4                     	;# 
  2670  0FE5                     	;# 
  2671  0FE6                     	;# 
  2672  0FE7                     	;# 
  2673  0FE8                     	;# 
  2674  0FE9                     	;# 
  2675  0FEA                     	;# 
  2676  0FEB                     	;# 
  2677  0FED                     	;# 
  2678  0FEE                     	;# 
  2679  0FEF                     	;# 
  2680  0000                     	;# 
  2681  0001                     	;# 
  2682  0002                     	;# 
  2683  0003                     	;# 
  2684  0004                     	;# 
  2685  0005                     	;# 
  2686  0006                     	;# 
  2687  0007                     	;# 
  2688  0008                     	;# 
  2689  0009                     	;# 
  2690  000A                     	;# 
  2691  000B                     	;# 
  2692  000C                     	;# 
  2693  000D                     	;# 
  2694  000E                     	;# 
  2695  0010                     	;# 
  2696  0011                     	;# 
  2697  0012                     	;# 
  2698  0013                     	;# 
  2699  0016                     	;# 
  2700  0017                     	;# 
  2701  0018                     	;# 
  2702  001C                     	;# 
  2703  001C                     	;# 
  2704  001D                     	;# 
  2705  001D                     	;# 
  2706  001E                     	;# 
  2707  001F                     	;# 
  2708  008C                     	;# 
  2709  008C                     	;# 
  2710  008D                     	;# 
  2711  008E                     	;# 
  2712  008E                     	;# 
  2713  008F                     	;# 
  2714  0090                     	;# 
  2715  0090                     	;# 
  2716  0091                     	;# 
  2717  0093                     	;# 
  2718  0094                     	;# 
  2719  0095                     	;# 
  2720  0096                     	;# 
  2721  0097                     	;# 
  2722  0098                     	;# 
  2723  0099                     	;# 
  2724  009A                     	;# 
  2725  009B                     	;# 
  2726  009C                     	;# 
  2727  009D                     	;# 
  2728  009E                     	;# 
  2729  010C                     	;# 
  2730  010D                     	;# 
  2731  010E                     	;# 
  2732  010E                     	;# 
  2733  010F                     	;# 
  2734  0110                     	;# 
  2735  0110                     	;# 
  2736  0111                     	;# 
  2737  0112                     	;# 
  2738  0112                     	;# 
  2739  0113                     	;# 
  2740  0114                     	;# 
  2741  0114                     	;# 
  2742  0115                     	;# 
  2743  0116                     	;# 
  2744  0116                     	;# 
  2745  0117                     	;# 
  2746  0119                     	;# 
  2747  0119                     	;# 
  2748  0119                     	;# 
  2749  011A                     	;# 
  2750  011A                     	;# 
  2751  011A                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011C                     	;# 
  2758  011C                     	;# 
  2759  011C                     	;# 
  2760  011D                     	;# 
  2761  011D                     	;# 
  2762  011D                     	;# 
  2763  011E                     	;# 
  2764  011E                     	;# 
  2765  011E                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  018C                     	;# 
  2772  018D                     	;# 
  2773  018E                     	;# 
  2774  018F                     	;# 
  2775  0190                     	;# 
  2776  0191                     	;# 
  2777  0192                     	;# 
  2778  0196                     	;# 
  2779  0197                     	;# 
  2780  0198                     	;# 
  2781  0199                     	;# 
  2782  019A                     	;# 
  2783  019B                     	;# 
  2784  019C                     	;# 
  2785  020C                     	;# 
  2786  020C                     	;# 
  2787  020D                     	;# 
  2788  020E                     	;# 
  2789  020F                     	;# 
  2790  020F                     	;# 
  2791  0210                     	;# 
  2792  0210                     	;# 
  2793  0211                     	;# 
  2794  0211                     	;# 
  2795  0212                     	;# 
  2796  0212                     	;# 
  2797  0213                     	;# 
  2798  0214                     	;# 
  2799  0215                     	;# 
  2800  0215                     	;# 
  2801  0216                     	;# 
  2802  0216                     	;# 
  2803  0217                     	;# 
  2804  0217                     	;# 
  2805  0218                     	;# 
  2806  0218                     	;# 
  2807  0219                     	;# 
  2808  021A                     	;# 
  2809  021B                     	;# 
  2810  021B                     	;# 
  2811  021C                     	;# 
  2812  021C                     	;# 
  2813  021D                     	;# 
  2814  021D                     	;# 
  2815  021E                     	;# 
  2816  021F                     	;# 
  2817  028C                     	;# 
  2818  028C                     	;# 
  2819  028D                     	;# 
  2820  028D                     	;# 
  2821  028E                     	;# 
  2822  028F                     	;# 
  2823  0290                     	;# 
  2824  0290                     	;# 
  2825  0291                     	;# 
  2826  0292                     	;# 
  2827  0292                     	;# 
  2828  0293                     	;# 
  2829  0293                     	;# 
  2830  0294                     	;# 
  2831  0295                     	;# 
  2832  0296                     	;# 
  2833  0296                     	;# 
  2834  0297                     	;# 
  2835  0298                     	;# 
  2836  0298                     	;# 
  2837  0299                     	;# 
  2838  0299                     	;# 
  2839  029A                     	;# 
  2840  029B                     	;# 
  2841  029C                     	;# 
  2842  029C                     	;# 
  2843  029D                     	;# 
  2844  030C                     	;# 
  2845  030C                     	;# 
  2846  030D                     	;# 
  2847  030E                     	;# 
  2848  030F                     	;# 
  2849  0310                     	;# 
  2850  0310                     	;# 
  2851  0311                     	;# 
  2852  0312                     	;# 
  2853  0313                     	;# 
  2854  0314                     	;# 
  2855  0314                     	;# 
  2856  0315                     	;# 
  2857  0316                     	;# 
  2858  0317                     	;# 
  2859  0318                     	;# 
  2860  0318                     	;# 
  2861  0319                     	;# 
  2862  031A                     	;# 
  2863  031B                     	;# 
  2864  031C                     	;# 
  2865  031C                     	;# 
  2866  031D                     	;# 
  2867  031E                     	;# 
  2868  031F                     	;# 
  2869  038C                     	;# 
  2870  038D                     	;# 
  2871  038E                     	;# 
  2872  0390                     	;# 
  2873  0391                     	;# 
  2874  0392                     	;# 
  2875  040C                     	;# 
  2876  040D                     	;# 
  2877  040E                     	;# 
  2878  040F                     	;# 
  2879  0410                     	;# 
  2880  0411                     	;# 
  2881  0416                     	;# 
  2882  0416                     	;# 
  2883  0417                     	;# 
  2884  0418                     	;# 
  2885  0418                     	;# 
  2886  0419                     	;# 
  2887  041A                     	;# 
  2888  041A                     	;# 
  2889  041B                     	;# 
  2890  041C                     	;# 
  2891  041C                     	;# 
  2892  041D                     	;# 
  2893  041E                     	;# 
  2894  041F                     	;# 
  2895  048C                     	;# 
  2896  048C                     	;# 
  2897  048D                     	;# 
  2898  048E                     	;# 
  2899  048F                     	;# 
  2900  048F                     	;# 
  2901  0490                     	;# 
  2902  0491                     	;# 
  2903  0492                     	;# 
  2904  0492                     	;# 
  2905  0493                     	;# 
  2906  0494                     	;# 
  2907  0495                     	;# 
  2908  0495                     	;# 
  2909  0496                     	;# 
  2910  0497                     	;# 
  2911  0498                     	;# 
  2912  0499                     	;# 
  2913  049A                     	;# 
  2914  049B                     	;# 
  2915  049C                     	;# 
  2916  049D                     	;# 
  2917  050C                     	;# 
  2918  050C                     	;# 
  2919  050D                     	;# 
  2920  050E                     	;# 
  2921  050F                     	;# 
  2922  050F                     	;# 
  2923  0510                     	;# 
  2924  0511                     	;# 
  2925  0512                     	;# 
  2926  0512                     	;# 
  2927  0513                     	;# 
  2928  0514                     	;# 
  2929  0515                     	;# 
  2930  0515                     	;# 
  2931  0516                     	;# 
  2932  0517                     	;# 
  2933  0518                     	;# 
  2934  0519                     	;# 
  2935  051A                     	;# 
  2936  051B                     	;# 
  2937  051C                     	;# 
  2938  051D                     	;# 
  2939  058C                     	;# 
  2940  058C                     	;# 
  2941  058D                     	;# 
  2942  058E                     	;# 
  2943  058F                     	;# 
  2944  058F                     	;# 
  2945  0590                     	;# 
  2946  0591                     	;# 
  2947  0592                     	;# 
  2948  0593                     	;# 
  2949  060C                     	;# 
  2950  060D                     	;# 
  2951  060E                     	;# 
  2952  060F                     	;# 
  2953  0610                     	;# 
  2954  0611                     	;# 
  2955  0612                     	;# 
  2956  0613                     	;# 
  2957  0614                     	;# 
  2958  0616                     	;# 
  2959  0617                     	;# 
  2960  0618                     	;# 
  2961  0619                     	;# 
  2962  061A                     	;# 
  2963  061B                     	;# 
  2964  061C                     	;# 
  2965  061D                     	;# 
  2966  061E                     	;# 
  2967  068C                     	;# 
  2968  068D                     	;# 
  2969  068E                     	;# 
  2970  068F                     	;# 
  2971  0690                     	;# 
  2972  0691                     	;# 
  2973  0692                     	;# 
  2974  0693                     	;# 
  2975  0694                     	;# 
  2976  070C                     	;# 
  2977  070D                     	;# 
  2978  070E                     	;# 
  2979  070F                     	;# 
  2980  0710                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0714                     	;# 
  2985  0716                     	;# 
  2986  0717                     	;# 
  2987  0718                     	;# 
  2988  0719                     	;# 
  2989  071A                     	;# 
  2990  071B                     	;# 
  2991  071C                     	;# 
  2992  071D                     	;# 
  2993  071E                     	;# 
  2994  0796                     	;# 
  2995  0797                     	;# 
  2996  0798                     	;# 
  2997  0799                     	;# 
  2998  079A                     	;# 
  2999  079B                     	;# 
  3000  080C                     	;# 
  3001  080D                     	;# 
  3002  080E                     	;# 
  3003  080F                     	;# 
  3004  0810                     	;# 
  3005  0811                     	;# 
  3006  0812                     	;# 
  3007  0813                     	;# 
  3008  0814                     	;# 
  3009  081A                     	;# 
  3010  081B                     	;# 
  3011  081C                     	;# 
  3012  081D                     	;# 
  3013  081E                     	;# 
  3014  081F                     	;# 
  3015  088C                     	;# 
  3016  088D                     	;# 
  3017  088E                     	;# 
  3018  088F                     	;# 
  3019  0890                     	;# 
  3020  0891                     	;# 
  3021  0892                     	;# 
  3022  0893                     	;# 
  3023  0895                     	;# 
  3024  0896                     	;# 
  3025  0897                     	;# 
  3026  0898                     	;# 
  3027  0899                     	;# 
  3028  089A                     	;# 
  3029  089B                     	;# 
  3030  090C                     	;# 
  3031  090E                     	;# 
  3032  090F                     	;# 
  3033  091F                     	;# 
  3034  091F                     	;# 
  3035  098F                     	;# 
  3036  098F                     	;# 
  3037  0990                     	;# 
  3038  0991                     	;# 
  3039  0992                     	;# 
  3040  0993                     	;# 
  3041  0994                     	;# 
  3042  0995                     	;# 
  3043  0996                     	;# 
  3044  0997                     	;# 
  3045  0E0F                     	;# 
  3046  0E10                     	;# 
  3047  0E11                     	;# 
  3048  0E12                     	;# 
  3049  0E13                     	;# 
  3050  0E14                     	;# 
  3051  0E15                     	;# 
  3052  0E16                     	;# 
  3053  0E17                     	;# 
  3054  0E18                     	;# 
  3055  0E19                     	;# 
  3056  0E1A                     	;# 
  3057  0E1B                     	;# 
  3058  0E1C                     	;# 
  3059  0E1D                     	;# 
  3060  0E1E                     	;# 
  3061  0E1F                     	;# 
  3062  0E20                     	;# 
  3063  0E21                     	;# 
  3064  0E22                     	;# 
  3065  0E23                     	;# 
  3066  0E24                     	;# 
  3067  0E25                     	;# 
  3068  0E26                     	;# 
  3069  0E27                     	;# 
  3070  0E28                     	;# 
  3071  0E29                     	;# 
  3072  0E2A                     	;# 
  3073  0E2B                     	;# 
  3074  0E2C                     	;# 
  3075  0E2D                     	;# 
  3076  0E2E                     	;# 
  3077  0E2F                     	;# 
  3078  0E30                     	;# 
  3079  0E31                     	;# 
  3080  0E32                     	;# 
  3081  0E33                     	;# 
  3082  0E34                     	;# 
  3083  0E35                     	;# 
  3084  0E36                     	;# 
  3085  0E37                     	;# 
  3086  0E8F                     	;# 
  3087  0E90                     	;# 
  3088  0E91                     	;# 
  3089  0E92                     	;# 
  3090  0E93                     	;# 
  3091  0E94                     	;# 
  3092  0E95                     	;# 
  3093  0E96                     	;# 
  3094  0E97                     	;# 
  3095  0E9C                     	;# 
  3096  0E9D                     	;# 
  3097  0E9E                     	;# 
  3098  0EA1                     	;# 
  3099  0EA2                     	;# 
  3100  0EA3                     	;# 
  3101  0EA4                     	;# 
  3102  0EA5                     	;# 
  3103  0EA9                     	;# 
  3104  0EAA                     	;# 
  3105  0EAB                     	;# 
  3106  0EAC                     	;# 
  3107  0EB1                     	;# 
  3108  0EB2                     	;# 
  3109  0EB3                     	;# 
  3110  0EB8                     	;# 
  3111  0EB9                     	;# 
  3112  0EBA                     	;# 
  3113  0EBB                     	;# 
  3114  0EBC                     	;# 
  3115  0EBD                     	;# 
  3116  0EBE                     	;# 
  3117  0EC3                     	;# 
  3118  0EC5                     	;# 
  3119  0EC6                     	;# 
  3120  0EC7                     	;# 
  3121  0EC8                     	;# 
  3122  0EC9                     	;# 
  3123  0ECA                     	;# 
  3124  0ECB                     	;# 
  3125  0ECC                     	;# 
  3126  0F10                     	;# 
  3127  0F11                     	;# 
  3128  0F12                     	;# 
  3129  0F13                     	;# 
  3130  0F14                     	;# 
  3131  0F15                     	;# 
  3132  0F16                     	;# 
  3133  0F17                     	;# 
  3134  0F18                     	;# 
  3135  0F19                     	;# 
  3136  0F1A                     	;# 
  3137  0F1B                     	;# 
  3138  0F1C                     	;# 
  3139  0F1D                     	;# 
  3140  0F1E                     	;# 
  3141  0F1F                     	;# 
  3142  0F20                     	;# 
  3143  0F21                     	;# 
  3144  0F22                     	;# 
  3145  0F23                     	;# 
  3146  0F24                     	;# 
  3147  0F25                     	;# 
  3148  0F26                     	;# 
  3149  0F27                     	;# 
  3150  0F38                     	;# 
  3151  0F39                     	;# 
  3152  0F3A                     	;# 
  3153  0F3B                     	;# 
  3154  0F3C                     	;# 
  3155  0F3D                     	;# 
  3156  0F3E                     	;# 
  3157  0F3F                     	;# 
  3158  0F40                     	;# 
  3159  0F41                     	;# 
  3160  0F43                     	;# 
  3161  0F44                     	;# 
  3162  0F45                     	;# 
  3163  0F46                     	;# 
  3164  0F47                     	;# 
  3165  0F48                     	;# 
  3166  0F49                     	;# 
  3167  0F4A                     	;# 
  3168  0F4B                     	;# 
  3169  0F4C                     	;# 
  3170  0F4E                     	;# 
  3171  0F4F                     	;# 
  3172  0F50                     	;# 
  3173  0F51                     	;# 
  3174  0F52                     	;# 
  3175  0F53                     	;# 
  3176  0F54                     	;# 
  3177  0F55                     	;# 
  3178  0F56                     	;# 
  3179  0F57                     	;# 
  3180  0F65                     	;# 
  3181  0F68                     	;# 
  3182  0F69                     	;# 
  3183  0F6A                     	;# 
  3184  0F6B                     	;# 
  3185  0FE4                     	;# 
  3186  0FE5                     	;# 
  3187  0FE6                     	;# 
  3188  0FE7                     	;# 
  3189  0FE8                     	;# 
  3190  0FE9                     	;# 
  3191  0FEA                     	;# 
  3192  0FEB                     	;# 
  3193  0FED                     	;# 
  3194  0FEE                     	;# 
  3195  0FEF                     	;# 
  3196  0000                     	;# 
  3197  0001                     	;# 
  3198  0002                     	;# 
  3199  0003                     	;# 
  3200  0004                     	;# 
  3201  0005                     	;# 
  3202  0006                     	;# 
  3203  0007                     	;# 
  3204  0008                     	;# 
  3205  0009                     	;# 
  3206  000A                     	;# 
  3207  000B                     	;# 
  3208  000C                     	;# 
  3209  000D                     	;# 
  3210  000E                     	;# 
  3211  0010                     	;# 
  3212  0011                     	;# 
  3213  0012                     	;# 
  3214  0013                     	;# 
  3215  0016                     	;# 
  3216  0017                     	;# 
  3217  0018                     	;# 
  3218  001C                     	;# 
  3219  001C                     	;# 
  3220  001D                     	;# 
  3221  001D                     	;# 
  3222  001E                     	;# 
  3223  001F                     	;# 
  3224  008C                     	;# 
  3225  008C                     	;# 
  3226  008D                     	;# 
  3227  008E                     	;# 
  3228  008E                     	;# 
  3229  008F                     	;# 
  3230  0090                     	;# 
  3231  0090                     	;# 
  3232  0091                     	;# 
  3233  0093                     	;# 
  3234  0094                     	;# 
  3235  0095                     	;# 
  3236  0096                     	;# 
  3237  0097                     	;# 
  3238  0098                     	;# 
  3239  0099                     	;# 
  3240  009A                     	;# 
  3241  009B                     	;# 
  3242  009C                     	;# 
  3243  009D                     	;# 
  3244  009E                     	;# 
  3245  010C                     	;# 
  3246  010D                     	;# 
  3247  010E                     	;# 
  3248  010E                     	;# 
  3249  010F                     	;# 
  3250  0110                     	;# 
  3251  0110                     	;# 
  3252  0111                     	;# 
  3253  0112                     	;# 
  3254  0112                     	;# 
  3255  0113                     	;# 
  3256  0114                     	;# 
  3257  0114                     	;# 
  3258  0115                     	;# 
  3259  0116                     	;# 
  3260  0116                     	;# 
  3261  0117                     	;# 
  3262  0119                     	;# 
  3263  0119                     	;# 
  3264  0119                     	;# 
  3265  011A                     	;# 
  3266  011A                     	;# 
  3267  011A                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011C                     	;# 
  3274  011C                     	;# 
  3275  011C                     	;# 
  3276  011D                     	;# 
  3277  011D                     	;# 
  3278  011D                     	;# 
  3279  011E                     	;# 
  3280  011E                     	;# 
  3281  011E                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  018C                     	;# 
  3288  018D                     	;# 
  3289  018E                     	;# 
  3290  018F                     	;# 
  3291  0190                     	;# 
  3292  0191                     	;# 
  3293  0192                     	;# 
  3294  0196                     	;# 
  3295  0197                     	;# 
  3296  0198                     	;# 
  3297  0199                     	;# 
  3298  019A                     	;# 
  3299  019B                     	;# 
  3300  019C                     	;# 
  3301  020C                     	;# 
  3302  020C                     	;# 
  3303  020D                     	;# 
  3304  020E                     	;# 
  3305  020F                     	;# 
  3306  020F                     	;# 
  3307  0210                     	;# 
  3308  0210                     	;# 
  3309  0211                     	;# 
  3310  0211                     	;# 
  3311  0212                     	;# 
  3312  0212                     	;# 
  3313  0213                     	;# 
  3314  0214                     	;# 
  3315  0215                     	;# 
  3316  0215                     	;# 
  3317  0216                     	;# 
  3318  0216                     	;# 
  3319  0217                     	;# 
  3320  0217                     	;# 
  3321  0218                     	;# 
  3322  0218                     	;# 
  3323  0219                     	;# 
  3324  021A                     	;# 
  3325  021B                     	;# 
  3326  021B                     	;# 
  3327  021C                     	;# 
  3328  021C                     	;# 
  3329  021D                     	;# 
  3330  021D                     	;# 
  3331  021E                     	;# 
  3332  021F                     	;# 
  3333  028C                     	;# 
  3334  028C                     	;# 
  3335  028D                     	;# 
  3336  028D                     	;# 
  3337  028E                     	;# 
  3338  028F                     	;# 
  3339  0290                     	;# 
  3340  0290                     	;# 
  3341  0291                     	;# 
  3342  0292                     	;# 
  3343  0292                     	;# 
  3344  0293                     	;# 
  3345  0293                     	;# 
  3346  0294                     	;# 
  3347  0295                     	;# 
  3348  0296                     	;# 
  3349  0296                     	;# 
  3350  0297                     	;# 
  3351  0298                     	;# 
  3352  0298                     	;# 
  3353  0299                     	;# 
  3354  0299                     	;# 
  3355  029A                     	;# 
  3356  029B                     	;# 
  3357  029C                     	;# 
  3358  029C                     	;# 
  3359  029D                     	;# 
  3360  030C                     	;# 
  3361  030C                     	;# 
  3362  030D                     	;# 
  3363  030E                     	;# 
  3364  030F                     	;# 
  3365  0310                     	;# 
  3366  0310                     	;# 
  3367  0311                     	;# 
  3368  0312                     	;# 
  3369  0313                     	;# 
  3370  0314                     	;# 
  3371  0314                     	;# 
  3372  0315                     	;# 
  3373  0316                     	;# 
  3374  0317                     	;# 
  3375  0318                     	;# 
  3376  0318                     	;# 
  3377  0319                     	;# 
  3378  031A                     	;# 
  3379  031B                     	;# 
  3380  031C                     	;# 
  3381  031C                     	;# 
  3382  031D                     	;# 
  3383  031E                     	;# 
  3384  031F                     	;# 
  3385  038C                     	;# 
  3386  038D                     	;# 
  3387  038E                     	;# 
  3388  0390                     	;# 
  3389  0391                     	;# 
  3390  0392                     	;# 
  3391  040C                     	;# 
  3392  040D                     	;# 
  3393  040E                     	;# 
  3394  040F                     	;# 
  3395  0410                     	;# 
  3396  0411                     	;# 
  3397  0416                     	;# 
  3398  0416                     	;# 
  3399  0417                     	;# 
  3400  0418                     	;# 
  3401  0418                     	;# 
  3402  0419                     	;# 
  3403  041A                     	;# 
  3404  041A                     	;# 
  3405  041B                     	;# 
  3406  041C                     	;# 
  3407  041C                     	;# 
  3408  041D                     	;# 
  3409  041E                     	;# 
  3410  041F                     	;# 
  3411  048C                     	;# 
  3412  048C                     	;# 
  3413  048D                     	;# 
  3414  048E                     	;# 
  3415  048F                     	;# 
  3416  048F                     	;# 
  3417  0490                     	;# 
  3418  0491                     	;# 
  3419  0492                     	;# 
  3420  0492                     	;# 
  3421  0493                     	;# 
  3422  0494                     	;# 
  3423  0495                     	;# 
  3424  0495                     	;# 
  3425  0496                     	;# 
  3426  0497                     	;# 
  3427  0498                     	;# 
  3428  0499                     	;# 
  3429  049A                     	;# 
  3430  049B                     	;# 
  3431  049C                     	;# 
  3432  049D                     	;# 
  3433  050C                     	;# 
  3434  050C                     	;# 
  3435  050D                     	;# 
  3436  050E                     	;# 
  3437  050F                     	;# 
  3438  050F                     	;# 
  3439  0510                     	;# 
  3440  0511                     	;# 
  3441  0512                     	;# 
  3442  0512                     	;# 
  3443  0513                     	;# 
  3444  0514                     	;# 
  3445  0515                     	;# 
  3446  0515                     	;# 
  3447  0516                     	;# 
  3448  0517                     	;# 
  3449  0518                     	;# 
  3450  0519                     	;# 
  3451  051A                     	;# 
  3452  051B                     	;# 
  3453  051C                     	;# 
  3454  051D                     	;# 
  3455  058C                     	;# 
  3456  058C                     	;# 
  3457  058D                     	;# 
  3458  058E                     	;# 
  3459  058F                     	;# 
  3460  058F                     	;# 
  3461  0590                     	;# 
  3462  0591                     	;# 
  3463  0592                     	;# 
  3464  0593                     	;# 
  3465  060C                     	;# 
  3466  060D                     	;# 
  3467  060E                     	;# 
  3468  060F                     	;# 
  3469  0610                     	;# 
  3470  0611                     	;# 
  3471  0612                     	;# 
  3472  0613                     	;# 
  3473  0614                     	;# 
  3474  0616                     	;# 
  3475  0617                     	;# 
  3476  0618                     	;# 
  3477  0619                     	;# 
  3478  061A                     	;# 
  3479  061B                     	;# 
  3480  061C                     	;# 
  3481  061D                     	;# 
  3482  061E                     	;# 
  3483  068C                     	;# 
  3484  068D                     	;# 
  3485  068E                     	;# 
  3486  068F                     	;# 
  3487  0690                     	;# 
  3488  0691                     	;# 
  3489  0692                     	;# 
  3490  0693                     	;# 
  3491  0694                     	;# 
  3492  070C                     	;# 
  3493  070D                     	;# 
  3494  070E                     	;# 
  3495  070F                     	;# 
  3496  0710                     	;# 
  3497  0711                     	;# 
  3498  0712                     	;# 
  3499  0713                     	;# 
  3500  0714                     	;# 
  3501  0716                     	;# 
  3502  0717                     	;# 
  3503  0718                     	;# 
  3504  0719                     	;# 
  3505  071A                     	;# 
  3506  071B                     	;# 
  3507  071C                     	;# 
  3508  071D                     	;# 
  3509  071E                     	;# 
  3510  0796                     	;# 
  3511  0797                     	;# 
  3512  0798                     	;# 
  3513  0799                     	;# 
  3514  079A                     	;# 
  3515  079B                     	;# 
  3516  080C                     	;# 
  3517  080D                     	;# 
  3518  080E                     	;# 
  3519  080F                     	;# 
  3520  0810                     	;# 
  3521  0811                     	;# 
  3522  0812                     	;# 
  3523  0813                     	;# 
  3524  0814                     	;# 
  3525  081A                     	;# 
  3526  081B                     	;# 
  3527  081C                     	;# 
  3528  081D                     	;# 
  3529  081E                     	;# 
  3530  081F                     	;# 
  3531  088C                     	;# 
  3532  088D                     	;# 
  3533  088E                     	;# 
  3534  088F                     	;# 
  3535  0890                     	;# 
  3536  0891                     	;# 
  3537  0892                     	;# 
  3538  0893                     	;# 
  3539  0895                     	;# 
  3540  0896                     	;# 
  3541  0897                     	;# 
  3542  0898                     	;# 
  3543  0899                     	;# 
  3544  089A                     	;# 
  3545  089B                     	;# 
  3546  090C                     	;# 
  3547  090E                     	;# 
  3548  090F                     	;# 
  3549  091F                     	;# 
  3550  091F                     	;# 
  3551  098F                     	;# 
  3552  098F                     	;# 
  3553  0990                     	;# 
  3554  0991                     	;# 
  3555  0992                     	;# 
  3556  0993                     	;# 
  3557  0994                     	;# 
  3558  0995                     	;# 
  3559  0996                     	;# 
  3560  0997                     	;# 
  3561  0E0F                     	;# 
  3562  0E10                     	;# 
  3563  0E11                     	;# 
  3564  0E12                     	;# 
  3565  0E13                     	;# 
  3566  0E14                     	;# 
  3567  0E15                     	;# 
  3568  0E16                     	;# 
  3569  0E17                     	;# 
  3570  0E18                     	;# 
  3571  0E19                     	;# 
  3572  0E1A                     	;# 
  3573  0E1B                     	;# 
  3574  0E1C                     	;# 
  3575  0E1D                     	;# 
  3576  0E1E                     	;# 
  3577  0E1F                     	;# 
  3578  0E20                     	;# 
  3579  0E21                     	;# 
  3580  0E22                     	;# 
  3581  0E23                     	;# 
  3582  0E24                     	;# 
  3583  0E25                     	;# 
  3584  0E26                     	;# 
  3585  0E27                     	;# 
  3586  0E28                     	;# 
  3587  0E29                     	;# 
  3588  0E2A                     	;# 
  3589  0E2B                     	;# 
  3590  0E2C                     	;# 
  3591  0E2D                     	;# 
  3592  0E2E                     	;# 
  3593  0E2F                     	;# 
  3594  0E30                     	;# 
  3595  0E31                     	;# 
  3596  0E32                     	;# 
  3597  0E33                     	;# 
  3598  0E34                     	;# 
  3599  0E35                     	;# 
  3600  0E36                     	;# 
  3601  0E37                     	;# 
  3602  0E8F                     	;# 
  3603  0E90                     	;# 
  3604  0E91                     	;# 
  3605  0E92                     	;# 
  3606  0E93                     	;# 
  3607  0E94                     	;# 
  3608  0E95                     	;# 
  3609  0E96                     	;# 
  3610  0E97                     	;# 
  3611  0E9C                     	;# 
  3612  0E9D                     	;# 
  3613  0E9E                     	;# 
  3614  0EA1                     	;# 
  3615  0EA2                     	;# 
  3616  0EA3                     	;# 
  3617  0EA4                     	;# 
  3618  0EA5                     	;# 
  3619  0EA9                     	;# 
  3620  0EAA                     	;# 
  3621  0EAB                     	;# 
  3622  0EAC                     	;# 
  3623  0EB1                     	;# 
  3624  0EB2                     	;# 
  3625  0EB3                     	;# 
  3626  0EB8                     	;# 
  3627  0EB9                     	;# 
  3628  0EBA                     	;# 
  3629  0EBB                     	;# 
  3630  0EBC                     	;# 
  3631  0EBD                     	;# 
  3632  0EBE                     	;# 
  3633  0EC3                     	;# 
  3634  0EC5                     	;# 
  3635  0EC6                     	;# 
  3636  0EC7                     	;# 
  3637  0EC8                     	;# 
  3638  0EC9                     	;# 
  3639  0ECA                     	;# 
  3640  0ECB                     	;# 
  3641  0ECC                     	;# 
  3642  0F10                     	;# 
  3643  0F11                     	;# 
  3644  0F12                     	;# 
  3645  0F13                     	;# 
  3646  0F14                     	;# 
  3647  0F15                     	;# 
  3648  0F16                     	;# 
  3649  0F17                     	;# 
  3650  0F18                     	;# 
  3651  0F19                     	;# 
  3652  0F1A                     	;# 
  3653  0F1B                     	;# 
  3654  0F1C                     	;# 
  3655  0F1D                     	;# 
  3656  0F1E                     	;# 
  3657  0F1F                     	;# 
  3658  0F20                     	;# 
  3659  0F21                     	;# 
  3660  0F22                     	;# 
  3661  0F23                     	;# 
  3662  0F24                     	;# 
  3663  0F25                     	;# 
  3664  0F26                     	;# 
  3665  0F27                     	;# 
  3666  0F38                     	;# 
  3667  0F39                     	;# 
  3668  0F3A                     	;# 
  3669  0F3B                     	;# 
  3670  0F3C                     	;# 
  3671  0F3D                     	;# 
  3672  0F3E                     	;# 
  3673  0F3F                     	;# 
  3674  0F40                     	;# 
  3675  0F41                     	;# 
  3676  0F43                     	;# 
  3677  0F44                     	;# 
  3678  0F45                     	;# 
  3679  0F46                     	;# 
  3680  0F47                     	;# 
  3681  0F48                     	;# 
  3682  0F49                     	;# 
  3683  0F4A                     	;# 
  3684  0F4B                     	;# 
  3685  0F4C                     	;# 
  3686  0F4E                     	;# 
  3687  0F4F                     	;# 
  3688  0F50                     	;# 
  3689  0F51                     	;# 
  3690  0F52                     	;# 
  3691  0F53                     	;# 
  3692  0F54                     	;# 
  3693  0F55                     	;# 
  3694  0F56                     	;# 
  3695  0F57                     	;# 
  3696  0F65                     	;# 
  3697  0F68                     	;# 
  3698  0F69                     	;# 
  3699  0F6A                     	;# 
  3700  0F6B                     	;# 
  3701  0FE4                     	;# 
  3702  0FE5                     	;# 
  3703  0FE6                     	;# 
  3704  0FE7                     	;# 
  3705  0FE8                     	;# 
  3706  0FE9                     	;# 
  3707  0FEA                     	;# 
  3708  0FEB                     	;# 
  3709  0FED                     	;# 
  3710  0FEE                     	;# 
  3711  0FEF                     	;# 
  3712  0000                     	;# 
  3713  0001                     	;# 
  3714  0002                     	;# 
  3715  0003                     	;# 
  3716  0004                     	;# 
  3717  0005                     	;# 
  3718  0006                     	;# 
  3719  0007                     	;# 
  3720  0008                     	;# 
  3721  0009                     	;# 
  3722  000A                     	;# 
  3723  000B                     	;# 
  3724  000C                     	;# 
  3725  000D                     	;# 
  3726  000E                     	;# 
  3727  0010                     	;# 
  3728  0011                     	;# 
  3729  0012                     	;# 
  3730  0013                     	;# 
  3731  0016                     	;# 
  3732  0017                     	;# 
  3733  0018                     	;# 
  3734  001C                     	;# 
  3735  001C                     	;# 
  3736  001D                     	;# 
  3737  001D                     	;# 
  3738  001E                     	;# 
  3739  001F                     	;# 
  3740  008C                     	;# 
  3741  008C                     	;# 
  3742  008D                     	;# 
  3743  008E                     	;# 
  3744  008E                     	;# 
  3745  008F                     	;# 
  3746  0090                     	;# 
  3747  0090                     	;# 
  3748  0091                     	;# 
  3749  0093                     	;# 
  3750  0094                     	;# 
  3751  0095                     	;# 
  3752  0096                     	;# 
  3753  0097                     	;# 
  3754  0098                     	;# 
  3755  0099                     	;# 
  3756  009A                     	;# 
  3757  009B                     	;# 
  3758  009C                     	;# 
  3759  009D                     	;# 
  3760  009E                     	;# 
  3761  010C                     	;# 
  3762  010D                     	;# 
  3763  010E                     	;# 
  3764  010E                     	;# 
  3765  010F                     	;# 
  3766  0110                     	;# 
  3767  0110                     	;# 
  3768  0111                     	;# 
  3769  0112                     	;# 
  3770  0112                     	;# 
  3771  0113                     	;# 
  3772  0114                     	;# 
  3773  0114                     	;# 
  3774  0115                     	;# 
  3775  0116                     	;# 
  3776  0116                     	;# 
  3777  0117                     	;# 
  3778  0119                     	;# 
  3779  0119                     	;# 
  3780  0119                     	;# 
  3781  011A                     	;# 
  3782  011A                     	;# 
  3783  011A                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011C                     	;# 
  3790  011C                     	;# 
  3791  011C                     	;# 
  3792  011D                     	;# 
  3793  011D                     	;# 
  3794  011D                     	;# 
  3795  011E                     	;# 
  3796  011E                     	;# 
  3797  011E                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  018C                     	;# 
  3804  018D                     	;# 
  3805  018E                     	;# 
  3806  018F                     	;# 
  3807  0190                     	;# 
  3808  0191                     	;# 
  3809  0192                     	;# 
  3810  0196                     	;# 
  3811  0197                     	;# 
  3812  0198                     	;# 
  3813  0199                     	;# 
  3814  019A                     	;# 
  3815  019B                     	;# 
  3816  019C                     	;# 
  3817  020C                     	;# 
  3818  020C                     	;# 
  3819  020D                     	;# 
  3820  020E                     	;# 
  3821  020F                     	;# 
  3822  020F                     	;# 
  3823  0210                     	;# 
  3824  0210                     	;# 
  3825  0211                     	;# 
  3826  0211                     	;# 
  3827  0212                     	;# 
  3828  0212                     	;# 
  3829  0213                     	;# 
  3830  0214                     	;# 
  3831  0215                     	;# 
  3832  0215                     	;# 
  3833  0216                     	;# 
  3834  0216                     	;# 
  3835  0217                     	;# 
  3836  0217                     	;# 
  3837  0218                     	;# 
  3838  0218                     	;# 
  3839  0219                     	;# 
  3840  021A                     	;# 
  3841  021B                     	;# 
  3842  021B                     	;# 
  3843  021C                     	;# 
  3844  021C                     	;# 
  3845  021D                     	;# 
  3846  021D                     	;# 
  3847  021E                     	;# 
  3848  021F                     	;# 
  3849  028C                     	;# 
  3850  028C                     	;# 
  3851  028D                     	;# 
  3852  028D                     	;# 
  3853  028E                     	;# 
  3854  028F                     	;# 
  3855  0290                     	;# 
  3856  0290                     	;# 
  3857  0291                     	;# 
  3858  0292                     	;# 
  3859  0292                     	;# 
  3860  0293                     	;# 
  3861  0293                     	;# 
  3862  0294                     	;# 
  3863  0295                     	;# 
  3864  0296                     	;# 
  3865  0296                     	;# 
  3866  0297                     	;# 
  3867  0298                     	;# 
  3868  0298                     	;# 
  3869  0299                     	;# 
  3870  0299                     	;# 
  3871  029A                     	;# 
  3872  029B                     	;# 
  3873  029C                     	;# 
  3874  029C                     	;# 
  3875  029D                     	;# 
  3876  030C                     	;# 
  3877  030C                     	;# 
  3878  030D                     	;# 
  3879  030E                     	;# 
  3880  030F                     	;# 
  3881  0310                     	;# 
  3882  0310                     	;# 
  3883  0311                     	;# 
  3884  0312                     	;# 
  3885  0313                     	;# 
  3886  0314                     	;# 
  3887  0314                     	;# 
  3888  0315                     	;# 
  3889  0316                     	;# 
  3890  0317                     	;# 
  3891  0318                     	;# 
  3892  0318                     	;# 
  3893  0319                     	;# 
  3894  031A                     	;# 
  3895  031B                     	;# 
  3896  031C                     	;# 
  3897  031C                     	;# 
  3898  031D                     	;# 
  3899  031E                     	;# 
  3900  031F                     	;# 
  3901  038C                     	;# 
  3902  038D                     	;# 
  3903  038E                     	;# 
  3904  0390                     	;# 
  3905  0391                     	;# 
  3906  0392                     	;# 
  3907  040C                     	;# 
  3908  040D                     	;# 
  3909  040E                     	;# 
  3910  040F                     	;# 
  3911  0410                     	;# 
  3912  0411                     	;# 
  3913  0416                     	;# 
  3914  0416                     	;# 
  3915  0417                     	;# 
  3916  0418                     	;# 
  3917  0418                     	;# 
  3918  0419                     	;# 
  3919  041A                     	;# 
  3920  041A                     	;# 
  3921  041B                     	;# 
  3922  041C                     	;# 
  3923  041C                     	;# 
  3924  041D                     	;# 
  3925  041E                     	;# 
  3926  041F                     	;# 
  3927  048C                     	;# 
  3928  048C                     	;# 
  3929  048D                     	;# 
  3930  048E                     	;# 
  3931  048F                     	;# 
  3932  048F                     	;# 
  3933  0490                     	;# 
  3934  0491                     	;# 
  3935  0492                     	;# 
  3936  0492                     	;# 
  3937  0493                     	;# 
  3938  0494                     	;# 
  3939  0495                     	;# 
  3940  0495                     	;# 
  3941  0496                     	;# 
  3942  0497                     	;# 
  3943  0498                     	;# 
  3944  0499                     	;# 
  3945  049A                     	;# 
  3946  049B                     	;# 
  3947  049C                     	;# 
  3948  049D                     	;# 
  3949  050C                     	;# 
  3950  050C                     	;# 
  3951  050D                     	;# 
  3952  050E                     	;# 
  3953  050F                     	;# 
  3954  050F                     	;# 
  3955  0510                     	;# 
  3956  0511                     	;# 
  3957  0512                     	;# 
  3958  0512                     	;# 
  3959  0513                     	;# 
  3960  0514                     	;# 
  3961  0515                     	;# 
  3962  0515                     	;# 
  3963  0516                     	;# 
  3964  0517                     	;# 
  3965  0518                     	;# 
  3966  0519                     	;# 
  3967  051A                     	;# 
  3968  051B                     	;# 
  3969  051C                     	;# 
  3970  051D                     	;# 
  3971  058C                     	;# 
  3972  058C                     	;# 
  3973  058D                     	;# 
  3974  058E                     	;# 
  3975  058F                     	;# 
  3976  058F                     	;# 
  3977  0590                     	;# 
  3978  0591                     	;# 
  3979  0592                     	;# 
  3980  0593                     	;# 
  3981  060C                     	;# 
  3982  060D                     	;# 
  3983  060E                     	;# 
  3984  060F                     	;# 
  3985  0610                     	;# 
  3986  0611                     	;# 
  3987  0612                     	;# 
  3988  0613                     	;# 
  3989  0614                     	;# 
  3990  0616                     	;# 
  3991  0617                     	;# 
  3992  0618                     	;# 
  3993  0619                     	;# 
  3994  061A                     	;# 
  3995  061B                     	;# 
  3996  061C                     	;# 
  3997  061D                     	;# 
  3998  061E                     	;# 
  3999  068C                     	;# 
  4000  068D                     	;# 
  4001  068E                     	;# 
  4002  068F                     	;# 
  4003  0690                     	;# 
  4004  0691                     	;# 
  4005  0692                     	;# 
  4006  0693                     	;# 
  4007  0694                     	;# 
  4008  070C                     	;# 
  4009  070D                     	;# 
  4010  070E                     	;# 
  4011  070F                     	;# 
  4012  0710                     	;# 
  4013  0711                     	;# 
  4014  0712                     	;# 
  4015  0713                     	;# 
  4016  0714                     	;# 
  4017  0716                     	;# 
  4018  0717                     	;# 
  4019  0718                     	;# 
  4020  0719                     	;# 
  4021  071A                     	;# 
  4022  071B                     	;# 
  4023  071C                     	;# 
  4024  071D                     	;# 
  4025  071E                     	;# 
  4026  0796                     	;# 
  4027  0797                     	;# 
  4028  0798                     	;# 
  4029  0799                     	;# 
  4030  079A                     	;# 
  4031  079B                     	;# 
  4032  080C                     	;# 
  4033  080D                     	;# 
  4034  080E                     	;# 
  4035  080F                     	;# 
  4036  0810                     	;# 
  4037  0811                     	;# 
  4038  0812                     	;# 
  4039  0813                     	;# 
  4040  0814                     	;# 
  4041  081A                     	;# 
  4042  081B                     	;# 
  4043  081C                     	;# 
  4044  081D                     	;# 
  4045  081E                     	;# 
  4046  081F                     	;# 
  4047  088C                     	;# 
  4048  088D                     	;# 
  4049  088E                     	;# 
  4050  088F                     	;# 
  4051  0890                     	;# 
  4052  0891                     	;# 
  4053  0892                     	;# 
  4054  0893                     	;# 
  4055  0895                     	;# 
  4056  0896                     	;# 
  4057  0897                     	;# 
  4058  0898                     	;# 
  4059  0899                     	;# 
  4060  089A                     	;# 
  4061  089B                     	;# 
  4062  090C                     	;# 
  4063  090E                     	;# 
  4064  090F                     	;# 
  4065  091F                     	;# 
  4066  091F                     	;# 
  4067  098F                     	;# 
  4068  098F                     	;# 
  4069  0990                     	;# 
  4070  0991                     	;# 
  4071  0992                     	;# 
  4072  0993                     	;# 
  4073  0994                     	;# 
  4074  0995                     	;# 
  4075  0996                     	;# 
  4076  0997                     	;# 
  4077  0E0F                     	;# 
  4078  0E10                     	;# 
  4079  0E11                     	;# 
  4080  0E12                     	;# 
  4081  0E13                     	;# 
  4082  0E14                     	;# 
  4083  0E15                     	;# 
  4084  0E16                     	;# 
  4085  0E17                     	;# 
  4086  0E18                     	;# 
  4087  0E19                     	;# 
  4088  0E1A                     	;# 
  4089  0E1B                     	;# 
  4090  0E1C                     	;# 
  4091  0E1D                     	;# 
  4092  0E1E                     	;# 
  4093  0E1F                     	;# 
  4094  0E20                     	;# 
  4095  0E21                     	;# 
  4096  0E22                     	;# 
  4097  0E23                     	;# 
  4098  0E24                     	;# 
  4099  0E25                     	;# 
  4100  0E26                     	;# 
  4101  0E27                     	;# 
  4102  0E28                     	;# 
  4103  0E29                     	;# 
  4104  0E2A                     	;# 
  4105  0E2B                     	;# 
  4106  0E2C                     	;# 
  4107  0E2D                     	;# 
  4108  0E2E                     	;# 
  4109  0E2F                     	;# 
  4110  0E30                     	;# 
  4111  0E31                     	;# 
  4112  0E32                     	;# 
  4113  0E33                     	;# 
  4114  0E34                     	;# 
  4115  0E35                     	;# 
  4116  0E36                     	;# 
  4117  0E37                     	;# 
  4118  0E8F                     	;# 
  4119  0E90                     	;# 
  4120  0E91                     	;# 
  4121  0E92                     	;# 
  4122  0E93                     	;# 
  4123  0E94                     	;# 
  4124  0E95                     	;# 
  4125  0E96                     	;# 
  4126  0E97                     	;# 
  4127  0E9C                     	;# 
  4128  0E9D                     	;# 
  4129  0E9E                     	;# 
  4130  0EA1                     	;# 
  4131  0EA2                     	;# 
  4132  0EA3                     	;# 
  4133  0EA4                     	;# 
  4134  0EA5                     	;# 
  4135  0EA9                     	;# 
  4136  0EAA                     	;# 
  4137  0EAB                     	;# 
  4138  0EAC                     	;# 
  4139  0EB1                     	;# 
  4140  0EB2                     	;# 
  4141  0EB3                     	;# 
  4142  0EB8                     	;# 
  4143  0EB9                     	;# 
  4144  0EBA                     	;# 
  4145  0EBB                     	;# 
  4146  0EBC                     	;# 
  4147  0EBD                     	;# 
  4148  0EBE                     	;# 
  4149  0EC3                     	;# 
  4150  0EC5                     	;# 
  4151  0EC6                     	;# 
  4152  0EC7                     	;# 
  4153  0EC8                     	;# 
  4154  0EC9                     	;# 
  4155  0ECA                     	;# 
  4156  0ECB                     	;# 
  4157  0ECC                     	;# 
  4158  0F10                     	;# 
  4159  0F11                     	;# 
  4160  0F12                     	;# 
  4161  0F13                     	;# 
  4162  0F14                     	;# 
  4163  0F15                     	;# 
  4164  0F16                     	;# 
  4165  0F17                     	;# 
  4166  0F18                     	;# 
  4167  0F19                     	;# 
  4168  0F1A                     	;# 
  4169  0F1B                     	;# 
  4170  0F1C                     	;# 
  4171  0F1D                     	;# 
  4172  0F1E                     	;# 
  4173  0F1F                     	;# 
  4174  0F20                     	;# 
  4175  0F21                     	;# 
  4176  0F22                     	;# 
  4177  0F23                     	;# 
  4178  0F24                     	;# 
  4179  0F25                     	;# 
  4180  0F26                     	;# 
  4181  0F27                     	;# 
  4182  0F38                     	;# 
  4183  0F39                     	;# 
  4184  0F3A                     	;# 
  4185  0F3B                     	;# 
  4186  0F3C                     	;# 
  4187  0F3D                     	;# 
  4188  0F3E                     	;# 
  4189  0F3F                     	;# 
  4190  0F40                     	;# 
  4191  0F41                     	;# 
  4192  0F43                     	;# 
  4193  0F44                     	;# 
  4194  0F45                     	;# 
  4195  0F46                     	;# 
  4196  0F47                     	;# 
  4197  0F48                     	;# 
  4198  0F49                     	;# 
  4199  0F4A                     	;# 
  4200  0F4B                     	;# 
  4201  0F4C                     	;# 
  4202  0F4E                     	;# 
  4203  0F4F                     	;# 
  4204  0F50                     	;# 
  4205  0F51                     	;# 
  4206  0F52                     	;# 
  4207  0F53                     	;# 
  4208  0F54                     	;# 
  4209  0F55                     	;# 
  4210  0F56                     	;# 
  4211  0F57                     	;# 
  4212  0F65                     	;# 
  4213  0F68                     	;# 
  4214  0F69                     	;# 
  4215  0F6A                     	;# 
  4216  0F6B                     	;# 
  4217  0FE4                     	;# 
  4218  0FE5                     	;# 
  4219  0FE6                     	;# 
  4220  0FE7                     	;# 
  4221  0FE8                     	;# 
  4222  0FE9                     	;# 
  4223  0FEA                     	;# 
  4224  0FEB                     	;# 
  4225  0FED                     	;# 
  4226  0FEE                     	;# 
  4227  0FEF                     	;_samples
  4228                           
  4229                           	psect	idataBANK1
  4230  17D6                     __pidataBANK1:	
  4231                           
  4232                           ;initializer for _presets
  4233  17D6  3400               	retlw	0
  4234  17D7  3446               	retlw	70
  4235  17D8  345F               	retlw	95
  4236  17D9  3469               	retlw	105
  4237  17DA  3478               	retlw	120
  4238                           
  4239                           ;initializer for _setpoint
  4240  17DB  3446               	retlw	70
  4241                           
  4242                           	psect	idataBANK2
  4243  089A                     __pidataBANK2:	
  4244                           
  4245                           ;initializer for ___cgram
  4246  089A  340C               	retlw	12
  4247  089B  3412               	retlw	18
  4248  089C  3412               	retlw	18
  4249  089D  340C               	retlw	12
  4250  089E  3400               	retlw	0
  4251  089F  3400               	retlw	0
  4252  08A0  3400               	retlw	0
  4253  08A1  3400               	retlw	0
  4254  08A2  340A               	retlw	10
  4255  08A3  3415               	retlw	21
  4256  08A4  3411               	retlw	17
  4257  08A5  340A               	retlw	10
  4258  08A6  3404               	retlw	4
  4259  08A7  3400               	retlw	0
  4260  08A8  3400               	retlw	0
  4261  08A9  3400               	retlw	0
  4262  08AA  340A               	retlw	10
  4263  08AB  341F               	retlw	31
  4264  08AC  341F               	retlw	31
  4265  08AD  340E               	retlw	14
  4266  08AE  3404               	retlw	4
  4267  08AF  3400               	retlw	0
  4268  08B0  3400               	retlw	0
  4269  08B1  3400               	retlw	0
  4270                           
  4271                           	psect	stringtext1
  4272  1000                     __pstringtext1:	
  4273  1000                     log@coeff:	
  4274  1000  3400               	retlw	0
  4275  1001  3400               	retlw	0
  4276  1002  3400               	retlw	0
  4277  1003  3400               	retlw	0
  4278  1004  3480               	retlw	128
  4279  1005  343F               	retlw	63
  4280  1006  34F0               	retlw	240
  4281  1007  34FF               	retlw	255
  4282  1008  34BE               	retlw	190
  4283  1009  34E2               	retlw	226
  4284  100A  34A9               	retlw	169
  4285  100B  343E               	retlw	62
  4286  100C  3483               	retlw	131
  4287  100D  3476               	retlw	118
  4288  100E  34BE               	retlw	190
  4289  100F  34AE               	retlw	174
  4290  1010  342B               	retlw	43
  4291  1011  343E               	retlw	62
  4292  1012  343C               	retlw	60
  4293  1013  34C3               	retlw	195
  4294  1014  34BD               	retlw	189
  4295  1015  34D2               	retlw	210
  4296  1016  3413               	retlw	19
  4297  1017  343D               	retlw	61
  4298  1018  3478               	retlw	120
  4299  1019  34D3               	retlw	211
  4300  101A  34BB               	retlw	187
  4301  101B                     __end_oflog@coeff:	
  4302  001E                     _T0CON0bits	set	30
  4303  001F                     _T0CON1	set	31
  4304  001E                     _T0CON0	set	30
  4305  0013                     _TRISC	set	19
  4306  0012                     _TRISB	set	18
  4307  0011                     _TRISA	set	17
  4308  0018                     _LATC	set	24
  4309  0017                     _LATB	set	23
  4310  0016                     _LATA	set	22
  4311  001C                     _TMR0L	set	28
  4312  001D                     _TMR0H	set	29
  4313  005F                     _GIE	set	95
  4314  0069                     _RB1	set	105
  4315  0068                     _RB0	set	104
  4316  006D                     _RB5	set	109
  4317  006C                     _RB4	set	108
  4318  006B                     _RB3	set	107
  4319  006A                     _RB2	set	106
  4320  0064                     _RA4	set	100
  4321  0063                     _RA3	set	99
  4322  008C                     _ADRESL	set	140
  4323  008D                     _ADRESH	set	141
  4324  0093                     _ADCON0bits	set	147
  4325  0093                     _ADCON0	set	147
  4326  009E                     _ADPCH	set	158
  4327  009D                     _ADACQ	set	157
  4328  009C                     _ADPRE	set	156
  4329  009B                     _ADCAP	set	155
  4330  009A                     _ADREF	set	154
  4331  0098                     _ADCLK	set	152
  4332  0097                     _ADSTAT	set	151
  4333  0099                     _ADACT	set	153
  4334  0096                     _ADCON3	set	150
  4335  0095                     _ADCON2	set	149
  4336  0094                     _ADCON1	set	148
  4337  0113                     _ADSTPTH	set	275
  4338  0112                     _ADSTPTL	set	274
  4339  0111                     _ADUTHH	set	273
  4340  0110                     _ADUTHL	set	272
  4341  010F                     _ADLTHH	set	271
  4342  010E                     _ADLTHL	set	270
  4343  010D                     _ADRPT	set	269
  4344  021F                     _CCPTMRS1bits	set	543
  4345  028E                     _T2CONbits	set	654
  4346  028C                     _T2TMR	set	652
  4347  028D                     _T2PR	set	653
  4348  0291                     _T2RST	set	657
  4349  028F                     _T2HLT	set	655
  4350  0290                     _T2CLKCON	set	656
  4351  028E                     _T2CON	set	654
  4352  038C                     _PWM6DCL	set	908
  4353  038D                     _PWM6DCH	set	909
  4354  038E                     _PWM6CON	set	910
  4355  0710                     _PIR4bits	set	1808
  4356  070C                     _PIR0bits	set	1804
  4357  0716                     _PIE0bits	set	1814
  4358  3865                     _TMR0IF	set	14437
  4359  0892                     _OSCTUNE	set	2194
  4360  0893                     _OSCFRQ	set	2195
  4361  0891                     _OSCEN	set	2193
  4362  088F                     _OSCCON3	set	2191
  4363  088D                     _OSCCON1	set	2189
  4364  090C                     _FVRCON	set	2316
  4365  0E8F                     _PPSLOCKbits	set	3727
  4366  0E8F                     _PPSLOCK	set	3727
  4367  0F11                     _RA1PPS	set	3857
  4368  0F4E                     _ANSELC	set	3918
  4369  0F43                     _ANSELB	set	3907
  4370  0F38                     _ANSELA	set	3896
  4371  0F65                     _WPUE	set	3941
  4372  0F4F                     _WPUC	set	3919
  4373  0F44                     _WPUB	set	3908
  4374  0F39                     _WPUA	set	3897
  4375  101B                     STR_2:	
  4376  101B  3453               	retlw	83	;'S'
  4377  101C  3465               	retlw	101	;'e'
  4378  101D  3474               	retlw	116	;'t'
  4379  101E  3470               	retlw	112	;'p'
  4380  101F  346F               	retlw	111	;'o'
  4381  1020  3469               	retlw	105	;'i'
  4382  1021  346E               	retlw	110	;'n'
  4383  1022  3474               	retlw	116	;'t'
  4384  1023  343F               	retlw	63	;'?'
  4385  1024  3400               	retlw	0
  4386                           
  4387                           	psect	stringtext2
  4388  1800                     __pstringtext2:	
  4389  1800                     STR_1:	
  4390  1800  3454               	retlw	84	;'T'
  4391  1801  3469               	retlw	105	;'i'
  4392  1802  346D               	retlw	109	;'m'
  4393  1803  3465               	retlw	101	;'e'
  4394  1804  343A               	retlw	58	;':'
  4395  1805  3400               	retlw	0
  4396                           
  4397                           	psect	stringtext3
  4398  0000                     __pstringtext3:	
  4399  101B                     
  4400                           ; #config settings
  4401  0000                     
  4402                           	psect	cinit
  4403  07C7                     start_initialization:	
  4404  07C7                     __initialization:		;BIGRAM
  4405                           
  4406                           ; Initialize objects allocated to BANK1
  4407  07C7  30D6               	movlw	low __pidataBANK1
  4408  07C8  0084               	movwf	4
  4409  07C9  3097               	movlw	(high __pidataBANK1)| (0+128)
  4410  07CA  0085               	movwf	5
  4411  07CB  30E4               	movlw	low __pdataBANK1
  4412  07CC  0086               	movwf	6
  4413  07CD  3000               	movlw	high __pdataBANK1
  4414  07CE  0087               	movwf	7
  4415  07CF  3000               	movlw	0
  4416  07D0  00FF               	movwf	btemp+1
  4417  07D1  3006               	movlw	6
  4418  07D2  3188  2005  3187   	fcall	init_ram
  4419                           
  4420                           ; Initialize objects allocated to BANK2
  4421  07D5  309A               	movlw	low __pidataBANK2
  4422  07D6  0084               	movwf	4
  4423  07D7  3088               	movlw	(high __pidataBANK2)| (0+128)
  4424  07D8  0085               	movwf	5
  4425  07D9  3020               	movlw	low __pdataBANK2
  4426  07DA  0086               	movwf	6
  4427  07DB  3001               	movlw	high __pdataBANK2
  4428  07DC  0087               	movwf	7
  4429  07DD  3000               	movlw	0
  4430  07DE  00FF               	movwf	btemp+1
  4431  07DF  3018               	movlw	24
  4432  07E0  3188  2005  3187   	fcall	init_ram
  4433                           
  4434                           ; Clear objects allocated to BIGRAM
  4435  07E3  308C               	movlw	low (0+9100)
  4436  07E4  0084               	movwf	4
  4437  07E5  3023               	movlw	high (0+9100)
  4438  07E6  0085               	movwf	5
  4439  07E7  3064               	movlw	100
  4440  07E8  00FE               	movwf	btemp
  4441  07E9  3000               	movlw	0
  4442  07EA  00FF               	movwf	btemp+1
  4443  07EB  3197  27F4  3187   	fcall	clear_ram0
  4444                           
  4445                           ; Clear objects allocated to BANK0
  4446  07EE  01EB               	clrf	__pbssBANK0& (0+127)
  4447  07EF  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4448  07F0  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4449  07F1  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4450  07F2  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  4451                           
  4452                           ; Clear objects allocated to BANK1
  4453  07F3  30C8               	movlw	low __pbssBANK1
  4454  07F4  0084               	movwf	4
  4455  07F5  3000               	movlw	high __pbssBANK1
  4456  07F6  0085               	movwf	5
  4457  07F7  301C               	movlw	28
  4458  07F8  00FE               	movwf	btemp
  4459  07F9  3000               	movlw	0
  4460  07FA  00FF               	movwf	btemp+1
  4461  07FB  3197  27F4         	fcall	clear_ram0
  4462  07FD                     end_of_initialization:	
  4463                           ;End of C runtime variable initialization code
  4464                           
  4465  07FD                     __end_of__initialization:	
  4466  07FD  0020               	movlb	0
  4467  07FE  3184  2CAF         	ljmp	_main	;jump to C main() function
  4468                           
  4469                           	psect	bssBANK0
  4470  006B                     __pbssBANK0:	
  4471  006B                     _pidMinOutput:	
  4472  006B                     	ds	2
  4473  006D                     _x:	
  4474  006D                     	ds	1
  4475  006E                     _upCount:	
  4476  006E                     	ds	1
  4477  006F                     _downCount:	
  4478  006F                     	ds	1
  4479                           
  4480                           	psect	bssBANK1
  4481  00C8                     __pbssBANK1:	
  4482  00C8                     LCD_Write_Int@F14394:	
  4483  00C8                     	ds	5
  4484  00CD                     _pidPrevInput:	
  4485  00CD                     	ds	3
  4486  00D0                     _pidIntegrated:	
  4487  00D0                     	ds	3
  4488  00D3                     _PID_Kd:	
  4489  00D3                     	ds	3
  4490  00D6                     _PID_Ki:	
  4491  00D6                     	ds	3
  4492  00D9                     _PID_Kp:	
  4493  00D9                     	ds	3
  4494  00DC                     _errno:	
  4495  00DC                     	ds	2
  4496  00DE                     _pidMaxOutput:	
  4497  00DE                     	ds	2
  4498  00E0                     main@sampleIndex:	
  4499  00E0                     	ds	2
  4500  00E2                     _toggleCount:	
  4501  00E2                     	ds	1
  4502  00E3                     _oldSetpoint:	
  4503  00E3                     	ds	1
  4504                           
  4505                           	psect	dataBANK1
  4506  00E4                     __pdataBANK1:	
  4507  00E4                     _presets:	
  4508  00E4                     	ds	5
  4509  00E9                     _setpoint:	
  4510  00E9                     	ds	1
  4511                           
  4512                           	psect	dataBANK2
  4513  0120                     __pdataBANK2:	
  4514  0120                     ___cgram:	
  4515  0120                     	ds	24
  4516                           
  4517                           	psect	inittext
  4518  0805                     init_ram:	
  4519  0805  00FE               	movwf	126
  4520  0806                     initloop:	
  4521  0806  0012               	moviw fsr0++
  4522  0807  001E               	movwi fsr1++
  4523  0808  3001               	movlw	1
  4524  0809  02FE               	subwf	126,f
  4525  080A  3000               	movlw	0
  4526  080B  3BFF               	subwfb	127,f
  4527  080C  087F               	movf	127,w
  4528  080D  047E               	iorwf	126,w
  4529  080E  1903               	btfsc	3,2
  4530  080F  3400               	retlw	0
  4531  0810  2806               	goto	initloop
  4532                           
  4533                           	psect	clrtext
  4534  17F4                     clear_ram0:	
  4535                           ;	Called with FSR0 containing the base address, and
  4536                           ;	btemp/btemp+1 has the size to clear
  4537                           
  4538  17F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4539  17F5                     clrloop0:	
  4540  17F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4541  17F6  3101               	addfsr 0,1
  4542  17F7  3001               	movlw	1
  4543  17F8  02FE               	subwf	126,f
  4544  17F9  3000               	movlw	0
  4545  17FA  3BFF               	subwfb	127,f
  4546  17FB  087F               	movf	127,w
  4547  17FC  047E               	iorwf	126,w
  4548  17FD  1903               	btfsc	3,2
  4549  17FE  3400               	retlw	0	;all done for this memory range, return
  4550  17FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  4551                           
  4552                           	psect	cstackBANK1
  4553  00A0                     __pcstackBANK1:	
  4554  00A0                     ??_main:	
  4555                           
  4556                           ; 1 bytes @ 0x0
  4557  00A0                     	ds	14
  4558  00AE                     main@R:	
  4559                           
  4560                           ; 3 bytes @ 0xE
  4561  00AE                     	ds	3
  4562  00B1                     _main$1075:	
  4563                           
  4564                           ; 3 bytes @ 0x11
  4565  00B1                     	ds	3
  4566  00B4                     main@PWM_Output:	
  4567                           
  4568                           ; 2 bytes @ 0x14
  4569  00B4                     	ds	2
  4570  00B6                     main@minutes:	
  4571                           
  4572                           ; 2 bytes @ 0x16
  4573  00B6                     	ds	2
  4574  00B8                     main@seconds:	
  4575                           
  4576                           ; 2 bytes @ 0x18
  4577  00B8                     	ds	2
  4578  00BA                     main@counter:	
  4579                           
  4580                           ; 2 bytes @ 0x1A
  4581  00BA                     	ds	2
  4582  00BC                     main@readTemperature:	
  4583                           
  4584                           ; 2 bytes @ 0x1C
  4585  00BC                     	ds	2
  4586  00BE                     main@toggle:	
  4587                           
  4588                           ; 1 bytes @ 0x1E
  4589  00BE                     	ds	1
  4590  00BF                     main@displayTemp:	
  4591                           
  4592                           ; 2 bytes @ 0x1F
  4593  00BF                     	ds	2
  4594  00C1                     main@totals:	
  4595                           
  4596                           ; 4 bytes @ 0x21
  4597  00C1                     	ds	4
  4598  00C5                     main@steinhart:	
  4599                           
  4600                           ; 3 bytes @ 0x25
  4601  00C5                     	ds	3
  4602                           
  4603                           	psect	cstackCOMMON
  4604  0070                     __pcstackCOMMON:	
  4605  0070                     ?_SYSTEM_Initialize:	
  4606  0070                     ?_LCD_Write_Char:	
  4607                           ; 1 bytes @ 0x0
  4608                           
  4609  0070                     ?_PWM6_LoadDutyValue:	
  4610                           ; 1 bytes @ 0x0
  4611                           
  4612  0070                     ?_readButtons:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0070                     ?_tempSetpoint:	
  4616                           ; 1 bytes @ 0x0
  4617                           
  4618  0070                     ?_LCD_Clear:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621  0070                     ?_LCD_Cmd:	
  4622                           ; 1 bytes @ 0x0
  4623                           
  4624  0070                     ?_OSCILLATOR_Initialize:	
  4625                           ; 1 bytes @ 0x0
  4626                           
  4627  0070                     ??_OSCILLATOR_Initialize:	
  4628                           ; 1 bytes @ 0x0
  4629                           
  4630  0070                     ?_PWM6_Initialize:	
  4631                           ; 1 bytes @ 0x0
  4632                           
  4633  0070                     ??_PWM6_Initialize:	
  4634                           ; 1 bytes @ 0x0
  4635                           
  4636  0070                     ?_TMR0_Initialize:	
  4637                           ; 1 bytes @ 0x0
  4638                           
  4639  0070                     ??_TMR0_Initialize:	
  4640                           ; 1 bytes @ 0x0
  4641                           
  4642  0070                     ?_TMR2_Initialize:	
  4643                           ; 1 bytes @ 0x0
  4644                           
  4645  0070                     ??_TMR2_Initialize:	
  4646                           ; 1 bytes @ 0x0
  4647                           
  4648  0070                     ?_main:	
  4649                           ; 1 bytes @ 0x0
  4650                           
  4651  0070                     ?_ADCC_Initialize:	
  4652                           ; 1 bytes @ 0x0
  4653                           
  4654  0070                     ??_ADCC_Initialize:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0070                     ?_InitCustomChars:	
  4658                           ; 1 bytes @ 0x0
  4659                           
  4660  0070                     ?_LCD_Port:	
  4661                           ; 1 bytes @ 0x0
  4662                           
  4663  0070                     ??_LCD_Port:	
  4664                           ; 1 bytes @ 0x0
  4665                           
  4666  0070                     ?_LCD_Init:	
  4667                           ; 1 bytes @ 0x0
  4668                           
  4669  0070                     ?_Init_PID:	
  4670                           ; 1 bytes @ 0x0
  4671                           
  4672  0070                     ??_Init_PID:	
  4673                           ; 1 bytes @ 0x0
  4674                           
  4675  0070                     ?_PIN_MANAGER_Initialize:	
  4676                           ; 1 bytes @ 0x0
  4677                           
  4678  0070                     ??_PIN_MANAGER_Initialize:	
  4679                           ; 1 bytes @ 0x0
  4680                           
  4681  0070                     ?_ADCC_GetSingleConversion:	
  4682                           ; 1 bytes @ 0x0
  4683                           
  4684  0070                     ?___wmul:	
  4685                           ; 2 bytes @ 0x0
  4686                           
  4687  0070                     ?___awdiv:	
  4688                           ; 2 bytes @ 0x0
  4689                           
  4690  0070                     ?___awmod:	
  4691                           ; 2 bytes @ 0x0
  4692                           
  4693  0070                     ?___ftpack:	
  4694                           ; 2 bytes @ 0x0
  4695                           
  4696  0070                     ?_frexp:	
  4697                           ; 3 bytes @ 0x0
  4698                           
  4699  0070                     ?___ftneg:	
  4700                           ; 3 bytes @ 0x0
  4701                           
  4702  0070                     ?___aldiv:	
  4703                           ; 3 bytes @ 0x0
  4704                           
  4705  0070                     LCD_Port@a:	
  4706                           ; 4 bytes @ 0x0
  4707                           
  4708  0070                     PIN_MANAGER_Initialize@state:	
  4709                           ; 1 bytes @ 0x0
  4710                           
  4711  0070                     PWM6_LoadDutyValue@dutyValue:	
  4712                           ; 1 bytes @ 0x0
  4713                           
  4714  0070                     ___wmul@multiplier:	
  4715                           ; 2 bytes @ 0x0
  4716                           
  4717  0070                     ___awdiv@divisor:	
  4718                           ; 2 bytes @ 0x0
  4719                           
  4720  0070                     ___awmod@divisor:	
  4721                           ; 2 bytes @ 0x0
  4722                           
  4723  0070                     ___ftpack@arg:	
  4724                           ; 2 bytes @ 0x0
  4725                           
  4726  0070                     ___ftneg@f1:	
  4727                           ; 3 bytes @ 0x0
  4728                           
  4729  0070                     frexp@value:	
  4730                           ; 3 bytes @ 0x0
  4731                           
  4732  0070                     ___aldiv@divisor:	
  4733                           ; 3 bytes @ 0x0
  4734                           
  4735                           
  4736                           ; 4 bytes @ 0x0
  4737  0070                     	ds	1
  4738  0071                     ??_LCD_Write_Char:	
  4739  0071                     ??_LCD_Cmd:	
  4740                           ; 1 bytes @ 0x1
  4741                           
  4742  0071                     LCD_Cmd@a:	
  4743                           ; 1 bytes @ 0x1
  4744                           
  4745                           
  4746                           ; 1 bytes @ 0x1
  4747  0071                     	ds	1
  4748  0072                     ?_LCD_Set_Cursor:	
  4749  0072                     ??_PWM6_LoadDutyValue:	
  4750                           ; 1 bytes @ 0x2
  4751                           
  4752  0072                     ??_LCD_Clear:	
  4753                           ; 1 bytes @ 0x2
  4754                           
  4755  0072                     ??_LCD_Init:	
  4756                           ; 1 bytes @ 0x2
  4757                           
  4758  0072                     LCD_Set_Cursor@y:	
  4759                           ; 1 bytes @ 0x2
  4760                           
  4761  0072                     LCD_Write_Char@temp:	
  4762                           ; 1 bytes @ 0x2
  4763                           
  4764  0072                     ___wmul@multiplicand:	
  4765                           ; 1 bytes @ 0x2
  4766                           
  4767  0072                     ___awdiv@dividend:	
  4768                           ; 2 bytes @ 0x2
  4769                           
  4770  0072                     ___awmod@dividend:	
  4771                           ; 2 bytes @ 0x2
  4772                           
  4773                           
  4774                           ; 2 bytes @ 0x2
  4775  0072                     	ds	1
  4776  0073                     ??_ADCC_GetSingleConversion:	
  4777  0073                     ??_LCD_Set_Cursor:	
  4778                           ; 1 bytes @ 0x3
  4779                           
  4780  0073                     ??___ftneg:	
  4781                           ; 1 bytes @ 0x3
  4782                           
  4783  0073                     ADCC_GetSingleConversion@channel:	
  4784                           ; 1 bytes @ 0x3
  4785                           
  4786  0073                     LCD_Init@style:	
  4787                           ; 1 bytes @ 0x3
  4788                           
  4789  0073                     LCD_Write_Char@y:	
  4790                           ; 1 bytes @ 0x3
  4791                           
  4792  0073                     ___ftpack@exp:	
  4793                           ; 1 bytes @ 0x3
  4794                           
  4795  0073                     frexp@eptr:	
  4796                           ; 1 bytes @ 0x3
  4797                           
  4798                           
  4799                           ; 1 bytes @ 0x3
  4800  0073                     	ds	1
  4801  0074                     ??_frexp:	
  4802  0074                     ??___wmul:	
  4803                           ; 1 bytes @ 0x4
  4804                           
  4805  0074                     ??___awdiv:	
  4806                           ; 1 bytes @ 0x4
  4807                           
  4808  0074                     ??___awmod:	
  4809                           ; 1 bytes @ 0x4
  4810                           
  4811  0074                     LCD_Write_Char@a:	
  4812                           ; 1 bytes @ 0x4
  4813                           
  4814  0074                     ___ftpack@sign:	
  4815                           ; 1 bytes @ 0x4
  4816                           
  4817  0074                     ___wmul@product:	
  4818                           ; 1 bytes @ 0x4
  4819                           
  4820  0074                     ___aldiv@dividend:	
  4821                           ; 2 bytes @ 0x4
  4822                           
  4823                           
  4824                           ; 4 bytes @ 0x4
  4825  0074                     	ds	1
  4826  0075                     ?_LCD_Write_String:	
  4827  0075                     ??___ftpack:	
  4828                           ; 1 bytes @ 0x5
  4829                           
  4830  0075                     ??_InitCustomChars:	
  4831                           ; 1 bytes @ 0x5
  4832                           
  4833  0075                     LCD_Set_Cursor@x:	
  4834                           ; 1 bytes @ 0x5
  4835                           
  4836  0075                     ___awdiv@counter:	
  4837                           ; 1 bytes @ 0x5
  4838                           
  4839  0075                     ___awmod@counter:	
  4840                           ; 1 bytes @ 0x5
  4841                           
  4842  0075                     LCD_Write_String@a:	
  4843                           ; 1 bytes @ 0x5
  4844                           
  4845                           
  4846                           ; 2 bytes @ 0x5
  4847  0075                     	ds	1
  4848  0076                     ?___lwdiv:	
  4849  0076                     InitCustomChars@i:	
  4850                           ; 2 bytes @ 0x6
  4851                           
  4852  0076                     LCD_Set_Cursor@z:	
  4853                           ; 1 bytes @ 0x6
  4854                           
  4855  0076                     ___awdiv@sign:	
  4856                           ; 1 bytes @ 0x6
  4857                           
  4858  0076                     ___awmod@sign:	
  4859                           ; 1 bytes @ 0x6
  4860                           
  4861  0076                     ___lwdiv@divisor:	
  4862                           ; 1 bytes @ 0x6
  4863                           
  4864                           
  4865                           ; 2 bytes @ 0x6
  4866  0076                     	ds	1
  4867  0077                     ??_SYSTEM_Initialize:	
  4868  0077                     ??_LCD_Write_String:	
  4869                           ; 1 bytes @ 0x7
  4870                           
  4871  0077                     LCD_Set_Cursor@w:	
  4872                           ; 1 bytes @ 0x7
  4873                           
  4874  0077                     ___awdiv@quotient:	
  4875                           ; 1 bytes @ 0x7
  4876                           
  4877                           
  4878                           ; 2 bytes @ 0x7
  4879  0077                     	ds	1
  4880  0078                     ??___aldiv:	
  4881  0078                     ?___awtoft:	
  4882                           ; 1 bytes @ 0x8
  4883                           
  4884  0078                     ?___lbtoft:	
  4885                           ; 3 bytes @ 0x8
  4886                           
  4887  0078                     ?___lwtoft:	
  4888                           ; 3 bytes @ 0x8
  4889                           
  4890  0078                     LCD_Set_Cursor@temp:	
  4891                           ; 3 bytes @ 0x8
  4892                           
  4893  0078                     LCD_Write_String@i:	
  4894                           ; 1 bytes @ 0x8
  4895                           
  4896  0078                     ___awtoft@c:	
  4897                           ; 2 bytes @ 0x8
  4898                           
  4899  0078                     ___lwdiv@dividend:	
  4900                           ; 2 bytes @ 0x8
  4901                           
  4902  0078                     ___lwtoft@c:	
  4903                           ; 2 bytes @ 0x8
  4904                           
  4905                           
  4906                           ; 2 bytes @ 0x8
  4907  0078                     	ds	1
  4908  0079                     ?_LCD_Write_Int:	
  4909  0079                     LCD_Write_Int@value:	
  4910                           ; 1 bytes @ 0x9
  4911                           
  4912                           
  4913                           ; 2 bytes @ 0x9
  4914  0079                     	ds	1
  4915  007A                     ??___lwdiv:	
  4916                           
  4917                           ; 1 bytes @ 0xA
  4918  007A                     	ds	1
  4919  007B                     ??___awtoft:	
  4920  007B                     ??___lwtoft:	
  4921                           ; 1 bytes @ 0xB
  4922                           
  4923  007B                     LCD_Write_Int@fieldLength:	
  4924                           ; 1 bytes @ 0xB
  4925                           
  4926  007B                     ___lbtoft@c:	
  4927                           ; 1 bytes @ 0xB
  4928                           
  4929  007B                     ___lwdiv@quotient:	
  4930                           ; 1 bytes @ 0xB
  4931                           
  4932                           
  4933                           ; 2 bytes @ 0xB
  4934  007B                     	ds	1
  4935  007C                     LCD_Write_Int@numPlaces:	
  4936                           
  4937                           ; 1 bytes @ 0xC
  4938  007C                     	ds	1
  4939  007D                     LCD_Write_Int@sign:	
  4940  007D                     ___awtoft@sign:	
  4941                           ; 1 bytes @ 0xD
  4942                           
  4943  007D                     ___lwdiv@counter:	
  4944                           ; 1 bytes @ 0xD
  4945                           
  4946                           
  4947                           ; 1 bytes @ 0xD
  4948  007D                     	ds	1
  4949  007E                     ??_PID_Calculate:	
  4950  007E                     ??_eval_poly:	
  4951                           ; 1 bytes @ 0xE
  4952                           
  4953  007E                     ??___ftsub:	
  4954                           ; 1 bytes @ 0xE
  4955                           
  4956                           
  4957                           	psect	cstackBANK0
  4958  0020                     __pcstackBANK0:	
  4959                           ; 1 bytes @ 0xE
  4960                           
  4961  0020                     ??_LCD_Write_Int:	
  4962  0020                     ??___lbtoft:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0020                     ?___ftdiv:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0020                     ?___ftmul:	
  4969                           ; 3 bytes @ 0x0
  4970                           
  4971  0020                     ___aldiv@counter:	
  4972                           ; 3 bytes @ 0x0
  4973                           
  4974  0020                     ___ftdiv@f2:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0020                     ___ftmul@f1:	
  4978                           ; 3 bytes @ 0x0
  4979                           
  4980                           
  4981                           ; 3 bytes @ 0x0
  4982  0020                     	ds	1
  4983  0021                     ___aldiv@sign:	
  4984                           
  4985                           ; 1 bytes @ 0x1
  4986  0021                     	ds	1
  4987  0022                     ___aldiv@quotient:	
  4988                           
  4989                           ; 4 bytes @ 0x2
  4990  0022                     	ds	1
  4991  0023                     ___ftdiv@f1:	
  4992  0023                     ___ftmul@f2:	
  4993                           ; 3 bytes @ 0x3
  4994                           
  4995                           
  4996                           ; 3 bytes @ 0x3
  4997  0023                     	ds	2
  4998  0025                     LCD_Write_Int@str:	
  4999                           
  5000                           ; 5 bytes @ 0x5
  5001  0025                     	ds	1
  5002  0026                     ??___ftdiv:	
  5003  0026                     ??___ftmul:	
  5004                           ; 1 bytes @ 0x6
  5005                           
  5006                           
  5007                           ; 1 bytes @ 0x6
  5008  0026                     	ds	4
  5009  002A                     ___ftdiv@cntr:	
  5010  002A                     ___ftmul@exp:	
  5011                           ; 1 bytes @ 0xA
  5012                           
  5013  002A                     LCD_Write_Int@j:	
  5014                           ; 1 bytes @ 0xA
  5015                           
  5016                           
  5017                           ; 2 bytes @ 0xA
  5018  002A                     	ds	1
  5019  002B                     ___ftdiv@f3:	
  5020  002B                     ___ftmul@f3_as_product:	
  5021                           ; 3 bytes @ 0xB
  5022                           
  5023                           
  5024                           ; 3 bytes @ 0xB
  5025  002B                     	ds	1
  5026  002C                     LCD_Write_Int@i:	
  5027                           
  5028                           ; 2 bytes @ 0xC
  5029  002C                     	ds	2
  5030  002E                     ??_readButtons:	
  5031  002E                     ___ftdiv@exp:	
  5032                           ; 1 bytes @ 0xE
  5033                           
  5034  002E                     ___ftmul@cntr:	
  5035                           ; 1 bytes @ 0xE
  5036                           
  5037                           
  5038                           ; 1 bytes @ 0xE
  5039  002E                     	ds	1
  5040  002F                     ___ftdiv@sign:	
  5041  002F                     ___ftmul@sign:	
  5042                           ; 1 bytes @ 0xF
  5043                           
  5044                           
  5045                           ; 1 bytes @ 0xF
  5046  002F                     	ds	1
  5047  0030                     ?___ftadd:	
  5048  0030                     ___ftadd@f1:	
  5049                           ; 3 bytes @ 0x10
  5050                           
  5051                           
  5052                           ; 3 bytes @ 0x10
  5053  0030                     	ds	1
  5054  0031                     ??_tempSetpoint:	
  5055                           
  5056                           ; 1 bytes @ 0x11
  5057  0031                     	ds	2
  5058  0033                     ___ftadd@f2:	
  5059                           
  5060                           ; 3 bytes @ 0x13
  5061  0033                     	ds	1
  5062  0034                     tempSetpoint@counter:	
  5063                           
  5064                           ; 1 bytes @ 0x14
  5065  0034                     	ds	2
  5066  0036                     ??___ftadd:	
  5067                           
  5068                           ; 1 bytes @ 0x16
  5069  0036                     	ds	4
  5070  003A                     ___ftadd@sign:	
  5071                           
  5072                           ; 1 bytes @ 0x1A
  5073  003A                     	ds	1
  5074  003B                     ___ftadd@exp2:	
  5075                           
  5076                           ; 1 bytes @ 0x1B
  5077  003B                     	ds	1
  5078  003C                     ___ftadd@exp1:	
  5079                           
  5080                           ; 1 bytes @ 0x1C
  5081  003C                     	ds	1
  5082  003D                     ?___ftge:	
  5083  003D                     ?_eval_poly:	
  5084                           ; 1 bit 
  5085                           
  5086  003D                     ?___ftsub:	
  5087                           ; 3 bytes @ 0x1D
  5088                           
  5089  003D                     ___ftge@ff1:	
  5090                           ; 3 bytes @ 0x1D
  5091                           
  5092  003D                     ___ftsub@f2:	
  5093                           ; 3 bytes @ 0x1D
  5094                           
  5095  003D                     eval_poly@x:	
  5096                           ; 3 bytes @ 0x1D
  5097                           
  5098                           
  5099                           ; 3 bytes @ 0x1D
  5100  003D                     	ds	3
  5101  0040                     eval_poly@d:	
  5102  0040                     ___ftge@ff2:	
  5103                           ; 2 bytes @ 0x20
  5104                           
  5105  0040                     ___ftsub@f1:	
  5106                           ; 3 bytes @ 0x20
  5107                           
  5108                           
  5109                           ; 3 bytes @ 0x20
  5110  0040                     	ds	2
  5111  0042                     eval_poly@n:	
  5112                           
  5113                           ; 2 bytes @ 0x22
  5114  0042                     	ds	1
  5115  0043                     ??___ftge:	
  5116                           
  5117                           ; 1 bytes @ 0x23
  5118  0043                     	ds	1
  5119  0044                     eval_poly@res:	
  5120                           
  5121                           ; 3 bytes @ 0x24
  5122  0044                     	ds	2
  5123  0046                     ?_PID_Calculate:	
  5124  0046                     PID_Calculate@setpoint:	
  5125                           ; 3 bytes @ 0x26
  5126                           
  5127                           
  5128                           ; 2 bytes @ 0x26
  5129  0046                     	ds	1
  5130  0047                     ?_log:	
  5131  0047                     log@x:	
  5132                           ; 3 bytes @ 0x27
  5133                           
  5134                           
  5135                           ; 3 bytes @ 0x27
  5136  0047                     	ds	1
  5137  0048                     PID_Calculate@temp:	
  5138                           
  5139                           ; 3 bytes @ 0x28
  5140  0048                     	ds	2
  5141  004A                     ??_log:	
  5142                           
  5143                           ; 1 bytes @ 0x2A
  5144  004A                     	ds	1
  5145  004B                     log@exponent:	
  5146  004B                     PID_Calculate@errorValue:	
  5147                           ; 2 bytes @ 0x2B
  5148                           
  5149                           
  5150                           ; 3 bytes @ 0x2B
  5151  004B                     	ds	3
  5152  004E                     _PID_Calculate$1076:	
  5153                           
  5154                           ; 3 bytes @ 0x2E
  5155  004E                     	ds	3
  5156  0051                     PID_Calculate@derivativeValue:	
  5157                           
  5158                           ; 3 bytes @ 0x31
  5159  0051                     	ds	3
  5160  0054                     PID_Calculate@pidPrevError:	
  5161                           
  5162                           ; 3 bytes @ 0x34
  5163  0054                     	ds	3
  5164  0057                     PID_Calculate@Result:	
  5165                           
  5166                           ; 3 bytes @ 0x37
  5167  0057                     	ds	3
  5168  005A                     PID_Calculate@error:	
  5169                           
  5170                           ; 3 bytes @ 0x3A
  5171  005A                     	ds	3
  5172  005D                     ?___fttol:	
  5173  005D                     ___fttol@f1:	
  5174                           ; 4 bytes @ 0x3D
  5175                           
  5176                           
  5177                           ; 3 bytes @ 0x3D
  5178  005D                     	ds	4
  5179  0061                     ??___fttol:	
  5180                           
  5181                           ; 1 bytes @ 0x41
  5182  0061                     	ds	4
  5183  0065                     ___fttol@sign1:	
  5184                           
  5185                           ; 1 bytes @ 0x45
  5186  0065                     	ds	1
  5187  0066                     ___fttol@lval:	
  5188                           
  5189                           ; 4 bytes @ 0x46
  5190  0066                     	ds	4
  5191  006A                     ___fttol@exp1:	
  5192                           
  5193                           ; 1 bytes @ 0x4A
  5194  006A                     	ds	1
  5195                           
  5196                           	psect	maintext
  5197  04AF                     __pmaintext:	
  5198 ;;
  5199 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  5200 ;;
  5201 ;; *************** function _main *****************
  5202 ;; Defined at:
  5203 ;;		line 13 in file "main.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  totals          4   33[BANK1 ] long 
  5208 ;;  steinhart       3   37[BANK1 ] float 
  5209 ;;  R               3   14[BANK1 ] float 
  5210 ;;  displayTemp     2   31[BANK1 ] unsigned int 
  5211 ;;  readTemperat    2   28[BANK1 ] unsigned int 
  5212 ;;  counter         2   26[BANK1 ] unsigned int 
  5213 ;;  seconds         2   24[BANK1 ] unsigned int 
  5214 ;;  minutes         2   22[BANK1 ] unsigned int 
  5215 ;;  PWM_Output      2   20[BANK1 ] unsigned int 
  5216 ;;  readTemperat    2    0        unsigned int 
  5217 ;;  toggle          1   30[BANK1 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : B1F/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;Total ram usage:       40 bytes
  5232 ;; Hardware stack levels required when called:    5
  5233 ;; This function calls:
  5234 ;;		_ADCC_GetSingleConversion
  5235 ;;		_LCD_Set_Cursor
  5236 ;;		_LCD_Write_Char
  5237 ;;		_LCD_Write_Int
  5238 ;;		_LCD_Write_String
  5239 ;;		_PID_Calculate
  5240 ;;		_PWM6_LoadDutyValue
  5241 ;;		_SYSTEM_Initialize
  5242 ;;		___aldiv
  5243 ;;		___ftadd
  5244 ;;		___ftdiv
  5245 ;;		___ftge
  5246 ;;		___ftmul
  5247 ;;		___ftneg
  5248 ;;		___ftsub
  5249 ;;		___fttol
  5250 ;;		___lbtoft
  5251 ;;		___lwdiv
  5252 ;;		___lwtoft
  5253 ;;		___wmul
  5254 ;;		_log
  5255 ;;		_readButtons
  5256 ;;		_tempSetpoint
  5257 ;; This function is called by:
  5258 ;;		Startup code after reset
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _main
  5264  04AF                     _main:	
  5265                           
  5266                           ;main.c: 15: SYSTEM_Initialize();
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5270  04AF  318A  2236  3184   	fcall	_SYSTEM_Initialize
  5271                           
  5272                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  5273  04B2  0021               	movlb	1	; select bank1
  5274  04B3  01B4               	clrf	main@PWM_Output^(0+128)
  5275  04B4  01B5               	clrf	(main@PWM_Output+1)^(0+128)
  5276  04B5  01B8               	clrf	main@seconds^(0+128)
  5277  04B6  01B9               	clrf	(main@seconds+1)^(0+128)
  5278  04B7  01BA               	clrf	main@counter^(0+128)
  5279  04B8  01BB               	clrf	(main@counter+1)^(0+128)
  5280  04B9  01B6               	clrf	main@minutes^(0+128)
  5281  04BA  01B7               	clrf	(main@minutes+1)^(0+128)
  5282                           
  5283                           ;main.c: 19: uint8_t toggle = 0;
  5284  04BB  01BE               	clrf	main@toggle^(0+128)
  5285                           
  5286                           ;main.c: 21: float R, steinhart;
  5287                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5288                           ;main.c: 25: int32_t totals = 0;
  5289  04BC  3000               	movlw	0
  5290  04BD  00C4               	movwf	(main@totals+3)^(0+128)
  5291  04BE  3000               	movlw	0
  5292  04BF  00C3               	movwf	(main@totals+2)^(0+128)
  5293  04C0  3000               	movlw	0
  5294  04C1  00C2               	movwf	(main@totals+1)^(0+128)
  5295  04C2  3000               	movlw	0
  5296  04C3  00C1               	movwf	main@totals^(0+128)
  5297  04C4                     l3022:	
  5298                           ;main.c: 28: while (1)
  5299                           
  5300                           
  5301                           ;main.c: 29: {
  5302                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  5303  04C4  3002               	movlw	2
  5304  04C5  3188  201E  3184   	fcall	_ADCC_GetSingleConversion
  5305  04C8  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5306  04C9  0021               	movlb	1	; select bank1
  5307  04CA  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5308  04CB  0870               	movf	?_ADCC_GetSingleConversion,w
  5309  04CC  00BC               	movwf	main@readTemperature^(0+128)
  5310                           
  5311                           ;main.c: 32: totals = totals - samples[sampleIndex];
  5312  04CD  0841               	movf	main@totals^(0+128),w
  5313  04CE  00A0               	movwf	??_main^(0+128)
  5314  04CF  0842               	movf	(main@totals+1)^(0+128),w
  5315  04D0  00A1               	movwf	(??_main^(0+128)+1)
  5316  04D1  0843               	movf	(main@totals+2)^(0+128),w
  5317  04D2  00A2               	movwf	(??_main^(0+128)+2)
  5318  04D3  0844               	movf	(main@totals+3)^(0+128),w
  5319  04D4  00A3               	movwf	(??_main^(0+128)+3)
  5320  04D5  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5321  04D6  00A5               	movwf	((??_main+4)^(0+128)+1)
  5322  04D7  0860               	movf	main@sampleIndex^(0+128),w
  5323  04D8  00A4               	movwf	(??_main+4)^(0+128)
  5324  04D9  35A4               	lslf	(??_main+4)^(0+128),f
  5325  04DA  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5326  04DB  308C               	movlw	140
  5327  04DC  00A6               	movwf	(??_main+6)^(0+128)
  5328  04DD  3023               	movlw	35
  5329  04DE  00A7               	movwf	((??_main+6)^(0+128)+1)
  5330  04DF  0824               	movf	(??_main+4)^(0+128),w
  5331  04E0  0726               	addwf	(??_main+6)^(0+128),w
  5332  04E1  0086               	movwf	6
  5333  04E2  0825               	movf	(??_main+5)^(0+128),w
  5334  04E3  3D27               	addwfc	(??_main+7)^(0+128),w
  5335  04E4  0087               	movwf	7
  5336  04E5  3F40               	moviw [0]fsr1
  5337  04E6  00A8               	movwf	(??_main+8)^(0+128)
  5338  04E7  3F41               	moviw [1]fsr1
  5339  04E8  00A9               	movwf	((??_main+8)^(0+128)+1)
  5340  04E9  0828               	movf	(??_main+8)^(0+128),w
  5341  04EA  00AA               	movwf	(??_main+10)^(0+128)
  5342  04EB  0829               	movf	(??_main+9)^(0+128),w
  5343  04EC  00AB               	movwf	((??_main+10)^(0+128)+1)
  5344  04ED  01AC               	clrf	((??_main+10)^(0+128)+2)
  5345  04EE  01AD               	clrf	((??_main+10)^(0+128)+3)
  5346  04EF  09AA               	comf	(??_main+10)^(0+128),f
  5347  04F0  09AB               	comf	((??_main+10)^(0+128)+1),f
  5348  04F1  09AC               	comf	((??_main+10)^(0+128)+2),f
  5349  04F2  09AD               	comf	((??_main+10)^(0+128)+3),f
  5350  04F3  0AAA               	incf	(??_main+10)^(0+128),f
  5351  04F4  1903               	skipnz
  5352  04F5  0AAB               	incf	((??_main+10)^(0+128)+1),f
  5353  04F6  1903               	skipnz
  5354  04F7  0AAC               	incf	((??_main+10)^(0+128)+2),f
  5355  04F8  1903               	skipnz
  5356  04F9  0AAD               	incf	((??_main+10)^(0+128)+3),f
  5357  04FA  082A               	movf	(??_main+10)^(0+128),w
  5358  04FB  07A0               	addwf	??_main^(0+128),f
  5359  04FC  082B               	movf	(??_main+11)^(0+128),w
  5360  04FD  3DA1               	addwfc	(??_main^(0+128)+1),f
  5361  04FE  082C               	movf	(??_main+12)^(0+128),w
  5362  04FF  3DA2               	addwfc	(??_main^(0+128)+2),f
  5363  0500  082D               	movf	(??_main+13)^(0+128),w
  5364  0501  3DA3               	addwfc	(??_main^(0+128)+3),f
  5365  0502  0823               	movf	(??_main+3)^(0+128),w
  5366  0503  00C4               	movwf	(main@totals+3)^(0+128)
  5367  0504  0822               	movf	(??_main+2)^(0+128),w
  5368  0505  00C3               	movwf	(main@totals+2)^(0+128)
  5369  0506  0821               	movf	(??_main+1)^(0+128),w
  5370  0507  00C2               	movwf	(main@totals+1)^(0+128)
  5371  0508  0820               	movf	??_main^(0+128),w
  5372  0509  00C1               	movwf	main@totals^(0+128)
  5373                           
  5374                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  5375  050A  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5376  050B  00A1               	movwf	(??_main^(0+128)+1)
  5377  050C  0860               	movf	main@sampleIndex^(0+128),w
  5378  050D  00A0               	movwf	??_main^(0+128)
  5379  050E  35A0               	lslf	??_main^(0+128),f
  5380  050F  0DA1               	rlf	(??_main^(0+128)+1),f
  5381  0510  308C               	movlw	140
  5382  0511  00A2               	movwf	(??_main+2)^(0+128)
  5383  0512  3023               	movlw	35
  5384  0513  00A3               	movwf	((??_main+2)^(0+128)+1)
  5385  0514  0820               	movf	??_main^(0+128),w
  5386  0515  0722               	addwf	(??_main+2)^(0+128),w
  5387  0516  0086               	movwf	6
  5388  0517  0821               	movf	(??_main+1)^(0+128),w
  5389  0518  3D23               	addwfc	(??_main+3)^(0+128),w
  5390  0519  0087               	movwf	7
  5391  051A  083C               	movf	main@readTemperature^(0+128),w
  5392  051B  3FC0               	movwi [0]fsr1
  5393  051C  083D               	movf	(main@readTemperature+1)^(0+128),w
  5394  051D  3FC1               	movwi [1]fsr1
  5395                           
  5396                           ;main.c: 36: totals = totals + samples[sampleIndex];
  5397  051E  0841               	movf	main@totals^(0+128),w
  5398  051F  00A0               	movwf	??_main^(0+128)
  5399  0520  0842               	movf	(main@totals+1)^(0+128),w
  5400  0521  00A1               	movwf	(??_main^(0+128)+1)
  5401  0522  0843               	movf	(main@totals+2)^(0+128),w
  5402  0523  00A2               	movwf	(??_main^(0+128)+2)
  5403  0524  0844               	movf	(main@totals+3)^(0+128),w
  5404  0525  00A3               	movwf	(??_main^(0+128)+3)
  5405  0526  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5406  0527  00A5               	movwf	((??_main+4)^(0+128)+1)
  5407  0528  0860               	movf	main@sampleIndex^(0+128),w
  5408  0529  00A4               	movwf	(??_main+4)^(0+128)
  5409  052A  35A4               	lslf	(??_main+4)^(0+128),f
  5410  052B  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5411  052C  308C               	movlw	140
  5412  052D  00A6               	movwf	(??_main+6)^(0+128)
  5413  052E  3023               	movlw	35
  5414  052F  00A7               	movwf	((??_main+6)^(0+128)+1)
  5415  0530  0824               	movf	(??_main+4)^(0+128),w
  5416  0531  0726               	addwf	(??_main+6)^(0+128),w
  5417  0532  0086               	movwf	6
  5418  0533  0825               	movf	(??_main+5)^(0+128),w
  5419  0534  3D27               	addwfc	(??_main+7)^(0+128),w
  5420  0535  0087               	movwf	7
  5421  0536  3F40               	moviw [0]fsr1
  5422  0537  00A8               	movwf	(??_main+8)^(0+128)
  5423  0538  3F41               	moviw [1]fsr1
  5424  0539  00A9               	movwf	((??_main+8)^(0+128)+1)
  5425  053A  0828               	movf	(??_main+8)^(0+128),w
  5426  053B  00AA               	movwf	(??_main+10)^(0+128)
  5427  053C  0829               	movf	(??_main+9)^(0+128),w
  5428  053D  00AB               	movwf	((??_main+10)^(0+128)+1)
  5429  053E  01AC               	clrf	((??_main+10)^(0+128)+2)
  5430  053F  01AD               	clrf	((??_main+10)^(0+128)+3)
  5431  0540  082A               	movf	(??_main+10)^(0+128),w
  5432  0541  07A0               	addwf	??_main^(0+128),f
  5433  0542  082B               	movf	(??_main+11)^(0+128),w
  5434  0543  3DA1               	addwfc	(??_main^(0+128)+1),f
  5435  0544  082C               	movf	(??_main+12)^(0+128),w
  5436  0545  3DA2               	addwfc	(??_main^(0+128)+2),f
  5437  0546  082D               	movf	(??_main+13)^(0+128),w
  5438  0547  3DA3               	addwfc	(??_main^(0+128)+3),f
  5439  0548  0823               	movf	(??_main+3)^(0+128),w
  5440  0549  00C4               	movwf	(main@totals+3)^(0+128)
  5441  054A  0822               	movf	(??_main+2)^(0+128),w
  5442  054B  00C3               	movwf	(main@totals+2)^(0+128)
  5443  054C  0821               	movf	(??_main+1)^(0+128),w
  5444  054D  00C2               	movwf	(main@totals+1)^(0+128)
  5445  054E  0820               	movf	??_main^(0+128),w
  5446  054F  00C1               	movwf	main@totals^(0+128)
  5447                           
  5448                           ;main.c: 38: sampleIndex += 1;
  5449  0550  3001               	movlw	1
  5450  0551  07E0               	addwf	main@sampleIndex^(0+128),f
  5451  0552  3000               	movlw	0
  5452  0553  3DE1               	addwfc	(main@sampleIndex+1)^(0+128),f
  5453                           
  5454                           ;main.c: 40: if(sampleIndex >= 50)
  5455  0554  3000               	movlw	0
  5456  0555  0261               	subwf	(main@sampleIndex+1)^(0+128),w
  5457  0556  3032               	movlw	50
  5458  0557  1903               	skipnz
  5459  0558  0260               	subwf	main@sampleIndex^(0+128),w
  5460  0559  1C03               	skipc
  5461  055A  2D5D               	goto	l3036
  5462                           
  5463                           ;main.c: 41: {
  5464                           ;main.c: 42: sampleIndex = 0;
  5465  055B  01E0               	clrf	main@sampleIndex^(0+128)
  5466  055C  01E1               	clrf	(main@sampleIndex+1)^(0+128)
  5467  055D                     l3036:	
  5468                           
  5469                           ;main.c: 43: }
  5470                           ;main.c: 45: readTemperature = totals / 50;
  5471  055D  3000               	movlw	0
  5472  055E  00F3               	movwf	___aldiv@divisor+3
  5473  055F  3000               	movlw	0
  5474  0560  00F2               	movwf	___aldiv@divisor+2
  5475  0561  3000               	movlw	0
  5476  0562  00F1               	movwf	___aldiv@divisor+1
  5477  0563  3032               	movlw	50
  5478  0564  00F0               	movwf	___aldiv@divisor
  5479  0565  0844               	movf	(main@totals+3)^(0+128),w
  5480  0566  00F7               	movwf	___aldiv@dividend+3
  5481  0567  0843               	movf	(main@totals+2)^(0+128),w
  5482  0568  00F6               	movwf	___aldiv@dividend+2
  5483  0569  0842               	movf	(main@totals+1)^(0+128),w
  5484  056A  00F5               	movwf	___aldiv@dividend+1
  5485  056B  0841               	movf	main@totals^(0+128),w
  5486  056C  00F4               	movwf	___aldiv@dividend
  5487  056D  3180  2004  3184   	fcall	___aldiv
  5488  0570  0871               	movf	?___aldiv+1,w
  5489  0571  0021               	movlb	1	; select bank1
  5490  0572  00BD               	movwf	(main@readTemperature+1)^(0+128)
  5491  0573  0870               	movf	?___aldiv,w
  5492  0574  00BC               	movwf	main@readTemperature^(0+128)
  5493                           
  5494                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5495  0575  3000               	movlw	0
  5496  0576  0020               	movlb	0	; select bank0
  5497  0577  00B0               	movwf	___ftadd@f1
  5498  0578  3080               	movlw	128
  5499  0579  00B1               	movwf	___ftadd@f1+1
  5500  057A  30BF               	movlw	191
  5501  057B  00B2               	movwf	___ftadd@f1+2
  5502  057C  0021               	movlb	1	; select bank1
  5503  057D  083D               	movf	(main@readTemperature+1)^(0+128),w
  5504  057E  00F9               	movwf	___lwtoft@c+1
  5505  057F  083C               	movf	main@readTemperature^(0+128),w
  5506  0580  00F8               	movwf	___lwtoft@c
  5507  0581  3188  2059  3184   	fcall	___lwtoft
  5508  0584  0878               	movf	?___lwtoft,w
  5509  0585  0020               	movlb	0	; select bank0
  5510  0586  00A0               	movwf	___ftdiv@f2
  5511  0587  0879               	movf	?___lwtoft+1,w
  5512  0588  00A1               	movwf	___ftdiv@f2+1
  5513  0589  087A               	movf	?___lwtoft+2,w
  5514  058A  00A2               	movwf	___ftdiv@f2+2
  5515  058B  30C0               	movlw	192
  5516  058C  00A3               	movwf	___ftdiv@f1
  5517  058D  307F               	movlw	127
  5518  058E  00A4               	movwf	___ftdiv@f1+1
  5519  058F  3044               	movlw	68
  5520  0590  00A5               	movwf	___ftdiv@f1+2
  5521  0591  318D  25F3  3184   	fcall	___ftdiv
  5522  0594  0020               	movlb	0	; select bank0
  5523  0595  0820               	movf	?___ftdiv,w
  5524  0596  00B3               	movwf	___ftadd@f2
  5525  0597  0821               	movf	?___ftdiv+1,w
  5526  0598  00B4               	movwf	___ftadd@f2+1
  5527  0599  0822               	movf	?___ftdiv+2,w
  5528  059A  00B5               	movwf	___ftadd@f2+2
  5529  059B  3182  220F  3184   	fcall	___ftadd
  5530  059E  0020               	movlb	0	; select bank0
  5531  059F  0830               	movf	?___ftadd,w
  5532  05A0  0021               	movlb	1	; select bank1
  5533  05A1  00B1               	movwf	_main$1075^(0+128)
  5534  05A2  0020               	movlb	0	; select bank0
  5535  05A3  0831               	movf	?___ftadd+1,w
  5536  05A4  0021               	movlb	1	; select bank1
  5537  05A5  00B2               	movwf	(_main$1075+1)^(0+128)
  5538  05A6  0020               	movlb	0	; select bank0
  5539  05A7  0832               	movf	?___ftadd+2,w
  5540  05A8  0021               	movlb	1	; select bank1
  5541  05A9  00B3               	movwf	(_main$1075+2)^(0+128)
  5542                           
  5543                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5544  05AA  0831               	movf	_main$1075^(0+128),w
  5545  05AB  0020               	movlb	0	; select bank0
  5546  05AC  00A0               	movwf	___ftdiv@f2
  5547  05AD  0021               	movlb	1	; select bank1
  5548  05AE  0832               	movf	(_main$1075+1)^(0+128),w
  5549  05AF  0020               	movlb	0	; select bank0
  5550  05B0  00A1               	movwf	___ftdiv@f2+1
  5551  05B1  0021               	movlb	1	; select bank1
  5552  05B2  0833               	movf	(_main$1075+2)^(0+128),w
  5553  05B3  0020               	movlb	0	; select bank0
  5554  05B4  00A2               	movwf	___ftdiv@f2+2
  5555  05B5  3060               	movlw	96
  5556  05B6  00A3               	movwf	___ftdiv@f1
  5557  05B7  301F               	movlw	31
  5558  05B8  00A4               	movwf	___ftdiv@f1+1
  5559  05B9  3046               	movlw	70
  5560  05BA  00A5               	movwf	___ftdiv@f1+2
  5561  05BB  318D  25F3  3184   	fcall	___ftdiv
  5562  05BE  0020               	movlb	0	; select bank0
  5563  05BF  0820               	movf	?___ftdiv,w
  5564  05C0  0021               	movlb	1	; select bank1
  5565  05C1  00AE               	movwf	main@R^(0+128)
  5566  05C2  0020               	movlb	0	; select bank0
  5567  05C3  0821               	movf	?___ftdiv+1,w
  5568  05C4  0021               	movlb	1	; select bank1
  5569  05C5  00AF               	movwf	(main@R+1)^(0+128)
  5570  05C6  0020               	movlb	0	; select bank0
  5571  05C7  0822               	movf	?___ftdiv+2,w
  5572  05C8  0021               	movlb	1	; select bank1
  5573  05C9  00B0               	movwf	(main@R+2)^(0+128)
  5574                           
  5575                           ;main.c: 50: steinhart = R /10061;
  5576  05CA  3034               	movlw	52
  5577  05CB  0020               	movlb	0	; select bank0
  5578  05CC  00A0               	movwf	___ftdiv@f2
  5579  05CD  301D               	movlw	29
  5580  05CE  00A1               	movwf	___ftdiv@f2+1
  5581  05CF  3046               	movlw	70
  5582  05D0  00A2               	movwf	___ftdiv@f2+2
  5583  05D1  0021               	movlb	1	; select bank1
  5584  05D2  082E               	movf	main@R^(0+128),w
  5585  05D3  0020               	movlb	0	; select bank0
  5586  05D4  00A3               	movwf	___ftdiv@f1
  5587  05D5  0021               	movlb	1	; select bank1
  5588  05D6  082F               	movf	(main@R+1)^(0+128),w
  5589  05D7  0020               	movlb	0	; select bank0
  5590  05D8  00A4               	movwf	___ftdiv@f1+1
  5591  05D9  0021               	movlb	1	; select bank1
  5592  05DA  0830               	movf	(main@R+2)^(0+128),w
  5593  05DB  0020               	movlb	0	; select bank0
  5594  05DC  00A5               	movwf	___ftdiv@f1+2
  5595  05DD  318D  25F3  3184   	fcall	___ftdiv
  5596  05E0  0020               	movlb	0	; select bank0
  5597  05E1  0820               	movf	?___ftdiv,w
  5598  05E2  0021               	movlb	1	; select bank1
  5599  05E3  00C5               	movwf	main@steinhart^(0+128)
  5600  05E4  0020               	movlb	0	; select bank0
  5601  05E5  0821               	movf	?___ftdiv+1,w
  5602  05E6  0021               	movlb	1	; select bank1
  5603  05E7  00C6               	movwf	(main@steinhart+1)^(0+128)
  5604  05E8  0020               	movlb	0	; select bank0
  5605  05E9  0822               	movf	?___ftdiv+2,w
  5606  05EA  0021               	movlb	1	; select bank1
  5607  05EB  00C7               	movwf	(main@steinhart+2)^(0+128)
  5608                           
  5609                           ;main.c: 51: steinhart = log(steinhart);
  5610  05EC  0845               	movf	main@steinhart^(0+128),w
  5611  05ED  0020               	movlb	0	; select bank0
  5612  05EE  00C7               	movwf	log@x
  5613  05EF  0021               	movlb	1	; select bank1
  5614  05F0  0846               	movf	(main@steinhart+1)^(0+128),w
  5615  05F1  0020               	movlb	0	; select bank0
  5616  05F2  00C8               	movwf	log@x+1
  5617  05F3  0021               	movlb	1	; select bank1
  5618  05F4  0847               	movf	(main@steinhart+2)^(0+128),w
  5619  05F5  0020               	movlb	0	; select bank0
  5620  05F6  00C9               	movwf	log@x+2
  5621  05F7  318E  269C  3184   	fcall	_log
  5622  05FA  0020               	movlb	0	; select bank0
  5623  05FB  0847               	movf	?_log,w
  5624  05FC  0021               	movlb	1	; select bank1
  5625  05FD  00C5               	movwf	main@steinhart^(0+128)
  5626  05FE  0020               	movlb	0	; select bank0
  5627  05FF  0848               	movf	?_log+1,w
  5628  0600  0021               	movlb	1	; select bank1
  5629  0601  00C6               	movwf	(main@steinhart+1)^(0+128)
  5630  0602  0020               	movlb	0	; select bank0
  5631  0603  0849               	movf	?_log+2,w
  5632  0604  0021               	movlb	1	; select bank1
  5633  0605  00C7               	movwf	(main@steinhart+2)^(0+128)
  5634                           
  5635                           ;main.c: 52: steinhart /= 3995;
  5636  0606  30B0               	movlw	176
  5637  0607  0020               	movlb	0	; select bank0
  5638  0608  00A0               	movwf	___ftdiv@f2
  5639  0609  3079               	movlw	121
  5640  060A  00A1               	movwf	___ftdiv@f2+1
  5641  060B  3045               	movlw	69
  5642  060C  00A2               	movwf	___ftdiv@f2+2
  5643  060D  0021               	movlb	1	; select bank1
  5644  060E  0845               	movf	main@steinhart^(0+128),w
  5645  060F  0020               	movlb	0	; select bank0
  5646  0610  00A3               	movwf	___ftdiv@f1
  5647  0611  0021               	movlb	1	; select bank1
  5648  0612  0846               	movf	(main@steinhart+1)^(0+128),w
  5649  0613  0020               	movlb	0	; select bank0
  5650  0614  00A4               	movwf	___ftdiv@f1+1
  5651  0615  0021               	movlb	1	; select bank1
  5652  0616  0847               	movf	(main@steinhart+2)^(0+128),w
  5653  0617  0020               	movlb	0	; select bank0
  5654  0618  00A5               	movwf	___ftdiv@f1+2
  5655  0619  318D  25F3  3184   	fcall	___ftdiv
  5656  061C  0020               	movlb	0	; select bank0
  5657  061D  0820               	movf	?___ftdiv,w
  5658  061E  0021               	movlb	1	; select bank1
  5659  061F  00C5               	movwf	main@steinhart^(0+128)
  5660  0620  0020               	movlb	0	; select bank0
  5661  0621  0821               	movf	?___ftdiv+1,w
  5662  0622  0021               	movlb	1	; select bank1
  5663  0623  00C6               	movwf	(main@steinhart+1)^(0+128)
  5664  0624  0020               	movlb	0	; select bank0
  5665  0625  0822               	movf	?___ftdiv+2,w
  5666  0626  0021               	movlb	1	; select bank1
  5667  0627  00C7               	movwf	(main@steinhart+2)^(0+128)
  5668                           
  5669                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5670  0628  30CF               	movlw	207
  5671  0629  0020               	movlb	0	; select bank0
  5672  062A  00B0               	movwf	___ftadd@f1
  5673  062B  305B               	movlw	91
  5674  062C  00B1               	movwf	___ftadd@f1+1
  5675  062D  303B               	movlw	59
  5676  062E  00B2               	movwf	___ftadd@f1+2
  5677  062F  0021               	movlb	1	; select bank1
  5678  0630  0845               	movf	main@steinhart^(0+128),w
  5679  0631  0020               	movlb	0	; select bank0
  5680  0632  00B3               	movwf	___ftadd@f2
  5681  0633  0021               	movlb	1	; select bank1
  5682  0634  0846               	movf	(main@steinhart+1)^(0+128),w
  5683  0635  0020               	movlb	0	; select bank0
  5684  0636  00B4               	movwf	___ftadd@f2+1
  5685  0637  0021               	movlb	1	; select bank1
  5686  0638  0847               	movf	(main@steinhart+2)^(0+128),w
  5687  0639  0020               	movlb	0	; select bank0
  5688  063A  00B5               	movwf	___ftadd@f2+2
  5689  063B  3182  220F  3184   	fcall	___ftadd
  5690  063E  0020               	movlb	0	; select bank0
  5691  063F  0830               	movf	?___ftadd,w
  5692  0640  0021               	movlb	1	; select bank1
  5693  0641  00C5               	movwf	main@steinhart^(0+128)
  5694  0642  0020               	movlb	0	; select bank0
  5695  0643  0831               	movf	?___ftadd+1,w
  5696  0644  0021               	movlb	1	; select bank1
  5697  0645  00C6               	movwf	(main@steinhart+1)^(0+128)
  5698  0646  0020               	movlb	0	; select bank0
  5699  0647  0832               	movf	?___ftadd+2,w
  5700  0648  0021               	movlb	1	; select bank1
  5701  0649  00C7               	movwf	(main@steinhart+2)^(0+128)
  5702                           
  5703                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5704  064A  0845               	movf	main@steinhart^(0+128),w
  5705  064B  0020               	movlb	0	; select bank0
  5706  064C  00A0               	movwf	___ftdiv@f2
  5707  064D  0021               	movlb	1	; select bank1
  5708  064E  0846               	movf	(main@steinhart+1)^(0+128),w
  5709  064F  0020               	movlb	0	; select bank0
  5710  0650  00A1               	movwf	___ftdiv@f2+1
  5711  0651  0021               	movlb	1	; select bank1
  5712  0652  0847               	movf	(main@steinhart+2)^(0+128),w
  5713  0653  0020               	movlb	0	; select bank0
  5714  0654  00A2               	movwf	___ftdiv@f2+2
  5715  0655  3000               	movlw	0
  5716  0656  00A3               	movwf	___ftdiv@f1
  5717  0657  3080               	movlw	128
  5718  0658  00A4               	movwf	___ftdiv@f1+1
  5719  0659  303F               	movlw	63
  5720  065A  00A5               	movwf	___ftdiv@f1+2
  5721  065B  318D  25F3  3184   	fcall	___ftdiv
  5722  065E  0020               	movlb	0	; select bank0
  5723  065F  0820               	movf	?___ftdiv,w
  5724  0660  0021               	movlb	1	; select bank1
  5725  0661  00C5               	movwf	main@steinhart^(0+128)
  5726  0662  0020               	movlb	0	; select bank0
  5727  0663  0821               	movf	?___ftdiv+1,w
  5728  0664  0021               	movlb	1	; select bank1
  5729  0665  00C6               	movwf	(main@steinhart+1)^(0+128)
  5730  0666  0020               	movlb	0	; select bank0
  5731  0667  0822               	movf	?___ftdiv+2,w
  5732  0668  0021               	movlb	1	; select bank1
  5733  0669  00C7               	movwf	(main@steinhart+2)^(0+128)
  5734                           
  5735                           ;main.c: 55: steinhart -= 273.15;
  5736  066A  3093               	movlw	147
  5737  066B  0020               	movlb	0	; select bank0
  5738  066C  00BD               	movwf	___ftsub@f2
  5739  066D  3088               	movlw	136
  5740  066E  00BE               	movwf	___ftsub@f2+1
  5741  066F  3043               	movlw	67
  5742  0670  00BF               	movwf	___ftsub@f2+2
  5743  0671  0021               	movlb	1	; select bank1
  5744  0672  0845               	movf	main@steinhart^(0+128),w
  5745  0673  0020               	movlb	0	; select bank0
  5746  0674  00C0               	movwf	___ftsub@f1
  5747  0675  0021               	movlb	1	; select bank1
  5748  0676  0846               	movf	(main@steinhart+1)^(0+128),w
  5749  0677  0020               	movlb	0	; select bank0
  5750  0678  00C1               	movwf	___ftsub@f1+1
  5751  0679  0021               	movlb	1	; select bank1
  5752  067A  0847               	movf	(main@steinhart+2)^(0+128),w
  5753  067B  0020               	movlb	0	; select bank0
  5754  067C  00C2               	movwf	___ftsub@f1+2
  5755  067D  3189  211A  3184   	fcall	___ftsub
  5756  0680  0020               	movlb	0	; select bank0
  5757  0681  083D               	movf	?___ftsub,w
  5758  0682  0021               	movlb	1	; select bank1
  5759  0683  00C5               	movwf	main@steinhart^(0+128)
  5760  0684  0020               	movlb	0	; select bank0
  5761  0685  083E               	movf	?___ftsub+1,w
  5762  0686  0021               	movlb	1	; select bank1
  5763  0687  00C6               	movwf	(main@steinhart+1)^(0+128)
  5764  0688  0020               	movlb	0	; select bank0
  5765  0689  083F               	movf	?___ftsub+2,w
  5766  068A  0021               	movlb	1	; select bank1
  5767  068B  00C7               	movwf	(main@steinhart+2)^(0+128)
  5768                           
  5769                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5770  068C  0845               	movf	main@steinhart^(0+128),w
  5771  068D  0020               	movlb	0	; select bank0
  5772  068E  00A3               	movwf	___ftmul@f2
  5773  068F  0021               	movlb	1	; select bank1
  5774  0690  0846               	movf	(main@steinhart+1)^(0+128),w
  5775  0691  0020               	movlb	0	; select bank0
  5776  0692  00A4               	movwf	___ftmul@f2+1
  5777  0693  0021               	movlb	1	; select bank1
  5778  0694  0847               	movf	(main@steinhart+2)^(0+128),w
  5779  0695  0020               	movlb	0	; select bank0
  5780  0696  00A5               	movwf	___ftmul@f2+2
  5781  0697  3000               	movlw	0
  5782  0698  00A0               	movwf	___ftmul@f1
  5783  0699  3020               	movlw	32
  5784  069A  00A1               	movwf	___ftmul@f1+1
  5785  069B  3041               	movlw	65
  5786  069C  00A2               	movwf	___ftmul@f1+2
  5787  069D  318F  274C  3184   	fcall	___ftmul
  5788  06A0  0020               	movlb	0	; select bank0
  5789  06A1  0820               	movf	?___ftmul,w
  5790  06A2  00DD               	movwf	___fttol@f1
  5791  06A3  0821               	movf	?___ftmul+1,w
  5792  06A4  00DE               	movwf	___fttol@f1+1
  5793  06A5  0822               	movf	?___ftmul+2,w
  5794  06A6  00DF               	movwf	___fttol@f1+2
  5795  06A7  318D  256C  3184   	fcall	___fttol
  5796  06AA  0020               	movlb	0	; select bank0
  5797  06AB  085E               	movf	?___fttol+1,w
  5798  06AC  0021               	movlb	1	; select bank1
  5799  06AD  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5800  06AE  0020               	movlb	0	; select bank0
  5801  06AF  085D               	movf	?___fttol,w
  5802  06B0  0021               	movlb	1	; select bank1
  5803  06B1  00BF               	movwf	main@displayTemp^(0+128)
  5804                           
  5805                           ;main.c: 60: if(toggle == 1)
  5806  06B2  033E               	decf	main@toggle^(0+128),w
  5807  06B3  1D03               	btfss	3,2
  5808  06B4  2EEA               	goto	l3068
  5809                           
  5810                           ;main.c: 61: {
  5811                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5812  06B5  3005               	movlw	5
  5813  06B6  00F6               	movwf	___lwdiv@divisor
  5814  06B7  3000               	movlw	0
  5815  06B8  00F7               	movwf	___lwdiv@divisor+1
  5816  06B9  0840               	movf	(main@displayTemp+1)^(0+128),w
  5817  06BA  00F1               	movwf	___wmul@multiplier+1
  5818  06BB  083F               	movf	main@displayTemp^(0+128),w
  5819  06BC  00F0               	movwf	___wmul@multiplier
  5820  06BD  3009               	movlw	9
  5821  06BE  00F2               	movwf	___wmul@multiplicand
  5822  06BF  3000               	movlw	0
  5823  06C0  00F3               	movwf	___wmul@multiplicand+1
  5824  06C1  3188  20FF  3184   	fcall	___wmul
  5825  06C4  0871               	movf	?___wmul+1,w
  5826  06C5  00F9               	movwf	___lwdiv@dividend+1
  5827  06C6  0870               	movf	?___wmul,w
  5828  06C7  00F8               	movwf	___lwdiv@dividend
  5829  06C8  318A  2202  3184   	fcall	___lwdiv
  5830  06CB  0876               	movf	?___lwdiv,w
  5831  06CC  3E40               	addlw	64
  5832  06CD  0021               	movlb	1	; select bank1
  5833  06CE  00BF               	movwf	main@displayTemp^(0+128)
  5834  06CF  3001               	movlw	1
  5835  06D0  3D77               	addwfc	?___lwdiv+1,w
  5836  06D1  00C0               	movwf	(main@displayTemp+1)^(0+128)
  5837                           
  5838                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5839  06D2  01F2               	clrf	LCD_Set_Cursor@y
  5840  06D3  3000               	movlw	0
  5841  06D4  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5842  06D7  0021               	movlb	1	; select bank1
  5843  06D8  0840               	movf	(main@displayTemp+1)^(0+128),w
  5844  06D9  00FA               	movwf	LCD_Write_Int@value+1
  5845  06DA  083F               	movf	main@displayTemp^(0+128),w
  5846  06DB  00F9               	movwf	LCD_Write_Int@value
  5847  06DC  01FB               	clrf	LCD_Write_Int@fieldLength
  5848  06DD  03FB               	decf	LCD_Write_Int@fieldLength,f
  5849  06DE  01FC               	clrf	LCD_Write_Int@numPlaces
  5850  06DF  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5851  06E0  01FD               	clrf	LCD_Write_Int@sign
  5852  06E1  3181  2146  3184   	fcall	_LCD_Write_Int
  5853                           
  5854                           ;main.c: 65: LCD_Write_Char(0);
  5855  06E4  3000               	movlw	0
  5856  06E5  3189  21A6  3184   	fcall	_LCD_Write_Char
  5857                           
  5858                           ;main.c: 66: LCD_Write_Char('F');
  5859  06E8  3046               	movlw	70
  5860  06E9  2F01               	goto	L1
  5861  06EA                     l3068:	
  5862                           ;main.c: 68: }
  5863                           
  5864                           ;main.c: 67: LCD_Write_Char(' ');
  5865                           
  5866                           
  5867                           ;main.c: 69: else
  5868                           ;main.c: 70: {
  5869                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5870  06EA  01F2               	clrf	LCD_Set_Cursor@y
  5871  06EB  3000               	movlw	0
  5872  06EC  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5873  06EF  0021               	movlb	1	; select bank1
  5874  06F0  0840               	movf	(main@displayTemp+1)^(0+128),w
  5875  06F1  00FA               	movwf	LCD_Write_Int@value+1
  5876  06F2  083F               	movf	main@displayTemp^(0+128),w
  5877  06F3  00F9               	movwf	LCD_Write_Int@value
  5878  06F4  01FB               	clrf	LCD_Write_Int@fieldLength
  5879  06F5  03FB               	decf	LCD_Write_Int@fieldLength,f
  5880  06F6  01FC               	clrf	LCD_Write_Int@numPlaces
  5881  06F7  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5882  06F8  01FD               	clrf	LCD_Write_Int@sign
  5883  06F9  3181  2146  3184   	fcall	_LCD_Write_Int
  5884                           
  5885                           ;main.c: 72: LCD_Write_Char(0);
  5886  06FC  3000               	movlw	0
  5887  06FD  3189  21A6  3184   	fcall	_LCD_Write_Char
  5888                           
  5889                           ;main.c: 73: LCD_Write_Char('C');
  5890  0700  3043               	movlw	67
  5891  0701                     L1:	
  5892  0701  3189  21A6  3184   	fcall	_LCD_Write_Char
  5893                           
  5894                           ;main.c: 74: LCD_Write_Char(' ');
  5895  0704  3020               	movlw	32
  5896  0705  3189  21A6  3184   	fcall	_LCD_Write_Char
  5897                           
  5898                           ;main.c: 75: }
  5899                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5900  0708  01F2               	clrf	LCD_Set_Cursor@y
  5901  0709  3001               	movlw	1
  5902  070A  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5903  070D  3000               	movlw	low (STR_1| (0+32768))
  5904  070E  00F5               	movwf	LCD_Write_String@a
  5905  070F  3098               	movlw	high (STR_1| (0+32768))
  5906  0710  00F6               	movwf	LCD_Write_String@a+1
  5907  0711  3188  20E5  3184   	fcall	_LCD_Write_String
  5908                           
  5909                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5910  0714  3005               	movlw	5
  5911  0715  0021               	movlb	1	; select bank1
  5912  0716  00A0               	movwf	??_main^(0+128)
  5913  0717  0820               	movf	??_main^(0+128),w
  5914  0718  00F2               	movwf	LCD_Set_Cursor@y
  5915  0719  3001               	movlw	1
  5916  071A  318A  22E6  3184   	fcall	_LCD_Set_Cursor
  5917  071D  0021               	movlb	1	; select bank1
  5918  071E  0837               	movf	(main@minutes+1)^(0+128),w
  5919  071F  00FA               	movwf	LCD_Write_Int@value+1
  5920  0720  0836               	movf	main@minutes^(0+128),w
  5921  0721  00F9               	movwf	LCD_Write_Int@value
  5922  0722  3003               	movlw	3
  5923  0723  00A0               	movwf	??_main^(0+128)
  5924  0724  0820               	movf	??_main^(0+128),w
  5925  0725  00FB               	movwf	LCD_Write_Int@fieldLength
  5926  0726  01FC               	clrf	LCD_Write_Int@numPlaces
  5927  0727  01FD               	clrf	LCD_Write_Int@sign
  5928  0728  3181  2146  3184   	fcall	_LCD_Write_Int
  5929                           
  5930                           ;main.c: 81: counter +=1;
  5931  072B  3001               	movlw	1
  5932  072C  0021               	movlb	1	; select bank1
  5933  072D  07BA               	addwf	main@counter^(0+128),f
  5934  072E  3000               	movlw	0
  5935  072F  3DBB               	addwfc	(main@counter+1)^(0+128),f
  5936                           
  5937                           ;main.c: 83: if(counter>12)
  5938  0730  3000               	movlw	0
  5939  0731  023B               	subwf	(main@counter+1)^(0+128),w
  5940  0732  300D               	movlw	13
  5941  0733  1903               	skipnz
  5942  0734  023A               	subwf	main@counter^(0+128),w
  5943  0735  1C03               	skipc
  5944  0736  2F71               	goto	l3098
  5945                           
  5946                           ;main.c: 84: {
  5947                           ;main.c: 85: toggle = 1-toggle;
  5948  0737  033E               	decf	main@toggle^(0+128),w
  5949  0738  3AFF               	xorlw	255
  5950  0739  3E01               	addlw	1
  5951  073A  00A0               	movwf	??_main^(0+128)
  5952  073B  0820               	movf	??_main^(0+128),w
  5953  073C  00BE               	movwf	main@toggle^(0+128)
  5954                           
  5955                           ;main.c: 86: counter = 0;
  5956  073D  01BA               	clrf	main@counter^(0+128)
  5957  073E  01BB               	clrf	(main@counter+1)^(0+128)
  5958                           
  5959                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5960  073F  0845               	movf	main@steinhart^(0+128),w
  5961  0740  0020               	movlb	0	; select bank0
  5962  0741  00C8               	movwf	PID_Calculate@temp
  5963  0742  0021               	movlb	1	; select bank1
  5964  0743  0846               	movf	(main@steinhart+1)^(0+128),w
  5965  0744  0020               	movlb	0	; select bank0
  5966  0745  00C9               	movwf	PID_Calculate@temp+1
  5967  0746  0021               	movlb	1	; select bank1
  5968  0747  0847               	movf	(main@steinhart+2)^(0+128),w
  5969  0748  0020               	movlb	0	; select bank0
  5970  0749  00CA               	movwf	PID_Calculate@temp+2
  5971  074A  0021               	movlb	1	; select bank1
  5972  074B  0869               	movf	_setpoint^(0+128),w
  5973  074C  00A0               	movwf	??_main^(0+128)
  5974  074D  01A1               	clrf	(??_main^(0+128)+1)
  5975  074E  0820               	movf	??_main^(0+128),w
  5976  074F  0020               	movlb	0	; select bank0
  5977  0750  00C6               	movwf	PID_Calculate@setpoint
  5978  0751  0021               	movlb	1	; select bank1
  5979  0752  0821               	movf	(??_main+1)^(0+128),w
  5980  0753  0020               	movlb	0	; select bank0
  5981  0754  00C7               	movwf	PID_Calculate@setpoint+1
  5982  0755  3183  2305  3184   	fcall	_PID_Calculate
  5983  0758  0020               	movlb	0	; select bank0
  5984  0759  0846               	movf	?_PID_Calculate,w
  5985  075A  00DD               	movwf	___fttol@f1
  5986  075B  0847               	movf	?_PID_Calculate+1,w
  5987  075C  00DE               	movwf	___fttol@f1+1
  5988  075D  0848               	movf	?_PID_Calculate+2,w
  5989  075E  00DF               	movwf	___fttol@f1+2
  5990  075F  318D  256C  3184   	fcall	___fttol
  5991  0762  0020               	movlb	0	; select bank0
  5992  0763  085E               	movf	?___fttol+1,w
  5993  0764  0021               	movlb	1	; select bank1
  5994  0765  00B5               	movwf	(main@PWM_Output+1)^(0+128)
  5995  0766  0020               	movlb	0	; select bank0
  5996  0767  085D               	movf	?___fttol,w
  5997  0768  0021               	movlb	1	; select bank1
  5998  0769  00B4               	movwf	main@PWM_Output^(0+128)
  5999                           
  6000                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  6001  076A  0835               	movf	(main@PWM_Output+1)^(0+128),w
  6002  076B  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6003  076C  0834               	movf	main@PWM_Output^(0+128),w
  6004  076D  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6005  076E  3188  206C  3184   	fcall	_PWM6_LoadDutyValue
  6006  0771                     l3098:	
  6007                           
  6008                           ;main.c: 89: }
  6009                           ;main.c: 92: if(TMR0IF)
  6010  0771  002E               	movlb	14	; select bank14
  6011  0772  1E8C               	btfss	12,5	;volatile
  6012  0773  2F80               	goto	l3104
  6013                           
  6014                           ;main.c: 93: {
  6015                           ;main.c: 94: TMR0H = 0x24;
  6016  0774  3024               	movlw	36
  6017  0775  0020               	movlb	0	; select bank0
  6018  0776  009D               	movwf	29	;volatile
  6019                           
  6020                           ;main.c: 95: TMR0L = 0x9F;
  6021  0777  309F               	movlw	159
  6022  0778  009C               	movwf	28	;volatile
  6023                           
  6024                           ;main.c: 96: TMR0IF = 0;
  6025  0779  002E               	movlb	14	; select bank14
  6026  077A  128C               	bcf	12,5	;volatile
  6027                           
  6028                           ;main.c: 97: seconds+=1;
  6029  077B  3001               	movlw	1
  6030  077C  0021               	movlb	1	; select bank1
  6031  077D  07B8               	addwf	main@seconds^(0+128),f
  6032  077E  3000               	movlw	0
  6033  077F  3DB9               	addwfc	(main@seconds+1)^(0+128),f
  6034  0780                     l3104:	
  6035                           
  6036                           ;main.c: 98: }
  6037                           ;main.c: 100: if(setpoint - steinhart < 2)
  6038  0780  0021               	movlb	1	; select bank1
  6039  0781  0845               	movf	main@steinhart^(0+128),w
  6040  0782  00F0               	movwf	___ftneg@f1
  6041  0783  0846               	movf	(main@steinhart+1)^(0+128),w
  6042  0784  00F1               	movwf	___ftneg@f1+1
  6043  0785  0847               	movf	(main@steinhart+2)^(0+128),w
  6044  0786  00F2               	movwf	___ftneg@f1+2
  6045  0787  3197  27DC  3184   	fcall	___ftneg
  6046  078A  0870               	movf	?___ftneg,w
  6047  078B  0020               	movlb	0	; select bank0
  6048  078C  00B0               	movwf	___ftadd@f1
  6049  078D  0871               	movf	?___ftneg+1,w
  6050  078E  00B1               	movwf	___ftadd@f1+1
  6051  078F  0872               	movf	?___ftneg+2,w
  6052  0790  00B2               	movwf	___ftadd@f1+2
  6053  0791  0021               	movlb	1	; select bank1
  6054  0792  0869               	movf	_setpoint^(0+128),w
  6055  0793  3188  20CB  3184   	fcall	___lbtoft
  6056  0796  0878               	movf	?___lbtoft,w
  6057  0797  0020               	movlb	0	; select bank0
  6058  0798  00B3               	movwf	___ftadd@f2
  6059  0799  0879               	movf	?___lbtoft+1,w
  6060  079A  00B4               	movwf	___ftadd@f2+1
  6061  079B  087A               	movf	?___lbtoft+2,w
  6062  079C  00B5               	movwf	___ftadd@f2+2
  6063  079D  3182  220F  3184   	fcall	___ftadd
  6064  07A0  0020               	movlb	0	; select bank0
  6065  07A1  0830               	movf	?___ftadd,w
  6066  07A2  00BD               	movwf	___ftge@ff1
  6067  07A3  0831               	movf	?___ftadd+1,w
  6068  07A4  00BE               	movwf	___ftge@ff1+1
  6069  07A5  0832               	movf	?___ftadd+2,w
  6070  07A6  00BF               	movwf	___ftge@ff1+2
  6071  07A7  3000               	movlw	0
  6072  07A8  00C0               	movwf	___ftge@ff2
  6073  07A9  3000               	movlw	0
  6074  07AA  00C1               	movwf	___ftge@ff2+1
  6075  07AB  3040               	movlw	64
  6076  07AC  00C2               	movwf	___ftge@ff2+2
  6077  07AD  318A  22AA  3184   	fcall	___ftge
  6078  07B0  1803               	btfsc	3,0
  6079  07B1  2FC0               	goto	l3112
  6080                           
  6081                           ;main.c: 101: {
  6082                           ;main.c: 102: if(seconds>63)
  6083  07B2  3000               	movlw	0
  6084  07B3  0021               	movlb	1	; select bank1
  6085  07B4  0239               	subwf	(main@seconds+1)^(0+128),w
  6086  07B5  3040               	movlw	64
  6087  07B6  1903               	skipnz
  6088  07B7  0238               	subwf	main@seconds^(0+128),w
  6089  07B8  1C03               	skipc
  6090  07B9  2FC0               	goto	l3112
  6091                           
  6092                           ;main.c: 103: {
  6093                           ;main.c: 104: minutes+=1;
  6094  07BA  3001               	movlw	1
  6095  07BB  07B6               	addwf	main@minutes^(0+128),f
  6096  07BC  3000               	movlw	0
  6097  07BD  3DB7               	addwfc	(main@minutes+1)^(0+128),f
  6098                           
  6099                           ;main.c: 105: seconds = 0;
  6100  07BE  01B8               	clrf	main@seconds^(0+128)
  6101  07BF  01B9               	clrf	(main@seconds+1)^(0+128)
  6102  07C0                     l3112:	
  6103                           
  6104                           ;main.c: 106: }
  6105                           ;main.c: 107: }
  6106                           ;main.c: 109: readButtons();
  6107  07C0  318C  24E6  3184   	fcall	_readButtons
  6108                           
  6109                           ;main.c: 110: tempSetpoint();
  6110  07C3  3180  2086  3184   	fcall	_tempSetpoint
  6111  07C6  2CC4               	goto	l3022
  6112  07C7                     __end_of_main:	
  6113                           
  6114                           	psect	text1
  6115  0086                     __ptext1:	
  6116 ;; *************** function _tempSetpoint *****************
  6117 ;; Defined at:
  6118 ;;		line 12 in file "buttons.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  counter         1   20[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        4 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    4
  6139 ;; This function calls:
  6140 ;;		_LCD_Clear
  6141 ;;		_LCD_Set_Cursor
  6142 ;;		_LCD_Write_Char
  6143 ;;		_LCD_Write_Int
  6144 ;;		_LCD_Write_String
  6145 ;;		_readButtons
  6146 ;; This function is called by:
  6147 ;;		_main
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _tempSetpoint
  6153  0086                     _tempSetpoint:	
  6154                           
  6155                           ;buttons.c: 14: uint8_t counter = 0;
  6156                           
  6157                           ;incstack = 0
  6158                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6159  0086  0020               	movlb	0	; select bank0
  6160  0087  01B4               	clrf	tempSetpoint@counter
  6161                           
  6162                           ;buttons.c: 16: oldSetpoint = setpoint;
  6163  0088  0021               	movlb	1	; select bank1
  6164  0089  0869               	movf	_setpoint^(0+128),w
  6165  008A  0020               	movlb	0	; select bank0
  6166  008B  00B1               	movwf	??_tempSetpoint
  6167  008C  0831               	movf	??_tempSetpoint,w
  6168  008D  0021               	movlb	1	; select bank1
  6169  008E  00E3               	movwf	_oldSetpoint^(0+128)
  6170  008F                     l2804:	
  6171                           ;buttons.c: 18: while(downCount >= 5)
  6172                           
  6173  008F  3005               	movlw	5
  6174  0090  0020               	movlb	0	; select bank0
  6175  0091  026F               	subwf	_downCount,w
  6176  0092  1C03               	btfss	3,0
  6177  0093  292B               	goto	l2832
  6178                           
  6179                           ;buttons.c: 19: {
  6180                           ;buttons.c: 20: counter+=1;
  6181  0094  3001               	movlw	1
  6182  0095  0020               	movlb	0	; select bank0
  6183  0096  00B1               	movwf	??_tempSetpoint
  6184  0097  0831               	movf	??_tempSetpoint,w
  6185  0098  07B4               	addwf	tempSetpoint@counter,f
  6186                           
  6187                           ;buttons.c: 21: if(counter<=1)
  6188  0099  3002               	movlw	2
  6189  009A  0234               	subwf	tempSetpoint@counter,w
  6190  009B  1803               	skipnc
  6191  009C  28A0               	goto	l2784
  6192                           
  6193                           ;buttons.c: 22: {
  6194                           ;buttons.c: 23: LCD_Clear();
  6195  009D  3197  27E4  3180   	fcall	_LCD_Clear
  6196  00A0                     l2784:	
  6197                           
  6198                           ;buttons.c: 24: }
  6199                           ;buttons.c: 25: setpoint-=1;
  6200  00A0  3001               	movlw	1
  6201  00A1  0021               	movlb	1	; select bank1
  6202  00A2  02E9               	subwf	_setpoint^(0+128),f
  6203                           
  6204                           ;buttons.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6205  00A3  01F2               	clrf	LCD_Set_Cursor@y
  6206  00A4  3000               	movlw	0
  6207  00A5  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6208  00A8  301B               	movlw	low (STR_2| (0+32768))
  6209  00A9  00F5               	movwf	LCD_Write_String@a
  6210  00AA  3090               	movlw	high (STR_2| (0+32768))
  6211  00AB  00F6               	movwf	LCD_Write_String@a+1
  6212  00AC  3188  20E5  3180   	fcall	_LCD_Write_String
  6213                           
  6214                           ;buttons.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6215  00AF  01F2               	clrf	LCD_Set_Cursor@y
  6216  00B0  3001               	movlw	1
  6217  00B1  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6218  00B4  0021               	movlb	1	; select bank1
  6219  00B5  0869               	movf	_setpoint^(0+128),w
  6220  00B6  0020               	movlb	0	; select bank0
  6221  00B7  00B1               	movwf	??_tempSetpoint
  6222  00B8  01B2               	clrf	??_tempSetpoint+1
  6223  00B9  0831               	movf	??_tempSetpoint,w
  6224  00BA  00F9               	movwf	LCD_Write_Int@value
  6225  00BB  0832               	movf	??_tempSetpoint+1,w
  6226  00BC  00FA               	movwf	LCD_Write_Int@value+1
  6227  00BD  3003               	movlw	3
  6228  00BE  00B3               	movwf	??_tempSetpoint+2
  6229  00BF  0833               	movf	??_tempSetpoint+2,w
  6230  00C0  00FB               	movwf	LCD_Write_Int@fieldLength
  6231  00C1  01FC               	clrf	LCD_Write_Int@numPlaces
  6232  00C2  01FD               	clrf	LCD_Write_Int@sign
  6233  00C3  3181  2146  3180   	fcall	_LCD_Write_Int
  6234                           
  6235                           ;buttons.c: 28: LCD_Write_Char(0);
  6236  00C6  3000               	movlw	0
  6237  00C7  3189  21A6  3180   	fcall	_LCD_Write_Char
  6238                           
  6239                           ;buttons.c: 29: LCD_Write_Char('C');
  6240  00CA  3043               	movlw	67
  6241  00CB  3189  21A6  3180   	fcall	_LCD_Write_Char
  6242                           
  6243                           ;buttons.c: 30: LCD_Write_Char(' ');
  6244  00CE  3020               	movlw	32
  6245  00CF  3189  21A6  3180   	fcall	_LCD_Write_Char
  6246                           
  6247                           ;buttons.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6248  00D2  3072               	movlw	114
  6249  00D3  0020               	movlb	0	; select bank0
  6250  00D4  00B1               	movwf	??_tempSetpoint
  6251  00D5  30A1               	movlw	161
  6252  00D6                     u3277:	
  6253  00D6  0B89               	decfsz	9,f
  6254  00D7  28D6               	goto	u3277
  6255  00D8  0BB1               	decfsz	??_tempSetpoint,f
  6256  00D9  28D6               	goto	u3277
  6257  00DA  3200               	nop2
  6258                           
  6259                           ;buttons.c: 32: readButtons();
  6260  00DB  318C  24E6  3180   	fcall	_readButtons
  6261  00DE  288F               	goto	l2804
  6262  00DF                     l2806:	
  6263                           ;buttons.c: 33: }
  6264                           ;buttons.c: 35: while(upCount >= 5)
  6265                           
  6266                           
  6267                           ;buttons.c: 36: {
  6268                           ;buttons.c: 37: counter+=1;
  6269  00DF  3001               	movlw	1
  6270  00E0  00B1               	movwf	??_tempSetpoint
  6271  00E1  0831               	movf	??_tempSetpoint,w
  6272  00E2  07B4               	addwf	tempSetpoint@counter,f
  6273                           
  6274                           ;buttons.c: 38: if(counter<=1)
  6275  00E3  3002               	movlw	2
  6276  00E4  0234               	subwf	tempSetpoint@counter,w
  6277  00E5  1803               	skipnc
  6278  00E6  28EA               	goto	l2812
  6279                           
  6280                           ;buttons.c: 39: {
  6281                           ;buttons.c: 40: LCD_Clear();
  6282  00E7  3197  27E4  3180   	fcall	_LCD_Clear
  6283  00EA                     l2812:	
  6284                           
  6285                           ;buttons.c: 41: }
  6286                           ;buttons.c: 42: setpoint+=1;
  6287  00EA  3001               	movlw	1
  6288  00EB  0020               	movlb	0	; select bank0
  6289  00EC  00B1               	movwf	??_tempSetpoint
  6290  00ED  0831               	movf	??_tempSetpoint,w
  6291  00EE  0021               	movlb	1	; select bank1
  6292  00EF  07E9               	addwf	_setpoint^(0+128),f
  6293                           
  6294                           ;buttons.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6295  00F0  01F2               	clrf	LCD_Set_Cursor@y
  6296  00F1  3000               	movlw	0
  6297  00F2  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6298  00F5  301B               	movlw	low (STR_2| (0+32768))
  6299  00F6  00F5               	movwf	LCD_Write_String@a
  6300  00F7  3090               	movlw	high (STR_2| (0+32768))
  6301  00F8  00F6               	movwf	LCD_Write_String@a+1
  6302  00F9  3188  20E5  3180   	fcall	_LCD_Write_String
  6303                           
  6304                           ;buttons.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6305  00FC  01F2               	clrf	LCD_Set_Cursor@y
  6306  00FD  3001               	movlw	1
  6307  00FE  318A  22E6  3180   	fcall	_LCD_Set_Cursor
  6308  0101  0021               	movlb	1	; select bank1
  6309  0102  0869               	movf	_setpoint^(0+128),w
  6310  0103  0020               	movlb	0	; select bank0
  6311  0104  00B1               	movwf	??_tempSetpoint
  6312  0105  01B2               	clrf	??_tempSetpoint+1
  6313  0106  0831               	movf	??_tempSetpoint,w
  6314  0107  00F9               	movwf	LCD_Write_Int@value
  6315  0108  0832               	movf	??_tempSetpoint+1,w
  6316  0109  00FA               	movwf	LCD_Write_Int@value+1
  6317  010A  3003               	movlw	3
  6318  010B  00B3               	movwf	??_tempSetpoint+2
  6319  010C  0833               	movf	??_tempSetpoint+2,w
  6320  010D  00FB               	movwf	LCD_Write_Int@fieldLength
  6321  010E  01FC               	clrf	LCD_Write_Int@numPlaces
  6322  010F  01FD               	clrf	LCD_Write_Int@sign
  6323  0110  3181  2146  3180   	fcall	_LCD_Write_Int
  6324                           
  6325                           ;buttons.c: 45: LCD_Write_Char(0);
  6326  0113  3000               	movlw	0
  6327  0114  3189  21A6  3180   	fcall	_LCD_Write_Char
  6328                           
  6329                           ;buttons.c: 46: LCD_Write_Char('C');
  6330  0117  3043               	movlw	67
  6331  0118  3189  21A6  3180   	fcall	_LCD_Write_Char
  6332                           
  6333                           ;buttons.c: 47: LCD_Write_Char(' ');
  6334  011B  3020               	movlw	32
  6335  011C  3189  21A6  3180   	fcall	_LCD_Write_Char
  6336                           
  6337                           ;buttons.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6338  011F  3072               	movlw	114
  6339  0120  0020               	movlb	0	; select bank0
  6340  0121  00B1               	movwf	??_tempSetpoint
  6341  0122  30A1               	movlw	161
  6342  0123                     u3287:	
  6343  0123  0B89               	decfsz	9,f
  6344  0124  2923               	goto	u3287
  6345  0125  0BB1               	decfsz	??_tempSetpoint,f
  6346  0126  2923               	goto	u3287
  6347  0127  3200               	nop2
  6348                           
  6349                           ;buttons.c: 49: readButtons();
  6350  0128  318C  24E6  3180   	fcall	_readButtons
  6351  012B                     l2832:	
  6352  012B  3005               	movlw	5
  6353  012C  0020               	movlb	0	; select bank0
  6354  012D  026E               	subwf	_upCount,w
  6355  012E  1803               	skipnc
  6356  012F  28DF               	goto	l2806
  6357                           
  6358                           ;buttons.c: 50: }
  6359                           ;buttons.c: 52: counter = 0;
  6360  0130  01B4               	clrf	tempSetpoint@counter
  6361                           
  6362                           ;buttons.c: 54: if(oldSetpoint!=setpoint)
  6363  0131  0021               	movlb	1	; select bank1
  6364  0132  0863               	movf	_oldSetpoint^(0+128),w
  6365  0133  0669               	xorwf	_setpoint^(0+128),w
  6366  0134  1903               	skipnz
  6367  0135  0008               	return
  6368                           
  6369                           ;buttons.c: 55: {
  6370                           ;buttons.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6371  0136  3003               	movlw	3
  6372  0137  0020               	movlb	0	; select bank0
  6373  0138  00B2               	movwf	??_tempSetpoint+1
  6374  0139  308A               	movlw	138
  6375  013A  00B1               	movwf	??_tempSetpoint
  6376  013B  3055               	movlw	85
  6377  013C                     u3297:	
  6378  013C  0B89               	decfsz	9,f
  6379  013D  293C               	goto	u3297
  6380  013E  0BB1               	decfsz	??_tempSetpoint,f
  6381  013F  293C               	goto	u3297
  6382  0140  0BB2               	decfsz	??_tempSetpoint+1,f
  6383  0141  293C               	goto	u3297
  6384  0142  3200               	nop2
  6385                           
  6386                           ;buttons.c: 57: LCD_Clear();
  6387  0143  3197  27E4         	fcall	_LCD_Clear
  6388  0145  0008               	return
  6389  0146                     __end_of_tempSetpoint:	
  6390                           
  6391                           	psect	text2
  6392  0CE6                     __ptext2:	
  6393 ;; *************** function _readButtons *****************
  6394 ;; Defined at:
  6395 ;;		line 62 in file "buttons.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;Total ram usage:        3 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    3
  6416 ;; This function calls:
  6417 ;;		_LCD_Clear
  6418 ;;		_LCD_Set_Cursor
  6419 ;;		_LCD_Write_Char
  6420 ;;		_LCD_Write_Int
  6421 ;;		_LCD_Write_String
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;;		_tempSetpoint
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _readButtons
  6430  0CE6                     _readButtons:	
  6431                           
  6432                           ;buttons.c: 64: while(RA3 == 0 && RA4 == 0)
  6433                           
  6434                           ;incstack = 0
  6435                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6436  0CE6  2D46               	goto	l2426
  6437  0CE7                     l2392:	
  6438                           
  6439                           ;buttons.c: 65: {
  6440                           ;buttons.c: 66: downCount = 0;
  6441  0CE7  0020               	movlb	0	; select bank0
  6442  0CE8  01EF               	clrf	_downCount
  6443                           
  6444                           ;buttons.c: 67: upCount = 0;
  6445  0CE9  01EE               	clrf	_upCount
  6446                           
  6447                           ;buttons.c: 68: toggleCount+=1;
  6448  0CEA  3001               	movlw	1
  6449  0CEB  00AE               	movwf	??_readButtons
  6450  0CEC  082E               	movf	??_readButtons,w
  6451  0CED  0021               	movlb	1	; select bank1
  6452  0CEE  07E2               	addwf	_toggleCount^(0+128),f
  6453                           
  6454                           ;buttons.c: 69: if(toggleCount >=6)
  6455  0CEF  3006               	movlw	6
  6456  0CF0  0262               	subwf	_toggleCount^(0+128),w
  6457  0CF1  1C03               	skipc
  6458  0CF2  2D46               	goto	l2426
  6459                           
  6460                           ;buttons.c: 70: {
  6461                           ;buttons.c: 71: x+=1;
  6462  0CF3  3001               	movlw	1
  6463  0CF4  0020               	movlb	0	; select bank0
  6464  0CF5  00AE               	movwf	??_readButtons
  6465  0CF6  082E               	movf	??_readButtons,w
  6466  0CF7  07ED               	addwf	_x,f
  6467                           
  6468                           ;buttons.c: 72: if(x>4)
  6469  0CF8  3005               	movlw	5
  6470  0CF9  026D               	subwf	_x,w
  6471  0CFA  1803               	btfsc	3,0
  6472                           
  6473                           ;buttons.c: 73: {
  6474                           ;buttons.c: 74: x=0;
  6475  0CFB  01ED               	clrf	_x
  6476                           
  6477                           ;buttons.c: 75: }
  6478                           ;buttons.c: 76: setpoint = presets[x];
  6479  0CFC  086D               	movf	_x,w
  6480  0CFD  3EE4               	addlw	(low (_presets| 0))& (0+255)
  6481  0CFE  0086               	movwf	6
  6482  0CFF  0187               	clrf	7
  6483  0D00  0801               	movf	1,w
  6484  0D01  00AE               	movwf	??_readButtons
  6485  0D02  082E               	movf	??_readButtons,w
  6486  0D03  0021               	movlb	1	; select bank1
  6487  0D04  00E9               	movwf	_setpoint^(0+128)
  6488                           
  6489                           ;buttons.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6490  0D05  01F2               	clrf	LCD_Set_Cursor@y
  6491  0D06  3000               	movlw	0
  6492  0D07  318A  22E6  318C   	fcall	_LCD_Set_Cursor
  6493  0D0A  301B               	movlw	low (STR_2| (0+32768))
  6494  0D0B  00F5               	movwf	LCD_Write_String@a
  6495  0D0C  3090               	movlw	high (STR_2| (0+32768))
  6496  0D0D  00F6               	movwf	LCD_Write_String@a+1
  6497  0D0E  3188  20E5  318C   	fcall	_LCD_Write_String
  6498                           
  6499                           ;buttons.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6500  0D11  01F2               	clrf	LCD_Set_Cursor@y
  6501  0D12  3001               	movlw	1
  6502  0D13  318A  22E6  318C   	fcall	_LCD_Set_Cursor
  6503  0D16  0021               	movlb	1	; select bank1
  6504  0D17  0869               	movf	_setpoint^(0+128),w
  6505  0D18  0020               	movlb	0	; select bank0
  6506  0D19  00AE               	movwf	??_readButtons
  6507  0D1A  01AF               	clrf	??_readButtons+1
  6508  0D1B  082E               	movf	??_readButtons,w
  6509  0D1C  00F9               	movwf	LCD_Write_Int@value
  6510  0D1D  082F               	movf	??_readButtons+1,w
  6511  0D1E  00FA               	movwf	LCD_Write_Int@value+1
  6512  0D1F  3003               	movlw	3
  6513  0D20  00B0               	movwf	??_readButtons+2
  6514  0D21  0830               	movf	??_readButtons+2,w
  6515  0D22  00FB               	movwf	LCD_Write_Int@fieldLength
  6516  0D23  01FC               	clrf	LCD_Write_Int@numPlaces
  6517  0D24  01FD               	clrf	LCD_Write_Int@sign
  6518  0D25  3181  2146  318C   	fcall	_LCD_Write_Int
  6519                           
  6520                           ;buttons.c: 79: LCD_Write_Char(0);
  6521  0D28  3000               	movlw	0
  6522  0D29  3189  21A6  318C   	fcall	_LCD_Write_Char
  6523                           
  6524                           ;buttons.c: 80: LCD_Write_Char('C');
  6525  0D2C  3043               	movlw	67
  6526  0D2D  3189  21A6  318C   	fcall	_LCD_Write_Char
  6527                           
  6528                           ;buttons.c: 81: LCD_Write_Char(' ');
  6529  0D30  3020               	movlw	32
  6530  0D31  3189  21A6  318C   	fcall	_LCD_Write_Char
  6531                           
  6532                           ;buttons.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6533  0D34  3002               	movlw	2
  6534  0D35  0020               	movlb	0	; select bank0
  6535  0D36  00AF               	movwf	??_readButtons+1
  6536  0D37  30E7               	movlw	231
  6537  0D38  00AE               	movwf	??_readButtons
  6538  0D39  3000               	movlw	0
  6539  0D3A                     u3307:	
  6540  0D3A  0B89               	decfsz	9,f
  6541  0D3B  2D3A               	goto	u3307
  6542  0D3C  0BAE               	decfsz	??_readButtons,f
  6543  0D3D  2D3A               	goto	u3307
  6544  0D3E  0BAF               	decfsz	??_readButtons+1,f
  6545  0D3F  2D3A               	goto	u3307
  6546  0D40  0000               	nop
  6547                           
  6548                           ;buttons.c: 83: toggleCount = 0;
  6549  0D41  0021               	movlb	1	; select bank1
  6550  0D42  01E2               	clrf	_toggleCount^(0+128)
  6551                           
  6552                           ;buttons.c: 84: LCD_Clear();
  6553  0D43  3197  27E4  318C   	fcall	_LCD_Clear
  6554  0D46                     l2426:	
  6555  0D46  0020               	movlb	0	; select bank0
  6556  0D47  198C               	btfsc	12,3	;volatile
  6557  0D48  2D4B               	goto	l157
  6558  0D49  1E0C               	btfss	12,4	;volatile
  6559  0D4A  2CE7               	goto	l2392
  6560  0D4B                     l157:	
  6561                           
  6562                           ;buttons.c: 85: }
  6563                           ;buttons.c: 86: }
  6564                           ;buttons.c: 88: if(RA3 == 0)
  6565  0D4B  198C               	btfsc	12,3	;volatile
  6566  0D4C  2D5A               	goto	l2436
  6567                           
  6568                           ;buttons.c: 89: {
  6569                           ;buttons.c: 90: downCount +=1;
  6570  0D4D  3001               	movlw	1
  6571  0D4E  00AE               	movwf	??_readButtons
  6572  0D4F  082E               	movf	??_readButtons,w
  6573  0D50  07EF               	addwf	_downCount,f
  6574                           
  6575                           ;buttons.c: 91: if(downCount>5)
  6576  0D51  3006               	movlw	6
  6577  0D52  026F               	subwf	_downCount,w
  6578  0D53  1C03               	skipc
  6579  0D54  2D5B               	goto	l2438
  6580                           
  6581                           ;buttons.c: 92: {
  6582                           ;buttons.c: 93: downCount = 5;
  6583  0D55  3005               	movlw	5
  6584  0D56  00AE               	movwf	??_readButtons
  6585  0D57  082E               	movf	??_readButtons,w
  6586  0D58  00EF               	movwf	_downCount
  6587                           
  6588                           ;buttons.c: 94: }
  6589                           ;buttons.c: 95: }
  6590  0D59  2D5B               	goto	l2438
  6591  0D5A                     l2436:	
  6592                           
  6593                           ;buttons.c: 96: else
  6594                           ;buttons.c: 97: {
  6595                           ;buttons.c: 98: downCount = 0;
  6596  0D5A  01EF               	clrf	_downCount
  6597  0D5B                     l2438:	
  6598                           
  6599                           ;buttons.c: 99: }
  6600                           ;buttons.c: 101: if(RA4 == 0)
  6601  0D5B  1A0C               	btfsc	12,4	;volatile
  6602  0D5C  2D6A               	goto	l2446
  6603                           
  6604                           ;buttons.c: 102: {
  6605                           ;buttons.c: 103: upCount +=1;
  6606  0D5D  3001               	movlw	1
  6607  0D5E  00AE               	movwf	??_readButtons
  6608  0D5F  082E               	movf	??_readButtons,w
  6609  0D60  07EE               	addwf	_upCount,f
  6610                           
  6611                           ;buttons.c: 104: if(upCount>5)
  6612  0D61  3006               	movlw	6
  6613  0D62  026E               	subwf	_upCount,w
  6614  0D63  1C03               	skipc
  6615  0D64  0008               	return
  6616                           
  6617                           ;buttons.c: 105: {
  6618                           ;buttons.c: 106: upCount = 5;
  6619  0D65  3005               	movlw	5
  6620  0D66  00AE               	movwf	??_readButtons
  6621  0D67  082E               	movf	??_readButtons,w
  6622  0D68  00EE               	movwf	_upCount
  6623                           
  6624                           ;buttons.c: 107: }
  6625                           ;buttons.c: 108: }
  6626  0D69  0008               	return
  6627  0D6A                     l2446:	
  6628                           
  6629                           ;buttons.c: 109: else
  6630                           ;buttons.c: 110: {
  6631                           ;buttons.c: 111: upCount = 0;
  6632  0D6A  01EE               	clrf	_upCount
  6633  0D6B  0008               	return
  6634  0D6C                     __end_of_readButtons:	
  6635                           
  6636                           	psect	text3
  6637  08E5                     __ptext3:	
  6638 ;; *************** function _LCD_Write_String *****************
  6639 ;; Defined at:
  6640 ;;		line 239 in file "lcd.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  a               2    5[COMMON] PTR const unsigned char 
  6643 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(6), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  i               2    8[COMMON] int 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;Total ram usage:        5 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    2
  6662 ;; This function calls:
  6663 ;;		_LCD_Write_Char
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;;		_tempSetpoint
  6667 ;;		_readButtons
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _LCD_Write_String
  6673  08E5                     _LCD_Write_String:	
  6674                           
  6675                           ;lcd.c: 241: int i;
  6676                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6680  08E5  01F8               	clrf	LCD_Write_String@i
  6681  08E6  01F9               	clrf	LCD_Write_String@i+1
  6682  08E7                     l2252:	
  6683  08E7  0875               	movf	LCD_Write_String@a,w
  6684  08E8  0778               	addwf	LCD_Write_String@i,w
  6685  08E9  0084               	movwf	4
  6686  08EA  0876               	movf	LCD_Write_String@a+1,w
  6687  08EB  3D79               	addwfc	LCD_Write_String@i+1,w
  6688  08EC  0085               	movwf	5
  6689  08ED  0012               	moviw fsr0++
  6690  08EE  1903               	btfsc	3,2
  6691  08EF  0008               	return
  6692                           
  6693                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6694  08F0  0875               	movf	LCD_Write_String@a,w
  6695  08F1  0778               	addwf	LCD_Write_String@i,w
  6696  08F2  0084               	movwf	4
  6697  08F3  0876               	movf	LCD_Write_String@a+1,w
  6698  08F4  3D79               	addwfc	LCD_Write_String@i+1,w
  6699  08F5  0085               	movwf	5
  6700  08F6  0800               	movf	0,w	;code access
  6701  08F7  3189  21A6  3188   	fcall	_LCD_Write_Char
  6702  08FA  3001               	movlw	1
  6703  08FB  07F8               	addwf	LCD_Write_String@i,f
  6704  08FC  3000               	movlw	0
  6705  08FD  3DF9               	addwfc	LCD_Write_String@i+1,f
  6706  08FE  28E7               	goto	l2252
  6707  08FF                     __end_of_LCD_Write_String:	
  6708                           
  6709                           	psect	text4
  6710  0146                     __ptext4:	
  6711 ;; *************** function _LCD_Write_Int *****************
  6712 ;; Defined at:
  6713 ;;		line 246 in file "lcd.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  value           2    9[COMMON] int 
  6716 ;;  fieldLength     1   11[COMMON] char 
  6717 ;;  numPlaces       1   12[COMMON] char 
  6718 ;;  sign            1   13[COMMON] char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  str             5    5[BANK0 ] unsigned char [5]
  6721 ;;  i               2   12[BANK0 ] int 
  6722 ;;  j               2   10[BANK0 ] int 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6732 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;Total ram usage:       19 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    2
  6739 ;; This function calls:
  6740 ;;		_LCD_Write_Char
  6741 ;;		___awdiv
  6742 ;;		___awmod
  6743 ;; This function is called by:
  6744 ;;		_main
  6745 ;;		_tempSetpoint
  6746 ;;		_readButtons
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           
  6751                           ;psect for function _LCD_Write_Int
  6752  0146                     _LCD_Write_Int:	
  6753                           
  6754                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6758  0146  30C8               	movlw	low LCD_Write_Int@F14394
  6759  0147  0086               	movwf	6
  6760  0148  3000               	movlw	high LCD_Write_Int@F14394
  6761  0149  0087               	movwf	7
  6762  014A  3025               	movlw	low LCD_Write_Int@str
  6763  014B  0084               	movwf	4
  6764  014C  3000               	movlw	high LCD_Write_Int@str
  6765  014D  0085               	movwf	5
  6766  014E  3005               	movlw	5
  6767  014F  0020               	movlb	0	; select bank0
  6768  0150  00A0               	movwf	??_LCD_Write_Int
  6769  0151                     u2040:	
  6770  0151  0016               	moviw fsr1++
  6771  0152  001A               	movwi fsr0++
  6772  0153  0BA0               	decfsz	??_LCD_Write_Int,f
  6773  0154  2951               	goto	u2040
  6774                           
  6775                           ;lcd.c: 249: int i=4,j=0;
  6776  0155  3004               	movlw	4
  6777  0156  00AC               	movwf	LCD_Write_Int@i
  6778  0157  3000               	movlw	0
  6779  0158  00AD               	movwf	LCD_Write_Int@i+1
  6780  0159  01AA               	clrf	LCD_Write_Int@j
  6781  015A  01AB               	clrf	LCD_Write_Int@j+1
  6782                           
  6783                           ;lcd.c: 251: if(value<0)
  6784  015B  1FFA               	btfss	LCD_Write_Int@value+1,7
  6785  015C  2967               	goto	l2208
  6786                           
  6787                           ;lcd.c: 252: {
  6788                           ;lcd.c: 253: LCD_Write_Char('-');
  6789  015D  302D               	movlw	45
  6790  015E  3189  21A6  3181   	fcall	_LCD_Write_Char
  6791                           
  6792                           ;lcd.c: 254: value=value*-1;
  6793  0161  09F9               	comf	LCD_Write_Int@value,f
  6794  0162  09FA               	comf	LCD_Write_Int@value+1,f
  6795  0163  0AF9               	incf	LCD_Write_Int@value,f
  6796  0164  1903               	skipnz
  6797  0165  0AFA               	incf	LCD_Write_Int@value+1,f
  6798                           
  6799                           ;lcd.c: 255: }
  6800  0166  296E               	goto	l2218
  6801  0167                     l2208:	
  6802                           
  6803                           ;lcd.c: 257: else
  6804                           ;lcd.c: 258: {
  6805                           ;lcd.c: 259: if(sign == 1)
  6806  0167  037D               	decf	LCD_Write_Int@sign,w
  6807  0168  1D03               	btfss	3,2
  6808  0169  296E               	goto	l2218
  6809                           
  6810                           ;lcd.c: 260: {
  6811                           ;lcd.c: 261: LCD_Write_Char('+');
  6812  016A  302B               	movlw	43
  6813  016B  3189  21A6  3181   	fcall	_LCD_Write_Char
  6814  016E                     l2218:	
  6815                           ;lcd.c: 262: }
  6816                           ;lcd.c: 263: }
  6817                           ;lcd.c: 265: while(value)
  6818                           
  6819  016E  0879               	movf	LCD_Write_Int@value,w
  6820  016F  047A               	iorwf	LCD_Write_Int@value+1,w
  6821  0170  1903               	btfsc	3,2
  6822  0171  299B               	goto	l2220
  6823                           
  6824                           ;lcd.c: 266: {
  6825                           ;lcd.c: 267: str[i]=value%10;
  6826  0172  300A               	movlw	10
  6827  0173  00F0               	movwf	___awmod@divisor
  6828  0174  3000               	movlw	0
  6829  0175  00F1               	movwf	___awmod@divisor+1
  6830  0176  087A               	movf	LCD_Write_Int@value+1,w
  6831  0177  00F3               	movwf	___awmod@dividend+1
  6832  0178  0879               	movf	LCD_Write_Int@value,w
  6833  0179  00F2               	movwf	___awmod@dividend
  6834  017A  318B  2325  3181   	fcall	___awmod
  6835  017D  0870               	movf	?___awmod,w
  6836  017E  0020               	movlb	0	; select bank0
  6837  017F  00A0               	movwf	??_LCD_Write_Int
  6838  0180  082C               	movf	LCD_Write_Int@i,w
  6839  0181  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6840  0182  0086               	movwf	6
  6841  0183  0187               	clrf	7
  6842  0184  0820               	movf	??_LCD_Write_Int,w
  6843  0185  0081               	movwf	1
  6844                           
  6845                           ;lcd.c: 268: value=value/10;
  6846  0186  300A               	movlw	10
  6847  0187  00F0               	movwf	___awdiv@divisor
  6848  0188  3000               	movlw	0
  6849  0189  00F1               	movwf	___awdiv@divisor+1
  6850  018A  087A               	movf	LCD_Write_Int@value+1,w
  6851  018B  00F3               	movwf	___awdiv@dividend+1
  6852  018C  0879               	movf	LCD_Write_Int@value,w
  6853  018D  00F2               	movwf	___awdiv@dividend
  6854  018E  318B  236A  3181   	fcall	___awdiv
  6855  0191  0871               	movf	?___awdiv+1,w
  6856  0192  00FA               	movwf	LCD_Write_Int@value+1
  6857  0193  0870               	movf	?___awdiv,w
  6858  0194  00F9               	movwf	LCD_Write_Int@value
  6859                           
  6860                           ;lcd.c: 269: i--;
  6861  0195  30FF               	movlw	255
  6862  0196  0020               	movlb	0	; select bank0
  6863  0197  07AC               	addwf	LCD_Write_Int@i,f
  6864  0198  30FF               	movlw	255
  6865  0199  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6866  019A  296E               	goto	l2218
  6867  019B                     l2220:	
  6868                           
  6869                           ;lcd.c: 270: }
  6870                           ;lcd.c: 271: if(fieldLength==-1)
  6871  019B  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6872  019C  1903               	btfsc	3,2
  6873  019D  29A4               	goto	l2226
  6874  019E  29AD               	goto	l2228
  6875  019F                     l2224:	
  6876                           ;lcd.c: 272: {
  6877                           ;lcd.c: 273: while(str[j]==0)
  6878                           
  6879                           
  6880                           ;lcd.c: 274: {
  6881                           ;lcd.c: 275: j++;
  6882  019F  3001               	movlw	1
  6883  01A0  0020               	movlb	0	; select bank0
  6884  01A1  07AA               	addwf	LCD_Write_Int@j,f
  6885  01A2  3000               	movlw	0
  6886  01A3  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6887  01A4                     l2226:	
  6888  01A4  0020               	movlb	0	; select bank0
  6889  01A5  082A               	movf	LCD_Write_Int@j,w
  6890  01A6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6891  01A7  0086               	movwf	6
  6892  01A8  0187               	clrf	7
  6893  01A9  0801               	movf	1,w
  6894  01AA  1D03               	btfss	3,2
  6895  01AB  29BE               	goto	l2230
  6896  01AC  299F               	goto	l2224
  6897  01AD                     l2228:	
  6898                           ;lcd.c: 276: }
  6899                           ;lcd.c: 277: }
  6900                           
  6901                           
  6902                           ;lcd.c: 278: else
  6903                           ;lcd.c: 279: {
  6904                           ;lcd.c: 280: j=5-fieldLength;
  6905  01AD  087B               	movf	LCD_Write_Int@fieldLength,w
  6906  01AE  0020               	movlb	0	; select bank0
  6907  01AF  00A0               	movwf	??_LCD_Write_Int
  6908  01B0  01A1               	clrf	??_LCD_Write_Int+1
  6909  01B1  1BA0               	btfsc	??_LCD_Write_Int,7
  6910  01B2  03A1               	decf	??_LCD_Write_Int+1,f
  6911  01B3  09A0               	comf	??_LCD_Write_Int,f
  6912  01B4  09A1               	comf	??_LCD_Write_Int+1,f
  6913  01B5  0AA0               	incf	??_LCD_Write_Int,f
  6914  01B6  1903               	skipnz
  6915  01B7  0AA1               	incf	??_LCD_Write_Int+1,f
  6916  01B8  0820               	movf	??_LCD_Write_Int,w
  6917  01B9  3E05               	addlw	5
  6918  01BA  00AA               	movwf	LCD_Write_Int@j
  6919  01BB  3000               	movlw	0
  6920  01BC  3D21               	addwfc	??_LCD_Write_Int+1,w
  6921  01BD  00AB               	movwf	LCD_Write_Int@j+1
  6922  01BE                     l2230:	
  6923                           
  6924                           ;lcd.c: 281: }
  6925                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6926  01BE  082B               	movf	LCD_Write_Int@j+1,w
  6927  01BF  00AD               	movwf	LCD_Write_Int@i+1
  6928  01C0  082A               	movf	LCD_Write_Int@j,w
  6929  01C1  00AC               	movwf	LCD_Write_Int@i
  6930  01C2                     l2236:	
  6931  01C2  087C               	movf	LCD_Write_Int@numPlaces,w
  6932  01C3  00A0               	movwf	??_LCD_Write_Int
  6933  01C4  01A1               	clrf	??_LCD_Write_Int+1
  6934  01C5  1BA0               	btfsc	??_LCD_Write_Int,7
  6935  01C6  03A1               	decf	??_LCD_Write_Int+1,f
  6936  01C7  09A0               	comf	??_LCD_Write_Int,f
  6937  01C8  09A1               	comf	??_LCD_Write_Int+1,f
  6938  01C9  0AA0               	incf	??_LCD_Write_Int,f
  6939  01CA  1903               	skipnz
  6940  01CB  0AA1               	incf	??_LCD_Write_Int+1,f
  6941  01CC  0820               	movf	??_LCD_Write_Int,w
  6942  01CD  3E05               	addlw	5
  6943  01CE  00A2               	movwf	??_LCD_Write_Int+2
  6944  01CF  3000               	movlw	0
  6945  01D0  3D21               	addwfc	??_LCD_Write_Int+1,w
  6946  01D1  00A3               	movwf	??_LCD_Write_Int+3
  6947  01D2  082D               	movf	LCD_Write_Int@i+1,w
  6948  01D3  3A80               	xorlw	128
  6949  01D4  00A4               	movwf	??_LCD_Write_Int+4
  6950  01D5  0823               	movf	??_LCD_Write_Int+3,w
  6951  01D6  3A80               	xorlw	128
  6952  01D7  0224               	subwf	??_LCD_Write_Int+4,w
  6953  01D8  1D03               	skipz
  6954  01D9  29DC               	goto	u2105
  6955  01DA  0822               	movf	??_LCD_Write_Int+2,w
  6956  01DB  022C               	subwf	LCD_Write_Int@i,w
  6957  01DC                     u2105:	
  6958  01DC  1803               	btfsc	3,0
  6959  01DD  29EE               	goto	l2238
  6960                           
  6961                           ;lcd.c: 284: {
  6962                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6963  01DE  0020               	movlb	0	; select bank0
  6964  01DF  082C               	movf	LCD_Write_Int@i,w
  6965  01E0  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6966  01E1  0086               	movwf	6
  6967  01E2  0187               	clrf	7
  6968  01E3  0801               	movf	1,w
  6969  01E4  3E30               	addlw	48
  6970  01E5  3189  21A6  3181   	fcall	_LCD_Write_Char
  6971  01E8  3001               	movlw	1
  6972  01E9  0020               	movlb	0	; select bank0
  6973  01EA  07AC               	addwf	LCD_Write_Int@i,f
  6974  01EB  3000               	movlw	0
  6975  01EC  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6976  01ED  29C2               	goto	l2236
  6977  01EE                     l2238:	
  6978                           
  6979                           ;lcd.c: 286: }
  6980                           ;lcd.c: 288: if(numPlaces == 1)
  6981  01EE  037C               	decf	LCD_Write_Int@numPlaces,w
  6982  01EF  1D03               	btfss	3,2
  6983  01F0  29FB               	goto	l2242
  6984                           
  6985                           ;lcd.c: 289: {
  6986                           ;lcd.c: 290: LCD_Write_Char(46);
  6987  01F1  302E               	movlw	46
  6988  01F2  3189  21A6  3181   	fcall	_LCD_Write_Char
  6989                           
  6990                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6991  01F5  0020               	movlb	0	; select bank0
  6992  01F6  0829               	movf	LCD_Write_Int@str+4,w
  6993  01F7  3E30               	addlw	48
  6994  01F8  3189  21A6  3181   	fcall	_LCD_Write_Char
  6995  01FB                     l2242:	
  6996                           
  6997                           ;lcd.c: 292: }
  6998                           ;lcd.c: 294: if(numPlaces == 2)
  6999  01FB  3002               	movlw	2
  7000  01FC  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7001  01FD  1D03               	btfss	3,2
  7002  01FE  0008               	return
  7003                           
  7004                           ;lcd.c: 295: {
  7005                           ;lcd.c: 296: LCD_Write_Char(46);
  7006  01FF  302E               	movlw	46
  7007  0200  3189  21A6  3181   	fcall	_LCD_Write_Char
  7008                           
  7009                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7010  0203  0020               	movlb	0	; select bank0
  7011  0204  0828               	movf	LCD_Write_Int@str+3,w
  7012  0205  3E30               	addlw	48
  7013  0206  3189  21A6  3181   	fcall	_LCD_Write_Char
  7014                           
  7015                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7016  0209  0020               	movlb	0	; select bank0
  7017  020A  0829               	movf	LCD_Write_Int@str+4,w
  7018  020B  3E30               	addlw	48
  7019  020C  3189  21A6         	fcall	_LCD_Write_Char
  7020  020E  0008               	return
  7021  020F                     __end_of_LCD_Write_Int:	
  7022                           
  7023                           	psect	text5
  7024  0B25                     __ptext5:	
  7025 ;; *************** function ___awmod *****************
  7026 ;; Defined at:
  7027 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;  divisor         2    0[COMMON] int 
  7030 ;;  dividend        2    2[COMMON] int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  sign            1    6[COMMON] unsigned char 
  7033 ;;  counter         1    5[COMMON] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  2    0[COMMON] int 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;Total ram usage:        7 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_LCD_Write_Int
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function ___awmod
  7058  0B25                     ___awmod:	
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7062  0B25  01F6               	clrf	___awmod@sign
  7063  0B26  1FF3               	btfss	___awmod@dividend+1,7
  7064  0B27  2B2F               	goto	l2146
  7065  0B28  09F2               	comf	___awmod@dividend,f
  7066  0B29  09F3               	comf	___awmod@dividend+1,f
  7067  0B2A  0AF2               	incf	___awmod@dividend,f
  7068  0B2B  1903               	skipnz
  7069  0B2C  0AF3               	incf	___awmod@dividend+1,f
  7070  0B2D  01F6               	clrf	___awmod@sign
  7071  0B2E  0AF6               	incf	___awmod@sign,f
  7072  0B2F                     l2146:	
  7073  0B2F  1FF1               	btfss	___awmod@divisor+1,7
  7074  0B30  2B36               	goto	l2150
  7075  0B31  09F0               	comf	___awmod@divisor,f
  7076  0B32  09F1               	comf	___awmod@divisor+1,f
  7077  0B33  0AF0               	incf	___awmod@divisor,f
  7078  0B34  1903               	skipnz
  7079  0B35  0AF1               	incf	___awmod@divisor+1,f
  7080  0B36                     l2150:	
  7081  0B36  0870               	movf	___awmod@divisor,w
  7082  0B37  0471               	iorwf	___awmod@divisor+1,w
  7083  0B38  1903               	btfsc	3,2
  7084  0B39  2B5D               	goto	l2168
  7085  0B3A  01F5               	clrf	___awmod@counter
  7086  0B3B  0AF5               	incf	___awmod@counter,f
  7087  0B3C                     l2158:	
  7088  0B3C  1BF1               	btfsc	___awmod@divisor+1,7
  7089  0B3D  2B48               	goto	l2160
  7090  0B3E  3001               	movlw	1
  7091  0B3F                     u1945:	
  7092  0B3F  35F0               	lslf	___awmod@divisor,f
  7093  0B40  0DF1               	rlf	___awmod@divisor+1,f
  7094  0B41  0B89               	decfsz	9,f
  7095  0B42  2B3F               	goto	u1945
  7096  0B43  3001               	movlw	1
  7097  0B44  00F4               	movwf	??___awmod
  7098  0B45  0874               	movf	??___awmod,w
  7099  0B46  07F5               	addwf	___awmod@counter,f
  7100  0B47  2B3C               	goto	l2158
  7101  0B48                     l2160:	
  7102  0B48  0871               	movf	___awmod@divisor+1,w
  7103  0B49  0273               	subwf	___awmod@dividend+1,w
  7104  0B4A  1D03               	skipz
  7105  0B4B  2B4E               	goto	u1965
  7106  0B4C  0870               	movf	___awmod@divisor,w
  7107  0B4D  0272               	subwf	___awmod@dividend,w
  7108  0B4E                     u1965:	
  7109  0B4E  1C03               	skipc
  7110  0B4F  2B54               	goto	l2164
  7111  0B50  0870               	movf	___awmod@divisor,w
  7112  0B51  02F2               	subwf	___awmod@dividend,f
  7113  0B52  0871               	movf	___awmod@divisor+1,w
  7114  0B53  3BF3               	subwfb	___awmod@dividend+1,f
  7115  0B54                     l2164:	
  7116  0B54  3001               	movlw	1
  7117  0B55                     u1975:	
  7118  0B55  36F1               	lsrf	___awmod@divisor+1,f
  7119  0B56  0CF0               	rrf	___awmod@divisor,f
  7120  0B57  0B89               	decfsz	9,f
  7121  0B58  2B55               	goto	u1975
  7122  0B59  3001               	movlw	1
  7123  0B5A  02F5               	subwf	___awmod@counter,f
  7124  0B5B  1D03               	btfss	3,2
  7125  0B5C  2B48               	goto	l2160
  7126  0B5D                     l2168:	
  7127  0B5D  0876               	movf	___awmod@sign,w
  7128  0B5E  1903               	btfsc	3,2
  7129  0B5F  2B65               	goto	l2172
  7130  0B60  09F2               	comf	___awmod@dividend,f
  7131  0B61  09F3               	comf	___awmod@dividend+1,f
  7132  0B62  0AF2               	incf	___awmod@dividend,f
  7133  0B63  1903               	skipnz
  7134  0B64  0AF3               	incf	___awmod@dividend+1,f
  7135  0B65                     l2172:	
  7136  0B65  0873               	movf	___awmod@dividend+1,w
  7137  0B66  00F1               	movwf	?___awmod+1
  7138  0B67  0872               	movf	___awmod@dividend,w
  7139  0B68  00F0               	movwf	?___awmod
  7140  0B69  0008               	return
  7141  0B6A                     __end_of___awmod:	
  7142                           
  7143                           	psect	text6
  7144  0B6A                     __ptext6:	
  7145 ;; *************** function ___awdiv *****************
  7146 ;; Defined at:
  7147 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  divisor         2    0[COMMON] int 
  7150 ;;  dividend        2    2[COMMON] int 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  quotient        2    7[COMMON] int 
  7153 ;;  sign            1    6[COMMON] unsigned char 
  7154 ;;  counter         1    5[COMMON] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    0[COMMON] int 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        9 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_LCD_Write_Int
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function ___awdiv
  7179  0B6A                     ___awdiv:	
  7180                           
  7181                           ;incstack = 0
  7182                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7183  0B6A  01F6               	clrf	___awdiv@sign
  7184  0B6B  1FF1               	btfss	___awdiv@divisor+1,7
  7185  0B6C  2B74               	goto	l2102
  7186  0B6D  09F0               	comf	___awdiv@divisor,f
  7187  0B6E  09F1               	comf	___awdiv@divisor+1,f
  7188  0B6F  0AF0               	incf	___awdiv@divisor,f
  7189  0B70  1903               	skipnz
  7190  0B71  0AF1               	incf	___awdiv@divisor+1,f
  7191  0B72  01F6               	clrf	___awdiv@sign
  7192  0B73  0AF6               	incf	___awdiv@sign,f
  7193  0B74                     l2102:	
  7194  0B74  1FF3               	btfss	___awdiv@dividend+1,7
  7195  0B75  2B7F               	goto	l2108
  7196  0B76  09F2               	comf	___awdiv@dividend,f
  7197  0B77  09F3               	comf	___awdiv@dividend+1,f
  7198  0B78  0AF2               	incf	___awdiv@dividend,f
  7199  0B79  1903               	skipnz
  7200  0B7A  0AF3               	incf	___awdiv@dividend+1,f
  7201  0B7B  3001               	movlw	1
  7202  0B7C  00F4               	movwf	??___awdiv
  7203  0B7D  0874               	movf	??___awdiv,w
  7204  0B7E  06F6               	xorwf	___awdiv@sign,f
  7205  0B7F                     l2108:	
  7206  0B7F  01F7               	clrf	___awdiv@quotient
  7207  0B80  01F8               	clrf	___awdiv@quotient+1
  7208  0B81  0870               	movf	___awdiv@divisor,w
  7209  0B82  0471               	iorwf	___awdiv@divisor+1,w
  7210  0B83  1903               	btfsc	3,2
  7211  0B84  2BAE               	goto	l2130
  7212  0B85  01F5               	clrf	___awdiv@counter
  7213  0B86  0AF5               	incf	___awdiv@counter,f
  7214  0B87                     l2118:	
  7215  0B87  1BF1               	btfsc	___awdiv@divisor+1,7
  7216  0B88  2B93               	goto	l2120
  7217  0B89  3001               	movlw	1
  7218  0B8A                     u1845:	
  7219  0B8A  35F0               	lslf	___awdiv@divisor,f
  7220  0B8B  0DF1               	rlf	___awdiv@divisor+1,f
  7221  0B8C  0B89               	decfsz	9,f
  7222  0B8D  2B8A               	goto	u1845
  7223  0B8E  3001               	movlw	1
  7224  0B8F  00F4               	movwf	??___awdiv
  7225  0B90  0874               	movf	??___awdiv,w
  7226  0B91  07F5               	addwf	___awdiv@counter,f
  7227  0B92  2B87               	goto	l2118
  7228  0B93                     l2120:	
  7229  0B93  3001               	movlw	1
  7230  0B94                     u1865:	
  7231  0B94  35F7               	lslf	___awdiv@quotient,f
  7232  0B95  0DF8               	rlf	___awdiv@quotient+1,f
  7233  0B96  0B89               	decfsz	9,f
  7234  0B97  2B94               	goto	u1865
  7235  0B98  0871               	movf	___awdiv@divisor+1,w
  7236  0B99  0273               	subwf	___awdiv@dividend+1,w
  7237  0B9A  1D03               	skipz
  7238  0B9B  2B9E               	goto	u1875
  7239  0B9C  0870               	movf	___awdiv@divisor,w
  7240  0B9D  0272               	subwf	___awdiv@dividend,w
  7241  0B9E                     u1875:	
  7242  0B9E  1C03               	skipc
  7243  0B9F  2BA5               	goto	l2126
  7244  0BA0  0870               	movf	___awdiv@divisor,w
  7245  0BA1  02F2               	subwf	___awdiv@dividend,f
  7246  0BA2  0871               	movf	___awdiv@divisor+1,w
  7247  0BA3  3BF3               	subwfb	___awdiv@dividend+1,f
  7248  0BA4  1477               	bsf	___awdiv@quotient,0
  7249  0BA5                     l2126:	
  7250  0BA5  3001               	movlw	1
  7251  0BA6                     u1885:	
  7252  0BA6  36F1               	lsrf	___awdiv@divisor+1,f
  7253  0BA7  0CF0               	rrf	___awdiv@divisor,f
  7254  0BA8  0B89               	decfsz	9,f
  7255  0BA9  2BA6               	goto	u1885
  7256  0BAA  3001               	movlw	1
  7257  0BAB  02F5               	subwf	___awdiv@counter,f
  7258  0BAC  1D03               	btfss	3,2
  7259  0BAD  2B93               	goto	l2120
  7260  0BAE                     l2130:	
  7261  0BAE  0876               	movf	___awdiv@sign,w
  7262  0BAF  1903               	btfsc	3,2
  7263  0BB0  2BB6               	goto	l2134
  7264  0BB1  09F7               	comf	___awdiv@quotient,f
  7265  0BB2  09F8               	comf	___awdiv@quotient+1,f
  7266  0BB3  0AF7               	incf	___awdiv@quotient,f
  7267  0BB4  1903               	skipnz
  7268  0BB5  0AF8               	incf	___awdiv@quotient+1,f
  7269  0BB6                     l2134:	
  7270  0BB6  0878               	movf	___awdiv@quotient+1,w
  7271  0BB7  00F1               	movwf	?___awdiv+1
  7272  0BB8  0877               	movf	___awdiv@quotient,w
  7273  0BB9  00F0               	movwf	?___awdiv
  7274  0BBA  0008               	return
  7275  0BBB                     __end_of___awdiv:	
  7276                           
  7277                           	psect	text7
  7278  0AE6                     __ptext7:	
  7279 ;; *************** function _LCD_Set_Cursor *****************
  7280 ;; Defined at:
  7281 ;;		line 82 in file "lcd.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  x               1    wreg     unsigned char 
  7284 ;;  y               1    2[COMMON] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  x               1    5[COMMON] unsigned char 
  7287 ;;  temp            1    8[COMMON] unsigned char 
  7288 ;;  w               1    7[COMMON] unsigned char 
  7289 ;;  z               1    6[COMMON] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0, pclath, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7299 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;Total ram usage:        7 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    2
  7306 ;; This function calls:
  7307 ;;		_LCD_Cmd
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;;		_tempSetpoint
  7311 ;;		_readButtons
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function _LCD_Set_Cursor
  7317  0AE6                     _LCD_Set_Cursor:	
  7318                           
  7319                           ;incstack = 0
  7320                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7321                           ;LCD_Set_Cursor@x stored from wreg
  7322  0AE6  00F5               	movwf	LCD_Set_Cursor@x
  7323                           
  7324                           ;lcd.c: 86: char temp,z,w;
  7325                           ;lcd.c: 88: if(x == 0)
  7326  0AE7  0875               	movf	LCD_Set_Cursor@x,w
  7327  0AE8  1D03               	btfss	3,2
  7328  0AE9  2B06               	goto	l2186
  7329                           
  7330                           ;lcd.c: 89: {
  7331                           ;lcd.c: 90: temp = 0x80 + y;
  7332  0AEA  0872               	movf	LCD_Set_Cursor@y,w
  7333  0AEB  3E80               	addlw	128
  7334  0AEC  00F3               	movwf	??_LCD_Set_Cursor
  7335  0AED  0873               	movf	??_LCD_Set_Cursor,w
  7336  0AEE  00F8               	movwf	LCD_Set_Cursor@temp
  7337                           
  7338                           ;lcd.c: 91: z = temp>>4;
  7339  0AEF  0878               	movf	LCD_Set_Cursor@temp,w
  7340  0AF0  00F3               	movwf	??_LCD_Set_Cursor
  7341  0AF1  3004               	movlw	4
  7342  0AF2                     u2015:	
  7343  0AF2  36F3               	lsrf	??_LCD_Set_Cursor,f
  7344  0AF3  0B89               	decfsz	9,f
  7345  0AF4  2AF2               	goto	u2015
  7346  0AF5  0873               	movf	??_LCD_Set_Cursor,w
  7347  0AF6  00F4               	movwf	??_LCD_Set_Cursor+1
  7348  0AF7  0874               	movf	??_LCD_Set_Cursor+1,w
  7349  0AF8  00F6               	movwf	LCD_Set_Cursor@z
  7350                           
  7351                           ;lcd.c: 92: w = temp & 0x0F;
  7352  0AF9  0878               	movf	LCD_Set_Cursor@temp,w
  7353  0AFA  390F               	andlw	15
  7354  0AFB  00F3               	movwf	??_LCD_Set_Cursor
  7355  0AFC  0873               	movf	??_LCD_Set_Cursor,w
  7356  0AFD  00F7               	movwf	LCD_Set_Cursor@w
  7357                           
  7358                           ;lcd.c: 93: LCD_Cmd(z);
  7359  0AFE  0876               	movf	LCD_Set_Cursor@z,w
  7360  0AFF  3188  202C  318A   	fcall	_LCD_Cmd
  7361                           
  7362                           ;lcd.c: 94: LCD_Cmd(w);
  7363  0B02  0877               	movf	LCD_Set_Cursor@w,w
  7364  0B03  3188  202C         	fcall	_LCD_Cmd
  7365                           
  7366                           ;lcd.c: 95: }
  7367  0B05  0008               	return
  7368  0B06                     l2186:	
  7369                           
  7370                           ;lcd.c: 97: else if(x == 1)
  7371  0B06  0375               	decf	LCD_Set_Cursor@x,w
  7372  0B07  1D03               	btfss	3,2
  7373  0B08  0008               	return
  7374                           
  7375                           ;lcd.c: 98: {
  7376                           ;lcd.c: 99: temp = 0xC0 + y;
  7377  0B09  0872               	movf	LCD_Set_Cursor@y,w
  7378  0B0A  3EC0               	addlw	192
  7379  0B0B  00F3               	movwf	??_LCD_Set_Cursor
  7380  0B0C  0873               	movf	??_LCD_Set_Cursor,w
  7381  0B0D  00F8               	movwf	LCD_Set_Cursor@temp
  7382                           
  7383                           ;lcd.c: 100: z = temp>>4;
  7384  0B0E  0878               	movf	LCD_Set_Cursor@temp,w
  7385  0B0F  00F3               	movwf	??_LCD_Set_Cursor
  7386  0B10  3004               	movlw	4
  7387  0B11                     u2035:	
  7388  0B11  36F3               	lsrf	??_LCD_Set_Cursor,f
  7389  0B12  0B89               	decfsz	9,f
  7390  0B13  2B11               	goto	u2035
  7391  0B14  0873               	movf	??_LCD_Set_Cursor,w
  7392  0B15  00F4               	movwf	??_LCD_Set_Cursor+1
  7393  0B16  0874               	movf	??_LCD_Set_Cursor+1,w
  7394  0B17  00F6               	movwf	LCD_Set_Cursor@z
  7395                           
  7396                           ;lcd.c: 101: w = temp & 0x0F;
  7397  0B18  0878               	movf	LCD_Set_Cursor@temp,w
  7398  0B19  390F               	andlw	15
  7399  0B1A  00F3               	movwf	??_LCD_Set_Cursor
  7400  0B1B  0873               	movf	??_LCD_Set_Cursor,w
  7401  0B1C  00F7               	movwf	LCD_Set_Cursor@w
  7402                           
  7403                           ;lcd.c: 102: LCD_Cmd(z);
  7404  0B1D  0876               	movf	LCD_Set_Cursor@z,w
  7405  0B1E  3188  202C  318A   	fcall	_LCD_Cmd
  7406                           
  7407                           ;lcd.c: 103: LCD_Cmd(w);
  7408  0B21  0877               	movf	LCD_Set_Cursor@w,w
  7409  0B22  3188  202C         	fcall	_LCD_Cmd
  7410  0B24  0008               	return
  7411  0B25                     __end_of_LCD_Set_Cursor:	
  7412                           
  7413                           	psect	text8
  7414  0E9C                     __ptext8:	
  7415 ;; *************** function _log *****************
  7416 ;; Defined at:
  7417 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\log.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  x               3   39[BANK0 ] void 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  exponent        2   43[BANK0 ] int 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  3   39[BANK0 ] int 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7431 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;Total ram usage:        6 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    3
  7438 ;; This function calls:
  7439 ;;		___awtoft
  7440 ;;		___ftadd
  7441 ;;		___ftge
  7442 ;;		___ftmul
  7443 ;;		_eval_poly
  7444 ;;		_frexp
  7445 ;; This function is called by:
  7446 ;;		_main
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           
  7451                           ;psect for function _log
  7452  0E9C                     _log:	
  7453                           
  7454                           ;incstack = 0
  7455                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7456  0E9C  0020               	movlb	0	; select bank0
  7457  0E9D  0847               	movf	log@x,w
  7458  0E9E  00BD               	movwf	___ftge@ff1
  7459  0E9F  0848               	movf	log@x+1,w
  7460  0EA0  00BE               	movwf	___ftge@ff1+1
  7461  0EA1  0849               	movf	log@x+2,w
  7462  0EA2  00BF               	movwf	___ftge@ff1+2
  7463  0EA3  3000               	movlw	0
  7464  0EA4  00C0               	movwf	___ftge@ff2
  7465  0EA5  3000               	movlw	0
  7466  0EA6  00C1               	movwf	___ftge@ff2+1
  7467  0EA7  3000               	movlw	0
  7468  0EA8  00C2               	movwf	___ftge@ff2+2
  7469  0EA9  318A  22AA  318E   	fcall	___ftge
  7470  0EAC  1803               	btfsc	3,0
  7471  0EAD  2EBB               	goto	l2726
  7472  0EAE  3021               	movlw	33
  7473  0EAF  0021               	movlb	1	; select bank1
  7474  0EB0  00DC               	movwf	_errno^(0+128)
  7475  0EB1  3000               	movlw	0
  7476  0EB2  00DD               	movwf	(_errno^(0+128)+1)
  7477  0EB3  3000               	movlw	0
  7478  0EB4  0020               	movlb	0	; select bank0
  7479  0EB5  00C7               	movwf	?_log
  7480  0EB6  3000               	movlw	0
  7481  0EB7  00C8               	movwf	?_log+1
  7482  0EB8  3000               	movlw	0
  7483  0EB9  00C9               	movwf	?_log+2
  7484  0EBA  0008               	return
  7485  0EBB                     l2726:	
  7486  0EBB  0020               	movlb	0	; select bank0
  7487  0EBC  0849               	movf	log@x+2,w
  7488  0EBD  0448               	iorwf	log@x+1,w
  7489  0EBE  0447               	iorwf	log@x,w
  7490  0EBF  1D03               	skipz
  7491  0EC0  2ECE               	goto	l2732
  7492  0EC1  3022               	movlw	34
  7493  0EC2  0021               	movlb	1	; select bank1
  7494  0EC3  00DC               	movwf	_errno^(0+128)
  7495  0EC4  3000               	movlw	0
  7496  0EC5  00DD               	movwf	(_errno^(0+128)+1)
  7497  0EC6  3000               	movlw	0
  7498  0EC7  0020               	movlb	0	; select bank0
  7499  0EC8  00C7               	movwf	?_log
  7500  0EC9  3000               	movlw	0
  7501  0ECA  00C8               	movwf	?_log+1
  7502  0ECB  3000               	movlw	0
  7503  0ECC  00C9               	movwf	?_log+2
  7504  0ECD  0008               	return
  7505  0ECE                     l2732:	
  7506  0ECE  3000               	movlw	0
  7507  0ECF  00B0               	movwf	___ftadd@f1
  7508  0ED0  3080               	movlw	128
  7509  0ED1  00B1               	movwf	___ftadd@f1+1
  7510  0ED2  30BF               	movlw	191
  7511  0ED3  00B2               	movwf	___ftadd@f1+2
  7512  0ED4  3000               	movlw	0
  7513  0ED5  00A0               	movwf	___ftmul@f1
  7514  0ED6  3000               	movlw	0
  7515  0ED7  00A1               	movwf	___ftmul@f1+1
  7516  0ED8  3040               	movlw	64
  7517  0ED9  00A2               	movwf	___ftmul@f1+2
  7518  0EDA  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7519  0EDB  00CA               	movwf	??_log
  7520  0EDC  084A               	movf	??_log,w
  7521  0EDD  00F3               	movwf	frexp@eptr
  7522  0EDE  0847               	movf	log@x,w
  7523  0EDF  00F0               	movwf	frexp@value
  7524  0EE0  0848               	movf	log@x+1,w
  7525  0EE1  00F1               	movwf	frexp@value+1
  7526  0EE2  0849               	movf	log@x+2,w
  7527  0EE3  00F2               	movwf	frexp@value+2
  7528  0EE4  318A  226F  318E   	fcall	_frexp
  7529  0EE7  0870               	movf	?_frexp,w
  7530  0EE8  0020               	movlb	0	; select bank0
  7531  0EE9  00A3               	movwf	___ftmul@f2
  7532  0EEA  0871               	movf	?_frexp+1,w
  7533  0EEB  00A4               	movwf	___ftmul@f2+1
  7534  0EEC  0872               	movf	?_frexp+2,w
  7535  0EED  00A5               	movwf	___ftmul@f2+2
  7536  0EEE  318F  274C  318E   	fcall	___ftmul
  7537  0EF1  0020               	movlb	0	; select bank0
  7538  0EF2  0820               	movf	?___ftmul,w
  7539  0EF3  00B3               	movwf	___ftadd@f2
  7540  0EF4  0821               	movf	?___ftmul+1,w
  7541  0EF5  00B4               	movwf	___ftadd@f2+1
  7542  0EF6  0822               	movf	?___ftmul+2,w
  7543  0EF7  00B5               	movwf	___ftadd@f2+2
  7544  0EF8  3182  220F  318E   	fcall	___ftadd
  7545  0EFB  0020               	movlb	0	; select bank0
  7546  0EFC  0830               	movf	?___ftadd,w
  7547  0EFD  00C7               	movwf	log@x
  7548  0EFE  0831               	movf	?___ftadd+1,w
  7549  0EFF  00C8               	movwf	log@x+1
  7550  0F00  0832               	movf	?___ftadd+2,w
  7551  0F01  00C9               	movwf	log@x+2
  7552  0F02  30FF               	movlw	255
  7553  0F03  07CB               	addwf	log@exponent,f
  7554  0F04  30FF               	movlw	255
  7555  0F05  3DCC               	addwfc	log@exponent+1,f
  7556  0F06  0847               	movf	log@x,w
  7557  0F07  00BD               	movwf	eval_poly@x
  7558  0F08  0848               	movf	log@x+1,w
  7559  0F09  00BE               	movwf	eval_poly@x+1
  7560  0F0A  0849               	movf	log@x+2,w
  7561  0F0B  00BF               	movwf	eval_poly@x+2
  7562  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  7563  0F0D  00C0               	movwf	eval_poly@d
  7564  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  7565  0F0F  00C1               	movwf	eval_poly@d+1
  7566  0F10  3008               	movlw	8
  7567  0F11  00C2               	movwf	eval_poly@n
  7568  0F12  3000               	movlw	0
  7569  0F13  00C3               	movwf	eval_poly@n+1
  7570  0F14  318B  23BB  318E   	fcall	_eval_poly
  7571  0F17  0020               	movlb	0	; select bank0
  7572  0F18  083D               	movf	?_eval_poly,w
  7573  0F19  00C7               	movwf	log@x
  7574  0F1A  083E               	movf	?_eval_poly+1,w
  7575  0F1B  00C8               	movwf	log@x+1
  7576  0F1C  083F               	movf	?_eval_poly+2,w
  7577  0F1D  00C9               	movwf	log@x+2
  7578  0F1E  0847               	movf	log@x,w
  7579  0F1F  00B0               	movwf	___ftadd@f1
  7580  0F20  0848               	movf	log@x+1,w
  7581  0F21  00B1               	movwf	___ftadd@f1+1
  7582  0F22  0849               	movf	log@x+2,w
  7583  0F23  00B2               	movwf	___ftadd@f1+2
  7584  0F24  3072               	movlw	114
  7585  0F25  00A0               	movwf	___ftmul@f1
  7586  0F26  3031               	movlw	49
  7587  0F27  00A1               	movwf	___ftmul@f1+1
  7588  0F28  303F               	movlw	63
  7589  0F29  00A2               	movwf	___ftmul@f1+2
  7590  0F2A  084C               	movf	log@exponent+1,w
  7591  0F2B  00F9               	movwf	___awtoft@c+1
  7592  0F2C  084B               	movf	log@exponent,w
  7593  0F2D  00F8               	movwf	___awtoft@c
  7594  0F2E  3189  2138  318E   	fcall	___awtoft
  7595  0F31  0878               	movf	?___awtoft,w
  7596  0F32  0020               	movlb	0	; select bank0
  7597  0F33  00A3               	movwf	___ftmul@f2
  7598  0F34  0879               	movf	?___awtoft+1,w
  7599  0F35  00A4               	movwf	___ftmul@f2+1
  7600  0F36  087A               	movf	?___awtoft+2,w
  7601  0F37  00A5               	movwf	___ftmul@f2+2
  7602  0F38  318F  274C  318E   	fcall	___ftmul
  7603  0F3B  0020               	movlb	0	; select bank0
  7604  0F3C  0820               	movf	?___ftmul,w
  7605  0F3D  00B3               	movwf	___ftadd@f2
  7606  0F3E  0821               	movf	?___ftmul+1,w
  7607  0F3F  00B4               	movwf	___ftadd@f2+1
  7608  0F40  0822               	movf	?___ftmul+2,w
  7609  0F41  00B5               	movwf	___ftadd@f2+2
  7610  0F42  3182  220F         	fcall	___ftadd
  7611  0F44  0020               	movlb	0	; select bank0
  7612  0F45  0830               	movf	?___ftadd,w
  7613  0F46  00C7               	movwf	?_log
  7614  0F47  0831               	movf	?___ftadd+1,w
  7615  0F48  00C8               	movwf	?_log+1
  7616  0F49  0832               	movf	?___ftadd+2,w
  7617  0F4A  00C9               	movwf	?_log+2
  7618  0F4B  0008               	return
  7619  0F4C                     __end_of_log:	
  7620                           
  7621                           	psect	text9
  7622  0A6F                     __ptext9:	
  7623 ;; *************** function _frexp *****************
  7624 ;; Defined at:
  7625 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\frexp.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  value           3    0[COMMON] int 
  7628 ;;  eptr            1    3[COMMON] PTR int 
  7629 ;;		 -> log@exponent(2), 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  3    0[COMMON] PTR int 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;Total ram usage:        6 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_log
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           
  7655                           ;psect for function _frexp
  7656  0A6F                     _frexp:	
  7657                           
  7658                           ;incstack = 0
  7659                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7660  0A6F  0872               	movf	frexp@value+2,w
  7661  0A70  0471               	iorwf	frexp@value+1,w
  7662  0A71  0470               	iorwf	frexp@value,w
  7663  0A72  1D03               	skipz
  7664  0A73  2A81               	goto	l2660
  7665  0A74  0873               	movf	frexp@eptr,w
  7666  0A75  0086               	movwf	6
  7667  0A76  0187               	clrf	7
  7668  0A77  3000               	movlw	0
  7669  0A78  3FC0               	movwi [0]fsr1
  7670  0A79  3FC1               	movwi [1]fsr1
  7671  0A7A  3000               	movlw	0
  7672  0A7B  00F0               	movwf	?_frexp
  7673  0A7C  3000               	movlw	0
  7674  0A7D  00F1               	movwf	?_frexp+1
  7675  0A7E  3000               	movlw	0
  7676  0A7F  00F2               	movwf	?_frexp+2
  7677  0A80  0008               	return
  7678  0A81                     l2660:	
  7679  0A81  0872               	movf	frexp@value+2,w
  7680  0A82  397F               	andlw	127
  7681  0A83  00F4               	movwf	??_frexp
  7682  0A84  01F5               	clrf	??_frexp+1
  7683  0A85  35F4               	lslf	??_frexp,f
  7684  0A86  0DF5               	rlf	??_frexp+1,f
  7685  0A87  0873               	movf	frexp@eptr,w
  7686  0A88  0086               	movwf	6
  7687  0A89  0187               	clrf	7
  7688  0A8A  0874               	movf	??_frexp,w
  7689  0A8B  3FC0               	movwi [0]fsr1
  7690  0A8C  0875               	movf	??_frexp+1,w
  7691  0A8D  3FC1               	movwi [1]fsr1
  7692  0A8E  0D71               	rlf	frexp@value+1,w
  7693  0A8F  0D71               	rlf	frexp@value+1,w
  7694  0A90  3901               	andlw	1
  7695  0A91  00F4               	movwf	??_frexp
  7696  0A92  01F5               	clrf	??_frexp+1
  7697  0A93  0873               	movf	frexp@eptr,w
  7698  0A94  0086               	movwf	6
  7699  0A95  0187               	clrf	7
  7700  0A96  0874               	movf	??_frexp,w
  7701  0A97  0481               	iorwf	1,f
  7702  0A98  3141               	addfsr 1,1
  7703  0A99  0875               	movf	??_frexp+1,w
  7704  0A9A  0481               	iorwf	1,f
  7705  0A9B  0873               	movf	frexp@eptr,w
  7706  0A9C  0086               	movwf	6
  7707  0A9D  0187               	clrf	7
  7708  0A9E  3082               	movlw	130
  7709  0A9F  0781               	addwf	1,f
  7710  0AA0  3141               	addfsr 1,1
  7711  0AA1  30FF               	movlw	255
  7712  0AA2  3D81               	addwfc	1,f
  7713  0AA3  317F               	addfsr 1,-1
  7714  0AA4  0872               	movf	frexp@value+2,w
  7715  0AA5  3980               	andlw	-128
  7716  0AA6  383F               	iorlw	63
  7717  0AA7  00F2               	movwf	frexp@value+2
  7718  0AA8  13F1               	bcf	frexp@value+1,7
  7719  0AA9  0008               	return
  7720  0AAA                     __end_of_frexp:	
  7721                           
  7722                           	psect	text10
  7723  0BBB                     __ptext10:	
  7724 ;; *************** function _eval_poly *****************
  7725 ;; Defined at:
  7726 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\evalpoly.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  x               3   29[BANK0 ] PTR int 
  7729 ;;  d               2   32[BANK0 ] PTR const 
  7730 ;;		 -> log@coeff(27), 
  7731 ;;  n               2   34[BANK0 ] int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  res             3   36[BANK0 ] int 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  3   29[BANK0 ] int 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7743 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;Total ram usage:       10 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    2
  7750 ;; This function calls:
  7751 ;;		___ftadd
  7752 ;;		___ftmul
  7753 ;;		___wmul
  7754 ;; This function is called by:
  7755 ;;		_log
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function _eval_poly
  7761  0BBB                     _eval_poly:	
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7765  0BBB  0020               	movlb	0	; select bank0
  7766  0BBC  0843               	movf	eval_poly@n+1,w
  7767  0BBD  00F1               	movwf	___wmul@multiplier+1
  7768  0BBE  0842               	movf	eval_poly@n,w
  7769  0BBF  00F0               	movwf	___wmul@multiplier
  7770  0BC0  3003               	movlw	3
  7771  0BC1  00F2               	movwf	___wmul@multiplicand
  7772  0BC2  3000               	movlw	0
  7773  0BC3  00F3               	movwf	___wmul@multiplicand+1
  7774  0BC4  3188  20FF  318B   	fcall	___wmul
  7775  0BC7  0020               	movlb	0	; select bank0
  7776  0BC8  0840               	movf	eval_poly@d,w
  7777  0BC9  0770               	addwf	?___wmul,w
  7778  0BCA  0084               	movwf	4
  7779  0BCB  0841               	movf	eval_poly@d+1,w
  7780  0BCC  3D71               	addwfc	?___wmul+1,w
  7781  0BCD  0085               	movwf	5
  7782  0BCE  3F00               	moviw [0]fsr0
  7783  0BCF  00C4               	movwf	eval_poly@res
  7784  0BD0  3F01               	moviw [1]fsr0
  7785  0BD1  00C5               	movwf	eval_poly@res+1
  7786  0BD2  3F02               	moviw [2]fsr0
  7787  0BD3                     L2:	
  7788  0BD3  00C6               	movwf	eval_poly@res+2
  7789  0BD4  0842               	movf	eval_poly@n,w
  7790  0BD5  0443               	iorwf	eval_poly@n+1,w
  7791  0BD6  1903               	btfsc	3,2
  7792  0BD7  2C14               	goto	l2678
  7793  0BD8  30FF               	movlw	255
  7794  0BD9  07C2               	addwf	eval_poly@n,f
  7795  0BDA  30FF               	movlw	255
  7796  0BDB  3DC3               	addwfc	eval_poly@n+1,f
  7797  0BDC  0843               	movf	eval_poly@n+1,w
  7798  0BDD  00F1               	movwf	___wmul@multiplier+1
  7799  0BDE  0842               	movf	eval_poly@n,w
  7800  0BDF  00F0               	movwf	___wmul@multiplier
  7801  0BE0  3003               	movlw	3
  7802  0BE1  00F2               	movwf	___wmul@multiplicand
  7803  0BE2  3000               	movlw	0
  7804  0BE3  00F3               	movwf	___wmul@multiplicand+1
  7805  0BE4  3188  20FF  318B   	fcall	___wmul
  7806  0BE7  0020               	movlb	0	; select bank0
  7807  0BE8  0840               	movf	eval_poly@d,w
  7808  0BE9  0770               	addwf	?___wmul,w
  7809  0BEA  0084               	movwf	4
  7810  0BEB  0841               	movf	eval_poly@d+1,w
  7811  0BEC  3D71               	addwfc	?___wmul+1,w
  7812  0BED  0085               	movwf	5
  7813  0BEE  3F00               	moviw [0]fsr0
  7814  0BEF  00B0               	movwf	___ftadd@f1
  7815  0BF0  3F01               	moviw [1]fsr0
  7816  0BF1  00B1               	movwf	___ftadd@f1+1
  7817  0BF2  3F02               	moviw [2]fsr0
  7818  0BF3  00B2               	movwf	___ftadd@f1+2
  7819  0BF4  0844               	movf	eval_poly@res,w
  7820  0BF5  00A0               	movwf	___ftmul@f1
  7821  0BF6  0845               	movf	eval_poly@res+1,w
  7822  0BF7  00A1               	movwf	___ftmul@f1+1
  7823  0BF8  0846               	movf	eval_poly@res+2,w
  7824  0BF9  00A2               	movwf	___ftmul@f1+2
  7825  0BFA  083D               	movf	eval_poly@x,w
  7826  0BFB  00A3               	movwf	___ftmul@f2
  7827  0BFC  083E               	movf	eval_poly@x+1,w
  7828  0BFD  00A4               	movwf	___ftmul@f2+1
  7829  0BFE  083F               	movf	eval_poly@x+2,w
  7830  0BFF  00A5               	movwf	___ftmul@f2+2
  7831  0C00  318F  274C  318B   	fcall	___ftmul
  7832  0C03  0020               	movlb	0	; select bank0
  7833  0C04  0820               	movf	?___ftmul,w
  7834  0C05  00B3               	movwf	___ftadd@f2
  7835  0C06  0821               	movf	?___ftmul+1,w
  7836  0C07  00B4               	movwf	___ftadd@f2+1
  7837  0C08  0822               	movf	?___ftmul+2,w
  7838  0C09  00B5               	movwf	___ftadd@f2+2
  7839  0C0A  3182  220F  318B   	fcall	___ftadd
  7840  0C0D  0020               	movlb	0	; select bank0
  7841  0C0E  0830               	movf	?___ftadd,w
  7842  0C0F  00C4               	movwf	eval_poly@res
  7843  0C10  0831               	movf	?___ftadd+1,w
  7844  0C11  00C5               	movwf	eval_poly@res+1
  7845  0C12  0832               	movf	?___ftadd+2,w
  7846  0C13  2BD3               	goto	L2
  7847  0C14                     l2678:	
  7848  0C14  0844               	movf	eval_poly@res,w
  7849  0C15  00BD               	movwf	?_eval_poly
  7850  0C16  0845               	movf	eval_poly@res+1,w
  7851  0C17  00BE               	movwf	?_eval_poly+1
  7852  0C18  0846               	movf	eval_poly@res+2,w
  7853  0C19  00BF               	movwf	?_eval_poly+2
  7854  0C1A  0008               	return
  7855  0C1B                     __end_of_eval_poly:	
  7856                           
  7857                           	psect	text11
  7858  08FF                     __ptext11:	
  7859 ;; *************** function ___wmul *****************
  7860 ;; Defined at:
  7861 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  multiplier      2    0[COMMON] unsigned int 
  7864 ;;  multiplicand    2    2[COMMON] unsigned int 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  product         2    4[COMMON] unsigned int 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2    0[COMMON] unsigned int 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;Total ram usage:        6 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;;		_eval_poly
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           
  7891                           ;psect for function ___wmul
  7892  08FF                     ___wmul:	
  7893                           
  7894                           ;incstack = 0
  7895                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7896  08FF  01F4               	clrf	___wmul@product
  7897  0900  01F5               	clrf	___wmul@product+1
  7898  0901                     l2258:	
  7899  0901  1C70               	btfss	___wmul@multiplier,0
  7900  0902  2907               	goto	l480
  7901  0903  0872               	movf	___wmul@multiplicand,w
  7902  0904  07F4               	addwf	___wmul@product,f
  7903  0905  0873               	movf	___wmul@multiplicand+1,w
  7904  0906  3DF5               	addwfc	___wmul@product+1,f
  7905  0907                     l480:	
  7906  0907  3001               	movlw	1
  7907  0908                     u2155:	
  7908  0908  35F2               	lslf	___wmul@multiplicand,f
  7909  0909  0DF3               	rlf	___wmul@multiplicand+1,f
  7910  090A  0B89               	decfsz	9,f
  7911  090B  2908               	goto	u2155
  7912  090C  3001               	movlw	1
  7913  090D                     u2165:	
  7914  090D  36F1               	lsrf	___wmul@multiplier+1,f
  7915  090E  0CF0               	rrf	___wmul@multiplier,f
  7916  090F  0B89               	decfsz	9,f
  7917  0910  290D               	goto	u2165
  7918  0911  0870               	movf	___wmul@multiplier,w
  7919  0912  0471               	iorwf	___wmul@multiplier+1,w
  7920  0913  1D03               	btfss	3,2
  7921  0914  2901               	goto	l2258
  7922  0915  0875               	movf	___wmul@product+1,w
  7923  0916  00F1               	movwf	?___wmul+1
  7924  0917  0874               	movf	___wmul@product,w
  7925  0918  00F0               	movwf	?___wmul
  7926  0919  0008               	return
  7927  091A                     __end_of___wmul:	
  7928                           
  7929                           	psect	text12
  7930  0859                     __ptext12:	
  7931 ;; *************** function ___lwtoft *****************
  7932 ;; Defined at:
  7933 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  c               2    8[COMMON] unsigned int 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  3    8[COMMON] float 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, pclath, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;Total ram usage:        4 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    1
  7954 ;; This function calls:
  7955 ;;		___ftpack
  7956 ;; This function is called by:
  7957 ;;		_main
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function ___lwtoft
  7963  0859                     ___lwtoft:	
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7967  0859  0878               	movf	___lwtoft@c,w
  7968  085A  00F0               	movwf	___ftpack@arg
  7969  085B  0879               	movf	___lwtoft@c+1,w
  7970  085C  00F1               	movwf	___ftpack@arg+1
  7971  085D  01F2               	clrf	___ftpack@arg+2
  7972  085E  308E               	movlw	142
  7973  085F  00FB               	movwf	??___lwtoft
  7974  0860  087B               	movf	??___lwtoft,w
  7975  0861  00F3               	movwf	___ftpack@exp
  7976  0862  01F4               	clrf	___ftpack@sign
  7977  0863  318C  241B         	fcall	___ftpack
  7978  0865  0870               	movf	?___ftpack,w
  7979  0866  00F8               	movwf	?___lwtoft
  7980  0867  0871               	movf	?___ftpack+1,w
  7981  0868  00F9               	movwf	?___lwtoft+1
  7982  0869  0872               	movf	?___ftpack+2,w
  7983  086A  00FA               	movwf	?___lwtoft+2
  7984  086B  0008               	return
  7985  086C                     __end_of___lwtoft:	
  7986                           
  7987                           	psect	text13
  7988  0A02                     __ptext13:	
  7989 ;; *************** function ___lwdiv *****************
  7990 ;; Defined at:
  7991 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  divisor         2    6[COMMON] unsigned int 
  7994 ;;  dividend        2    8[COMMON] unsigned int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  quotient        2   11[COMMON] unsigned int 
  7997 ;;  counter         1   13[COMMON] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2    6[COMMON] unsigned int 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;Total ram usage:        8 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function ___lwdiv
  8022  0A02                     ___lwdiv:	
  8023                           
  8024                           ;incstack = 0
  8025                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8026  0A02  01FB               	clrf	___lwdiv@quotient
  8027  0A03  01FC               	clrf	___lwdiv@quotient+1
  8028  0A04  0876               	movf	___lwdiv@divisor,w
  8029  0A05  0477               	iorwf	___lwdiv@divisor+1,w
  8030  0A06  1903               	btfsc	3,2
  8031  0A07  2A31               	goto	l3000
  8032  0A08  01FD               	clrf	___lwdiv@counter
  8033  0A09  0AFD               	incf	___lwdiv@counter,f
  8034  0A0A                     l2988:	
  8035  0A0A  1BF7               	btfsc	___lwdiv@divisor+1,7
  8036  0A0B  2A16               	goto	l2990
  8037  0A0C  3001               	movlw	1
  8038  0A0D                     u3155:	
  8039  0A0D  35F6               	lslf	___lwdiv@divisor,f
  8040  0A0E  0DF7               	rlf	___lwdiv@divisor+1,f
  8041  0A0F  0B89               	decfsz	9,f
  8042  0A10  2A0D               	goto	u3155
  8043  0A11  3001               	movlw	1
  8044  0A12  00FA               	movwf	??___lwdiv
  8045  0A13  087A               	movf	??___lwdiv,w
  8046  0A14  07FD               	addwf	___lwdiv@counter,f
  8047  0A15  2A0A               	goto	l2988
  8048  0A16                     l2990:	
  8049  0A16  3001               	movlw	1
  8050  0A17                     u3175:	
  8051  0A17  35FB               	lslf	___lwdiv@quotient,f
  8052  0A18  0DFC               	rlf	___lwdiv@quotient+1,f
  8053  0A19  0B89               	decfsz	9,f
  8054  0A1A  2A17               	goto	u3175
  8055  0A1B  0877               	movf	___lwdiv@divisor+1,w
  8056  0A1C  0279               	subwf	___lwdiv@dividend+1,w
  8057  0A1D  1D03               	skipz
  8058  0A1E  2A21               	goto	u3185
  8059  0A1F  0876               	movf	___lwdiv@divisor,w
  8060  0A20  0278               	subwf	___lwdiv@dividend,w
  8061  0A21                     u3185:	
  8062  0A21  1C03               	skipc
  8063  0A22  2A28               	goto	l2996
  8064  0A23  0876               	movf	___lwdiv@divisor,w
  8065  0A24  02F8               	subwf	___lwdiv@dividend,f
  8066  0A25  0877               	movf	___lwdiv@divisor+1,w
  8067  0A26  3BF9               	subwfb	___lwdiv@dividend+1,f
  8068  0A27  147B               	bsf	___lwdiv@quotient,0
  8069  0A28                     l2996:	
  8070  0A28  3001               	movlw	1
  8071  0A29                     u3195:	
  8072  0A29  36F7               	lsrf	___lwdiv@divisor+1,f
  8073  0A2A  0CF6               	rrf	___lwdiv@divisor,f
  8074  0A2B  0B89               	decfsz	9,f
  8075  0A2C  2A29               	goto	u3195
  8076  0A2D  3001               	movlw	1
  8077  0A2E  02FD               	subwf	___lwdiv@counter,f
  8078  0A2F  1D03               	btfss	3,2
  8079  0A30  2A16               	goto	l2990
  8080  0A31                     l3000:	
  8081  0A31  087C               	movf	___lwdiv@quotient+1,w
  8082  0A32  00F7               	movwf	?___lwdiv+1
  8083  0A33  087B               	movf	___lwdiv@quotient,w
  8084  0A34  00F6               	movwf	?___lwdiv
  8085  0A35  0008               	return
  8086  0A36                     __end_of___lwdiv:	
  8087                           
  8088                           	psect	text14
  8089  08CB                     __ptext14:	
  8090 ;; *************** function ___lbtoft *****************
  8091 ;; Defined at:
  8092 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lbtoft.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  c               1    wreg     unsigned char 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  c               1   11[COMMON] unsigned char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  3    8[COMMON] float 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0, pclath, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;Total ram usage:        8 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    1
  8113 ;; This function calls:
  8114 ;;		___ftpack
  8115 ;; This function is called by:
  8116 ;;		_main
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           
  8121                           ;psect for function ___lbtoft
  8122  08CB                     ___lbtoft:	
  8123                           
  8124                           ;incstack = 0
  8125                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8126                           ;___lbtoft@c stored from wreg
  8127  08CB  00FB               	movwf	___lbtoft@c
  8128  08CC  087B               	movf	___lbtoft@c,w
  8129  08CD  0020               	movlb	0	; select bank0
  8130  08CE  00A0               	movwf	??___lbtoft
  8131  08CF  01A1               	clrf	??___lbtoft+1
  8132  08D0  01A2               	clrf	??___lbtoft+2
  8133  08D1  0820               	movf	??___lbtoft,w
  8134  08D2  00F0               	movwf	___ftpack@arg
  8135  08D3  0821               	movf	??___lbtoft+1,w
  8136  08D4  00F1               	movwf	___ftpack@arg+1
  8137  08D5  0822               	movf	??___lbtoft+2,w
  8138  08D6  00F2               	movwf	___ftpack@arg+2
  8139  08D7  308E               	movlw	142
  8140  08D8  00A3               	movwf	??___lbtoft+3
  8141  08D9  0823               	movf	??___lbtoft+3,w
  8142  08DA  00F3               	movwf	___ftpack@exp
  8143  08DB  01F4               	clrf	___ftpack@sign
  8144  08DC  318C  241B         	fcall	___ftpack
  8145  08DE  0870               	movf	?___ftpack,w
  8146  08DF  00F8               	movwf	?___lbtoft
  8147  08E0  0871               	movf	?___ftpack+1,w
  8148  08E1  00F9               	movwf	?___lbtoft+1
  8149  08E2  0872               	movf	?___ftpack+2,w
  8150  08E3  00FA               	movwf	?___lbtoft+2
  8151  08E4  0008               	return
  8152  08E5                     __end_of___lbtoft:	
  8153                           
  8154                           	psect	text15
  8155  0D6C                     __ptext15:	
  8156 ;; *************** function ___fttol *****************
  8157 ;; Defined at:
  8158 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  f1              3   61[BANK0 ] float 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  lval            4   70[BANK0 ] unsigned long 
  8163 ;;  exp1            1   74[BANK0 ] unsigned char 
  8164 ;;  sign1           1   69[BANK0 ] unsigned char 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  4   61[BANK0 ] long 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;Total ram usage:       14 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           
  8188                           ;psect for function ___fttol
  8189  0D6C                     ___fttol:	
  8190                           
  8191                           ;incstack = 0
  8192                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8193  0D6C  0020               	movlb	0	; select bank0
  8194  0D6D  085D               	movf	___fttol@f1,w
  8195  0D6E  00E1               	movwf	??___fttol
  8196  0D6F  085E               	movf	___fttol@f1+1,w
  8197  0D70  00E2               	movwf	??___fttol+1
  8198  0D71  085F               	movf	___fttol@f1+2,w
  8199  0D72  00E3               	movwf	??___fttol+2
  8200  0D73  1003               	clrc
  8201  0D74  0D62               	rlf	??___fttol+1,w
  8202  0D75  0D63               	rlf	??___fttol+2,w
  8203  0D76  00E4               	movwf	??___fttol+3
  8204  0D77  0864               	movf	??___fttol+3,w
  8205  0D78  00EA               	movwf	___fttol@exp1
  8206  0D79  086A               	movf	___fttol@exp1,w
  8207  0D7A  1D03               	btfss	3,2
  8208  0D7B  2D85               	goto	l2938
  8209  0D7C  3000               	movlw	0
  8210  0D7D  00E0               	movwf	?___fttol+3
  8211  0D7E  3000               	movlw	0
  8212  0D7F  00DF               	movwf	?___fttol+2
  8213  0D80  3000               	movlw	0
  8214  0D81  00DE               	movwf	?___fttol+1
  8215  0D82  3000               	movlw	0
  8216  0D83  00DD               	movwf	?___fttol
  8217  0D84  0008               	return
  8218  0D85                     l2938:	
  8219  0D85  085D               	movf	___fttol@f1,w
  8220  0D86  00E1               	movwf	??___fttol
  8221  0D87  085E               	movf	___fttol@f1+1,w
  8222  0D88  00E2               	movwf	??___fttol+1
  8223  0D89  085F               	movf	___fttol@f1+2,w
  8224  0D8A  00E3               	movwf	??___fttol+2
  8225  0D8B  3017               	movlw	23
  8226  0D8C                     u3055:	
  8227  0D8C  36E3               	lsrf	??___fttol+2,f
  8228  0D8D  0CE2               	rrf	??___fttol+1,f
  8229  0D8E  0CE1               	rrf	??___fttol,f
  8230  0D8F  0B89               	decfsz	9,f
  8231  0D90  2D8C               	goto	u3055
  8232  0D91  0861               	movf	??___fttol,w
  8233  0D92  00E4               	movwf	??___fttol+3
  8234  0D93  0864               	movf	??___fttol+3,w
  8235  0D94  00E5               	movwf	___fttol@sign1
  8236  0D95  17DE               	bsf	___fttol@f1+1,7
  8237  0D96  30FF               	movlw	255
  8238  0D97  05DD               	andwf	___fttol@f1,f
  8239  0D98  30FF               	movlw	255
  8240  0D99  05DE               	andwf	___fttol@f1+1,f
  8241  0D9A  3000               	movlw	0
  8242  0D9B  05DF               	andwf	___fttol@f1+2,f
  8243  0D9C  085D               	movf	___fttol@f1,w
  8244  0D9D  00E6               	movwf	___fttol@lval
  8245  0D9E  085E               	movf	___fttol@f1+1,w
  8246  0D9F  00E7               	movwf	___fttol@lval+1
  8247  0DA0  085F               	movf	___fttol@f1+2,w
  8248  0DA1  00E8               	movwf	___fttol@lval+2
  8249  0DA2  01E9               	clrf	___fttol@lval+3
  8250  0DA3  308E               	movlw	142
  8251  0DA4  02EA               	subwf	___fttol@exp1,f
  8252  0DA5  1FEA               	btfss	___fttol@exp1,7
  8253  0DA6  2DC3               	goto	l2958
  8254  0DA7  086A               	movf	___fttol@exp1,w
  8255  0DA8  3A80               	xorlw	128
  8256  0DA9  3E8F               	addlw	143
  8257  0DAA  1803               	skipnc
  8258  0DAB  2DB5               	goto	l2956
  8259  0DAC  3000               	movlw	0
  8260  0DAD  00E0               	movwf	?___fttol+3
  8261  0DAE  3000               	movlw	0
  8262  0DAF  00DF               	movwf	?___fttol+2
  8263  0DB0  3000               	movlw	0
  8264  0DB1  00DE               	movwf	?___fttol+1
  8265  0DB2  3000               	movlw	0
  8266  0DB3  00DD               	movwf	?___fttol
  8267  0DB4  0008               	return
  8268  0DB5                     l2956:	
  8269  0DB5  3001               	movlw	1
  8270  0DB6                     u3085:	
  8271  0DB6  36E9               	lsrf	___fttol@lval+3,f
  8272  0DB7  0CE8               	rrf	___fttol@lval+2,f
  8273  0DB8  0CE7               	rrf	___fttol@lval+1,f
  8274  0DB9  0CE6               	rrf	___fttol@lval,f
  8275  0DBA  0B89               	decfsz	9,f
  8276  0DBB  2DB6               	goto	u3085
  8277  0DBC  3001               	movlw	1
  8278  0DBD  00E1               	movwf	??___fttol
  8279  0DBE  0861               	movf	??___fttol,w
  8280  0DBF  07EA               	addwf	___fttol@exp1,f
  8281  0DC0  1903               	btfsc	3,2
  8282  0DC1  2DDC               	goto	l2966
  8283  0DC2  2DB5               	goto	l2956
  8284  0DC3                     l2958:	
  8285  0DC3  3018               	movlw	24
  8286  0DC4  026A               	subwf	___fttol@exp1,w
  8287  0DC5  1C03               	skipc
  8288  0DC6  2DD9               	goto	l732
  8289  0DC7  3000               	movlw	0
  8290  0DC8  00E0               	movwf	?___fttol+3
  8291  0DC9  3000               	movlw	0
  8292  0DCA  00DF               	movwf	?___fttol+2
  8293  0DCB  3000               	movlw	0
  8294  0DCC  00DE               	movwf	?___fttol+1
  8295  0DCD  3000               	movlw	0
  8296  0DCE  00DD               	movwf	?___fttol
  8297  0DCF  0008               	return
  8298  0DD0                     l2964:	
  8299  0DD0  3001               	movlw	1
  8300  0DD1                     u3115:	
  8301  0DD1  35E6               	lslf	___fttol@lval,f
  8302  0DD2  0DE7               	rlf	___fttol@lval+1,f
  8303  0DD3  0DE8               	rlf	___fttol@lval+2,f
  8304  0DD4  0DE9               	rlf	___fttol@lval+3,f
  8305  0DD5  0B89               	decfsz	9,f
  8306  0DD6  2DD1               	goto	u3115
  8307  0DD7  3001               	movlw	1
  8308  0DD8  02EA               	subwf	___fttol@exp1,f
  8309  0DD9                     l732:	
  8310  0DD9  086A               	movf	___fttol@exp1,w
  8311  0DDA  1D03               	btfss	3,2
  8312  0DDB  2DD0               	goto	l2964
  8313  0DDC                     l2966:	
  8314  0DDC  0865               	movf	___fttol@sign1,w
  8315  0DDD  1903               	btfsc	3,2
  8316  0DDE  2DEA               	goto	l2970
  8317  0DDF  09E6               	comf	___fttol@lval,f
  8318  0DE0  09E7               	comf	___fttol@lval+1,f
  8319  0DE1  09E8               	comf	___fttol@lval+2,f
  8320  0DE2  09E9               	comf	___fttol@lval+3,f
  8321  0DE3  0AE6               	incf	___fttol@lval,f
  8322  0DE4  1903               	skipnz
  8323  0DE5  0AE7               	incf	___fttol@lval+1,f
  8324  0DE6  1903               	skipnz
  8325  0DE7  0AE8               	incf	___fttol@lval+2,f
  8326  0DE8  1903               	skipnz
  8327  0DE9  0AE9               	incf	___fttol@lval+3,f
  8328  0DEA                     l2970:	
  8329  0DEA  0869               	movf	___fttol@lval+3,w
  8330  0DEB  00E0               	movwf	?___fttol+3
  8331  0DEC  0868               	movf	___fttol@lval+2,w
  8332  0DED  00DF               	movwf	?___fttol+2
  8333  0DEE  0867               	movf	___fttol@lval+1,w
  8334  0DEF  00DE               	movwf	?___fttol+1
  8335  0DF0  0866               	movf	___fttol@lval,w
  8336  0DF1  00DD               	movwf	?___fttol
  8337  0DF2  0008               	return
  8338  0DF3                     __end_of___fttol:	
  8339                           
  8340                           	psect	text16
  8341  091A                     __ptext16:	
  8342 ;; *************** function ___ftsub *****************
  8343 ;; Defined at:
  8344 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  f2              3   29[BANK0 ] float 
  8347 ;;  f1              3   32[BANK0 ] float 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  3   29[BANK0 ] float 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8359 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;Total ram usage:        6 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    2
  8366 ;; This function calls:
  8367 ;;		___ftadd
  8368 ;; This function is called by:
  8369 ;;		_main
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function ___ftsub
  8375  091A                     ___ftsub:	
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8379  091A  0020               	movlb	0	; select bank0
  8380  091B  083F               	movf	___ftsub@f2+2,w
  8381  091C  043E               	iorwf	___ftsub@f2+1,w
  8382  091D  043D               	iorwf	___ftsub@f2,w
  8383  091E  1903               	skipnz
  8384  091F  2922               	goto	l2928
  8385  0920  3080               	movlw	128
  8386  0921  06BF               	xorwf	___ftsub@f2+2,f
  8387  0922                     l2928:	
  8388  0922  0840               	movf	___ftsub@f1,w
  8389  0923  00B0               	movwf	___ftadd@f1
  8390  0924  0841               	movf	___ftsub@f1+1,w
  8391  0925  00B1               	movwf	___ftadd@f1+1
  8392  0926  0842               	movf	___ftsub@f1+2,w
  8393  0927  00B2               	movwf	___ftadd@f1+2
  8394  0928  083D               	movf	___ftsub@f2,w
  8395  0929  00B3               	movwf	___ftadd@f2
  8396  092A  083E               	movf	___ftsub@f2+1,w
  8397  092B  00B4               	movwf	___ftadd@f2+1
  8398  092C  083F               	movf	___ftsub@f2+2,w
  8399  092D  00B5               	movwf	___ftadd@f2+2
  8400  092E  3182  220F         	fcall	___ftadd
  8401  0930  0020               	movlb	0	; select bank0
  8402  0931  0830               	movf	?___ftadd,w
  8403  0932  00BD               	movwf	?___ftsub
  8404  0933  0831               	movf	?___ftadd+1,w
  8405  0934  00BE               	movwf	?___ftsub+1
  8406  0935  0832               	movf	?___ftadd+2,w
  8407  0936  00BF               	movwf	?___ftsub+2
  8408  0937  0008               	return
  8409  0938                     __end_of___ftsub:	
  8410                           
  8411                           	psect	text17
  8412  0DF3                     __ptext17:	
  8413 ;; *************** function ___ftdiv *****************
  8414 ;; Defined at:
  8415 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  f2              3    0[BANK0 ] float 
  8418 ;;  f1              3    3[BANK0 ] float 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  f3              3   11[BANK0 ] float 
  8421 ;;  sign            1   15[BANK0 ] unsigned char 
  8422 ;;  exp             1   14[BANK0 ] unsigned char 
  8423 ;;  cntr            1   10[BANK0 ] unsigned char 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  3    0[BANK0 ] float 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, pclath, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8433 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;Total ram usage:       16 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    1
  8440 ;; This function calls:
  8441 ;;		___ftpack
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function ___ftdiv
  8449  0DF3                     ___ftdiv:	
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8453  0DF3  0020               	movlb	0	; select bank0
  8454  0DF4  0823               	movf	___ftdiv@f1,w
  8455  0DF5  00A6               	movwf	??___ftdiv
  8456  0DF6  0824               	movf	___ftdiv@f1+1,w
  8457  0DF7  00A7               	movwf	??___ftdiv+1
  8458  0DF8  0825               	movf	___ftdiv@f1+2,w
  8459  0DF9  00A8               	movwf	??___ftdiv+2
  8460  0DFA  1003               	clrc
  8461  0DFB  0D27               	rlf	??___ftdiv+1,w
  8462  0DFC  0D28               	rlf	??___ftdiv+2,w
  8463  0DFD  00A9               	movwf	??___ftdiv+3
  8464  0DFE  0829               	movf	??___ftdiv+3,w
  8465  0DFF  00AE               	movwf	___ftdiv@exp
  8466  0E00  082E               	movf	___ftdiv@exp,w
  8467  0E01  1D03               	btfss	3,2
  8468  0E02  2E0A               	goto	l2888
  8469  0E03  3000               	movlw	0
  8470  0E04  00A0               	movwf	?___ftdiv
  8471  0E05  3000               	movlw	0
  8472  0E06  00A1               	movwf	?___ftdiv+1
  8473  0E07  3000               	movlw	0
  8474  0E08  00A2               	movwf	?___ftdiv+2
  8475  0E09  0008               	return
  8476  0E0A                     l2888:	
  8477  0E0A  0820               	movf	___ftdiv@f2,w
  8478  0E0B  00A6               	movwf	??___ftdiv
  8479  0E0C  0821               	movf	___ftdiv@f2+1,w
  8480  0E0D  00A7               	movwf	??___ftdiv+1
  8481  0E0E  0822               	movf	___ftdiv@f2+2,w
  8482  0E0F  00A8               	movwf	??___ftdiv+2
  8483  0E10  1003               	clrc
  8484  0E11  0D27               	rlf	??___ftdiv+1,w
  8485  0E12  0D28               	rlf	??___ftdiv+2,w
  8486  0E13  00A9               	movwf	??___ftdiv+3
  8487  0E14  0829               	movf	??___ftdiv+3,w
  8488  0E15  00AF               	movwf	___ftdiv@sign
  8489  0E16  082F               	movf	___ftdiv@sign,w
  8490  0E17  1D03               	btfss	3,2
  8491  0E18  2E20               	goto	l2894
  8492  0E19  3000               	movlw	0
  8493  0E1A  00A0               	movwf	?___ftdiv
  8494  0E1B  3000               	movlw	0
  8495  0E1C  00A1               	movwf	?___ftdiv+1
  8496  0E1D  3000               	movlw	0
  8497  0E1E  00A2               	movwf	?___ftdiv+2
  8498  0E1F  0008               	return
  8499  0E20                     l2894:	
  8500  0E20  3000               	movlw	0
  8501  0E21  00AB               	movwf	___ftdiv@f3
  8502  0E22  3000               	movlw	0
  8503  0E23  00AC               	movwf	___ftdiv@f3+1
  8504  0E24  3000               	movlw	0
  8505  0E25  00AD               	movwf	___ftdiv@f3+2
  8506  0E26  3089               	movlw	137
  8507  0E27  072F               	addwf	___ftdiv@sign,w
  8508  0E28  00A6               	movwf	??___ftdiv
  8509  0E29  0826               	movf	??___ftdiv,w
  8510  0E2A  02AE               	subwf	___ftdiv@exp,f
  8511  0E2B  0823               	movf	___ftdiv@f1,w
  8512  0E2C  00A6               	movwf	??___ftdiv
  8513  0E2D  0824               	movf	___ftdiv@f1+1,w
  8514  0E2E  00A7               	movwf	??___ftdiv+1
  8515  0E2F  0825               	movf	___ftdiv@f1+2,w
  8516  0E30  00A8               	movwf	??___ftdiv+2
  8517  0E31  3010               	movlw	16
  8518  0E32                     u2975:	
  8519  0E32  36A8               	lsrf	??___ftdiv+2,f
  8520  0E33  0CA7               	rrf	??___ftdiv+1,f
  8521  0E34  0CA6               	rrf	??___ftdiv,f
  8522  0E35  0B89               	decfsz	9,f
  8523  0E36  2E32               	goto	u2975
  8524  0E37  0826               	movf	??___ftdiv,w
  8525  0E38  00A9               	movwf	??___ftdiv+3
  8526  0E39  0829               	movf	??___ftdiv+3,w
  8527  0E3A  00AF               	movwf	___ftdiv@sign
  8528  0E3B  0820               	movf	___ftdiv@f2,w
  8529  0E3C  00A6               	movwf	??___ftdiv
  8530  0E3D  0821               	movf	___ftdiv@f2+1,w
  8531  0E3E  00A7               	movwf	??___ftdiv+1
  8532  0E3F  0822               	movf	___ftdiv@f2+2,w
  8533  0E40  00A8               	movwf	??___ftdiv+2
  8534  0E41  3010               	movlw	16
  8535  0E42                     u2985:	
  8536  0E42  36A8               	lsrf	??___ftdiv+2,f
  8537  0E43  0CA7               	rrf	??___ftdiv+1,f
  8538  0E44  0CA6               	rrf	??___ftdiv,f
  8539  0E45  0B89               	decfsz	9,f
  8540  0E46  2E42               	goto	u2985
  8541  0E47  0826               	movf	??___ftdiv,w
  8542  0E48  00A9               	movwf	??___ftdiv+3
  8543  0E49  0829               	movf	??___ftdiv+3,w
  8544  0E4A  06AF               	xorwf	___ftdiv@sign,f
  8545  0E4B  3080               	movlw	128
  8546  0E4C  00A6               	movwf	??___ftdiv
  8547  0E4D  0826               	movf	??___ftdiv,w
  8548  0E4E  05AF               	andwf	___ftdiv@sign,f
  8549  0E4F  17A4               	bsf	___ftdiv@f1+1,7
  8550  0E50  30FF               	movlw	255
  8551  0E51  05A3               	andwf	___ftdiv@f1,f
  8552  0E52  30FF               	movlw	255
  8553  0E53  05A4               	andwf	___ftdiv@f1+1,f
  8554  0E54  3000               	movlw	0
  8555  0E55  05A5               	andwf	___ftdiv@f1+2,f
  8556  0E56  17A1               	bsf	___ftdiv@f2+1,7
  8557  0E57  30FF               	movlw	255
  8558  0E58  05A0               	andwf	___ftdiv@f2,f
  8559  0E59  30FF               	movlw	255
  8560  0E5A  05A1               	andwf	___ftdiv@f2+1,f
  8561  0E5B  3000               	movlw	0
  8562  0E5C  05A2               	andwf	___ftdiv@f2+2,f
  8563  0E5D  3018               	movlw	24
  8564  0E5E  00A6               	movwf	??___ftdiv
  8565  0E5F  0826               	movf	??___ftdiv,w
  8566  0E60  00AA               	movwf	___ftdiv@cntr
  8567  0E61                     l2908:	
  8568  0E61  3001               	movlw	1
  8569  0E62                     u2995:	
  8570  0E62  35AB               	lslf	___ftdiv@f3,f
  8571  0E63  0DAC               	rlf	___ftdiv@f3+1,f
  8572  0E64  0DAD               	rlf	___ftdiv@f3+2,f
  8573  0E65  0B89               	decfsz	9,f
  8574  0E66  2E62               	goto	u2995
  8575  0E67  0822               	movf	___ftdiv@f2+2,w
  8576  0E68  0225               	subwf	___ftdiv@f1+2,w
  8577  0E69  1D03               	skipz
  8578  0E6A  2E71               	goto	u3005
  8579  0E6B  0821               	movf	___ftdiv@f2+1,w
  8580  0E6C  0224               	subwf	___ftdiv@f1+1,w
  8581  0E6D  1D03               	skipz
  8582  0E6E  2E71               	goto	u3005
  8583  0E6F  0820               	movf	___ftdiv@f2,w
  8584  0E70  0223               	subwf	___ftdiv@f1,w
  8585  0E71                     u3005:	
  8586  0E71  1C03               	skipc
  8587  0E72  2E7A               	goto	l2916
  8588  0E73  0820               	movf	___ftdiv@f2,w
  8589  0E74  02A3               	subwf	___ftdiv@f1,f
  8590  0E75  0821               	movf	___ftdiv@f2+1,w
  8591  0E76  3BA4               	subwfb	___ftdiv@f1+1,f
  8592  0E77  0822               	movf	___ftdiv@f2+2,w
  8593  0E78  3BA5               	subwfb	___ftdiv@f1+2,f
  8594  0E79  142B               	bsf	___ftdiv@f3,0
  8595  0E7A                     l2916:	
  8596  0E7A  3001               	movlw	1
  8597  0E7B                     u3015:	
  8598  0E7B  35A3               	lslf	___ftdiv@f1,f
  8599  0E7C  0DA4               	rlf	___ftdiv@f1+1,f
  8600  0E7D  0DA5               	rlf	___ftdiv@f1+2,f
  8601  0E7E  0B89               	decfsz	9,f
  8602  0E7F  2E7B               	goto	u3015
  8603  0E80  3001               	movlw	1
  8604  0E81  02AA               	subwf	___ftdiv@cntr,f
  8605  0E82  1D03               	btfss	3,2
  8606  0E83  2E61               	goto	l2908
  8607  0E84  082B               	movf	___ftdiv@f3,w
  8608  0E85  00F0               	movwf	___ftpack@arg
  8609  0E86  082C               	movf	___ftdiv@f3+1,w
  8610  0E87  00F1               	movwf	___ftpack@arg+1
  8611  0E88  082D               	movf	___ftdiv@f3+2,w
  8612  0E89  00F2               	movwf	___ftpack@arg+2
  8613  0E8A  082E               	movf	___ftdiv@exp,w
  8614  0E8B  00A6               	movwf	??___ftdiv
  8615  0E8C  0826               	movf	??___ftdiv,w
  8616  0E8D  00F3               	movwf	___ftpack@exp
  8617  0E8E  082F               	movf	___ftdiv@sign,w
  8618  0E8F  00A7               	movwf	??___ftdiv+1
  8619  0E90  0827               	movf	??___ftdiv+1,w
  8620  0E91  00F4               	movwf	___ftpack@sign
  8621  0E92  318C  241B         	fcall	___ftpack
  8622  0E94  0870               	movf	?___ftpack,w
  8623  0E95  0020               	movlb	0	; select bank0
  8624  0E96  00A0               	movwf	?___ftdiv
  8625  0E97  0871               	movf	?___ftpack+1,w
  8626  0E98  00A1               	movwf	?___ftdiv+1
  8627  0E99  0872               	movf	?___ftpack+2,w
  8628  0E9A  00A2               	movwf	?___ftdiv+2
  8629  0E9B  0008               	return
  8630  0E9C                     __end_of___ftdiv:	
  8631                           
  8632                           	psect	text18
  8633  0004                     __ptext18:	
  8634 ;; *************** function ___aldiv *****************
  8635 ;; Defined at:
  8636 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  divisor         4    0[COMMON] long 
  8639 ;;  dividend        4    4[COMMON] long 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  quotient        4    2[BANK0 ] long 
  8642 ;;  sign            1    1[BANK0 ] unsigned char 
  8643 ;;  counter         1    0[BANK0 ] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  4    0[COMMON] long 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;Total ram usage:       15 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function ___aldiv
  8668  0004                     ___aldiv:	
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8672  0004  0020               	movlb	0	; select bank0
  8673  0005  01A1               	clrf	___aldiv@sign
  8674  0006  1FF3               	btfss	___aldiv@divisor+3,7
  8675  0007  2815               	goto	l535
  8676  0008  09F0               	comf	___aldiv@divisor,f
  8677  0009  09F1               	comf	___aldiv@divisor+1,f
  8678  000A  09F2               	comf	___aldiv@divisor+2,f
  8679  000B  09F3               	comf	___aldiv@divisor+3,f
  8680  000C  0AF0               	incf	___aldiv@divisor,f
  8681  000D  1903               	skipnz
  8682  000E  0AF1               	incf	___aldiv@divisor+1,f
  8683  000F  1903               	skipnz
  8684  0010  0AF2               	incf	___aldiv@divisor+2,f
  8685  0011  1903               	skipnz
  8686  0012  0AF3               	incf	___aldiv@divisor+3,f
  8687  0013  01A1               	clrf	___aldiv@sign
  8688  0014  0AA1               	incf	___aldiv@sign,f
  8689  0015                     l535:	
  8690  0015  1FF7               	btfss	___aldiv@dividend+3,7
  8691  0016  2826               	goto	l2852
  8692  0017  09F4               	comf	___aldiv@dividend,f
  8693  0018  09F5               	comf	___aldiv@dividend+1,f
  8694  0019  09F6               	comf	___aldiv@dividend+2,f
  8695  001A  09F7               	comf	___aldiv@dividend+3,f
  8696  001B  0AF4               	incf	___aldiv@dividend,f
  8697  001C  1903               	skipnz
  8698  001D  0AF5               	incf	___aldiv@dividend+1,f
  8699  001E  1903               	skipnz
  8700  001F  0AF6               	incf	___aldiv@dividend+2,f
  8701  0020  1903               	skipnz
  8702  0021  0AF7               	incf	___aldiv@dividend+3,f
  8703  0022  3001               	movlw	1
  8704  0023  00F8               	movwf	??___aldiv
  8705  0024  0878               	movf	??___aldiv,w
  8706  0025  06A1               	xorwf	___aldiv@sign,f
  8707  0026                     l2852:	
  8708  0026  3000               	movlw	0
  8709  0027  00A5               	movwf	___aldiv@quotient+3
  8710  0028  3000               	movlw	0
  8711  0029  00A4               	movwf	___aldiv@quotient+2
  8712  002A  3000               	movlw	0
  8713  002B  00A3               	movwf	___aldiv@quotient+1
  8714  002C  3000               	movlw	0
  8715  002D  00A2               	movwf	___aldiv@quotient
  8716  002E  0873               	movf	___aldiv@divisor+3,w
  8717  002F  0472               	iorwf	___aldiv@divisor+2,w
  8718  0030  0471               	iorwf	___aldiv@divisor+1,w
  8719  0031  0470               	iorwf	___aldiv@divisor,w
  8720  0032  1903               	skipnz
  8721  0033  286F               	goto	l2874
  8722  0034  01A0               	clrf	___aldiv@counter
  8723  0035  0AA0               	incf	___aldiv@counter,f
  8724  0036                     l2860:	
  8725  0036  1BF3               	btfsc	___aldiv@divisor+3,7
  8726  0037  2844               	goto	l2862
  8727  0038  3001               	movlw	1
  8728  0039                     u2885:	
  8729  0039  35F0               	lslf	___aldiv@divisor,f
  8730  003A  0DF1               	rlf	___aldiv@divisor+1,f
  8731  003B  0DF2               	rlf	___aldiv@divisor+2,f
  8732  003C  0DF3               	rlf	___aldiv@divisor+3,f
  8733  003D  0B89               	decfsz	9,f
  8734  003E  2839               	goto	u2885
  8735  003F  3001               	movlw	1
  8736  0040  00F8               	movwf	??___aldiv
  8737  0041  0878               	movf	??___aldiv,w
  8738  0042  07A0               	addwf	___aldiv@counter,f
  8739  0043  2836               	goto	l2860
  8740  0044                     l2862:	
  8741  0044  3001               	movlw	1
  8742  0045                     u2905:	
  8743  0045  35A2               	lslf	___aldiv@quotient,f
  8744  0046  0DA3               	rlf	___aldiv@quotient+1,f
  8745  0047  0DA4               	rlf	___aldiv@quotient+2,f
  8746  0048  0DA5               	rlf	___aldiv@quotient+3,f
  8747  0049  0B89               	decfsz	9,f
  8748  004A  2845               	goto	u2905
  8749  004B  0873               	movf	___aldiv@divisor+3,w
  8750  004C  0277               	subwf	___aldiv@dividend+3,w
  8751  004D  1D03               	skipz
  8752  004E  2859               	goto	u2915
  8753  004F  0872               	movf	___aldiv@divisor+2,w
  8754  0050  0276               	subwf	___aldiv@dividend+2,w
  8755  0051  1D03               	skipz
  8756  0052  2859               	goto	u2915
  8757  0053  0871               	movf	___aldiv@divisor+1,w
  8758  0054  0275               	subwf	___aldiv@dividend+1,w
  8759  0055  1D03               	skipz
  8760  0056  2859               	goto	u2915
  8761  0057  0870               	movf	___aldiv@divisor,w
  8762  0058  0274               	subwf	___aldiv@dividend,w
  8763  0059                     u2915:	
  8764  0059  1C03               	skipc
  8765  005A  2864               	goto	l2870
  8766  005B  0870               	movf	___aldiv@divisor,w
  8767  005C  02F4               	subwf	___aldiv@dividend,f
  8768  005D  0871               	movf	___aldiv@divisor+1,w
  8769  005E  3BF5               	subwfb	___aldiv@dividend+1,f
  8770  005F  0872               	movf	___aldiv@divisor+2,w
  8771  0060  3BF6               	subwfb	___aldiv@dividend+2,f
  8772  0061  0873               	movf	___aldiv@divisor+3,w
  8773  0062  3BF7               	subwfb	___aldiv@dividend+3,f
  8774  0063  1422               	bsf	___aldiv@quotient,0
  8775  0064                     l2870:	
  8776  0064  3001               	movlw	1
  8777  0065                     u2925:	
  8778  0065  36F3               	lsrf	___aldiv@divisor+3,f
  8779  0066  0CF2               	rrf	___aldiv@divisor+2,f
  8780  0067  0CF1               	rrf	___aldiv@divisor+1,f
  8781  0068  0CF0               	rrf	___aldiv@divisor,f
  8782  0069  0B89               	decfsz	9,f
  8783  006A  2865               	goto	u2925
  8784  006B  3001               	movlw	1
  8785  006C  02A0               	subwf	___aldiv@counter,f
  8786  006D  1D03               	btfss	3,2
  8787  006E  2844               	goto	l2862
  8788  006F                     l2874:	
  8789  006F  0821               	movf	___aldiv@sign,w
  8790  0070  1903               	btfsc	3,2
  8791  0071  287D               	goto	l2878
  8792  0072  09A2               	comf	___aldiv@quotient,f
  8793  0073  09A3               	comf	___aldiv@quotient+1,f
  8794  0074  09A4               	comf	___aldiv@quotient+2,f
  8795  0075  09A5               	comf	___aldiv@quotient+3,f
  8796  0076  0AA2               	incf	___aldiv@quotient,f
  8797  0077  1903               	skipnz
  8798  0078  0AA3               	incf	___aldiv@quotient+1,f
  8799  0079  1903               	skipnz
  8800  007A  0AA4               	incf	___aldiv@quotient+2,f
  8801  007B  1903               	skipnz
  8802  007C  0AA5               	incf	___aldiv@quotient+3,f
  8803  007D                     l2878:	
  8804  007D  0825               	movf	___aldiv@quotient+3,w
  8805  007E  00F3               	movwf	?___aldiv+3
  8806  007F  0824               	movf	___aldiv@quotient+2,w
  8807  0080  00F2               	movwf	?___aldiv+2
  8808  0081  0823               	movf	___aldiv@quotient+1,w
  8809  0082  00F1               	movwf	?___aldiv+1
  8810  0083  0822               	movf	___aldiv@quotient,w
  8811  0084  00F0               	movwf	?___aldiv
  8812  0085  0008               	return
  8813  0086                     __end_of___aldiv:	
  8814                           
  8815                           	psect	text19
  8816  0A36                     __ptext19:	
  8817 ;; *************** function _SYSTEM_Initialize *****************
  8818 ;; Defined at:
  8819 ;;		line 37 in file "system.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;Total ram usage:        1 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    3
  8840 ;; This function calls:
  8841 ;;		_ADCC_Initialize
  8842 ;;		_InitCustomChars
  8843 ;;		_Init_PID
  8844 ;;		_LCD_Clear
  8845 ;;		_LCD_Init
  8846 ;;		_OSCILLATOR_Initialize
  8847 ;;		_PIN_MANAGER_Initialize
  8848 ;;		_PWM6_Initialize
  8849 ;;		_TMR0_Initialize
  8850 ;;		_TMR2_Initialize
  8851 ;; This function is called by:
  8852 ;;		_main
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           
  8857                           ;psect for function _SYSTEM_Initialize
  8858  0A36                     _SYSTEM_Initialize:	
  8859                           
  8860                           ;system.c: 39: PIN_MANAGER_Initialize();
  8861                           
  8862                           ;incstack = 0
  8863                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8864  0A36  3189  21D0  318A   	fcall	_PIN_MANAGER_Initialize
  8865                           
  8866                           ;system.c: 40: OSCILLATOR_Initialize();
  8867  0A39  3197  27EC  318A   	fcall	_OSCILLATOR_Initialize
  8868                           
  8869                           ;system.c: 41: FVRCON = 0x00;
  8870  0A3C  0032               	movlb	18	; select bank18
  8871  0A3D  018C               	clrf	12	;volatile
  8872                           
  8873                           ;system.c: 42: ADCC_Initialize();
  8874  0A3E  3188  20B2  318A   	fcall	_ADCC_Initialize
  8875                           
  8876                           ;system.c: 43: PWM6_Initialize();
  8877  0A41  3188  2011  318A   	fcall	_PWM6_Initialize
  8878                           
  8879                           ;system.c: 44: TMR0_Initialize();
  8880  0A44  3188  203B  318A   	fcall	_TMR0_Initialize
  8881                           
  8882                           ;system.c: 45: TMR2_Initialize();
  8883  0A47  3188  204A  318A   	fcall	_TMR2_Initialize
  8884                           
  8885                           ;system.c: 46: LCD_Init(0X00);
  8886  0A4A  3000               	movlw	0
  8887  0A4B  318C  247F  318A   	fcall	_LCD_Init
  8888                           
  8889                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8890  0A4E  3041               	movlw	65
  8891  0A4F  00F7               	movwf	??_SYSTEM_Initialize
  8892  0A50  30EE               	movlw	238
  8893  0A51                     u3317:	
  8894  0A51  0B89               	decfsz	9,f
  8895  0A52  2A51               	goto	u3317
  8896  0A53  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8897  0A54  2A51               	goto	u3317
  8898  0A55  3200               	nop2
  8899                           
  8900                           ;system.c: 48: LCD_Clear();
  8901  0A56  3197  27E4  318A   	fcall	_LCD_Clear
  8902                           
  8903                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8904  0A59  3021               	movlw	33
  8905  0A5A  00F7               	movwf	??_SYSTEM_Initialize
  8906  0A5B  3076               	movlw	118
  8907  0A5C                     u3327:	
  8908  0A5C  0B89               	decfsz	9,f
  8909  0A5D  2A5C               	goto	u3327
  8910  0A5E  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8911  0A5F  2A5C               	goto	u3327
  8912  0A60  3200               	nop2
  8913                           
  8914                           ;system.c: 50: InitCustomChars();
  8915  0A61  3189  2158  318A   	fcall	_InitCustomChars
  8916                           
  8917                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8918  0A64  3041               	movlw	65
  8919  0A65  00F7               	movwf	??_SYSTEM_Initialize
  8920  0A66  30EE               	movlw	238
  8921  0A67                     u3337:	
  8922  0A67  0B89               	decfsz	9,f
  8923  0A68  2A67               	goto	u3337
  8924  0A69  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8925  0A6A  2A67               	goto	u3337
  8926  0A6B  3200               	nop2
  8927                           
  8928                           ;system.c: 52: Init_PID();
  8929  0A6C  3189  217E         	fcall	_Init_PID
  8930  0A6E  0008               	return
  8931  0A6F                     __end_of_SYSTEM_Initialize:	
  8932                           
  8933                           	psect	text20
  8934  084A                     __ptext20:	
  8935 ;; *************** function _TMR2_Initialize *****************
  8936 ;; Defined at:
  8937 ;;		line 15 in file "timers.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;Total ram usage:        0 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_SYSTEM_Initialize
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _TMR2_Initialize
  8966  084A                     _TMR2_Initialize:	
  8967                           
  8968                           ;timers.c: 17: T2CON = 0x7F;
  8969                           
  8970                           ;incstack = 0
  8971                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8972  084A  307F               	movlw	127
  8973  084B  0025               	movlb	5	; select bank5
  8974  084C  008E               	movwf	14	;volatile
  8975                           
  8976                           ;timers.c: 18: T2CLKCON = 0x01;
  8977  084D  3001               	movlw	1
  8978  084E  0090               	movwf	16	;volatile
  8979                           
  8980                           ;timers.c: 19: T2HLT = 0x00;
  8981  084F  018F               	clrf	15	;volatile
  8982                           
  8983                           ;timers.c: 20: T2RST = 0x00;
  8984  0850  0191               	clrf	17	;volatile
  8985                           
  8986                           ;timers.c: 21: T2PR = 0xFF;
  8987  0851  30FF               	movlw	255
  8988  0852  008D               	movwf	13	;volatile
  8989                           
  8990                           ;timers.c: 22: T2TMR = 0x00;
  8991  0853  018C               	clrf	12	;volatile
  8992                           
  8993                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  8994  0854  002E               	movlb	14	; select bank14
  8995  0855  1090               	bcf	16,1	;volatile
  8996                           
  8997                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  8998  0856  0025               	movlb	5	; select bank5
  8999  0857  178E               	bsf	14,7	;volatile
  9000  0858  0008               	return
  9001  0859                     __end_of_TMR2_Initialize:	
  9002                           
  9003                           	psect	text21
  9004  083B                     __ptext21:	
  9005 ;; *************** function _TMR0_Initialize *****************
  9006 ;; Defined at:
  9007 ;;		line 3 in file "timers.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;Total ram usage:        0 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_SYSTEM_Initialize
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _TMR0_Initialize
  9036  083B                     _TMR0_Initialize:	
  9037                           
  9038                           ;timers.c: 5: T0CON0 = 0x10;
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in _TMR0_Initialize: [wreg]
  9042  083B  3010               	movlw	16
  9043  083C  0020               	movlb	0	; select bank0
  9044  083D  009E               	movwf	30	;volatile
  9045                           
  9046                           ;timers.c: 6: T0CON1 = 0x42;
  9047  083E  3042               	movlw	66
  9048  083F  009F               	movwf	31	;volatile
  9049                           
  9050                           ;timers.c: 7: TMR0H = 0x24;
  9051  0840  3024               	movlw	36
  9052  0841  009D               	movwf	29	;volatile
  9053                           
  9054                           ;timers.c: 8: TMR0L = 0x9F;
  9055  0842  309F               	movlw	159
  9056  0843  009C               	movwf	28	;volatile
  9057                           
  9058                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  9059  0844  002E               	movlb	14	; select bank14
  9060  0845  1696               	bsf	22,5	;volatile
  9061                           
  9062                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  9063  0846  128C               	bcf	12,5	;volatile
  9064                           
  9065                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  9066  0847  0020               	movlb	0	; select bank0
  9067  0848  179E               	bsf	30,7	;volatile
  9068  0849  0008               	return
  9069  084A                     __end_of_TMR0_Initialize:	
  9070                           
  9071                           	psect	text22
  9072  0811                     __ptext22:	
  9073 ;; *************** function _PWM6_Initialize *****************
  9074 ;; Defined at:
  9075 ;;		line 4 in file "pwm6.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        0 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_SYSTEM_Initialize
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function _PWM6_Initialize
  9104  0811                     _PWM6_Initialize:	
  9105                           
  9106                           ;pwm6.c: 6: PWM6CON = 0x80;
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9110  0811  3080               	movlw	128
  9111  0812  0027               	movlb	7	; select bank7
  9112  0813  008E               	movwf	14	;volatile
  9113                           
  9114                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9115  0814  30FF               	movlw	255
  9116  0815  008D               	movwf	13	;volatile
  9117                           
  9118                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9119  0816  30C0               	movlw	192
  9120  0817  008C               	movwf	12	;volatile
  9121                           
  9122                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9123  0818  0024               	movlb	4	; select bank4
  9124  0819  081F               	movf	31,w	;volatile
  9125  081A  39F3               	andlw	-13
  9126  081B  3804               	iorlw	4
  9127  081C  009F               	movwf	31	;volatile
  9128  081D  0008               	return
  9129  081E                     __end_of_PWM6_Initialize:	
  9130                           
  9131                           	psect	text23
  9132  09D0                     __ptext23:	
  9133 ;; *************** function _PIN_MANAGER_Initialize *****************
  9134 ;; Defined at:
  9135 ;;		line 5 in file "pin_manager.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  state           1    0[COMMON] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;Total ram usage:        1 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_SYSTEM_Initialize
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           
  9163                           ;psect for function _PIN_MANAGER_Initialize
  9164  09D0                     _PIN_MANAGER_Initialize:	
  9165                           
  9166                           ;pin_manager.c: 7: LATA = 0x00;
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9170  09D0  0020               	movlb	0	; select bank0
  9171  09D1  0196               	clrf	22	;volatile
  9172                           
  9173                           ;pin_manager.c: 8: LATB = 0x0;
  9174  09D2  0197               	clrf	23	;volatile
  9175                           
  9176                           ;pin_manager.c: 9: LATC = 0x0;
  9177  09D3  0198               	clrf	24	;volatile
  9178                           
  9179                           ;pin_manager.c: 11: WPUA = 0x18;
  9180  09D4  3018               	movlw	24
  9181  09D5  003E               	movlb	30	; select bank30
  9182  09D6  00B9               	movwf	57	;volatile
  9183                           
  9184                           ;pin_manager.c: 12: WPUB = 0x00;
  9185  09D7  01C4               	clrf	68	;volatile
  9186                           
  9187                           ;pin_manager.c: 13: WPUC = 0x00;
  9188  09D8  01CF               	clrf	79	;volatile
  9189                           
  9190                           ;pin_manager.c: 14: WPUE = 0x8;
  9191  09D9  3008               	movlw	8
  9192  09DA  00E5               	movwf	101	;volatile
  9193                           
  9194                           ;pin_manager.c: 16: TRISA = 0x1C;
  9195  09DB  301C               	movlw	28
  9196  09DC  0020               	movlb	0	; select bank0
  9197  09DD  0091               	movwf	17	;volatile
  9198                           
  9199                           ;pin_manager.c: 17: TRISB = 0x00;
  9200  09DE  0192               	clrf	18	;volatile
  9201                           
  9202                           ;pin_manager.c: 18: TRISC = 0x10;
  9203  09DF  3010               	movlw	16
  9204  09E0  0093               	movwf	19	;volatile
  9205                           
  9206                           ;pin_manager.c: 20: ANSELA = 0x04;
  9207  09E1  3004               	movlw	4
  9208  09E2  003E               	movlb	30	; select bank30
  9209  09E3  00B8               	movwf	56	;volatile
  9210                           
  9211                           ;pin_manager.c: 21: ANSELB = 0x00;
  9212  09E4  01C3               	clrf	67	;volatile
  9213                           
  9214                           ;pin_manager.c: 22: ANSELC = 0x00;
  9215  09E5  01CE               	clrf	78	;volatile
  9216                           
  9217                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9218  09E6  002E               	movlb	14	; select bank14
  9219  09E7  1216               	bcf	22,4	;volatile
  9220                           
  9221                           ;pin_manager.c: 25: bool state = GIE;
  9222  09E8  3000               	movlw	0
  9223  09E9  1B8B               	btfsc	11,7	;volatile
  9224  09EA  3001               	movlw	1
  9225  09EB  00F0               	movwf	PIN_MANAGER_Initialize@state
  9226                           
  9227                           ;pin_manager.c: 26: GIE = 0;
  9228  09EC  138B               	bcf	11,7	;volatile
  9229                           
  9230                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9231  09ED  3055               	movlw	85
  9232  09EE  003D               	movlb	29	; select bank29
  9233  09EF  008F               	movwf	15	;volsfr
  9234                           
  9235                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9236  09F0  30AA               	movlw	170
  9237  09F1  008F               	movwf	15	;volsfr
  9238                           
  9239                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9240  09F2  100F               	bcf	15,0	;volsfr
  9241                           
  9242                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9243  09F3  300E               	movlw	14
  9244  09F4  003E               	movlb	30	; select bank30
  9245  09F5  0091               	movwf	17	;volatile
  9246                           
  9247                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9248  09F6  3055               	movlw	85
  9249  09F7  003D               	movlb	29	; select bank29
  9250  09F8  008F               	movwf	15	;volsfr
  9251                           
  9252                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9253  09F9  30AA               	movlw	170
  9254  09FA  008F               	movwf	15	;volsfr
  9255                           
  9256                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9257  09FB  140F               	bsf	15,0	;volsfr
  9258                           
  9259                           ;pin_manager.c: 39: GIE = state;
  9260  09FC  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9261  09FD  2A00               	goto	u2630
  9262  09FE  178B               	bsf	11,7	;volatile
  9263  09FF  0008               	return
  9264  0A00                     u2630:	
  9265  0A00  138B               	bcf	11,7	;volatile
  9266  0A01  0008               	return
  9267  0A02                     __end_of_PIN_MANAGER_Initialize:	
  9268                           
  9269                           	psect	text24
  9270  17EC                     __ptext24:	
  9271 ;; *************** function _OSCILLATOR_Initialize *****************
  9272 ;; Defined at:
  9273 ;;		line 55 in file "system.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_SYSTEM_Initialize
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           
  9301                           ;psect for function _OSCILLATOR_Initialize
  9302  17EC                     _OSCILLATOR_Initialize:	
  9303                           
  9304                           ;system.c: 57: OSCCON1 = 0x60;
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9308  17EC  3060               	movlw	96
  9309  17ED  0031               	movlb	17	; select bank17
  9310  17EE  008D               	movwf	13	;volatile
  9311                           
  9312                           ;system.c: 58: OSCCON3 = 0x00;
  9313  17EF  018F               	clrf	15	;volatile
  9314                           
  9315                           ;system.c: 59: OSCEN = 0x00;
  9316  17F0  0191               	clrf	17	;volatile
  9317                           
  9318                           ;system.c: 60: OSCFRQ = 0x00;
  9319  17F1  0193               	clrf	19	;volatile
  9320                           
  9321                           ;system.c: 61: OSCTUNE = 0x00;
  9322  17F2  0192               	clrf	18	;volatile
  9323  17F3  0008               	return
  9324  17F4                     __end_of_OSCILLATOR_Initialize:	
  9325                           
  9326                           	psect	text25
  9327  0C7F                     __ptext25:	
  9328 ;; *************** function _LCD_Init *****************
  9329 ;; Defined at:
  9330 ;;		line 154 in file "lcd.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  style           1    wreg     unsigned char 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  style           1    3[COMMON] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0, pclath, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        2 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    2
  9351 ;; This function calls:
  9352 ;;		_LCD_Cmd
  9353 ;;		_LCD_Port
  9354 ;; This function is called by:
  9355 ;;		_SYSTEM_Initialize
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           
  9360                           ;psect for function _LCD_Init
  9361  0C7F                     _LCD_Init:	
  9362                           
  9363                           ;incstack = 0
  9364                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9365                           ;LCD_Init@style stored from wreg
  9366  0C7F  00F3               	movwf	LCD_Init@style
  9367                           
  9368                           ;lcd.c: 156: LCD_Port(0x00);
  9369  0C80  3000               	movlw	0
  9370  0C81  3188  2082  318C   	fcall	_LCD_Port
  9371                           
  9372                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9373  0C84  3021               	movlw	33
  9374  0C85  00F2               	movwf	??_LCD_Init
  9375  0C86  3076               	movlw	118
  9376  0C87                     u3347:	
  9377  0C87  0B89               	decfsz	9,f
  9378  0C88  2C87               	goto	u3347
  9379  0C89  0BF2               	decfsz	??_LCD_Init,f
  9380  0C8A  2C87               	goto	u3347
  9381  0C8B  3200               	nop2
  9382                           
  9383                           ;lcd.c: 160: LCD_Cmd(0x03);
  9384  0C8C  3003               	movlw	3
  9385  0C8D  3188  202C  318C   	fcall	_LCD_Cmd
  9386                           
  9387                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9388  0C90  3004               	movlw	4
  9389  0C91  00F2               	movwf	??_LCD_Init
  9390  0C92  303E               	movlw	62
  9391  0C93                     u3357:	
  9392  0C93  0B89               	decfsz	9,f
  9393  0C94  2C93               	goto	u3357
  9394  0C95  0BF2               	decfsz	??_LCD_Init,f
  9395  0C96  2C93               	goto	u3357
  9396                           
  9397                           ;lcd.c: 164: LCD_Cmd(0x03);
  9398  0C97  3003               	movlw	3
  9399  0C98  3188  202C  318C   	fcall	_LCD_Cmd
  9400                           
  9401                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9402  0C9B  300A               	movlw	10
  9403  0C9C                     u3367:	
  9404  0C9C  0B89               	decfsz	9,f
  9405  0C9D  2C9C               	goto	u3367
  9406                           
  9407                           ;lcd.c: 168: LCD_Cmd(0x03);
  9408  0C9E  3003               	movlw	3
  9409  0C9F  3188  202C  318C   	fcall	_LCD_Cmd
  9410                           
  9411                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9412  0CA2  300A               	movlw	10
  9413  0CA3                     u3377:	
  9414  0CA3  0B89               	decfsz	9,f
  9415  0CA4  2CA3               	goto	u3377
  9416                           
  9417                           ;lcd.c: 172: LCD_Cmd(0x02);
  9418  0CA5  3002               	movlw	2
  9419  0CA6  3188  202C  318C   	fcall	_LCD_Cmd
  9420                           
  9421                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9422  0CA9  300A               	movlw	10
  9423  0CAA                     u3387:	
  9424  0CAA  0B89               	decfsz	9,f
  9425  0CAB  2CAA               	goto	u3387
  9426                           
  9427                           ;lcd.c: 176: LCD_Cmd(0x2);
  9428  0CAC  3002               	movlw	2
  9429  0CAD  3188  202C  318C   	fcall	_LCD_Cmd
  9430                           
  9431                           ;lcd.c: 178: LCD_Cmd(0x8);
  9432  0CB0  3008               	movlw	8
  9433  0CB1  3188  202C  318C   	fcall	_LCD_Cmd
  9434                           
  9435                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9436  0CB4  300A               	movlw	10
  9437  0CB5                     u3397:	
  9438  0CB5  0B89               	decfsz	9,f
  9439  0CB6  2CB5               	goto	u3397
  9440                           
  9441                           ;lcd.c: 182: LCD_Cmd(0x0);
  9442  0CB7  3000               	movlw	0
  9443  0CB8  3188  202C  318C   	fcall	_LCD_Cmd
  9444                           
  9445                           ;lcd.c: 184: LCD_Cmd(0x8);
  9446  0CBB  3008               	movlw	8
  9447  0CBC  3188  202C  318C   	fcall	_LCD_Cmd
  9448                           
  9449                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9450  0CBF  300A               	movlw	10
  9451  0CC0                     u3407:	
  9452  0CC0  0B89               	decfsz	9,f
  9453  0CC1  2CC0               	goto	u3407
  9454                           
  9455                           ;lcd.c: 188: LCD_Cmd(0x0);
  9456  0CC2  3000               	movlw	0
  9457  0CC3  3188  202C  318C   	fcall	_LCD_Cmd
  9458                           
  9459                           ;lcd.c: 190: LCD_Cmd(0x1);
  9460  0CC6  3001               	movlw	1
  9461  0CC7  3188  202C  318C   	fcall	_LCD_Cmd
  9462                           
  9463                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9464  0CCA  30FA               	movlw	250
  9465  0CCB                     u3417:	
  9466  0CCB  3200               	nop2
  9467  0CCC  0B89               	decfsz	9,f
  9468  0CCD  2CCB               	goto	u3417
  9469                           
  9470                           ;lcd.c: 194: LCD_Cmd(0x0);
  9471  0CCE  3000               	movlw	0
  9472  0CCF  3188  202C  318C   	fcall	_LCD_Cmd
  9473                           
  9474                           ;lcd.c: 196: LCD_Cmd(0x6);
  9475  0CD2  3006               	movlw	6
  9476  0CD3  3188  202C  318C   	fcall	_LCD_Cmd
  9477                           
  9478                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9479  0CD6  300A               	movlw	10
  9480  0CD7                     u3427:	
  9481  0CD7  0B89               	decfsz	9,f
  9482  0CD8  2CD7               	goto	u3427
  9483                           
  9484                           ;lcd.c: 200: LCD_Cmd(0x0);
  9485  0CD9  3000               	movlw	0
  9486  0CDA  3188  202C  318C   	fcall	_LCD_Cmd
  9487                           
  9488                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9489  0CDD  0873               	movf	LCD_Init@style,w
  9490  0CDE  380C               	iorlw	12
  9491  0CDF  3188  202C  318C   	fcall	_LCD_Cmd
  9492                           
  9493                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9494  0CE2  300A               	movlw	10
  9495  0CE3                     u3437:	
  9496  0CE3  0B89               	decfsz	9,f
  9497  0CE4  2CE3               	goto	u3437
  9498  0CE5  0008               	return
  9499  0CE6                     __end_of_LCD_Init:	
  9500                           
  9501                           	psect	text26
  9502  17E4                     __ptext26:	
  9503 ;; *************** function _LCD_Clear *****************
  9504 ;; Defined at:
  9505 ;;		line 75 in file "lcd.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;		None
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, pclath, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;Total ram usage:        0 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    2
  9526 ;; This function calls:
  9527 ;;		_LCD_Cmd
  9528 ;; This function is called by:
  9529 ;;		_tempSetpoint
  9530 ;;		_readButtons
  9531 ;;		_SYSTEM_Initialize
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function _LCD_Clear
  9537  17E4                     _LCD_Clear:	
  9538                           
  9539                           ;lcd.c: 77: LCD_Cmd(0);
  9540                           
  9541                           ;incstack = 0
  9542                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9543  17E4  3000               	movlw	0
  9544  17E5  3188  202C  3197   	fcall	_LCD_Cmd
  9545                           
  9546                           ;lcd.c: 78: LCD_Cmd(1);
  9547  17E8  3001               	movlw	1
  9548  17E9  3188  202C         	fcall	_LCD_Cmd
  9549  17EB  0008               	return
  9550  17EC                     __end_of_LCD_Clear:	
  9551                           
  9552                           	psect	text27
  9553  097E                     __ptext27:	
  9554 ;; *************** function _Init_PID *****************
  9555 ;; Defined at:
  9556 ;;		line 12 in file "pid.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;		None
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;		None
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;Total ram usage:        0 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_SYSTEM_Initialize
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _Init_PID
  9585  097E                     _Init_PID:	
  9586                           
  9587                           ;pid.c: 14: PID_Kp = 50;
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _Init_PID: [wreg+status,2]
  9591  097E  3000               	movlw	0
  9592  097F  0021               	movlb	1	; select bank1
  9593  0980  00D9               	movwf	_PID_Kp^(0+128)
  9594  0981  3048               	movlw	72
  9595  0982  00DA               	movwf	(_PID_Kp+1)^(0+128)
  9596  0983  3042               	movlw	66
  9597  0984  00DB               	movwf	(_PID_Kp+2)^(0+128)
  9598                           
  9599                           ;pid.c: 15: PID_Ki = 1;
  9600  0985  3000               	movlw	0
  9601  0986  00D6               	movwf	_PID_Ki^(0+128)
  9602  0987  3080               	movlw	128
  9603  0988  00D7               	movwf	(_PID_Ki+1)^(0+128)
  9604  0989  303F               	movlw	63
  9605  098A  00D8               	movwf	(_PID_Ki+2)^(0+128)
  9606                           
  9607                           ;pid.c: 16: PID_Kd = 300;
  9608  098B  3000               	movlw	0
  9609  098C  00D3               	movwf	_PID_Kd^(0+128)
  9610  098D  3096               	movlw	150
  9611  098E  00D4               	movwf	(_PID_Kd+1)^(0+128)
  9612  098F  3043               	movlw	67
  9613  0990  00D5               	movwf	(_PID_Kd+2)^(0+128)
  9614                           
  9615                           ;pid.c: 17: pidMinOutput = 0;
  9616  0991  0020               	movlb	0	; select bank0
  9617  0992  01EB               	clrf	_pidMinOutput
  9618  0993  01EC               	clrf	_pidMinOutput+1
  9619                           
  9620                           ;pid.c: 18: pidMaxOutput = 1023;
  9621  0994  30FF               	movlw	255
  9622  0995  0021               	movlb	1	; select bank1
  9623  0996  00DE               	movwf	_pidMaxOutput^(0+128)
  9624  0997  3003               	movlw	3
  9625  0998  00DF               	movwf	(_pidMaxOutput^(0+128)+1)
  9626                           
  9627                           ;pid.c: 19: pidIntegrated = 0;
  9628  0999  3000               	movlw	0
  9629  099A  00D0               	movwf	_pidIntegrated^(0+128)
  9630  099B  3000               	movlw	0
  9631  099C  00D1               	movwf	(_pidIntegrated+1)^(0+128)
  9632  099D  3000               	movlw	0
  9633  099E  00D2               	movwf	(_pidIntegrated+2)^(0+128)
  9634                           
  9635                           ;pid.c: 20: pidPrevInput = 0;
  9636  099F  3000               	movlw	0
  9637  09A0  00CD               	movwf	_pidPrevInput^(0+128)
  9638  09A1  3000               	movlw	0
  9639  09A2  00CE               	movwf	(_pidPrevInput+1)^(0+128)
  9640  09A3  3000               	movlw	0
  9641  09A4  00CF               	movwf	(_pidPrevInput+2)^(0+128)
  9642  09A5  0008               	return
  9643  09A6                     __end_of_Init_PID:	
  9644                           
  9645                           	psect	text28
  9646  0958                     __ptext28:	
  9647 ;; *************** function _InitCustomChars *****************
  9648 ;; Defined at:
  9649 ;;		line 29 in file "lcd.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  i               1    6[COMMON] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;Total ram usage:        2 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    2
  9670 ;; This function calls:
  9671 ;;		_LCD_Cmd
  9672 ;;		_LCD_Write_Char
  9673 ;; This function is called by:
  9674 ;;		_SYSTEM_Initialize
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _InitCustomChars
  9680  0958                     _InitCustomChars:	
  9681                           
  9682                           ;lcd.c: 31: uint8_t i;
  9683                           ;lcd.c: 32: LCD_Cmd(0x04);
  9684                           
  9685                           ;incstack = 0
  9686                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9687  0958  3004               	movlw	4
  9688  0959  3188  202C  3189   	fcall	_LCD_Cmd
  9689                           
  9690                           ;lcd.c: 33: LCD_Cmd(0x00);
  9691  095C  3000               	movlw	0
  9692  095D  3188  202C  3189   	fcall	_LCD_Cmd
  9693                           
  9694                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9695  0960  01F6               	clrf	InitCustomChars@i
  9696  0961  3018               	movlw	24
  9697  0962  0276               	subwf	InitCustomChars@i,w
  9698  0963  1803               	btfsc	3,0
  9699  0964  2976               	goto	l2492
  9700  0965                     l2486:	
  9701                           
  9702                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9703  0965  0876               	movf	InitCustomChars@i,w
  9704  0966  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9705  0967  0086               	movwf	6
  9706  0968  3001               	movlw	1	; select bank2/3
  9707  0969  0087               	movwf	7
  9708  096A  0801               	movf	1,w
  9709  096B  3189  21A6  3189   	fcall	_LCD_Write_Char
  9710  096E  3001               	movlw	1
  9711  096F  00F5               	movwf	??_InitCustomChars
  9712  0970  0875               	movf	??_InitCustomChars,w
  9713  0971  07F6               	addwf	InitCustomChars@i,f
  9714  0972  3018               	movlw	24
  9715  0973  0276               	subwf	InitCustomChars@i,w
  9716  0974  1C03               	skipc
  9717  0975  2965               	goto	l2486
  9718  0976                     l2492:	
  9719                           
  9720                           ;lcd.c: 36: LCD_Cmd(0);
  9721  0976  3000               	movlw	0
  9722  0977  3188  202C  3189   	fcall	_LCD_Cmd
  9723                           
  9724                           ;lcd.c: 37: LCD_Cmd(2);
  9725  097A  3002               	movlw	2
  9726  097B  3188  202C         	fcall	_LCD_Cmd
  9727  097D  0008               	return
  9728  097E                     __end_of_InitCustomChars:	
  9729                           
  9730                           	psect	text29
  9731  09A6                     __ptext29:	
  9732 ;; *************** function _LCD_Write_Char *****************
  9733 ;; Defined at:
  9734 ;;		line 223 in file "lcd.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  a               1    wreg     const unsigned char 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  a               1    4[COMMON] const unsigned char 
  9739 ;;  y               1    3[COMMON] unsigned char 
  9740 ;;  temp            1    2[COMMON] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0, pclath, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;Total ram usage:        4 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    1
  9757 ;; This function calls:
  9758 ;;		_LCD_Port
  9759 ;; This function is called by:
  9760 ;;		_main
  9761 ;;		_tempSetpoint
  9762 ;;		_readButtons
  9763 ;;		_InitCustomChars
  9764 ;;		_LCD_Write_String
  9765 ;;		_LCD_Write_Int
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           
  9770                           ;psect for function _LCD_Write_Char
  9771  09A6                     _LCD_Write_Char:	
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9775                           ;LCD_Write_Char@a stored from wreg
  9776  09A6  00F4               	movwf	LCD_Write_Char@a
  9777                           
  9778                           ;lcd.c: 225: char temp,y;
  9779                           ;lcd.c: 226: temp = a&0x0F;
  9780  09A7  0874               	movf	LCD_Write_Char@a,w
  9781  09A8  390F               	andlw	15
  9782  09A9  00F1               	movwf	??_LCD_Write_Char
  9783  09AA  0871               	movf	??_LCD_Write_Char,w
  9784  09AB  00F2               	movwf	LCD_Write_Char@temp
  9785                           
  9786                           ;lcd.c: 227: y = a&0xF0;
  9787  09AC  0874               	movf	LCD_Write_Char@a,w
  9788  09AD  39F0               	andlw	240
  9789  09AE  00F1               	movwf	??_LCD_Write_Char
  9790  09AF  0871               	movf	??_LCD_Write_Char,w
  9791  09B0  00F3               	movwf	LCD_Write_Char@y
  9792                           
  9793                           ;lcd.c: 228: RB0 = 1;
  9794  09B1  0020               	movlb	0	; select bank0
  9795  09B2  140D               	bsf	13,0	;volatile
  9796                           
  9797                           ;lcd.c: 229: LCD_Port(y>>4);
  9798  09B3  0873               	movf	LCD_Write_Char@y,w
  9799  09B4  00F1               	movwf	??_LCD_Write_Char
  9800  09B5  3004               	movlw	4
  9801  09B6                     u1685:	
  9802  09B6  36F1               	lsrf	??_LCD_Write_Char,f
  9803  09B7  0B89               	decfsz	9,f
  9804  09B8  29B6               	goto	u1685
  9805  09B9  0871               	movf	??_LCD_Write_Char,w
  9806  09BA  3188  2082  3189   	fcall	_LCD_Port
  9807                           
  9808                           ;lcd.c: 230: RB1 = 1;
  9809  09BD  0020               	movlb	0	; select bank0
  9810  09BE  148D               	bsf	13,1	;volatile
  9811                           
  9812                           ;lcd.c: 231: RB1 = 0;
  9813  09BF  108D               	bcf	13,1	;volatile
  9814                           
  9815                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9816  09C0  3003               	movlw	3
  9817  09C1                     u3447:	
  9818  09C1  0B89               	decfsz	9,f
  9819  09C2  29C1               	goto	u3447
  9820  09C3  0000               	nop
  9821                           
  9822                           ;lcd.c: 233: LCD_Port(temp);
  9823  09C4  0872               	movf	LCD_Write_Char@temp,w
  9824  09C5  3188  2082  3189   	fcall	_LCD_Port
  9825                           
  9826                           ;lcd.c: 234: RB1 = 1;
  9827  09C8  0020               	movlb	0	; select bank0
  9828  09C9  148D               	bsf	13,1	;volatile
  9829                           
  9830                           ;lcd.c: 235: RB1 = 0;
  9831  09CA  108D               	bcf	13,1	;volatile
  9832                           
  9833                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9834  09CB  3003               	movlw	3
  9835  09CC                     u3457:	
  9836  09CC  0B89               	decfsz	9,f
  9837  09CD  29CC               	goto	u3457
  9838  09CE  0000               	nop
  9839  09CF  0008               	return
  9840  09D0                     __end_of_LCD_Write_Char:	
  9841                           
  9842                           	psect	text30
  9843  082C                     __ptext30:	
  9844 ;; *************** function _LCD_Cmd *****************
  9845 ;; Defined at:
  9846 ;;		line 65 in file "lcd.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  a               1    wreg     unsigned char 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;  a               1    1[COMMON] unsigned char 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2, status,0, pclath, cstack
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;Total ram usage:        1 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    1
  9867 ;; This function calls:
  9868 ;;		_LCD_Port
  9869 ;; This function is called by:
  9870 ;;		_InitCustomChars
  9871 ;;		_LCD_Clear
  9872 ;;		_LCD_Set_Cursor
  9873 ;;		_LCD_Init
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           
  9878                           ;psect for function _LCD_Cmd
  9879  082C                     _LCD_Cmd:	
  9880                           
  9881                           ;incstack = 0
  9882                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9883                           ;LCD_Cmd@a stored from wreg
  9884  082C  00F1               	movwf	LCD_Cmd@a
  9885                           
  9886                           ;lcd.c: 67: RB0 = 0;
  9887  082D  0020               	movlb	0	; select bank0
  9888  082E  100D               	bcf	13,0	;volatile
  9889                           
  9890                           ;lcd.c: 68: LCD_Port(a);
  9891  082F  0871               	movf	LCD_Cmd@a,w
  9892  0830  3188  2082  3188   	fcall	_LCD_Port
  9893                           
  9894                           ;lcd.c: 69: RB1 = 1;
  9895  0833  0020               	movlb	0	; select bank0
  9896  0834  148D               	bsf	13,1	;volatile
  9897                           
  9898                           ;lcd.c: 70: RB1 = 0;
  9899  0835  108D               	bcf	13,1	;volatile
  9900                           
  9901                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9902  0836  30C8               	movlw	200
  9903  0837                     u3467:	
  9904  0837  3200               	nop2
  9905  0838  0B89               	decfsz	9,f
  9906  0839  2837               	goto	u3467
  9907  083A  0008               	return
  9908  083B                     __end_of_LCD_Cmd:	
  9909                           
  9910                           	psect	text31
  9911  0882                     __ptext31:	
  9912 ;; *************** function _LCD_Port *****************
  9913 ;; Defined at:
  9914 ;;		line 41 in file "lcd.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  a               1    wreg     unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  a               1    0[COMMON] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        1 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_LCD_Cmd
  9938 ;;		_LCD_Init
  9939 ;;		_LCD_Write_Char
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _LCD_Port
  9945  0882                     _LCD_Port:	
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _LCD_Port: [wreg]
  9949                           ;LCD_Port@a stored from wreg
  9950  0882  00F0               	movwf	LCD_Port@a
  9951                           
  9952                           ;lcd.c: 43: if(a & 1)
  9953  0883  1C70               	btfss	LCD_Port@a,0
  9954  0884  2888               	goto	l192
  9955                           
  9956                           ;lcd.c: 44: RB2 = 1;
  9957  0885  0020               	movlb	0	; select bank0
  9958  0886  150D               	bsf	13,2	;volatile
  9959  0887  288A               	goto	l2020
  9960  0888                     l192:	
  9961                           
  9962                           ;lcd.c: 45: else
  9963                           ;lcd.c: 46: RB2 = 0;
  9964  0888  0020               	movlb	0	; select bank0
  9965  0889  110D               	bcf	13,2	;volatile
  9966  088A                     l2020:	
  9967                           
  9968                           ;lcd.c: 48: if(a & 2)
  9969  088A  1CF0               	btfss	LCD_Port@a,1
  9970  088B  288E               	goto	l194
  9971                           
  9972                           ;lcd.c: 49: RB3 = 1;
  9973  088C  158D               	bsf	13,3	;volatile
  9974  088D  288F               	goto	l2024
  9975  088E                     l194:	
  9976                           
  9977                           ;lcd.c: 50: else
  9978                           ;lcd.c: 51: RB3 = 0;
  9979  088E  118D               	bcf	13,3	;volatile
  9980  088F                     l2024:	
  9981                           
  9982                           ;lcd.c: 53: if(a & 4)
  9983  088F  1D70               	btfss	LCD_Port@a,2
  9984  0890  2893               	goto	l196
  9985                           
  9986                           ;lcd.c: 54: RB4 = 1;
  9987  0891  160D               	bsf	13,4	;volatile
  9988  0892  2894               	goto	l2028
  9989  0893                     l196:	
  9990                           
  9991                           ;lcd.c: 55: else
  9992                           ;lcd.c: 56: RB4 = 0;
  9993  0893  120D               	bcf	13,4	;volatile
  9994  0894                     l2028:	
  9995                           
  9996                           ;lcd.c: 58: if(a & 8)
  9997  0894  1DF0               	btfss	LCD_Port@a,3
  9998  0895  2898               	goto	l198
  9999                           
 10000                           ;lcd.c: 59: RB5 = 1;
 10001  0896  168D               	bsf	13,5	;volatile
 10002  0897  0008               	return
 10003  0898                     l198:	
 10004                           
 10005                           ;lcd.c: 60: else
 10006                           ;lcd.c: 61: RB5 = 0;
 10007  0898  128D               	bcf	13,5	;volatile
 10008  0899  0008               	return
 10009  089A                     __end_of_LCD_Port:	
 10010                           
 10011                           	psect	text32
 10012  08B2                     __ptext32:	
 10013 ;; *************** function _ADCC_Initialize *****************
 10014 ;; Defined at:
 10015 ;;		line 5 in file "adcc.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_SYSTEM_Initialize
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           
 10043                           ;psect for function _ADCC_Initialize
 10044  08B2                     _ADCC_Initialize:	
 10045                           
 10046                           ;adcc.c: 8: ADCON1 = 0x00;
 10047                           
 10048                           ;incstack = 0
 10049                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10050  08B2  0021               	movlb	1	; select bank1
 10051  08B3  0194               	clrf	20	;volatile
 10052                           
 10053                           ;adcc.c: 10: ADCON2 = 0x00;
 10054  08B4  0195               	clrf	21	;volatile
 10055                           
 10056                           ;adcc.c: 12: ADCON3 = 0x00;
 10057  08B5  0196               	clrf	22	;volatile
 10058                           
 10059                           ;adcc.c: 14: ADACT = 0x00;
 10060  08B6  0199               	clrf	25	;volatile
 10061                           
 10062                           ;adcc.c: 16: ADSTAT = 0x00;
 10063  08B7  0197               	clrf	23	;volatile
 10064                           
 10065                           ;adcc.c: 18: ADCLK = 0x0F;
 10066  08B8  300F               	movlw	15
 10067  08B9  0098               	movwf	24	;volatile
 10068                           
 10069                           ;adcc.c: 21: ADREF = 0x00;
 10070  08BA  019A               	clrf	26	;volatile
 10071                           
 10072                           ;adcc.c: 23: ADCAP = 0x00;
 10073  08BB  019B               	clrf	27	;volatile
 10074                           
 10075                           ;adcc.c: 25: ADPRE = 0x00;
 10076  08BC  019C               	clrf	28	;volatile
 10077                           
 10078                           ;adcc.c: 27: ADACQ = 0x00;
 10079  08BD  019D               	clrf	29	;volatile
 10080                           
 10081                           ;adcc.c: 29: ADPCH = 0x00;
 10082  08BE  019E               	clrf	30	;volatile
 10083                           
 10084                           ;adcc.c: 31: ADRPT = 0x00;
 10085  08BF  0022               	movlb	2	; select bank2
 10086  08C0  018D               	clrf	13	;volatile
 10087                           
 10088                           ;adcc.c: 33: ADLTHL = 0x00;
 10089  08C1  018E               	clrf	14	;volatile
 10090                           
 10091                           ;adcc.c: 35: ADLTHH = 0x00;
 10092  08C2  018F               	clrf	15	;volatile
 10093                           
 10094                           ;adcc.c: 37: ADUTHL = 0x00;
 10095  08C3  0190               	clrf	16	;volatile
 10096                           
 10097                           ;adcc.c: 39: ADUTHH = 0x00;
 10098  08C4  0191               	clrf	17	;volatile
 10099                           
 10100                           ;adcc.c: 41: ADSTPTL = 0x00;
 10101  08C5  0192               	clrf	18	;volatile
 10102                           
 10103                           ;adcc.c: 43: ADSTPTH = 0x00;
 10104  08C6  0193               	clrf	19	;volatile
 10105                           
 10106                           ;adcc.c: 46: ADCON0 = 0x84;
 10107  08C7  3084               	movlw	132
 10108  08C8  0021               	movlb	1	; select bank1
 10109  08C9  0093               	movwf	19	;volatile
 10110  08CA  0008               	return
 10111  08CB                     __end_of_ADCC_Initialize:	
 10112                           
 10113                           	psect	text33
 10114  086C                     __ptext33:	
 10115 ;; *************** function _PWM6_LoadDutyValue *****************
 10116 ;; Defined at:
 10117 ;;		line 15 in file "pwm6.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  dutyValue       2    0[COMMON] unsigned int 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;		None
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  1    wreg      void 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2, status,0
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;Total ram usage:        4 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           
 10145                           ;psect for function _PWM6_LoadDutyValue
 10146  086C                     _PWM6_LoadDutyValue:	
 10147                           
 10148                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10149                           
 10150                           ;incstack = 0
 10151                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10152  086C  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10153  086D  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10154  086E  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10155  086F  00F2               	movwf	??_PWM6_LoadDutyValue
 10156  0870  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10157  0871  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10158  0872  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10159  0873  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10160  0874  0872               	movf	??_PWM6_LoadDutyValue,w
 10161  0875  0027               	movlb	7	; select bank7
 10162  0876  008D               	movwf	13	;volatile
 10163                           
 10164                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10165  0877  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10166  0878  3903               	andlw	3
 10167  0879  00F2               	movwf	??_PWM6_LoadDutyValue
 10168  087A  3005               	movlw	5
 10169  087B                     u2795:	
 10170  087B  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10171  087C  3EFF               	addlw	-1
 10172  087D  1D03               	skipz
 10173  087E  287B               	goto	u2795
 10174  087F  3572               	lslf	??_PWM6_LoadDutyValue,w
 10175  0880  008C               	movwf	12	;volatile
 10176  0881  0008               	return
 10177  0882                     __end_of_PWM6_LoadDutyValue:	
 10178                           
 10179                           	psect	text34
 10180  0305                     __ptext34:	
 10181 ;; *************** function _PID_Calculate *****************
 10182 ;; Defined at:
 10183 ;;		line 24 in file "pid.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  setpoint        2   38[BANK0 ] const int 
 10186 ;;  temp            3   40[BANK0 ] float 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  error           3   58[BANK0 ] float 
 10189 ;;  Result          3   55[BANK0 ] float 
 10190 ;;  pidPrevError    3   52[BANK0 ] float 
 10191 ;;  derivativeVa    3   49[BANK0 ] float 
 10192 ;;  errorValue      3   43[BANK0 ] float 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  3   38[BANK0 ] float 
 10195 ;; Registers used:
 10196 ;;		wreg, status,2, status,0, pclath, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10202 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;Total ram usage:       23 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:    2
 10209 ;; This function calls:
 10210 ;;		___awtoft
 10211 ;;		___ftadd
 10212 ;;		___ftge
 10213 ;;		___ftmul
 10214 ;;		___ftneg
 10215 ;; This function is called by:
 10216 ;;		_main
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           
 10221                           ;psect for function _PID_Calculate
 10222  0305                     _PID_Calculate:	
 10223                           
 10224                           ;pid.c: 26: float error, errorValue, derivativeValue = 0, pidPrevError = 0, Result;
 10225                           
 10226                           ;incstack = 0
 10227                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10228  0305  3000               	movlw	0
 10229  0306  0020               	movlb	0	; select bank0
 10230  0307  00D1               	movwf	PID_Calculate@derivativeValue
 10231  0308  3000               	movlw	0
 10232  0309  00D2               	movwf	PID_Calculate@derivativeValue+1
 10233  030A  3000               	movlw	0
 10234  030B  00D3               	movwf	PID_Calculate@derivativeValue+2
 10235  030C  3000               	movlw	0
 10236  030D  00D4               	movwf	PID_Calculate@pidPrevError
 10237  030E  3000               	movlw	0
 10238  030F  00D5               	movwf	PID_Calculate@pidPrevError+1
 10239  0310  3000               	movlw	0
 10240  0311  00D6               	movwf	PID_Calculate@pidPrevError+2
 10241                           
 10242                           ;pid.c: 29: error = setpoint - temp;
 10243  0312  0848               	movf	PID_Calculate@temp,w
 10244  0313  00F0               	movwf	___ftneg@f1
 10245  0314  0849               	movf	PID_Calculate@temp+1,w
 10246  0315  00F1               	movwf	___ftneg@f1+1
 10247  0316  084A               	movf	PID_Calculate@temp+2,w
 10248  0317  00F2               	movwf	___ftneg@f1+2
 10249  0318  3197  27DC  3183   	fcall	___ftneg
 10250  031B  0870               	movf	?___ftneg,w
 10251  031C  0020               	movlb	0	; select bank0
 10252  031D  00B0               	movwf	___ftadd@f1
 10253  031E  0871               	movf	?___ftneg+1,w
 10254  031F  00B1               	movwf	___ftadd@f1+1
 10255  0320  0872               	movf	?___ftneg+2,w
 10256  0321  00B2               	movwf	___ftadd@f1+2
 10257  0322  0847               	movf	PID_Calculate@setpoint+1,w
 10258  0323  00F9               	movwf	___awtoft@c+1
 10259  0324  0846               	movf	PID_Calculate@setpoint,w
 10260  0325  00F8               	movwf	___awtoft@c
 10261  0326  3189  2138  3183   	fcall	___awtoft
 10262  0329  0878               	movf	?___awtoft,w
 10263  032A  0020               	movlb	0	; select bank0
 10264  032B  00B3               	movwf	___ftadd@f2
 10265  032C  0879               	movf	?___awtoft+1,w
 10266  032D  00B4               	movwf	___ftadd@f2+1
 10267  032E  087A               	movf	?___awtoft+2,w
 10268  032F  00B5               	movwf	___ftadd@f2+2
 10269  0330  3182  220F  3183   	fcall	___ftadd
 10270  0333  0020               	movlb	0	; select bank0
 10271  0334  0830               	movf	?___ftadd,w
 10272  0335  00DA               	movwf	PID_Calculate@error
 10273  0336  0831               	movf	?___ftadd+1,w
 10274  0337  00DB               	movwf	PID_Calculate@error+1
 10275  0338  0832               	movf	?___ftadd+2,w
 10276  0339  00DC               	movwf	PID_Calculate@error+2
 10277                           
 10278                           ;pid.c: 31: errorValue = error * PID_Kp;
 10279  033A  0021               	movlb	1	; select bank1
 10280  033B  0859               	movf	_PID_Kp^(0+128),w
 10281  033C  0020               	movlb	0	; select bank0
 10282  033D  00A0               	movwf	___ftmul@f1
 10283  033E  0021               	movlb	1	; select bank1
 10284  033F  085A               	movf	(_PID_Kp+1)^(0+128),w
 10285  0340  0020               	movlb	0	; select bank0
 10286  0341  00A1               	movwf	___ftmul@f1+1
 10287  0342  0021               	movlb	1	; select bank1
 10288  0343  085B               	movf	(_PID_Kp+2)^(0+128),w
 10289  0344  0020               	movlb	0	; select bank0
 10290  0345  00A2               	movwf	___ftmul@f1+2
 10291  0346  085A               	movf	PID_Calculate@error,w
 10292  0347  00A3               	movwf	___ftmul@f2
 10293  0348  085B               	movf	PID_Calculate@error+1,w
 10294  0349  00A4               	movwf	___ftmul@f2+1
 10295  034A  085C               	movf	PID_Calculate@error+2,w
 10296  034B  00A5               	movwf	___ftmul@f2+2
 10297  034C  318F  274C  3183   	fcall	___ftmul
 10298  034F  0020               	movlb	0	; select bank0
 10299  0350  0820               	movf	?___ftmul,w
 10300  0351  00CB               	movwf	PID_Calculate@errorValue
 10301  0352  0821               	movf	?___ftmul+1,w
 10302  0353  00CC               	movwf	PID_Calculate@errorValue+1
 10303  0354  0822               	movf	?___ftmul+2,w
 10304  0355  00CD               	movwf	PID_Calculate@errorValue+2
 10305                           
 10306                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * PID_Ki);
 10307  0356  0021               	movlb	1	; select bank1
 10308  0357  0850               	movf	_pidIntegrated^(0+128),w
 10309  0358  0020               	movlb	0	; select bank0
 10310  0359  00B0               	movwf	___ftadd@f1
 10311  035A  0021               	movlb	1	; select bank1
 10312  035B  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10313  035C  0020               	movlb	0	; select bank0
 10314  035D  00B1               	movwf	___ftadd@f1+1
 10315  035E  0021               	movlb	1	; select bank1
 10316  035F  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10317  0360  0020               	movlb	0	; select bank0
 10318  0361  00B2               	movwf	___ftadd@f1+2
 10319  0362  0021               	movlb	1	; select bank1
 10320  0363  0856               	movf	_PID_Ki^(0+128),w
 10321  0364  0020               	movlb	0	; select bank0
 10322  0365  00A0               	movwf	___ftmul@f1
 10323  0366  0021               	movlb	1	; select bank1
 10324  0367  0857               	movf	(_PID_Ki+1)^(0+128),w
 10325  0368  0020               	movlb	0	; select bank0
 10326  0369  00A1               	movwf	___ftmul@f1+1
 10327  036A  0021               	movlb	1	; select bank1
 10328  036B  0858               	movf	(_PID_Ki+2)^(0+128),w
 10329  036C  0020               	movlb	0	; select bank0
 10330  036D  00A2               	movwf	___ftmul@f1+2
 10331  036E  085A               	movf	PID_Calculate@error,w
 10332  036F  00A3               	movwf	___ftmul@f2
 10333  0370  085B               	movf	PID_Calculate@error+1,w
 10334  0371  00A4               	movwf	___ftmul@f2+1
 10335  0372  085C               	movf	PID_Calculate@error+2,w
 10336  0373  00A5               	movwf	___ftmul@f2+2
 10337  0374  318F  274C  3183   	fcall	___ftmul
 10338  0377  0020               	movlb	0	; select bank0
 10339  0378  0820               	movf	?___ftmul,w
 10340  0379  00B3               	movwf	___ftadd@f2
 10341  037A  0821               	movf	?___ftmul+1,w
 10342  037B  00B4               	movwf	___ftadd@f2+1
 10343  037C  0822               	movf	?___ftmul+2,w
 10344  037D  00B5               	movwf	___ftadd@f2+2
 10345  037E  3182  220F  3183   	fcall	___ftadd
 10346  0381  0020               	movlb	0	; select bank0
 10347  0382  0830               	movf	?___ftadd,w
 10348  0383  0021               	movlb	1	; select bank1
 10349  0384  00D0               	movwf	_pidIntegrated^(0+128)
 10350  0385  0020               	movlb	0	; select bank0
 10351  0386  0831               	movf	?___ftadd+1,w
 10352  0387  0021               	movlb	1	; select bank1
 10353  0388  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10354  0389  0020               	movlb	0	; select bank0
 10355  038A  0832               	movf	?___ftadd+2,w
 10356  038B  0021               	movlb	1	; select bank1
 10357  038C  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10358                           
 10359                           ;pid.c: 36: if (pidIntegrated< pidMinOutput)
 10360  038D  0850               	movf	_pidIntegrated^(0+128),w
 10361  038E  0020               	movlb	0	; select bank0
 10362  038F  00BD               	movwf	___ftge@ff1
 10363  0390  0021               	movlb	1	; select bank1
 10364  0391  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10365  0392  0020               	movlb	0	; select bank0
 10366  0393  00BE               	movwf	___ftge@ff1+1
 10367  0394  0021               	movlb	1	; select bank1
 10368  0395  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10369  0396  0020               	movlb	0	; select bank0
 10370  0397  00BF               	movwf	___ftge@ff1+2
 10371  0398  086C               	movf	_pidMinOutput+1,w
 10372  0399  00F9               	movwf	___awtoft@c+1
 10373  039A  086B               	movf	_pidMinOutput,w
 10374  039B  00F8               	movwf	___awtoft@c
 10375  039C  3189  2138  3183   	fcall	___awtoft
 10376  039F  0878               	movf	?___awtoft,w
 10377  03A0  0020               	movlb	0	; select bank0
 10378  03A1  00C0               	movwf	___ftge@ff2
 10379  03A2  0879               	movf	?___awtoft+1,w
 10380  03A3  00C1               	movwf	___ftge@ff2+1
 10381  03A4  087A               	movf	?___awtoft+2,w
 10382  03A5  00C2               	movwf	___ftge@ff2+2
 10383  03A6  318A  22AA  3183   	fcall	___ftge
 10384  03A9  1803               	btfsc	3,0
 10385  03AA  2BBA               	goto	l265
 10386                           
 10387                           ;pid.c: 37: {
 10388                           ;pid.c: 38: pidIntegrated= pidMinOutput;
 10389  03AB  0020               	movlb	0	; select bank0
 10390  03AC  086C               	movf	_pidMinOutput+1,w
 10391  03AD  00F9               	movwf	___awtoft@c+1
 10392  03AE  086B               	movf	_pidMinOutput,w
 10393  03AF  00F8               	movwf	___awtoft@c
 10394  03B0  3189  2138  3183   	fcall	___awtoft
 10395  03B3  0878               	movf	?___awtoft,w
 10396  03B4  0021               	movlb	1	; select bank1
 10397  03B5  00D0               	movwf	_pidIntegrated^(0+128)
 10398  03B6  0879               	movf	?___awtoft+1,w
 10399  03B7  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10400  03B8  087A               	movf	?___awtoft+2,w
 10401  03B9  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10402  03BA                     l265:	
 10403                           
 10404                           ;pid.c: 39: }
 10405                           ;pid.c: 41: if (pidIntegrated> pidMaxOutput)
 10406  03BA  0021               	movlb	1	; select bank1
 10407  03BB  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10408  03BC  00F9               	movwf	___awtoft@c+1
 10409  03BD  085E               	movf	_pidMaxOutput^(0+128),w
 10410  03BE  00F8               	movwf	___awtoft@c
 10411  03BF  3189  2138  3183   	fcall	___awtoft
 10412  03C2  0878               	movf	?___awtoft,w
 10413  03C3  0020               	movlb	0	; select bank0
 10414  03C4  00BD               	movwf	___ftge@ff1
 10415  03C5  0879               	movf	?___awtoft+1,w
 10416  03C6  00BE               	movwf	___ftge@ff1+1
 10417  03C7  087A               	movf	?___awtoft+2,w
 10418  03C8  00BF               	movwf	___ftge@ff1+2
 10419  03C9  0021               	movlb	1	; select bank1
 10420  03CA  0850               	movf	_pidIntegrated^(0+128),w
 10421  03CB  0020               	movlb	0	; select bank0
 10422  03CC  00C0               	movwf	___ftge@ff2
 10423  03CD  0021               	movlb	1	; select bank1
 10424  03CE  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10425  03CF  0020               	movlb	0	; select bank0
 10426  03D0  00C1               	movwf	___ftge@ff2+1
 10427  03D1  0021               	movlb	1	; select bank1
 10428  03D2  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10429  03D3  0020               	movlb	0	; select bank0
 10430  03D4  00C2               	movwf	___ftge@ff2+2
 10431  03D5  318A  22AA  3183   	fcall	___ftge
 10432  03D8  1803               	btfsc	3,0
 10433  03D9  2BE9               	goto	l266
 10434                           
 10435                           ;pid.c: 42: {
 10436                           ;pid.c: 43: pidIntegrated= pidMaxOutput;
 10437  03DA  0021               	movlb	1	; select bank1
 10438  03DB  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10439  03DC  00F9               	movwf	___awtoft@c+1
 10440  03DD  085E               	movf	_pidMaxOutput^(0+128),w
 10441  03DE  00F8               	movwf	___awtoft@c
 10442  03DF  3189  2138  3183   	fcall	___awtoft
 10443  03E2  0878               	movf	?___awtoft,w
 10444  03E3  0021               	movlb	1	; select bank1
 10445  03E4  00D0               	movwf	_pidIntegrated^(0+128)
 10446  03E5  0879               	movf	?___awtoft+1,w
 10447  03E6  00D1               	movwf	(_pidIntegrated+1)^(0+128)
 10448  03E7  087A               	movf	?___awtoft+2,w
 10449  03E8  00D2               	movwf	(_pidIntegrated+2)^(0+128)
 10450  03E9                     l266:	
 10451                           
 10452                           ;pid.c: 44: }
 10453                           ;pid.c: 47: derivativeValue=(error-pidPrevError)*PID_Kd;
 10454  03E9  0021               	movlb	1	; select bank1
 10455  03EA  0853               	movf	_PID_Kd^(0+128),w
 10456  03EB  0020               	movlb	0	; select bank0
 10457  03EC  00A0               	movwf	___ftmul@f1
 10458  03ED  0021               	movlb	1	; select bank1
 10459  03EE  0854               	movf	(_PID_Kd+1)^(0+128),w
 10460  03EF  0020               	movlb	0	; select bank0
 10461  03F0  00A1               	movwf	___ftmul@f1+1
 10462  03F1  0021               	movlb	1	; select bank1
 10463  03F2  0855               	movf	(_PID_Kd+2)^(0+128),w
 10464  03F3  0020               	movlb	0	; select bank0
 10465  03F4  00A2               	movwf	___ftmul@f1+2
 10466  03F5  085A               	movf	PID_Calculate@error,w
 10467  03F6  00B0               	movwf	___ftadd@f1
 10468  03F7  085B               	movf	PID_Calculate@error+1,w
 10469  03F8  00B1               	movwf	___ftadd@f1+1
 10470  03F9  085C               	movf	PID_Calculate@error+2,w
 10471  03FA  00B2               	movwf	___ftadd@f1+2
 10472  03FB  0854               	movf	PID_Calculate@pidPrevError,w
 10473  03FC  00F0               	movwf	___ftneg@f1
 10474  03FD  0855               	movf	PID_Calculate@pidPrevError+1,w
 10475  03FE  00F1               	movwf	___ftneg@f1+1
 10476  03FF  0856               	movf	PID_Calculate@pidPrevError+2,w
 10477  0400  00F2               	movwf	___ftneg@f1+2
 10478  0401  3197  27DC  3183   	fcall	___ftneg
 10479  0404  0870               	movf	?___ftneg,w
 10480  0405  0020               	movlb	0	; select bank0
 10481  0406  00B3               	movwf	___ftadd@f2
 10482  0407  0871               	movf	?___ftneg+1,w
 10483  0408  00B4               	movwf	___ftadd@f2+1
 10484  0409  0872               	movf	?___ftneg+2,w
 10485  040A  00B5               	movwf	___ftadd@f2+2
 10486  040B  3182  220F  3183   	fcall	___ftadd
 10487  040E  0020               	movlb	0	; select bank0
 10488  040F  0830               	movf	?___ftadd,w
 10489  0410  00A3               	movwf	___ftmul@f2
 10490  0411  0831               	movf	?___ftadd+1,w
 10491  0412  00A4               	movwf	___ftmul@f2+1
 10492  0413  0832               	movf	?___ftadd+2,w
 10493  0414  00A5               	movwf	___ftmul@f2+2
 10494  0415  318F  274C  3183   	fcall	___ftmul
 10495  0418  0020               	movlb	0	; select bank0
 10496  0419  0820               	movf	?___ftmul,w
 10497  041A  00D1               	movwf	PID_Calculate@derivativeValue
 10498  041B  0821               	movf	?___ftmul+1,w
 10499  041C  00D2               	movwf	PID_Calculate@derivativeValue+1
 10500  041D  0822               	movf	?___ftmul+2,w
 10501  041E  00D3               	movwf	PID_Calculate@derivativeValue+2
 10502                           
 10503                           ;pid.c: 48: pidPrevError = error;
 10504  041F  085A               	movf	PID_Calculate@error,w
 10505  0420  00D4               	movwf	PID_Calculate@pidPrevError
 10506  0421  085B               	movf	PID_Calculate@error+1,w
 10507  0422  00D5               	movwf	PID_Calculate@pidPrevError+1
 10508  0423  085C               	movf	PID_Calculate@error+2,w
 10509  0424  00D6               	movwf	PID_Calculate@pidPrevError+2
 10510                           
 10511                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10512  0425  0021               	movlb	1	; select bank1
 10513  0426  0850               	movf	_pidIntegrated^(0+128),w
 10514  0427  0020               	movlb	0	; select bank0
 10515  0428  00B0               	movwf	___ftadd@f1
 10516  0429  0021               	movlb	1	; select bank1
 10517  042A  0851               	movf	(_pidIntegrated+1)^(0+128),w
 10518  042B  0020               	movlb	0	; select bank0
 10519  042C  00B1               	movwf	___ftadd@f1+1
 10520  042D  0021               	movlb	1	; select bank1
 10521  042E  0852               	movf	(_pidIntegrated+2)^(0+128),w
 10522  042F  0020               	movlb	0	; select bank0
 10523  0430  00B2               	movwf	___ftadd@f1+2
 10524  0431  084B               	movf	PID_Calculate@errorValue,w
 10525  0432  00B3               	movwf	___ftadd@f2
 10526  0433  084C               	movf	PID_Calculate@errorValue+1,w
 10527  0434  00B4               	movwf	___ftadd@f2+1
 10528  0435  084D               	movf	PID_Calculate@errorValue+2,w
 10529  0436  00B5               	movwf	___ftadd@f2+2
 10530  0437  3182  220F  3183   	fcall	___ftadd
 10531  043A  0020               	movlb	0	; select bank0
 10532  043B  0830               	movf	?___ftadd,w
 10533  043C  00CE               	movwf	_PID_Calculate$1076
 10534  043D  0831               	movf	?___ftadd+1,w
 10535  043E  00CF               	movwf	_PID_Calculate$1076+1
 10536  043F  0832               	movf	?___ftadd+2,w
 10537  0440  00D0               	movwf	_PID_Calculate$1076+2
 10538                           
 10539                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10540  0441  0851               	movf	PID_Calculate@derivativeValue,w
 10541  0442  00B0               	movwf	___ftadd@f1
 10542  0443  0852               	movf	PID_Calculate@derivativeValue+1,w
 10543  0444  00B1               	movwf	___ftadd@f1+1
 10544  0445  0853               	movf	PID_Calculate@derivativeValue+2,w
 10545  0446  00B2               	movwf	___ftadd@f1+2
 10546  0447  084E               	movf	_PID_Calculate$1076,w
 10547  0448  00B3               	movwf	___ftadd@f2
 10548  0449  084F               	movf	_PID_Calculate$1076+1,w
 10549  044A  00B4               	movwf	___ftadd@f2+1
 10550  044B  0850               	movf	_PID_Calculate$1076+2,w
 10551  044C  00B5               	movwf	___ftadd@f2+2
 10552  044D  3182  220F  3183   	fcall	___ftadd
 10553  0450  0020               	movlb	0	; select bank0
 10554  0451  0830               	movf	?___ftadd,w
 10555  0452  00D7               	movwf	PID_Calculate@Result
 10556  0453  0831               	movf	?___ftadd+1,w
 10557  0454  00D8               	movwf	PID_Calculate@Result+1
 10558  0455  0832               	movf	?___ftadd+2,w
 10559  0456  00D9               	movwf	PID_Calculate@Result+2
 10560                           
 10561                           ;pid.c: 53: if (Result < pidMinOutput)
 10562  0457  0857               	movf	PID_Calculate@Result,w
 10563  0458  00BD               	movwf	___ftge@ff1
 10564  0459  0858               	movf	PID_Calculate@Result+1,w
 10565  045A  00BE               	movwf	___ftge@ff1+1
 10566  045B  0859               	movf	PID_Calculate@Result+2,w
 10567  045C  00BF               	movwf	___ftge@ff1+2
 10568  045D  086C               	movf	_pidMinOutput+1,w
 10569  045E  00F9               	movwf	___awtoft@c+1
 10570  045F  086B               	movf	_pidMinOutput,w
 10571  0460  00F8               	movwf	___awtoft@c
 10572  0461  3189  2138  3183   	fcall	___awtoft
 10573  0464  0878               	movf	?___awtoft,w
 10574  0465  0020               	movlb	0	; select bank0
 10575  0466  00C0               	movwf	___ftge@ff2
 10576  0467  0879               	movf	?___awtoft+1,w
 10577  0468  00C1               	movwf	___ftge@ff2+1
 10578  0469  087A               	movf	?___awtoft+2,w
 10579  046A  00C2               	movwf	___ftge@ff2+2
 10580  046B  318A  22AA  3183   	fcall	___ftge
 10581  046E  1803               	btfsc	3,0
 10582  046F  2C7F               	goto	l267
 10583                           
 10584                           ;pid.c: 54: {
 10585                           ;pid.c: 55: Result = pidMinOutput;
 10586  0470  0020               	movlb	0	; select bank0
 10587  0471  086C               	movf	_pidMinOutput+1,w
 10588  0472  00F9               	movwf	___awtoft@c+1
 10589  0473  086B               	movf	_pidMinOutput,w
 10590  0474  00F8               	movwf	___awtoft@c
 10591  0475  3189  2138  3183   	fcall	___awtoft
 10592  0478  0878               	movf	?___awtoft,w
 10593  0479  0020               	movlb	0	; select bank0
 10594  047A  00D7               	movwf	PID_Calculate@Result
 10595  047B  0879               	movf	?___awtoft+1,w
 10596  047C  00D8               	movwf	PID_Calculate@Result+1
 10597  047D  087A               	movf	?___awtoft+2,w
 10598  047E  00D9               	movwf	PID_Calculate@Result+2
 10599  047F                     l267:	
 10600                           
 10601                           ;pid.c: 56: }
 10602                           ;pid.c: 58: if (Result > pidMaxOutput)
 10603  047F  0021               	movlb	1	; select bank1
 10604  0480  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10605  0481  00F9               	movwf	___awtoft@c+1
 10606  0482  085E               	movf	_pidMaxOutput^(0+128),w
 10607  0483  00F8               	movwf	___awtoft@c
 10608  0484  3189  2138  3183   	fcall	___awtoft
 10609  0487  0878               	movf	?___awtoft,w
 10610  0488  0020               	movlb	0	; select bank0
 10611  0489  00BD               	movwf	___ftge@ff1
 10612  048A  0879               	movf	?___awtoft+1,w
 10613  048B  00BE               	movwf	___ftge@ff1+1
 10614  048C  087A               	movf	?___awtoft+2,w
 10615  048D  00BF               	movwf	___ftge@ff1+2
 10616  048E  0857               	movf	PID_Calculate@Result,w
 10617  048F  00C0               	movwf	___ftge@ff2
 10618  0490  0858               	movf	PID_Calculate@Result+1,w
 10619  0491  00C1               	movwf	___ftge@ff2+1
 10620  0492  0859               	movf	PID_Calculate@Result+2,w
 10621  0493  00C2               	movwf	___ftge@ff2+2
 10622  0494  318A  22AA  3183   	fcall	___ftge
 10623  0497  1803               	btfsc	3,0
 10624  0498  2CA7               	goto	l2768
 10625                           
 10626                           ;pid.c: 59: {
 10627                           ;pid.c: 60: Result = pidMaxOutput;
 10628  0499  0021               	movlb	1	; select bank1
 10629  049A  085F               	movf	(_pidMaxOutput+1)^(0+128),w
 10630  049B  00F9               	movwf	___awtoft@c+1
 10631  049C  085E               	movf	_pidMaxOutput^(0+128),w
 10632  049D  00F8               	movwf	___awtoft@c
 10633  049E  3189  2138         	fcall	___awtoft
 10634  04A0  0878               	movf	?___awtoft,w
 10635  04A1  0020               	movlb	0	; select bank0
 10636  04A2  00D7               	movwf	PID_Calculate@Result
 10637  04A3  0879               	movf	?___awtoft+1,w
 10638  04A4  00D8               	movwf	PID_Calculate@Result+1
 10639  04A5  087A               	movf	?___awtoft+2,w
 10640  04A6  00D9               	movwf	PID_Calculate@Result+2
 10641  04A7                     l2768:	
 10642                           
 10643                           ;pid.c: 61: }
 10644                           ;pid.c: 63: return (Result);
 10645  04A7  0020               	movlb	0	; select bank0
 10646  04A8  0857               	movf	PID_Calculate@Result,w
 10647  04A9  00C6               	movwf	?_PID_Calculate
 10648  04AA  0858               	movf	PID_Calculate@Result+1,w
 10649  04AB  00C7               	movwf	?_PID_Calculate+1
 10650  04AC  0859               	movf	PID_Calculate@Result+2,w
 10651  04AD  00C8               	movwf	?_PID_Calculate+2
 10652  04AE  0008               	return
 10653  04AF                     __end_of_PID_Calculate:	
 10654                           
 10655                           	psect	text35
 10656  17DC                     __ptext35:	
 10657 ;; *************** function ___ftneg *****************
 10658 ;; Defined at:
 10659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  f1              3    0[COMMON] float 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;		None
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  3    0[COMMON] float 
 10666 ;; Registers used:
 10667 ;;		wreg
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;Total ram usage:        3 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_main
 10683 ;;		_PID_Calculate
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function ___ftneg
 10689  17DC                     ___ftneg:	
 10690                           
 10691                           ;incstack = 0
 10692                           ; Regs used in ___ftneg: [wreg]
 10693  17DC  0872               	movf	___ftneg@f1+2,w
 10694  17DD  0471               	iorwf	___ftneg@f1+1,w
 10695  17DE  0470               	iorwf	___ftneg@f1,w
 10696  17DF  1903               	skipnz
 10697  17E0  0008               	return
 10698  17E1  3080               	movlw	128
 10699  17E2  06F2               	xorwf	___ftneg@f1+2,f
 10700  17E3  0008               	return
 10701  17E4                     __end_of___ftneg:	
 10702                           
 10703                           	psect	text36
 10704  0F4C                     __ptext36:	
 10705 ;; *************** function ___ftmul *****************
 10706 ;; Defined at:
 10707 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  f1              3    0[BANK0 ] float 
 10710 ;;  f2              3    3[BANK0 ] float 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 10713 ;;  sign            1   15[BANK0 ] unsigned char 
 10714 ;;  cntr            1   14[BANK0 ] unsigned char 
 10715 ;;  exp             1   10[BANK0 ] unsigned char 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  3    0[BANK0 ] float 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0, pclath, cstack
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10725 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;Total ram usage:       16 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:    1
 10732 ;; This function calls:
 10733 ;;		___ftpack
 10734 ;; This function is called by:
 10735 ;;		_main
 10736 ;;		_PID_Calculate
 10737 ;;		_log
 10738 ;;		_eval_poly
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           
 10743                           ;psect for function ___ftmul
 10744  0F4C                     ___ftmul:	
 10745                           
 10746                           ;incstack = 0
 10747                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10748  0F4C  0020               	movlb	0	; select bank0
 10749  0F4D  0820               	movf	___ftmul@f1,w
 10750  0F4E  00A6               	movwf	??___ftmul
 10751  0F4F  0821               	movf	___ftmul@f1+1,w
 10752  0F50  00A7               	movwf	??___ftmul+1
 10753  0F51  0822               	movf	___ftmul@f1+2,w
 10754  0F52  00A8               	movwf	??___ftmul+2
 10755  0F53  1003               	clrc
 10756  0F54  0D27               	rlf	??___ftmul+1,w
 10757  0F55  0D28               	rlf	??___ftmul+2,w
 10758  0F56  00A9               	movwf	??___ftmul+3
 10759  0F57  0829               	movf	??___ftmul+3,w
 10760  0F58  00AA               	movwf	___ftmul@exp
 10761  0F59  082A               	movf	___ftmul@exp,w
 10762  0F5A  1D03               	btfss	3,2
 10763  0F5B  2F63               	goto	l2346
 10764  0F5C  3000               	movlw	0
 10765  0F5D  00A0               	movwf	?___ftmul
 10766  0F5E  3000               	movlw	0
 10767  0F5F  00A1               	movwf	?___ftmul+1
 10768  0F60  3000               	movlw	0
 10769  0F61  00A2               	movwf	?___ftmul+2
 10770  0F62  0008               	return
 10771  0F63                     l2346:	
 10772  0F63  0823               	movf	___ftmul@f2,w
 10773  0F64  00A6               	movwf	??___ftmul
 10774  0F65  0824               	movf	___ftmul@f2+1,w
 10775  0F66  00A7               	movwf	??___ftmul+1
 10776  0F67  0825               	movf	___ftmul@f2+2,w
 10777  0F68  00A8               	movwf	??___ftmul+2
 10778  0F69  1003               	clrc
 10779  0F6A  0D27               	rlf	??___ftmul+1,w
 10780  0F6B  0D28               	rlf	??___ftmul+2,w
 10781  0F6C  00A9               	movwf	??___ftmul+3
 10782  0F6D  0829               	movf	??___ftmul+3,w
 10783  0F6E  00AF               	movwf	___ftmul@sign
 10784  0F6F  082F               	movf	___ftmul@sign,w
 10785  0F70  1D03               	btfss	3,2
 10786  0F71  2F79               	goto	l2352
 10787  0F72  3000               	movlw	0
 10788  0F73  00A0               	movwf	?___ftmul
 10789  0F74  3000               	movlw	0
 10790  0F75  00A1               	movwf	?___ftmul+1
 10791  0F76  3000               	movlw	0
 10792  0F77  00A2               	movwf	?___ftmul+2
 10793  0F78  0008               	return
 10794  0F79                     l2352:	
 10795  0F79  082F               	movf	___ftmul@sign,w
 10796  0F7A  3E7B               	addlw	123
 10797  0F7B  00A6               	movwf	??___ftmul
 10798  0F7C  0826               	movf	??___ftmul,w
 10799  0F7D  07AA               	addwf	___ftmul@exp,f
 10800  0F7E  0820               	movf	___ftmul@f1,w
 10801  0F7F  00A6               	movwf	??___ftmul
 10802  0F80  0821               	movf	___ftmul@f1+1,w
 10803  0F81  00A7               	movwf	??___ftmul+1
 10804  0F82  0822               	movf	___ftmul@f1+2,w
 10805  0F83  00A8               	movwf	??___ftmul+2
 10806  0F84  3010               	movlw	16
 10807  0F85                     u2435:	
 10808  0F85  36A8               	lsrf	??___ftmul+2,f
 10809  0F86  0CA7               	rrf	??___ftmul+1,f
 10810  0F87  0CA6               	rrf	??___ftmul,f
 10811  0F88  0B89               	decfsz	9,f
 10812  0F89  2F85               	goto	u2435
 10813  0F8A  0826               	movf	??___ftmul,w
 10814  0F8B  00A9               	movwf	??___ftmul+3
 10815  0F8C  0829               	movf	??___ftmul+3,w
 10816  0F8D  00AF               	movwf	___ftmul@sign
 10817  0F8E  0823               	movf	___ftmul@f2,w
 10818  0F8F  00A6               	movwf	??___ftmul
 10819  0F90  0824               	movf	___ftmul@f2+1,w
 10820  0F91  00A7               	movwf	??___ftmul+1
 10821  0F92  0825               	movf	___ftmul@f2+2,w
 10822  0F93  00A8               	movwf	??___ftmul+2
 10823  0F94  3010               	movlw	16
 10824  0F95                     u2445:	
 10825  0F95  36A8               	lsrf	??___ftmul+2,f
 10826  0F96  0CA7               	rrf	??___ftmul+1,f
 10827  0F97  0CA6               	rrf	??___ftmul,f
 10828  0F98  0B89               	decfsz	9,f
 10829  0F99  2F95               	goto	u2445
 10830  0F9A  0826               	movf	??___ftmul,w
 10831  0F9B  00A9               	movwf	??___ftmul+3
 10832  0F9C  0829               	movf	??___ftmul+3,w
 10833  0F9D  06AF               	xorwf	___ftmul@sign,f
 10834  0F9E  3080               	movlw	128
 10835  0F9F  00A6               	movwf	??___ftmul
 10836  0FA0  0826               	movf	??___ftmul,w
 10837  0FA1  05AF               	andwf	___ftmul@sign,f
 10838  0FA2  17A1               	bsf	___ftmul@f1+1,7
 10839  0FA3  17A4               	bsf	___ftmul@f2+1,7
 10840  0FA4  30FF               	movlw	255
 10841  0FA5  05A3               	andwf	___ftmul@f2,f
 10842  0FA6  30FF               	movlw	255
 10843  0FA7  05A4               	andwf	___ftmul@f2+1,f
 10844  0FA8  3000               	movlw	0
 10845  0FA9  05A5               	andwf	___ftmul@f2+2,f
 10846  0FAA  3000               	movlw	0
 10847  0FAB  00AB               	movwf	___ftmul@f3_as_product
 10848  0FAC  3000               	movlw	0
 10849  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
 10850  0FAE  3000               	movlw	0
 10851  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
 10852  0FB0  3007               	movlw	7
 10853  0FB1  00A6               	movwf	??___ftmul
 10854  0FB2  0826               	movf	??___ftmul,w
 10855  0FB3  00AE               	movwf	___ftmul@cntr
 10856  0FB4                     l2364:	
 10857  0FB4  1C20               	btfss	___ftmul@f1,0
 10858  0FB5  2FBC               	goto	l2368
 10859  0FB6  0823               	movf	___ftmul@f2,w
 10860  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
 10861  0FB8  0824               	movf	___ftmul@f2+1,w
 10862  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10863  0FBA  0825               	movf	___ftmul@f2+2,w
 10864  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10865  0FBC                     l2368:	
 10866  0FBC  3001               	movlw	1
 10867  0FBD                     u2465:	
 10868  0FBD  36A2               	lsrf	___ftmul@f1+2,f
 10869  0FBE  0CA1               	rrf	___ftmul@f1+1,f
 10870  0FBF  0CA0               	rrf	___ftmul@f1,f
 10871  0FC0  0B89               	decfsz	9,f
 10872  0FC1  2FBD               	goto	u2465
 10873  0FC2  3001               	movlw	1
 10874  0FC3                     u2475:	
 10875  0FC3  35A3               	lslf	___ftmul@f2,f
 10876  0FC4  0DA4               	rlf	___ftmul@f2+1,f
 10877  0FC5  0DA5               	rlf	___ftmul@f2+2,f
 10878  0FC6  0B89               	decfsz	9,f
 10879  0FC7  2FC3               	goto	u2475
 10880  0FC8  3001               	movlw	1
 10881  0FC9  02AE               	subwf	___ftmul@cntr,f
 10882  0FCA  1D03               	btfss	3,2
 10883  0FCB  2FB4               	goto	l2364
 10884  0FCC  3009               	movlw	9
 10885  0FCD  00A6               	movwf	??___ftmul
 10886  0FCE  0826               	movf	??___ftmul,w
 10887  0FCF  00AE               	movwf	___ftmul@cntr
 10888  0FD0                     l2376:	
 10889  0FD0  1C20               	btfss	___ftmul@f1,0
 10890  0FD1  2FD8               	goto	l2380
 10891  0FD2  0823               	movf	___ftmul@f2,w
 10892  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
 10893  0FD4  0824               	movf	___ftmul@f2+1,w
 10894  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10895  0FD6  0825               	movf	___ftmul@f2+2,w
 10896  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10897  0FD8                     l2380:	
 10898  0FD8  3001               	movlw	1
 10899  0FD9                     u2505:	
 10900  0FD9  36A2               	lsrf	___ftmul@f1+2,f
 10901  0FDA  0CA1               	rrf	___ftmul@f1+1,f
 10902  0FDB  0CA0               	rrf	___ftmul@f1,f
 10903  0FDC  0B89               	decfsz	9,f
 10904  0FDD  2FD9               	goto	u2505
 10905  0FDE  3001               	movlw	1
 10906  0FDF                     u2515:	
 10907  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
 10908  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
 10909  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
 10910  0FE2  0B89               	decfsz	9,f
 10911  0FE3  2FDF               	goto	u2515
 10912  0FE4  3001               	movlw	1
 10913  0FE5  02AE               	subwf	___ftmul@cntr,f
 10914  0FE6  1D03               	btfss	3,2
 10915  0FE7  2FD0               	goto	l2376
 10916  0FE8  082B               	movf	___ftmul@f3_as_product,w
 10917  0FE9  00F0               	movwf	___ftpack@arg
 10918  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
 10919  0FEB  00F1               	movwf	___ftpack@arg+1
 10920  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
 10921  0FED  00F2               	movwf	___ftpack@arg+2
 10922  0FEE  082A               	movf	___ftmul@exp,w
 10923  0FEF  00A6               	movwf	??___ftmul
 10924  0FF0  0826               	movf	??___ftmul,w
 10925  0FF1  00F3               	movwf	___ftpack@exp
 10926  0FF2  082F               	movf	___ftmul@sign,w
 10927  0FF3  00A7               	movwf	??___ftmul+1
 10928  0FF4  0827               	movf	??___ftmul+1,w
 10929  0FF5  00F4               	movwf	___ftpack@sign
 10930  0FF6  318C  241B         	fcall	___ftpack
 10931  0FF8  0870               	movf	?___ftpack,w
 10932  0FF9  0020               	movlb	0	; select bank0
 10933  0FFA  00A0               	movwf	?___ftmul
 10934  0FFB  0871               	movf	?___ftpack+1,w
 10935  0FFC  00A1               	movwf	?___ftmul+1
 10936  0FFD  0872               	movf	?___ftpack+2,w
 10937  0FFE  00A2               	movwf	?___ftmul+2
 10938  0FFF  0008               	return
 10939  1000                     __end_of___ftmul:	
 10940                           
 10941                           	psect	text37
 10942  0AAA                     __ptext37:	
 10943 ;; *************** function ___ftge *****************
 10944 ;; Defined at:
 10945 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  ff1             3   29[BANK0 ] float 
 10948 ;;  ff2             3   32[BANK0 ] float 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;		None               void
 10953 ;; Registers used:
 10954 ;;		wreg, status,2, status,0
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10960 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;Total ram usage:        9 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_main
 10970 ;;		_PID_Calculate
 10971 ;;		_log
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           
 10976                           ;psect for function ___ftge
 10977  0AAA                     ___ftge:	
 10978                           
 10979                           ;incstack = 0
 10980                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10981  0AAA  0020               	movlb	0	; select bank0
 10982  0AAB  1FBF               	btfss	___ftge@ff1+2,7
 10983  0AAC  2AC1               	goto	l2628
 10984  0AAD  093D               	comf	___ftge@ff1,w
 10985  0AAE  00C3               	movwf	??___ftge
 10986  0AAF  093E               	comf	___ftge@ff1+1,w
 10987  0AB0  00C4               	movwf	??___ftge+1
 10988  0AB1  093F               	comf	___ftge@ff1+2,w
 10989  0AB2  00C5               	movwf	??___ftge+2
 10990  0AB3  0AC3               	incf	??___ftge,f
 10991  0AB4  1903               	skipnz
 10992  0AB5  0AC4               	incf	??___ftge+1,f
 10993  0AB6  1903               	skipnz
 10994  0AB7  0AC5               	incf	??___ftge+2,f
 10995  0AB8  3000               	movlw	0
 10996  0AB9  0743               	addwf	??___ftge,w
 10997  0ABA  00BD               	movwf	___ftge@ff1
 10998  0ABB  3000               	movlw	0
 10999  0ABC  3D44               	addwfc	??___ftge+1,w
 11000  0ABD  00BE               	movwf	___ftge@ff1+1
 11001  0ABE  3080               	movlw	128
 11002  0ABF  3D45               	addwfc	??___ftge+2,w
 11003  0AC0  00BF               	movwf	___ftge@ff1+2
 11004  0AC1                     l2628:	
 11005  0AC1  1FC2               	btfss	___ftge@ff2+2,7
 11006  0AC2  2AD7               	goto	l2632
 11007  0AC3  0940               	comf	___ftge@ff2,w
 11008  0AC4  00C3               	movwf	??___ftge
 11009  0AC5  0941               	comf	___ftge@ff2+1,w
 11010  0AC6  00C4               	movwf	??___ftge+1
 11011  0AC7  0942               	comf	___ftge@ff2+2,w
 11012  0AC8  00C5               	movwf	??___ftge+2
 11013  0AC9  0AC3               	incf	??___ftge,f
 11014  0ACA  1903               	skipnz
 11015  0ACB  0AC4               	incf	??___ftge+1,f
 11016  0ACC  1903               	skipnz
 11017  0ACD  0AC5               	incf	??___ftge+2,f
 11018  0ACE  3000               	movlw	0
 11019  0ACF  0743               	addwf	??___ftge,w
 11020  0AD0  00C0               	movwf	___ftge@ff2
 11021  0AD1  3000               	movlw	0
 11022  0AD2  3D44               	addwfc	??___ftge+1,w
 11023  0AD3  00C1               	movwf	___ftge@ff2+1
 11024  0AD4  3080               	movlw	128
 11025  0AD5  3D45               	addwfc	??___ftge+2,w
 11026  0AD6  00C2               	movwf	___ftge@ff2+2
 11027  0AD7                     l2632:	
 11028  0AD7  3080               	movlw	128
 11029  0AD8  06BF               	xorwf	___ftge@ff1+2,f
 11030  0AD9  3080               	movlw	128
 11031  0ADA  06C2               	xorwf	___ftge@ff2+2,f
 11032  0ADB  0842               	movf	___ftge@ff2+2,w
 11033  0ADC  023F               	subwf	___ftge@ff1+2,w
 11034  0ADD  1D03               	skipz
 11035  0ADE  0008               	return
 11036  0ADF  0841               	movf	___ftge@ff2+1,w
 11037  0AE0  023E               	subwf	___ftge@ff1+1,w
 11038  0AE1  1D03               	skipz
 11039  0AE2  0008               	return
 11040  0AE3  0840               	movf	___ftge@ff2,w
 11041  0AE4  023D               	subwf	___ftge@ff1,w
 11042  0AE5  0008               	return
 11043  0AE6                     __end_of___ftge:	
 11044                           
 11045                           	psect	text38
 11046  020F                     __ptext38:	
 11047 ;; *************** function ___ftadd *****************
 11048 ;; Defined at:
 11049 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  f1              3   16[BANK0 ] float 
 11052 ;;  f2              3   19[BANK0 ] float 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  exp1            1   28[BANK0 ] unsigned char 
 11055 ;;  exp2            1   27[BANK0 ] unsigned char 
 11056 ;;  sign            1   26[BANK0 ] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  3   16[BANK0 ] float 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0, pclath, cstack
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11066 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11068 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;Total ram usage:       13 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    1
 11073 ;; This function calls:
 11074 ;;		___ftpack
 11075 ;; This function is called by:
 11076 ;;		_main
 11077 ;;		_PID_Calculate
 11078 ;;		___ftsub
 11079 ;;		_log
 11080 ;;		_eval_poly
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           
 11085                           ;psect for function ___ftadd
 11086  020F                     ___ftadd:	
 11087                           
 11088                           ;incstack = 0
 11089                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11090  020F  0020               	movlb	0	; select bank0
 11091  0210  0830               	movf	___ftadd@f1,w
 11092  0211  00B6               	movwf	??___ftadd
 11093  0212  0831               	movf	___ftadd@f1+1,w
 11094  0213  00B7               	movwf	??___ftadd+1
 11095  0214  0832               	movf	___ftadd@f1+2,w
 11096  0215  00B8               	movwf	??___ftadd+2
 11097  0216  1003               	clrc
 11098  0217  0D37               	rlf	??___ftadd+1,w
 11099  0218  0D38               	rlf	??___ftadd+2,w
 11100  0219  00B9               	movwf	??___ftadd+3
 11101  021A  0839               	movf	??___ftadd+3,w
 11102  021B  00BC               	movwf	___ftadd@exp1
 11103  021C  0833               	movf	___ftadd@f2,w
 11104  021D  00B6               	movwf	??___ftadd
 11105  021E  0834               	movf	___ftadd@f2+1,w
 11106  021F  00B7               	movwf	??___ftadd+1
 11107  0220  0835               	movf	___ftadd@f2+2,w
 11108  0221  00B8               	movwf	??___ftadd+2
 11109  0222  1003               	clrc
 11110  0223  0D37               	rlf	??___ftadd+1,w
 11111  0224  0D38               	rlf	??___ftadd+2,w
 11112  0225  00B9               	movwf	??___ftadd+3
 11113  0226  0839               	movf	??___ftadd+3,w
 11114  0227  00BB               	movwf	___ftadd@exp2
 11115  0228  083C               	movf	___ftadd@exp1,w
 11116  0229  1903               	btfsc	3,2
 11117  022A  2A37               	goto	l2276
 11118  022B  083B               	movf	___ftadd@exp2,w
 11119  022C  023C               	subwf	___ftadd@exp1,w
 11120  022D  1803               	skipnc
 11121  022E  2A3E               	goto	l2280
 11122  022F  033C               	decf	___ftadd@exp1,w
 11123  0230  3AFF               	xorlw	255
 11124  0231  073B               	addwf	___ftadd@exp2,w
 11125  0232  00B6               	movwf	??___ftadd
 11126  0233  3019               	movlw	25
 11127  0234  0236               	subwf	??___ftadd,w
 11128  0235  1C03               	skipc
 11129  0236  2A3E               	goto	l2280
 11130  0237                     l2276:	
 11131  0237  0833               	movf	___ftadd@f2,w
 11132  0238  00B0               	movwf	?___ftadd
 11133  0239  0834               	movf	___ftadd@f2+1,w
 11134  023A  00B1               	movwf	?___ftadd+1
 11135  023B  0835               	movf	___ftadd@f2+2,w
 11136  023C  00B2               	movwf	?___ftadd+2
 11137  023D  0008               	return
 11138  023E                     l2280:	
 11139  023E  083B               	movf	___ftadd@exp2,w
 11140  023F  1903               	btfsc	3,2
 11141  0240  0008               	return
 11142  0241  083C               	movf	___ftadd@exp1,w
 11143  0242  023B               	subwf	___ftadd@exp2,w
 11144  0243  1803               	skipnc
 11145  0244  2A4D               	goto	l2286
 11146  0245  033B               	decf	___ftadd@exp2,w
 11147  0246  3AFF               	xorlw	255
 11148  0247  073C               	addwf	___ftadd@exp1,w
 11149  0248  00B6               	movwf	??___ftadd
 11150  0249  3019               	movlw	25
 11151  024A  0236               	subwf	??___ftadd,w
 11152  024B  1803               	btfsc	3,0
 11153  024C  0008               	return
 11154  024D                     l2286:	
 11155  024D  3006               	movlw	6
 11156  024E  00B6               	movwf	??___ftadd
 11157  024F  0836               	movf	??___ftadd,w
 11158  0250  00BA               	movwf	___ftadd@sign
 11159  0251  1BB2               	btfsc	___ftadd@f1+2,7
 11160  0252  17BA               	bsf	___ftadd@sign,7
 11161  0253  1BB5               	btfsc	___ftadd@f2+2,7
 11162  0254  173A               	bsf	___ftadd@sign,6
 11163  0255  17B1               	bsf	___ftadd@f1+1,7
 11164  0256  30FF               	movlw	255
 11165  0257  05B0               	andwf	___ftadd@f1,f
 11166  0258  30FF               	movlw	255
 11167  0259  05B1               	andwf	___ftadd@f1+1,f
 11168  025A  3000               	movlw	0
 11169  025B  05B2               	andwf	___ftadd@f1+2,f
 11170  025C  17B4               	bsf	___ftadd@f2+1,7
 11171  025D  30FF               	movlw	255
 11172  025E  05B3               	andwf	___ftadd@f2,f
 11173  025F  30FF               	movlw	255
 11174  0260  05B4               	andwf	___ftadd@f2+1,f
 11175  0261  3000               	movlw	0
 11176  0262  05B5               	andwf	___ftadd@f2+2,f
 11177  0263  083B               	movf	___ftadd@exp2,w
 11178  0264  023C               	subwf	___ftadd@exp1,w
 11179  0265  1803               	skipnc
 11180  0266  2A89               	goto	l2308
 11181  0267                     l2298:	
 11182  0267  3001               	movlw	1
 11183  0268                     u2275:	
 11184  0268  35B3               	lslf	___ftadd@f2,f
 11185  0269  0DB4               	rlf	___ftadd@f2+1,f
 11186  026A  0DB5               	rlf	___ftadd@f2+2,f
 11187  026B  0B89               	decfsz	9,f
 11188  026C  2A68               	goto	u2275
 11189  026D  3001               	movlw	1
 11190  026E  02BB               	subwf	___ftadd@exp2,f
 11191  026F  083B               	movf	___ftadd@exp2,w
 11192  0270  063C               	xorwf	___ftadd@exp1,w
 11193  0271  1903               	skipnz
 11194  0272  2A84               	goto	l2306
 11195  0273  3001               	movlw	1
 11196  0274  02BA               	subwf	___ftadd@sign,f
 11197  0275  083A               	movf	___ftadd@sign,w
 11198  0276  3907               	andlw	7
 11199  0277  1903               	btfsc	3,2
 11200  0278  2A84               	goto	l2306
 11201  0279  2A67               	goto	l2298
 11202  027A                     l2304:	
 11203  027A  3001               	movlw	1
 11204  027B                     u2305:	
 11205  027B  36B2               	lsrf	___ftadd@f1+2,f
 11206  027C  0CB1               	rrf	___ftadd@f1+1,f
 11207  027D  0CB0               	rrf	___ftadd@f1,f
 11208  027E  0B89               	decfsz	9,f
 11209  027F  2A7B               	goto	u2305
 11210  0280  3001               	movlw	1
 11211  0281  00B6               	movwf	??___ftadd
 11212  0282  0836               	movf	??___ftadd,w
 11213  0283  07BC               	addwf	___ftadd@exp1,f
 11214  0284                     l2306:	
 11215  0284  083C               	movf	___ftadd@exp1,w
 11216  0285  063B               	xorwf	___ftadd@exp2,w
 11217  0286  1903               	btfsc	3,2
 11218  0287  2AAE               	goto	l672
 11219  0288  2A7A               	goto	l2304
 11220  0289                     l2308:	
 11221  0289  083C               	movf	___ftadd@exp1,w
 11222  028A  023B               	subwf	___ftadd@exp2,w
 11223  028B  1803               	skipnc
 11224  028C  2AAE               	goto	l672
 11225  028D                     l2310:	
 11226  028D  3001               	movlw	1
 11227  028E                     u2335:	
 11228  028E  35B0               	lslf	___ftadd@f1,f
 11229  028F  0DB1               	rlf	___ftadd@f1+1,f
 11230  0290  0DB2               	rlf	___ftadd@f1+2,f
 11231  0291  0B89               	decfsz	9,f
 11232  0292  2A8E               	goto	u2335
 11233  0293  3001               	movlw	1
 11234  0294  02BC               	subwf	___ftadd@exp1,f
 11235  0295  083B               	movf	___ftadd@exp2,w
 11236  0296  063C               	xorwf	___ftadd@exp1,w
 11237  0297  1903               	skipnz
 11238  0298  2AAA               	goto	l2318
 11239  0299  3001               	movlw	1
 11240  029A  02BA               	subwf	___ftadd@sign,f
 11241  029B  083A               	movf	___ftadd@sign,w
 11242  029C  3907               	andlw	7
 11243  029D  1903               	btfsc	3,2
 11244  029E  2AAA               	goto	l2318
 11245  029F  2A8D               	goto	l2310
 11246  02A0                     l2316:	
 11247  02A0  3001               	movlw	1
 11248  02A1                     u2365:	
 11249  02A1  36B5               	lsrf	___ftadd@f2+2,f
 11250  02A2  0CB4               	rrf	___ftadd@f2+1,f
 11251  02A3  0CB3               	rrf	___ftadd@f2,f
 11252  02A4  0B89               	decfsz	9,f
 11253  02A5  2AA1               	goto	u2365
 11254  02A6  3001               	movlw	1
 11255  02A7  00B6               	movwf	??___ftadd
 11256  02A8  0836               	movf	??___ftadd,w
 11257  02A9  07BB               	addwf	___ftadd@exp2,f
 11258  02AA                     l2318:	
 11259  02AA  083C               	movf	___ftadd@exp1,w
 11260  02AB  063B               	xorwf	___ftadd@exp2,w
 11261  02AC  1D03               	skipz
 11262  02AD  2AA0               	goto	l2316
 11263  02AE                     l672:	
 11264  02AE  1FBA               	btfss	___ftadd@sign,7
 11265  02AF  2AC0               	goto	l2322
 11266  02B0  30FF               	movlw	255
 11267  02B1  06B0               	xorwf	___ftadd@f1,f
 11268  02B2  30FF               	movlw	255
 11269  02B3  06B1               	xorwf	___ftadd@f1+1,f
 11270  02B4  30FF               	movlw	255
 11271  02B5  06B2               	xorwf	___ftadd@f1+2,f
 11272  02B6  3001               	movlw	1
 11273  02B7  07B0               	addwf	___ftadd@f1,f
 11274  02B8  3000               	movlw	0
 11275  02B9  1803               	skipnc
 11276  02BA  3001               	movlw	1
 11277  02BB  07B1               	addwf	___ftadd@f1+1,f
 11278  02BC  3000               	movlw	0
 11279  02BD  1803               	skipnc
 11280  02BE  3001               	movlw	1
 11281  02BF  07B2               	addwf	___ftadd@f1+2,f
 11282  02C0                     l2322:	
 11283  02C0  1F3A               	btfss	___ftadd@sign,6
 11284  02C1  2AD2               	goto	l2326
 11285  02C2  30FF               	movlw	255
 11286  02C3  06B3               	xorwf	___ftadd@f2,f
 11287  02C4  30FF               	movlw	255
 11288  02C5  06B4               	xorwf	___ftadd@f2+1,f
 11289  02C6  30FF               	movlw	255
 11290  02C7  06B5               	xorwf	___ftadd@f2+2,f
 11291  02C8  3001               	movlw	1
 11292  02C9  07B3               	addwf	___ftadd@f2,f
 11293  02CA  3000               	movlw	0
 11294  02CB  1803               	skipnc
 11295  02CC  3001               	movlw	1
 11296  02CD  07B4               	addwf	___ftadd@f2+1,f
 11297  02CE  3000               	movlw	0
 11298  02CF  1803               	skipnc
 11299  02D0  3001               	movlw	1
 11300  02D1  07B5               	addwf	___ftadd@f2+2,f
 11301  02D2                     l2326:	
 11302  02D2  01BA               	clrf	___ftadd@sign
 11303  02D3  0830               	movf	___ftadd@f1,w
 11304  02D4  07B3               	addwf	___ftadd@f2,f
 11305  02D5  0831               	movf	___ftadd@f1+1,w
 11306  02D6  3DB4               	addwfc	___ftadd@f2+1,f
 11307  02D7  0832               	movf	___ftadd@f1+2,w
 11308  02D8  3DB5               	addwfc	___ftadd@f2+2,f
 11309  02D9  1FB5               	btfss	___ftadd@f2+2,7
 11310  02DA  2AED               	goto	l2336
 11311  02DB  30FF               	movlw	255
 11312  02DC  06B3               	xorwf	___ftadd@f2,f
 11313  02DD  30FF               	movlw	255
 11314  02DE  06B4               	xorwf	___ftadd@f2+1,f
 11315  02DF  30FF               	movlw	255
 11316  02E0  06B5               	xorwf	___ftadd@f2+2,f
 11317  02E1  3001               	movlw	1
 11318  02E2  07B3               	addwf	___ftadd@f2,f
 11319  02E3  3000               	movlw	0
 11320  02E4  1803               	skipnc
 11321  02E5  3001               	movlw	1
 11322  02E6  07B4               	addwf	___ftadd@f2+1,f
 11323  02E7  3000               	movlw	0
 11324  02E8  1803               	skipnc
 11325  02E9  3001               	movlw	1
 11326  02EA  07B5               	addwf	___ftadd@f2+2,f
 11327  02EB  01BA               	clrf	___ftadd@sign
 11328  02EC  0ABA               	incf	___ftadd@sign,f
 11329  02ED                     l2336:	
 11330  02ED  0833               	movf	___ftadd@f2,w
 11331  02EE  00F0               	movwf	___ftpack@arg
 11332  02EF  0834               	movf	___ftadd@f2+1,w
 11333  02F0  00F1               	movwf	___ftpack@arg+1
 11334  02F1  0835               	movf	___ftadd@f2+2,w
 11335  02F2  00F2               	movwf	___ftpack@arg+2
 11336  02F3  083C               	movf	___ftadd@exp1,w
 11337  02F4  00B6               	movwf	??___ftadd
 11338  02F5  0836               	movf	??___ftadd,w
 11339  02F6  00F3               	movwf	___ftpack@exp
 11340  02F7  083A               	movf	___ftadd@sign,w
 11341  02F8  00B7               	movwf	??___ftadd+1
 11342  02F9  0837               	movf	??___ftadd+1,w
 11343  02FA  00F4               	movwf	___ftpack@sign
 11344  02FB  318C  241B         	fcall	___ftpack
 11345  02FD  0870               	movf	?___ftpack,w
 11346  02FE  0020               	movlb	0	; select bank0
 11347  02FF  00B0               	movwf	?___ftadd
 11348  0300  0871               	movf	?___ftpack+1,w
 11349  0301  00B1               	movwf	?___ftadd+1
 11350  0302  0872               	movf	?___ftpack+2,w
 11351  0303  00B2               	movwf	?___ftadd+2
 11352  0304  0008               	return
 11353  0305                     __end_of___ftadd:	
 11354                           
 11355                           	psect	text39
 11356  0938                     __ptext39:	
 11357 ;; *************** function ___awtoft *****************
 11358 ;; Defined at:
 11359 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  c               2    8[COMMON] int 
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;  sign            1   13[COMMON] unsigned char 
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  3    8[COMMON] float 
 11366 ;; Registers used:
 11367 ;;		wreg, status,2, status,0, pclath, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;Total ram usage:        6 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:    1
 11380 ;; This function calls:
 11381 ;;		___ftpack
 11382 ;; This function is called by:
 11383 ;;		_PID_Calculate
 11384 ;;		_log
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           
 11389                           ;psect for function ___awtoft
 11390  0938                     ___awtoft:	
 11391                           
 11392                           ;incstack = 0
 11393                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11394  0938  01FD               	clrf	___awtoft@sign
 11395  0939  1FF9               	btfss	___awtoft@c+1,7
 11396  093A  2942               	goto	l2620
 11397  093B  09F8               	comf	___awtoft@c,f
 11398  093C  09F9               	comf	___awtoft@c+1,f
 11399  093D  0AF8               	incf	___awtoft@c,f
 11400  093E  1903               	skipnz
 11401  093F  0AF9               	incf	___awtoft@c+1,f
 11402  0940  01FD               	clrf	___awtoft@sign
 11403  0941  0AFD               	incf	___awtoft@sign,f
 11404  0942                     l2620:	
 11405  0942  0878               	movf	___awtoft@c,w
 11406  0943  00F0               	movwf	___ftpack@arg
 11407  0944  0879               	movf	___awtoft@c+1,w
 11408  0945  00F1               	movwf	___ftpack@arg+1
 11409  0946  01F2               	clrf	___ftpack@arg+2
 11410  0947  308E               	movlw	142
 11411  0948  00FB               	movwf	??___awtoft
 11412  0949  087B               	movf	??___awtoft,w
 11413  094A  00F3               	movwf	___ftpack@exp
 11414  094B  087D               	movf	___awtoft@sign,w
 11415  094C  00FC               	movwf	??___awtoft+1
 11416  094D  087C               	movf	??___awtoft+1,w
 11417  094E  00F4               	movwf	___ftpack@sign
 11418  094F  318C  241B         	fcall	___ftpack
 11419  0951  0870               	movf	?___ftpack,w
 11420  0952  00F8               	movwf	?___awtoft
 11421  0953  0871               	movf	?___ftpack+1,w
 11422  0954  00F9               	movwf	?___awtoft+1
 11423  0955  0872               	movf	?___ftpack+2,w
 11424  0956  00FA               	movwf	?___awtoft+2
 11425  0957  0008               	return
 11426  0958                     __end_of___awtoft:	
 11427                           
 11428                           	psect	text40
 11429  0C1B                     __ptext40:	
 11430 ;; *************** function ___ftpack *****************
 11431 ;; Defined at:
 11432 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  arg             3    0[COMMON] unsigned um
 11435 ;;  exp             1    3[COMMON] unsigned char 
 11436 ;;  sign            1    4[COMMON] unsigned char 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;		None
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  3    0[COMMON] float 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11448 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;Total ram usage:        8 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		___awtoft
 11458 ;;		___ftadd
 11459 ;;		___ftdiv
 11460 ;;		___ftmul
 11461 ;;		___lbtoft
 11462 ;;		___lwtoft
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           
 11467                           ;psect for function ___ftpack
 11468  0C1B                     ___ftpack:	
 11469                           
 11470                           ;incstack = 0
 11471                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11472  0C1B  0873               	movf	___ftpack@exp,w
 11473  0C1C  1903               	btfsc	3,2
 11474  0C1D  2C23               	goto	l2066
 11475  0C1E  0872               	movf	___ftpack@arg+2,w
 11476  0C1F  0471               	iorwf	___ftpack@arg+1,w
 11477  0C20  0470               	iorwf	___ftpack@arg,w
 11478  0C21  1D03               	skipz
 11479  0C22  2C34               	goto	l2072
 11480  0C23                     l2066:	
 11481  0C23  3000               	movlw	0
 11482  0C24  00F0               	movwf	?___ftpack
 11483  0C25  3000               	movlw	0
 11484  0C26  00F1               	movwf	?___ftpack+1
 11485  0C27  3000               	movlw	0
 11486  0C28  00F2               	movwf	?___ftpack+2
 11487  0C29  0008               	return
 11488  0C2A                     l2070:	
 11489  0C2A  3001               	movlw	1
 11490  0C2B  00F5               	movwf	??___ftpack
 11491  0C2C  0875               	movf	??___ftpack,w
 11492  0C2D  07F3               	addwf	___ftpack@exp,f
 11493  0C2E  3001               	movlw	1
 11494  0C2F                     u1715:	
 11495  0C2F  36F2               	lsrf	___ftpack@arg+2,f
 11496  0C30  0CF1               	rrf	___ftpack@arg+1,f
 11497  0C31  0CF0               	rrf	___ftpack@arg,f
 11498  0C32  0B89               	decfsz	9,f
 11499  0C33  2C2F               	goto	u1715
 11500  0C34                     l2072:	
 11501  0C34  30FE               	movlw	254
 11502  0C35  0572               	andwf	___ftpack@arg+2,w
 11503  0C36  1903               	btfsc	3,2
 11504  0C37  2C4D               	goto	l641
 11505  0C38  2C2A               	goto	l2070
 11506  0C39                     l2074:	
 11507  0C39  3001               	movlw	1
 11508  0C3A  00F5               	movwf	??___ftpack
 11509  0C3B  0875               	movf	??___ftpack,w
 11510  0C3C  07F3               	addwf	___ftpack@exp,f
 11511  0C3D  3001               	movlw	1
 11512  0C3E  07F0               	addwf	___ftpack@arg,f
 11513  0C3F  3000               	movlw	0
 11514  0C40  1803               	skipnc
 11515  0C41  3001               	movlw	1
 11516  0C42  07F1               	addwf	___ftpack@arg+1,f
 11517  0C43  3000               	movlw	0
 11518  0C44  1803               	skipnc
 11519  0C45  3001               	movlw	1
 11520  0C46  07F2               	addwf	___ftpack@arg+2,f
 11521  0C47  3001               	movlw	1
 11522  0C48                     u1735:	
 11523  0C48  36F2               	lsrf	___ftpack@arg+2,f
 11524  0C49  0CF1               	rrf	___ftpack@arg+1,f
 11525  0C4A  0CF0               	rrf	___ftpack@arg,f
 11526  0C4B  0B89               	decfsz	9,f
 11527  0C4C  2C48               	goto	u1735
 11528  0C4D                     l641:	
 11529  0C4D  30FF               	movlw	255
 11530  0C4E  0572               	andwf	___ftpack@arg+2,w
 11531  0C4F  1903               	btfsc	3,2
 11532  0C50  2C5A               	goto	l2082
 11533  0C51  2C39               	goto	l2074
 11534  0C52                     l2080:	
 11535  0C52  3001               	movlw	1
 11536  0C53  02F3               	subwf	___ftpack@exp,f
 11537  0C54  3001               	movlw	1
 11538  0C55                     u1755:	
 11539  0C55  35F0               	lslf	___ftpack@arg,f
 11540  0C56  0DF1               	rlf	___ftpack@arg+1,f
 11541  0C57  0DF2               	rlf	___ftpack@arg+2,f
 11542  0C58  0B89               	decfsz	9,f
 11543  0C59  2C55               	goto	u1755
 11544  0C5A                     l2082:	
 11545  0C5A  1BF1               	btfsc	___ftpack@arg+1,7
 11546  0C5B  2C60               	goto	l648
 11547  0C5C  3002               	movlw	2
 11548  0C5D  0273               	subwf	___ftpack@exp,w
 11549  0C5E  1803               	skipnc
 11550  0C5F  2C52               	goto	l2080
 11551  0C60                     l648:	
 11552  0C60  1873               	btfsc	___ftpack@exp,0
 11553  0C61  2C68               	goto	l649
 11554  0C62  30FF               	movlw	255
 11555  0C63  05F0               	andwf	___ftpack@arg,f
 11556  0C64  307F               	movlw	127
 11557  0C65  05F1               	andwf	___ftpack@arg+1,f
 11558  0C66  30FF               	movlw	255
 11559  0C67  05F2               	andwf	___ftpack@arg+2,f
 11560  0C68                     l649:	
 11561  0C68  1003               	clrc
 11562  0C69  0CF3               	rrf	___ftpack@exp,f
 11563  0C6A  0873               	movf	___ftpack@exp,w
 11564  0C6B  00F5               	movwf	??___ftpack
 11565  0C6C  01F6               	clrf	??___ftpack+1
 11566  0C6D  01F7               	clrf	??___ftpack+2
 11567  0C6E  3010               	movlw	16
 11568  0C6F                     u1795:	
 11569  0C6F  35F5               	lslf	??___ftpack,f
 11570  0C70  0DF6               	rlf	??___ftpack+1,f
 11571  0C71  0DF7               	rlf	??___ftpack+2,f
 11572  0C72  0B89               	decfsz	9,f
 11573  0C73  2C6F               	goto	u1795
 11574  0C74  0875               	movf	??___ftpack,w
 11575  0C75  04F0               	iorwf	___ftpack@arg,f
 11576  0C76  0876               	movf	??___ftpack+1,w
 11577  0C77  04F1               	iorwf	___ftpack@arg+1,f
 11578  0C78  0877               	movf	??___ftpack+2,w
 11579  0C79  04F2               	iorwf	___ftpack@arg+2,f
 11580  0C7A  0874               	movf	___ftpack@sign,w
 11581  0C7B  1903               	btfsc	3,2
 11582  0C7C  0008               	return
 11583  0C7D  17F2               	bsf	___ftpack@arg+2,7
 11584  0C7E  0008               	return
 11585  0C7F                     __end_of___ftpack:	
 11586                           
 11587                           	psect	text41
 11588  081E                     __ptext41:	
 11589 ;; *************** function _ADCC_GetSingleConversion *****************
 11590 ;; Defined at:
 11591 ;;		line 52 in file "adcc.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  channel         1    wreg     enum E14259
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;  channel         1    3[COMMON] enum E14259
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  2    0[COMMON] unsigned int 
 11598 ;; Registers used:
 11599 ;;		wreg
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11605 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;Total ram usage:        4 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; This function calls:
 11612 ;;		Nothing
 11613 ;; This function is called by:
 11614 ;;		_main
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           
 11619                           ;psect for function _ADCC_GetSingleConversion
 11620  081E                     _ADCC_GetSingleConversion:	
 11621                           
 11622                           ;incstack = 0
 11623                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11624                           ;ADCC_GetSingleConversion@channel stored from wreg
 11625  081E  00F3               	movwf	ADCC_GetSingleConversion@channel
 11626                           
 11627                           ;adcc.c: 55: ADPCH = channel;
 11628  081F  0873               	movf	ADCC_GetSingleConversion@channel,w
 11629  0820  0021               	movlb	1	; select bank1
 11630  0821  009E               	movwf	30	;volatile
 11631                           
 11632                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11633  0822  1793               	bsf	19,7	;volatile
 11634                           
 11635                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11636  0823  1313               	bcf	19,6	;volatile
 11637                           
 11638                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11639  0824  1413               	bsf	19,0	;volatile
 11640  0825                     l101:	
 11641                           ;adcc.c: 68: {
 11642                           
 11643                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11644                           
 11645  0825  1813               	btfsc	19,0	;volatile
 11646  0826  2825               	goto	l101
 11647                           
 11648                           ;adcc.c: 69: }
 11649                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11650  0827  080D               	movf	13,w	;volatile
 11651  0828  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11652  0829  080C               	movf	12,w	;volatile
 11653  082A  00F0               	movwf	?_ADCC_GetSingleConversion
 11654  082B  0008               	return
 11655  082C                     __end_of_ADCC_GetSingleConversion:	
 11656  007E                     btemp	set	126	;btemp
 11657  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     40      74
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   67676
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              2 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             61 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0     709
                                              7 COMMON     1     1      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0     220
                                              2 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       23    18      5   10694
                                             38 BANK0     23    18      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     204
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Oct 05 22:34:07 2017

                                _x 006D                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l101 0825  
                              l157 0D4B                                l192 0888  
                              l265 03BA                                l266 03E9  
                              l194 088E                                l267 047F  
                              l196 0893                                l198 0898  
                              l535 0015                                l480 0907  
                              l641 0C4D                                l732 0DD9  
                              l648 0C60                                l672 02AE  
                              l649 0C68                                _GIE 005F  
                              _RB0 0068                                _RA3 0063  
                              _RB1 0069                                _RA4 0064  
                              _RB2 006A                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0E9C  
                     ___awmod@sign 0076                    _TMR2_Initialize 084A  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 083B                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0AE6  
                     ___ftdiv@sign 002F                               l2020 088A  
                             l2102 0B74                               l2024 088F  
                             l3000 0A31                               l2120 0B93  
                             l2130 0BAE                               l2028 0894  
                             l2108 0B7F                               l2220 019B  
                             l2070 0C2A                               l2310 028D  
                             l2134 0BB6                               l2126 0BA5  
                             l2118 0B87                               l2150 0B36  
                             l2230 01BE                               l3022 04C4  
                             l2080 0C52                               l2072 0C34  
                             l2304 027A                               l2160 0B48  
                             l2224 019F                               l2208 0167  
                             l3112 07C0                               l3104 0780  
                             l2082 0C5A                               l2074 0C39  
                             l2066 0C23                               l2322 02C0  
                             l2306 0284                               l2146 0B2F  
                             l2242 01FB                               l2226 01A4  
                             l2218 016E                               l2316 02A0  
                             l2308 0289                               l2172 0B65  
                             l2164 0B54                               l2236 01C2  
                             l2228 01AD                               l2252 08E7  
                             l3036 055D                               l2326 02D2  
                             l2318 02AA                               l2158 0B3C  
                             l2238 01EE                               l2336 02ED  
                             l2280 023E                               l2352 0F79  
                             l2168 0B5D                               l2346 0F63  
                             l2258 0901                               l2186 0B06  
                             l2426 0D46                               l2620 0942  
                             l2276 0237                               l2380 0FD8  
                             l2364 0FB4                               l2436 0D5A  
                             l3068 06EA                               l2286 024D  
                             l2446 0D6A                               l2438 0D5B  
                             l2632 0AD7                               l2376 0FD0  
                             l2368 0FBC                               l2392 0CE7  
                             l2298 0267                               l3098 0771  
                             l2628 0AC1                               l2492 0976  
                             l2660 0A81                               l2732 0ECE  
                             l2812 00EA                               l2804 008F  
                             l2486 0965                               l2726 0EBB  
                             l2806 00DF                               l2832 012B  
                             l2860 0036                               l2852 0026  
                             l2916 0E7A                               l2908 0E61  
                             l2870 0064                               l2862 0044  
                             l2678 0C14                               l2768 04A7  
                             l2928 0922                               l2784 00A0  
                             l2874 006F                               l2970 0DEA  
                             l2938 0D85                               l2964 0DD0  
                             l2956 0DB5                               l2878 007D  
                             l2894 0E20                               l2966 0DDC  
                             l2958 0DC3                               l2990 0A16  
                             l2888 0E0A                               l2996 0A28  
                             l2988 0A0A                               ?_log 0047  
                             STR_1 1800                               STR_2 101B  
                             STR_3 101B                               STR_4 101B  
                             u2015 0AF2                               u2040 0151  
                             u2105 01DC                               u2035 0B11  
                             u3005 0E71                               _LATA 0016  
                             _LATB 0017                               u3015 0E7B  
                             _LATC 0018                               u2305 027B  
                             u3115 0DD1                               u2155 0908  
                             u2165 090D                               u2335 028E  
                             u3055 0D8C                               u2505 0FD9  
                             _T2PR 028D                               u1715 0C2F  
                             u2275 0268                               u2515 0FDF  
                             u2435 0F85                               u3155 0A0D  
                             u3307 0D3A                               u2365 02A1  
                             u2445 0F95                               u3317 0A51  
                             u3085 0DB6                               u2630 0A00  
                             u1735 0C48                               u3407 0CC0  
                             u3327 0A5C                               u3175 0A17  
                             u2465 0FBD                               u3417 0CCB  
                             u3337 0A67                               u3185 0A21  
                      main@counter 00BA                               u1755 0C55  
                             u2475 0FC3                               u3427 0CD7  
                             u3347 0C87                               u3195 0A29  
                             u1685 09B6                               u3437 0CE3  
                             u3357 0C93                               u1845 0B8A  
                             u3277 00D6                               u3447 09C1  
                             u3367 0C9C                               u3287 0123  
                             u3457 09CC                               u3377 0CA3  
                             u2905 0045                               u1865 0B94  
                             u1945 0B3F                               u3297 013C  
                             u1795 0C6F                               u3467 0837  
                             u3387 0CAA                               u2915 0059  
                             u1875 0B9E                               u3397 0CB5  
                             u2925 0065                               u1885 0BA6  
                             u1965 0B4E                               u1975 0B55  
                             u2795 087B                               u2885 0039  
                             u2975 0E32                               u2985 0E42  
                             u2995 0E62                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B6                        main@seconds 00B8  
                             _main 04AF                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             start 0002                 ??_LCD_Write_String 0077  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 0146  
                     ___ftmul@sign 002F                       ___fttol@exp1 006A  
                     ___fttol@lval 0066                              ??_log 004A  
          __end_of_TMR0_Initialize 084A                   __end_of_LCD_Init 0CE6  
                 __end_of_LCD_Port 089A                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 17F4  
                  __end_of___aldiv 0086                              _ADACQ 009D  
                            _ADACT 0099                              _ADCAP 009B  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0BBB                              _ADPRE 009C  
                  __end_of___ftadd 0305                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0B6A                              _ADRPT 010D  
                  __end_of___ftdiv 0E9C                    __end_of___ftneg 17E4  
                  __end_of___ftmul 1000                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0938                    __end_of___fttol 0DF3  
                            _T2CON 028E                main@readTemperature 00BC  
                            _T2HLT 028F                    __end_of___lwdiv 0A36  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0811  
           __end_of_LCD_Set_Cursor 0B25                      ___awtoft@sign 007D  
                            _frexp 0A6F                              _errno 00DC  
                    ___ftpack@sign 0074                              main@R 00AE  
                   __CFG_BOREN$OFF 0000                              status 0003  
                            wtemp0 007E                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 09A6  
                  __initialization 07C7                        log@exponent 004B  
                     __end_of_main 07C7                   __end_of_Init_PID 09A6  
          __end_of_TMR2_Initialize 0859                             ??_main 00A0  
                    ___fttol@sign1 0065                  __end_of_LCD_Clear 17EC  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0072  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0958  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0C7F  
                 __end_of___lbtoft 08E5                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 086C  
                           _PID_Kd 00D3                             _PID_Ki 00D6  
                           _PID_Kp 00D9                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 09D0  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0AAA             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 08FF  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0061                          ??___lwdiv 007A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 081E  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 08B2  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00C5                    _InitCustomChars 0958  
                  LCD_Set_Cursor@w 0077                    LCD_Set_Cursor@x 0075  
                  LCD_Set_Cursor@y 0072                    LCD_Set_Cursor@z 0076  
                    _pidIntegrated 00D0                  _SYSTEM_Initialize 0A36  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0073                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005D  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK1 17D6                       __pidataBANK2 089A  
              ??_SYSTEM_Initialize 0077                      __end_of_frexp 0AAA  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
             __size_of_readButtons 0086                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0A6F                         __pbssBANK0 006B  
                       __pbssBANK1 00C8                 __size_of_eval_poly 0060  
                        ?_Init_PID 0070                         ??_LCD_Init 0072  
                       ??_LCD_Port 0070             __size_of_PID_Calculate 01AA  
              PID_Calculate@Result 0057                         __pmaintext 04AF  
                          ?___ftge 003D                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 08CB  
       __end_of_PWM6_LoadDutyValue 0882          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 097E  
                          _LCD_Cmd 082C                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                       ??_Init_PID 0070              PID_Calculate@setpoint 0046  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0004                            ___cgram 0120  
                  __size_of___ftge 003C                            ___awdiv 0B6A  
                          ___ftadd 020F                            ___awmod 0B25  
                          ___ftdiv 0DF3                            ___ftneg 17DC  
                  __size_of___wmul 001B                            ___ftmul 0F4C  
                          ___ftsub 091A                            ___fttol 0D6C  
                          ___lwdiv 0A02                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0C1B                   ??_LCD_Set_Cursor 0073  
                          __ptext1 0086                            __ptext2 0CE6  
                          __ptext3 08E5                            __ptext4 0146  
                          __ptext5 0B25                            __ptext6 0B6A  
                          __ptext7 0AE6                            __ptext8 0E9C  
                          __ptext9 0A6F                         ??___lwtoft 007B  
                    _PID_Calculate 0305       PID_Calculate@derivativeValue 0051  
            _OSCILLATOR_Initialize 17EC                          _T2CONbits 028E  
                     __size_of_log 00B0                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 006E                            _samples 238C  
                        _LCD_Clear 17E4                            _presets 00E4  
       __size_of_SYSTEM_Initialize 0039                            clrloop0 17F5  
             end_of_initialization 07FD                            init_ram 0805  
                          initloop 0806                     ??_tempSetpoint 0031  
        PID_Calculate@pidPrevError 0054                   ___aldiv@quotient 0022  
          PID_Calculate@errorValue 004B                  LCD_Write_Int@sign 007D  
              tempSetpoint@counter 0034                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 082C              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0046                 _PID_Calculate$1076 004E  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 0067  
                       main@toggle 00BE                  __size_of_LCD_Port 0018  
                       main@totals 00C1                        ___ftmul@exp 002A  
                   __end_of___ftge 0AE6                     __end_of___wmul 091A  
                 _LCD_Write_String 08E5             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07C7                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 0F4C                         frexp@value 0070  
         LCD_Write_Int@fieldLength 007B                  __size_of_Init_PID 0028  
            __end_of_LCD_Write_Int 020F                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 0074  
                     _pidMaxOutput 00DE                        __pdataBANK1 00E4  
                      __pdataBANK2 0120                    ??_PID_Calculate 007E  
                    ??_readButtons 002E                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                       _pidMinOutput 006B  
                         ?_LCD_Cmd 0070                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 081E                  __size_of___ftpack 0064  
                __size_of___lbtoft 001A                        __pbssBIGRAM 238C  
                         LCD_Cmd@a 0071                          ___latbits 0002  
                __size_of___lwtoft 0013                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0               __end_of_tempSetpoint 0146  
               _PWM6_LoadDutyValue 086C           __size_of_TMR2_Initialize 000F  
                      ??_LCD_Clear 0072                       _pidPrevInput 00CD  
              ?_PWM6_LoadDutyValue 0070                          _main$1075 00B1  
                 ___lwdiv@dividend 0078             _PIN_MANAGER_Initialize 09D0  
               PID_Calculate@error 005A                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0030                           ?___awmod 0070  
                         ?___ftdiv 0020                           ?___ftneg 0070  
                         ?___ftmul 0020                           ?___ftsub 003D  
                         ?___fttol 005D                           ?___lwdiv 0076  
                  main@displayTemp 00BF               ??_PWM6_LoadDutyValue 0072  
                        _downCount 006F                          _eval_poly 0BBB  
              __end_of_readButtons 0D6C           __size_of_PWM6_Initialize 000D  
                 ___lwdiv@quotient 007B                     __size_of_frexp 003B  
                         _T2CLKCON 0290                    ___aldiv@divisor 0070  
                ??_TMR0_Initialize 0070                    ___aldiv@counter 0020  
                         _LCD_Init 0C7F                     ___wmul@product 0074  
                         _LCD_Port 0882                          clear_ram0 17F4  
                         _PIE0bits 0716                           _PIR0bits 070C  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0070                         ?_eval_poly 003D  
                 __size_of_LCD_Cmd 000F           __end_of_LCD_Write_String 08FF  
                         _Init_PID 097E                  ??_TMR2_Initialize 0070  
                        frexp@eptr 0073            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 002C                     LCD_Write_Int@j 002A  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0008  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0087                   __size_of___lwdiv 0034  
                      _readButtons 0CE6                           ___awtoft 0938  
                         ___ftpack 0C1B                           ___lbtoft 08CB  
            __size_of_tempSetpoint 00C0                           ___lwtoft 0859  
                       _T0CON0bits 001E           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 00E0                    ___lwdiv@divisor 0076  
                      _oldSetpoint 00E3                    ___lwdiv@counter 007D  
                PID_Calculate@temp 0048                           __ptext10 0BBB  
                         __ptext11 08FF                           __ptext20 084A  
                         __ptext12 0859                           __ptext21 083B  
                         __ptext13 0A02                           __ptext30 082C  
                         __ptext22 0811                           __ptext14 08CB  
                         __ptext31 0882                           __ptext23 09D0  
                         __ptext15 0D6C                           __ptext40 0C1B  
                         __ptext32 08B2                           __ptext24 17EC  
                         __ptext16 091A                           __ptext41 081E  
                         __ptext33 086C                           __ptext25 0C7F  
                         __ptext17 0DF3                           __ptext34 0305  
                         __ptext26 17E4                           __ptext18 0004  
                         __ptext35 17DC                           __ptext27 097E  
                         __ptext19 0A36                           __ptext36 0F4C  
                         __ptext28 0958                           __ptext37 0AAA  
                         __ptext29 09A6                           __ptext38 020F  
                         __ptext39 0938            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0026                LCD_Write_Int@F14394 00C8  
                ??_PWM6_Initialize 0070                      __size_of_main 0318  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 0086  
       ??_ADCC_GetSingleConversion 0073                           _setpoint 00E9  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
               LCD_Set_Cursor@temp 0078                 LCD_Write_Int@value 0079  
                    __pstringtext1 1000                      __pstringtext2 1800  
                    __pstringtext3 0000              __end_of_PID_Calculate 04AF  
                  _TMR0_Initialize 083B                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0A02                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00B4                        _toggleCount 00E2  
                ??_InitCustomChars 0075  
