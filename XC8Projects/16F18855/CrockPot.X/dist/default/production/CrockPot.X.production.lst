

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Sep 11 16:48:05 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x620,48
    60                           	dabs	1,0x5BC,52
    61                           	dabs	1,0x238C,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  001C                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0198                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  020F                     	;# 
   172  020F                     	;# 
   173  0210                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021B                     	;# 
   191  021C                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  028C                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  028F                     	;# 
   203  0290                     	;# 
   204  0290                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0296                     	;# 
   214  0297                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029C                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  030C                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  030E                     	;# 
   228  030F                     	;# 
   229  0310                     	;# 
   230  0310                     	;# 
   231  0311                     	;# 
   232  0312                     	;# 
   233  0313                     	;# 
   234  0314                     	;# 
   235  0314                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  031B                     	;# 
   244  031C                     	;# 
   245  031C                     	;# 
   246  031D                     	;# 
   247  031E                     	;# 
   248  031F                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0390                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  040C                     	;# 
   256  040D                     	;# 
   257  040E                     	;# 
   258  040F                     	;# 
   259  0410                     	;# 
   260  0411                     	;# 
   261  0416                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041C                     	;# 
   272  041D                     	;# 
   273  041E                     	;# 
   274  041F                     	;# 
   275  048C                     	;# 
   276  048C                     	;# 
   277  048D                     	;# 
   278  048E                     	;# 
   279  048F                     	;# 
   280  048F                     	;# 
   281  0490                     	;# 
   282  0491                     	;# 
   283  0492                     	;# 
   284  0492                     	;# 
   285  0493                     	;# 
   286  0494                     	;# 
   287  0495                     	;# 
   288  0495                     	;# 
   289  0496                     	;# 
   290  0497                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  050C                     	;# 
   298  050C                     	;# 
   299  050D                     	;# 
   300  050E                     	;# 
   301  050F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0512                     	;# 
   307  0513                     	;# 
   308  0514                     	;# 
   309  0515                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  051B                     	;# 
   317  051C                     	;# 
   318  051D                     	;# 
   319  058C                     	;# 
   320  058C                     	;# 
   321  058D                     	;# 
   322  058E                     	;# 
   323  058F                     	;# 
   324  058F                     	;# 
   325  0590                     	;# 
   326  0591                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  060C                     	;# 
   330  060D                     	;# 
   331  060E                     	;# 
   332  060F                     	;# 
   333  0610                     	;# 
   334  0611                     	;# 
   335  0612                     	;# 
   336  0613                     	;# 
   337  0614                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0618                     	;# 
   341  0619                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  061D                     	;# 
   346  061E                     	;# 
   347  068C                     	;# 
   348  068D                     	;# 
   349  068E                     	;# 
   350  068F                     	;# 
   351  0690                     	;# 
   352  0691                     	;# 
   353  0692                     	;# 
   354  0693                     	;# 
   355  0694                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  070F                     	;# 
   360  0710                     	;# 
   361  0711                     	;# 
   362  0712                     	;# 
   363  0713                     	;# 
   364  0714                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  0796                     	;# 
   375  0797                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  079A                     	;# 
   379  079B                     	;# 
   380  080C                     	;# 
   381  080D                     	;# 
   382  080E                     	;# 
   383  080F                     	;# 
   384  0810                     	;# 
   385  0811                     	;# 
   386  0812                     	;# 
   387  0813                     	;# 
   388  0814                     	;# 
   389  081A                     	;# 
   390  081B                     	;# 
   391  081C                     	;# 
   392  081D                     	;# 
   393  081E                     	;# 
   394  081F                     	;# 
   395  088C                     	;# 
   396  088D                     	;# 
   397  088E                     	;# 
   398  088F                     	;# 
   399  0890                     	;# 
   400  0891                     	;# 
   401  0892                     	;# 
   402  0893                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0897                     	;# 
   406  0898                     	;# 
   407  0899                     	;# 
   408  089A                     	;# 
   409  089B                     	;# 
   410  090C                     	;# 
   411  090E                     	;# 
   412  090F                     	;# 
   413  091F                     	;# 
   414  091F                     	;# 
   415  098F                     	;# 
   416  098F                     	;# 
   417  0990                     	;# 
   418  0991                     	;# 
   419  0992                     	;# 
   420  0993                     	;# 
   421  0994                     	;# 
   422  0995                     	;# 
   423  0996                     	;# 
   424  0997                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E23                     	;# 
   446  0E24                     	;# 
   447  0E25                     	;# 
   448  0E26                     	;# 
   449  0E27                     	;# 
   450  0E28                     	;# 
   451  0E29                     	;# 
   452  0E2A                     	;# 
   453  0E2B                     	;# 
   454  0E2C                     	;# 
   455  0E2D                     	;# 
   456  0E2E                     	;# 
   457  0E2F                     	;# 
   458  0E30                     	;# 
   459  0E31                     	;# 
   460  0E32                     	;# 
   461  0E33                     	;# 
   462  0E34                     	;# 
   463  0E35                     	;# 
   464  0E36                     	;# 
   465  0E37                     	;# 
   466  0E8F                     	;# 
   467  0E90                     	;# 
   468  0E91                     	;# 
   469  0E92                     	;# 
   470  0E93                     	;# 
   471  0E94                     	;# 
   472  0E95                     	;# 
   473  0E96                     	;# 
   474  0E97                     	;# 
   475  0E9C                     	;# 
   476  0E9D                     	;# 
   477  0E9E                     	;# 
   478  0EA1                     	;# 
   479  0EA2                     	;# 
   480  0EA3                     	;# 
   481  0EA4                     	;# 
   482  0EA5                     	;# 
   483  0EA9                     	;# 
   484  0EAA                     	;# 
   485  0EAB                     	;# 
   486  0EAC                     	;# 
   487  0EB1                     	;# 
   488  0EB2                     	;# 
   489  0EB3                     	;# 
   490  0EB8                     	;# 
   491  0EB9                     	;# 
   492  0EBA                     	;# 
   493  0EBB                     	;# 
   494  0EBC                     	;# 
   495  0EBD                     	;# 
   496  0EBE                     	;# 
   497  0EC3                     	;# 
   498  0EC5                     	;# 
   499  0EC6                     	;# 
   500  0EC7                     	;# 
   501  0EC8                     	;# 
   502  0EC9                     	;# 
   503  0ECA                     	;# 
   504  0ECB                     	;# 
   505  0ECC                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F38                     	;# 
   531  0F39                     	;# 
   532  0F3A                     	;# 
   533  0F3B                     	;# 
   534  0F3C                     	;# 
   535  0F3D                     	;# 
   536  0F3E                     	;# 
   537  0F3F                     	;# 
   538  0F40                     	;# 
   539  0F41                     	;# 
   540  0F43                     	;# 
   541  0F44                     	;# 
   542  0F45                     	;# 
   543  0F46                     	;# 
   544  0F47                     	;# 
   545  0F48                     	;# 
   546  0F49                     	;# 
   547  0F4A                     	;# 
   548  0F4B                     	;# 
   549  0F4C                     	;# 
   550  0F4E                     	;# 
   551  0F4F                     	;# 
   552  0F50                     	;# 
   553  0F51                     	;# 
   554  0F52                     	;# 
   555  0F53                     	;# 
   556  0F54                     	;# 
   557  0F55                     	;# 
   558  0F56                     	;# 
   559  0F57                     	;# 
   560  0F65                     	;# 
   561  0F68                     	;# 
   562  0F69                     	;# 
   563  0F6A                     	;# 
   564  0F6B                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  001C                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0110                     	;# 
   631  0110                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011A                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011C                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011D                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011E                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  018E                     	;# 
   670  018F                     	;# 
   671  0190                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0196                     	;# 
   675  0197                     	;# 
   676  0198                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0218                     	;# 
   700  0219                     	;# 
   701  021A                     	;# 
   702  021B                     	;# 
   703  021B                     	;# 
   704  021C                     	;# 
   705  021C                     	;# 
   706  021D                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  028C                     	;# 
   711  028C                     	;# 
   712  028D                     	;# 
   713  028D                     	;# 
   714  028E                     	;# 
   715  028F                     	;# 
   716  0290                     	;# 
   717  0290                     	;# 
   718  0291                     	;# 
   719  0292                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0296                     	;# 
   726  0296                     	;# 
   727  0297                     	;# 
   728  0298                     	;# 
   729  0298                     	;# 
   730  0299                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  030C                     	;# 
   738  030C                     	;# 
   739  030D                     	;# 
   740  030E                     	;# 
   741  030F                     	;# 
   742  0310                     	;# 
   743  0310                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0317                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031B                     	;# 
   757  031C                     	;# 
   758  031C                     	;# 
   759  031D                     	;# 
   760  031E                     	;# 
   761  031F                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  040C                     	;# 
   769  040D                     	;# 
   770  040E                     	;# 
   771  040F                     	;# 
   772  0410                     	;# 
   773  0411                     	;# 
   774  0416                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  0418                     	;# 
   778  0418                     	;# 
   779  0419                     	;# 
   780  041A                     	;# 
   781  041A                     	;# 
   782  041B                     	;# 
   783  041C                     	;# 
   784  041C                     	;# 
   785  041D                     	;# 
   786  041E                     	;# 
   787  041F                     	;# 
   788  048C                     	;# 
   789  048C                     	;# 
   790  048D                     	;# 
   791  048E                     	;# 
   792  048F                     	;# 
   793  048F                     	;# 
   794  0490                     	;# 
   795  0491                     	;# 
   796  0492                     	;# 
   797  0492                     	;# 
   798  0493                     	;# 
   799  0494                     	;# 
   800  0495                     	;# 
   801  0495                     	;# 
   802  0496                     	;# 
   803  0497                     	;# 
   804  0498                     	;# 
   805  0499                     	;# 
   806  049A                     	;# 
   807  049B                     	;# 
   808  049C                     	;# 
   809  049D                     	;# 
   810  050C                     	;# 
   811  050C                     	;# 
   812  050D                     	;# 
   813  050E                     	;# 
   814  050F                     	;# 
   815  050F                     	;# 
   816  0510                     	;# 
   817  0511                     	;# 
   818  0512                     	;# 
   819  0512                     	;# 
   820  0513                     	;# 
   821  0514                     	;# 
   822  0515                     	;# 
   823  0515                     	;# 
   824  0516                     	;# 
   825  0517                     	;# 
   826  0518                     	;# 
   827  0519                     	;# 
   828  051A                     	;# 
   829  051B                     	;# 
   830  051C                     	;# 
   831  051D                     	;# 
   832  058C                     	;# 
   833  058C                     	;# 
   834  058D                     	;# 
   835  058E                     	;# 
   836  058F                     	;# 
   837  058F                     	;# 
   838  0590                     	;# 
   839  0591                     	;# 
   840  0592                     	;# 
   841  0593                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0618                     	;# 
   854  0619                     	;# 
   855  061A                     	;# 
   856  061B                     	;# 
   857  061C                     	;# 
   858  061D                     	;# 
   859  061E                     	;# 
   860  068C                     	;# 
   861  068D                     	;# 
   862  068E                     	;# 
   863  068F                     	;# 
   864  0690                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  070C                     	;# 
   870  070D                     	;# 
   871  070E                     	;# 
   872  070F                     	;# 
   873  0710                     	;# 
   874  0711                     	;# 
   875  0712                     	;# 
   876  0713                     	;# 
   877  0714                     	;# 
   878  0716                     	;# 
   879  0717                     	;# 
   880  0718                     	;# 
   881  0719                     	;# 
   882  071A                     	;# 
   883  071B                     	;# 
   884  071C                     	;# 
   885  071D                     	;# 
   886  071E                     	;# 
   887  0796                     	;# 
   888  0797                     	;# 
   889  0798                     	;# 
   890  0799                     	;# 
   891  079A                     	;# 
   892  079B                     	;# 
   893  080C                     	;# 
   894  080D                     	;# 
   895  080E                     	;# 
   896  080F                     	;# 
   897  0810                     	;# 
   898  0811                     	;# 
   899  0812                     	;# 
   900  0813                     	;# 
   901  0814                     	;# 
   902  081A                     	;# 
   903  081B                     	;# 
   904  081C                     	;# 
   905  081D                     	;# 
   906  081E                     	;# 
   907  081F                     	;# 
   908  088C                     	;# 
   909  088D                     	;# 
   910  088E                     	;# 
   911  088F                     	;# 
   912  0890                     	;# 
   913  0891                     	;# 
   914  0892                     	;# 
   915  0893                     	;# 
   916  0895                     	;# 
   917  0896                     	;# 
   918  0897                     	;# 
   919  0898                     	;# 
   920  0899                     	;# 
   921  089A                     	;# 
   922  089B                     	;# 
   923  090C                     	;# 
   924  090E                     	;# 
   925  090F                     	;# 
   926  091F                     	;# 
   927  091F                     	;# 
   928  098F                     	;# 
   929  098F                     	;# 
   930  0990                     	;# 
   931  0991                     	;# 
   932  0992                     	;# 
   933  0993                     	;# 
   934  0994                     	;# 
   935  0995                     	;# 
   936  0996                     	;# 
   937  0997                     	;# 
   938  0E0F                     	;# 
   939  0E10                     	;# 
   940  0E11                     	;# 
   941  0E12                     	;# 
   942  0E13                     	;# 
   943  0E14                     	;# 
   944  0E15                     	;# 
   945  0E16                     	;# 
   946  0E17                     	;# 
   947  0E18                     	;# 
   948  0E19                     	;# 
   949  0E1A                     	;# 
   950  0E1B                     	;# 
   951  0E1C                     	;# 
   952  0E1D                     	;# 
   953  0E1E                     	;# 
   954  0E1F                     	;# 
   955  0E20                     	;# 
   956  0E21                     	;# 
   957  0E22                     	;# 
   958  0E23                     	;# 
   959  0E24                     	;# 
   960  0E25                     	;# 
   961  0E26                     	;# 
   962  0E27                     	;# 
   963  0E28                     	;# 
   964  0E29                     	;# 
   965  0E2A                     	;# 
   966  0E2B                     	;# 
   967  0E2C                     	;# 
   968  0E2D                     	;# 
   969  0E2E                     	;# 
   970  0E2F                     	;# 
   971  0E30                     	;# 
   972  0E31                     	;# 
   973  0E32                     	;# 
   974  0E33                     	;# 
   975  0E34                     	;# 
   976  0E35                     	;# 
   977  0E36                     	;# 
   978  0E37                     	;# 
   979  0E8F                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E95                     	;# 
   986  0E96                     	;# 
   987  0E97                     	;# 
   988  0E9C                     	;# 
   989  0E9D                     	;# 
   990  0E9E                     	;# 
   991  0EA1                     	;# 
   992  0EA2                     	;# 
   993  0EA3                     	;# 
   994  0EA4                     	;# 
   995  0EA5                     	;# 
   996  0EA9                     	;# 
   997  0EAA                     	;# 
   998  0EAB                     	;# 
   999  0EAC                     	;# 
  1000  0EB1                     	;# 
  1001  0EB2                     	;# 
  1002  0EB3                     	;# 
  1003  0EB8                     	;# 
  1004  0EB9                     	;# 
  1005  0EBA                     	;# 
  1006  0EBB                     	;# 
  1007  0EBC                     	;# 
  1008  0EBD                     	;# 
  1009  0EBE                     	;# 
  1010  0EC3                     	;# 
  1011  0EC5                     	;# 
  1012  0EC6                     	;# 
  1013  0EC7                     	;# 
  1014  0EC8                     	;# 
  1015  0EC9                     	;# 
  1016  0ECA                     	;# 
  1017  0ECB                     	;# 
  1018  0ECC                     	;# 
  1019  0F10                     	;# 
  1020  0F11                     	;# 
  1021  0F12                     	;# 
  1022  0F13                     	;# 
  1023  0F14                     	;# 
  1024  0F15                     	;# 
  1025  0F16                     	;# 
  1026  0F17                     	;# 
  1027  0F18                     	;# 
  1028  0F19                     	;# 
  1029  0F1A                     	;# 
  1030  0F1B                     	;# 
  1031  0F1C                     	;# 
  1032  0F1D                     	;# 
  1033  0F1E                     	;# 
  1034  0F1F                     	;# 
  1035  0F20                     	;# 
  1036  0F21                     	;# 
  1037  0F22                     	;# 
  1038  0F23                     	;# 
  1039  0F24                     	;# 
  1040  0F25                     	;# 
  1041  0F26                     	;# 
  1042  0F27                     	;# 
  1043  0F38                     	;# 
  1044  0F39                     	;# 
  1045  0F3A                     	;# 
  1046  0F3B                     	;# 
  1047  0F3C                     	;# 
  1048  0F3D                     	;# 
  1049  0F3E                     	;# 
  1050  0F3F                     	;# 
  1051  0F40                     	;# 
  1052  0F41                     	;# 
  1053  0F43                     	;# 
  1054  0F44                     	;# 
  1055  0F45                     	;# 
  1056  0F46                     	;# 
  1057  0F47                     	;# 
  1058  0F48                     	;# 
  1059  0F49                     	;# 
  1060  0F4A                     	;# 
  1061  0F4B                     	;# 
  1062  0F4C                     	;# 
  1063  0F4E                     	;# 
  1064  0F4F                     	;# 
  1065  0F50                     	;# 
  1066  0F51                     	;# 
  1067  0F52                     	;# 
  1068  0F53                     	;# 
  1069  0F54                     	;# 
  1070  0F55                     	;# 
  1071  0F56                     	;# 
  1072  0F57                     	;# 
  1073  0F65                     	;# 
  1074  0F68                     	;# 
  1075  0F69                     	;# 
  1076  0F6A                     	;# 
  1077  0F6B                     	;# 
  1078  0FE4                     	;# 
  1079  0FE5                     	;# 
  1080  0FE6                     	;# 
  1081  0FE7                     	;# 
  1082  0FE8                     	;# 
  1083  0FE9                     	;# 
  1084  0FEA                     	;# 
  1085  0FEB                     	;# 
  1086  0FED                     	;# 
  1087  0FEE                     	;# 
  1088  0FEF                     	;# 
  1089  0000                     	;# 
  1090  0001                     	;# 
  1091  0002                     	;# 
  1092  0003                     	;# 
  1093  0004                     	;# 
  1094  0005                     	;# 
  1095  0006                     	;# 
  1096  0007                     	;# 
  1097  0008                     	;# 
  1098  0009                     	;# 
  1099  000A                     	;# 
  1100  000B                     	;# 
  1101  000C                     	;# 
  1102  000D                     	;# 
  1103  000E                     	;# 
  1104  0010                     	;# 
  1105  0011                     	;# 
  1106  0012                     	;# 
  1107  0013                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  001C                     	;# 
  1112  001C                     	;# 
  1113  001D                     	;# 
  1114  001D                     	;# 
  1115  001E                     	;# 
  1116  001F                     	;# 
  1117  008C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0090                     	;# 
  1125  0091                     	;# 
  1126  0093                     	;# 
  1127  0094                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0097                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009A                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  010C                     	;# 
  1139  010D                     	;# 
  1140  010E                     	;# 
  1141  010E                     	;# 
  1142  010F                     	;# 
  1143  0110                     	;# 
  1144  0110                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0114                     	;# 
  1151  0115                     	;# 
  1152  0116                     	;# 
  1153  0116                     	;# 
  1154  0117                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  0119                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011C                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011D                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011E                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182  018E                     	;# 
  1183  018F                     	;# 
  1184  0190                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0196                     	;# 
  1188  0197                     	;# 
  1189  0198                     	;# 
  1190  0199                     	;# 
  1191  019A                     	;# 
  1192  019B                     	;# 
  1193  019C                     	;# 
  1194  020C                     	;# 
  1195  020D                     	;# 
  1196  020E                     	;# 
  1197  020F                     	;# 
  1198  020F                     	;# 
  1199  0210                     	;# 
  1200  0210                     	;# 
  1201  0211                     	;# 
  1202  0211                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0216                     	;# 
  1209  0216                     	;# 
  1210  0217                     	;# 
  1211  0217                     	;# 
  1212  0218                     	;# 
  1213  0219                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0290                     	;# 
  1231  0291                     	;# 
  1232  0292                     	;# 
  1233  0292                     	;# 
  1234  0293                     	;# 
  1235  0293                     	;# 
  1236  0294                     	;# 
  1237  0295                     	;# 
  1238  0296                     	;# 
  1239  0296                     	;# 
  1240  0297                     	;# 
  1241  0298                     	;# 
  1242  0298                     	;# 
  1243  0299                     	;# 
  1244  0299                     	;# 
  1245  029A                     	;# 
  1246  029B                     	;# 
  1247  029C                     	;# 
  1248  029C                     	;# 
  1249  029D                     	;# 
  1250  030C                     	;# 
  1251  030C                     	;# 
  1252  030D                     	;# 
  1253  030E                     	;# 
  1254  030F                     	;# 
  1255  0310                     	;# 
  1256  0310                     	;# 
  1257  0311                     	;# 
  1258  0312                     	;# 
  1259  0313                     	;# 
  1260  0314                     	;# 
  1261  0314                     	;# 
  1262  0315                     	;# 
  1263  0316                     	;# 
  1264  0317                     	;# 
  1265  0318                     	;# 
  1266  0318                     	;# 
  1267  0319                     	;# 
  1268  031A                     	;# 
  1269  031B                     	;# 
  1270  031C                     	;# 
  1271  031C                     	;# 
  1272  031D                     	;# 
  1273  031E                     	;# 
  1274  031F                     	;# 
  1275  038C                     	;# 
  1276  038D                     	;# 
  1277  038E                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  040C                     	;# 
  1282  040D                     	;# 
  1283  040E                     	;# 
  1284  040F                     	;# 
  1285  0410                     	;# 
  1286  0411                     	;# 
  1287  0416                     	;# 
  1288  0416                     	;# 
  1289  0417                     	;# 
  1290  0418                     	;# 
  1291  0418                     	;# 
  1292  0419                     	;# 
  1293  041A                     	;# 
  1294  041A                     	;# 
  1295  041B                     	;# 
  1296  041C                     	;# 
  1297  041C                     	;# 
  1298  041D                     	;# 
  1299  041E                     	;# 
  1300  041F                     	;# 
  1301  048C                     	;# 
  1302  048C                     	;# 
  1303  048D                     	;# 
  1304  048E                     	;# 
  1305  048F                     	;# 
  1306  048F                     	;# 
  1307  0490                     	;# 
  1308  0491                     	;# 
  1309  0492                     	;# 
  1310  0492                     	;# 
  1311  0493                     	;# 
  1312  0494                     	;# 
  1313  0495                     	;# 
  1314  0495                     	;# 
  1315  0496                     	;# 
  1316  0497                     	;# 
  1317  0498                     	;# 
  1318  0499                     	;# 
  1319  049A                     	;# 
  1320  049B                     	;# 
  1321  049C                     	;# 
  1322  049D                     	;# 
  1323  050C                     	;# 
  1324  050C                     	;# 
  1325  050D                     	;# 
  1326  050E                     	;# 
  1327  050F                     	;# 
  1328  050F                     	;# 
  1329  0510                     	;# 
  1330  0511                     	;# 
  1331  0512                     	;# 
  1332  0512                     	;# 
  1333  0513                     	;# 
  1334  0514                     	;# 
  1335  0515                     	;# 
  1336  0515                     	;# 
  1337  0516                     	;# 
  1338  0517                     	;# 
  1339  0518                     	;# 
  1340  0519                     	;# 
  1341  051A                     	;# 
  1342  051B                     	;# 
  1343  051C                     	;# 
  1344  051D                     	;# 
  1345  058C                     	;# 
  1346  058C                     	;# 
  1347  058D                     	;# 
  1348  058E                     	;# 
  1349  058F                     	;# 
  1350  058F                     	;# 
  1351  0590                     	;# 
  1352  0591                     	;# 
  1353  0592                     	;# 
  1354  0593                     	;# 
  1355  060C                     	;# 
  1356  060D                     	;# 
  1357  060E                     	;# 
  1358  060F                     	;# 
  1359  0610                     	;# 
  1360  0611                     	;# 
  1361  0612                     	;# 
  1362  0613                     	;# 
  1363  0614                     	;# 
  1364  0616                     	;# 
  1365  0617                     	;# 
  1366  0618                     	;# 
  1367  0619                     	;# 
  1368  061A                     	;# 
  1369  061B                     	;# 
  1370  061C                     	;# 
  1371  061D                     	;# 
  1372  061E                     	;# 
  1373  068C                     	;# 
  1374  068D                     	;# 
  1375  068E                     	;# 
  1376  068F                     	;# 
  1377  0690                     	;# 
  1378  0691                     	;# 
  1379  0692                     	;# 
  1380  0693                     	;# 
  1381  0694                     	;# 
  1382  070C                     	;# 
  1383  070D                     	;# 
  1384  070E                     	;# 
  1385  070F                     	;# 
  1386  0710                     	;# 
  1387  0711                     	;# 
  1388  0712                     	;# 
  1389  0713                     	;# 
  1390  0714                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  071A                     	;# 
  1396  071B                     	;# 
  1397  071C                     	;# 
  1398  071D                     	;# 
  1399  071E                     	;# 
  1400  0796                     	;# 
  1401  0797                     	;# 
  1402  0798                     	;# 
  1403  0799                     	;# 
  1404  079A                     	;# 
  1405  079B                     	;# 
  1406  080C                     	;# 
  1407  080D                     	;# 
  1408  080E                     	;# 
  1409  080F                     	;# 
  1410  0810                     	;# 
  1411  0811                     	;# 
  1412  0812                     	;# 
  1413  0813                     	;# 
  1414  0814                     	;# 
  1415  081A                     	;# 
  1416  081B                     	;# 
  1417  081C                     	;# 
  1418  081D                     	;# 
  1419  081E                     	;# 
  1420  081F                     	;# 
  1421  088C                     	;# 
  1422  088D                     	;# 
  1423  088E                     	;# 
  1424  088F                     	;# 
  1425  0890                     	;# 
  1426  0891                     	;# 
  1427  0892                     	;# 
  1428  0893                     	;# 
  1429  0895                     	;# 
  1430  0896                     	;# 
  1431  0897                     	;# 
  1432  0898                     	;# 
  1433  0899                     	;# 
  1434  089A                     	;# 
  1435  089B                     	;# 
  1436  090C                     	;# 
  1437  090E                     	;# 
  1438  090F                     	;# 
  1439  091F                     	;# 
  1440  091F                     	;# 
  1441  098F                     	;# 
  1442  098F                     	;# 
  1443  0990                     	;# 
  1444  0991                     	;# 
  1445  0992                     	;# 
  1446  0993                     	;# 
  1447  0994                     	;# 
  1448  0995                     	;# 
  1449  0996                     	;# 
  1450  0997                     	;# 
  1451  0E0F                     	;# 
  1452  0E10                     	;# 
  1453  0E11                     	;# 
  1454  0E12                     	;# 
  1455  0E13                     	;# 
  1456  0E14                     	;# 
  1457  0E15                     	;# 
  1458  0E16                     	;# 
  1459  0E17                     	;# 
  1460  0E18                     	;# 
  1461  0E19                     	;# 
  1462  0E1A                     	;# 
  1463  0E1B                     	;# 
  1464  0E1C                     	;# 
  1465  0E1D                     	;# 
  1466  0E1E                     	;# 
  1467  0E1F                     	;# 
  1468  0E20                     	;# 
  1469  0E21                     	;# 
  1470  0E22                     	;# 
  1471  0E23                     	;# 
  1472  0E24                     	;# 
  1473  0E25                     	;# 
  1474  0E26                     	;# 
  1475  0E27                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E30                     	;# 
  1485  0E31                     	;# 
  1486  0E32                     	;# 
  1487  0E33                     	;# 
  1488  0E34                     	;# 
  1489  0E35                     	;# 
  1490  0E36                     	;# 
  1491  0E37                     	;# 
  1492  0E8F                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E93                     	;# 
  1497  0E94                     	;# 
  1498  0E95                     	;# 
  1499  0E96                     	;# 
  1500  0E97                     	;# 
  1501  0E9C                     	;# 
  1502  0E9D                     	;# 
  1503  0E9E                     	;# 
  1504  0EA1                     	;# 
  1505  0EA2                     	;# 
  1506  0EA3                     	;# 
  1507  0EA4                     	;# 
  1508  0EA5                     	;# 
  1509  0EA9                     	;# 
  1510  0EAA                     	;# 
  1511  0EAB                     	;# 
  1512  0EAC                     	;# 
  1513  0EB1                     	;# 
  1514  0EB2                     	;# 
  1515  0EB3                     	;# 
  1516  0EB8                     	;# 
  1517  0EB9                     	;# 
  1518  0EBA                     	;# 
  1519  0EBB                     	;# 
  1520  0EBC                     	;# 
  1521  0EBD                     	;# 
  1522  0EBE                     	;# 
  1523  0EC3                     	;# 
  1524  0EC5                     	;# 
  1525  0EC6                     	;# 
  1526  0EC7                     	;# 
  1527  0EC8                     	;# 
  1528  0EC9                     	;# 
  1529  0ECA                     	;# 
  1530  0ECB                     	;# 
  1531  0ECC                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F38                     	;# 
  1557  0F39                     	;# 
  1558  0F3A                     	;# 
  1559  0F3B                     	;# 
  1560  0F3C                     	;# 
  1561  0F3D                     	;# 
  1562  0F3E                     	;# 
  1563  0F3F                     	;# 
  1564  0F40                     	;# 
  1565  0F41                     	;# 
  1566  0F43                     	;# 
  1567  0F44                     	;# 
  1568  0F45                     	;# 
  1569  0F46                     	;# 
  1570  0F47                     	;# 
  1571  0F48                     	;# 
  1572  0F49                     	;# 
  1573  0F4A                     	;# 
  1574  0F4B                     	;# 
  1575  0F4C                     	;# 
  1576  0F4E                     	;# 
  1577  0F4F                     	;# 
  1578  0F50                     	;# 
  1579  0F51                     	;# 
  1580  0F52                     	;# 
  1581  0F53                     	;# 
  1582  0F54                     	;# 
  1583  0F55                     	;# 
  1584  0F56                     	;# 
  1585  0F57                     	;# 
  1586  0F65                     	;# 
  1587  0F68                     	;# 
  1588  0F69                     	;# 
  1589  0F6A                     	;# 
  1590  0F6B                     	;# 
  1591  0FE4                     	;# 
  1592  0FE5                     	;# 
  1593  0FE6                     	;# 
  1594  0FE7                     	;# 
  1595  0FE8                     	;# 
  1596  0FE9                     	;# 
  1597  0FEA                     	;# 
  1598  0FEB                     	;# 
  1599  0FED                     	;# 
  1600  0FEE                     	;# 
  1601  0FEF                     	;# 
  1602  0000                     	;# 
  1603  0001                     	;# 
  1604  0002                     	;# 
  1605  0003                     	;# 
  1606  0004                     	;# 
  1607  0005                     	;# 
  1608  0006                     	;# 
  1609  0007                     	;# 
  1610  0008                     	;# 
  1611  0009                     	;# 
  1612  000A                     	;# 
  1613  000B                     	;# 
  1614  000C                     	;# 
  1615  000D                     	;# 
  1616  000E                     	;# 
  1617  0010                     	;# 
  1618  0011                     	;# 
  1619  0012                     	;# 
  1620  0013                     	;# 
  1621  0016                     	;# 
  1622  0017                     	;# 
  1623  0018                     	;# 
  1624  001C                     	;# 
  1625  001C                     	;# 
  1626  001D                     	;# 
  1627  001D                     	;# 
  1628  001E                     	;# 
  1629  001F                     	;# 
  1630  008C                     	;# 
  1631  008C                     	;# 
  1632  008D                     	;# 
  1633  008E                     	;# 
  1634  008E                     	;# 
  1635  008F                     	;# 
  1636  0090                     	;# 
  1637  0090                     	;# 
  1638  0091                     	;# 
  1639  0093                     	;# 
  1640  0094                     	;# 
  1641  0095                     	;# 
  1642  0096                     	;# 
  1643  0097                     	;# 
  1644  0098                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009C                     	;# 
  1649  009D                     	;# 
  1650  009E                     	;# 
  1651  010C                     	;# 
  1652  010D                     	;# 
  1653  010E                     	;# 
  1654  010E                     	;# 
  1655  010F                     	;# 
  1656  0110                     	;# 
  1657  0110                     	;# 
  1658  0111                     	;# 
  1659  0112                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0116                     	;# 
  1667  0117                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  0119                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011A                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011C                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011D                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011E                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  018F                     	;# 
  1697  0190                     	;# 
  1698  0191                     	;# 
  1699  0192                     	;# 
  1700  0196                     	;# 
  1701  0197                     	;# 
  1702  0198                     	;# 
  1703  0199                     	;# 
  1704  019A                     	;# 
  1705  019B                     	;# 
  1706  019C                     	;# 
  1707  020C                     	;# 
  1708  020D                     	;# 
  1709  020E                     	;# 
  1710  020F                     	;# 
  1711  020F                     	;# 
  1712  0210                     	;# 
  1713  0210                     	;# 
  1714  0211                     	;# 
  1715  0211                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0215                     	;# 
  1720  0215                     	;# 
  1721  0216                     	;# 
  1722  0216                     	;# 
  1723  0217                     	;# 
  1724  0217                     	;# 
  1725  0218                     	;# 
  1726  0219                     	;# 
  1727  021A                     	;# 
  1728  021B                     	;# 
  1729  021B                     	;# 
  1730  021C                     	;# 
  1731  021C                     	;# 
  1732  021D                     	;# 
  1733  021D                     	;# 
  1734  021E                     	;# 
  1735  021F                     	;# 
  1736  028C                     	;# 
  1737  028C                     	;# 
  1738  028D                     	;# 
  1739  028D                     	;# 
  1740  028E                     	;# 
  1741  028F                     	;# 
  1742  0290                     	;# 
  1743  0290                     	;# 
  1744  0291                     	;# 
  1745  0292                     	;# 
  1746  0292                     	;# 
  1747  0293                     	;# 
  1748  0293                     	;# 
  1749  0294                     	;# 
  1750  0295                     	;# 
  1751  0296                     	;# 
  1752  0296                     	;# 
  1753  0297                     	;# 
  1754  0298                     	;# 
  1755  0298                     	;# 
  1756  0299                     	;# 
  1757  0299                     	;# 
  1758  029A                     	;# 
  1759  029B                     	;# 
  1760  029C                     	;# 
  1761  029C                     	;# 
  1762  029D                     	;# 
  1763  030C                     	;# 
  1764  030C                     	;# 
  1765  030D                     	;# 
  1766  030E                     	;# 
  1767  030F                     	;# 
  1768  0310                     	;# 
  1769  0310                     	;# 
  1770  0311                     	;# 
  1771  0312                     	;# 
  1772  0313                     	;# 
  1773  0314                     	;# 
  1774  0314                     	;# 
  1775  0315                     	;# 
  1776  0316                     	;# 
  1777  0317                     	;# 
  1778  0318                     	;# 
  1779  0318                     	;# 
  1780  0319                     	;# 
  1781  031A                     	;# 
  1782  031B                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  031F                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  0390                     	;# 
  1792  0391                     	;# 
  1793  0392                     	;# 
  1794  040C                     	;# 
  1795  040D                     	;# 
  1796  040E                     	;# 
  1797  040F                     	;# 
  1798  0410                     	;# 
  1799  0411                     	;# 
  1800  0416                     	;# 
  1801  0416                     	;# 
  1802  0417                     	;# 
  1803  0418                     	;# 
  1804  0418                     	;# 
  1805  0419                     	;# 
  1806  041A                     	;# 
  1807  041A                     	;# 
  1808  041B                     	;# 
  1809  041C                     	;# 
  1810  041C                     	;# 
  1811  041D                     	;# 
  1812  041E                     	;# 
  1813  041F                     	;# 
  1814  048C                     	;# 
  1815  048C                     	;# 
  1816  048D                     	;# 
  1817  048E                     	;# 
  1818  048F                     	;# 
  1819  048F                     	;# 
  1820  0490                     	;# 
  1821  0491                     	;# 
  1822  0492                     	;# 
  1823  0492                     	;# 
  1824  0493                     	;# 
  1825  0494                     	;# 
  1826  0495                     	;# 
  1827  0495                     	;# 
  1828  0496                     	;# 
  1829  0497                     	;# 
  1830  0498                     	;# 
  1831  0499                     	;# 
  1832  049A                     	;# 
  1833  049B                     	;# 
  1834  049C                     	;# 
  1835  049D                     	;# 
  1836  050C                     	;# 
  1837  050C                     	;# 
  1838  050D                     	;# 
  1839  050E                     	;# 
  1840  050F                     	;# 
  1841  050F                     	;# 
  1842  0510                     	;# 
  1843  0511                     	;# 
  1844  0512                     	;# 
  1845  0512                     	;# 
  1846  0513                     	;# 
  1847  0514                     	;# 
  1848  0515                     	;# 
  1849  0515                     	;# 
  1850  0516                     	;# 
  1851  0517                     	;# 
  1852  0518                     	;# 
  1853  0519                     	;# 
  1854  051A                     	;# 
  1855  051B                     	;# 
  1856  051C                     	;# 
  1857  051D                     	;# 
  1858  058C                     	;# 
  1859  058C                     	;# 
  1860  058D                     	;# 
  1861  058E                     	;# 
  1862  058F                     	;# 
  1863  058F                     	;# 
  1864  0590                     	;# 
  1865  0591                     	;# 
  1866  0592                     	;# 
  1867  0593                     	;# 
  1868  060C                     	;# 
  1869  060D                     	;# 
  1870  060E                     	;# 
  1871  060F                     	;# 
  1872  0610                     	;# 
  1873  0611                     	;# 
  1874  0612                     	;# 
  1875  0613                     	;# 
  1876  0614                     	;# 
  1877  0616                     	;# 
  1878  0617                     	;# 
  1879  0618                     	;# 
  1880  0619                     	;# 
  1881  061A                     	;# 
  1882  061B                     	;# 
  1883  061C                     	;# 
  1884  061D                     	;# 
  1885  061E                     	;# 
  1886  068C                     	;# 
  1887  068D                     	;# 
  1888  068E                     	;# 
  1889  068F                     	;# 
  1890  0690                     	;# 
  1891  0691                     	;# 
  1892  0692                     	;# 
  1893  0693                     	;# 
  1894  0694                     	;# 
  1895  070C                     	;# 
  1896  070D                     	;# 
  1897  070E                     	;# 
  1898  070F                     	;# 
  1899  0710                     	;# 
  1900  0711                     	;# 
  1901  0712                     	;# 
  1902  0713                     	;# 
  1903  0714                     	;# 
  1904  0716                     	;# 
  1905  0717                     	;# 
  1906  0718                     	;# 
  1907  0719                     	;# 
  1908  071A                     	;# 
  1909  071B                     	;# 
  1910  071C                     	;# 
  1911  071D                     	;# 
  1912  071E                     	;# 
  1913  0796                     	;# 
  1914  0797                     	;# 
  1915  0798                     	;# 
  1916  0799                     	;# 
  1917  079A                     	;# 
  1918  079B                     	;# 
  1919  080C                     	;# 
  1920  080D                     	;# 
  1921  080E                     	;# 
  1922  080F                     	;# 
  1923  0810                     	;# 
  1924  0811                     	;# 
  1925  0812                     	;# 
  1926  0813                     	;# 
  1927  0814                     	;# 
  1928  081A                     	;# 
  1929  081B                     	;# 
  1930  081C                     	;# 
  1931  081D                     	;# 
  1932  081E                     	;# 
  1933  081F                     	;# 
  1934  088C                     	;# 
  1935  088D                     	;# 
  1936  088E                     	;# 
  1937  088F                     	;# 
  1938  0890                     	;# 
  1939  0891                     	;# 
  1940  0892                     	;# 
  1941  0893                     	;# 
  1942  0895                     	;# 
  1943  0896                     	;# 
  1944  0897                     	;# 
  1945  0898                     	;# 
  1946  0899                     	;# 
  1947  089A                     	;# 
  1948  089B                     	;# 
  1949  090C                     	;# 
  1950  090E                     	;# 
  1951  090F                     	;# 
  1952  091F                     	;# 
  1953  091F                     	;# 
  1954  098F                     	;# 
  1955  098F                     	;# 
  1956  0990                     	;# 
  1957  0991                     	;# 
  1958  0992                     	;# 
  1959  0993                     	;# 
  1960  0994                     	;# 
  1961  0995                     	;# 
  1962  0996                     	;# 
  1963  0997                     	;# 
  1964  0E0F                     	;# 
  1965  0E10                     	;# 
  1966  0E11                     	;# 
  1967  0E12                     	;# 
  1968  0E13                     	;# 
  1969  0E14                     	;# 
  1970  0E15                     	;# 
  1971  0E16                     	;# 
  1972  0E17                     	;# 
  1973  0E18                     	;# 
  1974  0E19                     	;# 
  1975  0E1A                     	;# 
  1976  0E1B                     	;# 
  1977  0E1C                     	;# 
  1978  0E1D                     	;# 
  1979  0E1E                     	;# 
  1980  0E1F                     	;# 
  1981  0E20                     	;# 
  1982  0E21                     	;# 
  1983  0E22                     	;# 
  1984  0E23                     	;# 
  1985  0E24                     	;# 
  1986  0E25                     	;# 
  1987  0E26                     	;# 
  1988  0E27                     	;# 
  1989  0E28                     	;# 
  1990  0E29                     	;# 
  1991  0E2A                     	;# 
  1992  0E2B                     	;# 
  1993  0E2C                     	;# 
  1994  0E2D                     	;# 
  1995  0E2E                     	;# 
  1996  0E2F                     	;# 
  1997  0E30                     	;# 
  1998  0E31                     	;# 
  1999  0E32                     	;# 
  2000  0E33                     	;# 
  2001  0E34                     	;# 
  2002  0E35                     	;# 
  2003  0E36                     	;# 
  2004  0E37                     	;# 
  2005  0E8F                     	;# 
  2006  0E90                     	;# 
  2007  0E91                     	;# 
  2008  0E92                     	;# 
  2009  0E93                     	;# 
  2010  0E94                     	;# 
  2011  0E95                     	;# 
  2012  0E96                     	;# 
  2013  0E97                     	;# 
  2014  0E9C                     	;# 
  2015  0E9D                     	;# 
  2016  0E9E                     	;# 
  2017  0EA1                     	;# 
  2018  0EA2                     	;# 
  2019  0EA3                     	;# 
  2020  0EA4                     	;# 
  2021  0EA5                     	;# 
  2022  0EA9                     	;# 
  2023  0EAA                     	;# 
  2024  0EAB                     	;# 
  2025  0EAC                     	;# 
  2026  0EB1                     	;# 
  2027  0EB2                     	;# 
  2028  0EB3                     	;# 
  2029  0EB8                     	;# 
  2030  0EB9                     	;# 
  2031  0EBA                     	;# 
  2032  0EBB                     	;# 
  2033  0EBC                     	;# 
  2034  0EBD                     	;# 
  2035  0EBE                     	;# 
  2036  0EC3                     	;# 
  2037  0EC5                     	;# 
  2038  0EC6                     	;# 
  2039  0EC7                     	;# 
  2040  0EC8                     	;# 
  2041  0EC9                     	;# 
  2042  0ECA                     	;# 
  2043  0ECB                     	;# 
  2044  0ECC                     	;# 
  2045  0F10                     	;# 
  2046  0F11                     	;# 
  2047  0F12                     	;# 
  2048  0F13                     	;# 
  2049  0F14                     	;# 
  2050  0F15                     	;# 
  2051  0F16                     	;# 
  2052  0F17                     	;# 
  2053  0F18                     	;# 
  2054  0F19                     	;# 
  2055  0F1A                     	;# 
  2056  0F1B                     	;# 
  2057  0F1C                     	;# 
  2058  0F1D                     	;# 
  2059  0F1E                     	;# 
  2060  0F1F                     	;# 
  2061  0F20                     	;# 
  2062  0F21                     	;# 
  2063  0F22                     	;# 
  2064  0F23                     	;# 
  2065  0F24                     	;# 
  2066  0F25                     	;# 
  2067  0F26                     	;# 
  2068  0F27                     	;# 
  2069  0F38                     	;# 
  2070  0F39                     	;# 
  2071  0F3A                     	;# 
  2072  0F3B                     	;# 
  2073  0F3C                     	;# 
  2074  0F3D                     	;# 
  2075  0F3E                     	;# 
  2076  0F3F                     	;# 
  2077  0F40                     	;# 
  2078  0F41                     	;# 
  2079  0F43                     	;# 
  2080  0F44                     	;# 
  2081  0F45                     	;# 
  2082  0F46                     	;# 
  2083  0F47                     	;# 
  2084  0F48                     	;# 
  2085  0F49                     	;# 
  2086  0F4A                     	;# 
  2087  0F4B                     	;# 
  2088  0F4C                     	;# 
  2089  0F4E                     	;# 
  2090  0F4F                     	;# 
  2091  0F50                     	;# 
  2092  0F51                     	;# 
  2093  0F52                     	;# 
  2094  0F53                     	;# 
  2095  0F54                     	;# 
  2096  0F55                     	;# 
  2097  0F56                     	;# 
  2098  0F57                     	;# 
  2099  0F65                     	;# 
  2100  0F68                     	;# 
  2101  0F69                     	;# 
  2102  0F6A                     	;# 
  2103  0F6B                     	;# 
  2104  0FE4                     	;# 
  2105  0FE5                     	;# 
  2106  0FE6                     	;# 
  2107  0FE7                     	;# 
  2108  0FE8                     	;# 
  2109  0FE9                     	;# 
  2110  0FEA                     	;# 
  2111  0FEB                     	;# 
  2112  0FED                     	;# 
  2113  0FEE                     	;# 
  2114  0FEF                     	;# 
  2115  0000                     	;# 
  2116  0001                     	;# 
  2117  0002                     	;# 
  2118  0003                     	;# 
  2119  0004                     	;# 
  2120  0005                     	;# 
  2121  0006                     	;# 
  2122  0007                     	;# 
  2123  0008                     	;# 
  2124  0009                     	;# 
  2125  000A                     	;# 
  2126  000B                     	;# 
  2127  000C                     	;# 
  2128  000D                     	;# 
  2129  000E                     	;# 
  2130  0010                     	;# 
  2131  0011                     	;# 
  2132  0012                     	;# 
  2133  0013                     	;# 
  2134  0016                     	;# 
  2135  0017                     	;# 
  2136  0018                     	;# 
  2137  001C                     	;# 
  2138  001C                     	;# 
  2139  001D                     	;# 
  2140  001D                     	;# 
  2141  001E                     	;# 
  2142  001F                     	;# 
  2143  008C                     	;# 
  2144  008C                     	;# 
  2145  008D                     	;# 
  2146  008E                     	;# 
  2147  008E                     	;# 
  2148  008F                     	;# 
  2149  0090                     	;# 
  2150  0090                     	;# 
  2151  0091                     	;# 
  2152  0093                     	;# 
  2153  0094                     	;# 
  2154  0095                     	;# 
  2155  0096                     	;# 
  2156  0097                     	;# 
  2157  0098                     	;# 
  2158  0099                     	;# 
  2159  009A                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  010C                     	;# 
  2165  010D                     	;# 
  2166  010E                     	;# 
  2167  010E                     	;# 
  2168  010F                     	;# 
  2169  0110                     	;# 
  2170  0110                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0114                     	;# 
  2177  0115                     	;# 
  2178  0116                     	;# 
  2179  0116                     	;# 
  2180  0117                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  0119                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011C                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011D                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011E                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  018C                     	;# 
  2207  018D                     	;# 
  2208  018E                     	;# 
  2209  018F                     	;# 
  2210  0190                     	;# 
  2211  0191                     	;# 
  2212  0192                     	;# 
  2213  0196                     	;# 
  2214  0197                     	;# 
  2215  0198                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019B                     	;# 
  2219  019C                     	;# 
  2220  020C                     	;# 
  2221  020D                     	;# 
  2222  020E                     	;# 
  2223  020F                     	;# 
  2224  020F                     	;# 
  2225  0210                     	;# 
  2226  0210                     	;# 
  2227  0211                     	;# 
  2228  0211                     	;# 
  2229  0212                     	;# 
  2230  0213                     	;# 
  2231  0214                     	;# 
  2232  0215                     	;# 
  2233  0215                     	;# 
  2234  0216                     	;# 
  2235  0216                     	;# 
  2236  0217                     	;# 
  2237  0217                     	;# 
  2238  0218                     	;# 
  2239  0219                     	;# 
  2240  021A                     	;# 
  2241  021B                     	;# 
  2242  021B                     	;# 
  2243  021C                     	;# 
  2244  021C                     	;# 
  2245  021D                     	;# 
  2246  021D                     	;# 
  2247  021E                     	;# 
  2248  021F                     	;# 
  2249  028C                     	;# 
  2250  028C                     	;# 
  2251  028D                     	;# 
  2252  028D                     	;# 
  2253  028E                     	;# 
  2254  028F                     	;# 
  2255  0290                     	;# 
  2256  0290                     	;# 
  2257  0291                     	;# 
  2258  0292                     	;# 
  2259  0292                     	;# 
  2260  0293                     	;# 
  2261  0293                     	;# 
  2262  0294                     	;# 
  2263  0295                     	;# 
  2264  0296                     	;# 
  2265  0296                     	;# 
  2266  0297                     	;# 
  2267  0298                     	;# 
  2268  0298                     	;# 
  2269  0299                     	;# 
  2270  0299                     	;# 
  2271  029A                     	;# 
  2272  029B                     	;# 
  2273  029C                     	;# 
  2274  029C                     	;# 
  2275  029D                     	;# 
  2276  030C                     	;# 
  2277  030C                     	;# 
  2278  030D                     	;# 
  2279  030E                     	;# 
  2280  030F                     	;# 
  2281  0310                     	;# 
  2282  0310                     	;# 
  2283  0311                     	;# 
  2284  0312                     	;# 
  2285  0313                     	;# 
  2286  0314                     	;# 
  2287  0314                     	;# 
  2288  0315                     	;# 
  2289  0316                     	;# 
  2290  0317                     	;# 
  2291  0318                     	;# 
  2292  0318                     	;# 
  2293  0319                     	;# 
  2294  031A                     	;# 
  2295  031B                     	;# 
  2296  031C                     	;# 
  2297  031C                     	;# 
  2298  031D                     	;# 
  2299  031E                     	;# 
  2300  031F                     	;# 
  2301  038C                     	;# 
  2302  038D                     	;# 
  2303  038E                     	;# 
  2304  0390                     	;# 
  2305  0391                     	;# 
  2306  0392                     	;# 
  2307  040C                     	;# 
  2308  040D                     	;# 
  2309  040E                     	;# 
  2310  040F                     	;# 
  2311  0410                     	;# 
  2312  0411                     	;# 
  2313  0416                     	;# 
  2314  0416                     	;# 
  2315  0417                     	;# 
  2316  0418                     	;# 
  2317  0418                     	;# 
  2318  0419                     	;# 
  2319  041A                     	;# 
  2320  041A                     	;# 
  2321  041B                     	;# 
  2322  041C                     	;# 
  2323  041C                     	;# 
  2324  041D                     	;# 
  2325  041E                     	;# 
  2326  041F                     	;# 
  2327  048C                     	;# 
  2328  048C                     	;# 
  2329  048D                     	;# 
  2330  048E                     	;# 
  2331  048F                     	;# 
  2332  048F                     	;# 
  2333  0490                     	;# 
  2334  0491                     	;# 
  2335  0492                     	;# 
  2336  0492                     	;# 
  2337  0493                     	;# 
  2338  0494                     	;# 
  2339  0495                     	;# 
  2340  0495                     	;# 
  2341  0496                     	;# 
  2342  0497                     	;# 
  2343  0498                     	;# 
  2344  0499                     	;# 
  2345  049A                     	;# 
  2346  049B                     	;# 
  2347  049C                     	;# 
  2348  049D                     	;# 
  2349  050C                     	;# 
  2350  050C                     	;# 
  2351  050D                     	;# 
  2352  050E                     	;# 
  2353  050F                     	;# 
  2354  050F                     	;# 
  2355  0510                     	;# 
  2356  0511                     	;# 
  2357  0512                     	;# 
  2358  0512                     	;# 
  2359  0513                     	;# 
  2360  0514                     	;# 
  2361  0515                     	;# 
  2362  0515                     	;# 
  2363  0516                     	;# 
  2364  0517                     	;# 
  2365  0518                     	;# 
  2366  0519                     	;# 
  2367  051A                     	;# 
  2368  051B                     	;# 
  2369  051C                     	;# 
  2370  051D                     	;# 
  2371  058C                     	;# 
  2372  058C                     	;# 
  2373  058D                     	;# 
  2374  058E                     	;# 
  2375  058F                     	;# 
  2376  058F                     	;# 
  2377  0590                     	;# 
  2378  0591                     	;# 
  2379  0592                     	;# 
  2380  0593                     	;# 
  2381  060C                     	;# 
  2382  060D                     	;# 
  2383  060E                     	;# 
  2384  060F                     	;# 
  2385  0610                     	;# 
  2386  0611                     	;# 
  2387  0612                     	;# 
  2388  0613                     	;# 
  2389  0614                     	;# 
  2390  0616                     	;# 
  2391  0617                     	;# 
  2392  0618                     	;# 
  2393  0619                     	;# 
  2394  061A                     	;# 
  2395  061B                     	;# 
  2396  061C                     	;# 
  2397  061D                     	;# 
  2398  061E                     	;# 
  2399  068C                     	;# 
  2400  068D                     	;# 
  2401  068E                     	;# 
  2402  068F                     	;# 
  2403  0690                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  070C                     	;# 
  2409  070D                     	;# 
  2410  070E                     	;# 
  2411  070F                     	;# 
  2412  0710                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0716                     	;# 
  2418  0717                     	;# 
  2419  0718                     	;# 
  2420  0719                     	;# 
  2421  071A                     	;# 
  2422  071B                     	;# 
  2423  071C                     	;# 
  2424  071D                     	;# 
  2425  071E                     	;# 
  2426  0796                     	;# 
  2427  0797                     	;# 
  2428  0798                     	;# 
  2429  0799                     	;# 
  2430  079A                     	;# 
  2431  079B                     	;# 
  2432  080C                     	;# 
  2433  080D                     	;# 
  2434  080E                     	;# 
  2435  080F                     	;# 
  2436  0810                     	;# 
  2437  0811                     	;# 
  2438  0812                     	;# 
  2439  0813                     	;# 
  2440  0814                     	;# 
  2441  081A                     	;# 
  2442  081B                     	;# 
  2443  081C                     	;# 
  2444  081D                     	;# 
  2445  081E                     	;# 
  2446  081F                     	;# 
  2447  088C                     	;# 
  2448  088D                     	;# 
  2449  088E                     	;# 
  2450  088F                     	;# 
  2451  0890                     	;# 
  2452  0891                     	;# 
  2453  0892                     	;# 
  2454  0893                     	;# 
  2455  0895                     	;# 
  2456  0896                     	;# 
  2457  0897                     	;# 
  2458  0898                     	;# 
  2459  0899                     	;# 
  2460  089A                     	;# 
  2461  089B                     	;# 
  2462  090C                     	;# 
  2463  090E                     	;# 
  2464  090F                     	;# 
  2465  091F                     	;# 
  2466  091F                     	;# 
  2467  098F                     	;# 
  2468  098F                     	;# 
  2469  0990                     	;# 
  2470  0991                     	;# 
  2471  0992                     	;# 
  2472  0993                     	;# 
  2473  0994                     	;# 
  2474  0995                     	;# 
  2475  0996                     	;# 
  2476  0997                     	;# 
  2477  0E0F                     	;# 
  2478  0E10                     	;# 
  2479  0E11                     	;# 
  2480  0E12                     	;# 
  2481  0E13                     	;# 
  2482  0E14                     	;# 
  2483  0E15                     	;# 
  2484  0E16                     	;# 
  2485  0E17                     	;# 
  2486  0E18                     	;# 
  2487  0E19                     	;# 
  2488  0E1A                     	;# 
  2489  0E1B                     	;# 
  2490  0E1C                     	;# 
  2491  0E1D                     	;# 
  2492  0E1E                     	;# 
  2493  0E1F                     	;# 
  2494  0E20                     	;# 
  2495  0E21                     	;# 
  2496  0E22                     	;# 
  2497  0E23                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E26                     	;# 
  2501  0E27                     	;# 
  2502  0E28                     	;# 
  2503  0E29                     	;# 
  2504  0E2A                     	;# 
  2505  0E2B                     	;# 
  2506  0E2C                     	;# 
  2507  0E2D                     	;# 
  2508  0E2E                     	;# 
  2509  0E2F                     	;# 
  2510  0E30                     	;# 
  2511  0E31                     	;# 
  2512  0E32                     	;# 
  2513  0E33                     	;# 
  2514  0E34                     	;# 
  2515  0E35                     	;# 
  2516  0E36                     	;# 
  2517  0E37                     	;# 
  2518  0E8F                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E93                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E96                     	;# 
  2526  0E97                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA9                     	;# 
  2536  0EAA                     	;# 
  2537  0EAB                     	;# 
  2538  0EAC                     	;# 
  2539  0EB1                     	;# 
  2540  0EB2                     	;# 
  2541  0EB3                     	;# 
  2542  0EB8                     	;# 
  2543  0EB9                     	;# 
  2544  0EBA                     	;# 
  2545  0EBB                     	;# 
  2546  0EBC                     	;# 
  2547  0EBD                     	;# 
  2548  0EBE                     	;# 
  2549  0EC3                     	;# 
  2550  0EC5                     	;# 
  2551  0EC6                     	;# 
  2552  0EC7                     	;# 
  2553  0EC8                     	;# 
  2554  0EC9                     	;# 
  2555  0ECA                     	;# 
  2556  0ECB                     	;# 
  2557  0ECC                     	;# 
  2558  0F10                     	;# 
  2559  0F11                     	;# 
  2560  0F12                     	;# 
  2561  0F13                     	;# 
  2562  0F14                     	;# 
  2563  0F15                     	;# 
  2564  0F16                     	;# 
  2565  0F17                     	;# 
  2566  0F18                     	;# 
  2567  0F19                     	;# 
  2568  0F1A                     	;# 
  2569  0F1B                     	;# 
  2570  0F1C                     	;# 
  2571  0F1D                     	;# 
  2572  0F1E                     	;# 
  2573  0F1F                     	;# 
  2574  0F20                     	;# 
  2575  0F21                     	;# 
  2576  0F22                     	;# 
  2577  0F23                     	;# 
  2578  0F24                     	;# 
  2579  0F25                     	;# 
  2580  0F26                     	;# 
  2581  0F27                     	;# 
  2582  0F38                     	;# 
  2583  0F39                     	;# 
  2584  0F3A                     	;# 
  2585  0F3B                     	;# 
  2586  0F3C                     	;# 
  2587  0F3D                     	;# 
  2588  0F3E                     	;# 
  2589  0F3F                     	;# 
  2590  0F40                     	;# 
  2591  0F41                     	;# 
  2592  0F43                     	;# 
  2593  0F44                     	;# 
  2594  0F45                     	;# 
  2595  0F46                     	;# 
  2596  0F47                     	;# 
  2597  0F48                     	;# 
  2598  0F49                     	;# 
  2599  0F4A                     	;# 
  2600  0F4B                     	;# 
  2601  0F4C                     	;# 
  2602  0F4E                     	;# 
  2603  0F4F                     	;# 
  2604  0F50                     	;# 
  2605  0F51                     	;# 
  2606  0F52                     	;# 
  2607  0F53                     	;# 
  2608  0F54                     	;# 
  2609  0F55                     	;# 
  2610  0F56                     	;# 
  2611  0F57                     	;# 
  2612  0F65                     	;# 
  2613  0F68                     	;# 
  2614  0F69                     	;# 
  2615  0F6A                     	;# 
  2616  0F6B                     	;# 
  2617  0FE4                     	;# 
  2618  0FE5                     	;# 
  2619  0FE6                     	;# 
  2620  0FE7                     	;# 
  2621  0FE8                     	;# 
  2622  0FE9                     	;# 
  2623  0FEA                     	;# 
  2624  0FEB                     	;# 
  2625  0FED                     	;# 
  2626  0FEE                     	;# 
  2627  0FEF                     	;# 
  2628  0000                     	;# 
  2629  0001                     	;# 
  2630  0002                     	;# 
  2631  0003                     	;# 
  2632  0004                     	;# 
  2633  0005                     	;# 
  2634  0006                     	;# 
  2635  0007                     	;# 
  2636  0008                     	;# 
  2637  0009                     	;# 
  2638  000A                     	;# 
  2639  000B                     	;# 
  2640  000C                     	;# 
  2641  000D                     	;# 
  2642  000E                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0016                     	;# 
  2648  0017                     	;# 
  2649  0018                     	;# 
  2650  001C                     	;# 
  2651  001C                     	;# 
  2652  001D                     	;# 
  2653  001D                     	;# 
  2654  001E                     	;# 
  2655  001F                     	;# 
  2656  008C                     	;# 
  2657  008C                     	;# 
  2658  008D                     	;# 
  2659  008E                     	;# 
  2660  008E                     	;# 
  2661  008F                     	;# 
  2662  0090                     	;# 
  2663  0090                     	;# 
  2664  0091                     	;# 
  2665  0093                     	;# 
  2666  0094                     	;# 
  2667  0095                     	;# 
  2668  0096                     	;# 
  2669  0097                     	;# 
  2670  0098                     	;# 
  2671  0099                     	;# 
  2672  009A                     	;# 
  2673  009B                     	;# 
  2674  009C                     	;# 
  2675  009D                     	;# 
  2676  009E                     	;# 
  2677  010C                     	;# 
  2678  010D                     	;# 
  2679  010E                     	;# 
  2680  010E                     	;# 
  2681  010F                     	;# 
  2682  0110                     	;# 
  2683  0110                     	;# 
  2684  0111                     	;# 
  2685  0112                     	;# 
  2686  0112                     	;# 
  2687  0113                     	;# 
  2688  0114                     	;# 
  2689  0114                     	;# 
  2690  0115                     	;# 
  2691  0116                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  0119                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011A                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011C                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011D                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011E                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  018C                     	;# 
  2720  018D                     	;# 
  2721  018E                     	;# 
  2722  018F                     	;# 
  2723  0190                     	;# 
  2724  0191                     	;# 
  2725  0192                     	;# 
  2726  0196                     	;# 
  2727  0197                     	;# 
  2728  0198                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019B                     	;# 
  2732  019C                     	;# 
  2733  020C                     	;# 
  2734  020D                     	;# 
  2735  020E                     	;# 
  2736  020F                     	;# 
  2737  020F                     	;# 
  2738  0210                     	;# 
  2739  0210                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0213                     	;# 
  2744  0214                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0218                     	;# 
  2752  0219                     	;# 
  2753  021A                     	;# 
  2754  021B                     	;# 
  2755  021B                     	;# 
  2756  021C                     	;# 
  2757  021C                     	;# 
  2758  021D                     	;# 
  2759  021D                     	;# 
  2760  021E                     	;# 
  2761  021F                     	;# 
  2762  028C                     	;# 
  2763  028C                     	;# 
  2764  028D                     	;# 
  2765  028D                     	;# 
  2766  028E                     	;# 
  2767  028F                     	;# 
  2768  0290                     	;# 
  2769  0290                     	;# 
  2770  0291                     	;# 
  2771  0292                     	;# 
  2772  0292                     	;# 
  2773  0293                     	;# 
  2774  0293                     	;# 
  2775  0294                     	;# 
  2776  0295                     	;# 
  2777  0296                     	;# 
  2778  0296                     	;# 
  2779  0297                     	;# 
  2780  0298                     	;# 
  2781  0298                     	;# 
  2782  0299                     	;# 
  2783  0299                     	;# 
  2784  029A                     	;# 
  2785  029B                     	;# 
  2786  029C                     	;# 
  2787  029C                     	;# 
  2788  029D                     	;# 
  2789  030C                     	;# 
  2790  030C                     	;# 
  2791  030D                     	;# 
  2792  030E                     	;# 
  2793  030F                     	;# 
  2794  0310                     	;# 
  2795  0310                     	;# 
  2796  0311                     	;# 
  2797  0312                     	;# 
  2798  0313                     	;# 
  2799  0314                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0316                     	;# 
  2803  0317                     	;# 
  2804  0318                     	;# 
  2805  0318                     	;# 
  2806  0319                     	;# 
  2807  031A                     	;# 
  2808  031B                     	;# 
  2809  031C                     	;# 
  2810  031C                     	;# 
  2811  031D                     	;# 
  2812  031E                     	;# 
  2813  031F                     	;# 
  2814  038C                     	;# 
  2815  038D                     	;# 
  2816  038E                     	;# 
  2817  0390                     	;# 
  2818  0391                     	;# 
  2819  0392                     	;# 
  2820  040C                     	;# 
  2821  040D                     	;# 
  2822  040E                     	;# 
  2823  040F                     	;# 
  2824  0410                     	;# 
  2825  0411                     	;# 
  2826  0416                     	;# 
  2827  0416                     	;# 
  2828  0417                     	;# 
  2829  0418                     	;# 
  2830  0418                     	;# 
  2831  0419                     	;# 
  2832  041A                     	;# 
  2833  041A                     	;# 
  2834  041B                     	;# 
  2835  041C                     	;# 
  2836  041C                     	;# 
  2837  041D                     	;# 
  2838  041E                     	;# 
  2839  041F                     	;# 
  2840  048C                     	;# 
  2841  048C                     	;# 
  2842  048D                     	;# 
  2843  048E                     	;# 
  2844  048F                     	;# 
  2845  048F                     	;# 
  2846  0490                     	;# 
  2847  0491                     	;# 
  2848  0492                     	;# 
  2849  0492                     	;# 
  2850  0493                     	;# 
  2851  0494                     	;# 
  2852  0495                     	;# 
  2853  0495                     	;# 
  2854  0496                     	;# 
  2855  0497                     	;# 
  2856  0498                     	;# 
  2857  0499                     	;# 
  2858  049A                     	;# 
  2859  049B                     	;# 
  2860  049C                     	;# 
  2861  049D                     	;# 
  2862  050C                     	;# 
  2863  050C                     	;# 
  2864  050D                     	;# 
  2865  050E                     	;# 
  2866  050F                     	;# 
  2867  050F                     	;# 
  2868  0510                     	;# 
  2869  0511                     	;# 
  2870  0512                     	;# 
  2871  0512                     	;# 
  2872  0513                     	;# 
  2873  0514                     	;# 
  2874  0515                     	;# 
  2875  0515                     	;# 
  2876  0516                     	;# 
  2877  0517                     	;# 
  2878  0518                     	;# 
  2879  0519                     	;# 
  2880  051A                     	;# 
  2881  051B                     	;# 
  2882  051C                     	;# 
  2883  051D                     	;# 
  2884  058C                     	;# 
  2885  058C                     	;# 
  2886  058D                     	;# 
  2887  058E                     	;# 
  2888  058F                     	;# 
  2889  058F                     	;# 
  2890  0590                     	;# 
  2891  0591                     	;# 
  2892  0592                     	;# 
  2893  0593                     	;# 
  2894  060C                     	;# 
  2895  060D                     	;# 
  2896  060E                     	;# 
  2897  060F                     	;# 
  2898  0610                     	;# 
  2899  0611                     	;# 
  2900  0612                     	;# 
  2901  0613                     	;# 
  2902  0614                     	;# 
  2903  0616                     	;# 
  2904  0617                     	;# 
  2905  0618                     	;# 
  2906  0619                     	;# 
  2907  061A                     	;# 
  2908  061B                     	;# 
  2909  061C                     	;# 
  2910  061D                     	;# 
  2911  061E                     	;# 
  2912  068C                     	;# 
  2913  068D                     	;# 
  2914  068E                     	;# 
  2915  068F                     	;# 
  2916  0690                     	;# 
  2917  0691                     	;# 
  2918  0692                     	;# 
  2919  0693                     	;# 
  2920  0694                     	;# 
  2921  070C                     	;# 
  2922  070D                     	;# 
  2923  070E                     	;# 
  2924  070F                     	;# 
  2925  0710                     	;# 
  2926  0711                     	;# 
  2927  0712                     	;# 
  2928  0713                     	;# 
  2929  0714                     	;# 
  2930  0716                     	;# 
  2931  0717                     	;# 
  2932  0718                     	;# 
  2933  0719                     	;# 
  2934  071A                     	;# 
  2935  071B                     	;# 
  2936  071C                     	;# 
  2937  071D                     	;# 
  2938  071E                     	;# 
  2939  0796                     	;# 
  2940  0797                     	;# 
  2941  0798                     	;# 
  2942  0799                     	;# 
  2943  079A                     	;# 
  2944  079B                     	;# 
  2945  080C                     	;# 
  2946  080D                     	;# 
  2947  080E                     	;# 
  2948  080F                     	;# 
  2949  0810                     	;# 
  2950  0811                     	;# 
  2951  0812                     	;# 
  2952  0813                     	;# 
  2953  0814                     	;# 
  2954  081A                     	;# 
  2955  081B                     	;# 
  2956  081C                     	;# 
  2957  081D                     	;# 
  2958  081E                     	;# 
  2959  081F                     	;# 
  2960  088C                     	;# 
  2961  088D                     	;# 
  2962  088E                     	;# 
  2963  088F                     	;# 
  2964  0890                     	;# 
  2965  0891                     	;# 
  2966  0892                     	;# 
  2967  0893                     	;# 
  2968  0895                     	;# 
  2969  0896                     	;# 
  2970  0897                     	;# 
  2971  0898                     	;# 
  2972  0899                     	;# 
  2973  089A                     	;# 
  2974  089B                     	;# 
  2975  090C                     	;# 
  2976  090E                     	;# 
  2977  090F                     	;# 
  2978  091F                     	;# 
  2979  091F                     	;# 
  2980  098F                     	;# 
  2981  098F                     	;# 
  2982  0990                     	;# 
  2983  0991                     	;# 
  2984  0992                     	;# 
  2985  0993                     	;# 
  2986  0994                     	;# 
  2987  0995                     	;# 
  2988  0996                     	;# 
  2989  0997                     	;# 
  2990  0E0F                     	;# 
  2991  0E10                     	;# 
  2992  0E11                     	;# 
  2993  0E12                     	;# 
  2994  0E13                     	;# 
  2995  0E14                     	;# 
  2996  0E15                     	;# 
  2997  0E16                     	;# 
  2998  0E17                     	;# 
  2999  0E18                     	;# 
  3000  0E19                     	;# 
  3001  0E1A                     	;# 
  3002  0E1B                     	;# 
  3003  0E1C                     	;# 
  3004  0E1D                     	;# 
  3005  0E1E                     	;# 
  3006  0E1F                     	;# 
  3007  0E20                     	;# 
  3008  0E21                     	;# 
  3009  0E22                     	;# 
  3010  0E23                     	;# 
  3011  0E24                     	;# 
  3012  0E25                     	;# 
  3013  0E26                     	;# 
  3014  0E27                     	;# 
  3015  0E28                     	;# 
  3016  0E29                     	;# 
  3017  0E2A                     	;# 
  3018  0E2B                     	;# 
  3019  0E2C                     	;# 
  3020  0E2D                     	;# 
  3021  0E2E                     	;# 
  3022  0E2F                     	;# 
  3023  0E30                     	;# 
  3024  0E31                     	;# 
  3025  0E32                     	;# 
  3026  0E33                     	;# 
  3027  0E34                     	;# 
  3028  0E35                     	;# 
  3029  0E36                     	;# 
  3030  0E37                     	;# 
  3031  0E8F                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E93                     	;# 
  3036  0E94                     	;# 
  3037  0E95                     	;# 
  3038  0E96                     	;# 
  3039  0E97                     	;# 
  3040  0E9C                     	;# 
  3041  0E9D                     	;# 
  3042  0E9E                     	;# 
  3043  0EA1                     	;# 
  3044  0EA2                     	;# 
  3045  0EA3                     	;# 
  3046  0EA4                     	;# 
  3047  0EA5                     	;# 
  3048  0EA9                     	;# 
  3049  0EAA                     	;# 
  3050  0EAB                     	;# 
  3051  0EAC                     	;# 
  3052  0EB1                     	;# 
  3053  0EB2                     	;# 
  3054  0EB3                     	;# 
  3055  0EB8                     	;# 
  3056  0EB9                     	;# 
  3057  0EBA                     	;# 
  3058  0EBB                     	;# 
  3059  0EBC                     	;# 
  3060  0EBD                     	;# 
  3061  0EBE                     	;# 
  3062  0EC3                     	;# 
  3063  0EC5                     	;# 
  3064  0EC6                     	;# 
  3065  0EC7                     	;# 
  3066  0EC8                     	;# 
  3067  0EC9                     	;# 
  3068  0ECA                     	;# 
  3069  0ECB                     	;# 
  3070  0ECC                     	;# 
  3071  0F10                     	;# 
  3072  0F11                     	;# 
  3073  0F12                     	;# 
  3074  0F13                     	;# 
  3075  0F14                     	;# 
  3076  0F15                     	;# 
  3077  0F16                     	;# 
  3078  0F17                     	;# 
  3079  0F18                     	;# 
  3080  0F19                     	;# 
  3081  0F1A                     	;# 
  3082  0F1B                     	;# 
  3083  0F1C                     	;# 
  3084  0F1D                     	;# 
  3085  0F1E                     	;# 
  3086  0F1F                     	;# 
  3087  0F20                     	;# 
  3088  0F21                     	;# 
  3089  0F22                     	;# 
  3090  0F23                     	;# 
  3091  0F24                     	;# 
  3092  0F25                     	;# 
  3093  0F26                     	;# 
  3094  0F27                     	;# 
  3095  0F38                     	;# 
  3096  0F39                     	;# 
  3097  0F3A                     	;# 
  3098  0F3B                     	;# 
  3099  0F3C                     	;# 
  3100  0F3D                     	;# 
  3101  0F3E                     	;# 
  3102  0F3F                     	;# 
  3103  0F40                     	;# 
  3104  0F41                     	;# 
  3105  0F43                     	;# 
  3106  0F44                     	;# 
  3107  0F45                     	;# 
  3108  0F46                     	;# 
  3109  0F47                     	;# 
  3110  0F48                     	;# 
  3111  0F49                     	;# 
  3112  0F4A                     	;# 
  3113  0F4B                     	;# 
  3114  0F4C                     	;# 
  3115  0F4E                     	;# 
  3116  0F4F                     	;# 
  3117  0F50                     	;# 
  3118  0F51                     	;# 
  3119  0F52                     	;# 
  3120  0F53                     	;# 
  3121  0F54                     	;# 
  3122  0F55                     	;# 
  3123  0F56                     	;# 
  3124  0F57                     	;# 
  3125  0F65                     	;# 
  3126  0F68                     	;# 
  3127  0F69                     	;# 
  3128  0F6A                     	;# 
  3129  0F6B                     	;# 
  3130  0FE4                     	;# 
  3131  0FE5                     	;# 
  3132  0FE6                     	;# 
  3133  0FE7                     	;# 
  3134  0FE8                     	;# 
  3135  0FE9                     	;# 
  3136  0FEA                     	;# 
  3137  0FEB                     	;# 
  3138  0FED                     	;# 
  3139  0FEE                     	;# 
  3140  0FEF                     	;# 
  3141  0000                     	;# 
  3142  0001                     	;# 
  3143  0002                     	;# 
  3144  0003                     	;# 
  3145  0004                     	;# 
  3146  0005                     	;# 
  3147  0006                     	;# 
  3148  0007                     	;# 
  3149  0008                     	;# 
  3150  0009                     	;# 
  3151  000A                     	;# 
  3152  000B                     	;# 
  3153  000C                     	;# 
  3154  000D                     	;# 
  3155  000E                     	;# 
  3156  0010                     	;# 
  3157  0011                     	;# 
  3158  0012                     	;# 
  3159  0013                     	;# 
  3160  0016                     	;# 
  3161  0017                     	;# 
  3162  0018                     	;# 
  3163  001C                     	;# 
  3164  001C                     	;# 
  3165  001D                     	;# 
  3166  001D                     	;# 
  3167  001E                     	;# 
  3168  001F                     	;# 
  3169  008C                     	;# 
  3170  008C                     	;# 
  3171  008D                     	;# 
  3172  008E                     	;# 
  3173  008E                     	;# 
  3174  008F                     	;# 
  3175  0090                     	;# 
  3176  0090                     	;# 
  3177  0091                     	;# 
  3178  0093                     	;# 
  3179  0094                     	;# 
  3180  0095                     	;# 
  3181  0096                     	;# 
  3182  0097                     	;# 
  3183  0098                     	;# 
  3184  0099                     	;# 
  3185  009A                     	;# 
  3186  009B                     	;# 
  3187  009C                     	;# 
  3188  009D                     	;# 
  3189  009E                     	;# 
  3190  010C                     	;# 
  3191  010D                     	;# 
  3192  010E                     	;# 
  3193  010E                     	;# 
  3194  010F                     	;# 
  3195  0110                     	;# 
  3196  0110                     	;# 
  3197  0111                     	;# 
  3198  0112                     	;# 
  3199  0112                     	;# 
  3200  0113                     	;# 
  3201  0114                     	;# 
  3202  0114                     	;# 
  3203  0115                     	;# 
  3204  0116                     	;# 
  3205  0116                     	;# 
  3206  0117                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  0119                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011A                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011C                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011D                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011E                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  018C                     	;# 
  3233  018D                     	;# 
  3234  018E                     	;# 
  3235  018F                     	;# 
  3236  0190                     	;# 
  3237  0191                     	;# 
  3238  0192                     	;# 
  3239  0196                     	;# 
  3240  0197                     	;# 
  3241  0198                     	;# 
  3242  0199                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019C                     	;# 
  3246  020C                     	;# 
  3247  020D                     	;# 
  3248  020E                     	;# 
  3249  020F                     	;# 
  3250  020F                     	;# 
  3251  0210                     	;# 
  3252  0210                     	;# 
  3253  0211                     	;# 
  3254  0211                     	;# 
  3255  0212                     	;# 
  3256  0213                     	;# 
  3257  0214                     	;# 
  3258  0215                     	;# 
  3259  0215                     	;# 
  3260  0216                     	;# 
  3261  0216                     	;# 
  3262  0217                     	;# 
  3263  0217                     	;# 
  3264  0218                     	;# 
  3265  0219                     	;# 
  3266  021A                     	;# 
  3267  021B                     	;# 
  3268  021B                     	;# 
  3269  021C                     	;# 
  3270  021C                     	;# 
  3271  021D                     	;# 
  3272  021D                     	;# 
  3273  021E                     	;# 
  3274  021F                     	;# 
  3275  028C                     	;# 
  3276  028C                     	;# 
  3277  028D                     	;# 
  3278  028D                     	;# 
  3279  028E                     	;# 
  3280  028F                     	;# 
  3281  0290                     	;# 
  3282  0290                     	;# 
  3283  0291                     	;# 
  3284  0292                     	;# 
  3285  0292                     	;# 
  3286  0293                     	;# 
  3287  0293                     	;# 
  3288  0294                     	;# 
  3289  0295                     	;# 
  3290  0296                     	;# 
  3291  0296                     	;# 
  3292  0297                     	;# 
  3293  0298                     	;# 
  3294  0298                     	;# 
  3295  0299                     	;# 
  3296  0299                     	;# 
  3297  029A                     	;# 
  3298  029B                     	;# 
  3299  029C                     	;# 
  3300  029C                     	;# 
  3301  029D                     	;# 
  3302  030C                     	;# 
  3303  030C                     	;# 
  3304  030D                     	;# 
  3305  030E                     	;# 
  3306  030F                     	;# 
  3307  0310                     	;# 
  3308  0310                     	;# 
  3309  0311                     	;# 
  3310  0312                     	;# 
  3311  0313                     	;# 
  3312  0314                     	;# 
  3313  0314                     	;# 
  3314  0315                     	;# 
  3315  0316                     	;# 
  3316  0317                     	;# 
  3317  0318                     	;# 
  3318  0318                     	;# 
  3319  0319                     	;# 
  3320  031A                     	;# 
  3321  031B                     	;# 
  3322  031C                     	;# 
  3323  031C                     	;# 
  3324  031D                     	;# 
  3325  031E                     	;# 
  3326  031F                     	;# 
  3327  038C                     	;# 
  3328  038D                     	;# 
  3329  038E                     	;# 
  3330  0390                     	;# 
  3331  0391                     	;# 
  3332  0392                     	;# 
  3333  040C                     	;# 
  3334  040D                     	;# 
  3335  040E                     	;# 
  3336  040F                     	;# 
  3337  0410                     	;# 
  3338  0411                     	;# 
  3339  0416                     	;# 
  3340  0416                     	;# 
  3341  0417                     	;# 
  3342  0418                     	;# 
  3343  0418                     	;# 
  3344  0419                     	;# 
  3345  041A                     	;# 
  3346  041A                     	;# 
  3347  041B                     	;# 
  3348  041C                     	;# 
  3349  041C                     	;# 
  3350  041D                     	;# 
  3351  041E                     	;# 
  3352  041F                     	;# 
  3353  048C                     	;# 
  3354  048C                     	;# 
  3355  048D                     	;# 
  3356  048E                     	;# 
  3357  048F                     	;# 
  3358  048F                     	;# 
  3359  0490                     	;# 
  3360  0491                     	;# 
  3361  0492                     	;# 
  3362  0492                     	;# 
  3363  0493                     	;# 
  3364  0494                     	;# 
  3365  0495                     	;# 
  3366  0495                     	;# 
  3367  0496                     	;# 
  3368  0497                     	;# 
  3369  0498                     	;# 
  3370  0499                     	;# 
  3371  049A                     	;# 
  3372  049B                     	;# 
  3373  049C                     	;# 
  3374  049D                     	;# 
  3375  050C                     	;# 
  3376  050C                     	;# 
  3377  050D                     	;# 
  3378  050E                     	;# 
  3379  050F                     	;# 
  3380  050F                     	;# 
  3381  0510                     	;# 
  3382  0511                     	;# 
  3383  0512                     	;# 
  3384  0512                     	;# 
  3385  0513                     	;# 
  3386  0514                     	;# 
  3387  0515                     	;# 
  3388  0515                     	;# 
  3389  0516                     	;# 
  3390  0517                     	;# 
  3391  0518                     	;# 
  3392  0519                     	;# 
  3393  051A                     	;# 
  3394  051B                     	;# 
  3395  051C                     	;# 
  3396  051D                     	;# 
  3397  058C                     	;# 
  3398  058C                     	;# 
  3399  058D                     	;# 
  3400  058E                     	;# 
  3401  058F                     	;# 
  3402  058F                     	;# 
  3403  0590                     	;# 
  3404  0591                     	;# 
  3405  0592                     	;# 
  3406  0593                     	;# 
  3407  060C                     	;# 
  3408  060D                     	;# 
  3409  060E                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0616                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061B                     	;# 
  3422  061C                     	;# 
  3423  061D                     	;# 
  3424  061E                     	;# 
  3425  068C                     	;# 
  3426  068D                     	;# 
  3427  068E                     	;# 
  3428  068F                     	;# 
  3429  0690                     	;# 
  3430  0691                     	;# 
  3431  0692                     	;# 
  3432  0693                     	;# 
  3433  0694                     	;# 
  3434  070C                     	;# 
  3435  070D                     	;# 
  3436  070E                     	;# 
  3437  070F                     	;# 
  3438  0710                     	;# 
  3439  0711                     	;# 
  3440  0712                     	;# 
  3441  0713                     	;# 
  3442  0714                     	;# 
  3443  0716                     	;# 
  3444  0717                     	;# 
  3445  0718                     	;# 
  3446  0719                     	;# 
  3447  071A                     	;# 
  3448  071B                     	;# 
  3449  071C                     	;# 
  3450  071D                     	;# 
  3451  071E                     	;# 
  3452  0796                     	;# 
  3453  0797                     	;# 
  3454  0798                     	;# 
  3455  0799                     	;# 
  3456  079A                     	;# 
  3457  079B                     	;# 
  3458  080C                     	;# 
  3459  080D                     	;# 
  3460  080E                     	;# 
  3461  080F                     	;# 
  3462  0810                     	;# 
  3463  0811                     	;# 
  3464  0812                     	;# 
  3465  0813                     	;# 
  3466  0814                     	;# 
  3467  081A                     	;# 
  3468  081B                     	;# 
  3469  081C                     	;# 
  3470  081D                     	;# 
  3471  081E                     	;# 
  3472  081F                     	;# 
  3473  088C                     	;# 
  3474  088D                     	;# 
  3475  088E                     	;# 
  3476  088F                     	;# 
  3477  0890                     	;# 
  3478  0891                     	;# 
  3479  0892                     	;# 
  3480  0893                     	;# 
  3481  0895                     	;# 
  3482  0896                     	;# 
  3483  0897                     	;# 
  3484  0898                     	;# 
  3485  0899                     	;# 
  3486  089A                     	;# 
  3487  089B                     	;# 
  3488  090C                     	;# 
  3489  090E                     	;# 
  3490  090F                     	;# 
  3491  091F                     	;# 
  3492  091F                     	;# 
  3493  098F                     	;# 
  3494  098F                     	;# 
  3495  0990                     	;# 
  3496  0991                     	;# 
  3497  0992                     	;# 
  3498  0993                     	;# 
  3499  0994                     	;# 
  3500  0995                     	;# 
  3501  0996                     	;# 
  3502  0997                     	;# 
  3503  0E0F                     	;# 
  3504  0E10                     	;# 
  3505  0E11                     	;# 
  3506  0E12                     	;# 
  3507  0E13                     	;# 
  3508  0E14                     	;# 
  3509  0E15                     	;# 
  3510  0E16                     	;# 
  3511  0E17                     	;# 
  3512  0E18                     	;# 
  3513  0E19                     	;# 
  3514  0E1A                     	;# 
  3515  0E1B                     	;# 
  3516  0E1C                     	;# 
  3517  0E1D                     	;# 
  3518  0E1E                     	;# 
  3519  0E1F                     	;# 
  3520  0E20                     	;# 
  3521  0E21                     	;# 
  3522  0E22                     	;# 
  3523  0E23                     	;# 
  3524  0E24                     	;# 
  3525  0E25                     	;# 
  3526  0E26                     	;# 
  3527  0E27                     	;# 
  3528  0E28                     	;# 
  3529  0E29                     	;# 
  3530  0E2A                     	;# 
  3531  0E2B                     	;# 
  3532  0E2C                     	;# 
  3533  0E2D                     	;# 
  3534  0E2E                     	;# 
  3535  0E2F                     	;# 
  3536  0E30                     	;# 
  3537  0E31                     	;# 
  3538  0E32                     	;# 
  3539  0E33                     	;# 
  3540  0E34                     	;# 
  3541  0E35                     	;# 
  3542  0E36                     	;# 
  3543  0E37                     	;# 
  3544  0E8F                     	;# 
  3545  0E90                     	;# 
  3546  0E91                     	;# 
  3547  0E92                     	;# 
  3548  0E93                     	;# 
  3549  0E94                     	;# 
  3550  0E95                     	;# 
  3551  0E96                     	;# 
  3552  0E97                     	;# 
  3553  0E9C                     	;# 
  3554  0E9D                     	;# 
  3555  0E9E                     	;# 
  3556  0EA1                     	;# 
  3557  0EA2                     	;# 
  3558  0EA3                     	;# 
  3559  0EA4                     	;# 
  3560  0EA5                     	;# 
  3561  0EA9                     	;# 
  3562  0EAA                     	;# 
  3563  0EAB                     	;# 
  3564  0EAC                     	;# 
  3565  0EB1                     	;# 
  3566  0EB2                     	;# 
  3567  0EB3                     	;# 
  3568  0EB8                     	;# 
  3569  0EB9                     	;# 
  3570  0EBA                     	;# 
  3571  0EBB                     	;# 
  3572  0EBC                     	;# 
  3573  0EBD                     	;# 
  3574  0EBE                     	;# 
  3575  0EC3                     	;# 
  3576  0EC5                     	;# 
  3577  0EC6                     	;# 
  3578  0EC7                     	;# 
  3579  0EC8                     	;# 
  3580  0EC9                     	;# 
  3581  0ECA                     	;# 
  3582  0ECB                     	;# 
  3583  0ECC                     	;# 
  3584  0F10                     	;# 
  3585  0F11                     	;# 
  3586  0F12                     	;# 
  3587  0F13                     	;# 
  3588  0F14                     	;# 
  3589  0F15                     	;# 
  3590  0F16                     	;# 
  3591  0F17                     	;# 
  3592  0F18                     	;# 
  3593  0F19                     	;# 
  3594  0F1A                     	;# 
  3595  0F1B                     	;# 
  3596  0F1C                     	;# 
  3597  0F1D                     	;# 
  3598  0F1E                     	;# 
  3599  0F1F                     	;# 
  3600  0F20                     	;# 
  3601  0F21                     	;# 
  3602  0F22                     	;# 
  3603  0F23                     	;# 
  3604  0F24                     	;# 
  3605  0F25                     	;# 
  3606  0F26                     	;# 
  3607  0F27                     	;# 
  3608  0F38                     	;# 
  3609  0F39                     	;# 
  3610  0F3A                     	;# 
  3611  0F3B                     	;# 
  3612  0F3C                     	;# 
  3613  0F3D                     	;# 
  3614  0F3E                     	;# 
  3615  0F3F                     	;# 
  3616  0F40                     	;# 
  3617  0F41                     	;# 
  3618  0F43                     	;# 
  3619  0F44                     	;# 
  3620  0F45                     	;# 
  3621  0F46                     	;# 
  3622  0F47                     	;# 
  3623  0F48                     	;# 
  3624  0F49                     	;# 
  3625  0F4A                     	;# 
  3626  0F4B                     	;# 
  3627  0F4C                     	;# 
  3628  0F4E                     	;# 
  3629  0F4F                     	;# 
  3630  0F50                     	;# 
  3631  0F51                     	;# 
  3632  0F52                     	;# 
  3633  0F53                     	;# 
  3634  0F54                     	;# 
  3635  0F55                     	;# 
  3636  0F56                     	;# 
  3637  0F57                     	;# 
  3638  0F65                     	;# 
  3639  0F68                     	;# 
  3640  0F69                     	;# 
  3641  0F6A                     	;# 
  3642  0F6B                     	;# 
  3643  0FE4                     	;# 
  3644  0FE5                     	;# 
  3645  0FE6                     	;# 
  3646  0FE7                     	;# 
  3647  0FE8                     	;# 
  3648  0FE9                     	;# 
  3649  0FEA                     	;# 
  3650  0FEB                     	;# 
  3651  0FED                     	;# 
  3652  0FEE                     	;# 
  3653  0FEF                     	;# 
  3654  0000                     	;# 
  3655  0001                     	;# 
  3656  0002                     	;# 
  3657  0003                     	;# 
  3658  0004                     	;# 
  3659  0005                     	;# 
  3660  0006                     	;# 
  3661  0007                     	;# 
  3662  0008                     	;# 
  3663  0009                     	;# 
  3664  000A                     	;# 
  3665  000B                     	;# 
  3666  000C                     	;# 
  3667  000D                     	;# 
  3668  000E                     	;# 
  3669  0010                     	;# 
  3670  0011                     	;# 
  3671  0012                     	;# 
  3672  0013                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  001C                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001D                     	;# 
  3680  001E                     	;# 
  3681  001F                     	;# 
  3682  008C                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  008E                     	;# 
  3687  008F                     	;# 
  3688  0090                     	;# 
  3689  0090                     	;# 
  3690  0091                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0095                     	;# 
  3694  0096                     	;# 
  3695  0097                     	;# 
  3696  0098                     	;# 
  3697  0099                     	;# 
  3698  009A                     	;# 
  3699  009B                     	;# 
  3700  009C                     	;# 
  3701  009D                     	;# 
  3702  009E                     	;# 
  3703  010C                     	;# 
  3704  010D                     	;# 
  3705  010E                     	;# 
  3706  010E                     	;# 
  3707  010F                     	;# 
  3708  0110                     	;# 
  3709  0110                     	;# 
  3710  0111                     	;# 
  3711  0112                     	;# 
  3712  0112                     	;# 
  3713  0113                     	;# 
  3714  0114                     	;# 
  3715  0114                     	;# 
  3716  0115                     	;# 
  3717  0116                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  0119                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011A                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011C                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011D                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011E                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  018C                     	;# 
  3746  018D                     	;# 
  3747  018E                     	;# 
  3748  018F                     	;# 
  3749  0190                     	;# 
  3750  0191                     	;# 
  3751  0192                     	;# 
  3752  0196                     	;# 
  3753  0197                     	;# 
  3754  0198                     	;# 
  3755  0199                     	;# 
  3756  019A                     	;# 
  3757  019B                     	;# 
  3758  019C                     	;# 
  3759  020C                     	;# 
  3760  020D                     	;# 
  3761  020E                     	;# 
  3762  020F                     	;# 
  3763  020F                     	;# 
  3764  0210                     	;# 
  3765  0210                     	;# 
  3766  0211                     	;# 
  3767  0211                     	;# 
  3768  0212                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0216                     	;# 
  3774  0216                     	;# 
  3775  0217                     	;# 
  3776  0217                     	;# 
  3777  0218                     	;# 
  3778  0219                     	;# 
  3779  021A                     	;# 
  3780  021B                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028C                     	;# 
  3790  028D                     	;# 
  3791  028D                     	;# 
  3792  028E                     	;# 
  3793  028F                     	;# 
  3794  0290                     	;# 
  3795  0290                     	;# 
  3796  0291                     	;# 
  3797  0292                     	;# 
  3798  0292                     	;# 
  3799  0293                     	;# 
  3800  0293                     	;# 
  3801  0294                     	;# 
  3802  0295                     	;# 
  3803  0296                     	;# 
  3804  0296                     	;# 
  3805  0297                     	;# 
  3806  0298                     	;# 
  3807  0298                     	;# 
  3808  0299                     	;# 
  3809  0299                     	;# 
  3810  029A                     	;# 
  3811  029B                     	;# 
  3812  029C                     	;# 
  3813  029C                     	;# 
  3814  029D                     	;# 
  3815  030C                     	;# 
  3816  030C                     	;# 
  3817  030D                     	;# 
  3818  030E                     	;# 
  3819  030F                     	;# 
  3820  0310                     	;# 
  3821  0310                     	;# 
  3822  0311                     	;# 
  3823  0312                     	;# 
  3824  0313                     	;# 
  3825  0314                     	;# 
  3826  0314                     	;# 
  3827  0315                     	;# 
  3828  0316                     	;# 
  3829  0317                     	;# 
  3830  0318                     	;# 
  3831  0318                     	;# 
  3832  0319                     	;# 
  3833  031A                     	;# 
  3834  031B                     	;# 
  3835  031C                     	;# 
  3836  031C                     	;# 
  3837  031D                     	;# 
  3838  031E                     	;# 
  3839  031F                     	;# 
  3840  038C                     	;# 
  3841  038D                     	;# 
  3842  038E                     	;# 
  3843  0390                     	;# 
  3844  0391                     	;# 
  3845  0392                     	;# 
  3846  040C                     	;# 
  3847  040D                     	;# 
  3848  040E                     	;# 
  3849  040F                     	;# 
  3850  0410                     	;# 
  3851  0411                     	;# 
  3852  0416                     	;# 
  3853  0416                     	;# 
  3854  0417                     	;# 
  3855  0418                     	;# 
  3856  0418                     	;# 
  3857  0419                     	;# 
  3858  041A                     	;# 
  3859  041A                     	;# 
  3860  041B                     	;# 
  3861  041C                     	;# 
  3862  041C                     	;# 
  3863  041D                     	;# 
  3864  041E                     	;# 
  3865  041F                     	;# 
  3866  048C                     	;# 
  3867  048C                     	;# 
  3868  048D                     	;# 
  3869  048E                     	;# 
  3870  048F                     	;# 
  3871  048F                     	;# 
  3872  0490                     	;# 
  3873  0491                     	;# 
  3874  0492                     	;# 
  3875  0492                     	;# 
  3876  0493                     	;# 
  3877  0494                     	;# 
  3878  0495                     	;# 
  3879  0495                     	;# 
  3880  0496                     	;# 
  3881  0497                     	;# 
  3882  0498                     	;# 
  3883  0499                     	;# 
  3884  049A                     	;# 
  3885  049B                     	;# 
  3886  049C                     	;# 
  3887  049D                     	;# 
  3888  050C                     	;# 
  3889  050C                     	;# 
  3890  050D                     	;# 
  3891  050E                     	;# 
  3892  050F                     	;# 
  3893  050F                     	;# 
  3894  0510                     	;# 
  3895  0511                     	;# 
  3896  0512                     	;# 
  3897  0512                     	;# 
  3898  0513                     	;# 
  3899  0514                     	;# 
  3900  0515                     	;# 
  3901  0515                     	;# 
  3902  0516                     	;# 
  3903  0517                     	;# 
  3904  0518                     	;# 
  3905  0519                     	;# 
  3906  051A                     	;# 
  3907  051B                     	;# 
  3908  051C                     	;# 
  3909  051D                     	;# 
  3910  058C                     	;# 
  3911  058C                     	;# 
  3912  058D                     	;# 
  3913  058E                     	;# 
  3914  058F                     	;# 
  3915  058F                     	;# 
  3916  0590                     	;# 
  3917  0591                     	;# 
  3918  0592                     	;# 
  3919  0593                     	;# 
  3920  060C                     	;# 
  3921  060D                     	;# 
  3922  060E                     	;# 
  3923  060F                     	;# 
  3924  0610                     	;# 
  3925  0611                     	;# 
  3926  0612                     	;# 
  3927  0613                     	;# 
  3928  0614                     	;# 
  3929  0616                     	;# 
  3930  0617                     	;# 
  3931  0618                     	;# 
  3932  0619                     	;# 
  3933  061A                     	;# 
  3934  061B                     	;# 
  3935  061C                     	;# 
  3936  061D                     	;# 
  3937  061E                     	;# 
  3938  068C                     	;# 
  3939  068D                     	;# 
  3940  068E                     	;# 
  3941  068F                     	;# 
  3942  0690                     	;# 
  3943  0691                     	;# 
  3944  0692                     	;# 
  3945  0693                     	;# 
  3946  0694                     	;# 
  3947  070C                     	;# 
  3948  070D                     	;# 
  3949  070E                     	;# 
  3950  070F                     	;# 
  3951  0710                     	;# 
  3952  0711                     	;# 
  3953  0712                     	;# 
  3954  0713                     	;# 
  3955  0714                     	;# 
  3956  0716                     	;# 
  3957  0717                     	;# 
  3958  0718                     	;# 
  3959  0719                     	;# 
  3960  071A                     	;# 
  3961  071B                     	;# 
  3962  071C                     	;# 
  3963  071D                     	;# 
  3964  071E                     	;# 
  3965  0796                     	;# 
  3966  0797                     	;# 
  3967  0798                     	;# 
  3968  0799                     	;# 
  3969  079A                     	;# 
  3970  079B                     	;# 
  3971  080C                     	;# 
  3972  080D                     	;# 
  3973  080E                     	;# 
  3974  080F                     	;# 
  3975  0810                     	;# 
  3976  0811                     	;# 
  3977  0812                     	;# 
  3978  0813                     	;# 
  3979  0814                     	;# 
  3980  081A                     	;# 
  3981  081B                     	;# 
  3982  081C                     	;# 
  3983  081D                     	;# 
  3984  081E                     	;# 
  3985  081F                     	;# 
  3986  088C                     	;# 
  3987  088D                     	;# 
  3988  088E                     	;# 
  3989  088F                     	;# 
  3990  0890                     	;# 
  3991  0891                     	;# 
  3992  0892                     	;# 
  3993  0893                     	;# 
  3994  0895                     	;# 
  3995  0896                     	;# 
  3996  0897                     	;# 
  3997  0898                     	;# 
  3998  0899                     	;# 
  3999  089A                     	;# 
  4000  089B                     	;# 
  4001  090C                     	;# 
  4002  090E                     	;# 
  4003  090F                     	;# 
  4004  091F                     	;# 
  4005  091F                     	;# 
  4006  098F                     	;# 
  4007  098F                     	;# 
  4008  0990                     	;# 
  4009  0991                     	;# 
  4010  0992                     	;# 
  4011  0993                     	;# 
  4012  0994                     	;# 
  4013  0995                     	;# 
  4014  0996                     	;# 
  4015  0997                     	;# 
  4016  0E0F                     	;# 
  4017  0E10                     	;# 
  4018  0E11                     	;# 
  4019  0E12                     	;# 
  4020  0E13                     	;# 
  4021  0E14                     	;# 
  4022  0E15                     	;# 
  4023  0E16                     	;# 
  4024  0E17                     	;# 
  4025  0E18                     	;# 
  4026  0E19                     	;# 
  4027  0E1A                     	;# 
  4028  0E1B                     	;# 
  4029  0E1C                     	;# 
  4030  0E1D                     	;# 
  4031  0E1E                     	;# 
  4032  0E1F                     	;# 
  4033  0E20                     	;# 
  4034  0E21                     	;# 
  4035  0E22                     	;# 
  4036  0E23                     	;# 
  4037  0E24                     	;# 
  4038  0E25                     	;# 
  4039  0E26                     	;# 
  4040  0E27                     	;# 
  4041  0E28                     	;# 
  4042  0E29                     	;# 
  4043  0E2A                     	;# 
  4044  0E2B                     	;# 
  4045  0E2C                     	;# 
  4046  0E2D                     	;# 
  4047  0E2E                     	;# 
  4048  0E2F                     	;# 
  4049  0E30                     	;# 
  4050  0E31                     	;# 
  4051  0E32                     	;# 
  4052  0E33                     	;# 
  4053  0E34                     	;# 
  4054  0E35                     	;# 
  4055  0E36                     	;# 
  4056  0E37                     	;# 
  4057  0E8F                     	;# 
  4058  0E90                     	;# 
  4059  0E91                     	;# 
  4060  0E92                     	;# 
  4061  0E93                     	;# 
  4062  0E94                     	;# 
  4063  0E95                     	;# 
  4064  0E96                     	;# 
  4065  0E97                     	;# 
  4066  0E9C                     	;# 
  4067  0E9D                     	;# 
  4068  0E9E                     	;# 
  4069  0EA1                     	;# 
  4070  0EA2                     	;# 
  4071  0EA3                     	;# 
  4072  0EA4                     	;# 
  4073  0EA5                     	;# 
  4074  0EA9                     	;# 
  4075  0EAA                     	;# 
  4076  0EAB                     	;# 
  4077  0EAC                     	;# 
  4078  0EB1                     	;# 
  4079  0EB2                     	;# 
  4080  0EB3                     	;# 
  4081  0EB8                     	;# 
  4082  0EB9                     	;# 
  4083  0EBA                     	;# 
  4084  0EBB                     	;# 
  4085  0EBC                     	;# 
  4086  0EBD                     	;# 
  4087  0EBE                     	;# 
  4088  0EC3                     	;# 
  4089  0EC5                     	;# 
  4090  0EC6                     	;# 
  4091  0EC7                     	;# 
  4092  0EC8                     	;# 
  4093  0EC9                     	;# 
  4094  0ECA                     	;# 
  4095  0ECB                     	;# 
  4096  0ECC                     	;# 
  4097  0F10                     	;# 
  4098  0F11                     	;# 
  4099  0F12                     	;# 
  4100  0F13                     	;# 
  4101  0F14                     	;# 
  4102  0F15                     	;# 
  4103  0F16                     	;# 
  4104  0F17                     	;# 
  4105  0F18                     	;# 
  4106  0F19                     	;# 
  4107  0F1A                     	;# 
  4108  0F1B                     	;# 
  4109  0F1C                     	;# 
  4110  0F1D                     	;# 
  4111  0F1E                     	;# 
  4112  0F1F                     	;# 
  4113  0F20                     	;# 
  4114  0F21                     	;# 
  4115  0F22                     	;# 
  4116  0F23                     	;# 
  4117  0F24                     	;# 
  4118  0F25                     	;# 
  4119  0F26                     	;# 
  4120  0F27                     	;# 
  4121  0F38                     	;# 
  4122  0F39                     	;# 
  4123  0F3A                     	;# 
  4124  0F3B                     	;# 
  4125  0F3C                     	;# 
  4126  0F3D                     	;# 
  4127  0F3E                     	;# 
  4128  0F3F                     	;# 
  4129  0F40                     	;# 
  4130  0F41                     	;# 
  4131  0F43                     	;# 
  4132  0F44                     	;# 
  4133  0F45                     	;# 
  4134  0F46                     	;# 
  4135  0F47                     	;# 
  4136  0F48                     	;# 
  4137  0F49                     	;# 
  4138  0F4A                     	;# 
  4139  0F4B                     	;# 
  4140  0F4C                     	;# 
  4141  0F4E                     	;# 
  4142  0F4F                     	;# 
  4143  0F50                     	;# 
  4144  0F51                     	;# 
  4145  0F52                     	;# 
  4146  0F53                     	;# 
  4147  0F54                     	;# 
  4148  0F55                     	;# 
  4149  0F56                     	;# 
  4150  0F57                     	;# 
  4151  0F65                     	;# 
  4152  0F68                     	;# 
  4153  0F69                     	;# 
  4154  0F6A                     	;# 
  4155  0F6B                     	;# 
  4156  0FE4                     	;# 
  4157  0FE5                     	;# 
  4158  0FE6                     	;# 
  4159  0FE7                     	;# 
  4160  0FE8                     	;# 
  4161  0FE9                     	;# 
  4162  0FEA                     	;# 
  4163  0FEB                     	;# 
  4164  0FED                     	;# 
  4165  0FEE                     	;# 
  4166  0FEF                     	;_samples
  4167                           
  4168                           	psect	idataBANK1
  4169  17CD                     __pidataBANK1:	
  4170                           
  4171                           ;initializer for _presets
  4172  17CD  3400               	retlw	0
  4173  17CE  3446               	retlw	70
  4174  17CF  345F               	retlw	95
  4175  17D0  3469               	retlw	105
  4176  17D1  3478               	retlw	120
  4177                           
  4178                           ;initializer for _setpoint
  4179  17D2  3446               	retlw	70
  4180                           
  4181                           	psect	idataBANK2
  4182  0887                     __pidataBANK2:	
  4183                           
  4184                           ;initializer for ___cgram
  4185  0887  340C               	retlw	12
  4186  0888  3412               	retlw	18
  4187  0889  3412               	retlw	18
  4188  088A  340C               	retlw	12
  4189  088B  3400               	retlw	0
  4190  088C  3400               	retlw	0
  4191  088D  3400               	retlw	0
  4192  088E  3400               	retlw	0
  4193  088F  340A               	retlw	10
  4194  0890  3415               	retlw	21
  4195  0891  3411               	retlw	17
  4196  0892  340A               	retlw	10
  4197  0893  3404               	retlw	4
  4198  0894  3400               	retlw	0
  4199  0895  3400               	retlw	0
  4200  0896  3400               	retlw	0
  4201  0897  340A               	retlw	10
  4202  0898  341F               	retlw	31
  4203  0899  341F               	retlw	31
  4204  089A  340E               	retlw	14
  4205  089B  3404               	retlw	4
  4206  089C  3400               	retlw	0
  4207  089D  3400               	retlw	0
  4208  089E  3400               	retlw	0
  4209                           
  4210                           	psect	stringtext
  4211  1000                     __pstringtext:	
  4212  1000                     log@coeff:	
  4213  1000  3400               	retlw	0
  4214  1001  3400               	retlw	0
  4215  1002  3400               	retlw	0
  4216  1003  3400               	retlw	0
  4217  1004  3480               	retlw	128
  4218  1005  343F               	retlw	63
  4219  1006  34F0               	retlw	240
  4220  1007  34FF               	retlw	255
  4221  1008  34BE               	retlw	190
  4222  1009  34E2               	retlw	226
  4223  100A  34A9               	retlw	169
  4224  100B  343E               	retlw	62
  4225  100C  3483               	retlw	131
  4226  100D  3476               	retlw	118
  4227  100E  34BE               	retlw	190
  4228  100F  34AE               	retlw	174
  4229  1010  342B               	retlw	43
  4230  1011  343E               	retlw	62
  4231  1012  343C               	retlw	60
  4232  1013  34C3               	retlw	195
  4233  1014  34BD               	retlw	189
  4234  1015  34D2               	retlw	210
  4235  1016  3413               	retlw	19
  4236  1017  343D               	retlw	61
  4237  1018  3478               	retlw	120
  4238  1019  34D3               	retlw	211
  4239  101A  34BB               	retlw	187
  4240  101B                     __end_oflog@coeff:	
  4241  0016                     _LATA	set	22
  4242  0017                     _LATB	set	23
  4243  0018                     _LATC	set	24
  4244  001E                     _T0CON0	set	30
  4245  001E                     _T0CON0bits	set	30
  4246  001F                     _T0CON1	set	31
  4247  001D                     _TMR0H	set	29
  4248  001C                     _TMR0L	set	28
  4249  0011                     _TRISA	set	17
  4250  0012                     _TRISB	set	18
  4251  0013                     _TRISC	set	19
  4252  005F                     _GIE	set	95
  4253  0063                     _RA3	set	99
  4254  0064                     _RA4	set	100
  4255  0068                     _RB0	set	104
  4256  0069                     _RB1	set	105
  4257  006A                     _RB2	set	106
  4258  006B                     _RB3	set	107
  4259  006C                     _RB4	set	108
  4260  006D                     _RB5	set	109
  4261  009D                     _ADACQ	set	157
  4262  0099                     _ADACT	set	153
  4263  009B                     _ADCAP	set	155
  4264  0098                     _ADCLK	set	152
  4265  0093                     _ADCON0	set	147
  4266  0093                     _ADCON0bits	set	147
  4267  0094                     _ADCON1	set	148
  4268  0095                     _ADCON2	set	149
  4269  0096                     _ADCON3	set	150
  4270  009E                     _ADPCH	set	158
  4271  009C                     _ADPRE	set	156
  4272  009A                     _ADREF	set	154
  4273  008D                     _ADRESH	set	141
  4274  008C                     _ADRESL	set	140
  4275  0097                     _ADSTAT	set	151
  4276  010F                     _ADLTHH	set	271
  4277  010E                     _ADLTHL	set	270
  4278  010D                     _ADRPT	set	269
  4279  0113                     _ADSTPTH	set	275
  4280  0112                     _ADSTPTL	set	274
  4281  0111                     _ADUTHH	set	273
  4282  0110                     _ADUTHL	set	272
  4283  021F                     _CCPTMRS1bits	set	543
  4284  0290                     _T2CLKCON	set	656
  4285  028E                     _T2CON	set	654
  4286  028E                     _T2CONbits	set	654
  4287  028F                     _T2HLT	set	655
  4288  028D                     _T2PR	set	653
  4289  0291                     _T2RST	set	657
  4290  028C                     _T2TMR	set	652
  4291  038E                     _PWM6CON	set	910
  4292  038D                     _PWM6DCH	set	909
  4293  038C                     _PWM6DCL	set	908
  4294  0716                     _PIE0bits	set	1814
  4295  070C                     _PIR0bits	set	1804
  4296  0710                     _PIR4bits	set	1808
  4297  3865                     _TMR0IF	set	14437
  4298  088D                     _OSCCON1	set	2189
  4299  088F                     _OSCCON3	set	2191
  4300  0891                     _OSCEN	set	2193
  4301  0893                     _OSCFRQ	set	2195
  4302  0892                     _OSCTUNE	set	2194
  4303  090C                     _FVRCON	set	2316
  4304  0E8F                     _PPSLOCK	set	3727
  4305  0E8F                     _PPSLOCKbits	set	3727
  4306  0F38                     _ANSELA	set	3896
  4307  0F43                     _ANSELB	set	3907
  4308  0F4E                     _ANSELC	set	3918
  4309  0F11                     _RA1PPS	set	3857
  4310  0F39                     _WPUA	set	3897
  4311  0F44                     _WPUB	set	3908
  4312  0F4F                     _WPUC	set	3919
  4313  0F65                     _WPUE	set	3941
  4314  101B                     STR_2:	
  4315  101B  3453               	retlw	83	;'S'
  4316  101C  3465               	retlw	101	;'e'
  4317  101D  3474               	retlw	116	;'t'
  4318  101E  3470               	retlw	112	;'p'
  4319  101F  346F               	retlw	111	;'o'
  4320  1020  3469               	retlw	105	;'i'
  4321  1021  346E               	retlw	110	;'n'
  4322  1022  3474               	retlw	116	;'t'
  4323  1023  343F               	retlw	63	;'?'
  4324  1024  3400               	retlw	0
  4325  1025                     STR_1:	
  4326  1025  3454               	retlw	84	;'T'
  4327  1026  3469               	retlw	105	;'i'
  4328  1027  346D               	retlw	109	;'m'
  4329  1028  3465               	retlw	101	;'e'
  4330  1029  343A               	retlw	58	;':'
  4331  102A  3400               	retlw	0
  4332  101B                     
  4333                           ; #config settings
  4334  0000                     
  4335                           	psect	cinit
  4336  07C7                     start_initialization:	
  4337  07C7                     __initialization:		;BIGRAM
  4338                           
  4339                           ; Initialize objects allocated to BANK1
  4340  07C7  30CD               	movlw	low __pidataBANK1
  4341  07C8  0084               	movwf	4
  4342  07C9  3097               	movlw	(high __pidataBANK1)| (0+128)
  4343  07CA  0085               	movwf	5
  4344  07CB  30E0               	movlw	low __pdataBANK1
  4345  07CC  0086               	movwf	6
  4346  07CD  3000               	movlw	high __pdataBANK1
  4347  07CE  0087               	movwf	7
  4348  07CF  3000               	movlw	0
  4349  07D0  00FF               	movwf	btemp+1
  4350  07D1  3006               	movlw	6
  4351  07D2  3197  27E7  3187   	fcall	init_ram
  4352                           
  4353                           ; Initialize objects allocated to BANK2
  4354  07D5  3087               	movlw	low __pidataBANK2
  4355  07D6  0084               	movwf	4
  4356  07D7  3088               	movlw	(high __pidataBANK2)| (0+128)
  4357  07D8  0085               	movwf	5
  4358  07D9  3020               	movlw	low __pdataBANK2
  4359  07DA  0086               	movwf	6
  4360  07DB  3001               	movlw	high __pdataBANK2
  4361  07DC  0087               	movwf	7
  4362  07DD  3000               	movlw	0
  4363  07DE  00FF               	movwf	btemp+1
  4364  07DF  3018               	movlw	24
  4365  07E0  3197  27E7  3187   	fcall	init_ram
  4366                           
  4367                           ; Clear objects allocated to BIGRAM
  4368  07E3  308C               	movlw	low (0+9100)
  4369  07E4  0084               	movwf	4
  4370  07E5  3023               	movlw	high (0+9100)
  4371  07E6  0085               	movwf	5
  4372  07E7  3064               	movlw	100
  4373  07E8  00FE               	movwf	btemp
  4374  07E9  3000               	movlw	0
  4375  07EA  00FF               	movwf	btemp+1
  4376  07EB  3197  27DB  3187   	fcall	clear_ram0
  4377                           
  4378                           ; Clear objects allocated to BANK0
  4379  07EE  01EB               	clrf	__pbssBANK0& (0+127)
  4380  07EF  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4381  07F0  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4382  07F1  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4383  07F2  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  4384                           
  4385                           ; Clear objects allocated to BANK1
  4386  07F3  30C4               	movlw	low __pbssBANK1
  4387  07F4  0084               	movwf	4
  4388  07F5  3000               	movlw	high __pbssBANK1
  4389  07F6  0085               	movwf	5
  4390  07F7  301C               	movlw	28
  4391  07F8  00FE               	movwf	btemp
  4392  07F9  3000               	movlw	0
  4393  07FA  00FF               	movwf	btemp+1
  4394  07FB  3197  27DB         	fcall	clear_ram0
  4395  07FD                     end_of_initialization:	
  4396                           ;End of C runtime variable initialization code
  4397                           
  4398  07FD                     __end_of__initialization:	
  4399  07FD  0020               	movlb	0
  4400  07FE  3184  2CBF         	ljmp	_main	;jump to C main() function
  4401                           
  4402                           	psect	bssBANK0
  4403  006B                     __pbssBANK0:	
  4404  006B                     _pidMinOutput:	
  4405  006B                     	ds	2
  4406  006D                     _downCount:	
  4407  006D                     	ds	1
  4408  006E                     _upCount:	
  4409  006E                     	ds	1
  4410  006F                     _x:	
  4411  006F                     	ds	1
  4412                           
  4413                           	psect	bssBANK1
  4414  00C4                     __pbssBANK1:	
  4415  00C4                     LCD_Write_Int@F13694:	
  4416  00C4                     	ds	5
  4417  00C9                     _PID_Kd:	
  4418  00C9                     	ds	3
  4419  00CC                     _PID_Ki:	
  4420  00CC                     	ds	3
  4421  00CF                     _PID_Kp:	
  4422  00CF                     	ds	3
  4423  00D2                     _pidIntegrated:	
  4424  00D2                     	ds	3
  4425  00D5                     _pidPrevInput:	
  4426  00D5                     	ds	3
  4427  00D8                     _errno:	
  4428  00D8                     	ds	2
  4429  00DA                     _pidMaxOutput:	
  4430  00DA                     	ds	2
  4431  00DC                     main@sampleIndex:	
  4432  00DC                     	ds	2
  4433  00DE                     _oldSetpoint:	
  4434  00DE                     	ds	1
  4435  00DF                     _toggleCount:	
  4436  00DF                     	ds	1
  4437                           
  4438                           	psect	dataBANK1
  4439  00E0                     __pdataBANK1:	
  4440  00E0                     _presets:	
  4441  00E0                     	ds	5
  4442  00E5                     _setpoint:	
  4443  00E5                     	ds	1
  4444                           
  4445                           	psect	dataBANK2
  4446  0120                     __pdataBANK2:	
  4447  0120                     ___cgram:	
  4448  0120                     	ds	24
  4449                           
  4450                           	psect	inittext
  4451  17E7                     init_ram:	
  4452  17E7  00FE               	movwf	126
  4453  17E8                     initloop:	
  4454  17E8  0012               	moviw fsr0++
  4455  17E9  001E               	movwi fsr1++
  4456  17EA  3001               	movlw	1
  4457  17EB  02FE               	subwf	126,f
  4458  17EC  3000               	movlw	0
  4459  17ED  3BFF               	subwfb	127,f
  4460  17EE  087F               	movf	127,w
  4461  17EF  047E               	iorwf	126,w
  4462  17F0  1903               	btfsc	3,2
  4463  17F1  3400               	retlw	0
  4464  17F2  2FE8               	goto	initloop
  4465                           
  4466                           	psect	clrtext
  4467  17DB                     clear_ram0:	
  4468                           ;	Called with FSR0 containing the base address, and
  4469                           ;	btemp/btemp+1 has the size to clear
  4470                           
  4471  17DB  0064               	clrwdt	;clear the watchdog before getting into this loop
  4472  17DC                     clrloop0:	
  4473  17DC  0180               	clrf	0	;clear RAM location pointed to by FSR
  4474  17DD  3101               	addfsr 0,1
  4475  17DE  3001               	movlw	1
  4476  17DF  02FE               	subwf	126,f
  4477  17E0  3000               	movlw	0
  4478  17E1  3BFF               	subwfb	127,f
  4479  17E2  087F               	movf	127,w
  4480  17E3  047E               	iorwf	126,w
  4481  17E4  1903               	btfsc	3,2
  4482  17E5  3400               	retlw	0	;all done for this memory range, return
  4483  17E6  2FDC               	goto	clrloop0	;have we reached the end yet?
  4484                           
  4485                           	psect	cstackBANK1
  4486  00A0                     __pcstackBANK1:	
  4487  00A0                     ??_main:	
  4488                           
  4489                           ; 1 bytes @ 0x0
  4490  00A0                     	ds	10
  4491  00AA                     main@R:	
  4492                           
  4493                           ; 3 bytes @ 0xA
  4494  00AA                     	ds	3
  4495  00AD                     _main$1054:	
  4496                           
  4497                           ; 3 bytes @ 0xD
  4498  00AD                     	ds	3
  4499  00B0                     main@PWM_Output:	
  4500                           
  4501                           ; 2 bytes @ 0x10
  4502  00B0                     	ds	2
  4503  00B2                     main@minutes:	
  4504                           
  4505                           ; 2 bytes @ 0x12
  4506  00B2                     	ds	2
  4507  00B4                     main@seconds:	
  4508                           
  4509                           ; 2 bytes @ 0x14
  4510  00B4                     	ds	2
  4511  00B6                     main@counter:	
  4512                           
  4513                           ; 2 bytes @ 0x16
  4514  00B6                     	ds	2
  4515  00B8                     main@readTemperature:	
  4516                           
  4517                           ; 2 bytes @ 0x18
  4518  00B8                     	ds	2
  4519  00BA                     main@toggle:	
  4520                           
  4521                           ; 1 bytes @ 0x1A
  4522  00BA                     	ds	1
  4523  00BB                     main@displayTemp:	
  4524                           
  4525                           ; 2 bytes @ 0x1B
  4526  00BB                     	ds	2
  4527  00BD                     main@totals:	
  4528                           
  4529                           ; 4 bytes @ 0x1D
  4530  00BD                     	ds	4
  4531  00C1                     main@steinhart:	
  4532                           
  4533                           ; 3 bytes @ 0x21
  4534  00C1                     	ds	3
  4535                           
  4536                           	psect	cstackCOMMON
  4537  0070                     __pcstackCOMMON:	
  4538  0070                     ?_OSCILLATOR_Initialize:	
  4539  0070                     ??_OSCILLATOR_Initialize:	
  4540                           ; 1 bytes @ 0x0
  4541                           
  4542  0070                     ?_ADCC_Initialize:	
  4543                           ; 1 bytes @ 0x0
  4544                           
  4545  0070                     ??_ADCC_Initialize:	
  4546                           ; 1 bytes @ 0x0
  4547                           
  4548  0070                     ?_PWM6_Initialize:	
  4549                           ; 1 bytes @ 0x0
  4550                           
  4551  0070                     ??_PWM6_Initialize:	
  4552                           ; 1 bytes @ 0x0
  4553                           
  4554  0070                     ?_TMR0_Initialize:	
  4555                           ; 1 bytes @ 0x0
  4556                           
  4557  0070                     ??_TMR0_Initialize:	
  4558                           ; 1 bytes @ 0x0
  4559                           
  4560  0070                     ?_TMR2_Initialize:	
  4561                           ; 1 bytes @ 0x0
  4562                           
  4563  0070                     ??_TMR2_Initialize:	
  4564                           ; 1 bytes @ 0x0
  4565                           
  4566  0070                     ?_LCD_Init:	
  4567                           ; 1 bytes @ 0x0
  4568                           
  4569  0070                     ?_LCD_Clear:	
  4570                           ; 1 bytes @ 0x0
  4571                           
  4572  0070                     ?_InitCustomChars:	
  4573                           ; 1 bytes @ 0x0
  4574                           
  4575  0070                     ?_Init_PID:	
  4576                           ; 1 bytes @ 0x0
  4577                           
  4578  0070                     ??_Init_PID:	
  4579                           ; 1 bytes @ 0x0
  4580                           
  4581  0070                     ?_LCD_Cmd:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0070                     ?_LCD_Write_Char:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  0070                     ?_readButtons:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0070                     ?_tempSetpoint:	
  4591                           ; 1 bytes @ 0x0
  4592                           
  4593  0070                     ?_PIN_MANAGER_Initialize:	
  4594                           ; 1 bytes @ 0x0
  4595                           
  4596  0070                     ??_PIN_MANAGER_Initialize:	
  4597                           ; 1 bytes @ 0x0
  4598                           
  4599  0070                     ?_SYSTEM_Initialize:	
  4600                           ; 1 bytes @ 0x0
  4601                           
  4602  0070                     ?_LCD_Port:	
  4603                           ; 1 bytes @ 0x0
  4604                           
  4605  0070                     ??_LCD_Port:	
  4606                           ; 1 bytes @ 0x0
  4607                           
  4608  0070                     ?_PWM6_LoadDutyValue:	
  4609                           ; 1 bytes @ 0x0
  4610                           
  4611  0070                     ?_main:	
  4612                           ; 1 bytes @ 0x0
  4613                           
  4614  0070                     ?_ADCC_GetSingleConversion:	
  4615                           ; 1 bytes @ 0x0
  4616                           
  4617  0070                     ?___wmul:	
  4618                           ; 2 bytes @ 0x0
  4619                           
  4620  0070                     ?___awdiv:	
  4621                           ; 2 bytes @ 0x0
  4622                           
  4623  0070                     ?___awmod:	
  4624                           ; 2 bytes @ 0x0
  4625                           
  4626  0070                     ?___ftpack:	
  4627                           ; 2 bytes @ 0x0
  4628                           
  4629  0070                     ?_frexp:	
  4630                           ; 3 bytes @ 0x0
  4631                           
  4632  0070                     ?___ftneg:	
  4633                           ; 3 bytes @ 0x0
  4634                           
  4635  0070                     ?___aldiv:	
  4636                           ; 3 bytes @ 0x0
  4637                           
  4638  0070                     PIN_MANAGER_Initialize@state:	
  4639                           ; 4 bytes @ 0x0
  4640                           
  4641  0070                     LCD_Port@a:	
  4642                           ; 1 bytes @ 0x0
  4643                           
  4644  0070                     PWM6_LoadDutyValue@dutyValue:	
  4645                           ; 1 bytes @ 0x0
  4646                           
  4647  0070                     ___wmul@multiplier:	
  4648                           ; 2 bytes @ 0x0
  4649                           
  4650  0070                     ___awdiv@divisor:	
  4651                           ; 2 bytes @ 0x0
  4652                           
  4653  0070                     ___awmod@divisor:	
  4654                           ; 2 bytes @ 0x0
  4655                           
  4656  0070                     ___ftpack@arg:	
  4657                           ; 2 bytes @ 0x0
  4658                           
  4659  0070                     ___ftneg@f1:	
  4660                           ; 3 bytes @ 0x0
  4661                           
  4662  0070                     frexp@value:	
  4663                           ; 3 bytes @ 0x0
  4664                           
  4665  0070                     ___aldiv@divisor:	
  4666                           ; 3 bytes @ 0x0
  4667                           
  4668                           
  4669                           ; 4 bytes @ 0x0
  4670  0070                     	ds	1
  4671  0071                     ??_LCD_Cmd:	
  4672  0071                     ??_LCD_Write_Char:	
  4673                           ; 1 bytes @ 0x1
  4674                           
  4675                           
  4676                           ; 1 bytes @ 0x1
  4677  0071                     	ds	1
  4678  0072                     ??_PWM6_LoadDutyValue:	
  4679  0072                     LCD_Cmd@a:	
  4680                           ; 1 bytes @ 0x2
  4681                           
  4682  0072                     LCD_Write_Char@temp:	
  4683                           ; 1 bytes @ 0x2
  4684                           
  4685  0072                     ___wmul@multiplicand:	
  4686                           ; 1 bytes @ 0x2
  4687                           
  4688  0072                     ___awdiv@dividend:	
  4689                           ; 2 bytes @ 0x2
  4690                           
  4691  0072                     ___awmod@dividend:	
  4692                           ; 2 bytes @ 0x2
  4693                           
  4694                           
  4695                           ; 2 bytes @ 0x2
  4696  0072                     	ds	1
  4697  0073                     ??_LCD_Init:	
  4698  0073                     ??_LCD_Clear:	
  4699                           ; 1 bytes @ 0x3
  4700                           
  4701  0073                     ?_LCD_Set_Cursor:	
  4702                           ; 1 bytes @ 0x3
  4703                           
  4704  0073                     ??_ADCC_GetSingleConversion:	
  4705                           ; 1 bytes @ 0x3
  4706                           
  4707  0073                     ??___ftneg:	
  4708                           ; 1 bytes @ 0x3
  4709                           
  4710  0073                     LCD_Set_Cursor@y:	
  4711                           ; 1 bytes @ 0x3
  4712                           
  4713  0073                     LCD_Write_Char@y:	
  4714                           ; 1 bytes @ 0x3
  4715                           
  4716  0073                     ADCC_GetSingleConversion@channel:	
  4717                           ; 1 bytes @ 0x3
  4718                           
  4719  0073                     ___ftpack@exp:	
  4720                           ; 1 bytes @ 0x3
  4721                           
  4722  0073                     frexp@eptr:	
  4723                           ; 1 bytes @ 0x3
  4724                           
  4725                           
  4726                           ; 1 bytes @ 0x3
  4727  0073                     	ds	1
  4728  0074                     ??_frexp:	
  4729  0074                     ??_LCD_Set_Cursor:	
  4730                           ; 1 bytes @ 0x4
  4731                           
  4732  0074                     ??___wmul:	
  4733                           ; 1 bytes @ 0x4
  4734                           
  4735  0074                     ??___awdiv:	
  4736                           ; 1 bytes @ 0x4
  4737                           
  4738  0074                     ??___awmod:	
  4739                           ; 1 bytes @ 0x4
  4740                           
  4741  0074                     LCD_Write_Char@a:	
  4742                           ; 1 bytes @ 0x4
  4743                           
  4744  0074                     ___ftpack@sign:	
  4745                           ; 1 bytes @ 0x4
  4746                           
  4747  0074                     ___wmul@product:	
  4748                           ; 1 bytes @ 0x4
  4749                           
  4750  0074                     ___aldiv@dividend:	
  4751                           ; 2 bytes @ 0x4
  4752                           
  4753                           
  4754                           ; 4 bytes @ 0x4
  4755  0074                     	ds	1
  4756  0075                     ??_InitCustomChars:	
  4757  0075                     ??___ftpack:	
  4758                           ; 1 bytes @ 0x5
  4759                           
  4760  0075                     ?_LCD_Write_String:	
  4761                           ; 1 bytes @ 0x5
  4762                           
  4763  0075                     LCD_Init@style:	
  4764                           ; 1 bytes @ 0x5
  4765                           
  4766  0075                     ___awdiv@counter:	
  4767                           ; 1 bytes @ 0x5
  4768                           
  4769  0075                     ___awmod@counter:	
  4770                           ; 1 bytes @ 0x5
  4771                           
  4772  0075                     LCD_Write_String@a:	
  4773                           ; 1 bytes @ 0x5
  4774                           
  4775                           
  4776                           ; 2 bytes @ 0x5
  4777  0075                     	ds	1
  4778  0076                     ?___lwdiv:	
  4779  0076                     InitCustomChars@i:	
  4780                           ; 2 bytes @ 0x6
  4781                           
  4782  0076                     LCD_Set_Cursor@x:	
  4783                           ; 1 bytes @ 0x6
  4784                           
  4785  0076                     ___awdiv@sign:	
  4786                           ; 1 bytes @ 0x6
  4787                           
  4788  0076                     ___awmod@sign:	
  4789                           ; 1 bytes @ 0x6
  4790                           
  4791  0076                     ___lwdiv@divisor:	
  4792                           ; 1 bytes @ 0x6
  4793                           
  4794                           
  4795                           ; 2 bytes @ 0x6
  4796  0076                     	ds	1
  4797  0077                     ??_SYSTEM_Initialize:	
  4798  0077                     ??_LCD_Write_String:	
  4799                           ; 1 bytes @ 0x7
  4800                           
  4801  0077                     LCD_Set_Cursor@z:	
  4802                           ; 1 bytes @ 0x7
  4803                           
  4804  0077                     ___awdiv@quotient:	
  4805                           ; 1 bytes @ 0x7
  4806                           
  4807                           
  4808                           ; 2 bytes @ 0x7
  4809  0077                     	ds	1
  4810  0078                     ??___aldiv:	
  4811  0078                     ?___awtoft:	
  4812                           ; 1 bytes @ 0x8
  4813                           
  4814  0078                     ?___lbtoft:	
  4815                           ; 3 bytes @ 0x8
  4816                           
  4817  0078                     ?___lwtoft:	
  4818                           ; 3 bytes @ 0x8
  4819                           
  4820  0078                     LCD_Set_Cursor@w:	
  4821                           ; 3 bytes @ 0x8
  4822                           
  4823  0078                     LCD_Write_String@i:	
  4824                           ; 1 bytes @ 0x8
  4825                           
  4826  0078                     ___awtoft@c:	
  4827                           ; 2 bytes @ 0x8
  4828                           
  4829  0078                     ___lwdiv@dividend:	
  4830                           ; 2 bytes @ 0x8
  4831                           
  4832  0078                     ___lwtoft@c:	
  4833                           ; 2 bytes @ 0x8
  4834                           
  4835                           
  4836                           ; 2 bytes @ 0x8
  4837  0078                     	ds	1
  4838  0079                     ?_LCD_Write_Int:	
  4839  0079                     LCD_Set_Cursor@temp:	
  4840                           ; 1 bytes @ 0x9
  4841                           
  4842  0079                     LCD_Write_Int@value:	
  4843                           ; 1 bytes @ 0x9
  4844                           
  4845                           
  4846                           ; 2 bytes @ 0x9
  4847  0079                     	ds	1
  4848  007A                     ??___lwdiv:	
  4849                           
  4850                           ; 1 bytes @ 0xA
  4851  007A                     	ds	1
  4852  007B                     ??___awtoft:	
  4853  007B                     ??___lwtoft:	
  4854                           ; 1 bytes @ 0xB
  4855                           
  4856  007B                     LCD_Write_Int@fieldLength:	
  4857                           ; 1 bytes @ 0xB
  4858                           
  4859  007B                     ___lbtoft@c:	
  4860                           ; 1 bytes @ 0xB
  4861                           
  4862  007B                     ___lwdiv@quotient:	
  4863                           ; 1 bytes @ 0xB
  4864                           
  4865                           
  4866                           ; 2 bytes @ 0xB
  4867  007B                     	ds	1
  4868  007C                     LCD_Write_Int@numPlaces:	
  4869                           
  4870                           ; 1 bytes @ 0xC
  4871  007C                     	ds	1
  4872  007D                     LCD_Write_Int@sign:	
  4873  007D                     ___awtoft@sign:	
  4874                           ; 1 bytes @ 0xD
  4875                           
  4876  007D                     ___lwdiv@counter:	
  4877                           ; 1 bytes @ 0xD
  4878                           
  4879                           
  4880                           ; 1 bytes @ 0xD
  4881  007D                     	ds	1
  4882  007E                     ??_eval_poly:	
  4883  007E                     ??_PID_Calculate:	
  4884                           ; 1 bytes @ 0xE
  4885                           
  4886  007E                     ??___ftsub:	
  4887                           ; 1 bytes @ 0xE
  4888                           
  4889                           
  4890                           	psect	cstackBANK0
  4891  0020                     __pcstackBANK0:	
  4892                           ; 1 bytes @ 0xE
  4893                           
  4894  0020                     ??_LCD_Write_Int:	
  4895  0020                     ??___lbtoft:	
  4896                           ; 1 bytes @ 0x0
  4897                           
  4898  0020                     ?___ftdiv:	
  4899                           ; 1 bytes @ 0x0
  4900                           
  4901  0020                     ?___ftmul:	
  4902                           ; 3 bytes @ 0x0
  4903                           
  4904  0020                     ___aldiv@counter:	
  4905                           ; 3 bytes @ 0x0
  4906                           
  4907  0020                     ___ftdiv@f2:	
  4908                           ; 1 bytes @ 0x0
  4909                           
  4910  0020                     ___ftmul@f1:	
  4911                           ; 3 bytes @ 0x0
  4912                           
  4913                           
  4914                           ; 3 bytes @ 0x0
  4915  0020                     	ds	1
  4916  0021                     ___aldiv@sign:	
  4917                           
  4918                           ; 1 bytes @ 0x1
  4919  0021                     	ds	1
  4920  0022                     ___aldiv@quotient:	
  4921                           
  4922                           ; 4 bytes @ 0x2
  4923  0022                     	ds	1
  4924  0023                     ___ftdiv@f1:	
  4925  0023                     ___ftmul@f2:	
  4926                           ; 3 bytes @ 0x3
  4927                           
  4928                           
  4929                           ; 3 bytes @ 0x3
  4930  0023                     	ds	2
  4931  0025                     LCD_Write_Int@str:	
  4932                           
  4933                           ; 5 bytes @ 0x5
  4934  0025                     	ds	1
  4935  0026                     ??___ftdiv:	
  4936  0026                     ??___ftmul:	
  4937                           ; 1 bytes @ 0x6
  4938                           
  4939                           
  4940                           ; 1 bytes @ 0x6
  4941  0026                     	ds	4
  4942  002A                     ___ftdiv@cntr:	
  4943  002A                     ___ftmul@exp:	
  4944                           ; 1 bytes @ 0xA
  4945                           
  4946  002A                     LCD_Write_Int@j:	
  4947                           ; 1 bytes @ 0xA
  4948                           
  4949                           
  4950                           ; 2 bytes @ 0xA
  4951  002A                     	ds	1
  4952  002B                     ___ftdiv@f3:	
  4953  002B                     ___ftmul@f3_as_product:	
  4954                           ; 3 bytes @ 0xB
  4955                           
  4956                           
  4957                           ; 3 bytes @ 0xB
  4958  002B                     	ds	1
  4959  002C                     LCD_Write_Int@i:	
  4960                           
  4961                           ; 2 bytes @ 0xC
  4962  002C                     	ds	2
  4963  002E                     ??_readButtons:	
  4964  002E                     ___ftdiv@exp:	
  4965                           ; 1 bytes @ 0xE
  4966                           
  4967  002E                     ___ftmul@cntr:	
  4968                           ; 1 bytes @ 0xE
  4969                           
  4970                           
  4971                           ; 1 bytes @ 0xE
  4972  002E                     	ds	1
  4973  002F                     ___ftdiv@sign:	
  4974  002F                     ___ftmul@sign:	
  4975                           ; 1 bytes @ 0xF
  4976                           
  4977                           
  4978                           ; 1 bytes @ 0xF
  4979  002F                     	ds	1
  4980  0030                     ?___ftadd:	
  4981  0030                     ___ftadd@f1:	
  4982                           ; 3 bytes @ 0x10
  4983                           
  4984                           
  4985                           ; 3 bytes @ 0x10
  4986  0030                     	ds	1
  4987  0031                     ??_tempSetpoint:	
  4988                           
  4989                           ; 1 bytes @ 0x11
  4990  0031                     	ds	2
  4991  0033                     ___ftadd@f2:	
  4992                           
  4993                           ; 3 bytes @ 0x13
  4994  0033                     	ds	1
  4995  0034                     tempSetpoint@counter:	
  4996                           
  4997                           ; 1 bytes @ 0x14
  4998  0034                     	ds	2
  4999  0036                     ??___ftadd:	
  5000                           
  5001                           ; 1 bytes @ 0x16
  5002  0036                     	ds	4
  5003  003A                     ___ftadd@sign:	
  5004                           
  5005                           ; 1 bytes @ 0x1A
  5006  003A                     	ds	1
  5007  003B                     ___ftadd@exp2:	
  5008                           
  5009                           ; 1 bytes @ 0x1B
  5010  003B                     	ds	1
  5011  003C                     ___ftadd@exp1:	
  5012                           
  5013                           ; 1 bytes @ 0x1C
  5014  003C                     	ds	1
  5015  003D                     ?___ftge:	
  5016  003D                     ?_eval_poly:	
  5017                           ; 1 bit 
  5018                           
  5019  003D                     ?___ftsub:	
  5020                           ; 3 bytes @ 0x1D
  5021                           
  5022  003D                     ___ftge@ff1:	
  5023                           ; 3 bytes @ 0x1D
  5024                           
  5025  003D                     ___ftsub@f2:	
  5026                           ; 3 bytes @ 0x1D
  5027                           
  5028  003D                     eval_poly@x:	
  5029                           ; 3 bytes @ 0x1D
  5030                           
  5031                           
  5032                           ; 3 bytes @ 0x1D
  5033  003D                     	ds	3
  5034  0040                     eval_poly@d:	
  5035  0040                     ___ftge@ff2:	
  5036                           ; 2 bytes @ 0x20
  5037                           
  5038  0040                     ___ftsub@f1:	
  5039                           ; 3 bytes @ 0x20
  5040                           
  5041                           
  5042                           ; 3 bytes @ 0x20
  5043  0040                     	ds	2
  5044  0042                     eval_poly@n:	
  5045                           
  5046                           ; 2 bytes @ 0x22
  5047  0042                     	ds	1
  5048  0043                     ??___ftge:	
  5049                           
  5050                           ; 1 bytes @ 0x23
  5051  0043                     	ds	1
  5052  0044                     eval_poly@res:	
  5053                           
  5054                           ; 3 bytes @ 0x24
  5055  0044                     	ds	2
  5056  0046                     ?_PID_Calculate:	
  5057  0046                     PID_Calculate@setpoint:	
  5058                           ; 3 bytes @ 0x26
  5059                           
  5060                           
  5061                           ; 2 bytes @ 0x26
  5062  0046                     	ds	1
  5063  0047                     ?_log:	
  5064  0047                     log@x:	
  5065                           ; 3 bytes @ 0x27
  5066                           
  5067                           
  5068                           ; 3 bytes @ 0x27
  5069  0047                     	ds	1
  5070  0048                     PID_Calculate@temp:	
  5071                           
  5072                           ; 3 bytes @ 0x28
  5073  0048                     	ds	2
  5074  004A                     ??_log:	
  5075                           
  5076                           ; 1 bytes @ 0x2A
  5077  004A                     	ds	1
  5078  004B                     log@exponent:	
  5079  004B                     PID_Calculate@errorValue:	
  5080                           ; 2 bytes @ 0x2B
  5081                           
  5082                           
  5083                           ; 3 bytes @ 0x2B
  5084  004B                     	ds	3
  5085  004E                     _PID_Calculate$1053:	
  5086                           
  5087                           ; 3 bytes @ 0x2E
  5088  004E                     	ds	3
  5089  0051                     PID_Calculate@derivativeValue:	
  5090                           
  5091                           ; 3 bytes @ 0x31
  5092  0051                     	ds	3
  5093  0054                     PID_Calculate@pidPrevError:	
  5094                           
  5095                           ; 3 bytes @ 0x34
  5096  0054                     	ds	3
  5097  0057                     PID_Calculate@Result:	
  5098                           
  5099                           ; 3 bytes @ 0x37
  5100  0057                     	ds	3
  5101  005A                     PID_Calculate@error:	
  5102                           
  5103                           ; 3 bytes @ 0x3A
  5104  005A                     	ds	3
  5105  005D                     ?___fttol:	
  5106  005D                     ___fttol@f1:	
  5107                           ; 4 bytes @ 0x3D
  5108                           
  5109                           
  5110                           ; 3 bytes @ 0x3D
  5111  005D                     	ds	4
  5112  0061                     ??___fttol:	
  5113                           
  5114                           ; 1 bytes @ 0x41
  5115  0061                     	ds	4
  5116  0065                     ___fttol@sign1:	
  5117                           
  5118                           ; 1 bytes @ 0x45
  5119  0065                     	ds	1
  5120  0066                     ___fttol@lval:	
  5121                           
  5122                           ; 4 bytes @ 0x46
  5123  0066                     	ds	4
  5124  006A                     ___fttol@exp1:	
  5125                           
  5126                           ; 1 bytes @ 0x4A
  5127  006A                     	ds	1
  5128                           
  5129                           	psect	maintext
  5130  04BF                     __pmaintext:	
  5131 ;;
  5132 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5133 ;;
  5134 ;; *************** function _main *****************
  5135 ;; Defined at:
  5136 ;;		line 13 in file "main.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  totals          4   29[BANK1 ] long 
  5141 ;;  steinhart       3   33[BANK1 ] float 
  5142 ;;  R               3   10[BANK1 ] float 
  5143 ;;  displayTemp     2   27[BANK1 ] unsigned int 
  5144 ;;  readTemperat    2   24[BANK1 ] unsigned int 
  5145 ;;  counter         2   22[BANK1 ] unsigned int 
  5146 ;;  seconds         2   20[BANK1 ] unsigned int 
  5147 ;;  minutes         2   18[BANK1 ] unsigned int 
  5148 ;;  PWM_Output      2   16[BANK1 ] unsigned int 
  5149 ;;  readTemperat    2    0        unsigned int 
  5150 ;;  toggle          1   26[BANK1 ] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : B1F/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;Total ram usage:       36 bytes
  5165 ;; Hardware stack levels required when called:    5
  5166 ;; This function calls:
  5167 ;;		_ADCC_GetSingleConversion
  5168 ;;		_LCD_Set_Cursor
  5169 ;;		_LCD_Write_Char
  5170 ;;		_LCD_Write_Int
  5171 ;;		_LCD_Write_String
  5172 ;;		_PID_Calculate
  5173 ;;		_PWM6_LoadDutyValue
  5174 ;;		_SYSTEM_Initialize
  5175 ;;		___aldiv
  5176 ;;		___ftadd
  5177 ;;		___ftdiv
  5178 ;;		___ftge
  5179 ;;		___ftmul
  5180 ;;		___ftneg
  5181 ;;		___ftsub
  5182 ;;		___fttol
  5183 ;;		___lbtoft
  5184 ;;		___lwdiv
  5185 ;;		___lwtoft
  5186 ;;		___wmul
  5187 ;;		_log
  5188 ;;		_readButtons
  5189 ;;		_tempSetpoint
  5190 ;; This function is called by:
  5191 ;;		Startup code after reset
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _main
  5197  04BF                     _main:	
  5198                           
  5199                           ;main.c: 15: SYSTEM_Initialize();
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5203  04BF  318A  229A  3184   	fcall	_SYSTEM_Initialize
  5204                           
  5205                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  5206  04C2  0021               	movlb	1	; select bank1
  5207  04C3  01B0               	clrf	main@PWM_Output^(0+128)
  5208  04C4  01B1               	clrf	(main@PWM_Output+1)^(0+128)
  5209  04C5  01B4               	clrf	main@seconds^(0+128)
  5210  04C6  01B5               	clrf	(main@seconds+1)^(0+128)
  5211  04C7  01B6               	clrf	main@counter^(0+128)
  5212  04C8  01B7               	clrf	(main@counter+1)^(0+128)
  5213  04C9  01B2               	clrf	main@minutes^(0+128)
  5214  04CA  01B3               	clrf	(main@minutes+1)^(0+128)
  5215                           
  5216                           ;main.c: 19: uint8_t toggle = 0;
  5217  04CB  01BA               	clrf	main@toggle^(0+128)
  5218                           
  5219                           ;main.c: 21: float R, steinhart;
  5220                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5221                           ;main.c: 25: int32_t totals = 0;
  5222  04CC  3000               	movlw	0
  5223  04CD  00C0               	movwf	(main@totals+3)^(0+128)
  5224  04CE  3000               	movlw	0
  5225  04CF  00BF               	movwf	(main@totals+2)^(0+128)
  5226  04D0  3000               	movlw	0
  5227  04D1  00BE               	movwf	(main@totals+1)^(0+128)
  5228  04D2  3000               	movlw	0
  5229  04D3  00BD               	movwf	main@totals^(0+128)
  5230  04D4                     l3024:	
  5231                           ;main.c: 28: while (1)
  5232                           
  5233                           
  5234                           ;main.c: 29: {
  5235                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  5236  04D4  3002               	movlw	2
  5237  04D5  3188  2008  3184   	fcall	_ADCC_GetSingleConversion
  5238  04D8  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5239  04D9  0021               	movlb	1	; select bank1
  5240  04DA  00B9               	movwf	(main@readTemperature+1)^(0+128)
  5241  04DB  0870               	movf	?_ADCC_GetSingleConversion,w
  5242  04DC  00B8               	movwf	main@readTemperature^(0+128)
  5243                           
  5244                           ;main.c: 32: totals = totals - samples[sampleIndex];
  5245  04DD  083D               	movf	main@totals^(0+128),w
  5246  04DE  00A0               	movwf	??_main^(0+128)
  5247  04DF  083E               	movf	(main@totals+1)^(0+128),w
  5248  04E0  00A1               	movwf	(??_main^(0+128)+1)
  5249  04E1  083F               	movf	(main@totals+2)^(0+128),w
  5250  04E2  00A2               	movwf	(??_main^(0+128)+2)
  5251  04E3  0840               	movf	(main@totals+3)^(0+128),w
  5252  04E4  00A3               	movwf	(??_main^(0+128)+3)
  5253  04E5  085D               	movf	(main@sampleIndex+1)^(0+128),w
  5254  04E6  00A5               	movwf	((??_main+4)^(0+128)+1)
  5255  04E7  085C               	movf	main@sampleIndex^(0+128),w
  5256  04E8  00A4               	movwf	(??_main+4)^(0+128)
  5257  04E9  35A4               	lslf	(??_main+4)^(0+128),f
  5258  04EA  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5259  04EB  308C               	movlw	140
  5260  04EC  0724               	addwf	(??_main+4)^(0+128),w
  5261  04ED  0084               	movwf	4
  5262  04EE  3023               	movlw	35
  5263  04EF  3D25               	addwfc	(??_main+5)^(0+128),w
  5264  04F0  0085               	movwf	5
  5265  04F1  3F00               	moviw [0]fsr0
  5266  04F2  00A6               	movwf	(??_main+6)^(0+128)
  5267  04F3  3F01               	moviw [1]fsr0
  5268  04F4  00A7               	movwf	((??_main+6)^(0+128)+1)
  5269  04F5  01A8               	clrf	((??_main+6)^(0+128)+2)
  5270  04F6  01A9               	clrf	((??_main+6)^(0+128)+3)
  5271  04F7  09A6               	comf	(??_main+6)^(0+128),f
  5272  04F8  09A7               	comf	((??_main+6)^(0+128)+1),f
  5273  04F9  09A8               	comf	((??_main+6)^(0+128)+2),f
  5274  04FA  09A9               	comf	((??_main+6)^(0+128)+3),f
  5275  04FB  0AA6               	incf	(??_main+6)^(0+128),f
  5276  04FC  1903               	skipnz
  5277  04FD  0AA7               	incf	((??_main+6)^(0+128)+1),f
  5278  04FE  1903               	skipnz
  5279  04FF  0AA8               	incf	((??_main+6)^(0+128)+2),f
  5280  0500  1903               	skipnz
  5281  0501  0AA9               	incf	((??_main+6)^(0+128)+3),f
  5282  0502  0826               	movf	(??_main+6)^(0+128),w
  5283  0503  07A0               	addwf	??_main^(0+128),f
  5284  0504  0827               	movf	(??_main+7)^(0+128),w
  5285  0505  3DA1               	addwfc	(??_main^(0+128)+1),f
  5286  0506  0828               	movf	(??_main+8)^(0+128),w
  5287  0507  3DA2               	addwfc	(??_main^(0+128)+2),f
  5288  0508  0829               	movf	(??_main+9)^(0+128),w
  5289  0509  3DA3               	addwfc	(??_main^(0+128)+3),f
  5290  050A  0823               	movf	(??_main+3)^(0+128),w
  5291  050B  00C0               	movwf	(main@totals+3)^(0+128)
  5292  050C  0822               	movf	(??_main+2)^(0+128),w
  5293  050D  00BF               	movwf	(main@totals+2)^(0+128)
  5294  050E  0821               	movf	(??_main+1)^(0+128),w
  5295  050F  00BE               	movwf	(main@totals+1)^(0+128)
  5296  0510  0820               	movf	??_main^(0+128),w
  5297  0511  00BD               	movwf	main@totals^(0+128)
  5298                           
  5299                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  5300  0512  085D               	movf	(main@sampleIndex+1)^(0+128),w
  5301  0513  00A1               	movwf	(??_main^(0+128)+1)
  5302  0514  085C               	movf	main@sampleIndex^(0+128),w
  5303  0515  00A0               	movwf	??_main^(0+128)
  5304  0516  35A0               	lslf	??_main^(0+128),f
  5305  0517  0DA1               	rlf	(??_main^(0+128)+1),f
  5306  0518  308C               	movlw	140
  5307  0519  00A2               	movwf	(??_main+2)^(0+128)
  5308  051A  3023               	movlw	35
  5309  051B  00A3               	movwf	((??_main+2)^(0+128)+1)
  5310  051C  0820               	movf	??_main^(0+128),w
  5311  051D  0722               	addwf	(??_main+2)^(0+128),w
  5312  051E  0086               	movwf	6
  5313  051F  0821               	movf	(??_main+1)^(0+128),w
  5314  0520  3D23               	addwfc	(??_main+3)^(0+128),w
  5315  0521  0087               	movwf	7
  5316  0522  0838               	movf	main@readTemperature^(0+128),w
  5317  0523  3FC0               	movwi [0]fsr1
  5318  0524  0839               	movf	(main@readTemperature+1)^(0+128),w
  5319  0525  3FC1               	movwi [1]fsr1
  5320                           
  5321                           ;main.c: 36: totals = totals + samples[sampleIndex];
  5322  0526  083D               	movf	main@totals^(0+128),w
  5323  0527  00A0               	movwf	??_main^(0+128)
  5324  0528  083E               	movf	(main@totals+1)^(0+128),w
  5325  0529  00A1               	movwf	(??_main^(0+128)+1)
  5326  052A  083F               	movf	(main@totals+2)^(0+128),w
  5327  052B  00A2               	movwf	(??_main^(0+128)+2)
  5328  052C  0840               	movf	(main@totals+3)^(0+128),w
  5329  052D  00A3               	movwf	(??_main^(0+128)+3)
  5330  052E  085D               	movf	(main@sampleIndex+1)^(0+128),w
  5331  052F  00A5               	movwf	((??_main+4)^(0+128)+1)
  5332  0530  085C               	movf	main@sampleIndex^(0+128),w
  5333  0531  00A4               	movwf	(??_main+4)^(0+128)
  5334  0532  35A4               	lslf	(??_main+4)^(0+128),f
  5335  0533  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5336  0534  308C               	movlw	140
  5337  0535  0724               	addwf	(??_main+4)^(0+128),w
  5338  0536  0084               	movwf	4
  5339  0537  3023               	movlw	35
  5340  0538  3D25               	addwfc	(??_main+5)^(0+128),w
  5341  0539  0085               	movwf	5
  5342  053A  3F00               	moviw [0]fsr0
  5343  053B  00A6               	movwf	(??_main+6)^(0+128)
  5344  053C  3F01               	moviw [1]fsr0
  5345  053D  00A7               	movwf	((??_main+6)^(0+128)+1)
  5346  053E  01A8               	clrf	((??_main+6)^(0+128)+2)
  5347  053F  01A9               	clrf	((??_main+6)^(0+128)+3)
  5348  0540  0826               	movf	(??_main+6)^(0+128),w
  5349  0541  07A0               	addwf	??_main^(0+128),f
  5350  0542  0827               	movf	(??_main+7)^(0+128),w
  5351  0543  3DA1               	addwfc	(??_main^(0+128)+1),f
  5352  0544  0828               	movf	(??_main+8)^(0+128),w
  5353  0545  3DA2               	addwfc	(??_main^(0+128)+2),f
  5354  0546  0829               	movf	(??_main+9)^(0+128),w
  5355  0547  3DA3               	addwfc	(??_main^(0+128)+3),f
  5356  0548  0823               	movf	(??_main+3)^(0+128),w
  5357  0549  00C0               	movwf	(main@totals+3)^(0+128)
  5358  054A  0822               	movf	(??_main+2)^(0+128),w
  5359  054B  00BF               	movwf	(main@totals+2)^(0+128)
  5360  054C  0821               	movf	(??_main+1)^(0+128),w
  5361  054D  00BE               	movwf	(main@totals+1)^(0+128)
  5362  054E  0820               	movf	??_main^(0+128),w
  5363  054F  00BD               	movwf	main@totals^(0+128)
  5364                           
  5365                           ;main.c: 38: sampleIndex += 1;
  5366  0550  3001               	movlw	1
  5367  0551  07DC               	addwf	main@sampleIndex^(0+128),f
  5368  0552  3000               	movlw	0
  5369  0553  3DDD               	addwfc	(main@sampleIndex+1)^(0+128),f
  5370                           
  5371                           ;main.c: 40: if(sampleIndex >= 50)
  5372  0554  3000               	movlw	0
  5373  0555  025D               	subwf	(main@sampleIndex+1)^(0+128),w
  5374  0556  3032               	movlw	50
  5375  0557  1903               	skipnz
  5376  0558  025C               	subwf	main@sampleIndex^(0+128),w
  5377  0559  1C03               	skipc
  5378  055A  2D5D               	goto	l3038
  5379                           
  5380                           ;main.c: 41: {
  5381                           ;main.c: 42: sampleIndex = 0;
  5382  055B  01DC               	clrf	main@sampleIndex^(0+128)
  5383  055C  01DD               	clrf	(main@sampleIndex+1)^(0+128)
  5384  055D                     l3038:	
  5385                           
  5386                           ;main.c: 43: }
  5387                           ;main.c: 45: readTemperature = totals / 50;
  5388  055D  3000               	movlw	0
  5389  055E  00F3               	movwf	___aldiv@divisor+3
  5390  055F  3000               	movlw	0
  5391  0560  00F2               	movwf	___aldiv@divisor+2
  5392  0561  3000               	movlw	0
  5393  0562  00F1               	movwf	___aldiv@divisor+1
  5394  0563  3032               	movlw	50
  5395  0564  00F0               	movwf	___aldiv@divisor
  5396  0565  0840               	movf	(main@totals+3)^(0+128),w
  5397  0566  00F7               	movwf	___aldiv@dividend+3
  5398  0567  083F               	movf	(main@totals+2)^(0+128),w
  5399  0568  00F6               	movwf	___aldiv@dividend+2
  5400  0569  083E               	movf	(main@totals+1)^(0+128),w
  5401  056A  00F5               	movwf	___aldiv@dividend+1
  5402  056B  083D               	movf	main@totals^(0+128),w
  5403  056C  00F4               	movwf	___aldiv@dividend
  5404  056D  318C  24EA  3184   	fcall	___aldiv
  5405  0570  0871               	movf	?___aldiv+1,w
  5406  0571  0021               	movlb	1	; select bank1
  5407  0572  00B9               	movwf	(main@readTemperature+1)^(0+128)
  5408  0573  0870               	movf	?___aldiv,w
  5409  0574  00B8               	movwf	main@readTemperature^(0+128)
  5410                           
  5411                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5412  0575  3000               	movlw	0
  5413  0576  0020               	movlb	0	; select bank0
  5414  0577  00B0               	movwf	___ftadd@f1
  5415  0578  3080               	movlw	128
  5416  0579  00B1               	movwf	___ftadd@f1+1
  5417  057A  30BF               	movlw	191
  5418  057B  00B2               	movwf	___ftadd@f1+2
  5419  057C  0021               	movlb	1	; select bank1
  5420  057D  0839               	movf	(main@readTemperature+1)^(0+128),w
  5421  057E  00F9               	movwf	___lwtoft@c+1
  5422  057F  0838               	movf	main@readTemperature^(0+128),w
  5423  0580  00F8               	movwf	___lwtoft@c
  5424  0581  3188  2046  3184   	fcall	___lwtoft
  5425  0584  0878               	movf	?___lwtoft,w
  5426  0585  0020               	movlb	0	; select bank0
  5427  0586  00A0               	movwf	___ftdiv@f2
  5428  0587  0879               	movf	?___lwtoft+1,w
  5429  0588  00A1               	movwf	___ftdiv@f2+1
  5430  0589  087A               	movf	?___lwtoft+2,w
  5431  058A  00A2               	movwf	___ftdiv@f2+2
  5432  058B  30C0               	movlw	192
  5433  058C  00A3               	movwf	___ftdiv@f1
  5434  058D  307F               	movlw	127
  5435  058E  00A4               	movwf	___ftdiv@f1+1
  5436  058F  3044               	movlw	68
  5437  0590  00A5               	movwf	___ftdiv@f1+2
  5438  0591  318D  25F3  3184   	fcall	___ftdiv
  5439  0594  0020               	movlb	0	; select bank0
  5440  0595  0820               	movf	?___ftdiv,w
  5441  0596  00B3               	movwf	___ftadd@f2
  5442  0597  0821               	movf	?___ftdiv+1,w
  5443  0598  00B4               	movwf	___ftadd@f2+1
  5444  0599  0822               	movf	?___ftdiv+2,w
  5445  059A  00B5               	movwf	___ftadd@f2+2
  5446  059B  3182  221F  3184   	fcall	___ftadd
  5447  059E  0020               	movlb	0	; select bank0
  5448  059F  0830               	movf	?___ftadd,w
  5449  05A0  0021               	movlb	1	; select bank1
  5450  05A1  00AD               	movwf	_main$1054^(0+128)
  5451  05A2  0020               	movlb	0	; select bank0
  5452  05A3  0831               	movf	?___ftadd+1,w
  5453  05A4  0021               	movlb	1	; select bank1
  5454  05A5  00AE               	movwf	(_main$1054+1)^(0+128)
  5455  05A6  0020               	movlb	0	; select bank0
  5456  05A7  0832               	movf	?___ftadd+2,w
  5457  05A8  0021               	movlb	1	; select bank1
  5458  05A9  00AF               	movwf	(_main$1054+2)^(0+128)
  5459                           
  5460                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5461  05AA  082D               	movf	_main$1054^(0+128),w
  5462  05AB  0020               	movlb	0	; select bank0
  5463  05AC  00A0               	movwf	___ftdiv@f2
  5464  05AD  0021               	movlb	1	; select bank1
  5465  05AE  082E               	movf	(_main$1054+1)^(0+128),w
  5466  05AF  0020               	movlb	0	; select bank0
  5467  05B0  00A1               	movwf	___ftdiv@f2+1
  5468  05B1  0021               	movlb	1	; select bank1
  5469  05B2  082F               	movf	(_main$1054+2)^(0+128),w
  5470  05B3  0020               	movlb	0	; select bank0
  5471  05B4  00A2               	movwf	___ftdiv@f2+2
  5472  05B5  3060               	movlw	96
  5473  05B6  00A3               	movwf	___ftdiv@f1
  5474  05B7  301F               	movlw	31
  5475  05B8  00A4               	movwf	___ftdiv@f1+1
  5476  05B9  3046               	movlw	70
  5477  05BA  00A5               	movwf	___ftdiv@f1+2
  5478  05BB  318D  25F3  3184   	fcall	___ftdiv
  5479  05BE  0020               	movlb	0	; select bank0
  5480  05BF  0820               	movf	?___ftdiv,w
  5481  05C0  0021               	movlb	1	; select bank1
  5482  05C1  00AA               	movwf	main@R^(0+128)
  5483  05C2  0020               	movlb	0	; select bank0
  5484  05C3  0821               	movf	?___ftdiv+1,w
  5485  05C4  0021               	movlb	1	; select bank1
  5486  05C5  00AB               	movwf	(main@R+1)^(0+128)
  5487  05C6  0020               	movlb	0	; select bank0
  5488  05C7  0822               	movf	?___ftdiv+2,w
  5489  05C8  0021               	movlb	1	; select bank1
  5490  05C9  00AC               	movwf	(main@R+2)^(0+128)
  5491                           
  5492                           ;main.c: 50: steinhart = R /10061;
  5493  05CA  3034               	movlw	52
  5494  05CB  0020               	movlb	0	; select bank0
  5495  05CC  00A0               	movwf	___ftdiv@f2
  5496  05CD  301D               	movlw	29
  5497  05CE  00A1               	movwf	___ftdiv@f2+1
  5498  05CF  3046               	movlw	70
  5499  05D0  00A2               	movwf	___ftdiv@f2+2
  5500  05D1  0021               	movlb	1	; select bank1
  5501  05D2  082A               	movf	main@R^(0+128),w
  5502  05D3  0020               	movlb	0	; select bank0
  5503  05D4  00A3               	movwf	___ftdiv@f1
  5504  05D5  0021               	movlb	1	; select bank1
  5505  05D6  082B               	movf	(main@R+1)^(0+128),w
  5506  05D7  0020               	movlb	0	; select bank0
  5507  05D8  00A4               	movwf	___ftdiv@f1+1
  5508  05D9  0021               	movlb	1	; select bank1
  5509  05DA  082C               	movf	(main@R+2)^(0+128),w
  5510  05DB  0020               	movlb	0	; select bank0
  5511  05DC  00A5               	movwf	___ftdiv@f1+2
  5512  05DD  318D  25F3  3184   	fcall	___ftdiv
  5513  05E0  0020               	movlb	0	; select bank0
  5514  05E1  0820               	movf	?___ftdiv,w
  5515  05E2  0021               	movlb	1	; select bank1
  5516  05E3  00C1               	movwf	main@steinhart^(0+128)
  5517  05E4  0020               	movlb	0	; select bank0
  5518  05E5  0821               	movf	?___ftdiv+1,w
  5519  05E6  0021               	movlb	1	; select bank1
  5520  05E7  00C2               	movwf	(main@steinhart+1)^(0+128)
  5521  05E8  0020               	movlb	0	; select bank0
  5522  05E9  0822               	movf	?___ftdiv+2,w
  5523  05EA  0021               	movlb	1	; select bank1
  5524  05EB  00C3               	movwf	(main@steinhart+2)^(0+128)
  5525                           
  5526                           ;main.c: 51: steinhart = log(steinhart);
  5527  05EC  0841               	movf	main@steinhart^(0+128),w
  5528  05ED  0020               	movlb	0	; select bank0
  5529  05EE  00C7               	movwf	log@x
  5530  05EF  0021               	movlb	1	; select bank1
  5531  05F0  0842               	movf	(main@steinhart+1)^(0+128),w
  5532  05F1  0020               	movlb	0	; select bank0
  5533  05F2  00C8               	movwf	log@x+1
  5534  05F3  0021               	movlb	1	; select bank1
  5535  05F4  0843               	movf	(main@steinhart+2)^(0+128),w
  5536  05F5  0020               	movlb	0	; select bank0
  5537  05F6  00C9               	movwf	log@x+2
  5538  05F7  318E  269C  3184   	fcall	_log
  5539  05FA  0020               	movlb	0	; select bank0
  5540  05FB  0847               	movf	?_log,w
  5541  05FC  0021               	movlb	1	; select bank1
  5542  05FD  00C1               	movwf	main@steinhart^(0+128)
  5543  05FE  0020               	movlb	0	; select bank0
  5544  05FF  0848               	movf	?_log+1,w
  5545  0600  0021               	movlb	1	; select bank1
  5546  0601  00C2               	movwf	(main@steinhart+1)^(0+128)
  5547  0602  0020               	movlb	0	; select bank0
  5548  0603  0849               	movf	?_log+2,w
  5549  0604  0021               	movlb	1	; select bank1
  5550  0605  00C3               	movwf	(main@steinhart+2)^(0+128)
  5551                           
  5552                           ;main.c: 52: steinhart /= 3995;
  5553  0606  30B0               	movlw	176
  5554  0607  0020               	movlb	0	; select bank0
  5555  0608  00A0               	movwf	___ftdiv@f2
  5556  0609  3079               	movlw	121
  5557  060A  00A1               	movwf	___ftdiv@f2+1
  5558  060B  3045               	movlw	69
  5559  060C  00A2               	movwf	___ftdiv@f2+2
  5560  060D  0021               	movlb	1	; select bank1
  5561  060E  0841               	movf	main@steinhart^(0+128),w
  5562  060F  0020               	movlb	0	; select bank0
  5563  0610  00A3               	movwf	___ftdiv@f1
  5564  0611  0021               	movlb	1	; select bank1
  5565  0612  0842               	movf	(main@steinhart+1)^(0+128),w
  5566  0613  0020               	movlb	0	; select bank0
  5567  0614  00A4               	movwf	___ftdiv@f1+1
  5568  0615  0021               	movlb	1	; select bank1
  5569  0616  0843               	movf	(main@steinhart+2)^(0+128),w
  5570  0617  0020               	movlb	0	; select bank0
  5571  0618  00A5               	movwf	___ftdiv@f1+2
  5572  0619  318D  25F3  3184   	fcall	___ftdiv
  5573  061C  0020               	movlb	0	; select bank0
  5574  061D  0820               	movf	?___ftdiv,w
  5575  061E  0021               	movlb	1	; select bank1
  5576  061F  00C1               	movwf	main@steinhart^(0+128)
  5577  0620  0020               	movlb	0	; select bank0
  5578  0621  0821               	movf	?___ftdiv+1,w
  5579  0622  0021               	movlb	1	; select bank1
  5580  0623  00C2               	movwf	(main@steinhart+1)^(0+128)
  5581  0624  0020               	movlb	0	; select bank0
  5582  0625  0822               	movf	?___ftdiv+2,w
  5583  0626  0021               	movlb	1	; select bank1
  5584  0627  00C3               	movwf	(main@steinhart+2)^(0+128)
  5585                           
  5586                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5587  0628  30CF               	movlw	207
  5588  0629  0020               	movlb	0	; select bank0
  5589  062A  00B0               	movwf	___ftadd@f1
  5590  062B  305B               	movlw	91
  5591  062C  00B1               	movwf	___ftadd@f1+1
  5592  062D  303B               	movlw	59
  5593  062E  00B2               	movwf	___ftadd@f1+2
  5594  062F  0021               	movlb	1	; select bank1
  5595  0630  0841               	movf	main@steinhart^(0+128),w
  5596  0631  0020               	movlb	0	; select bank0
  5597  0632  00B3               	movwf	___ftadd@f2
  5598  0633  0021               	movlb	1	; select bank1
  5599  0634  0842               	movf	(main@steinhart+1)^(0+128),w
  5600  0635  0020               	movlb	0	; select bank0
  5601  0636  00B4               	movwf	___ftadd@f2+1
  5602  0637  0021               	movlb	1	; select bank1
  5603  0638  0843               	movf	(main@steinhart+2)^(0+128),w
  5604  0639  0020               	movlb	0	; select bank0
  5605  063A  00B5               	movwf	___ftadd@f2+2
  5606  063B  3182  221F  3184   	fcall	___ftadd
  5607  063E  0020               	movlb	0	; select bank0
  5608  063F  0830               	movf	?___ftadd,w
  5609  0640  0021               	movlb	1	; select bank1
  5610  0641  00C1               	movwf	main@steinhart^(0+128)
  5611  0642  0020               	movlb	0	; select bank0
  5612  0643  0831               	movf	?___ftadd+1,w
  5613  0644  0021               	movlb	1	; select bank1
  5614  0645  00C2               	movwf	(main@steinhart+1)^(0+128)
  5615  0646  0020               	movlb	0	; select bank0
  5616  0647  0832               	movf	?___ftadd+2,w
  5617  0648  0021               	movlb	1	; select bank1
  5618  0649  00C3               	movwf	(main@steinhart+2)^(0+128)
  5619                           
  5620                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5621  064A  0841               	movf	main@steinhart^(0+128),w
  5622  064B  0020               	movlb	0	; select bank0
  5623  064C  00A0               	movwf	___ftdiv@f2
  5624  064D  0021               	movlb	1	; select bank1
  5625  064E  0842               	movf	(main@steinhart+1)^(0+128),w
  5626  064F  0020               	movlb	0	; select bank0
  5627  0650  00A1               	movwf	___ftdiv@f2+1
  5628  0651  0021               	movlb	1	; select bank1
  5629  0652  0843               	movf	(main@steinhart+2)^(0+128),w
  5630  0653  0020               	movlb	0	; select bank0
  5631  0654  00A2               	movwf	___ftdiv@f2+2
  5632  0655  3000               	movlw	0
  5633  0656  00A3               	movwf	___ftdiv@f1
  5634  0657  3080               	movlw	128
  5635  0658  00A4               	movwf	___ftdiv@f1+1
  5636  0659  303F               	movlw	63
  5637  065A  00A5               	movwf	___ftdiv@f1+2
  5638  065B  318D  25F3  3184   	fcall	___ftdiv
  5639  065E  0020               	movlb	0	; select bank0
  5640  065F  0820               	movf	?___ftdiv,w
  5641  0660  0021               	movlb	1	; select bank1
  5642  0661  00C1               	movwf	main@steinhart^(0+128)
  5643  0662  0020               	movlb	0	; select bank0
  5644  0663  0821               	movf	?___ftdiv+1,w
  5645  0664  0021               	movlb	1	; select bank1
  5646  0665  00C2               	movwf	(main@steinhart+1)^(0+128)
  5647  0666  0020               	movlb	0	; select bank0
  5648  0667  0822               	movf	?___ftdiv+2,w
  5649  0668  0021               	movlb	1	; select bank1
  5650  0669  00C3               	movwf	(main@steinhart+2)^(0+128)
  5651                           
  5652                           ;main.c: 55: steinhart -= 273.15;
  5653  066A  3093               	movlw	147
  5654  066B  0020               	movlb	0	; select bank0
  5655  066C  00BD               	movwf	___ftsub@f2
  5656  066D  3088               	movlw	136
  5657  066E  00BE               	movwf	___ftsub@f2+1
  5658  066F  3043               	movlw	67
  5659  0670  00BF               	movwf	___ftsub@f2+2
  5660  0671  0021               	movlb	1	; select bank1
  5661  0672  0841               	movf	main@steinhart^(0+128),w
  5662  0673  0020               	movlb	0	; select bank0
  5663  0674  00C0               	movwf	___ftsub@f1
  5664  0675  0021               	movlb	1	; select bank1
  5665  0676  0842               	movf	(main@steinhart+1)^(0+128),w
  5666  0677  0020               	movlb	0	; select bank0
  5667  0678  00C1               	movwf	___ftsub@f1+1
  5668  0679  0021               	movlb	1	; select bank1
  5669  067A  0843               	movf	(main@steinhart+2)^(0+128),w
  5670  067B  0020               	movlb	0	; select bank0
  5671  067C  00C2               	movwf	___ftsub@f1+2
  5672  067D  3189  2107  3184   	fcall	___ftsub
  5673  0680  0020               	movlb	0	; select bank0
  5674  0681  083D               	movf	?___ftsub,w
  5675  0682  0021               	movlb	1	; select bank1
  5676  0683  00C1               	movwf	main@steinhart^(0+128)
  5677  0684  0020               	movlb	0	; select bank0
  5678  0685  083E               	movf	?___ftsub+1,w
  5679  0686  0021               	movlb	1	; select bank1
  5680  0687  00C2               	movwf	(main@steinhart+1)^(0+128)
  5681  0688  0020               	movlb	0	; select bank0
  5682  0689  083F               	movf	?___ftsub+2,w
  5683  068A  0021               	movlb	1	; select bank1
  5684  068B  00C3               	movwf	(main@steinhart+2)^(0+128)
  5685                           
  5686                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5687  068C  0841               	movf	main@steinhart^(0+128),w
  5688  068D  0020               	movlb	0	; select bank0
  5689  068E  00A3               	movwf	___ftmul@f2
  5690  068F  0021               	movlb	1	; select bank1
  5691  0690  0842               	movf	(main@steinhart+1)^(0+128),w
  5692  0691  0020               	movlb	0	; select bank0
  5693  0692  00A4               	movwf	___ftmul@f2+1
  5694  0693  0021               	movlb	1	; select bank1
  5695  0694  0843               	movf	(main@steinhart+2)^(0+128),w
  5696  0695  0020               	movlb	0	; select bank0
  5697  0696  00A5               	movwf	___ftmul@f2+2
  5698  0697  3000               	movlw	0
  5699  0698  00A0               	movwf	___ftmul@f1
  5700  0699  3020               	movlw	32
  5701  069A  00A1               	movwf	___ftmul@f1+1
  5702  069B  3041               	movlw	65
  5703  069C  00A2               	movwf	___ftmul@f1+2
  5704  069D  318F  274C  3184   	fcall	___ftmul
  5705  06A0  0020               	movlb	0	; select bank0
  5706  06A1  0820               	movf	?___ftmul,w
  5707  06A2  00DD               	movwf	___fttol@f1
  5708  06A3  0821               	movf	?___ftmul+1,w
  5709  06A4  00DE               	movwf	___fttol@f1+1
  5710  06A5  0822               	movf	?___ftmul+2,w
  5711  06A6  00DF               	movwf	___fttol@f1+2
  5712  06A7  318D  256C  3184   	fcall	___fttol
  5713  06AA  0020               	movlb	0	; select bank0
  5714  06AB  085E               	movf	?___fttol+1,w
  5715  06AC  0021               	movlb	1	; select bank1
  5716  06AD  00BC               	movwf	(main@displayTemp+1)^(0+128)
  5717  06AE  0020               	movlb	0	; select bank0
  5718  06AF  085D               	movf	?___fttol,w
  5719  06B0  0021               	movlb	1	; select bank1
  5720  06B1  00BB               	movwf	main@displayTemp^(0+128)
  5721                           
  5722                           ;main.c: 60: if(toggle == 1)
  5723  06B2  033A               	decf	main@toggle^(0+128),w
  5724  06B3  1D03               	btfss	3,2
  5725  06B4  2EEA               	goto	l3070
  5726                           
  5727                           ;main.c: 61: {
  5728                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5729  06B5  3005               	movlw	5
  5730  06B6  00F6               	movwf	___lwdiv@divisor
  5731  06B7  3000               	movlw	0
  5732  06B8  00F7               	movwf	___lwdiv@divisor+1
  5733  06B9  083C               	movf	(main@displayTemp+1)^(0+128),w
  5734  06BA  00F1               	movwf	___wmul@multiplier+1
  5735  06BB  083B               	movf	main@displayTemp^(0+128),w
  5736  06BC  00F0               	movwf	___wmul@multiplier
  5737  06BD  3009               	movlw	9
  5738  06BE  00F2               	movwf	___wmul@multiplicand
  5739  06BF  3000               	movlw	0
  5740  06C0  00F3               	movwf	___wmul@multiplicand+1
  5741  06C1  3188  20EC  3184   	fcall	___wmul
  5742  06C4  0871               	movf	?___wmul+1,w
  5743  06C5  00F9               	movwf	___lwdiv@dividend+1
  5744  06C6  0870               	movf	?___wmul,w
  5745  06C7  00F8               	movwf	___lwdiv@dividend
  5746  06C8  3189  21EF  3184   	fcall	___lwdiv
  5747  06CB  0876               	movf	?___lwdiv,w
  5748  06CC  3E40               	addlw	64
  5749  06CD  0021               	movlb	1	; select bank1
  5750  06CE  00BB               	movwf	main@displayTemp^(0+128)
  5751  06CF  3001               	movlw	1
  5752  06D0  3D77               	addwfc	?___lwdiv+1,w
  5753  06D1  00BC               	movwf	(main@displayTemp+1)^(0+128)
  5754                           
  5755                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5756  06D2  01F3               	clrf	LCD_Set_Cursor@y
  5757  06D3  3000               	movlw	0
  5758  06D4  318A  22D6  3184   	fcall	_LCD_Set_Cursor
  5759  06D7  0021               	movlb	1	; select bank1
  5760  06D8  083C               	movf	(main@displayTemp+1)^(0+128),w
  5761  06D9  00FA               	movwf	LCD_Write_Int@value+1
  5762  06DA  083B               	movf	main@displayTemp^(0+128),w
  5763  06DB  00F9               	movwf	LCD_Write_Int@value
  5764  06DC  01FB               	clrf	LCD_Write_Int@fieldLength
  5765  06DD  03FB               	decf	LCD_Write_Int@fieldLength,f
  5766  06DE  01FC               	clrf	LCD_Write_Int@numPlaces
  5767  06DF  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5768  06E0  01FD               	clrf	LCD_Write_Int@sign
  5769  06E1  3181  2156  3184   	fcall	_LCD_Write_Int
  5770                           
  5771                           ;main.c: 65: LCD_Write_Char(0);
  5772  06E4  3000               	movlw	0
  5773  06E5  3189  2193  3184   	fcall	_LCD_Write_Char
  5774                           
  5775                           ;main.c: 66: LCD_Write_Char('F');
  5776  06E8  3046               	movlw	70
  5777  06E9  2F01               	goto	L1
  5778  06EA                     l3070:	
  5779                           ;main.c: 68: }
  5780                           
  5781                           ;main.c: 67: LCD_Write_Char(' ');
  5782                           
  5783                           
  5784                           ;main.c: 69: else
  5785                           ;main.c: 70: {
  5786                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5787  06EA  01F3               	clrf	LCD_Set_Cursor@y
  5788  06EB  3000               	movlw	0
  5789  06EC  318A  22D6  3184   	fcall	_LCD_Set_Cursor
  5790  06EF  0021               	movlb	1	; select bank1
  5791  06F0  083C               	movf	(main@displayTemp+1)^(0+128),w
  5792  06F1  00FA               	movwf	LCD_Write_Int@value+1
  5793  06F2  083B               	movf	main@displayTemp^(0+128),w
  5794  06F3  00F9               	movwf	LCD_Write_Int@value
  5795  06F4  01FB               	clrf	LCD_Write_Int@fieldLength
  5796  06F5  03FB               	decf	LCD_Write_Int@fieldLength,f
  5797  06F6  01FC               	clrf	LCD_Write_Int@numPlaces
  5798  06F7  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5799  06F8  01FD               	clrf	LCD_Write_Int@sign
  5800  06F9  3181  2156  3184   	fcall	_LCD_Write_Int
  5801                           
  5802                           ;main.c: 72: LCD_Write_Char(0);
  5803  06FC  3000               	movlw	0
  5804  06FD  3189  2193  3184   	fcall	_LCD_Write_Char
  5805                           
  5806                           ;main.c: 73: LCD_Write_Char('C');
  5807  0700  3043               	movlw	67
  5808  0701                     L1:	
  5809  0701  3189  2193  3184   	fcall	_LCD_Write_Char
  5810                           
  5811                           ;main.c: 74: LCD_Write_Char(' ');
  5812  0704  3020               	movlw	32
  5813  0705  3189  2193  3184   	fcall	_LCD_Write_Char
  5814                           
  5815                           ;main.c: 75: }
  5816                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5817  0708  01F3               	clrf	LCD_Set_Cursor@y
  5818  0709  3001               	movlw	1
  5819  070A  318A  22D6  3184   	fcall	_LCD_Set_Cursor
  5820  070D  3025               	movlw	low (STR_1| (0+32768))
  5821  070E  00F5               	movwf	LCD_Write_String@a
  5822  070F  3090               	movlw	high (STR_1| (0+32768))
  5823  0710  00F6               	movwf	LCD_Write_String@a+1
  5824  0711  3188  20D2  3184   	fcall	_LCD_Write_String
  5825                           
  5826                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5827  0714  3005               	movlw	5
  5828  0715  0021               	movlb	1	; select bank1
  5829  0716  00A0               	movwf	??_main^(0+128)
  5830  0717  0820               	movf	??_main^(0+128),w
  5831  0718  00F3               	movwf	LCD_Set_Cursor@y
  5832  0719  3001               	movlw	1
  5833  071A  318A  22D6  3184   	fcall	_LCD_Set_Cursor
  5834  071D  0021               	movlb	1	; select bank1
  5835  071E  0833               	movf	(main@minutes+1)^(0+128),w
  5836  071F  00FA               	movwf	LCD_Write_Int@value+1
  5837  0720  0832               	movf	main@minutes^(0+128),w
  5838  0721  00F9               	movwf	LCD_Write_Int@value
  5839  0722  3003               	movlw	3
  5840  0723  00A0               	movwf	??_main^(0+128)
  5841  0724  0820               	movf	??_main^(0+128),w
  5842  0725  00FB               	movwf	LCD_Write_Int@fieldLength
  5843  0726  01FC               	clrf	LCD_Write_Int@numPlaces
  5844  0727  01FD               	clrf	LCD_Write_Int@sign
  5845  0728  3181  2156  3184   	fcall	_LCD_Write_Int
  5846                           
  5847                           ;main.c: 81: counter +=1;
  5848  072B  3001               	movlw	1
  5849  072C  0021               	movlb	1	; select bank1
  5850  072D  07B6               	addwf	main@counter^(0+128),f
  5851  072E  3000               	movlw	0
  5852  072F  3DB7               	addwfc	(main@counter+1)^(0+128),f
  5853                           
  5854                           ;main.c: 83: if(counter>12)
  5855  0730  3000               	movlw	0
  5856  0731  0237               	subwf	(main@counter+1)^(0+128),w
  5857  0732  300D               	movlw	13
  5858  0733  1903               	skipnz
  5859  0734  0236               	subwf	main@counter^(0+128),w
  5860  0735  1C03               	skipc
  5861  0736  2F71               	goto	l3100
  5862                           
  5863                           ;main.c: 84: {
  5864                           ;main.c: 85: toggle = 1-toggle;
  5865  0737  033A               	decf	main@toggle^(0+128),w
  5866  0738  3AFF               	xorlw	255
  5867  0739  3E01               	addlw	1
  5868  073A  00A0               	movwf	??_main^(0+128)
  5869  073B  0820               	movf	??_main^(0+128),w
  5870  073C  00BA               	movwf	main@toggle^(0+128)
  5871                           
  5872                           ;main.c: 86: counter = 0;
  5873  073D  01B6               	clrf	main@counter^(0+128)
  5874  073E  01B7               	clrf	(main@counter+1)^(0+128)
  5875                           
  5876                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5877  073F  0841               	movf	main@steinhart^(0+128),w
  5878  0740  0020               	movlb	0	; select bank0
  5879  0741  00C8               	movwf	PID_Calculate@temp
  5880  0742  0021               	movlb	1	; select bank1
  5881  0743  0842               	movf	(main@steinhart+1)^(0+128),w
  5882  0744  0020               	movlb	0	; select bank0
  5883  0745  00C9               	movwf	PID_Calculate@temp+1
  5884  0746  0021               	movlb	1	; select bank1
  5885  0747  0843               	movf	(main@steinhart+2)^(0+128),w
  5886  0748  0020               	movlb	0	; select bank0
  5887  0749  00CA               	movwf	PID_Calculate@temp+2
  5888  074A  0021               	movlb	1	; select bank1
  5889  074B  0865               	movf	_setpoint^(0+128),w
  5890  074C  00A0               	movwf	??_main^(0+128)
  5891  074D  01A1               	clrf	(??_main^(0+128)+1)
  5892  074E  0820               	movf	??_main^(0+128),w
  5893  074F  0020               	movlb	0	; select bank0
  5894  0750  00C6               	movwf	PID_Calculate@setpoint
  5895  0751  0021               	movlb	1	; select bank1
  5896  0752  0821               	movf	(??_main+1)^(0+128),w
  5897  0753  0020               	movlb	0	; select bank0
  5898  0754  00C7               	movwf	PID_Calculate@setpoint+1
  5899  0755  3183  2315  3184   	fcall	_PID_Calculate
  5900  0758  0020               	movlb	0	; select bank0
  5901  0759  0846               	movf	?_PID_Calculate,w
  5902  075A  00DD               	movwf	___fttol@f1
  5903  075B  0847               	movf	?_PID_Calculate+1,w
  5904  075C  00DE               	movwf	___fttol@f1+1
  5905  075D  0848               	movf	?_PID_Calculate+2,w
  5906  075E  00DF               	movwf	___fttol@f1+2
  5907  075F  318D  256C  3184   	fcall	___fttol
  5908  0762  0020               	movlb	0	; select bank0
  5909  0763  085E               	movf	?___fttol+1,w
  5910  0764  0021               	movlb	1	; select bank1
  5911  0765  00B1               	movwf	(main@PWM_Output+1)^(0+128)
  5912  0766  0020               	movlb	0	; select bank0
  5913  0767  085D               	movf	?___fttol,w
  5914  0768  0021               	movlb	1	; select bank1
  5915  0769  00B0               	movwf	main@PWM_Output^(0+128)
  5916                           
  5917                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  5918  076A  0831               	movf	(main@PWM_Output+1)^(0+128),w
  5919  076B  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5920  076C  0830               	movf	main@PWM_Output^(0+128),w
  5921  076D  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5922  076E  3188  2059  3184   	fcall	_PWM6_LoadDutyValue
  5923  0771                     l3100:	
  5924                           
  5925                           ;main.c: 89: }
  5926                           ;main.c: 92: if(TMR0IF)
  5927  0771  002E               	movlb	14	; select bank14
  5928  0772  1E8C               	btfss	12,5	;volatile
  5929  0773  2F80               	goto	l3106
  5930                           
  5931                           ;main.c: 93: {
  5932                           ;main.c: 94: TMR0H = 0x24;
  5933  0774  3024               	movlw	36
  5934  0775  0020               	movlb	0	; select bank0
  5935  0776  009D               	movwf	29	;volatile
  5936                           
  5937                           ;main.c: 95: TMR0L = 0x9F;
  5938  0777  309F               	movlw	159
  5939  0778  009C               	movwf	28	;volatile
  5940                           
  5941                           ;main.c: 96: TMR0IF = 0;
  5942  0779  002E               	movlb	14	; select bank14
  5943  077A  128C               	bcf	12,5	;volatile
  5944                           
  5945                           ;main.c: 97: seconds+=1;
  5946  077B  3001               	movlw	1
  5947  077C  0021               	movlb	1	; select bank1
  5948  077D  07B4               	addwf	main@seconds^(0+128),f
  5949  077E  3000               	movlw	0
  5950  077F  3DB5               	addwfc	(main@seconds+1)^(0+128),f
  5951  0780                     l3106:	
  5952                           
  5953                           ;main.c: 98: }
  5954                           ;main.c: 100: if(setpoint - steinhart < 2)
  5955  0780  0021               	movlb	1	; select bank1
  5956  0781  0841               	movf	main@steinhart^(0+128),w
  5957  0782  00F0               	movwf	___ftneg@f1
  5958  0783  0842               	movf	(main@steinhart+1)^(0+128),w
  5959  0784  00F1               	movwf	___ftneg@f1+1
  5960  0785  0843               	movf	(main@steinhart+2)^(0+128),w
  5961  0786  00F2               	movwf	___ftneg@f1+2
  5962  0787  3197  27D3  3184   	fcall	___ftneg
  5963  078A  0870               	movf	?___ftneg,w
  5964  078B  0020               	movlb	0	; select bank0
  5965  078C  00B0               	movwf	___ftadd@f1
  5966  078D  0871               	movf	?___ftneg+1,w
  5967  078E  00B1               	movwf	___ftadd@f1+1
  5968  078F  0872               	movf	?___ftneg+2,w
  5969  0790  00B2               	movwf	___ftadd@f1+2
  5970  0791  0021               	movlb	1	; select bank1
  5971  0792  0865               	movf	_setpoint^(0+128),w
  5972  0793  3188  20B8  3184   	fcall	___lbtoft
  5973  0796  0878               	movf	?___lbtoft,w
  5974  0797  0020               	movlb	0	; select bank0
  5975  0798  00B3               	movwf	___ftadd@f2
  5976  0799  0879               	movf	?___lbtoft+1,w
  5977  079A  00B4               	movwf	___ftadd@f2+1
  5978  079B  087A               	movf	?___lbtoft+2,w
  5979  079C  00B5               	movwf	___ftadd@f2+2
  5980  079D  3182  221F  3184   	fcall	___ftadd
  5981  07A0  0020               	movlb	0	; select bank0
  5982  07A1  0830               	movf	?___ftadd,w
  5983  07A2  00BD               	movwf	___ftge@ff1
  5984  07A3  0831               	movf	?___ftadd+1,w
  5985  07A4  00BE               	movwf	___ftge@ff1+1
  5986  07A5  0832               	movf	?___ftadd+2,w
  5987  07A6  00BF               	movwf	___ftge@ff1+2
  5988  07A7  3000               	movlw	0
  5989  07A8  00C0               	movwf	___ftge@ff2
  5990  07A9  3000               	movlw	0
  5991  07AA  00C1               	movwf	___ftge@ff2+1
  5992  07AB  3040               	movlw	64
  5993  07AC  00C2               	movwf	___ftge@ff2+2
  5994  07AD  318A  225E  3184   	fcall	___ftge
  5995  07B0  1803               	btfsc	3,0
  5996  07B1  2FC0               	goto	l3114
  5997                           
  5998                           ;main.c: 101: {
  5999                           ;main.c: 102: if(seconds>63)
  6000  07B2  3000               	movlw	0
  6001  07B3  0021               	movlb	1	; select bank1
  6002  07B4  0235               	subwf	(main@seconds+1)^(0+128),w
  6003  07B5  3040               	movlw	64
  6004  07B6  1903               	skipnz
  6005  07B7  0234               	subwf	main@seconds^(0+128),w
  6006  07B8  1C03               	skipc
  6007  07B9  2FC0               	goto	l3114
  6008                           
  6009                           ;main.c: 103: {
  6010                           ;main.c: 104: minutes+=1;
  6011  07BA  3001               	movlw	1
  6012  07BB  07B2               	addwf	main@minutes^(0+128),f
  6013  07BC  3000               	movlw	0
  6014  07BD  3DB3               	addwfc	(main@minutes+1)^(0+128),f
  6015                           
  6016                           ;main.c: 105: seconds = 0;
  6017  07BE  01B4               	clrf	main@seconds^(0+128)
  6018  07BF  01B5               	clrf	(main@seconds+1)^(0+128)
  6019  07C0                     l3114:	
  6020                           
  6021                           ;main.c: 106: }
  6022                           ;main.c: 107: }
  6023                           ;main.c: 109: readButtons();
  6024  07C0  3180  200C  3184   	fcall	_readButtons
  6025                           
  6026                           ;main.c: 110: tempSetpoint();
  6027  07C3  3180  2093  3184   	fcall	_tempSetpoint
  6028  07C6  2CD4               	goto	l3024
  6029  07C7                     __end_of_main:	
  6030                           
  6031                           	psect	text1
  6032  0093                     __ptext1:	
  6033 ;; *************** function _tempSetpoint *****************
  6034 ;; Defined at:
  6035 ;;		line 12 in file "buttons.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  counter         1   20[BANK0 ] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        4 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    4
  6056 ;; This function calls:
  6057 ;;		_LCD_Clear
  6058 ;;		_LCD_Set_Cursor
  6059 ;;		_LCD_Write_Char
  6060 ;;		_LCD_Write_Int
  6061 ;;		_LCD_Write_String
  6062 ;;		_readButtons
  6063 ;; This function is called by:
  6064 ;;		_main
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _tempSetpoint
  6070  0093                     _tempSetpoint:	
  6071                           
  6072                           ;buttons.c: 14: uint8_t counter = 0;
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6076  0093  0020               	movlb	0	; select bank0
  6077  0094  01B4               	clrf	tempSetpoint@counter
  6078                           
  6079                           ;buttons.c: 16: oldSetpoint = setpoint;
  6080  0095  0021               	movlb	1	; select bank1
  6081  0096  0865               	movf	_setpoint^(0+128),w
  6082  0097  0020               	movlb	0	; select bank0
  6083  0098  00B1               	movwf	??_tempSetpoint
  6084  0099  0831               	movf	??_tempSetpoint,w
  6085  009A  0021               	movlb	1	; select bank1
  6086  009B  00DE               	movwf	_oldSetpoint^(0+128)
  6087  009C                     l2806:	
  6088                           ;buttons.c: 18: while(downCount >= 5)
  6089                           
  6090  009C  3005               	movlw	5
  6091  009D  0020               	movlb	0	; select bank0
  6092  009E  026D               	subwf	_downCount,w
  6093  009F  1C03               	btfss	3,0
  6094  00A0  293A               	goto	l2834
  6095                           
  6096                           ;buttons.c: 19: {
  6097                           ;buttons.c: 20: counter+=1;
  6098  00A1  3001               	movlw	1
  6099  00A2  0020               	movlb	0	; select bank0
  6100  00A3  00B1               	movwf	??_tempSetpoint
  6101  00A4  0831               	movf	??_tempSetpoint,w
  6102  00A5  07B4               	addwf	tempSetpoint@counter,f
  6103                           
  6104                           ;buttons.c: 21: if(counter<=1)
  6105  00A6  3002               	movlw	2
  6106  00A7  0234               	subwf	tempSetpoint@counter,w
  6107  00A8  1803               	skipnc
  6108  00A9  28AD               	goto	l2786
  6109                           
  6110                           ;buttons.c: 22: {
  6111                           ;buttons.c: 23: LCD_Clear();
  6112  00AA  3188  2000  3180   	fcall	_LCD_Clear
  6113  00AD                     l2786:	
  6114                           
  6115                           ;buttons.c: 24: }
  6116                           ;buttons.c: 25: setpoint-=1;
  6117  00AD  3001               	movlw	1
  6118  00AE  0021               	movlb	1	; select bank1
  6119  00AF  02E5               	subwf	_setpoint^(0+128),f
  6120                           
  6121                           ;buttons.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6122  00B0  01F3               	clrf	LCD_Set_Cursor@y
  6123  00B1  3000               	movlw	0
  6124  00B2  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6125  00B5  301B               	movlw	low (STR_2| (0+32768))
  6126  00B6  00F5               	movwf	LCD_Write_String@a
  6127  00B7  3090               	movlw	high (STR_2| (0+32768))
  6128  00B8  00F6               	movwf	LCD_Write_String@a+1
  6129  00B9  3188  20D2  3180   	fcall	_LCD_Write_String
  6130                           
  6131                           ;buttons.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6132  00BC  01F3               	clrf	LCD_Set_Cursor@y
  6133  00BD  3001               	movlw	1
  6134  00BE  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6135  00C1  0021               	movlb	1	; select bank1
  6136  00C2  0865               	movf	_setpoint^(0+128),w
  6137  00C3  0020               	movlb	0	; select bank0
  6138  00C4  00B1               	movwf	??_tempSetpoint
  6139  00C5  01B2               	clrf	??_tempSetpoint+1
  6140  00C6  0831               	movf	??_tempSetpoint,w
  6141  00C7  00F9               	movwf	LCD_Write_Int@value
  6142  00C8  0832               	movf	??_tempSetpoint+1,w
  6143  00C9  00FA               	movwf	LCD_Write_Int@value+1
  6144  00CA  3003               	movlw	3
  6145  00CB  00B3               	movwf	??_tempSetpoint+2
  6146  00CC  0833               	movf	??_tempSetpoint+2,w
  6147  00CD  00FB               	movwf	LCD_Write_Int@fieldLength
  6148  00CE  01FC               	clrf	LCD_Write_Int@numPlaces
  6149  00CF  01FD               	clrf	LCD_Write_Int@sign
  6150  00D0  3181  2156  3180   	fcall	_LCD_Write_Int
  6151                           
  6152                           ;buttons.c: 28: LCD_Write_Char(0);
  6153  00D3  3000               	movlw	0
  6154  00D4  3189  2193  3180   	fcall	_LCD_Write_Char
  6155                           
  6156                           ;buttons.c: 29: LCD_Write_Char('C');
  6157  00D7  3043               	movlw	67
  6158  00D8  3189  2193  3180   	fcall	_LCD_Write_Char
  6159                           
  6160                           ;buttons.c: 30: LCD_Write_Char(' ');
  6161  00DB  3020               	movlw	32
  6162  00DC  3189  2193  3180   	fcall	_LCD_Write_Char
  6163                           
  6164                           ;buttons.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6165  00DF  3072               	movlw	114
  6166  00E0  0020               	movlb	0	; select bank0
  6167  00E1  00B2               	movwf	??_tempSetpoint+1
  6168  00E2  30A1               	movlw	161
  6169  00E3  00B1               	movwf	??_tempSetpoint
  6170  00E4                     u3277:	
  6171  00E4  0BB1               	decfsz	??_tempSetpoint,f
  6172  00E5  28E4               	goto	u3277
  6173  00E6  0BB2               	decfsz	??_tempSetpoint+1,f
  6174  00E7  28E4               	goto	u3277
  6175  00E8  3200               	nop2
  6176                           
  6177                           ;buttons.c: 32: readButtons();
  6178  00E9  3180  200C  3180   	fcall	_readButtons
  6179  00EC  289C               	goto	l2806
  6180  00ED                     l2808:	
  6181                           ;buttons.c: 33: }
  6182                           ;buttons.c: 35: while(upCount >= 5)
  6183                           
  6184                           
  6185                           ;buttons.c: 36: {
  6186                           ;buttons.c: 37: counter+=1;
  6187  00ED  3001               	movlw	1
  6188  00EE  00B1               	movwf	??_tempSetpoint
  6189  00EF  0831               	movf	??_tempSetpoint,w
  6190  00F0  07B4               	addwf	tempSetpoint@counter,f
  6191                           
  6192                           ;buttons.c: 38: if(counter<=1)
  6193  00F1  3002               	movlw	2
  6194  00F2  0234               	subwf	tempSetpoint@counter,w
  6195  00F3  1803               	skipnc
  6196  00F4  28F8               	goto	l2814
  6197                           
  6198                           ;buttons.c: 39: {
  6199                           ;buttons.c: 40: LCD_Clear();
  6200  00F5  3188  2000  3180   	fcall	_LCD_Clear
  6201  00F8                     l2814:	
  6202                           
  6203                           ;buttons.c: 41: }
  6204                           ;buttons.c: 42: setpoint+=1;
  6205  00F8  3001               	movlw	1
  6206  00F9  0020               	movlb	0	; select bank0
  6207  00FA  00B1               	movwf	??_tempSetpoint
  6208  00FB  0831               	movf	??_tempSetpoint,w
  6209  00FC  0021               	movlb	1	; select bank1
  6210  00FD  07E5               	addwf	_setpoint^(0+128),f
  6211                           
  6212                           ;buttons.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6213  00FE  01F3               	clrf	LCD_Set_Cursor@y
  6214  00FF  3000               	movlw	0
  6215  0100  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6216  0103  301B               	movlw	low (STR_2| (0+32768))
  6217  0104  00F5               	movwf	LCD_Write_String@a
  6218  0105  3090               	movlw	high (STR_2| (0+32768))
  6219  0106  00F6               	movwf	LCD_Write_String@a+1
  6220  0107  3188  20D2  3180   	fcall	_LCD_Write_String
  6221                           
  6222                           ;buttons.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6223  010A  01F3               	clrf	LCD_Set_Cursor@y
  6224  010B  3001               	movlw	1
  6225  010C  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6226  010F  0021               	movlb	1	; select bank1
  6227  0110  0865               	movf	_setpoint^(0+128),w
  6228  0111  0020               	movlb	0	; select bank0
  6229  0112  00B1               	movwf	??_tempSetpoint
  6230  0113  01B2               	clrf	??_tempSetpoint+1
  6231  0114  0831               	movf	??_tempSetpoint,w
  6232  0115  00F9               	movwf	LCD_Write_Int@value
  6233  0116  0832               	movf	??_tempSetpoint+1,w
  6234  0117  00FA               	movwf	LCD_Write_Int@value+1
  6235  0118  3003               	movlw	3
  6236  0119  00B3               	movwf	??_tempSetpoint+2
  6237  011A  0833               	movf	??_tempSetpoint+2,w
  6238  011B  00FB               	movwf	LCD_Write_Int@fieldLength
  6239  011C  01FC               	clrf	LCD_Write_Int@numPlaces
  6240  011D  01FD               	clrf	LCD_Write_Int@sign
  6241  011E  3181  2156  3180   	fcall	_LCD_Write_Int
  6242                           
  6243                           ;buttons.c: 45: LCD_Write_Char(0);
  6244  0121  3000               	movlw	0
  6245  0122  3189  2193  3180   	fcall	_LCD_Write_Char
  6246                           
  6247                           ;buttons.c: 46: LCD_Write_Char('C');
  6248  0125  3043               	movlw	67
  6249  0126  3189  2193  3180   	fcall	_LCD_Write_Char
  6250                           
  6251                           ;buttons.c: 47: LCD_Write_Char(' ');
  6252  0129  3020               	movlw	32
  6253  012A  3189  2193  3180   	fcall	_LCD_Write_Char
  6254                           
  6255                           ;buttons.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6256  012D  3072               	movlw	114
  6257  012E  0020               	movlb	0	; select bank0
  6258  012F  00B2               	movwf	??_tempSetpoint+1
  6259  0130  30A1               	movlw	161
  6260  0131  00B1               	movwf	??_tempSetpoint
  6261  0132                     u3287:	
  6262  0132  0BB1               	decfsz	??_tempSetpoint,f
  6263  0133  2932               	goto	u3287
  6264  0134  0BB2               	decfsz	??_tempSetpoint+1,f
  6265  0135  2932               	goto	u3287
  6266  0136  3200               	nop2
  6267                           
  6268                           ;buttons.c: 49: readButtons();
  6269  0137  3180  200C  3180   	fcall	_readButtons
  6270  013A                     l2834:	
  6271  013A  3005               	movlw	5
  6272  013B  0020               	movlb	0	; select bank0
  6273  013C  026E               	subwf	_upCount,w
  6274  013D  1803               	skipnc
  6275  013E  28ED               	goto	l2808
  6276                           
  6277                           ;buttons.c: 50: }
  6278                           ;buttons.c: 52: counter = 0;
  6279  013F  01B4               	clrf	tempSetpoint@counter
  6280                           
  6281                           ;buttons.c: 54: if(oldSetpoint!=setpoint)
  6282  0140  0021               	movlb	1	; select bank1
  6283  0141  085E               	movf	_oldSetpoint^(0+128),w
  6284  0142  0665               	xorwf	_setpoint^(0+128),w
  6285  0143  1903               	skipnz
  6286  0144  0008               	return
  6287                           
  6288                           ;buttons.c: 55: {
  6289                           ;buttons.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6290  0145  3003               	movlw	3
  6291  0146  0020               	movlb	0	; select bank0
  6292  0147  00B3               	movwf	??_tempSetpoint+2
  6293  0148  308A               	movlw	138
  6294  0149  00B2               	movwf	??_tempSetpoint+1
  6295  014A  3056               	movlw	86
  6296  014B  00B1               	movwf	??_tempSetpoint
  6297  014C                     u3297:	
  6298  014C  0BB1               	decfsz	??_tempSetpoint,f
  6299  014D  294C               	goto	u3297
  6300  014E  0BB2               	decfsz	??_tempSetpoint+1,f
  6301  014F  294C               	goto	u3297
  6302  0150  0BB3               	decfsz	??_tempSetpoint+2,f
  6303  0151  294C               	goto	u3297
  6304  0152  3200               	nop2
  6305                           
  6306                           ;buttons.c: 57: LCD_Clear();
  6307  0153  3188  2000         	fcall	_LCD_Clear
  6308  0155  0008               	return
  6309  0156                     __end_of_tempSetpoint:	
  6310                           
  6311                           	psect	text2
  6312  000C                     __ptext2:	
  6313 ;; *************** function _readButtons *****************
  6314 ;; Defined at:
  6315 ;;		line 62 in file "buttons.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;Total ram usage:        3 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    3
  6336 ;; This function calls:
  6337 ;;		_LCD_Clear
  6338 ;;		_LCD_Set_Cursor
  6339 ;;		_LCD_Write_Char
  6340 ;;		_LCD_Write_Int
  6341 ;;		_LCD_Write_String
  6342 ;; This function is called by:
  6343 ;;		_main
  6344 ;;		_tempSetpoint
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _readButtons
  6350  000C                     _readButtons:	
  6351                           
  6352                           ;buttons.c: 64: while(RA3 == 0 && RA4 == 0)
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6356  000C  286D               	goto	l2592
  6357  000D                     l2558:	
  6358                           
  6359                           ;buttons.c: 65: {
  6360                           ;buttons.c: 66: downCount = 0;
  6361  000D  0020               	movlb	0	; select bank0
  6362  000E  01ED               	clrf	_downCount
  6363                           
  6364                           ;buttons.c: 67: upCount = 0;
  6365  000F  01EE               	clrf	_upCount
  6366                           
  6367                           ;buttons.c: 68: toggleCount+=1;
  6368  0010  3001               	movlw	1
  6369  0011  00AE               	movwf	??_readButtons
  6370  0012  082E               	movf	??_readButtons,w
  6371  0013  0021               	movlb	1	; select bank1
  6372  0014  07DF               	addwf	_toggleCount^(0+128),f
  6373                           
  6374                           ;buttons.c: 69: if(toggleCount >=6)
  6375  0015  3006               	movlw	6
  6376  0016  025F               	subwf	_toggleCount^(0+128),w
  6377  0017  1C03               	skipc
  6378  0018  286D               	goto	l2592
  6379                           
  6380                           ;buttons.c: 70: {
  6381                           ;buttons.c: 71: x+=1;
  6382  0019  3001               	movlw	1
  6383  001A  0020               	movlb	0	; select bank0
  6384  001B  00AE               	movwf	??_readButtons
  6385  001C  082E               	movf	??_readButtons,w
  6386  001D  07EF               	addwf	_x,f
  6387                           
  6388                           ;buttons.c: 72: if(x>4)
  6389  001E  3005               	movlw	5
  6390  001F  026F               	subwf	_x,w
  6391  0020  1803               	btfsc	3,0
  6392                           
  6393                           ;buttons.c: 73: {
  6394                           ;buttons.c: 74: x=0;
  6395  0021  01EF               	clrf	_x
  6396                           
  6397                           ;buttons.c: 75: }
  6398                           ;buttons.c: 76: setpoint = presets[x];
  6399  0022  086F               	movf	_x,w
  6400  0023  3EE0               	addlw	(low (_presets| 0))& (0+255)
  6401  0024  0086               	movwf	6
  6402  0025  0187               	clrf	7
  6403  0026  0801               	movf	1,w
  6404  0027  00AE               	movwf	??_readButtons
  6405  0028  082E               	movf	??_readButtons,w
  6406  0029  0021               	movlb	1	; select bank1
  6407  002A  00E5               	movwf	_setpoint^(0+128)
  6408                           
  6409                           ;buttons.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6410  002B  01F3               	clrf	LCD_Set_Cursor@y
  6411  002C  3000               	movlw	0
  6412  002D  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6413  0030  301B               	movlw	low (STR_2| (0+32768))
  6414  0031  00F5               	movwf	LCD_Write_String@a
  6415  0032  3090               	movlw	high (STR_2| (0+32768))
  6416  0033  00F6               	movwf	LCD_Write_String@a+1
  6417  0034  3188  20D2  3180   	fcall	_LCD_Write_String
  6418                           
  6419                           ;buttons.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6420  0037  01F3               	clrf	LCD_Set_Cursor@y
  6421  0038  3001               	movlw	1
  6422  0039  318A  22D6  3180   	fcall	_LCD_Set_Cursor
  6423  003C  0021               	movlb	1	; select bank1
  6424  003D  0865               	movf	_setpoint^(0+128),w
  6425  003E  0020               	movlb	0	; select bank0
  6426  003F  00AE               	movwf	??_readButtons
  6427  0040  01AF               	clrf	??_readButtons+1
  6428  0041  082E               	movf	??_readButtons,w
  6429  0042  00F9               	movwf	LCD_Write_Int@value
  6430  0043  082F               	movf	??_readButtons+1,w
  6431  0044  00FA               	movwf	LCD_Write_Int@value+1
  6432  0045  3003               	movlw	3
  6433  0046  00B0               	movwf	??_readButtons+2
  6434  0047  0830               	movf	??_readButtons+2,w
  6435  0048  00FB               	movwf	LCD_Write_Int@fieldLength
  6436  0049  01FC               	clrf	LCD_Write_Int@numPlaces
  6437  004A  01FD               	clrf	LCD_Write_Int@sign
  6438  004B  3181  2156  3180   	fcall	_LCD_Write_Int
  6439                           
  6440                           ;buttons.c: 79: LCD_Write_Char(0);
  6441  004E  3000               	movlw	0
  6442  004F  3189  2193  3180   	fcall	_LCD_Write_Char
  6443                           
  6444                           ;buttons.c: 80: LCD_Write_Char('C');
  6445  0052  3043               	movlw	67
  6446  0053  3189  2193  3180   	fcall	_LCD_Write_Char
  6447                           
  6448                           ;buttons.c: 81: LCD_Write_Char(' ');
  6449  0056  3020               	movlw	32
  6450  0057  3189  2193  3180   	fcall	_LCD_Write_Char
  6451                           
  6452                           ;buttons.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6453  005A  3002               	movlw	2
  6454  005B  0020               	movlb	0	; select bank0
  6455  005C  00B0               	movwf	??_readButtons+2
  6456  005D  30E7               	movlw	231
  6457  005E  00AF               	movwf	??_readButtons+1
  6458  005F  3000               	movlw	0
  6459  0060  00AE               	movwf	??_readButtons
  6460  0061                     u3307:	
  6461  0061  0BAE               	decfsz	??_readButtons,f
  6462  0062  2861               	goto	u3307
  6463  0063  0BAF               	decfsz	??_readButtons+1,f
  6464  0064  2861               	goto	u3307
  6465  0065  0BB0               	decfsz	??_readButtons+2,f
  6466  0066  2861               	goto	u3307
  6467  0067  0000               	nop
  6468                           
  6469                           ;buttons.c: 83: toggleCount = 0;
  6470  0068  0021               	movlb	1	; select bank1
  6471  0069  01DF               	clrf	_toggleCount^(0+128)
  6472                           
  6473                           ;buttons.c: 84: LCD_Clear();
  6474  006A  3188  2000  3180   	fcall	_LCD_Clear
  6475  006D                     l2592:	
  6476  006D  0020               	movlb	0	; select bank0
  6477  006E  198C               	btfsc	12,3	;volatile
  6478  006F  2872               	goto	l389
  6479  0070  1E0C               	btfss	12,4	;volatile
  6480  0071  280D               	goto	l2558
  6481  0072                     l389:	
  6482                           
  6483                           ;buttons.c: 85: }
  6484                           ;buttons.c: 86: }
  6485                           ;buttons.c: 88: if(RA3 == 0)
  6486  0072  198C               	btfsc	12,3	;volatile
  6487  0073  2881               	goto	l2602
  6488                           
  6489                           ;buttons.c: 89: {
  6490                           ;buttons.c: 90: downCount +=1;
  6491  0074  3001               	movlw	1
  6492  0075  00AE               	movwf	??_readButtons
  6493  0076  082E               	movf	??_readButtons,w
  6494  0077  07ED               	addwf	_downCount,f
  6495                           
  6496                           ;buttons.c: 91: if(downCount>5)
  6497  0078  3006               	movlw	6
  6498  0079  026D               	subwf	_downCount,w
  6499  007A  1C03               	skipc
  6500  007B  2882               	goto	l2604
  6501                           
  6502                           ;buttons.c: 92: {
  6503                           ;buttons.c: 93: downCount = 5;
  6504  007C  3005               	movlw	5
  6505  007D  00AE               	movwf	??_readButtons
  6506  007E  082E               	movf	??_readButtons,w
  6507  007F  00ED               	movwf	_downCount
  6508                           
  6509                           ;buttons.c: 94: }
  6510                           ;buttons.c: 95: }
  6511  0080  2882               	goto	l2604
  6512  0081                     l2602:	
  6513                           
  6514                           ;buttons.c: 96: else
  6515                           ;buttons.c: 97: {
  6516                           ;buttons.c: 98: downCount = 0;
  6517  0081  01ED               	clrf	_downCount
  6518  0082                     l2604:	
  6519                           
  6520                           ;buttons.c: 99: }
  6521                           ;buttons.c: 101: if(RA4 == 0)
  6522  0082  1A0C               	btfsc	12,4	;volatile
  6523  0083  2891               	goto	l2612
  6524                           
  6525                           ;buttons.c: 102: {
  6526                           ;buttons.c: 103: upCount +=1;
  6527  0084  3001               	movlw	1
  6528  0085  00AE               	movwf	??_readButtons
  6529  0086  082E               	movf	??_readButtons,w
  6530  0087  07EE               	addwf	_upCount,f
  6531                           
  6532                           ;buttons.c: 104: if(upCount>5)
  6533  0088  3006               	movlw	6
  6534  0089  026E               	subwf	_upCount,w
  6535  008A  1C03               	skipc
  6536  008B  0008               	return
  6537                           
  6538                           ;buttons.c: 105: {
  6539                           ;buttons.c: 106: upCount = 5;
  6540  008C  3005               	movlw	5
  6541  008D  00AE               	movwf	??_readButtons
  6542  008E  082E               	movf	??_readButtons,w
  6543  008F  00EE               	movwf	_upCount
  6544                           
  6545                           ;buttons.c: 107: }
  6546                           ;buttons.c: 108: }
  6547  0090  0008               	return
  6548  0091                     l2612:	
  6549                           
  6550                           ;buttons.c: 109: else
  6551                           ;buttons.c: 110: {
  6552                           ;buttons.c: 111: upCount = 0;
  6553  0091  01EE               	clrf	_upCount
  6554  0092  0008               	return
  6555  0093                     __end_of_readButtons:	
  6556                           
  6557                           	psect	text3
  6558  08D2                     __ptext3:	
  6559 ;; *************** function _LCD_Write_String *****************
  6560 ;; Defined at:
  6561 ;;		line 239 in file "lcd.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  a               2    5[COMMON] PTR const unsigned char 
  6564 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(6), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  i               2    8[COMMON] int 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;Total ram usage:        5 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    2
  6583 ;; This function calls:
  6584 ;;		_LCD_Write_Char
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;;		_tempSetpoint
  6588 ;;		_readButtons
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _LCD_Write_String
  6594  08D2                     _LCD_Write_String:	
  6595                           
  6596                           ;lcd.c: 241: int i;
  6597                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6598                           
  6599                           ;incstack = 0
  6600                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6601  08D2  01F8               	clrf	LCD_Write_String@i
  6602  08D3  01F9               	clrf	LCD_Write_String@i+1
  6603  08D4                     l2206:	
  6604  08D4  0875               	movf	LCD_Write_String@a,w
  6605  08D5  0778               	addwf	LCD_Write_String@i,w
  6606  08D6  0084               	movwf	4
  6607  08D7  0876               	movf	LCD_Write_String@a+1,w
  6608  08D8  3D79               	addwfc	LCD_Write_String@i+1,w
  6609  08D9  0085               	movwf	5
  6610  08DA  0012               	moviw fsr0++
  6611  08DB  1903               	btfsc	3,2
  6612  08DC  0008               	return
  6613                           
  6614                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6615  08DD  0875               	movf	LCD_Write_String@a,w
  6616  08DE  0778               	addwf	LCD_Write_String@i,w
  6617  08DF  0084               	movwf	4
  6618  08E0  0876               	movf	LCD_Write_String@a+1,w
  6619  08E1  3D79               	addwfc	LCD_Write_String@i+1,w
  6620  08E2  0085               	movwf	5
  6621  08E3  0800               	movf	0,w	;code access
  6622  08E4  3189  2193  3188   	fcall	_LCD_Write_Char
  6623  08E7  3001               	movlw	1
  6624  08E8  07F8               	addwf	LCD_Write_String@i,f
  6625  08E9  3000               	movlw	0
  6626  08EA  3DF9               	addwfc	LCD_Write_String@i+1,f
  6627  08EB  28D4               	goto	l2206
  6628  08EC                     __end_of_LCD_Write_String:	
  6629                           
  6630                           	psect	text4
  6631  0156                     __ptext4:	
  6632 ;; *************** function _LCD_Write_Int *****************
  6633 ;; Defined at:
  6634 ;;		line 246 in file "lcd.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  value           2    9[COMMON] int 
  6637 ;;  fieldLength     1   11[COMMON] char 
  6638 ;;  numPlaces       1   12[COMMON] char 
  6639 ;;  sign            1   13[COMMON] char 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  str             5    5[BANK0 ] unsigned char [5]
  6642 ;;  i               2   12[BANK0 ] int 
  6643 ;;  j               2   10[BANK0 ] int 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6653 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;Total ram usage:       19 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    2
  6660 ;; This function calls:
  6661 ;;		_LCD_Write_Char
  6662 ;;		___awdiv
  6663 ;;		___awmod
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;;		_tempSetpoint
  6667 ;;		_readButtons
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _LCD_Write_Int
  6673  0156                     _LCD_Write_Int:	
  6674                           
  6675                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6676                           
  6677                           ;incstack = 0
  6678                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6679  0156  30C4               	movlw	low LCD_Write_Int@F13694
  6680  0157  0086               	movwf	6
  6681  0158  3000               	movlw	high LCD_Write_Int@F13694
  6682  0159  0087               	movwf	7
  6683  015A  3025               	movlw	low LCD_Write_Int@str
  6684  015B  0084               	movwf	4
  6685  015C  3000               	movlw	high LCD_Write_Int@str
  6686  015D  0085               	movwf	5
  6687  015E  3005               	movlw	5
  6688  015F  0020               	movlb	0	; select bank0
  6689  0160  00A0               	movwf	??_LCD_Write_Int
  6690  0161                     u2050:	
  6691  0161  0016               	moviw fsr1++
  6692  0162  001A               	movwi fsr0++
  6693  0163  0BA0               	decfsz	??_LCD_Write_Int,f
  6694  0164  2961               	goto	u2050
  6695                           
  6696                           ;lcd.c: 249: int i=4,j=0;
  6697  0165  3004               	movlw	4
  6698  0166  00AC               	movwf	LCD_Write_Int@i
  6699  0167  3000               	movlw	0
  6700  0168  00AD               	movwf	LCD_Write_Int@i+1
  6701  0169  01AA               	clrf	LCD_Write_Int@j
  6702  016A  01AB               	clrf	LCD_Write_Int@j+1
  6703                           
  6704                           ;lcd.c: 251: if(value<0)
  6705  016B  1FFA               	btfss	LCD_Write_Int@value+1,7
  6706  016C  2977               	goto	l2220
  6707                           
  6708                           ;lcd.c: 252: {
  6709                           ;lcd.c: 253: LCD_Write_Char('-');
  6710  016D  302D               	movlw	45
  6711  016E  3189  2193  3181   	fcall	_LCD_Write_Char
  6712                           
  6713                           ;lcd.c: 254: value=value*-1;
  6714  0171  09F9               	comf	LCD_Write_Int@value,f
  6715  0172  09FA               	comf	LCD_Write_Int@value+1,f
  6716  0173  0AF9               	incf	LCD_Write_Int@value,f
  6717  0174  1903               	skipnz
  6718  0175  0AFA               	incf	LCD_Write_Int@value+1,f
  6719                           
  6720                           ;lcd.c: 255: }
  6721  0176  297E               	goto	l2230
  6722  0177                     l2220:	
  6723                           
  6724                           ;lcd.c: 257: else
  6725                           ;lcd.c: 258: {
  6726                           ;lcd.c: 259: if(sign == 1)
  6727  0177  037D               	decf	LCD_Write_Int@sign,w
  6728  0178  1D03               	btfss	3,2
  6729  0179  297E               	goto	l2230
  6730                           
  6731                           ;lcd.c: 260: {
  6732                           ;lcd.c: 261: LCD_Write_Char('+');
  6733  017A  302B               	movlw	43
  6734  017B  3189  2193  3181   	fcall	_LCD_Write_Char
  6735  017E                     l2230:	
  6736                           ;lcd.c: 262: }
  6737                           ;lcd.c: 263: }
  6738                           ;lcd.c: 265: while(value)
  6739                           
  6740  017E  0879               	movf	LCD_Write_Int@value,w
  6741  017F  047A               	iorwf	LCD_Write_Int@value+1,w
  6742  0180  1903               	btfsc	3,2
  6743  0181  29AB               	goto	l2232
  6744                           
  6745                           ;lcd.c: 266: {
  6746                           ;lcd.c: 267: str[i]=value%10;
  6747  0182  300A               	movlw	10
  6748  0183  00F0               	movwf	___awmod@divisor
  6749  0184  3000               	movlw	0
  6750  0185  00F1               	movwf	___awmod@divisor+1
  6751  0186  087A               	movf	LCD_Write_Int@value+1,w
  6752  0187  00F3               	movwf	___awmod@dividend+1
  6753  0188  0879               	movf	LCD_Write_Int@value,w
  6754  0189  00F2               	movwf	___awmod@dividend
  6755  018A  318B  2315  3181   	fcall	___awmod
  6756  018D  0870               	movf	?___awmod,w
  6757  018E  0020               	movlb	0	; select bank0
  6758  018F  00A0               	movwf	??_LCD_Write_Int
  6759  0190  082C               	movf	LCD_Write_Int@i,w
  6760  0191  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6761  0192  0086               	movwf	6
  6762  0193  0187               	clrf	7
  6763  0194  0820               	movf	??_LCD_Write_Int,w
  6764  0195  0081               	movwf	1
  6765                           
  6766                           ;lcd.c: 268: value=value/10;
  6767  0196  300A               	movlw	10
  6768  0197  00F0               	movwf	___awdiv@divisor
  6769  0198  3000               	movlw	0
  6770  0199  00F1               	movwf	___awdiv@divisor+1
  6771  019A  087A               	movf	LCD_Write_Int@value+1,w
  6772  019B  00F3               	movwf	___awdiv@dividend+1
  6773  019C  0879               	movf	LCD_Write_Int@value,w
  6774  019D  00F2               	movwf	___awdiv@dividend
  6775  019E  318B  235A  3181   	fcall	___awdiv
  6776  01A1  0871               	movf	?___awdiv+1,w
  6777  01A2  00FA               	movwf	LCD_Write_Int@value+1
  6778  01A3  0870               	movf	?___awdiv,w
  6779  01A4  00F9               	movwf	LCD_Write_Int@value
  6780                           
  6781                           ;lcd.c: 269: i--;
  6782  01A5  30FF               	movlw	255
  6783  01A6  0020               	movlb	0	; select bank0
  6784  01A7  07AC               	addwf	LCD_Write_Int@i,f
  6785  01A8  30FF               	movlw	255
  6786  01A9  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6787  01AA  297E               	goto	l2230
  6788  01AB                     l2232:	
  6789                           
  6790                           ;lcd.c: 270: }
  6791                           ;lcd.c: 271: if(fieldLength==-1)
  6792  01AB  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6793  01AC  1903               	btfsc	3,2
  6794  01AD  29B4               	goto	l2238
  6795  01AE  29BD               	goto	l2240
  6796  01AF                     l2236:	
  6797                           ;lcd.c: 272: {
  6798                           ;lcd.c: 273: while(str[j]==0)
  6799                           
  6800                           
  6801                           ;lcd.c: 274: {
  6802                           ;lcd.c: 275: j++;
  6803  01AF  3001               	movlw	1
  6804  01B0  0020               	movlb	0	; select bank0
  6805  01B1  07AA               	addwf	LCD_Write_Int@j,f
  6806  01B2  3000               	movlw	0
  6807  01B3  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6808  01B4                     l2238:	
  6809  01B4  0020               	movlb	0	; select bank0
  6810  01B5  082A               	movf	LCD_Write_Int@j,w
  6811  01B6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6812  01B7  0086               	movwf	6
  6813  01B8  0187               	clrf	7
  6814  01B9  0801               	movf	1,w
  6815  01BA  1D03               	btfss	3,2
  6816  01BB  29CE               	goto	l2242
  6817  01BC  29AF               	goto	l2236
  6818  01BD                     l2240:	
  6819                           ;lcd.c: 276: }
  6820                           ;lcd.c: 277: }
  6821                           
  6822                           
  6823                           ;lcd.c: 278: else
  6824                           ;lcd.c: 279: {
  6825                           ;lcd.c: 280: j=5-fieldLength;
  6826  01BD  087B               	movf	LCD_Write_Int@fieldLength,w
  6827  01BE  0020               	movlb	0	; select bank0
  6828  01BF  00A0               	movwf	??_LCD_Write_Int
  6829  01C0  01A1               	clrf	??_LCD_Write_Int+1
  6830  01C1  1BA0               	btfsc	??_LCD_Write_Int,7
  6831  01C2  03A1               	decf	??_LCD_Write_Int+1,f
  6832  01C3  09A0               	comf	??_LCD_Write_Int,f
  6833  01C4  09A1               	comf	??_LCD_Write_Int+1,f
  6834  01C5  0AA0               	incf	??_LCD_Write_Int,f
  6835  01C6  1903               	skipnz
  6836  01C7  0AA1               	incf	??_LCD_Write_Int+1,f
  6837  01C8  0820               	movf	??_LCD_Write_Int,w
  6838  01C9  3E05               	addlw	5
  6839  01CA  00AA               	movwf	LCD_Write_Int@j
  6840  01CB  3000               	movlw	0
  6841  01CC  3D21               	addwfc	??_LCD_Write_Int+1,w
  6842  01CD  00AB               	movwf	LCD_Write_Int@j+1
  6843  01CE                     l2242:	
  6844                           
  6845                           ;lcd.c: 281: }
  6846                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6847  01CE  082B               	movf	LCD_Write_Int@j+1,w
  6848  01CF  00AD               	movwf	LCD_Write_Int@i+1
  6849  01D0  082A               	movf	LCD_Write_Int@j,w
  6850  01D1  00AC               	movwf	LCD_Write_Int@i
  6851  01D2                     l2248:	
  6852  01D2  087C               	movf	LCD_Write_Int@numPlaces,w
  6853  01D3  00A0               	movwf	??_LCD_Write_Int
  6854  01D4  01A1               	clrf	??_LCD_Write_Int+1
  6855  01D5  1BA0               	btfsc	??_LCD_Write_Int,7
  6856  01D6  03A1               	decf	??_LCD_Write_Int+1,f
  6857  01D7  09A0               	comf	??_LCD_Write_Int,f
  6858  01D8  09A1               	comf	??_LCD_Write_Int+1,f
  6859  01D9  0AA0               	incf	??_LCD_Write_Int,f
  6860  01DA  1903               	skipnz
  6861  01DB  0AA1               	incf	??_LCD_Write_Int+1,f
  6862  01DC  0820               	movf	??_LCD_Write_Int,w
  6863  01DD  3E05               	addlw	5
  6864  01DE  00A2               	movwf	??_LCD_Write_Int+2
  6865  01DF  3000               	movlw	0
  6866  01E0  3D21               	addwfc	??_LCD_Write_Int+1,w
  6867  01E1  00A3               	movwf	??_LCD_Write_Int+3
  6868  01E2  082D               	movf	LCD_Write_Int@i+1,w
  6869  01E3  3A80               	xorlw	128
  6870  01E4  00A4               	movwf	??_LCD_Write_Int+4
  6871  01E5  0823               	movf	??_LCD_Write_Int+3,w
  6872  01E6  3A80               	xorlw	128
  6873  01E7  0224               	subwf	??_LCD_Write_Int+4,w
  6874  01E8  1D03               	skipz
  6875  01E9  29EC               	goto	u2115
  6876  01EA  0822               	movf	??_LCD_Write_Int+2,w
  6877  01EB  022C               	subwf	LCD_Write_Int@i,w
  6878  01EC                     u2115:	
  6879  01EC  1803               	btfsc	3,0
  6880  01ED  29FE               	goto	l2250
  6881                           
  6882                           ;lcd.c: 284: {
  6883                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6884  01EE  0020               	movlb	0	; select bank0
  6885  01EF  082C               	movf	LCD_Write_Int@i,w
  6886  01F0  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6887  01F1  0086               	movwf	6
  6888  01F2  0187               	clrf	7
  6889  01F3  0801               	movf	1,w
  6890  01F4  3E30               	addlw	48
  6891  01F5  3189  2193  3181   	fcall	_LCD_Write_Char
  6892  01F8  3001               	movlw	1
  6893  01F9  0020               	movlb	0	; select bank0
  6894  01FA  07AC               	addwf	LCD_Write_Int@i,f
  6895  01FB  3000               	movlw	0
  6896  01FC  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6897  01FD  29D2               	goto	l2248
  6898  01FE                     l2250:	
  6899                           
  6900                           ;lcd.c: 286: }
  6901                           ;lcd.c: 288: if(numPlaces == 1)
  6902  01FE  037C               	decf	LCD_Write_Int@numPlaces,w
  6903  01FF  1D03               	btfss	3,2
  6904  0200  2A0B               	goto	l2254
  6905                           
  6906                           ;lcd.c: 289: {
  6907                           ;lcd.c: 290: LCD_Write_Char(46);
  6908  0201  302E               	movlw	46
  6909  0202  3189  2193  3181   	fcall	_LCD_Write_Char
  6910                           
  6911                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6912  0205  0020               	movlb	0	; select bank0
  6913  0206  0829               	movf	LCD_Write_Int@str+4,w
  6914  0207  3E30               	addlw	48
  6915  0208  3189  2193  3181   	fcall	_LCD_Write_Char
  6916  020B                     l2254:	
  6917                           
  6918                           ;lcd.c: 292: }
  6919                           ;lcd.c: 294: if(numPlaces == 2)
  6920  020B  3002               	movlw	2
  6921  020C  067C               	xorwf	LCD_Write_Int@numPlaces,w
  6922  020D  1D03               	btfss	3,2
  6923  020E  0008               	return
  6924                           
  6925                           ;lcd.c: 295: {
  6926                           ;lcd.c: 296: LCD_Write_Char(46);
  6927  020F  302E               	movlw	46
  6928  0210  3189  2193  3181   	fcall	_LCD_Write_Char
  6929                           
  6930                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  6931  0213  0020               	movlb	0	; select bank0
  6932  0214  0828               	movf	LCD_Write_Int@str+3,w
  6933  0215  3E30               	addlw	48
  6934  0216  3189  2193  3181   	fcall	_LCD_Write_Char
  6935                           
  6936                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  6937  0219  0020               	movlb	0	; select bank0
  6938  021A  0829               	movf	LCD_Write_Int@str+4,w
  6939  021B  3E30               	addlw	48
  6940  021C  3189  2193         	fcall	_LCD_Write_Char
  6941  021E  0008               	return
  6942  021F                     __end_of_LCD_Write_Int:	
  6943                           
  6944                           	psect	text5
  6945  0B15                     __ptext5:	
  6946 ;; *************** function ___awmod *****************
  6947 ;; Defined at:
  6948 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  divisor         2    0[COMMON] int 
  6951 ;;  dividend        2    2[COMMON] int 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  sign            1    6[COMMON] unsigned char 
  6954 ;;  counter         1    5[COMMON] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  2    0[COMMON] int 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6968 ;;Total ram usage:        7 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_LCD_Write_Int
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function ___awmod
  6979  0B15                     ___awmod:	
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6983  0B15  01F6               	clrf	___awmod@sign
  6984  0B16  1FF3               	btfss	___awmod@dividend+1,7
  6985  0B17  2B1F               	goto	l2148
  6986  0B18  09F2               	comf	___awmod@dividend,f
  6987  0B19  09F3               	comf	___awmod@dividend+1,f
  6988  0B1A  0AF2               	incf	___awmod@dividend,f
  6989  0B1B  1903               	skipnz
  6990  0B1C  0AF3               	incf	___awmod@dividend+1,f
  6991  0B1D  01F6               	clrf	___awmod@sign
  6992  0B1E  0AF6               	incf	___awmod@sign,f
  6993  0B1F                     l2148:	
  6994  0B1F  1FF1               	btfss	___awmod@divisor+1,7
  6995  0B20  2B26               	goto	l2152
  6996  0B21  09F0               	comf	___awmod@divisor,f
  6997  0B22  09F1               	comf	___awmod@divisor+1,f
  6998  0B23  0AF0               	incf	___awmod@divisor,f
  6999  0B24  1903               	skipnz
  7000  0B25  0AF1               	incf	___awmod@divisor+1,f
  7001  0B26                     l2152:	
  7002  0B26  0870               	movf	___awmod@divisor,w
  7003  0B27  0471               	iorwf	___awmod@divisor+1,w
  7004  0B28  1903               	btfsc	3,2
  7005  0B29  2B4D               	goto	l2170
  7006  0B2A  01F5               	clrf	___awmod@counter
  7007  0B2B  0AF5               	incf	___awmod@counter,f
  7008  0B2C                     l2160:	
  7009  0B2C  1BF1               	btfsc	___awmod@divisor+1,7
  7010  0B2D  2B38               	goto	l2162
  7011  0B2E  3001               	movlw	1
  7012  0B2F                     u1945:	
  7013  0B2F  35F0               	lslf	___awmod@divisor,f
  7014  0B30  0DF1               	rlf	___awmod@divisor+1,f
  7015  0B31  0B89               	decfsz	9,f
  7016  0B32  2B2F               	goto	u1945
  7017  0B33  3001               	movlw	1
  7018  0B34  00F4               	movwf	??___awmod
  7019  0B35  0874               	movf	??___awmod,w
  7020  0B36  07F5               	addwf	___awmod@counter,f
  7021  0B37  2B2C               	goto	l2160
  7022  0B38                     l2162:	
  7023  0B38  0871               	movf	___awmod@divisor+1,w
  7024  0B39  0273               	subwf	___awmod@dividend+1,w
  7025  0B3A  1D03               	skipz
  7026  0B3B  2B3E               	goto	u1965
  7027  0B3C  0870               	movf	___awmod@divisor,w
  7028  0B3D  0272               	subwf	___awmod@dividend,w
  7029  0B3E                     u1965:	
  7030  0B3E  1C03               	skipc
  7031  0B3F  2B44               	goto	l2166
  7032  0B40  0870               	movf	___awmod@divisor,w
  7033  0B41  02F2               	subwf	___awmod@dividend,f
  7034  0B42  0871               	movf	___awmod@divisor+1,w
  7035  0B43  3BF3               	subwfb	___awmod@dividend+1,f
  7036  0B44                     l2166:	
  7037  0B44  3001               	movlw	1
  7038  0B45                     u1975:	
  7039  0B45  36F1               	lsrf	___awmod@divisor+1,f
  7040  0B46  0CF0               	rrf	___awmod@divisor,f
  7041  0B47  0B89               	decfsz	9,f
  7042  0B48  2B45               	goto	u1975
  7043  0B49  3001               	movlw	1
  7044  0B4A  02F5               	subwf	___awmod@counter,f
  7045  0B4B  1D03               	btfss	3,2
  7046  0B4C  2B38               	goto	l2162
  7047  0B4D                     l2170:	
  7048  0B4D  0876               	movf	___awmod@sign,w
  7049  0B4E  1903               	btfsc	3,2
  7050  0B4F  2B55               	goto	l2174
  7051  0B50  09F2               	comf	___awmod@dividend,f
  7052  0B51  09F3               	comf	___awmod@dividend+1,f
  7053  0B52  0AF2               	incf	___awmod@dividend,f
  7054  0B53  1903               	skipnz
  7055  0B54  0AF3               	incf	___awmod@dividend+1,f
  7056  0B55                     l2174:	
  7057  0B55  0873               	movf	___awmod@dividend+1,w
  7058  0B56  00F1               	movwf	?___awmod+1
  7059  0B57  0872               	movf	___awmod@dividend,w
  7060  0B58  00F0               	movwf	?___awmod
  7061  0B59  0008               	return
  7062  0B5A                     __end_of___awmod:	
  7063                           
  7064                           	psect	text6
  7065  0B5A                     __ptext6:	
  7066 ;; *************** function ___awdiv *****************
  7067 ;; Defined at:
  7068 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  divisor         2    0[COMMON] int 
  7071 ;;  dividend        2    2[COMMON] int 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  quotient        2    7[COMMON] int 
  7074 ;;  sign            1    6[COMMON] unsigned char 
  7075 ;;  counter         1    5[COMMON] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  2    0[COMMON] int 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        9 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_LCD_Write_Int
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function ___awdiv
  7100  0B5A                     ___awdiv:	
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7104  0B5A  01F6               	clrf	___awdiv@sign
  7105  0B5B  1FF1               	btfss	___awdiv@divisor+1,7
  7106  0B5C  2B64               	goto	l2104
  7107  0B5D  09F0               	comf	___awdiv@divisor,f
  7108  0B5E  09F1               	comf	___awdiv@divisor+1,f
  7109  0B5F  0AF0               	incf	___awdiv@divisor,f
  7110  0B60  1903               	skipnz
  7111  0B61  0AF1               	incf	___awdiv@divisor+1,f
  7112  0B62  01F6               	clrf	___awdiv@sign
  7113  0B63  0AF6               	incf	___awdiv@sign,f
  7114  0B64                     l2104:	
  7115  0B64  1FF3               	btfss	___awdiv@dividend+1,7
  7116  0B65  2B6F               	goto	l2110
  7117  0B66  09F2               	comf	___awdiv@dividend,f
  7118  0B67  09F3               	comf	___awdiv@dividend+1,f
  7119  0B68  0AF2               	incf	___awdiv@dividend,f
  7120  0B69  1903               	skipnz
  7121  0B6A  0AF3               	incf	___awdiv@dividend+1,f
  7122  0B6B  3001               	movlw	1
  7123  0B6C  00F4               	movwf	??___awdiv
  7124  0B6D  0874               	movf	??___awdiv,w
  7125  0B6E  06F6               	xorwf	___awdiv@sign,f
  7126  0B6F                     l2110:	
  7127  0B6F  01F7               	clrf	___awdiv@quotient
  7128  0B70  01F8               	clrf	___awdiv@quotient+1
  7129  0B71  0870               	movf	___awdiv@divisor,w
  7130  0B72  0471               	iorwf	___awdiv@divisor+1,w
  7131  0B73  1903               	btfsc	3,2
  7132  0B74  2B9E               	goto	l2132
  7133  0B75  01F5               	clrf	___awdiv@counter
  7134  0B76  0AF5               	incf	___awdiv@counter,f
  7135  0B77                     l2120:	
  7136  0B77  1BF1               	btfsc	___awdiv@divisor+1,7
  7137  0B78  2B83               	goto	l2122
  7138  0B79  3001               	movlw	1
  7139  0B7A                     u1845:	
  7140  0B7A  35F0               	lslf	___awdiv@divisor,f
  7141  0B7B  0DF1               	rlf	___awdiv@divisor+1,f
  7142  0B7C  0B89               	decfsz	9,f
  7143  0B7D  2B7A               	goto	u1845
  7144  0B7E  3001               	movlw	1
  7145  0B7F  00F4               	movwf	??___awdiv
  7146  0B80  0874               	movf	??___awdiv,w
  7147  0B81  07F5               	addwf	___awdiv@counter,f
  7148  0B82  2B77               	goto	l2120
  7149  0B83                     l2122:	
  7150  0B83  3001               	movlw	1
  7151  0B84                     u1865:	
  7152  0B84  35F7               	lslf	___awdiv@quotient,f
  7153  0B85  0DF8               	rlf	___awdiv@quotient+1,f
  7154  0B86  0B89               	decfsz	9,f
  7155  0B87  2B84               	goto	u1865
  7156  0B88  0871               	movf	___awdiv@divisor+1,w
  7157  0B89  0273               	subwf	___awdiv@dividend+1,w
  7158  0B8A  1D03               	skipz
  7159  0B8B  2B8E               	goto	u1875
  7160  0B8C  0870               	movf	___awdiv@divisor,w
  7161  0B8D  0272               	subwf	___awdiv@dividend,w
  7162  0B8E                     u1875:	
  7163  0B8E  1C03               	skipc
  7164  0B8F  2B95               	goto	l2128
  7165  0B90  0870               	movf	___awdiv@divisor,w
  7166  0B91  02F2               	subwf	___awdiv@dividend,f
  7167  0B92  0871               	movf	___awdiv@divisor+1,w
  7168  0B93  3BF3               	subwfb	___awdiv@dividend+1,f
  7169  0B94  1477               	bsf	___awdiv@quotient,0
  7170  0B95                     l2128:	
  7171  0B95  3001               	movlw	1
  7172  0B96                     u1885:	
  7173  0B96  36F1               	lsrf	___awdiv@divisor+1,f
  7174  0B97  0CF0               	rrf	___awdiv@divisor,f
  7175  0B98  0B89               	decfsz	9,f
  7176  0B99  2B96               	goto	u1885
  7177  0B9A  3001               	movlw	1
  7178  0B9B  02F5               	subwf	___awdiv@counter,f
  7179  0B9C  1D03               	btfss	3,2
  7180  0B9D  2B83               	goto	l2122
  7181  0B9E                     l2132:	
  7182  0B9E  0876               	movf	___awdiv@sign,w
  7183  0B9F  1903               	btfsc	3,2
  7184  0BA0  2BA6               	goto	l2136
  7185  0BA1  09F7               	comf	___awdiv@quotient,f
  7186  0BA2  09F8               	comf	___awdiv@quotient+1,f
  7187  0BA3  0AF7               	incf	___awdiv@quotient,f
  7188  0BA4  1903               	skipnz
  7189  0BA5  0AF8               	incf	___awdiv@quotient+1,f
  7190  0BA6                     l2136:	
  7191  0BA6  0878               	movf	___awdiv@quotient+1,w
  7192  0BA7  00F1               	movwf	?___awdiv+1
  7193  0BA8  0877               	movf	___awdiv@quotient,w
  7194  0BA9  00F0               	movwf	?___awdiv
  7195  0BAA  0008               	return
  7196  0BAB                     __end_of___awdiv:	
  7197                           
  7198                           	psect	text7
  7199  0AD6                     __ptext7:	
  7200 ;; *************** function _LCD_Set_Cursor *****************
  7201 ;; Defined at:
  7202 ;;		line 82 in file "lcd.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  x               1    wreg     unsigned char 
  7205 ;;  y               1    3[COMMON] unsigned char 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  x               1    6[COMMON] unsigned char 
  7208 ;;  temp            1    9[COMMON] unsigned char 
  7209 ;;  w               1    8[COMMON] unsigned char 
  7210 ;;  z               1    7[COMMON] unsigned char 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, pclath, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7220 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;Total ram usage:        7 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    2
  7227 ;; This function calls:
  7228 ;;		_LCD_Cmd
  7229 ;; This function is called by:
  7230 ;;		_main
  7231 ;;		_tempSetpoint
  7232 ;;		_readButtons
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           
  7237                           ;psect for function _LCD_Set_Cursor
  7238  0AD6                     _LCD_Set_Cursor:	
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7242                           ;LCD_Set_Cursor@x stored from wreg
  7243  0AD6  00F6               	movwf	LCD_Set_Cursor@x
  7244                           
  7245                           ;lcd.c: 86: char temp,z,w;
  7246                           ;lcd.c: 88: if(x == 0)
  7247  0AD7  0876               	movf	LCD_Set_Cursor@x,w
  7248  0AD8  1D03               	btfss	3,2
  7249  0AD9  2AF6               	goto	l2190
  7250                           
  7251                           ;lcd.c: 89: {
  7252                           ;lcd.c: 90: temp = 0x80 + y;
  7253  0ADA  0873               	movf	LCD_Set_Cursor@y,w
  7254  0ADB  3E80               	addlw	128
  7255  0ADC  00F4               	movwf	??_LCD_Set_Cursor
  7256  0ADD  0874               	movf	??_LCD_Set_Cursor,w
  7257  0ADE  00F9               	movwf	LCD_Set_Cursor@temp
  7258                           
  7259                           ;lcd.c: 91: z = temp>>4;
  7260  0ADF  0879               	movf	LCD_Set_Cursor@temp,w
  7261  0AE0  00F4               	movwf	??_LCD_Set_Cursor
  7262  0AE1  3004               	movlw	4
  7263  0AE2                     u2015:	
  7264  0AE2  36F4               	lsrf	??_LCD_Set_Cursor,f
  7265  0AE3  0B89               	decfsz	9,f
  7266  0AE4  2AE2               	goto	u2015
  7267  0AE5  0874               	movf	??_LCD_Set_Cursor,w
  7268  0AE6  00F5               	movwf	??_LCD_Set_Cursor+1
  7269  0AE7  0875               	movf	??_LCD_Set_Cursor+1,w
  7270  0AE8  00F7               	movwf	LCD_Set_Cursor@z
  7271                           
  7272                           ;lcd.c: 92: w = temp & 0x0F;
  7273  0AE9  0879               	movf	LCD_Set_Cursor@temp,w
  7274  0AEA  390F               	andlw	15
  7275  0AEB  00F4               	movwf	??_LCD_Set_Cursor
  7276  0AEC  0874               	movf	??_LCD_Set_Cursor,w
  7277  0AED  00F8               	movwf	LCD_Set_Cursor@w
  7278                           
  7279                           ;lcd.c: 93: LCD_Cmd(z);
  7280  0AEE  0877               	movf	LCD_Set_Cursor@z,w
  7281  0AEF  3188  2034  318A   	fcall	_LCD_Cmd
  7282                           
  7283                           ;lcd.c: 94: LCD_Cmd(w);
  7284  0AF2  0878               	movf	LCD_Set_Cursor@w,w
  7285  0AF3  3188  2034         	fcall	_LCD_Cmd
  7286                           
  7287                           ;lcd.c: 95: }
  7288  0AF5  0008               	return
  7289  0AF6                     l2190:	
  7290                           
  7291                           ;lcd.c: 97: else if(x == 1)
  7292  0AF6  0376               	decf	LCD_Set_Cursor@x,w
  7293  0AF7  1D03               	btfss	3,2
  7294  0AF8  0008               	return
  7295                           
  7296                           ;lcd.c: 98: {
  7297                           ;lcd.c: 99: temp = 0xC0 + y;
  7298  0AF9  0873               	movf	LCD_Set_Cursor@y,w
  7299  0AFA  3EC0               	addlw	192
  7300  0AFB  00F4               	movwf	??_LCD_Set_Cursor
  7301  0AFC  0874               	movf	??_LCD_Set_Cursor,w
  7302  0AFD  00F9               	movwf	LCD_Set_Cursor@temp
  7303                           
  7304                           ;lcd.c: 100: z = temp>>4;
  7305  0AFE  0879               	movf	LCD_Set_Cursor@temp,w
  7306  0AFF  00F4               	movwf	??_LCD_Set_Cursor
  7307  0B00  3004               	movlw	4
  7308  0B01                     u2035:	
  7309  0B01  36F4               	lsrf	??_LCD_Set_Cursor,f
  7310  0B02  0B89               	decfsz	9,f
  7311  0B03  2B01               	goto	u2035
  7312  0B04  0874               	movf	??_LCD_Set_Cursor,w
  7313  0B05  00F5               	movwf	??_LCD_Set_Cursor+1
  7314  0B06  0875               	movf	??_LCD_Set_Cursor+1,w
  7315  0B07  00F7               	movwf	LCD_Set_Cursor@z
  7316                           
  7317                           ;lcd.c: 101: w = temp & 0x0F;
  7318  0B08  0879               	movf	LCD_Set_Cursor@temp,w
  7319  0B09  390F               	andlw	15
  7320  0B0A  00F4               	movwf	??_LCD_Set_Cursor
  7321  0B0B  0874               	movf	??_LCD_Set_Cursor,w
  7322  0B0C  00F8               	movwf	LCD_Set_Cursor@w
  7323                           
  7324                           ;lcd.c: 102: LCD_Cmd(z);
  7325  0B0D  0877               	movf	LCD_Set_Cursor@z,w
  7326  0B0E  3188  2034  318A   	fcall	_LCD_Cmd
  7327                           
  7328                           ;lcd.c: 103: LCD_Cmd(w);
  7329  0B11  0878               	movf	LCD_Set_Cursor@w,w
  7330  0B12  3188  2034         	fcall	_LCD_Cmd
  7331  0B14  0008               	return
  7332  0B15                     __end_of_LCD_Set_Cursor:	
  7333                           
  7334                           	psect	text8
  7335  0E9C                     __ptext8:	
  7336 ;; *************** function _log *****************
  7337 ;; Defined at:
  7338 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  x               3   39[BANK0 ] void 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  exponent        2   43[BANK0 ] int 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  3   39[BANK0 ] int 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7352 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;Total ram usage:        6 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    3
  7359 ;; This function calls:
  7360 ;;		___awtoft
  7361 ;;		___ftadd
  7362 ;;		___ftge
  7363 ;;		___ftmul
  7364 ;;		_eval_poly
  7365 ;;		_frexp
  7366 ;; This function is called by:
  7367 ;;		_main
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           
  7372                           ;psect for function _log
  7373  0E9C                     _log:	
  7374                           
  7375                           ;incstack = 0
  7376                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7377  0E9C  0020               	movlb	0	; select bank0
  7378  0E9D  0847               	movf	log@x,w
  7379  0E9E  00BD               	movwf	___ftge@ff1
  7380  0E9F  0848               	movf	log@x+1,w
  7381  0EA0  00BE               	movwf	___ftge@ff1+1
  7382  0EA1  0849               	movf	log@x+2,w
  7383  0EA2  00BF               	movwf	___ftge@ff1+2
  7384  0EA3  3000               	movlw	0
  7385  0EA4  00C0               	movwf	___ftge@ff2
  7386  0EA5  3000               	movlw	0
  7387  0EA6  00C1               	movwf	___ftge@ff2+1
  7388  0EA7  3000               	movlw	0
  7389  0EA8  00C2               	movwf	___ftge@ff2+2
  7390  0EA9  318A  225E  318E   	fcall	___ftge
  7391  0EAC  1803               	btfsc	3,0
  7392  0EAD  2EBB               	goto	l2760
  7393  0EAE  3021               	movlw	33
  7394  0EAF  0021               	movlb	1	; select bank1
  7395  0EB0  00D8               	movwf	_errno^(0+128)
  7396  0EB1  3000               	movlw	0
  7397  0EB2  00D9               	movwf	(_errno^(0+128)+1)
  7398  0EB3  3000               	movlw	0
  7399  0EB4  0020               	movlb	0	; select bank0
  7400  0EB5  00C7               	movwf	?_log
  7401  0EB6  3000               	movlw	0
  7402  0EB7  00C8               	movwf	?_log+1
  7403  0EB8  3000               	movlw	0
  7404  0EB9  00C9               	movwf	?_log+2
  7405  0EBA  0008               	return
  7406  0EBB                     l2760:	
  7407  0EBB  0020               	movlb	0	; select bank0
  7408  0EBC  0849               	movf	log@x+2,w
  7409  0EBD  0448               	iorwf	log@x+1,w
  7410  0EBE  0447               	iorwf	log@x,w
  7411  0EBF  1D03               	skipz
  7412  0EC0  2ECE               	goto	l2766
  7413  0EC1  3022               	movlw	34
  7414  0EC2  0021               	movlb	1	; select bank1
  7415  0EC3  00D8               	movwf	_errno^(0+128)
  7416  0EC4  3000               	movlw	0
  7417  0EC5  00D9               	movwf	(_errno^(0+128)+1)
  7418  0EC6  3000               	movlw	0
  7419  0EC7  0020               	movlb	0	; select bank0
  7420  0EC8  00C7               	movwf	?_log
  7421  0EC9  3000               	movlw	0
  7422  0ECA  00C8               	movwf	?_log+1
  7423  0ECB  3000               	movlw	0
  7424  0ECC  00C9               	movwf	?_log+2
  7425  0ECD  0008               	return
  7426  0ECE                     l2766:	
  7427  0ECE  3000               	movlw	0
  7428  0ECF  00B0               	movwf	___ftadd@f1
  7429  0ED0  3080               	movlw	128
  7430  0ED1  00B1               	movwf	___ftadd@f1+1
  7431  0ED2  30BF               	movlw	191
  7432  0ED3  00B2               	movwf	___ftadd@f1+2
  7433  0ED4  3000               	movlw	0
  7434  0ED5  00A0               	movwf	___ftmul@f1
  7435  0ED6  3000               	movlw	0
  7436  0ED7  00A1               	movwf	___ftmul@f1+1
  7437  0ED8  3040               	movlw	64
  7438  0ED9  00A2               	movwf	___ftmul@f1+2
  7439  0EDA  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7440  0EDB  00CA               	movwf	??_log
  7441  0EDC  084A               	movf	??_log,w
  7442  0EDD  00F3               	movwf	frexp@eptr
  7443  0EDE  0847               	movf	log@x,w
  7444  0EDF  00F0               	movwf	frexp@value
  7445  0EE0  0848               	movf	log@x+1,w
  7446  0EE1  00F1               	movwf	frexp@value+1
  7447  0EE2  0849               	movf	log@x+2,w
  7448  0EE3  00F2               	movwf	frexp@value+2
  7449  0EE4  318A  2223  318E   	fcall	_frexp
  7450  0EE7  0870               	movf	?_frexp,w
  7451  0EE8  0020               	movlb	0	; select bank0
  7452  0EE9  00A3               	movwf	___ftmul@f2
  7453  0EEA  0871               	movf	?_frexp+1,w
  7454  0EEB  00A4               	movwf	___ftmul@f2+1
  7455  0EEC  0872               	movf	?_frexp+2,w
  7456  0EED  00A5               	movwf	___ftmul@f2+2
  7457  0EEE  318F  274C  318E   	fcall	___ftmul
  7458  0EF1  0020               	movlb	0	; select bank0
  7459  0EF2  0820               	movf	?___ftmul,w
  7460  0EF3  00B3               	movwf	___ftadd@f2
  7461  0EF4  0821               	movf	?___ftmul+1,w
  7462  0EF5  00B4               	movwf	___ftadd@f2+1
  7463  0EF6  0822               	movf	?___ftmul+2,w
  7464  0EF7  00B5               	movwf	___ftadd@f2+2
  7465  0EF8  3182  221F  318E   	fcall	___ftadd
  7466  0EFB  0020               	movlb	0	; select bank0
  7467  0EFC  0830               	movf	?___ftadd,w
  7468  0EFD  00C7               	movwf	log@x
  7469  0EFE  0831               	movf	?___ftadd+1,w
  7470  0EFF  00C8               	movwf	log@x+1
  7471  0F00  0832               	movf	?___ftadd+2,w
  7472  0F01  00C9               	movwf	log@x+2
  7473  0F02  30FF               	movlw	255
  7474  0F03  07CB               	addwf	log@exponent,f
  7475  0F04  30FF               	movlw	255
  7476  0F05  3DCC               	addwfc	log@exponent+1,f
  7477  0F06  0847               	movf	log@x,w
  7478  0F07  00BD               	movwf	eval_poly@x
  7479  0F08  0848               	movf	log@x+1,w
  7480  0F09  00BE               	movwf	eval_poly@x+1
  7481  0F0A  0849               	movf	log@x+2,w
  7482  0F0B  00BF               	movwf	eval_poly@x+2
  7483  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  7484  0F0D  00C0               	movwf	eval_poly@d
  7485  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  7486  0F0F  00C1               	movwf	eval_poly@d+1
  7487  0F10  3008               	movlw	8
  7488  0F11  00C2               	movwf	eval_poly@n
  7489  0F12  3000               	movlw	0
  7490  0F13  00C3               	movwf	eval_poly@n+1
  7491  0F14  318B  23AB  318E   	fcall	_eval_poly
  7492  0F17  0020               	movlb	0	; select bank0
  7493  0F18  083D               	movf	?_eval_poly,w
  7494  0F19  00C7               	movwf	log@x
  7495  0F1A  083E               	movf	?_eval_poly+1,w
  7496  0F1B  00C8               	movwf	log@x+1
  7497  0F1C  083F               	movf	?_eval_poly+2,w
  7498  0F1D  00C9               	movwf	log@x+2
  7499  0F1E  0847               	movf	log@x,w
  7500  0F1F  00B0               	movwf	___ftadd@f1
  7501  0F20  0848               	movf	log@x+1,w
  7502  0F21  00B1               	movwf	___ftadd@f1+1
  7503  0F22  0849               	movf	log@x+2,w
  7504  0F23  00B2               	movwf	___ftadd@f1+2
  7505  0F24  3072               	movlw	114
  7506  0F25  00A0               	movwf	___ftmul@f1
  7507  0F26  3031               	movlw	49
  7508  0F27  00A1               	movwf	___ftmul@f1+1
  7509  0F28  303F               	movlw	63
  7510  0F29  00A2               	movwf	___ftmul@f1+2
  7511  0F2A  084C               	movf	log@exponent+1,w
  7512  0F2B  00F9               	movwf	___awtoft@c+1
  7513  0F2C  084B               	movf	log@exponent,w
  7514  0F2D  00F8               	movwf	___awtoft@c
  7515  0F2E  3189  2125  318E   	fcall	___awtoft
  7516  0F31  0878               	movf	?___awtoft,w
  7517  0F32  0020               	movlb	0	; select bank0
  7518  0F33  00A3               	movwf	___ftmul@f2
  7519  0F34  0879               	movf	?___awtoft+1,w
  7520  0F35  00A4               	movwf	___ftmul@f2+1
  7521  0F36  087A               	movf	?___awtoft+2,w
  7522  0F37  00A5               	movwf	___ftmul@f2+2
  7523  0F38  318F  274C  318E   	fcall	___ftmul
  7524  0F3B  0020               	movlb	0	; select bank0
  7525  0F3C  0820               	movf	?___ftmul,w
  7526  0F3D  00B3               	movwf	___ftadd@f2
  7527  0F3E  0821               	movf	?___ftmul+1,w
  7528  0F3F  00B4               	movwf	___ftadd@f2+1
  7529  0F40  0822               	movf	?___ftmul+2,w
  7530  0F41  00B5               	movwf	___ftadd@f2+2
  7531  0F42  3182  221F         	fcall	___ftadd
  7532  0F44  0020               	movlb	0	; select bank0
  7533  0F45  0830               	movf	?___ftadd,w
  7534  0F46  00C7               	movwf	?_log
  7535  0F47  0831               	movf	?___ftadd+1,w
  7536  0F48  00C8               	movwf	?_log+1
  7537  0F49  0832               	movf	?___ftadd+2,w
  7538  0F4A  00C9               	movwf	?_log+2
  7539  0F4B  0008               	return
  7540  0F4C                     __end_of_log:	
  7541                           
  7542                           	psect	text9
  7543  0A23                     __ptext9:	
  7544 ;; *************** function _frexp *****************
  7545 ;; Defined at:
  7546 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  value           3    0[COMMON] int 
  7549 ;;  eptr            1    3[COMMON] PTR int 
  7550 ;;		 -> log@exponent(2), 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  3    0[COMMON] PTR int 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;Total ram usage:        6 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_log
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           
  7576                           ;psect for function _frexp
  7577  0A23                     _frexp:	
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7581  0A23  0872               	movf	frexp@value+2,w
  7582  0A24  0471               	iorwf	frexp@value+1,w
  7583  0A25  0470               	iorwf	frexp@value,w
  7584  0A26  1D03               	skipz
  7585  0A27  2A35               	goto	l2662
  7586  0A28  0873               	movf	frexp@eptr,w
  7587  0A29  0086               	movwf	6
  7588  0A2A  0187               	clrf	7
  7589  0A2B  3000               	movlw	0
  7590  0A2C  3FC0               	movwi [0]fsr1
  7591  0A2D  3FC1               	movwi [1]fsr1
  7592  0A2E  3000               	movlw	0
  7593  0A2F  00F0               	movwf	?_frexp
  7594  0A30  3000               	movlw	0
  7595  0A31  00F1               	movwf	?_frexp+1
  7596  0A32  3000               	movlw	0
  7597  0A33  00F2               	movwf	?_frexp+2
  7598  0A34  0008               	return
  7599  0A35                     l2662:	
  7600  0A35  0872               	movf	frexp@value+2,w
  7601  0A36  397F               	andlw	127
  7602  0A37  00F4               	movwf	??_frexp
  7603  0A38  01F5               	clrf	??_frexp+1
  7604  0A39  35F4               	lslf	??_frexp,f
  7605  0A3A  0DF5               	rlf	??_frexp+1,f
  7606  0A3B  0873               	movf	frexp@eptr,w
  7607  0A3C  0086               	movwf	6
  7608  0A3D  0187               	clrf	7
  7609  0A3E  0874               	movf	??_frexp,w
  7610  0A3F  3FC0               	movwi [0]fsr1
  7611  0A40  0875               	movf	??_frexp+1,w
  7612  0A41  3FC1               	movwi [1]fsr1
  7613  0A42  0D71               	rlf	frexp@value+1,w
  7614  0A43  0D71               	rlf	frexp@value+1,w
  7615  0A44  3901               	andlw	1
  7616  0A45  00F4               	movwf	??_frexp
  7617  0A46  01F5               	clrf	??_frexp+1
  7618  0A47  0873               	movf	frexp@eptr,w
  7619  0A48  0086               	movwf	6
  7620  0A49  0187               	clrf	7
  7621  0A4A  0874               	movf	??_frexp,w
  7622  0A4B  0481               	iorwf	1,f
  7623  0A4C  3141               	addfsr 1,1
  7624  0A4D  0875               	movf	??_frexp+1,w
  7625  0A4E  0481               	iorwf	1,f
  7626  0A4F  0873               	movf	frexp@eptr,w
  7627  0A50  0086               	movwf	6
  7628  0A51  0187               	clrf	7
  7629  0A52  3082               	movlw	130
  7630  0A53  0781               	addwf	1,f
  7631  0A54  3141               	addfsr 1,1
  7632  0A55  30FF               	movlw	255
  7633  0A56  3D81               	addwfc	1,f
  7634  0A57  317F               	addfsr 1,-1
  7635  0A58  0872               	movf	frexp@value+2,w
  7636  0A59  3980               	andlw	-128
  7637  0A5A  383F               	iorlw	63
  7638  0A5B  00F2               	movwf	frexp@value+2
  7639  0A5C  13F1               	bcf	frexp@value+1,7
  7640  0A5D  0008               	return
  7641  0A5E                     __end_of_frexp:	
  7642                           
  7643                           	psect	text10
  7644  0BAB                     __ptext10:	
  7645 ;; *************** function _eval_poly *****************
  7646 ;; Defined at:
  7647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  x               3   29[BANK0 ] PTR int 
  7650 ;;  d               2   32[BANK0 ] PTR const 
  7651 ;;		 -> log@coeff(27), 
  7652 ;;  n               2   34[BANK0 ] int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  res             3   36[BANK0 ] int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  3   29[BANK0 ] int 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:       10 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    2
  7671 ;; This function calls:
  7672 ;;		___ftadd
  7673 ;;		___ftmul
  7674 ;;		___wmul
  7675 ;; This function is called by:
  7676 ;;		_log
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           
  7681                           ;psect for function _eval_poly
  7682  0BAB                     _eval_poly:	
  7683                           
  7684                           ;incstack = 0
  7685                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7686  0BAB  0020               	movlb	0	; select bank0
  7687  0BAC  0843               	movf	eval_poly@n+1,w
  7688  0BAD  00F1               	movwf	___wmul@multiplier+1
  7689  0BAE  0842               	movf	eval_poly@n,w
  7690  0BAF  00F0               	movwf	___wmul@multiplier
  7691  0BB0  3003               	movlw	3
  7692  0BB1  00F2               	movwf	___wmul@multiplicand
  7693  0BB2  3000               	movlw	0
  7694  0BB3  00F3               	movwf	___wmul@multiplicand+1
  7695  0BB4  3188  20EC  318B   	fcall	___wmul
  7696  0BB7  0020               	movlb	0	; select bank0
  7697  0BB8  0840               	movf	eval_poly@d,w
  7698  0BB9  0770               	addwf	?___wmul,w
  7699  0BBA  0084               	movwf	4
  7700  0BBB  0841               	movf	eval_poly@d+1,w
  7701  0BBC  3D71               	addwfc	?___wmul+1,w
  7702  0BBD  0085               	movwf	5
  7703  0BBE  3F00               	moviw [0]fsr0
  7704  0BBF  00C4               	movwf	eval_poly@res
  7705  0BC0  3F01               	moviw [1]fsr0
  7706  0BC1  00C5               	movwf	eval_poly@res+1
  7707  0BC2  3F02               	moviw [2]fsr0
  7708  0BC3                     L2:	
  7709  0BC3  00C6               	movwf	eval_poly@res+2
  7710  0BC4  0842               	movf	eval_poly@n,w
  7711  0BC5  0443               	iorwf	eval_poly@n+1,w
  7712  0BC6  1903               	btfsc	3,2
  7713  0BC7  2C04               	goto	l2680
  7714  0BC8  30FF               	movlw	255
  7715  0BC9  07C2               	addwf	eval_poly@n,f
  7716  0BCA  30FF               	movlw	255
  7717  0BCB  3DC3               	addwfc	eval_poly@n+1,f
  7718  0BCC  0843               	movf	eval_poly@n+1,w
  7719  0BCD  00F1               	movwf	___wmul@multiplier+1
  7720  0BCE  0842               	movf	eval_poly@n,w
  7721  0BCF  00F0               	movwf	___wmul@multiplier
  7722  0BD0  3003               	movlw	3
  7723  0BD1  00F2               	movwf	___wmul@multiplicand
  7724  0BD2  3000               	movlw	0
  7725  0BD3  00F3               	movwf	___wmul@multiplicand+1
  7726  0BD4  3188  20EC  318B   	fcall	___wmul
  7727  0BD7  0020               	movlb	0	; select bank0
  7728  0BD8  0840               	movf	eval_poly@d,w
  7729  0BD9  0770               	addwf	?___wmul,w
  7730  0BDA  0084               	movwf	4
  7731  0BDB  0841               	movf	eval_poly@d+1,w
  7732  0BDC  3D71               	addwfc	?___wmul+1,w
  7733  0BDD  0085               	movwf	5
  7734  0BDE  3F00               	moviw [0]fsr0
  7735  0BDF  00B0               	movwf	___ftadd@f1
  7736  0BE0  3F01               	moviw [1]fsr0
  7737  0BE1  00B1               	movwf	___ftadd@f1+1
  7738  0BE2  3F02               	moviw [2]fsr0
  7739  0BE3  00B2               	movwf	___ftadd@f1+2
  7740  0BE4  0844               	movf	eval_poly@res,w
  7741  0BE5  00A0               	movwf	___ftmul@f1
  7742  0BE6  0845               	movf	eval_poly@res+1,w
  7743  0BE7  00A1               	movwf	___ftmul@f1+1
  7744  0BE8  0846               	movf	eval_poly@res+2,w
  7745  0BE9  00A2               	movwf	___ftmul@f1+2
  7746  0BEA  083D               	movf	eval_poly@x,w
  7747  0BEB  00A3               	movwf	___ftmul@f2
  7748  0BEC  083E               	movf	eval_poly@x+1,w
  7749  0BED  00A4               	movwf	___ftmul@f2+1
  7750  0BEE  083F               	movf	eval_poly@x+2,w
  7751  0BEF  00A5               	movwf	___ftmul@f2+2
  7752  0BF0  318F  274C  318B   	fcall	___ftmul
  7753  0BF3  0020               	movlb	0	; select bank0
  7754  0BF4  0820               	movf	?___ftmul,w
  7755  0BF5  00B3               	movwf	___ftadd@f2
  7756  0BF6  0821               	movf	?___ftmul+1,w
  7757  0BF7  00B4               	movwf	___ftadd@f2+1
  7758  0BF8  0822               	movf	?___ftmul+2,w
  7759  0BF9  00B5               	movwf	___ftadd@f2+2
  7760  0BFA  3182  221F  318B   	fcall	___ftadd
  7761  0BFD  0020               	movlb	0	; select bank0
  7762  0BFE  0830               	movf	?___ftadd,w
  7763  0BFF  00C4               	movwf	eval_poly@res
  7764  0C00  0831               	movf	?___ftadd+1,w
  7765  0C01  00C5               	movwf	eval_poly@res+1
  7766  0C02  0832               	movf	?___ftadd+2,w
  7767  0C03  2BC3               	goto	L2
  7768  0C04                     l2680:	
  7769  0C04  0844               	movf	eval_poly@res,w
  7770  0C05  00BD               	movwf	?_eval_poly
  7771  0C06  0845               	movf	eval_poly@res+1,w
  7772  0C07  00BE               	movwf	?_eval_poly+1
  7773  0C08  0846               	movf	eval_poly@res+2,w
  7774  0C09  00BF               	movwf	?_eval_poly+2
  7775  0C0A  0008               	return
  7776  0C0B                     __end_of_eval_poly:	
  7777                           
  7778                           	psect	text11
  7779  08EC                     __ptext11:	
  7780 ;; *************** function ___wmul *****************
  7781 ;; Defined at:
  7782 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  multiplier      2    0[COMMON] unsigned int 
  7785 ;;  multiplicand    2    2[COMMON] unsigned int 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  product         2    4[COMMON] unsigned int 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  2    0[COMMON] unsigned int 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;Total ram usage:        6 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_main
  7807 ;;		_eval_poly
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function ___wmul
  7813  08EC                     ___wmul:	
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7817  08EC  01F4               	clrf	___wmul@product
  7818  08ED  01F5               	clrf	___wmul@product+1
  7819  08EE                     l2260:	
  7820  08EE  1C70               	btfss	___wmul@multiplier,0
  7821  08EF  28F4               	goto	l478
  7822  08F0  0872               	movf	___wmul@multiplicand,w
  7823  08F1  07F4               	addwf	___wmul@product,f
  7824  08F2  0873               	movf	___wmul@multiplicand+1,w
  7825  08F3  3DF5               	addwfc	___wmul@product+1,f
  7826  08F4                     l478:	
  7827  08F4  3001               	movlw	1
  7828  08F5                     u2155:	
  7829  08F5  35F2               	lslf	___wmul@multiplicand,f
  7830  08F6  0DF3               	rlf	___wmul@multiplicand+1,f
  7831  08F7  0B89               	decfsz	9,f
  7832  08F8  28F5               	goto	u2155
  7833  08F9  3001               	movlw	1
  7834  08FA                     u2165:	
  7835  08FA  36F1               	lsrf	___wmul@multiplier+1,f
  7836  08FB  0CF0               	rrf	___wmul@multiplier,f
  7837  08FC  0B89               	decfsz	9,f
  7838  08FD  28FA               	goto	u2165
  7839  08FE  0870               	movf	___wmul@multiplier,w
  7840  08FF  0471               	iorwf	___wmul@multiplier+1,w
  7841  0900  1D03               	btfss	3,2
  7842  0901  28EE               	goto	l2260
  7843  0902  0875               	movf	___wmul@product+1,w
  7844  0903  00F1               	movwf	?___wmul+1
  7845  0904  0874               	movf	___wmul@product,w
  7846  0905  00F0               	movwf	?___wmul
  7847  0906  0008               	return
  7848  0907                     __end_of___wmul:	
  7849                           
  7850                           	psect	text12
  7851  0846                     __ptext12:	
  7852 ;; *************** function ___lwtoft *****************
  7853 ;; Defined at:
  7854 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  c               2    8[COMMON] unsigned int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  3    8[COMMON] float 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0, pclath, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        4 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    1
  7875 ;; This function calls:
  7876 ;;		___ftpack
  7877 ;; This function is called by:
  7878 ;;		_main
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function ___lwtoft
  7884  0846                     ___lwtoft:	
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7888  0846  0878               	movf	___lwtoft@c,w
  7889  0847  00F0               	movwf	___ftpack@arg
  7890  0848  0879               	movf	___lwtoft@c+1,w
  7891  0849  00F1               	movwf	___ftpack@arg+1
  7892  084A  01F2               	clrf	___ftpack@arg+2
  7893  084B  308E               	movlw	142
  7894  084C  00FB               	movwf	??___lwtoft
  7895  084D  087B               	movf	??___lwtoft,w
  7896  084E  00F3               	movwf	___ftpack@exp
  7897  084F  01F4               	clrf	___ftpack@sign
  7898  0850  318C  240B         	fcall	___ftpack
  7899  0852  0870               	movf	?___ftpack,w
  7900  0853  00F8               	movwf	?___lwtoft
  7901  0854  0871               	movf	?___ftpack+1,w
  7902  0855  00F9               	movwf	?___lwtoft+1
  7903  0856  0872               	movf	?___ftpack+2,w
  7904  0857  00FA               	movwf	?___lwtoft+2
  7905  0858  0008               	return
  7906  0859                     __end_of___lwtoft:	
  7907                           
  7908                           	psect	text13
  7909  09EF                     __ptext13:	
  7910 ;; *************** function ___lwdiv *****************
  7911 ;; Defined at:
  7912 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  divisor         2    6[COMMON] unsigned int 
  7915 ;;  dividend        2    8[COMMON] unsigned int 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  quotient        2   11[COMMON] unsigned int 
  7918 ;;  counter         1   13[COMMON] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  2    6[COMMON] unsigned int 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        8 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function ___lwdiv
  7943  09EF                     ___lwdiv:	
  7944                           
  7945                           ;incstack = 0
  7946                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7947  09EF  01FB               	clrf	___lwdiv@quotient
  7948  09F0  01FC               	clrf	___lwdiv@quotient+1
  7949  09F1  0876               	movf	___lwdiv@divisor,w
  7950  09F2  0477               	iorwf	___lwdiv@divisor+1,w
  7951  09F3  1903               	btfsc	3,2
  7952  09F4  2A1E               	goto	l3002
  7953  09F5  01FD               	clrf	___lwdiv@counter
  7954  09F6  0AFD               	incf	___lwdiv@counter,f
  7955  09F7                     l2990:	
  7956  09F7  1BF7               	btfsc	___lwdiv@divisor+1,7
  7957  09F8  2A03               	goto	l2992
  7958  09F9  3001               	movlw	1
  7959  09FA                     u3155:	
  7960  09FA  35F6               	lslf	___lwdiv@divisor,f
  7961  09FB  0DF7               	rlf	___lwdiv@divisor+1,f
  7962  09FC  0B89               	decfsz	9,f
  7963  09FD  29FA               	goto	u3155
  7964  09FE  3001               	movlw	1
  7965  09FF  00FA               	movwf	??___lwdiv
  7966  0A00  087A               	movf	??___lwdiv,w
  7967  0A01  07FD               	addwf	___lwdiv@counter,f
  7968  0A02  29F7               	goto	l2990
  7969  0A03                     l2992:	
  7970  0A03  3001               	movlw	1
  7971  0A04                     u3175:	
  7972  0A04  35FB               	lslf	___lwdiv@quotient,f
  7973  0A05  0DFC               	rlf	___lwdiv@quotient+1,f
  7974  0A06  0B89               	decfsz	9,f
  7975  0A07  2A04               	goto	u3175
  7976  0A08  0877               	movf	___lwdiv@divisor+1,w
  7977  0A09  0279               	subwf	___lwdiv@dividend+1,w
  7978  0A0A  1D03               	skipz
  7979  0A0B  2A0E               	goto	u3185
  7980  0A0C  0876               	movf	___lwdiv@divisor,w
  7981  0A0D  0278               	subwf	___lwdiv@dividend,w
  7982  0A0E                     u3185:	
  7983  0A0E  1C03               	skipc
  7984  0A0F  2A15               	goto	l2998
  7985  0A10  0876               	movf	___lwdiv@divisor,w
  7986  0A11  02F8               	subwf	___lwdiv@dividend,f
  7987  0A12  0877               	movf	___lwdiv@divisor+1,w
  7988  0A13  3BF9               	subwfb	___lwdiv@dividend+1,f
  7989  0A14  147B               	bsf	___lwdiv@quotient,0
  7990  0A15                     l2998:	
  7991  0A15  3001               	movlw	1
  7992  0A16                     u3195:	
  7993  0A16  36F7               	lsrf	___lwdiv@divisor+1,f
  7994  0A17  0CF6               	rrf	___lwdiv@divisor,f
  7995  0A18  0B89               	decfsz	9,f
  7996  0A19  2A16               	goto	u3195
  7997  0A1A  3001               	movlw	1
  7998  0A1B  02FD               	subwf	___lwdiv@counter,f
  7999  0A1C  1D03               	btfss	3,2
  8000  0A1D  2A03               	goto	l2992
  8001  0A1E                     l3002:	
  8002  0A1E  087C               	movf	___lwdiv@quotient+1,w
  8003  0A1F  00F7               	movwf	?___lwdiv+1
  8004  0A20  087B               	movf	___lwdiv@quotient,w
  8005  0A21  00F6               	movwf	?___lwdiv
  8006  0A22  0008               	return
  8007  0A23                     __end_of___lwdiv:	
  8008                           
  8009                           	psect	text14
  8010  08B8                     __ptext14:	
  8011 ;; *************** function ___lbtoft *****************
  8012 ;; Defined at:
  8013 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  c               1    wreg     unsigned char 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  c               1   11[COMMON] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  3    8[COMMON] float 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;Total ram usage:        8 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    1
  8034 ;; This function calls:
  8035 ;;		___ftpack
  8036 ;; This function is called by:
  8037 ;;		_main
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           
  8042                           ;psect for function ___lbtoft
  8043  08B8                     ___lbtoft:	
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8047                           ;___lbtoft@c stored from wreg
  8048  08B8  00FB               	movwf	___lbtoft@c
  8049  08B9  087B               	movf	___lbtoft@c,w
  8050  08BA  0020               	movlb	0	; select bank0
  8051  08BB  00A0               	movwf	??___lbtoft
  8052  08BC  01A1               	clrf	??___lbtoft+1
  8053  08BD  01A2               	clrf	??___lbtoft+2
  8054  08BE  0820               	movf	??___lbtoft,w
  8055  08BF  00F0               	movwf	___ftpack@arg
  8056  08C0  0821               	movf	??___lbtoft+1,w
  8057  08C1  00F1               	movwf	___ftpack@arg+1
  8058  08C2  0822               	movf	??___lbtoft+2,w
  8059  08C3  00F2               	movwf	___ftpack@arg+2
  8060  08C4  308E               	movlw	142
  8061  08C5  00A3               	movwf	??___lbtoft+3
  8062  08C6  0823               	movf	??___lbtoft+3,w
  8063  08C7  00F3               	movwf	___ftpack@exp
  8064  08C8  01F4               	clrf	___ftpack@sign
  8065  08C9  318C  240B         	fcall	___ftpack
  8066  08CB  0870               	movf	?___ftpack,w
  8067  08CC  00F8               	movwf	?___lbtoft
  8068  08CD  0871               	movf	?___ftpack+1,w
  8069  08CE  00F9               	movwf	?___lbtoft+1
  8070  08CF  0872               	movf	?___ftpack+2,w
  8071  08D0  00FA               	movwf	?___lbtoft+2
  8072  08D1  0008               	return
  8073  08D2                     __end_of___lbtoft:	
  8074                           
  8075                           	psect	text15
  8076  0D6C                     __ptext15:	
  8077 ;; *************** function ___fttol *****************
  8078 ;; Defined at:
  8079 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  f1              3   61[BANK0 ] float 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  lval            4   70[BANK0 ] unsigned long 
  8084 ;;  exp1            1   74[BANK0 ] unsigned char 
  8085 ;;  sign1           1   69[BANK0 ] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  4   61[BANK0 ] long 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:       14 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_main
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function ___fttol
  8110  0D6C                     ___fttol:	
  8111                           
  8112                           ;incstack = 0
  8113                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8114  0D6C  0020               	movlb	0	; select bank0
  8115  0D6D  085D               	movf	___fttol@f1,w
  8116  0D6E  00E1               	movwf	??___fttol
  8117  0D6F  085E               	movf	___fttol@f1+1,w
  8118  0D70  00E2               	movwf	??___fttol+1
  8119  0D71  085F               	movf	___fttol@f1+2,w
  8120  0D72  00E3               	movwf	??___fttol+2
  8121  0D73  1003               	clrc
  8122  0D74  0D62               	rlf	??___fttol+1,w
  8123  0D75  0D63               	rlf	??___fttol+2,w
  8124  0D76  00E4               	movwf	??___fttol+3
  8125  0D77  0864               	movf	??___fttol+3,w
  8126  0D78  00EA               	movwf	___fttol@exp1
  8127  0D79  086A               	movf	___fttol@exp1,w
  8128  0D7A  1D03               	btfss	3,2
  8129  0D7B  2D85               	goto	l2940
  8130  0D7C  3000               	movlw	0
  8131  0D7D  00E0               	movwf	?___fttol+3
  8132  0D7E  3000               	movlw	0
  8133  0D7F  00DF               	movwf	?___fttol+2
  8134  0D80  3000               	movlw	0
  8135  0D81  00DE               	movwf	?___fttol+1
  8136  0D82  3000               	movlw	0
  8137  0D83  00DD               	movwf	?___fttol
  8138  0D84  0008               	return
  8139  0D85                     l2940:	
  8140  0D85  085D               	movf	___fttol@f1,w
  8141  0D86  00E1               	movwf	??___fttol
  8142  0D87  085E               	movf	___fttol@f1+1,w
  8143  0D88  00E2               	movwf	??___fttol+1
  8144  0D89  085F               	movf	___fttol@f1+2,w
  8145  0D8A  00E3               	movwf	??___fttol+2
  8146  0D8B  3017               	movlw	23
  8147  0D8C                     u3055:	
  8148  0D8C  36E3               	lsrf	??___fttol+2,f
  8149  0D8D  0CE2               	rrf	??___fttol+1,f
  8150  0D8E  0CE1               	rrf	??___fttol,f
  8151  0D8F  0B89               	decfsz	9,f
  8152  0D90  2D8C               	goto	u3055
  8153  0D91  0861               	movf	??___fttol,w
  8154  0D92  00E4               	movwf	??___fttol+3
  8155  0D93  0864               	movf	??___fttol+3,w
  8156  0D94  00E5               	movwf	___fttol@sign1
  8157  0D95  17DE               	bsf	___fttol@f1+1,7
  8158  0D96  30FF               	movlw	255
  8159  0D97  05DD               	andwf	___fttol@f1,f
  8160  0D98  30FF               	movlw	255
  8161  0D99  05DE               	andwf	___fttol@f1+1,f
  8162  0D9A  3000               	movlw	0
  8163  0D9B  05DF               	andwf	___fttol@f1+2,f
  8164  0D9C  085D               	movf	___fttol@f1,w
  8165  0D9D  00E6               	movwf	___fttol@lval
  8166  0D9E  085E               	movf	___fttol@f1+1,w
  8167  0D9F  00E7               	movwf	___fttol@lval+1
  8168  0DA0  085F               	movf	___fttol@f1+2,w
  8169  0DA1  00E8               	movwf	___fttol@lval+2
  8170  0DA2  01E9               	clrf	___fttol@lval+3
  8171  0DA3  308E               	movlw	142
  8172  0DA4  02EA               	subwf	___fttol@exp1,f
  8173  0DA5  1FEA               	btfss	___fttol@exp1,7
  8174  0DA6  2DC3               	goto	l2960
  8175  0DA7  086A               	movf	___fttol@exp1,w
  8176  0DA8  3A80               	xorlw	128
  8177  0DA9  3E8F               	addlw	143
  8178  0DAA  1803               	skipnc
  8179  0DAB  2DB5               	goto	l2958
  8180  0DAC  3000               	movlw	0
  8181  0DAD  00E0               	movwf	?___fttol+3
  8182  0DAE  3000               	movlw	0
  8183  0DAF  00DF               	movwf	?___fttol+2
  8184  0DB0  3000               	movlw	0
  8185  0DB1  00DE               	movwf	?___fttol+1
  8186  0DB2  3000               	movlw	0
  8187  0DB3  00DD               	movwf	?___fttol
  8188  0DB4  0008               	return
  8189  0DB5                     l2958:	
  8190  0DB5  3001               	movlw	1
  8191  0DB6                     u3085:	
  8192  0DB6  36E9               	lsrf	___fttol@lval+3,f
  8193  0DB7  0CE8               	rrf	___fttol@lval+2,f
  8194  0DB8  0CE7               	rrf	___fttol@lval+1,f
  8195  0DB9  0CE6               	rrf	___fttol@lval,f
  8196  0DBA  0B89               	decfsz	9,f
  8197  0DBB  2DB6               	goto	u3085
  8198  0DBC  3001               	movlw	1
  8199  0DBD  00E1               	movwf	??___fttol
  8200  0DBE  0861               	movf	??___fttol,w
  8201  0DBF  07EA               	addwf	___fttol@exp1,f
  8202  0DC0  1903               	btfsc	3,2
  8203  0DC1  2DDC               	goto	l2968
  8204  0DC2  2DB5               	goto	l2958
  8205  0DC3                     l2960:	
  8206  0DC3  3018               	movlw	24
  8207  0DC4  026A               	subwf	___fttol@exp1,w
  8208  0DC5  1C03               	skipc
  8209  0DC6  2DD9               	goto	l730
  8210  0DC7  3000               	movlw	0
  8211  0DC8  00E0               	movwf	?___fttol+3
  8212  0DC9  3000               	movlw	0
  8213  0DCA  00DF               	movwf	?___fttol+2
  8214  0DCB  3000               	movlw	0
  8215  0DCC  00DE               	movwf	?___fttol+1
  8216  0DCD  3000               	movlw	0
  8217  0DCE  00DD               	movwf	?___fttol
  8218  0DCF  0008               	return
  8219  0DD0                     l2966:	
  8220  0DD0  3001               	movlw	1
  8221  0DD1                     u3115:	
  8222  0DD1  35E6               	lslf	___fttol@lval,f
  8223  0DD2  0DE7               	rlf	___fttol@lval+1,f
  8224  0DD3  0DE8               	rlf	___fttol@lval+2,f
  8225  0DD4  0DE9               	rlf	___fttol@lval+3,f
  8226  0DD5  0B89               	decfsz	9,f
  8227  0DD6  2DD1               	goto	u3115
  8228  0DD7  3001               	movlw	1
  8229  0DD8  02EA               	subwf	___fttol@exp1,f
  8230  0DD9                     l730:	
  8231  0DD9  086A               	movf	___fttol@exp1,w
  8232  0DDA  1D03               	btfss	3,2
  8233  0DDB  2DD0               	goto	l2966
  8234  0DDC                     l2968:	
  8235  0DDC  0865               	movf	___fttol@sign1,w
  8236  0DDD  1903               	btfsc	3,2
  8237  0DDE  2DEA               	goto	l2972
  8238  0DDF  09E6               	comf	___fttol@lval,f
  8239  0DE0  09E7               	comf	___fttol@lval+1,f
  8240  0DE1  09E8               	comf	___fttol@lval+2,f
  8241  0DE2  09E9               	comf	___fttol@lval+3,f
  8242  0DE3  0AE6               	incf	___fttol@lval,f
  8243  0DE4  1903               	skipnz
  8244  0DE5  0AE7               	incf	___fttol@lval+1,f
  8245  0DE6  1903               	skipnz
  8246  0DE7  0AE8               	incf	___fttol@lval+2,f
  8247  0DE8  1903               	skipnz
  8248  0DE9  0AE9               	incf	___fttol@lval+3,f
  8249  0DEA                     l2972:	
  8250  0DEA  0869               	movf	___fttol@lval+3,w
  8251  0DEB  00E0               	movwf	?___fttol+3
  8252  0DEC  0868               	movf	___fttol@lval+2,w
  8253  0DED  00DF               	movwf	?___fttol+2
  8254  0DEE  0867               	movf	___fttol@lval+1,w
  8255  0DEF  00DE               	movwf	?___fttol+1
  8256  0DF0  0866               	movf	___fttol@lval,w
  8257  0DF1  00DD               	movwf	?___fttol
  8258  0DF2  0008               	return
  8259  0DF3                     __end_of___fttol:	
  8260                           
  8261                           	psect	text16
  8262  0907                     __ptext16:	
  8263 ;; *************** function ___ftsub *****************
  8264 ;; Defined at:
  8265 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  f2              3   29[BANK0 ] float 
  8268 ;;  f1              3   32[BANK0 ] float 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  3   29[BANK0 ] float 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8280 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;Total ram usage:        6 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    2
  8287 ;; This function calls:
  8288 ;;		___ftadd
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function ___ftsub
  8296  0907                     ___ftsub:	
  8297                           
  8298                           ;incstack = 0
  8299                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8300  0907  0020               	movlb	0	; select bank0
  8301  0908  083F               	movf	___ftsub@f2+2,w
  8302  0909  043E               	iorwf	___ftsub@f2+1,w
  8303  090A  043D               	iorwf	___ftsub@f2,w
  8304  090B  1903               	skipnz
  8305  090C  290F               	goto	l2930
  8306  090D  3080               	movlw	128
  8307  090E  06BF               	xorwf	___ftsub@f2+2,f
  8308  090F                     l2930:	
  8309  090F  0840               	movf	___ftsub@f1,w
  8310  0910  00B0               	movwf	___ftadd@f1
  8311  0911  0841               	movf	___ftsub@f1+1,w
  8312  0912  00B1               	movwf	___ftadd@f1+1
  8313  0913  0842               	movf	___ftsub@f1+2,w
  8314  0914  00B2               	movwf	___ftadd@f1+2
  8315  0915  083D               	movf	___ftsub@f2,w
  8316  0916  00B3               	movwf	___ftadd@f2
  8317  0917  083E               	movf	___ftsub@f2+1,w
  8318  0918  00B4               	movwf	___ftadd@f2+1
  8319  0919  083F               	movf	___ftsub@f2+2,w
  8320  091A  00B5               	movwf	___ftadd@f2+2
  8321  091B  3182  221F         	fcall	___ftadd
  8322  091D  0020               	movlb	0	; select bank0
  8323  091E  0830               	movf	?___ftadd,w
  8324  091F  00BD               	movwf	?___ftsub
  8325  0920  0831               	movf	?___ftadd+1,w
  8326  0921  00BE               	movwf	?___ftsub+1
  8327  0922  0832               	movf	?___ftadd+2,w
  8328  0923  00BF               	movwf	?___ftsub+2
  8329  0924  0008               	return
  8330  0925                     __end_of___ftsub:	
  8331                           
  8332                           	psect	text17
  8333  0DF3                     __ptext17:	
  8334 ;; *************** function ___ftdiv *****************
  8335 ;; Defined at:
  8336 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  f2              3    0[BANK0 ] float 
  8339 ;;  f1              3    3[BANK0 ] float 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  f3              3   11[BANK0 ] float 
  8342 ;;  sign            1   15[BANK0 ] unsigned char 
  8343 ;;  exp             1   14[BANK0 ] unsigned char 
  8344 ;;  cntr            1   10[BANK0 ] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  3    0[BANK0 ] float 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0, pclath, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:       16 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    1
  8361 ;; This function calls:
  8362 ;;		___ftpack
  8363 ;; This function is called by:
  8364 ;;		_main
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           
  8369                           ;psect for function ___ftdiv
  8370  0DF3                     ___ftdiv:	
  8371                           
  8372                           ;incstack = 0
  8373                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8374  0DF3  0020               	movlb	0	; select bank0
  8375  0DF4  0823               	movf	___ftdiv@f1,w
  8376  0DF5  00A6               	movwf	??___ftdiv
  8377  0DF6  0824               	movf	___ftdiv@f1+1,w
  8378  0DF7  00A7               	movwf	??___ftdiv+1
  8379  0DF8  0825               	movf	___ftdiv@f1+2,w
  8380  0DF9  00A8               	movwf	??___ftdiv+2
  8381  0DFA  1003               	clrc
  8382  0DFB  0D27               	rlf	??___ftdiv+1,w
  8383  0DFC  0D28               	rlf	??___ftdiv+2,w
  8384  0DFD  00A9               	movwf	??___ftdiv+3
  8385  0DFE  0829               	movf	??___ftdiv+3,w
  8386  0DFF  00AE               	movwf	___ftdiv@exp
  8387  0E00  082E               	movf	___ftdiv@exp,w
  8388  0E01  1D03               	btfss	3,2
  8389  0E02  2E0A               	goto	l2890
  8390  0E03  3000               	movlw	0
  8391  0E04  00A0               	movwf	?___ftdiv
  8392  0E05  3000               	movlw	0
  8393  0E06  00A1               	movwf	?___ftdiv+1
  8394  0E07  3000               	movlw	0
  8395  0E08  00A2               	movwf	?___ftdiv+2
  8396  0E09  0008               	return
  8397  0E0A                     l2890:	
  8398  0E0A  0820               	movf	___ftdiv@f2,w
  8399  0E0B  00A6               	movwf	??___ftdiv
  8400  0E0C  0821               	movf	___ftdiv@f2+1,w
  8401  0E0D  00A7               	movwf	??___ftdiv+1
  8402  0E0E  0822               	movf	___ftdiv@f2+2,w
  8403  0E0F  00A8               	movwf	??___ftdiv+2
  8404  0E10  1003               	clrc
  8405  0E11  0D27               	rlf	??___ftdiv+1,w
  8406  0E12  0D28               	rlf	??___ftdiv+2,w
  8407  0E13  00A9               	movwf	??___ftdiv+3
  8408  0E14  0829               	movf	??___ftdiv+3,w
  8409  0E15  00AF               	movwf	___ftdiv@sign
  8410  0E16  082F               	movf	___ftdiv@sign,w
  8411  0E17  1D03               	btfss	3,2
  8412  0E18  2E20               	goto	l2896
  8413  0E19  3000               	movlw	0
  8414  0E1A  00A0               	movwf	?___ftdiv
  8415  0E1B  3000               	movlw	0
  8416  0E1C  00A1               	movwf	?___ftdiv+1
  8417  0E1D  3000               	movlw	0
  8418  0E1E  00A2               	movwf	?___ftdiv+2
  8419  0E1F  0008               	return
  8420  0E20                     l2896:	
  8421  0E20  3000               	movlw	0
  8422  0E21  00AB               	movwf	___ftdiv@f3
  8423  0E22  3000               	movlw	0
  8424  0E23  00AC               	movwf	___ftdiv@f3+1
  8425  0E24  3000               	movlw	0
  8426  0E25  00AD               	movwf	___ftdiv@f3+2
  8427  0E26  3089               	movlw	137
  8428  0E27  072F               	addwf	___ftdiv@sign,w
  8429  0E28  00A6               	movwf	??___ftdiv
  8430  0E29  0826               	movf	??___ftdiv,w
  8431  0E2A  02AE               	subwf	___ftdiv@exp,f
  8432  0E2B  0823               	movf	___ftdiv@f1,w
  8433  0E2C  00A6               	movwf	??___ftdiv
  8434  0E2D  0824               	movf	___ftdiv@f1+1,w
  8435  0E2E  00A7               	movwf	??___ftdiv+1
  8436  0E2F  0825               	movf	___ftdiv@f1+2,w
  8437  0E30  00A8               	movwf	??___ftdiv+2
  8438  0E31  3010               	movlw	16
  8439  0E32                     u2975:	
  8440  0E32  36A8               	lsrf	??___ftdiv+2,f
  8441  0E33  0CA7               	rrf	??___ftdiv+1,f
  8442  0E34  0CA6               	rrf	??___ftdiv,f
  8443  0E35  0B89               	decfsz	9,f
  8444  0E36  2E32               	goto	u2975
  8445  0E37  0826               	movf	??___ftdiv,w
  8446  0E38  00A9               	movwf	??___ftdiv+3
  8447  0E39  0829               	movf	??___ftdiv+3,w
  8448  0E3A  00AF               	movwf	___ftdiv@sign
  8449  0E3B  0820               	movf	___ftdiv@f2,w
  8450  0E3C  00A6               	movwf	??___ftdiv
  8451  0E3D  0821               	movf	___ftdiv@f2+1,w
  8452  0E3E  00A7               	movwf	??___ftdiv+1
  8453  0E3F  0822               	movf	___ftdiv@f2+2,w
  8454  0E40  00A8               	movwf	??___ftdiv+2
  8455  0E41  3010               	movlw	16
  8456  0E42                     u2985:	
  8457  0E42  36A8               	lsrf	??___ftdiv+2,f
  8458  0E43  0CA7               	rrf	??___ftdiv+1,f
  8459  0E44  0CA6               	rrf	??___ftdiv,f
  8460  0E45  0B89               	decfsz	9,f
  8461  0E46  2E42               	goto	u2985
  8462  0E47  0826               	movf	??___ftdiv,w
  8463  0E48  00A9               	movwf	??___ftdiv+3
  8464  0E49  0829               	movf	??___ftdiv+3,w
  8465  0E4A  06AF               	xorwf	___ftdiv@sign,f
  8466  0E4B  3080               	movlw	128
  8467  0E4C  00A6               	movwf	??___ftdiv
  8468  0E4D  0826               	movf	??___ftdiv,w
  8469  0E4E  05AF               	andwf	___ftdiv@sign,f
  8470  0E4F  17A4               	bsf	___ftdiv@f1+1,7
  8471  0E50  30FF               	movlw	255
  8472  0E51  05A3               	andwf	___ftdiv@f1,f
  8473  0E52  30FF               	movlw	255
  8474  0E53  05A4               	andwf	___ftdiv@f1+1,f
  8475  0E54  3000               	movlw	0
  8476  0E55  05A5               	andwf	___ftdiv@f1+2,f
  8477  0E56  17A1               	bsf	___ftdiv@f2+1,7
  8478  0E57  30FF               	movlw	255
  8479  0E58  05A0               	andwf	___ftdiv@f2,f
  8480  0E59  30FF               	movlw	255
  8481  0E5A  05A1               	andwf	___ftdiv@f2+1,f
  8482  0E5B  3000               	movlw	0
  8483  0E5C  05A2               	andwf	___ftdiv@f2+2,f
  8484  0E5D  3018               	movlw	24
  8485  0E5E  00A6               	movwf	??___ftdiv
  8486  0E5F  0826               	movf	??___ftdiv,w
  8487  0E60  00AA               	movwf	___ftdiv@cntr
  8488  0E61                     l2910:	
  8489  0E61  3001               	movlw	1
  8490  0E62                     u2995:	
  8491  0E62  35AB               	lslf	___ftdiv@f3,f
  8492  0E63  0DAC               	rlf	___ftdiv@f3+1,f
  8493  0E64  0DAD               	rlf	___ftdiv@f3+2,f
  8494  0E65  0B89               	decfsz	9,f
  8495  0E66  2E62               	goto	u2995
  8496  0E67  0822               	movf	___ftdiv@f2+2,w
  8497  0E68  0225               	subwf	___ftdiv@f1+2,w
  8498  0E69  1D03               	skipz
  8499  0E6A  2E71               	goto	u3005
  8500  0E6B  0821               	movf	___ftdiv@f2+1,w
  8501  0E6C  0224               	subwf	___ftdiv@f1+1,w
  8502  0E6D  1D03               	skipz
  8503  0E6E  2E71               	goto	u3005
  8504  0E6F  0820               	movf	___ftdiv@f2,w
  8505  0E70  0223               	subwf	___ftdiv@f1,w
  8506  0E71                     u3005:	
  8507  0E71  1C03               	skipc
  8508  0E72  2E7A               	goto	l2918
  8509  0E73  0820               	movf	___ftdiv@f2,w
  8510  0E74  02A3               	subwf	___ftdiv@f1,f
  8511  0E75  0821               	movf	___ftdiv@f2+1,w
  8512  0E76  3BA4               	subwfb	___ftdiv@f1+1,f
  8513  0E77  0822               	movf	___ftdiv@f2+2,w
  8514  0E78  3BA5               	subwfb	___ftdiv@f1+2,f
  8515  0E79  142B               	bsf	___ftdiv@f3,0
  8516  0E7A                     l2918:	
  8517  0E7A  3001               	movlw	1
  8518  0E7B                     u3015:	
  8519  0E7B  35A3               	lslf	___ftdiv@f1,f
  8520  0E7C  0DA4               	rlf	___ftdiv@f1+1,f
  8521  0E7D  0DA5               	rlf	___ftdiv@f1+2,f
  8522  0E7E  0B89               	decfsz	9,f
  8523  0E7F  2E7B               	goto	u3015
  8524  0E80  3001               	movlw	1
  8525  0E81  02AA               	subwf	___ftdiv@cntr,f
  8526  0E82  1D03               	btfss	3,2
  8527  0E83  2E61               	goto	l2910
  8528  0E84  082B               	movf	___ftdiv@f3,w
  8529  0E85  00F0               	movwf	___ftpack@arg
  8530  0E86  082C               	movf	___ftdiv@f3+1,w
  8531  0E87  00F1               	movwf	___ftpack@arg+1
  8532  0E88  082D               	movf	___ftdiv@f3+2,w
  8533  0E89  00F2               	movwf	___ftpack@arg+2
  8534  0E8A  082E               	movf	___ftdiv@exp,w
  8535  0E8B  00A6               	movwf	??___ftdiv
  8536  0E8C  0826               	movf	??___ftdiv,w
  8537  0E8D  00F3               	movwf	___ftpack@exp
  8538  0E8E  082F               	movf	___ftdiv@sign,w
  8539  0E8F  00A7               	movwf	??___ftdiv+1
  8540  0E90  0827               	movf	??___ftdiv+1,w
  8541  0E91  00F4               	movwf	___ftpack@sign
  8542  0E92  318C  240B         	fcall	___ftpack
  8543  0E94  0870               	movf	?___ftpack,w
  8544  0E95  0020               	movlb	0	; select bank0
  8545  0E96  00A0               	movwf	?___ftdiv
  8546  0E97  0871               	movf	?___ftpack+1,w
  8547  0E98  00A1               	movwf	?___ftdiv+1
  8548  0E99  0872               	movf	?___ftpack+2,w
  8549  0E9A  00A2               	movwf	?___ftdiv+2
  8550  0E9B  0008               	return
  8551  0E9C                     __end_of___ftdiv:	
  8552                           
  8553                           	psect	text18
  8554  0CEA                     __ptext18:	
  8555 ;; *************** function ___aldiv *****************
  8556 ;; Defined at:
  8557 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  divisor         4    0[COMMON] long 
  8560 ;;  dividend        4    4[COMMON] long 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  quotient        4    2[BANK0 ] long 
  8563 ;;  sign            1    1[BANK0 ] unsigned char 
  8564 ;;  counter         1    0[BANK0 ] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  4    0[COMMON] long 
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, status,0
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;Total ram usage:       15 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_main
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function ___aldiv
  8589  0CEA                     ___aldiv:	
  8590                           
  8591                           ;incstack = 0
  8592                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8593  0CEA  0020               	movlb	0	; select bank0
  8594  0CEB  01A1               	clrf	___aldiv@sign
  8595  0CEC  1FF3               	btfss	___aldiv@divisor+3,7
  8596  0CED  2CFB               	goto	l533
  8597  0CEE  09F0               	comf	___aldiv@divisor,f
  8598  0CEF  09F1               	comf	___aldiv@divisor+1,f
  8599  0CF0  09F2               	comf	___aldiv@divisor+2,f
  8600  0CF1  09F3               	comf	___aldiv@divisor+3,f
  8601  0CF2  0AF0               	incf	___aldiv@divisor,f
  8602  0CF3  1903               	skipnz
  8603  0CF4  0AF1               	incf	___aldiv@divisor+1,f
  8604  0CF5  1903               	skipnz
  8605  0CF6  0AF2               	incf	___aldiv@divisor+2,f
  8606  0CF7  1903               	skipnz
  8607  0CF8  0AF3               	incf	___aldiv@divisor+3,f
  8608  0CF9  01A1               	clrf	___aldiv@sign
  8609  0CFA  0AA1               	incf	___aldiv@sign,f
  8610  0CFB                     l533:	
  8611  0CFB  1FF7               	btfss	___aldiv@dividend+3,7
  8612  0CFC  2D0C               	goto	l2854
  8613  0CFD  09F4               	comf	___aldiv@dividend,f
  8614  0CFE  09F5               	comf	___aldiv@dividend+1,f
  8615  0CFF  09F6               	comf	___aldiv@dividend+2,f
  8616  0D00  09F7               	comf	___aldiv@dividend+3,f
  8617  0D01  0AF4               	incf	___aldiv@dividend,f
  8618  0D02  1903               	skipnz
  8619  0D03  0AF5               	incf	___aldiv@dividend+1,f
  8620  0D04  1903               	skipnz
  8621  0D05  0AF6               	incf	___aldiv@dividend+2,f
  8622  0D06  1903               	skipnz
  8623  0D07  0AF7               	incf	___aldiv@dividend+3,f
  8624  0D08  3001               	movlw	1
  8625  0D09  00F8               	movwf	??___aldiv
  8626  0D0A  0878               	movf	??___aldiv,w
  8627  0D0B  06A1               	xorwf	___aldiv@sign,f
  8628  0D0C                     l2854:	
  8629  0D0C  3000               	movlw	0
  8630  0D0D  00A5               	movwf	___aldiv@quotient+3
  8631  0D0E  3000               	movlw	0
  8632  0D0F  00A4               	movwf	___aldiv@quotient+2
  8633  0D10  3000               	movlw	0
  8634  0D11  00A3               	movwf	___aldiv@quotient+1
  8635  0D12  3000               	movlw	0
  8636  0D13  00A2               	movwf	___aldiv@quotient
  8637  0D14  0873               	movf	___aldiv@divisor+3,w
  8638  0D15  0472               	iorwf	___aldiv@divisor+2,w
  8639  0D16  0471               	iorwf	___aldiv@divisor+1,w
  8640  0D17  0470               	iorwf	___aldiv@divisor,w
  8641  0D18  1903               	skipnz
  8642  0D19  2D55               	goto	l2876
  8643  0D1A  01A0               	clrf	___aldiv@counter
  8644  0D1B  0AA0               	incf	___aldiv@counter,f
  8645  0D1C                     l2862:	
  8646  0D1C  1BF3               	btfsc	___aldiv@divisor+3,7
  8647  0D1D  2D2A               	goto	l2864
  8648  0D1E  3001               	movlw	1
  8649  0D1F                     u2885:	
  8650  0D1F  35F0               	lslf	___aldiv@divisor,f
  8651  0D20  0DF1               	rlf	___aldiv@divisor+1,f
  8652  0D21  0DF2               	rlf	___aldiv@divisor+2,f
  8653  0D22  0DF3               	rlf	___aldiv@divisor+3,f
  8654  0D23  0B89               	decfsz	9,f
  8655  0D24  2D1F               	goto	u2885
  8656  0D25  3001               	movlw	1
  8657  0D26  00F8               	movwf	??___aldiv
  8658  0D27  0878               	movf	??___aldiv,w
  8659  0D28  07A0               	addwf	___aldiv@counter,f
  8660  0D29  2D1C               	goto	l2862
  8661  0D2A                     l2864:	
  8662  0D2A  3001               	movlw	1
  8663  0D2B                     u2905:	
  8664  0D2B  35A2               	lslf	___aldiv@quotient,f
  8665  0D2C  0DA3               	rlf	___aldiv@quotient+1,f
  8666  0D2D  0DA4               	rlf	___aldiv@quotient+2,f
  8667  0D2E  0DA5               	rlf	___aldiv@quotient+3,f
  8668  0D2F  0B89               	decfsz	9,f
  8669  0D30  2D2B               	goto	u2905
  8670  0D31  0873               	movf	___aldiv@divisor+3,w
  8671  0D32  0277               	subwf	___aldiv@dividend+3,w
  8672  0D33  1D03               	skipz
  8673  0D34  2D3F               	goto	u2915
  8674  0D35  0872               	movf	___aldiv@divisor+2,w
  8675  0D36  0276               	subwf	___aldiv@dividend+2,w
  8676  0D37  1D03               	skipz
  8677  0D38  2D3F               	goto	u2915
  8678  0D39  0871               	movf	___aldiv@divisor+1,w
  8679  0D3A  0275               	subwf	___aldiv@dividend+1,w
  8680  0D3B  1D03               	skipz
  8681  0D3C  2D3F               	goto	u2915
  8682  0D3D  0870               	movf	___aldiv@divisor,w
  8683  0D3E  0274               	subwf	___aldiv@dividend,w
  8684  0D3F                     u2915:	
  8685  0D3F  1C03               	skipc
  8686  0D40  2D4A               	goto	l2872
  8687  0D41  0870               	movf	___aldiv@divisor,w
  8688  0D42  02F4               	subwf	___aldiv@dividend,f
  8689  0D43  0871               	movf	___aldiv@divisor+1,w
  8690  0D44  3BF5               	subwfb	___aldiv@dividend+1,f
  8691  0D45  0872               	movf	___aldiv@divisor+2,w
  8692  0D46  3BF6               	subwfb	___aldiv@dividend+2,f
  8693  0D47  0873               	movf	___aldiv@divisor+3,w
  8694  0D48  3BF7               	subwfb	___aldiv@dividend+3,f
  8695  0D49  1422               	bsf	___aldiv@quotient,0
  8696  0D4A                     l2872:	
  8697  0D4A  3001               	movlw	1
  8698  0D4B                     u2925:	
  8699  0D4B  36F3               	lsrf	___aldiv@divisor+3,f
  8700  0D4C  0CF2               	rrf	___aldiv@divisor+2,f
  8701  0D4D  0CF1               	rrf	___aldiv@divisor+1,f
  8702  0D4E  0CF0               	rrf	___aldiv@divisor,f
  8703  0D4F  0B89               	decfsz	9,f
  8704  0D50  2D4B               	goto	u2925
  8705  0D51  3001               	movlw	1
  8706  0D52  02A0               	subwf	___aldiv@counter,f
  8707  0D53  1D03               	btfss	3,2
  8708  0D54  2D2A               	goto	l2864
  8709  0D55                     l2876:	
  8710  0D55  0821               	movf	___aldiv@sign,w
  8711  0D56  1903               	btfsc	3,2
  8712  0D57  2D63               	goto	l2880
  8713  0D58  09A2               	comf	___aldiv@quotient,f
  8714  0D59  09A3               	comf	___aldiv@quotient+1,f
  8715  0D5A  09A4               	comf	___aldiv@quotient+2,f
  8716  0D5B  09A5               	comf	___aldiv@quotient+3,f
  8717  0D5C  0AA2               	incf	___aldiv@quotient,f
  8718  0D5D  1903               	skipnz
  8719  0D5E  0AA3               	incf	___aldiv@quotient+1,f
  8720  0D5F  1903               	skipnz
  8721  0D60  0AA4               	incf	___aldiv@quotient+2,f
  8722  0D61  1903               	skipnz
  8723  0D62  0AA5               	incf	___aldiv@quotient+3,f
  8724  0D63                     l2880:	
  8725  0D63  0825               	movf	___aldiv@quotient+3,w
  8726  0D64  00F3               	movwf	?___aldiv+3
  8727  0D65  0824               	movf	___aldiv@quotient+2,w
  8728  0D66  00F2               	movwf	?___aldiv+2
  8729  0D67  0823               	movf	___aldiv@quotient+1,w
  8730  0D68  00F1               	movwf	?___aldiv+1
  8731  0D69  0822               	movf	___aldiv@quotient,w
  8732  0D6A  00F0               	movwf	?___aldiv
  8733  0D6B  0008               	return
  8734  0D6C                     __end_of___aldiv:	
  8735                           
  8736                           	psect	text19
  8737  0A9A                     __ptext19:	
  8738 ;; *************** function _SYSTEM_Initialize *****************
  8739 ;; Defined at:
  8740 ;;		line 37 in file "system.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;		None
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      void 
  8747 ;; Registers used:
  8748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;Total ram usage:        2 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    3
  8761 ;; This function calls:
  8762 ;;		_ADCC_Initialize
  8763 ;;		_InitCustomChars
  8764 ;;		_Init_PID
  8765 ;;		_LCD_Clear
  8766 ;;		_LCD_Init
  8767 ;;		_OSCILLATOR_Initialize
  8768 ;;		_PIN_MANAGER_Initialize
  8769 ;;		_PWM6_Initialize
  8770 ;;		_TMR0_Initialize
  8771 ;;		_TMR2_Initialize
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           
  8778                           ;psect for function _SYSTEM_Initialize
  8779  0A9A                     _SYSTEM_Initialize:	
  8780                           
  8781                           ;system.c: 39: PIN_MANAGER_Initialize();
  8782                           
  8783                           ;incstack = 0
  8784                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8785  0A9A  3189  21BD  318A   	fcall	_PIN_MANAGER_Initialize
  8786                           
  8787                           ;system.c: 40: OSCILLATOR_Initialize();
  8788  0A9D  3180  2004  318A   	fcall	_OSCILLATOR_Initialize
  8789                           
  8790                           ;system.c: 41: FVRCON = 0x00;
  8791  0AA0  0032               	movlb	18	; select bank18
  8792  0AA1  018C               	clrf	12	;volatile
  8793                           
  8794                           ;system.c: 42: ADCC_Initialize();
  8795  0AA2  3188  209F  318A   	fcall	_ADCC_Initialize
  8796                           
  8797                           ;system.c: 43: PWM6_Initialize();
  8798  0AA5  3197  27F3  318A   	fcall	_PWM6_Initialize
  8799                           
  8800                           ;system.c: 44: TMR0_Initialize();
  8801  0AA8  3188  2016  318A   	fcall	_TMR0_Initialize
  8802                           
  8803                           ;system.c: 45: TMR2_Initialize();
  8804  0AAB  3188  2025  318A   	fcall	_TMR2_Initialize
  8805                           
  8806                           ;system.c: 46: LCD_Init(0X00);
  8807  0AAE  3000               	movlw	0
  8808  0AAF  318C  246F  318A   	fcall	_LCD_Init
  8809                           
  8810                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8811  0AB2  3041               	movlw	65
  8812  0AB3  00F8               	movwf	??_SYSTEM_Initialize+1
  8813  0AB4  30EE               	movlw	238
  8814  0AB5  00F7               	movwf	??_SYSTEM_Initialize
  8815  0AB6                     u3317:	
  8816  0AB6  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8817  0AB7  2AB6               	goto	u3317
  8818  0AB8  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8819  0AB9  2AB6               	goto	u3317
  8820  0ABA  0000               	nop
  8821                           
  8822                           ;system.c: 48: LCD_Clear();
  8823  0ABB  3188  2000  318A   	fcall	_LCD_Clear
  8824                           
  8825                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8826  0ABE  3021               	movlw	33
  8827  0ABF  00F8               	movwf	??_SYSTEM_Initialize+1
  8828  0AC0  3076               	movlw	118
  8829  0AC1  00F7               	movwf	??_SYSTEM_Initialize
  8830  0AC2                     u3327:	
  8831  0AC2  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8832  0AC3  2AC2               	goto	u3327
  8833  0AC4  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8834  0AC5  2AC2               	goto	u3327
  8835  0AC6  0000               	nop
  8836                           
  8837                           ;system.c: 50: InitCustomChars();
  8838  0AC7  3189  2145  318A   	fcall	_InitCustomChars
  8839                           
  8840                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8841  0ACA  3041               	movlw	65
  8842  0ACB  00F8               	movwf	??_SYSTEM_Initialize+1
  8843  0ACC  30EE               	movlw	238
  8844  0ACD  00F7               	movwf	??_SYSTEM_Initialize
  8845  0ACE                     u3337:	
  8846  0ACE  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8847  0ACF  2ACE               	goto	u3337
  8848  0AD0  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8849  0AD1  2ACE               	goto	u3337
  8850  0AD2  0000               	nop
  8851                           
  8852                           ;system.c: 52: Init_PID();
  8853  0AD3  3189  216B         	fcall	_Init_PID
  8854  0AD5  0008               	return
  8855  0AD6                     __end_of_SYSTEM_Initialize:	
  8856                           
  8857                           	psect	text20
  8858  0825                     __ptext20:	
  8859 ;; *************** function _TMR2_Initialize *****************
  8860 ;; Defined at:
  8861 ;;		line 15 in file "timers.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_SYSTEM_Initialize
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           
  8889                           ;psect for function _TMR2_Initialize
  8890  0825                     _TMR2_Initialize:	
  8891                           
  8892                           ;timers.c: 17: T2CON = 0x7F;
  8893                           
  8894                           ;incstack = 0
  8895                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8896  0825  307F               	movlw	127
  8897  0826  0025               	movlb	5	; select bank5
  8898  0827  008E               	movwf	14	;volatile
  8899                           
  8900                           ;timers.c: 18: T2CLKCON = 0x01;
  8901  0828  3001               	movlw	1
  8902  0829  0090               	movwf	16	;volatile
  8903                           
  8904                           ;timers.c: 19: T2HLT = 0x00;
  8905  082A  018F               	clrf	15	;volatile
  8906                           
  8907                           ;timers.c: 20: T2RST = 0x00;
  8908  082B  0191               	clrf	17	;volatile
  8909                           
  8910                           ;timers.c: 21: T2PR = 0xFF;
  8911  082C  30FF               	movlw	255
  8912  082D  008D               	movwf	13	;volatile
  8913                           
  8914                           ;timers.c: 22: T2TMR = 0x00;
  8915  082E  018C               	clrf	12	;volatile
  8916                           
  8917                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  8918  082F  002E               	movlb	14	; select bank14
  8919  0830  1090               	bcf	16,1	;volatile
  8920                           
  8921                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  8922  0831  0025               	movlb	5	; select bank5
  8923  0832  178E               	bsf	14,7	;volatile
  8924  0833  0008               	return
  8925  0834                     __end_of_TMR2_Initialize:	
  8926                           
  8927                           	psect	text21
  8928  0816                     __ptext21:	
  8929 ;; *************** function _TMR0_Initialize *****************
  8930 ;; Defined at:
  8931 ;;		line 3 in file "timers.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; This function calls:
  8952 ;;		Nothing
  8953 ;; This function is called by:
  8954 ;;		_SYSTEM_Initialize
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           
  8959                           ;psect for function _TMR0_Initialize
  8960  0816                     _TMR0_Initialize:	
  8961                           
  8962                           ;timers.c: 5: T0CON0 = 0x10;
  8963                           
  8964                           ;incstack = 0
  8965                           ; Regs used in _TMR0_Initialize: [wreg]
  8966  0816  3010               	movlw	16
  8967  0817  0020               	movlb	0	; select bank0
  8968  0818  009E               	movwf	30	;volatile
  8969                           
  8970                           ;timers.c: 6: T0CON1 = 0x42;
  8971  0819  3042               	movlw	66
  8972  081A  009F               	movwf	31	;volatile
  8973                           
  8974                           ;timers.c: 7: TMR0H = 0x24;
  8975  081B  3024               	movlw	36
  8976  081C  009D               	movwf	29	;volatile
  8977                           
  8978                           ;timers.c: 8: TMR0L = 0x9F;
  8979  081D  309F               	movlw	159
  8980  081E  009C               	movwf	28	;volatile
  8981                           
  8982                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  8983  081F  002E               	movlb	14	; select bank14
  8984  0820  1696               	bsf	22,5	;volatile
  8985                           
  8986                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  8987  0821  128C               	bcf	12,5	;volatile
  8988                           
  8989                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  8990  0822  0020               	movlb	0	; select bank0
  8991  0823  179E               	bsf	30,7	;volatile
  8992  0824  0008               	return
  8993  0825                     __end_of_TMR0_Initialize:	
  8994                           
  8995                           	psect	text22
  8996  17F3                     __ptext22:	
  8997 ;; *************** function _PWM6_Initialize *****************
  8998 ;; Defined at:
  8999 ;;		line 4 in file "pwm6.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_SYSTEM_Initialize
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _PWM6_Initialize
  9028  17F3                     _PWM6_Initialize:	
  9029                           
  9030                           ;pwm6.c: 6: PWM6CON = 0x80;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9034  17F3  3080               	movlw	128
  9035  17F4  0027               	movlb	7	; select bank7
  9036  17F5  008E               	movwf	14	;volatile
  9037                           
  9038                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9039  17F6  30FF               	movlw	255
  9040  17F7  008D               	movwf	13	;volatile
  9041                           
  9042                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9043  17F8  30C0               	movlw	192
  9044  17F9  008C               	movwf	12	;volatile
  9045                           
  9046                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9047  17FA  0024               	movlb	4	; select bank4
  9048  17FB  081F               	movf	31,w	;volatile
  9049  17FC  39F3               	andlw	-13
  9050  17FD  3804               	iorlw	4
  9051  17FE  009F               	movwf	31	;volatile
  9052  17FF  0008               	return
  9053  1800                     __end_of_PWM6_Initialize:	
  9054                           
  9055                           	psect	text23
  9056  09BD                     __ptext23:	
  9057 ;; *************** function _PIN_MANAGER_Initialize *****************
  9058 ;; Defined at:
  9059 ;;		line 5 in file "pin_manager.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;		None
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;  state           1    0[COMMON] unsigned char 
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, status,2
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;Total ram usage:        1 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_SYSTEM_Initialize
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           
  9087                           ;psect for function _PIN_MANAGER_Initialize
  9088  09BD                     _PIN_MANAGER_Initialize:	
  9089                           
  9090                           ;pin_manager.c: 7: LATA = 0x00;
  9091                           
  9092                           ;incstack = 0
  9093                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9094  09BD  0020               	movlb	0	; select bank0
  9095  09BE  0196               	clrf	22	;volatile
  9096                           
  9097                           ;pin_manager.c: 8: LATB = 0x0;
  9098  09BF  0197               	clrf	23	;volatile
  9099                           
  9100                           ;pin_manager.c: 9: LATC = 0x0;
  9101  09C0  0198               	clrf	24	;volatile
  9102                           
  9103                           ;pin_manager.c: 11: WPUA = 0x18;
  9104  09C1  3018               	movlw	24
  9105  09C2  003E               	movlb	30	; select bank30
  9106  09C3  00B9               	movwf	57	;volatile
  9107                           
  9108                           ;pin_manager.c: 12: WPUB = 0x00;
  9109  09C4  01C4               	clrf	68	;volatile
  9110                           
  9111                           ;pin_manager.c: 13: WPUC = 0x00;
  9112  09C5  01CF               	clrf	79	;volatile
  9113                           
  9114                           ;pin_manager.c: 14: WPUE = 0x8;
  9115  09C6  3008               	movlw	8
  9116  09C7  00E5               	movwf	101	;volatile
  9117                           
  9118                           ;pin_manager.c: 16: TRISA = 0x1C;
  9119  09C8  301C               	movlw	28
  9120  09C9  0020               	movlb	0	; select bank0
  9121  09CA  0091               	movwf	17	;volatile
  9122                           
  9123                           ;pin_manager.c: 17: TRISB = 0x00;
  9124  09CB  0192               	clrf	18	;volatile
  9125                           
  9126                           ;pin_manager.c: 18: TRISC = 0x10;
  9127  09CC  3010               	movlw	16
  9128  09CD  0093               	movwf	19	;volatile
  9129                           
  9130                           ;pin_manager.c: 20: ANSELA = 0x04;
  9131  09CE  3004               	movlw	4
  9132  09CF  003E               	movlb	30	; select bank30
  9133  09D0  00B8               	movwf	56	;volatile
  9134                           
  9135                           ;pin_manager.c: 21: ANSELB = 0x00;
  9136  09D1  01C3               	clrf	67	;volatile
  9137                           
  9138                           ;pin_manager.c: 22: ANSELC = 0x00;
  9139  09D2  01CE               	clrf	78	;volatile
  9140                           
  9141                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9142  09D3  002E               	movlb	14	; select bank14
  9143  09D4  1216               	bcf	22,4	;volatile
  9144                           
  9145                           ;pin_manager.c: 25: bool state = GIE;
  9146  09D5  3000               	movlw	0
  9147  09D6  1B8B               	btfsc	11,7	;volatile
  9148  09D7  3001               	movlw	1
  9149  09D8  00F0               	movwf	PIN_MANAGER_Initialize@state
  9150                           
  9151                           ;pin_manager.c: 26: GIE = 0;
  9152  09D9  138B               	bcf	11,7	;volatile
  9153                           
  9154                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9155  09DA  3055               	movlw	85
  9156  09DB  003D               	movlb	29	; select bank29
  9157  09DC  008F               	movwf	15	;volatile
  9158                           
  9159                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9160  09DD  30AA               	movlw	170
  9161  09DE  008F               	movwf	15	;volatile
  9162                           
  9163                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9164  09DF  100F               	bcf	15,0	;volatile
  9165                           
  9166                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9167  09E0  300E               	movlw	14
  9168  09E1  003E               	movlb	30	; select bank30
  9169  09E2  0091               	movwf	17	;volatile
  9170                           
  9171                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9172  09E3  3055               	movlw	85
  9173  09E4  003D               	movlb	29	; select bank29
  9174  09E5  008F               	movwf	15	;volatile
  9175                           
  9176                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9177  09E6  30AA               	movlw	170
  9178  09E7  008F               	movwf	15	;volatile
  9179                           
  9180                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9181  09E8  140F               	bsf	15,0	;volatile
  9182                           
  9183                           ;pin_manager.c: 39: GIE = state;
  9184  09E9  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9185  09EA  29ED               	goto	u2530
  9186  09EB  178B               	bsf	11,7	;volatile
  9187  09EC  0008               	return
  9188  09ED                     u2530:	
  9189  09ED  138B               	bcf	11,7	;volatile
  9190  09EE  0008               	return
  9191  09EF                     __end_of_PIN_MANAGER_Initialize:	
  9192                           
  9193                           	psect	text24
  9194  0004                     __ptext24:	
  9195 ;; *************** function _OSCILLATOR_Initialize *****************
  9196 ;; Defined at:
  9197 ;;		line 55 in file "system.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_SYSTEM_Initialize
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _OSCILLATOR_Initialize
  9226  0004                     _OSCILLATOR_Initialize:	
  9227                           
  9228                           ;system.c: 57: OSCCON1 = 0x60;
  9229                           
  9230                           ;incstack = 0
  9231                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9232  0004  3060               	movlw	96
  9233  0005  0031               	movlb	17	; select bank17
  9234  0006  008D               	movwf	13	;volatile
  9235                           
  9236                           ;system.c: 58: OSCCON3 = 0x00;
  9237  0007  018F               	clrf	15	;volatile
  9238                           
  9239                           ;system.c: 59: OSCEN = 0x00;
  9240  0008  0191               	clrf	17	;volatile
  9241                           
  9242                           ;system.c: 60: OSCFRQ = 0x00;
  9243  0009  0193               	clrf	19	;volatile
  9244                           
  9245                           ;system.c: 61: OSCTUNE = 0x00;
  9246  000A  0192               	clrf	18	;volatile
  9247  000B  0008               	return
  9248  000C                     __end_of_OSCILLATOR_Initialize:	
  9249                           
  9250                           	psect	text25
  9251  0C6F                     __ptext25:	
  9252 ;; *************** function _LCD_Init *****************
  9253 ;; Defined at:
  9254 ;;		line 154 in file "lcd.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  style           1    wreg     unsigned char 
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;  style           1    5[COMMON] unsigned char 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, status,2, status,0, pclath, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;Total ram usage:        3 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    2
  9275 ;; This function calls:
  9276 ;;		_LCD_Cmd
  9277 ;;		_LCD_Port
  9278 ;; This function is called by:
  9279 ;;		_SYSTEM_Initialize
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           
  9284                           ;psect for function _LCD_Init
  9285  0C6F                     _LCD_Init:	
  9286                           
  9287                           ;incstack = 0
  9288                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9289                           ;LCD_Init@style stored from wreg
  9290  0C6F  00F5               	movwf	LCD_Init@style
  9291                           
  9292                           ;lcd.c: 156: LCD_Port(0x00);
  9293  0C70  3000               	movlw	0
  9294  0C71  3188  206F  318C   	fcall	_LCD_Port
  9295                           
  9296                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9297  0C74  3021               	movlw	33
  9298  0C75  00F4               	movwf	??_LCD_Init+1
  9299  0C76  3076               	movlw	118
  9300  0C77  00F3               	movwf	??_LCD_Init
  9301  0C78                     u3347:	
  9302  0C78  0BF3               	decfsz	??_LCD_Init,f
  9303  0C79  2C78               	goto	u3347
  9304  0C7A  0BF4               	decfsz	??_LCD_Init+1,f
  9305  0C7B  2C78               	goto	u3347
  9306  0C7C  0000               	nop
  9307                           
  9308                           ;lcd.c: 160: LCD_Cmd(0x03);
  9309  0C7D  3003               	movlw	3
  9310  0C7E  3188  2034  318C   	fcall	_LCD_Cmd
  9311                           
  9312                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9313  0C81  3004               	movlw	4
  9314  0C82  00F4               	movwf	??_LCD_Init+1
  9315  0C83  303D               	movlw	61
  9316  0C84  00F3               	movwf	??_LCD_Init
  9317  0C85                     u3357:	
  9318  0C85  0BF3               	decfsz	??_LCD_Init,f
  9319  0C86  2C85               	goto	u3357
  9320  0C87  0BF4               	decfsz	??_LCD_Init+1,f
  9321  0C88  2C85               	goto	u3357
  9322  0C89  3200               	nop2
  9323                           
  9324                           ;lcd.c: 164: LCD_Cmd(0x03);
  9325  0C8A  3003               	movlw	3
  9326  0C8B  3188  2034  318C   	fcall	_LCD_Cmd
  9327                           
  9328                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9329  0C8E  3009               	movlw	9
  9330  0C8F  00F3               	movwf	??_LCD_Init
  9331  0C90                     u3367:	
  9332  0C90  0BF3               	decfsz	??_LCD_Init,f
  9333  0C91  2C90               	goto	u3367
  9334  0C92  3200               	nop2	;nop
  9335                           
  9336                           ;lcd.c: 168: LCD_Cmd(0x03);
  9337  0C93  3003               	movlw	3
  9338  0C94  3188  2034  318C   	fcall	_LCD_Cmd
  9339                           
  9340                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9341  0C97  3009               	movlw	9
  9342  0C98  00F3               	movwf	??_LCD_Init
  9343  0C99                     u3377:	
  9344  0C99  0BF3               	decfsz	??_LCD_Init,f
  9345  0C9A  2C99               	goto	u3377
  9346  0C9B  3200               	nop2	;nop
  9347                           
  9348                           ;lcd.c: 172: LCD_Cmd(0x02);
  9349  0C9C  3002               	movlw	2
  9350  0C9D  3188  2034  318C   	fcall	_LCD_Cmd
  9351                           
  9352                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9353  0CA0  3009               	movlw	9
  9354  0CA1  00F3               	movwf	??_LCD_Init
  9355  0CA2                     u3387:	
  9356  0CA2  0BF3               	decfsz	??_LCD_Init,f
  9357  0CA3  2CA2               	goto	u3387
  9358  0CA4  3200               	nop2	;nop
  9359                           
  9360                           ;lcd.c: 176: LCD_Cmd(0x2);
  9361  0CA5  3002               	movlw	2
  9362  0CA6  3188  2034  318C   	fcall	_LCD_Cmd
  9363                           
  9364                           ;lcd.c: 178: LCD_Cmd(0x8);
  9365  0CA9  3008               	movlw	8
  9366  0CAA  3188  2034  318C   	fcall	_LCD_Cmd
  9367                           
  9368                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9369  0CAD  3009               	movlw	9
  9370  0CAE  00F3               	movwf	??_LCD_Init
  9371  0CAF                     u3397:	
  9372  0CAF  0BF3               	decfsz	??_LCD_Init,f
  9373  0CB0  2CAF               	goto	u3397
  9374  0CB1  3200               	nop2	;nop
  9375                           
  9376                           ;lcd.c: 182: LCD_Cmd(0x0);
  9377  0CB2  3000               	movlw	0
  9378  0CB3  3188  2034  318C   	fcall	_LCD_Cmd
  9379                           
  9380                           ;lcd.c: 184: LCD_Cmd(0x8);
  9381  0CB6  3008               	movlw	8
  9382  0CB7  3188  2034  318C   	fcall	_LCD_Cmd
  9383                           
  9384                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9385  0CBA  3009               	movlw	9
  9386  0CBB  00F3               	movwf	??_LCD_Init
  9387  0CBC                     u3407:	
  9388  0CBC  0BF3               	decfsz	??_LCD_Init,f
  9389  0CBD  2CBC               	goto	u3407
  9390  0CBE  3200               	nop2	;nop
  9391                           
  9392                           ;lcd.c: 188: LCD_Cmd(0x0);
  9393  0CBF  3000               	movlw	0
  9394  0CC0  3188  2034  318C   	fcall	_LCD_Cmd
  9395                           
  9396                           ;lcd.c: 190: LCD_Cmd(0x1);
  9397  0CC3  3001               	movlw	1
  9398  0CC4  3188  2034  318C   	fcall	_LCD_Cmd
  9399                           
  9400                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9401  0CC7  30F9               	movlw	249
  9402  0CC8  00F3               	movwf	??_LCD_Init
  9403  0CC9                     u3417:	
  9404  0CC9  3200               	nop2
  9405  0CCA  0BF3               	decfsz	??_LCD_Init,f
  9406  0CCB  2CC9               	goto	u3417
  9407  0CCC  3200               	nop2	;nop
  9408  0CCD  3200               	nop2	;nop
  9409                           
  9410                           ;lcd.c: 194: LCD_Cmd(0x0);
  9411  0CCE  3000               	movlw	0
  9412  0CCF  3188  2034  318C   	fcall	_LCD_Cmd
  9413                           
  9414                           ;lcd.c: 196: LCD_Cmd(0x6);
  9415  0CD2  3006               	movlw	6
  9416  0CD3  3188  2034  318C   	fcall	_LCD_Cmd
  9417                           
  9418                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9419  0CD6  3009               	movlw	9
  9420  0CD7  00F3               	movwf	??_LCD_Init
  9421  0CD8                     u3427:	
  9422  0CD8  0BF3               	decfsz	??_LCD_Init,f
  9423  0CD9  2CD8               	goto	u3427
  9424  0CDA  3200               	nop2	;nop
  9425                           
  9426                           ;lcd.c: 200: LCD_Cmd(0x0);
  9427  0CDB  3000               	movlw	0
  9428  0CDC  3188  2034  318C   	fcall	_LCD_Cmd
  9429                           
  9430                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9431  0CDF  0875               	movf	LCD_Init@style,w
  9432  0CE0  380C               	iorlw	12
  9433  0CE1  3188  2034  318C   	fcall	_LCD_Cmd
  9434                           
  9435                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9436  0CE4  3009               	movlw	9
  9437  0CE5  00F3               	movwf	??_LCD_Init
  9438  0CE6                     u3437:	
  9439  0CE6  0BF3               	decfsz	??_LCD_Init,f
  9440  0CE7  2CE6               	goto	u3437
  9441  0CE8  3200               	nop2	;nop
  9442  0CE9  0008               	return
  9443  0CEA                     __end_of_LCD_Init:	
  9444                           
  9445                           	psect	text26
  9446  0800                     __ptext26:	
  9447 ;; *************** function _LCD_Clear *****************
  9448 ;; Defined at:
  9449 ;;		line 75 in file "lcd.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0, pclath, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    2
  9470 ;; This function calls:
  9471 ;;		_LCD_Cmd
  9472 ;; This function is called by:
  9473 ;;		_SYSTEM_Initialize
  9474 ;;		_tempSetpoint
  9475 ;;		_readButtons
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _LCD_Clear
  9481  0800                     _LCD_Clear:	
  9482                           
  9483                           ;lcd.c: 77: LCD_Cmd(0);
  9484                           
  9485                           ;incstack = 0
  9486                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9487  0800  3000               	movlw	0
  9488  0801  3188  2034  3188   	fcall	_LCD_Cmd
  9489                           
  9490                           ;lcd.c: 78: LCD_Cmd(1);
  9491  0804  3001               	movlw	1
  9492  0805  3188  2034         	fcall	_LCD_Cmd
  9493  0807  0008               	return
  9494  0808                     __end_of_LCD_Clear:	
  9495                           
  9496                           	psect	text27
  9497  096B                     __ptext27:	
  9498 ;; *************** function _Init_PID *****************
  9499 ;; Defined at:
  9500 ;;		line 12 in file "pid.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        0 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_SYSTEM_Initialize
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           
  9528                           ;psect for function _Init_PID
  9529  096B                     _Init_PID:	
  9530                           
  9531                           ;pid.c: 14: PID_Kp = 50;
  9532                           
  9533                           ;incstack = 0
  9534                           ; Regs used in _Init_PID: [wreg+status,2]
  9535  096B  3000               	movlw	0
  9536  096C  0021               	movlb	1	; select bank1
  9537  096D  00CF               	movwf	_PID_Kp^(0+128)
  9538  096E  3048               	movlw	72
  9539  096F  00D0               	movwf	(_PID_Kp+1)^(0+128)
  9540  0970  3042               	movlw	66
  9541  0971  00D1               	movwf	(_PID_Kp+2)^(0+128)
  9542                           
  9543                           ;pid.c: 15: PID_Ki = 1;
  9544  0972  3000               	movlw	0
  9545  0973  00CC               	movwf	_PID_Ki^(0+128)
  9546  0974  3080               	movlw	128
  9547  0975  00CD               	movwf	(_PID_Ki+1)^(0+128)
  9548  0976  303F               	movlw	63
  9549  0977  00CE               	movwf	(_PID_Ki+2)^(0+128)
  9550                           
  9551                           ;pid.c: 16: PID_Kd = 300;
  9552  0978  3000               	movlw	0
  9553  0979  00C9               	movwf	_PID_Kd^(0+128)
  9554  097A  3096               	movlw	150
  9555  097B  00CA               	movwf	(_PID_Kd+1)^(0+128)
  9556  097C  3043               	movlw	67
  9557  097D  00CB               	movwf	(_PID_Kd+2)^(0+128)
  9558                           
  9559                           ;pid.c: 17: pidMinOutput = 0;
  9560  097E  0020               	movlb	0	; select bank0
  9561  097F  01EB               	clrf	_pidMinOutput
  9562  0980  01EC               	clrf	_pidMinOutput+1
  9563                           
  9564                           ;pid.c: 18: pidMaxOutput = 1023;
  9565  0981  30FF               	movlw	255
  9566  0982  0021               	movlb	1	; select bank1
  9567  0983  00DA               	movwf	_pidMaxOutput^(0+128)
  9568  0984  3003               	movlw	3
  9569  0985  00DB               	movwf	(_pidMaxOutput^(0+128)+1)
  9570                           
  9571                           ;pid.c: 19: pidIntegrated = 0;
  9572  0986  3000               	movlw	0
  9573  0987  00D2               	movwf	_pidIntegrated^(0+128)
  9574  0988  3000               	movlw	0
  9575  0989  00D3               	movwf	(_pidIntegrated+1)^(0+128)
  9576  098A  3000               	movlw	0
  9577  098B  00D4               	movwf	(_pidIntegrated+2)^(0+128)
  9578                           
  9579                           ;pid.c: 20: pidPrevInput = 0;
  9580  098C  3000               	movlw	0
  9581  098D  00D5               	movwf	_pidPrevInput^(0+128)
  9582  098E  3000               	movlw	0
  9583  098F  00D6               	movwf	(_pidPrevInput+1)^(0+128)
  9584  0990  3000               	movlw	0
  9585  0991  00D7               	movwf	(_pidPrevInput+2)^(0+128)
  9586  0992  0008               	return
  9587  0993                     __end_of_Init_PID:	
  9588                           
  9589                           	psect	text28
  9590  0945                     __ptext28:	
  9591 ;; *************** function _InitCustomChars *****************
  9592 ;; Defined at:
  9593 ;;		line 29 in file "lcd.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  i               1    6[COMMON] unsigned char 
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;Total ram usage:        2 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; Hardware stack levels required when called:    2
  9614 ;; This function calls:
  9615 ;;		_LCD_Cmd
  9616 ;;		_LCD_Write_Char
  9617 ;; This function is called by:
  9618 ;;		_SYSTEM_Initialize
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _InitCustomChars
  9624  0945                     _InitCustomChars:	
  9625                           
  9626                           ;lcd.c: 31: uint8_t i;
  9627                           ;lcd.c: 32: LCD_Cmd(0x04);
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9631  0945  3004               	movlw	4
  9632  0946  3188  2034  3189   	fcall	_LCD_Cmd
  9633                           
  9634                           ;lcd.c: 33: LCD_Cmd(0x00);
  9635  0949  3000               	movlw	0
  9636  094A  3188  2034  3189   	fcall	_LCD_Cmd
  9637                           
  9638                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9639  094D  01F6               	clrf	InitCustomChars@i
  9640  094E  3018               	movlw	24
  9641  094F  0276               	subwf	InitCustomChars@i,w
  9642  0950  1803               	btfsc	3,0
  9643  0951  2963               	goto	l2544
  9644  0952                     l2538:	
  9645                           
  9646                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9647  0952  0876               	movf	InitCustomChars@i,w
  9648  0953  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9649  0954  0086               	movwf	6
  9650  0955  3001               	movlw	1	; select bank2/3
  9651  0956  0087               	movwf	7
  9652  0957  0801               	movf	1,w
  9653  0958  3189  2193  3189   	fcall	_LCD_Write_Char
  9654  095B  3001               	movlw	1
  9655  095C  00F5               	movwf	??_InitCustomChars
  9656  095D  0875               	movf	??_InitCustomChars,w
  9657  095E  07F6               	addwf	InitCustomChars@i,f
  9658  095F  3018               	movlw	24
  9659  0960  0276               	subwf	InitCustomChars@i,w
  9660  0961  1C03               	skipc
  9661  0962  2952               	goto	l2538
  9662  0963                     l2544:	
  9663                           
  9664                           ;lcd.c: 36: LCD_Cmd(0);
  9665  0963  3000               	movlw	0
  9666  0964  3188  2034  3189   	fcall	_LCD_Cmd
  9667                           
  9668                           ;lcd.c: 37: LCD_Cmd(2);
  9669  0967  3002               	movlw	2
  9670  0968  3188  2034         	fcall	_LCD_Cmd
  9671  096A  0008               	return
  9672  096B                     __end_of_InitCustomChars:	
  9673                           
  9674                           	psect	text29
  9675  0993                     __ptext29:	
  9676 ;; *************** function _LCD_Write_Char *****************
  9677 ;; Defined at:
  9678 ;;		line 223 in file "lcd.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  a               1    wreg     const unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  a               1    4[COMMON] const unsigned char 
  9683 ;;  y               1    3[COMMON] unsigned char 
  9684 ;;  temp            1    2[COMMON] unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0, pclath, cstack
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;Total ram usage:        4 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    1
  9701 ;; This function calls:
  9702 ;;		_LCD_Port
  9703 ;; This function is called by:
  9704 ;;		_InitCustomChars
  9705 ;;		_LCD_Write_String
  9706 ;;		_LCD_Write_Int
  9707 ;;		_main
  9708 ;;		_tempSetpoint
  9709 ;;		_readButtons
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           
  9714                           ;psect for function _LCD_Write_Char
  9715  0993                     _LCD_Write_Char:	
  9716                           
  9717                           ;incstack = 0
  9718                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9719                           ;LCD_Write_Char@a stored from wreg
  9720  0993  00F4               	movwf	LCD_Write_Char@a
  9721                           
  9722                           ;lcd.c: 225: char temp,y;
  9723                           ;lcd.c: 226: temp = a&0x0F;
  9724  0994  0874               	movf	LCD_Write_Char@a,w
  9725  0995  390F               	andlw	15
  9726  0996  00F1               	movwf	??_LCD_Write_Char
  9727  0997  0871               	movf	??_LCD_Write_Char,w
  9728  0998  00F2               	movwf	LCD_Write_Char@temp
  9729                           
  9730                           ;lcd.c: 227: y = a&0xF0;
  9731  0999  0874               	movf	LCD_Write_Char@a,w
  9732  099A  39F0               	andlw	240
  9733  099B  00F1               	movwf	??_LCD_Write_Char
  9734  099C  0871               	movf	??_LCD_Write_Char,w
  9735  099D  00F3               	movwf	LCD_Write_Char@y
  9736                           
  9737                           ;lcd.c: 228: RB0 = 1;
  9738  099E  0020               	movlb	0	; select bank0
  9739  099F  140D               	bsf	13,0	;volatile
  9740                           
  9741                           ;lcd.c: 229: LCD_Port(y>>4);
  9742  09A0  0873               	movf	LCD_Write_Char@y,w
  9743  09A1  00F1               	movwf	??_LCD_Write_Char
  9744  09A2  3004               	movlw	4
  9745  09A3                     u1685:	
  9746  09A3  36F1               	lsrf	??_LCD_Write_Char,f
  9747  09A4  0B89               	decfsz	9,f
  9748  09A5  29A3               	goto	u1685
  9749  09A6  0871               	movf	??_LCD_Write_Char,w
  9750  09A7  3188  206F  3189   	fcall	_LCD_Port
  9751                           
  9752                           ;lcd.c: 230: RB1 = 1;
  9753  09AA  0020               	movlb	0	; select bank0
  9754  09AB  148D               	bsf	13,1	;volatile
  9755                           
  9756                           ;lcd.c: 231: RB1 = 0;
  9757  09AC  108D               	bcf	13,1	;volatile
  9758                           
  9759                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9760  09AD  3003               	movlw	3
  9761  09AE  00F1               	movwf	??_LCD_Write_Char
  9762  09AF                     u3447:	
  9763  09AF  0BF1               	decfsz	??_LCD_Write_Char,f
  9764  09B0  29AF               	goto	u3447
  9765                           
  9766                           ;lcd.c: 233: LCD_Port(temp);
  9767  09B1  0872               	movf	LCD_Write_Char@temp,w
  9768  09B2  3188  206F  3189   	fcall	_LCD_Port
  9769                           
  9770                           ;lcd.c: 234: RB1 = 1;
  9771  09B5  0020               	movlb	0	; select bank0
  9772  09B6  148D               	bsf	13,1	;volatile
  9773                           
  9774                           ;lcd.c: 235: RB1 = 0;
  9775  09B7  108D               	bcf	13,1	;volatile
  9776                           
  9777                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9778  09B8  3003               	movlw	3
  9779  09B9  00F1               	movwf	??_LCD_Write_Char
  9780  09BA                     u3457:	
  9781  09BA  0BF1               	decfsz	??_LCD_Write_Char,f
  9782  09BB  29BA               	goto	u3457
  9783  09BC  0008               	return
  9784  09BD                     __end_of_LCD_Write_Char:	
  9785                           
  9786                           	psect	text30
  9787  0834                     __ptext30:	
  9788 ;; *************** function _LCD_Cmd *****************
  9789 ;; Defined at:
  9790 ;;		line 65 in file "lcd.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  a               1    wreg     unsigned char 
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;  a               1    2[COMMON] unsigned char 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0, pclath, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;Total ram usage:        2 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:    1
  9811 ;; This function calls:
  9812 ;;		_LCD_Port
  9813 ;; This function is called by:
  9814 ;;		_InitCustomChars
  9815 ;;		_LCD_Clear
  9816 ;;		_LCD_Set_Cursor
  9817 ;;		_LCD_Init
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           
  9822                           ;psect for function _LCD_Cmd
  9823  0834                     _LCD_Cmd:	
  9824                           
  9825                           ;incstack = 0
  9826                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9827                           ;LCD_Cmd@a stored from wreg
  9828  0834  00F2               	movwf	LCD_Cmd@a
  9829                           
  9830                           ;lcd.c: 67: RB0 = 0;
  9831  0835  0020               	movlb	0	; select bank0
  9832  0836  100D               	bcf	13,0	;volatile
  9833                           
  9834                           ;lcd.c: 68: LCD_Port(a);
  9835  0837  0872               	movf	LCD_Cmd@a,w
  9836  0838  3188  206F  3188   	fcall	_LCD_Port
  9837                           
  9838                           ;lcd.c: 69: RB1 = 1;
  9839  083B  0020               	movlb	0	; select bank0
  9840  083C  148D               	bsf	13,1	;volatile
  9841                           
  9842                           ;lcd.c: 70: RB1 = 0;
  9843  083D  108D               	bcf	13,1	;volatile
  9844                           
  9845                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9846  083E  30F9               	movlw	249
  9847  083F  00F1               	movwf	??_LCD_Cmd
  9848  0840                     u3467:	
  9849  0840  0000               	nop
  9850  0841  0BF1               	decfsz	??_LCD_Cmd,f
  9851  0842  2840               	goto	u3467
  9852  0843  3200               	nop2	;nop
  9853  0844  0000               	nop
  9854  0845  0008               	return
  9855  0846                     __end_of_LCD_Cmd:	
  9856                           
  9857                           	psect	text31
  9858  086F                     __ptext31:	
  9859 ;; *************** function _LCD_Port *****************
  9860 ;; Defined at:
  9861 ;;		line 41 in file "lcd.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  a               1    wreg     unsigned char 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  a               1    0[COMMON] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;Total ram usage:        1 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_LCD_Cmd
  9885 ;;		_LCD_Init
  9886 ;;		_LCD_Write_Char
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function _LCD_Port
  9892  086F                     _LCD_Port:	
  9893                           
  9894                           ;incstack = 0
  9895                           ; Regs used in _LCD_Port: [wreg]
  9896                           ;LCD_Port@a stored from wreg
  9897  086F  00F0               	movwf	LCD_Port@a
  9898                           
  9899                           ;lcd.c: 43: if(a & 1)
  9900  0870  1C70               	btfss	LCD_Port@a,0
  9901  0871  2875               	goto	l107
  9902                           
  9903                           ;lcd.c: 44: RB2 = 1;
  9904  0872  0020               	movlb	0	; select bank0
  9905  0873  150D               	bsf	13,2	;volatile
  9906  0874  2877               	goto	l2022
  9907  0875                     l107:	
  9908                           
  9909                           ;lcd.c: 45: else
  9910                           ;lcd.c: 46: RB2 = 0;
  9911  0875  0020               	movlb	0	; select bank0
  9912  0876  110D               	bcf	13,2	;volatile
  9913  0877                     l2022:	
  9914                           
  9915                           ;lcd.c: 48: if(a & 2)
  9916  0877  1CF0               	btfss	LCD_Port@a,1
  9917  0878  287B               	goto	l109
  9918                           
  9919                           ;lcd.c: 49: RB3 = 1;
  9920  0879  158D               	bsf	13,3	;volatile
  9921  087A  287C               	goto	l2026
  9922  087B                     l109:	
  9923                           
  9924                           ;lcd.c: 50: else
  9925                           ;lcd.c: 51: RB3 = 0;
  9926  087B  118D               	bcf	13,3	;volatile
  9927  087C                     l2026:	
  9928                           
  9929                           ;lcd.c: 53: if(a & 4)
  9930  087C  1D70               	btfss	LCD_Port@a,2
  9931  087D  2880               	goto	l111
  9932                           
  9933                           ;lcd.c: 54: RB4 = 1;
  9934  087E  160D               	bsf	13,4	;volatile
  9935  087F  2881               	goto	l2030
  9936  0880                     l111:	
  9937                           
  9938                           ;lcd.c: 55: else
  9939                           ;lcd.c: 56: RB4 = 0;
  9940  0880  120D               	bcf	13,4	;volatile
  9941  0881                     l2030:	
  9942                           
  9943                           ;lcd.c: 58: if(a & 8)
  9944  0881  1DF0               	btfss	LCD_Port@a,3
  9945  0882  2885               	goto	l113
  9946                           
  9947                           ;lcd.c: 59: RB5 = 1;
  9948  0883  168D               	bsf	13,5	;volatile
  9949  0884  0008               	return
  9950  0885                     l113:	
  9951                           
  9952                           ;lcd.c: 60: else
  9953                           ;lcd.c: 61: RB5 = 0;
  9954  0885  128D               	bcf	13,5	;volatile
  9955  0886  0008               	return
  9956  0887                     __end_of_LCD_Port:	
  9957                           
  9958                           	psect	text32
  9959  089F                     __ptext32:	
  9960 ;; *************** function _ADCC_Initialize *****************
  9961 ;; Defined at:
  9962 ;;		line 5 in file "adcc.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;		None
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;Total ram usage:        0 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_SYSTEM_Initialize
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           
  9990                           ;psect for function _ADCC_Initialize
  9991  089F                     _ADCC_Initialize:	
  9992                           
  9993                           ;adcc.c: 8: ADCON1 = 0x00;
  9994                           
  9995                           ;incstack = 0
  9996                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9997  089F  0021               	movlb	1	; select bank1
  9998  08A0  0194               	clrf	20	;volatile
  9999                           
 10000                           ;adcc.c: 10: ADCON2 = 0x00;
 10001  08A1  0195               	clrf	21	;volatile
 10002                           
 10003                           ;adcc.c: 12: ADCON3 = 0x00;
 10004  08A2  0196               	clrf	22	;volatile
 10005                           
 10006                           ;adcc.c: 14: ADACT = 0x00;
 10007  08A3  0199               	clrf	25	;volatile
 10008                           
 10009                           ;adcc.c: 16: ADSTAT = 0x00;
 10010  08A4  0197               	clrf	23	;volatile
 10011                           
 10012                           ;adcc.c: 18: ADCLK = 0x0F;
 10013  08A5  300F               	movlw	15
 10014  08A6  0098               	movwf	24	;volatile
 10015                           
 10016                           ;adcc.c: 21: ADREF = 0x00;
 10017  08A7  019A               	clrf	26	;volatile
 10018                           
 10019                           ;adcc.c: 23: ADCAP = 0x00;
 10020  08A8  019B               	clrf	27	;volatile
 10021                           
 10022                           ;adcc.c: 25: ADPRE = 0x00;
 10023  08A9  019C               	clrf	28	;volatile
 10024                           
 10025                           ;adcc.c: 27: ADACQ = 0x00;
 10026  08AA  019D               	clrf	29	;volatile
 10027                           
 10028                           ;adcc.c: 29: ADPCH = 0x00;
 10029  08AB  019E               	clrf	30	;volatile
 10030                           
 10031                           ;adcc.c: 31: ADRPT = 0x00;
 10032  08AC  0022               	movlb	2	; select bank2
 10033  08AD  018D               	clrf	13	;volatile
 10034                           
 10035                           ;adcc.c: 33: ADLTHL = 0x00;
 10036  08AE  018E               	clrf	14	;volatile
 10037                           
 10038                           ;adcc.c: 35: ADLTHH = 0x00;
 10039  08AF  018F               	clrf	15	;volatile
 10040                           
 10041                           ;adcc.c: 37: ADUTHL = 0x00;
 10042  08B0  0190               	clrf	16	;volatile
 10043                           
 10044                           ;adcc.c: 39: ADUTHH = 0x00;
 10045  08B1  0191               	clrf	17	;volatile
 10046                           
 10047                           ;adcc.c: 41: ADSTPTL = 0x00;
 10048  08B2  0192               	clrf	18	;volatile
 10049                           
 10050                           ;adcc.c: 43: ADSTPTH = 0x00;
 10051  08B3  0193               	clrf	19	;volatile
 10052                           
 10053                           ;adcc.c: 46: ADCON0 = 0x84;
 10054  08B4  3084               	movlw	132
 10055  08B5  0021               	movlb	1	; select bank1
 10056  08B6  0093               	movwf	19	;volatile
 10057  08B7  0008               	return
 10058  08B8                     __end_of_ADCC_Initialize:	
 10059                           
 10060                           	psect	text33
 10061  0859                     __ptext33:	
 10062 ;; *************** function _PWM6_LoadDutyValue *****************
 10063 ;; Defined at:
 10064 ;;		line 15 in file "pwm6.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  dutyValue       2    0[COMMON] unsigned int 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;Total ram usage:        4 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_main
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _PWM6_LoadDutyValue
 10093  0859                     _PWM6_LoadDutyValue:	
 10094                           
 10095                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10096                           
 10097                           ;incstack = 0
 10098                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10099  0859  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10100  085A  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10101  085B  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10102  085C  00F2               	movwf	??_PWM6_LoadDutyValue
 10103  085D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10104  085E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10105  085F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10106  0860  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10107  0861  0872               	movf	??_PWM6_LoadDutyValue,w
 10108  0862  0027               	movlb	7	; select bank7
 10109  0863  008D               	movwf	13	;volatile
 10110                           
 10111                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10112  0864  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10113  0865  3903               	andlw	3
 10114  0866  00F2               	movwf	??_PWM6_LoadDutyValue
 10115  0867  3005               	movlw	5
 10116  0868                     u2725:	
 10117  0868  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10118  0869  3EFF               	addlw	-1
 10119  086A  1D03               	skipz
 10120  086B  2868               	goto	u2725
 10121  086C  3572               	lslf	??_PWM6_LoadDutyValue,w
 10122  086D  008C               	movwf	12	;volatile
 10123  086E  0008               	return
 10124  086F                     __end_of_PWM6_LoadDutyValue:	
 10125                           
 10126                           	psect	text34
 10127  0315                     __ptext34:	
 10128 ;; *************** function _PID_Calculate *****************
 10129 ;; Defined at:
 10130 ;;		line 24 in file "pid.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  setpoint        2   38[BANK0 ] const int 
 10133 ;;  temp            3   40[BANK0 ] float 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  error           3   58[BANK0 ] float 
 10136 ;;  Result          3   55[BANK0 ] float 
 10137 ;;  pidPrevError    3   52[BANK0 ] float 
 10138 ;;  derivativeVa    3   49[BANK0 ] float 
 10139 ;;  errorValue      3   43[BANK0 ] float 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  3   38[BANK0 ] float 
 10142 ;; Registers used:
 10143 ;;		wreg, status,2, status,0, pclath, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10149 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;Total ram usage:       23 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    2
 10156 ;; This function calls:
 10157 ;;		___awtoft
 10158 ;;		___ftadd
 10159 ;;		___ftge
 10160 ;;		___ftmul
 10161 ;;		___ftneg
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _PID_Calculate
 10169  0315                     _PID_Calculate:	
 10170                           
 10171                           ;pid.c: 26: float error, errorValue, derivativeValue = 0, pidPrevError = 0, Result;
 10172                           
 10173                           ;incstack = 0
 10174                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10175  0315  3000               	movlw	0
 10176  0316  0020               	movlb	0	; select bank0
 10177  0317  00D1               	movwf	PID_Calculate@derivativeValue
 10178  0318  3000               	movlw	0
 10179  0319  00D2               	movwf	PID_Calculate@derivativeValue+1
 10180  031A  3000               	movlw	0
 10181  031B  00D3               	movwf	PID_Calculate@derivativeValue+2
 10182  031C  3000               	movlw	0
 10183  031D  00D4               	movwf	PID_Calculate@pidPrevError
 10184  031E  3000               	movlw	0
 10185  031F  00D5               	movwf	PID_Calculate@pidPrevError+1
 10186  0320  3000               	movlw	0
 10187  0321  00D6               	movwf	PID_Calculate@pidPrevError+2
 10188                           
 10189                           ;pid.c: 29: error = setpoint - temp;
 10190  0322  0848               	movf	PID_Calculate@temp,w
 10191  0323  00F0               	movwf	___ftneg@f1
 10192  0324  0849               	movf	PID_Calculate@temp+1,w
 10193  0325  00F1               	movwf	___ftneg@f1+1
 10194  0326  084A               	movf	PID_Calculate@temp+2,w
 10195  0327  00F2               	movwf	___ftneg@f1+2
 10196  0328  3197  27D3  3183   	fcall	___ftneg
 10197  032B  0870               	movf	?___ftneg,w
 10198  032C  0020               	movlb	0	; select bank0
 10199  032D  00B0               	movwf	___ftadd@f1
 10200  032E  0871               	movf	?___ftneg+1,w
 10201  032F  00B1               	movwf	___ftadd@f1+1
 10202  0330  0872               	movf	?___ftneg+2,w
 10203  0331  00B2               	movwf	___ftadd@f1+2
 10204  0332  0847               	movf	PID_Calculate@setpoint+1,w
 10205  0333  00F9               	movwf	___awtoft@c+1
 10206  0334  0846               	movf	PID_Calculate@setpoint,w
 10207  0335  00F8               	movwf	___awtoft@c
 10208  0336  3189  2125  3183   	fcall	___awtoft
 10209  0339  0878               	movf	?___awtoft,w
 10210  033A  0020               	movlb	0	; select bank0
 10211  033B  00B3               	movwf	___ftadd@f2
 10212  033C  0879               	movf	?___awtoft+1,w
 10213  033D  00B4               	movwf	___ftadd@f2+1
 10214  033E  087A               	movf	?___awtoft+2,w
 10215  033F  00B5               	movwf	___ftadd@f2+2
 10216  0340  3182  221F  3183   	fcall	___ftadd
 10217  0343  0020               	movlb	0	; select bank0
 10218  0344  0830               	movf	?___ftadd,w
 10219  0345  00DA               	movwf	PID_Calculate@error
 10220  0346  0831               	movf	?___ftadd+1,w
 10221  0347  00DB               	movwf	PID_Calculate@error+1
 10222  0348  0832               	movf	?___ftadd+2,w
 10223  0349  00DC               	movwf	PID_Calculate@error+2
 10224                           
 10225                           ;pid.c: 31: errorValue = error * PID_Kp;
 10226  034A  0021               	movlb	1	; select bank1
 10227  034B  084F               	movf	_PID_Kp^(0+128),w
 10228  034C  0020               	movlb	0	; select bank0
 10229  034D  00A0               	movwf	___ftmul@f1
 10230  034E  0021               	movlb	1	; select bank1
 10231  034F  0850               	movf	(_PID_Kp+1)^(0+128),w
 10232  0350  0020               	movlb	0	; select bank0
 10233  0351  00A1               	movwf	___ftmul@f1+1
 10234  0352  0021               	movlb	1	; select bank1
 10235  0353  0851               	movf	(_PID_Kp+2)^(0+128),w
 10236  0354  0020               	movlb	0	; select bank0
 10237  0355  00A2               	movwf	___ftmul@f1+2
 10238  0356  085A               	movf	PID_Calculate@error,w
 10239  0357  00A3               	movwf	___ftmul@f2
 10240  0358  085B               	movf	PID_Calculate@error+1,w
 10241  0359  00A4               	movwf	___ftmul@f2+1
 10242  035A  085C               	movf	PID_Calculate@error+2,w
 10243  035B  00A5               	movwf	___ftmul@f2+2
 10244  035C  318F  274C  3183   	fcall	___ftmul
 10245  035F  0020               	movlb	0	; select bank0
 10246  0360  0820               	movf	?___ftmul,w
 10247  0361  00CB               	movwf	PID_Calculate@errorValue
 10248  0362  0821               	movf	?___ftmul+1,w
 10249  0363  00CC               	movwf	PID_Calculate@errorValue+1
 10250  0364  0822               	movf	?___ftmul+2,w
 10251  0365  00CD               	movwf	PID_Calculate@errorValue+2
 10252                           
 10253                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * PID_Ki);
 10254  0366  0021               	movlb	1	; select bank1
 10255  0367  0852               	movf	_pidIntegrated^(0+128),w
 10256  0368  0020               	movlb	0	; select bank0
 10257  0369  00B0               	movwf	___ftadd@f1
 10258  036A  0021               	movlb	1	; select bank1
 10259  036B  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10260  036C  0020               	movlb	0	; select bank0
 10261  036D  00B1               	movwf	___ftadd@f1+1
 10262  036E  0021               	movlb	1	; select bank1
 10263  036F  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10264  0370  0020               	movlb	0	; select bank0
 10265  0371  00B2               	movwf	___ftadd@f1+2
 10266  0372  0021               	movlb	1	; select bank1
 10267  0373  084C               	movf	_PID_Ki^(0+128),w
 10268  0374  0020               	movlb	0	; select bank0
 10269  0375  00A0               	movwf	___ftmul@f1
 10270  0376  0021               	movlb	1	; select bank1
 10271  0377  084D               	movf	(_PID_Ki+1)^(0+128),w
 10272  0378  0020               	movlb	0	; select bank0
 10273  0379  00A1               	movwf	___ftmul@f1+1
 10274  037A  0021               	movlb	1	; select bank1
 10275  037B  084E               	movf	(_PID_Ki+2)^(0+128),w
 10276  037C  0020               	movlb	0	; select bank0
 10277  037D  00A2               	movwf	___ftmul@f1+2
 10278  037E  085A               	movf	PID_Calculate@error,w
 10279  037F  00A3               	movwf	___ftmul@f2
 10280  0380  085B               	movf	PID_Calculate@error+1,w
 10281  0381  00A4               	movwf	___ftmul@f2+1
 10282  0382  085C               	movf	PID_Calculate@error+2,w
 10283  0383  00A5               	movwf	___ftmul@f2+2
 10284  0384  318F  274C  3183   	fcall	___ftmul
 10285  0387  0020               	movlb	0	; select bank0
 10286  0388  0820               	movf	?___ftmul,w
 10287  0389  00B3               	movwf	___ftadd@f2
 10288  038A  0821               	movf	?___ftmul+1,w
 10289  038B  00B4               	movwf	___ftadd@f2+1
 10290  038C  0822               	movf	?___ftmul+2,w
 10291  038D  00B5               	movwf	___ftadd@f2+2
 10292  038E  3182  221F  3183   	fcall	___ftadd
 10293  0391  0020               	movlb	0	; select bank0
 10294  0392  0830               	movf	?___ftadd,w
 10295  0393  0021               	movlb	1	; select bank1
 10296  0394  00D2               	movwf	_pidIntegrated^(0+128)
 10297  0395  0020               	movlb	0	; select bank0
 10298  0396  0831               	movf	?___ftadd+1,w
 10299  0397  0021               	movlb	1	; select bank1
 10300  0398  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10301  0399  0020               	movlb	0	; select bank0
 10302  039A  0832               	movf	?___ftadd+2,w
 10303  039B  0021               	movlb	1	; select bank1
 10304  039C  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10305                           
 10306                           ;pid.c: 36: if (pidIntegrated< pidMinOutput)
 10307  039D  0852               	movf	_pidIntegrated^(0+128),w
 10308  039E  0020               	movlb	0	; select bank0
 10309  039F  00BD               	movwf	___ftge@ff1
 10310  03A0  0021               	movlb	1	; select bank1
 10311  03A1  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10312  03A2  0020               	movlb	0	; select bank0
 10313  03A3  00BE               	movwf	___ftge@ff1+1
 10314  03A4  0021               	movlb	1	; select bank1
 10315  03A5  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10316  03A6  0020               	movlb	0	; select bank0
 10317  03A7  00BF               	movwf	___ftge@ff1+2
 10318  03A8  086C               	movf	_pidMinOutput+1,w
 10319  03A9  00F9               	movwf	___awtoft@c+1
 10320  03AA  086B               	movf	_pidMinOutput,w
 10321  03AB  00F8               	movwf	___awtoft@c
 10322  03AC  3189  2125  3183   	fcall	___awtoft
 10323  03AF  0878               	movf	?___awtoft,w
 10324  03B0  0020               	movlb	0	; select bank0
 10325  03B1  00C0               	movwf	___ftge@ff2
 10326  03B2  0879               	movf	?___awtoft+1,w
 10327  03B3  00C1               	movwf	___ftge@ff2+1
 10328  03B4  087A               	movf	?___awtoft+2,w
 10329  03B5  00C2               	movwf	___ftge@ff2+2
 10330  03B6  318A  225E  3183   	fcall	___ftge
 10331  03B9  1803               	btfsc	3,0
 10332  03BA  2BCA               	goto	l283
 10333                           
 10334                           ;pid.c: 37: {
 10335                           ;pid.c: 38: pidIntegrated= pidMinOutput;
 10336  03BB  0020               	movlb	0	; select bank0
 10337  03BC  086C               	movf	_pidMinOutput+1,w
 10338  03BD  00F9               	movwf	___awtoft@c+1
 10339  03BE  086B               	movf	_pidMinOutput,w
 10340  03BF  00F8               	movwf	___awtoft@c
 10341  03C0  3189  2125  3183   	fcall	___awtoft
 10342  03C3  0878               	movf	?___awtoft,w
 10343  03C4  0021               	movlb	1	; select bank1
 10344  03C5  00D2               	movwf	_pidIntegrated^(0+128)
 10345  03C6  0879               	movf	?___awtoft+1,w
 10346  03C7  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10347  03C8  087A               	movf	?___awtoft+2,w
 10348  03C9  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10349  03CA                     l283:	
 10350                           
 10351                           ;pid.c: 39: }
 10352                           ;pid.c: 41: if (pidIntegrated> pidMaxOutput)
 10353  03CA  0021               	movlb	1	; select bank1
 10354  03CB  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10355  03CC  00F9               	movwf	___awtoft@c+1
 10356  03CD  085A               	movf	_pidMaxOutput^(0+128),w
 10357  03CE  00F8               	movwf	___awtoft@c
 10358  03CF  3189  2125  3183   	fcall	___awtoft
 10359  03D2  0878               	movf	?___awtoft,w
 10360  03D3  0020               	movlb	0	; select bank0
 10361  03D4  00BD               	movwf	___ftge@ff1
 10362  03D5  0879               	movf	?___awtoft+1,w
 10363  03D6  00BE               	movwf	___ftge@ff1+1
 10364  03D7  087A               	movf	?___awtoft+2,w
 10365  03D8  00BF               	movwf	___ftge@ff1+2
 10366  03D9  0021               	movlb	1	; select bank1
 10367  03DA  0852               	movf	_pidIntegrated^(0+128),w
 10368  03DB  0020               	movlb	0	; select bank0
 10369  03DC  00C0               	movwf	___ftge@ff2
 10370  03DD  0021               	movlb	1	; select bank1
 10371  03DE  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10372  03DF  0020               	movlb	0	; select bank0
 10373  03E0  00C1               	movwf	___ftge@ff2+1
 10374  03E1  0021               	movlb	1	; select bank1
 10375  03E2  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10376  03E3  0020               	movlb	0	; select bank0
 10377  03E4  00C2               	movwf	___ftge@ff2+2
 10378  03E5  318A  225E  3183   	fcall	___ftge
 10379  03E8  1803               	btfsc	3,0
 10380  03E9  2BF9               	goto	l284
 10381                           
 10382                           ;pid.c: 42: {
 10383                           ;pid.c: 43: pidIntegrated= pidMaxOutput;
 10384  03EA  0021               	movlb	1	; select bank1
 10385  03EB  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10386  03EC  00F9               	movwf	___awtoft@c+1
 10387  03ED  085A               	movf	_pidMaxOutput^(0+128),w
 10388  03EE  00F8               	movwf	___awtoft@c
 10389  03EF  3189  2125  3183   	fcall	___awtoft
 10390  03F2  0878               	movf	?___awtoft,w
 10391  03F3  0021               	movlb	1	; select bank1
 10392  03F4  00D2               	movwf	_pidIntegrated^(0+128)
 10393  03F5  0879               	movf	?___awtoft+1,w
 10394  03F6  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10395  03F7  087A               	movf	?___awtoft+2,w
 10396  03F8  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10397  03F9                     l284:	
 10398                           
 10399                           ;pid.c: 44: }
 10400                           ;pid.c: 47: derivativeValue=(error-pidPrevError)*PID_Kd;
 10401  03F9  0021               	movlb	1	; select bank1
 10402  03FA  0849               	movf	_PID_Kd^(0+128),w
 10403  03FB  0020               	movlb	0	; select bank0
 10404  03FC  00A0               	movwf	___ftmul@f1
 10405  03FD  0021               	movlb	1	; select bank1
 10406  03FE  084A               	movf	(_PID_Kd+1)^(0+128),w
 10407  03FF  0020               	movlb	0	; select bank0
 10408  0400  00A1               	movwf	___ftmul@f1+1
 10409  0401  0021               	movlb	1	; select bank1
 10410  0402  084B               	movf	(_PID_Kd+2)^(0+128),w
 10411  0403  0020               	movlb	0	; select bank0
 10412  0404  00A2               	movwf	___ftmul@f1+2
 10413  0405  085A               	movf	PID_Calculate@error,w
 10414  0406  00B0               	movwf	___ftadd@f1
 10415  0407  085B               	movf	PID_Calculate@error+1,w
 10416  0408  00B1               	movwf	___ftadd@f1+1
 10417  0409  085C               	movf	PID_Calculate@error+2,w
 10418  040A  00B2               	movwf	___ftadd@f1+2
 10419  040B  0854               	movf	PID_Calculate@pidPrevError,w
 10420  040C  00F0               	movwf	___ftneg@f1
 10421  040D  0855               	movf	PID_Calculate@pidPrevError+1,w
 10422  040E  00F1               	movwf	___ftneg@f1+1
 10423  040F  0856               	movf	PID_Calculate@pidPrevError+2,w
 10424  0410  00F2               	movwf	___ftneg@f1+2
 10425  0411  3197  27D3  3183   	fcall	___ftneg
 10426  0414  0870               	movf	?___ftneg,w
 10427  0415  0020               	movlb	0	; select bank0
 10428  0416  00B3               	movwf	___ftadd@f2
 10429  0417  0871               	movf	?___ftneg+1,w
 10430  0418  00B4               	movwf	___ftadd@f2+1
 10431  0419  0872               	movf	?___ftneg+2,w
 10432  041A  00B5               	movwf	___ftadd@f2+2
 10433  041B  3182  221F  3183   	fcall	___ftadd
 10434  041E  0020               	movlb	0	; select bank0
 10435  041F  0830               	movf	?___ftadd,w
 10436  0420  00A3               	movwf	___ftmul@f2
 10437  0421  0831               	movf	?___ftadd+1,w
 10438  0422  00A4               	movwf	___ftmul@f2+1
 10439  0423  0832               	movf	?___ftadd+2,w
 10440  0424  00A5               	movwf	___ftmul@f2+2
 10441  0425  318F  274C  3183   	fcall	___ftmul
 10442  0428  0020               	movlb	0	; select bank0
 10443  0429  0820               	movf	?___ftmul,w
 10444  042A  00D1               	movwf	PID_Calculate@derivativeValue
 10445  042B  0821               	movf	?___ftmul+1,w
 10446  042C  00D2               	movwf	PID_Calculate@derivativeValue+1
 10447  042D  0822               	movf	?___ftmul+2,w
 10448  042E  00D3               	movwf	PID_Calculate@derivativeValue+2
 10449                           
 10450                           ;pid.c: 48: pidPrevError = error;
 10451  042F  085A               	movf	PID_Calculate@error,w
 10452  0430  00D4               	movwf	PID_Calculate@pidPrevError
 10453  0431  085B               	movf	PID_Calculate@error+1,w
 10454  0432  00D5               	movwf	PID_Calculate@pidPrevError+1
 10455  0433  085C               	movf	PID_Calculate@error+2,w
 10456  0434  00D6               	movwf	PID_Calculate@pidPrevError+2
 10457                           
 10458                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10459  0435  0021               	movlb	1	; select bank1
 10460  0436  0852               	movf	_pidIntegrated^(0+128),w
 10461  0437  0020               	movlb	0	; select bank0
 10462  0438  00B0               	movwf	___ftadd@f1
 10463  0439  0021               	movlb	1	; select bank1
 10464  043A  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10465  043B  0020               	movlb	0	; select bank0
 10466  043C  00B1               	movwf	___ftadd@f1+1
 10467  043D  0021               	movlb	1	; select bank1
 10468  043E  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10469  043F  0020               	movlb	0	; select bank0
 10470  0440  00B2               	movwf	___ftadd@f1+2
 10471  0441  084B               	movf	PID_Calculate@errorValue,w
 10472  0442  00B3               	movwf	___ftadd@f2
 10473  0443  084C               	movf	PID_Calculate@errorValue+1,w
 10474  0444  00B4               	movwf	___ftadd@f2+1
 10475  0445  084D               	movf	PID_Calculate@errorValue+2,w
 10476  0446  00B5               	movwf	___ftadd@f2+2
 10477  0447  3182  221F  3183   	fcall	___ftadd
 10478  044A  0020               	movlb	0	; select bank0
 10479  044B  0830               	movf	?___ftadd,w
 10480  044C  00CE               	movwf	_PID_Calculate$1053
 10481  044D  0831               	movf	?___ftadd+1,w
 10482  044E  00CF               	movwf	_PID_Calculate$1053+1
 10483  044F  0832               	movf	?___ftadd+2,w
 10484  0450  00D0               	movwf	_PID_Calculate$1053+2
 10485                           
 10486                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10487  0451  0851               	movf	PID_Calculate@derivativeValue,w
 10488  0452  00B0               	movwf	___ftadd@f1
 10489  0453  0852               	movf	PID_Calculate@derivativeValue+1,w
 10490  0454  00B1               	movwf	___ftadd@f1+1
 10491  0455  0853               	movf	PID_Calculate@derivativeValue+2,w
 10492  0456  00B2               	movwf	___ftadd@f1+2
 10493  0457  084E               	movf	_PID_Calculate$1053,w
 10494  0458  00B3               	movwf	___ftadd@f2
 10495  0459  084F               	movf	_PID_Calculate$1053+1,w
 10496  045A  00B4               	movwf	___ftadd@f2+1
 10497  045B  0850               	movf	_PID_Calculate$1053+2,w
 10498  045C  00B5               	movwf	___ftadd@f2+2
 10499  045D  3182  221F  3183   	fcall	___ftadd
 10500  0460  0020               	movlb	0	; select bank0
 10501  0461  0830               	movf	?___ftadd,w
 10502  0462  00D7               	movwf	PID_Calculate@Result
 10503  0463  0831               	movf	?___ftadd+1,w
 10504  0464  00D8               	movwf	PID_Calculate@Result+1
 10505  0465  0832               	movf	?___ftadd+2,w
 10506  0466  00D9               	movwf	PID_Calculate@Result+2
 10507                           
 10508                           ;pid.c: 53: if (Result < pidMinOutput)
 10509  0467  0857               	movf	PID_Calculate@Result,w
 10510  0468  00BD               	movwf	___ftge@ff1
 10511  0469  0858               	movf	PID_Calculate@Result+1,w
 10512  046A  00BE               	movwf	___ftge@ff1+1
 10513  046B  0859               	movf	PID_Calculate@Result+2,w
 10514  046C  00BF               	movwf	___ftge@ff1+2
 10515  046D  086C               	movf	_pidMinOutput+1,w
 10516  046E  00F9               	movwf	___awtoft@c+1
 10517  046F  086B               	movf	_pidMinOutput,w
 10518  0470  00F8               	movwf	___awtoft@c
 10519  0471  3189  2125  3183   	fcall	___awtoft
 10520  0474  0878               	movf	?___awtoft,w
 10521  0475  0020               	movlb	0	; select bank0
 10522  0476  00C0               	movwf	___ftge@ff2
 10523  0477  0879               	movf	?___awtoft+1,w
 10524  0478  00C1               	movwf	___ftge@ff2+1
 10525  0479  087A               	movf	?___awtoft+2,w
 10526  047A  00C2               	movwf	___ftge@ff2+2
 10527  047B  318A  225E  3183   	fcall	___ftge
 10528  047E  1803               	btfsc	3,0
 10529  047F  2C8F               	goto	l285
 10530                           
 10531                           ;pid.c: 54: {
 10532                           ;pid.c: 55: Result = pidMinOutput;
 10533  0480  0020               	movlb	0	; select bank0
 10534  0481  086C               	movf	_pidMinOutput+1,w
 10535  0482  00F9               	movwf	___awtoft@c+1
 10536  0483  086B               	movf	_pidMinOutput,w
 10537  0484  00F8               	movwf	___awtoft@c
 10538  0485  3189  2125  3183   	fcall	___awtoft
 10539  0488  0878               	movf	?___awtoft,w
 10540  0489  0020               	movlb	0	; select bank0
 10541  048A  00D7               	movwf	PID_Calculate@Result
 10542  048B  0879               	movf	?___awtoft+1,w
 10543  048C  00D8               	movwf	PID_Calculate@Result+1
 10544  048D  087A               	movf	?___awtoft+2,w
 10545  048E  00D9               	movwf	PID_Calculate@Result+2
 10546  048F                     l285:	
 10547                           
 10548                           ;pid.c: 56: }
 10549                           ;pid.c: 58: if (Result > pidMaxOutput)
 10550  048F  0021               	movlb	1	; select bank1
 10551  0490  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10552  0491  00F9               	movwf	___awtoft@c+1
 10553  0492  085A               	movf	_pidMaxOutput^(0+128),w
 10554  0493  00F8               	movwf	___awtoft@c
 10555  0494  3189  2125  3183   	fcall	___awtoft
 10556  0497  0878               	movf	?___awtoft,w
 10557  0498  0020               	movlb	0	; select bank0
 10558  0499  00BD               	movwf	___ftge@ff1
 10559  049A  0879               	movf	?___awtoft+1,w
 10560  049B  00BE               	movwf	___ftge@ff1+1
 10561  049C  087A               	movf	?___awtoft+2,w
 10562  049D  00BF               	movwf	___ftge@ff1+2
 10563  049E  0857               	movf	PID_Calculate@Result,w
 10564  049F  00C0               	movwf	___ftge@ff2
 10565  04A0  0858               	movf	PID_Calculate@Result+1,w
 10566  04A1  00C1               	movwf	___ftge@ff2+1
 10567  04A2  0859               	movf	PID_Calculate@Result+2,w
 10568  04A3  00C2               	movwf	___ftge@ff2+2
 10569  04A4  318A  225E  3183   	fcall	___ftge
 10570  04A7  1803               	btfsc	3,0
 10571  04A8  2CB7               	goto	l2750
 10572                           
 10573                           ;pid.c: 59: {
 10574                           ;pid.c: 60: Result = pidMaxOutput;
 10575  04A9  0021               	movlb	1	; select bank1
 10576  04AA  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10577  04AB  00F9               	movwf	___awtoft@c+1
 10578  04AC  085A               	movf	_pidMaxOutput^(0+128),w
 10579  04AD  00F8               	movwf	___awtoft@c
 10580  04AE  3189  2125         	fcall	___awtoft
 10581  04B0  0878               	movf	?___awtoft,w
 10582  04B1  0020               	movlb	0	; select bank0
 10583  04B2  00D7               	movwf	PID_Calculate@Result
 10584  04B3  0879               	movf	?___awtoft+1,w
 10585  04B4  00D8               	movwf	PID_Calculate@Result+1
 10586  04B5  087A               	movf	?___awtoft+2,w
 10587  04B6  00D9               	movwf	PID_Calculate@Result+2
 10588  04B7                     l2750:	
 10589                           
 10590                           ;pid.c: 61: }
 10591                           ;pid.c: 63: return (Result);
 10592  04B7  0020               	movlb	0	; select bank0
 10593  04B8  0857               	movf	PID_Calculate@Result,w
 10594  04B9  00C6               	movwf	?_PID_Calculate
 10595  04BA  0858               	movf	PID_Calculate@Result+1,w
 10596  04BB  00C7               	movwf	?_PID_Calculate+1
 10597  04BC  0859               	movf	PID_Calculate@Result+2,w
 10598  04BD  00C8               	movwf	?_PID_Calculate+2
 10599  04BE  0008               	return
 10600  04BF                     __end_of_PID_Calculate:	
 10601                           
 10602                           	psect	text35
 10603  17D3                     __ptext35:	
 10604 ;; *************** function ___ftneg *****************
 10605 ;; Defined at:
 10606 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  f1              3    0[COMMON] float 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;		None
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  3    0[COMMON] float 
 10613 ;; Registers used:
 10614 ;;		wreg
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:        3 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_PID_Calculate
 10630 ;;		_main
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function ___ftneg
 10636  17D3                     ___ftneg:	
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in ___ftneg: [wreg]
 10640  17D3  0872               	movf	___ftneg@f1+2,w
 10641  17D4  0471               	iorwf	___ftneg@f1+1,w
 10642  17D5  0470               	iorwf	___ftneg@f1,w
 10643  17D6  1903               	skipnz
 10644  17D7  0008               	return
 10645  17D8  3080               	movlw	128
 10646  17D9  06F2               	xorwf	___ftneg@f1+2,f
 10647  17DA  0008               	return
 10648  17DB                     __end_of___ftneg:	
 10649                           
 10650                           	psect	text36
 10651  0F4C                     __ptext36:	
 10652 ;; *************** function ___ftmul *****************
 10653 ;; Defined at:
 10654 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  f1              3    0[BANK0 ] float 
 10657 ;;  f2              3    3[BANK0 ] float 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 10660 ;;  sign            1   15[BANK0 ] unsigned char 
 10661 ;;  cntr            1   14[BANK0 ] unsigned char 
 10662 ;;  exp             1   10[BANK0 ] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  3    0[BANK0 ] float 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0, pclath, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:       16 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    1
 10679 ;; This function calls:
 10680 ;;		___ftpack
 10681 ;; This function is called by:
 10682 ;;		_PID_Calculate
 10683 ;;		_main
 10684 ;;		_log
 10685 ;;		_eval_poly
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           
 10690                           ;psect for function ___ftmul
 10691  0F4C                     ___ftmul:	
 10692                           
 10693                           ;incstack = 0
 10694                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10695  0F4C  0020               	movlb	0	; select bank0
 10696  0F4D  0820               	movf	___ftmul@f1,w
 10697  0F4E  00A6               	movwf	??___ftmul
 10698  0F4F  0821               	movf	___ftmul@f1+1,w
 10699  0F50  00A7               	movwf	??___ftmul+1
 10700  0F51  0822               	movf	___ftmul@f1+2,w
 10701  0F52  00A8               	movwf	??___ftmul+2
 10702  0F53  1003               	clrc
 10703  0F54  0D27               	rlf	??___ftmul+1,w
 10704  0F55  0D28               	rlf	??___ftmul+2,w
 10705  0F56  00A9               	movwf	??___ftmul+3
 10706  0F57  0829               	movf	??___ftmul+3,w
 10707  0F58  00AA               	movwf	___ftmul@exp
 10708  0F59  082A               	movf	___ftmul@exp,w
 10709  0F5A  1D03               	btfss	3,2
 10710  0F5B  2F63               	goto	l2348
 10711  0F5C  3000               	movlw	0
 10712  0F5D  00A0               	movwf	?___ftmul
 10713  0F5E  3000               	movlw	0
 10714  0F5F  00A1               	movwf	?___ftmul+1
 10715  0F60  3000               	movlw	0
 10716  0F61  00A2               	movwf	?___ftmul+2
 10717  0F62  0008               	return
 10718  0F63                     l2348:	
 10719  0F63  0823               	movf	___ftmul@f2,w
 10720  0F64  00A6               	movwf	??___ftmul
 10721  0F65  0824               	movf	___ftmul@f2+1,w
 10722  0F66  00A7               	movwf	??___ftmul+1
 10723  0F67  0825               	movf	___ftmul@f2+2,w
 10724  0F68  00A8               	movwf	??___ftmul+2
 10725  0F69  1003               	clrc
 10726  0F6A  0D27               	rlf	??___ftmul+1,w
 10727  0F6B  0D28               	rlf	??___ftmul+2,w
 10728  0F6C  00A9               	movwf	??___ftmul+3
 10729  0F6D  0829               	movf	??___ftmul+3,w
 10730  0F6E  00AF               	movwf	___ftmul@sign
 10731  0F6F  082F               	movf	___ftmul@sign,w
 10732  0F70  1D03               	btfss	3,2
 10733  0F71  2F79               	goto	l2354
 10734  0F72  3000               	movlw	0
 10735  0F73  00A0               	movwf	?___ftmul
 10736  0F74  3000               	movlw	0
 10737  0F75  00A1               	movwf	?___ftmul+1
 10738  0F76  3000               	movlw	0
 10739  0F77  00A2               	movwf	?___ftmul+2
 10740  0F78  0008               	return
 10741  0F79                     l2354:	
 10742  0F79  082F               	movf	___ftmul@sign,w
 10743  0F7A  3E7B               	addlw	123
 10744  0F7B  00A6               	movwf	??___ftmul
 10745  0F7C  0826               	movf	??___ftmul,w
 10746  0F7D  07AA               	addwf	___ftmul@exp,f
 10747  0F7E  0820               	movf	___ftmul@f1,w
 10748  0F7F  00A6               	movwf	??___ftmul
 10749  0F80  0821               	movf	___ftmul@f1+1,w
 10750  0F81  00A7               	movwf	??___ftmul+1
 10751  0F82  0822               	movf	___ftmul@f1+2,w
 10752  0F83  00A8               	movwf	??___ftmul+2
 10753  0F84  3010               	movlw	16
 10754  0F85                     u2435:	
 10755  0F85  36A8               	lsrf	??___ftmul+2,f
 10756  0F86  0CA7               	rrf	??___ftmul+1,f
 10757  0F87  0CA6               	rrf	??___ftmul,f
 10758  0F88  0B89               	decfsz	9,f
 10759  0F89  2F85               	goto	u2435
 10760  0F8A  0826               	movf	??___ftmul,w
 10761  0F8B  00A9               	movwf	??___ftmul+3
 10762  0F8C  0829               	movf	??___ftmul+3,w
 10763  0F8D  00AF               	movwf	___ftmul@sign
 10764  0F8E  0823               	movf	___ftmul@f2,w
 10765  0F8F  00A6               	movwf	??___ftmul
 10766  0F90  0824               	movf	___ftmul@f2+1,w
 10767  0F91  00A7               	movwf	??___ftmul+1
 10768  0F92  0825               	movf	___ftmul@f2+2,w
 10769  0F93  00A8               	movwf	??___ftmul+2
 10770  0F94  3010               	movlw	16
 10771  0F95                     u2445:	
 10772  0F95  36A8               	lsrf	??___ftmul+2,f
 10773  0F96  0CA7               	rrf	??___ftmul+1,f
 10774  0F97  0CA6               	rrf	??___ftmul,f
 10775  0F98  0B89               	decfsz	9,f
 10776  0F99  2F95               	goto	u2445
 10777  0F9A  0826               	movf	??___ftmul,w
 10778  0F9B  00A9               	movwf	??___ftmul+3
 10779  0F9C  0829               	movf	??___ftmul+3,w
 10780  0F9D  06AF               	xorwf	___ftmul@sign,f
 10781  0F9E  3080               	movlw	128
 10782  0F9F  00A6               	movwf	??___ftmul
 10783  0FA0  0826               	movf	??___ftmul,w
 10784  0FA1  05AF               	andwf	___ftmul@sign,f
 10785  0FA2  17A1               	bsf	___ftmul@f1+1,7
 10786  0FA3  17A4               	bsf	___ftmul@f2+1,7
 10787  0FA4  30FF               	movlw	255
 10788  0FA5  05A3               	andwf	___ftmul@f2,f
 10789  0FA6  30FF               	movlw	255
 10790  0FA7  05A4               	andwf	___ftmul@f2+1,f
 10791  0FA8  3000               	movlw	0
 10792  0FA9  05A5               	andwf	___ftmul@f2+2,f
 10793  0FAA  3000               	movlw	0
 10794  0FAB  00AB               	movwf	___ftmul@f3_as_product
 10795  0FAC  3000               	movlw	0
 10796  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
 10797  0FAE  3000               	movlw	0
 10798  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
 10799  0FB0  3007               	movlw	7
 10800  0FB1  00A6               	movwf	??___ftmul
 10801  0FB2  0826               	movf	??___ftmul,w
 10802  0FB3  00AE               	movwf	___ftmul@cntr
 10803  0FB4                     l2366:	
 10804  0FB4  1C20               	btfss	___ftmul@f1,0
 10805  0FB5  2FBC               	goto	l2370
 10806  0FB6  0823               	movf	___ftmul@f2,w
 10807  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
 10808  0FB8  0824               	movf	___ftmul@f2+1,w
 10809  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10810  0FBA  0825               	movf	___ftmul@f2+2,w
 10811  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10812  0FBC                     l2370:	
 10813  0FBC  3001               	movlw	1
 10814  0FBD                     u2465:	
 10815  0FBD  36A2               	lsrf	___ftmul@f1+2,f
 10816  0FBE  0CA1               	rrf	___ftmul@f1+1,f
 10817  0FBF  0CA0               	rrf	___ftmul@f1,f
 10818  0FC0  0B89               	decfsz	9,f
 10819  0FC1  2FBD               	goto	u2465
 10820  0FC2  3001               	movlw	1
 10821  0FC3                     u2475:	
 10822  0FC3  35A3               	lslf	___ftmul@f2,f
 10823  0FC4  0DA4               	rlf	___ftmul@f2+1,f
 10824  0FC5  0DA5               	rlf	___ftmul@f2+2,f
 10825  0FC6  0B89               	decfsz	9,f
 10826  0FC7  2FC3               	goto	u2475
 10827  0FC8  3001               	movlw	1
 10828  0FC9  02AE               	subwf	___ftmul@cntr,f
 10829  0FCA  1D03               	btfss	3,2
 10830  0FCB  2FB4               	goto	l2366
 10831  0FCC  3009               	movlw	9
 10832  0FCD  00A6               	movwf	??___ftmul
 10833  0FCE  0826               	movf	??___ftmul,w
 10834  0FCF  00AE               	movwf	___ftmul@cntr
 10835  0FD0                     l2378:	
 10836  0FD0  1C20               	btfss	___ftmul@f1,0
 10837  0FD1  2FD8               	goto	l2382
 10838  0FD2  0823               	movf	___ftmul@f2,w
 10839  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
 10840  0FD4  0824               	movf	___ftmul@f2+1,w
 10841  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10842  0FD6  0825               	movf	___ftmul@f2+2,w
 10843  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10844  0FD8                     l2382:	
 10845  0FD8  3001               	movlw	1
 10846  0FD9                     u2505:	
 10847  0FD9  36A2               	lsrf	___ftmul@f1+2,f
 10848  0FDA  0CA1               	rrf	___ftmul@f1+1,f
 10849  0FDB  0CA0               	rrf	___ftmul@f1,f
 10850  0FDC  0B89               	decfsz	9,f
 10851  0FDD  2FD9               	goto	u2505
 10852  0FDE  3001               	movlw	1
 10853  0FDF                     u2515:	
 10854  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
 10855  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
 10856  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
 10857  0FE2  0B89               	decfsz	9,f
 10858  0FE3  2FDF               	goto	u2515
 10859  0FE4  3001               	movlw	1
 10860  0FE5  02AE               	subwf	___ftmul@cntr,f
 10861  0FE6  1D03               	btfss	3,2
 10862  0FE7  2FD0               	goto	l2378
 10863  0FE8  082B               	movf	___ftmul@f3_as_product,w
 10864  0FE9  00F0               	movwf	___ftpack@arg
 10865  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
 10866  0FEB  00F1               	movwf	___ftpack@arg+1
 10867  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
 10868  0FED  00F2               	movwf	___ftpack@arg+2
 10869  0FEE  082A               	movf	___ftmul@exp,w
 10870  0FEF  00A6               	movwf	??___ftmul
 10871  0FF0  0826               	movf	??___ftmul,w
 10872  0FF1  00F3               	movwf	___ftpack@exp
 10873  0FF2  082F               	movf	___ftmul@sign,w
 10874  0FF3  00A7               	movwf	??___ftmul+1
 10875  0FF4  0827               	movf	??___ftmul+1,w
 10876  0FF5  00F4               	movwf	___ftpack@sign
 10877  0FF6  318C  240B         	fcall	___ftpack
 10878  0FF8  0870               	movf	?___ftpack,w
 10879  0FF9  0020               	movlb	0	; select bank0
 10880  0FFA  00A0               	movwf	?___ftmul
 10881  0FFB  0871               	movf	?___ftpack+1,w
 10882  0FFC  00A1               	movwf	?___ftmul+1
 10883  0FFD  0872               	movf	?___ftpack+2,w
 10884  0FFE  00A2               	movwf	?___ftmul+2
 10885  0FFF  0008               	return
 10886  1000                     __end_of___ftmul:	
 10887                           
 10888                           	psect	text37
 10889  0A5E                     __ptext37:	
 10890 ;; *************** function ___ftge *****************
 10891 ;; Defined at:
 10892 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  ff1             3   29[BANK0 ] float 
 10895 ;;  ff2             3   32[BANK0 ] float 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;		None
 10898 ;; Return value:  Size  Location     Type
 10899 ;;		None               void
 10900 ;; Registers used:
 10901 ;;		wreg, status,2, status,0
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;Total ram usage:        9 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_PID_Calculate
 10917 ;;		_main
 10918 ;;		_log
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           
 10923                           ;psect for function ___ftge
 10924  0A5E                     ___ftge:	
 10925                           
 10926                           ;incstack = 0
 10927                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10928  0A5E  0020               	movlb	0	; select bank0
 10929  0A5F  1FBF               	btfss	___ftge@ff1+2,7
 10930  0A60  2A75               	goto	l2630
 10931  0A61  093D               	comf	___ftge@ff1,w
 10932  0A62  00C3               	movwf	??___ftge
 10933  0A63  093E               	comf	___ftge@ff1+1,w
 10934  0A64  00C4               	movwf	??___ftge+1
 10935  0A65  093F               	comf	___ftge@ff1+2,w
 10936  0A66  00C5               	movwf	??___ftge+2
 10937  0A67  0AC3               	incf	??___ftge,f
 10938  0A68  1903               	skipnz
 10939  0A69  0AC4               	incf	??___ftge+1,f
 10940  0A6A  1903               	skipnz
 10941  0A6B  0AC5               	incf	??___ftge+2,f
 10942  0A6C  3000               	movlw	0
 10943  0A6D  0743               	addwf	??___ftge,w
 10944  0A6E  00BD               	movwf	___ftge@ff1
 10945  0A6F  3000               	movlw	0
 10946  0A70  3D44               	addwfc	??___ftge+1,w
 10947  0A71  00BE               	movwf	___ftge@ff1+1
 10948  0A72  3080               	movlw	128
 10949  0A73  3D45               	addwfc	??___ftge+2,w
 10950  0A74  00BF               	movwf	___ftge@ff1+2
 10951  0A75                     l2630:	
 10952  0A75  1FC2               	btfss	___ftge@ff2+2,7
 10953  0A76  2A8B               	goto	l2634
 10954  0A77  0940               	comf	___ftge@ff2,w
 10955  0A78  00C3               	movwf	??___ftge
 10956  0A79  0941               	comf	___ftge@ff2+1,w
 10957  0A7A  00C4               	movwf	??___ftge+1
 10958  0A7B  0942               	comf	___ftge@ff2+2,w
 10959  0A7C  00C5               	movwf	??___ftge+2
 10960  0A7D  0AC3               	incf	??___ftge,f
 10961  0A7E  1903               	skipnz
 10962  0A7F  0AC4               	incf	??___ftge+1,f
 10963  0A80  1903               	skipnz
 10964  0A81  0AC5               	incf	??___ftge+2,f
 10965  0A82  3000               	movlw	0
 10966  0A83  0743               	addwf	??___ftge,w
 10967  0A84  00C0               	movwf	___ftge@ff2
 10968  0A85  3000               	movlw	0
 10969  0A86  3D44               	addwfc	??___ftge+1,w
 10970  0A87  00C1               	movwf	___ftge@ff2+1
 10971  0A88  3080               	movlw	128
 10972  0A89  3D45               	addwfc	??___ftge+2,w
 10973  0A8A  00C2               	movwf	___ftge@ff2+2
 10974  0A8B                     l2634:	
 10975  0A8B  3080               	movlw	128
 10976  0A8C  06BF               	xorwf	___ftge@ff1+2,f
 10977  0A8D  3080               	movlw	128
 10978  0A8E  06C2               	xorwf	___ftge@ff2+2,f
 10979  0A8F  0842               	movf	___ftge@ff2+2,w
 10980  0A90  023F               	subwf	___ftge@ff1+2,w
 10981  0A91  1D03               	skipz
 10982  0A92  0008               	return
 10983  0A93  0841               	movf	___ftge@ff2+1,w
 10984  0A94  023E               	subwf	___ftge@ff1+1,w
 10985  0A95  1D03               	skipz
 10986  0A96  0008               	return
 10987  0A97  0840               	movf	___ftge@ff2,w
 10988  0A98  023D               	subwf	___ftge@ff1,w
 10989  0A99  0008               	return
 10990  0A9A                     __end_of___ftge:	
 10991                           
 10992                           	psect	text38
 10993  021F                     __ptext38:	
 10994 ;; *************** function ___ftadd *****************
 10995 ;; Defined at:
 10996 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  f1              3   16[BANK0 ] float 
 10999 ;;  f2              3   19[BANK0 ] float 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  exp1            1   28[BANK0 ] unsigned char 
 11002 ;;  exp2            1   27[BANK0 ] unsigned char 
 11003 ;;  sign            1   26[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  3   16[BANK0 ] float 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0, pclath, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;Total ram usage:       13 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    1
 11020 ;; This function calls:
 11021 ;;		___ftpack
 11022 ;; This function is called by:
 11023 ;;		_PID_Calculate
 11024 ;;		_main
 11025 ;;		___ftsub
 11026 ;;		_log
 11027 ;;		_eval_poly
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           
 11032                           ;psect for function ___ftadd
 11033  021F                     ___ftadd:	
 11034                           
 11035                           ;incstack = 0
 11036                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11037  021F  0020               	movlb	0	; select bank0
 11038  0220  0830               	movf	___ftadd@f1,w
 11039  0221  00B6               	movwf	??___ftadd
 11040  0222  0831               	movf	___ftadd@f1+1,w
 11041  0223  00B7               	movwf	??___ftadd+1
 11042  0224  0832               	movf	___ftadd@f1+2,w
 11043  0225  00B8               	movwf	??___ftadd+2
 11044  0226  1003               	clrc
 11045  0227  0D37               	rlf	??___ftadd+1,w
 11046  0228  0D38               	rlf	??___ftadd+2,w
 11047  0229  00B9               	movwf	??___ftadd+3
 11048  022A  0839               	movf	??___ftadd+3,w
 11049  022B  00BC               	movwf	___ftadd@exp1
 11050  022C  0833               	movf	___ftadd@f2,w
 11051  022D  00B6               	movwf	??___ftadd
 11052  022E  0834               	movf	___ftadd@f2+1,w
 11053  022F  00B7               	movwf	??___ftadd+1
 11054  0230  0835               	movf	___ftadd@f2+2,w
 11055  0231  00B8               	movwf	??___ftadd+2
 11056  0232  1003               	clrc
 11057  0233  0D37               	rlf	??___ftadd+1,w
 11058  0234  0D38               	rlf	??___ftadd+2,w
 11059  0235  00B9               	movwf	??___ftadd+3
 11060  0236  0839               	movf	??___ftadd+3,w
 11061  0237  00BB               	movwf	___ftadd@exp2
 11062  0238  083C               	movf	___ftadd@exp1,w
 11063  0239  1903               	btfsc	3,2
 11064  023A  2A47               	goto	l2278
 11065  023B  083B               	movf	___ftadd@exp2,w
 11066  023C  023C               	subwf	___ftadd@exp1,w
 11067  023D  1803               	skipnc
 11068  023E  2A4E               	goto	l2282
 11069  023F  033C               	decf	___ftadd@exp1,w
 11070  0240  3AFF               	xorlw	255
 11071  0241  073B               	addwf	___ftadd@exp2,w
 11072  0242  00B6               	movwf	??___ftadd
 11073  0243  3019               	movlw	25
 11074  0244  0236               	subwf	??___ftadd,w
 11075  0245  1C03               	skipc
 11076  0246  2A4E               	goto	l2282
 11077  0247                     l2278:	
 11078  0247  0833               	movf	___ftadd@f2,w
 11079  0248  00B0               	movwf	?___ftadd
 11080  0249  0834               	movf	___ftadd@f2+1,w
 11081  024A  00B1               	movwf	?___ftadd+1
 11082  024B  0835               	movf	___ftadd@f2+2,w
 11083  024C  00B2               	movwf	?___ftadd+2
 11084  024D  0008               	return
 11085  024E                     l2282:	
 11086  024E  083B               	movf	___ftadd@exp2,w
 11087  024F  1903               	btfsc	3,2
 11088  0250  0008               	return
 11089  0251  083C               	movf	___ftadd@exp1,w
 11090  0252  023B               	subwf	___ftadd@exp2,w
 11091  0253  1803               	skipnc
 11092  0254  2A5D               	goto	l2288
 11093  0255  033B               	decf	___ftadd@exp2,w
 11094  0256  3AFF               	xorlw	255
 11095  0257  073C               	addwf	___ftadd@exp1,w
 11096  0258  00B6               	movwf	??___ftadd
 11097  0259  3019               	movlw	25
 11098  025A  0236               	subwf	??___ftadd,w
 11099  025B  1803               	btfsc	3,0
 11100  025C  0008               	return
 11101  025D                     l2288:	
 11102  025D  3006               	movlw	6
 11103  025E  00B6               	movwf	??___ftadd
 11104  025F  0836               	movf	??___ftadd,w
 11105  0260  00BA               	movwf	___ftadd@sign
 11106  0261  1BB2               	btfsc	___ftadd@f1+2,7
 11107  0262  17BA               	bsf	___ftadd@sign,7
 11108  0263  1BB5               	btfsc	___ftadd@f2+2,7
 11109  0264  173A               	bsf	___ftadd@sign,6
 11110  0265  17B1               	bsf	___ftadd@f1+1,7
 11111  0266  30FF               	movlw	255
 11112  0267  05B0               	andwf	___ftadd@f1,f
 11113  0268  30FF               	movlw	255
 11114  0269  05B1               	andwf	___ftadd@f1+1,f
 11115  026A  3000               	movlw	0
 11116  026B  05B2               	andwf	___ftadd@f1+2,f
 11117  026C  17B4               	bsf	___ftadd@f2+1,7
 11118  026D  30FF               	movlw	255
 11119  026E  05B3               	andwf	___ftadd@f2,f
 11120  026F  30FF               	movlw	255
 11121  0270  05B4               	andwf	___ftadd@f2+1,f
 11122  0271  3000               	movlw	0
 11123  0272  05B5               	andwf	___ftadd@f2+2,f
 11124  0273  083B               	movf	___ftadd@exp2,w
 11125  0274  023C               	subwf	___ftadd@exp1,w
 11126  0275  1803               	skipnc
 11127  0276  2A99               	goto	l2310
 11128  0277                     l2300:	
 11129  0277  3001               	movlw	1
 11130  0278                     u2275:	
 11131  0278  35B3               	lslf	___ftadd@f2,f
 11132  0279  0DB4               	rlf	___ftadd@f2+1,f
 11133  027A  0DB5               	rlf	___ftadd@f2+2,f
 11134  027B  0B89               	decfsz	9,f
 11135  027C  2A78               	goto	u2275
 11136  027D  3001               	movlw	1
 11137  027E  02BB               	subwf	___ftadd@exp2,f
 11138  027F  083B               	movf	___ftadd@exp2,w
 11139  0280  063C               	xorwf	___ftadd@exp1,w
 11140  0281  1903               	skipnz
 11141  0282  2A94               	goto	l2308
 11142  0283  3001               	movlw	1
 11143  0284  02BA               	subwf	___ftadd@sign,f
 11144  0285  083A               	movf	___ftadd@sign,w
 11145  0286  3907               	andlw	7
 11146  0287  1903               	btfsc	3,2
 11147  0288  2A94               	goto	l2308
 11148  0289  2A77               	goto	l2300
 11149  028A                     l2306:	
 11150  028A  3001               	movlw	1
 11151  028B                     u2305:	
 11152  028B  36B2               	lsrf	___ftadd@f1+2,f
 11153  028C  0CB1               	rrf	___ftadd@f1+1,f
 11154  028D  0CB0               	rrf	___ftadd@f1,f
 11155  028E  0B89               	decfsz	9,f
 11156  028F  2A8B               	goto	u2305
 11157  0290  3001               	movlw	1
 11158  0291  00B6               	movwf	??___ftadd
 11159  0292  0836               	movf	??___ftadd,w
 11160  0293  07BC               	addwf	___ftadd@exp1,f
 11161  0294                     l2308:	
 11162  0294  083C               	movf	___ftadd@exp1,w
 11163  0295  063B               	xorwf	___ftadd@exp2,w
 11164  0296  1903               	btfsc	3,2
 11165  0297  2ABE               	goto	l670
 11166  0298  2A8A               	goto	l2306
 11167  0299                     l2310:	
 11168  0299  083C               	movf	___ftadd@exp1,w
 11169  029A  023B               	subwf	___ftadd@exp2,w
 11170  029B  1803               	skipnc
 11171  029C  2ABE               	goto	l670
 11172  029D                     l2312:	
 11173  029D  3001               	movlw	1
 11174  029E                     u2335:	
 11175  029E  35B0               	lslf	___ftadd@f1,f
 11176  029F  0DB1               	rlf	___ftadd@f1+1,f
 11177  02A0  0DB2               	rlf	___ftadd@f1+2,f
 11178  02A1  0B89               	decfsz	9,f
 11179  02A2  2A9E               	goto	u2335
 11180  02A3  3001               	movlw	1
 11181  02A4  02BC               	subwf	___ftadd@exp1,f
 11182  02A5  083B               	movf	___ftadd@exp2,w
 11183  02A6  063C               	xorwf	___ftadd@exp1,w
 11184  02A7  1903               	skipnz
 11185  02A8  2ABA               	goto	l2320
 11186  02A9  3001               	movlw	1
 11187  02AA  02BA               	subwf	___ftadd@sign,f
 11188  02AB  083A               	movf	___ftadd@sign,w
 11189  02AC  3907               	andlw	7
 11190  02AD  1903               	btfsc	3,2
 11191  02AE  2ABA               	goto	l2320
 11192  02AF  2A9D               	goto	l2312
 11193  02B0                     l2318:	
 11194  02B0  3001               	movlw	1
 11195  02B1                     u2365:	
 11196  02B1  36B5               	lsrf	___ftadd@f2+2,f
 11197  02B2  0CB4               	rrf	___ftadd@f2+1,f
 11198  02B3  0CB3               	rrf	___ftadd@f2,f
 11199  02B4  0B89               	decfsz	9,f
 11200  02B5  2AB1               	goto	u2365
 11201  02B6  3001               	movlw	1
 11202  02B7  00B6               	movwf	??___ftadd
 11203  02B8  0836               	movf	??___ftadd,w
 11204  02B9  07BB               	addwf	___ftadd@exp2,f
 11205  02BA                     l2320:	
 11206  02BA  083C               	movf	___ftadd@exp1,w
 11207  02BB  063B               	xorwf	___ftadd@exp2,w
 11208  02BC  1D03               	skipz
 11209  02BD  2AB0               	goto	l2318
 11210  02BE                     l670:	
 11211  02BE  1FBA               	btfss	___ftadd@sign,7
 11212  02BF  2AD0               	goto	l2324
 11213  02C0  30FF               	movlw	255
 11214  02C1  06B0               	xorwf	___ftadd@f1,f
 11215  02C2  30FF               	movlw	255
 11216  02C3  06B1               	xorwf	___ftadd@f1+1,f
 11217  02C4  30FF               	movlw	255
 11218  02C5  06B2               	xorwf	___ftadd@f1+2,f
 11219  02C6  3001               	movlw	1
 11220  02C7  07B0               	addwf	___ftadd@f1,f
 11221  02C8  3000               	movlw	0
 11222  02C9  1803               	skipnc
 11223  02CA  3001               	movlw	1
 11224  02CB  07B1               	addwf	___ftadd@f1+1,f
 11225  02CC  3000               	movlw	0
 11226  02CD  1803               	skipnc
 11227  02CE  3001               	movlw	1
 11228  02CF  07B2               	addwf	___ftadd@f1+2,f
 11229  02D0                     l2324:	
 11230  02D0  1F3A               	btfss	___ftadd@sign,6
 11231  02D1  2AE2               	goto	l2328
 11232  02D2  30FF               	movlw	255
 11233  02D3  06B3               	xorwf	___ftadd@f2,f
 11234  02D4  30FF               	movlw	255
 11235  02D5  06B4               	xorwf	___ftadd@f2+1,f
 11236  02D6  30FF               	movlw	255
 11237  02D7  06B5               	xorwf	___ftadd@f2+2,f
 11238  02D8  3001               	movlw	1
 11239  02D9  07B3               	addwf	___ftadd@f2,f
 11240  02DA  3000               	movlw	0
 11241  02DB  1803               	skipnc
 11242  02DC  3001               	movlw	1
 11243  02DD  07B4               	addwf	___ftadd@f2+1,f
 11244  02DE  3000               	movlw	0
 11245  02DF  1803               	skipnc
 11246  02E0  3001               	movlw	1
 11247  02E1  07B5               	addwf	___ftadd@f2+2,f
 11248  02E2                     l2328:	
 11249  02E2  01BA               	clrf	___ftadd@sign
 11250  02E3  0830               	movf	___ftadd@f1,w
 11251  02E4  07B3               	addwf	___ftadd@f2,f
 11252  02E5  0831               	movf	___ftadd@f1+1,w
 11253  02E6  3DB4               	addwfc	___ftadd@f2+1,f
 11254  02E7  0832               	movf	___ftadd@f1+2,w
 11255  02E8  3DB5               	addwfc	___ftadd@f2+2,f
 11256  02E9  1FB5               	btfss	___ftadd@f2+2,7
 11257  02EA  2AFD               	goto	l2338
 11258  02EB  30FF               	movlw	255
 11259  02EC  06B3               	xorwf	___ftadd@f2,f
 11260  02ED  30FF               	movlw	255
 11261  02EE  06B4               	xorwf	___ftadd@f2+1,f
 11262  02EF  30FF               	movlw	255
 11263  02F0  06B5               	xorwf	___ftadd@f2+2,f
 11264  02F1  3001               	movlw	1
 11265  02F2  07B3               	addwf	___ftadd@f2,f
 11266  02F3  3000               	movlw	0
 11267  02F4  1803               	skipnc
 11268  02F5  3001               	movlw	1
 11269  02F6  07B4               	addwf	___ftadd@f2+1,f
 11270  02F7  3000               	movlw	0
 11271  02F8  1803               	skipnc
 11272  02F9  3001               	movlw	1
 11273  02FA  07B5               	addwf	___ftadd@f2+2,f
 11274  02FB  01BA               	clrf	___ftadd@sign
 11275  02FC  0ABA               	incf	___ftadd@sign,f
 11276  02FD                     l2338:	
 11277  02FD  0833               	movf	___ftadd@f2,w
 11278  02FE  00F0               	movwf	___ftpack@arg
 11279  02FF  0834               	movf	___ftadd@f2+1,w
 11280  0300  00F1               	movwf	___ftpack@arg+1
 11281  0301  0835               	movf	___ftadd@f2+2,w
 11282  0302  00F2               	movwf	___ftpack@arg+2
 11283  0303  083C               	movf	___ftadd@exp1,w
 11284  0304  00B6               	movwf	??___ftadd
 11285  0305  0836               	movf	??___ftadd,w
 11286  0306  00F3               	movwf	___ftpack@exp
 11287  0307  083A               	movf	___ftadd@sign,w
 11288  0308  00B7               	movwf	??___ftadd+1
 11289  0309  0837               	movf	??___ftadd+1,w
 11290  030A  00F4               	movwf	___ftpack@sign
 11291  030B  318C  240B         	fcall	___ftpack
 11292  030D  0870               	movf	?___ftpack,w
 11293  030E  0020               	movlb	0	; select bank0
 11294  030F  00B0               	movwf	?___ftadd
 11295  0310  0871               	movf	?___ftpack+1,w
 11296  0311  00B1               	movwf	?___ftadd+1
 11297  0312  0872               	movf	?___ftpack+2,w
 11298  0313  00B2               	movwf	?___ftadd+2
 11299  0314  0008               	return
 11300  0315                     __end_of___ftadd:	
 11301                           
 11302                           	psect	text39
 11303  0925                     __ptext39:	
 11304 ;; *************** function ___awtoft *****************
 11305 ;; Defined at:
 11306 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  c               2    8[COMMON] int 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  sign            1   13[COMMON] unsigned char 
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  3    8[COMMON] float 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2, status,0, pclath, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11320 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;Total ram usage:        6 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    1
 11327 ;; This function calls:
 11328 ;;		___ftpack
 11329 ;; This function is called by:
 11330 ;;		_PID_Calculate
 11331 ;;		_log
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           
 11336                           ;psect for function ___awtoft
 11337  0925                     ___awtoft:	
 11338                           
 11339                           ;incstack = 0
 11340                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11341  0925  01FD               	clrf	___awtoft@sign
 11342  0926  1FF9               	btfss	___awtoft@c+1,7
 11343  0927  292F               	goto	l2622
 11344  0928  09F8               	comf	___awtoft@c,f
 11345  0929  09F9               	comf	___awtoft@c+1,f
 11346  092A  0AF8               	incf	___awtoft@c,f
 11347  092B  1903               	skipnz
 11348  092C  0AF9               	incf	___awtoft@c+1,f
 11349  092D  01FD               	clrf	___awtoft@sign
 11350  092E  0AFD               	incf	___awtoft@sign,f
 11351  092F                     l2622:	
 11352  092F  0878               	movf	___awtoft@c,w
 11353  0930  00F0               	movwf	___ftpack@arg
 11354  0931  0879               	movf	___awtoft@c+1,w
 11355  0932  00F1               	movwf	___ftpack@arg+1
 11356  0933  01F2               	clrf	___ftpack@arg+2
 11357  0934  308E               	movlw	142
 11358  0935  00FB               	movwf	??___awtoft
 11359  0936  087B               	movf	??___awtoft,w
 11360  0937  00F3               	movwf	___ftpack@exp
 11361  0938  087D               	movf	___awtoft@sign,w
 11362  0939  00FC               	movwf	??___awtoft+1
 11363  093A  087C               	movf	??___awtoft+1,w
 11364  093B  00F4               	movwf	___ftpack@sign
 11365  093C  318C  240B         	fcall	___ftpack
 11366  093E  0870               	movf	?___ftpack,w
 11367  093F  00F8               	movwf	?___awtoft
 11368  0940  0871               	movf	?___ftpack+1,w
 11369  0941  00F9               	movwf	?___awtoft+1
 11370  0942  0872               	movf	?___ftpack+2,w
 11371  0943  00FA               	movwf	?___awtoft+2
 11372  0944  0008               	return
 11373  0945                     __end_of___awtoft:	
 11374                           
 11375                           	psect	text40
 11376  0C0B                     __ptext40:	
 11377 ;; *************** function ___ftpack *****************
 11378 ;; Defined at:
 11379 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  arg             3    0[COMMON] unsigned um
 11382 ;;  exp             1    3[COMMON] unsigned char 
 11383 ;;  sign            1    4[COMMON] unsigned char 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  3    0[COMMON] float 
 11388 ;; Registers used:
 11389 ;;		wreg, status,2, status,0
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11395 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;Total ram usage:        8 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		___awtoft
 11405 ;;		___ftadd
 11406 ;;		___ftdiv
 11407 ;;		___ftmul
 11408 ;;		___lbtoft
 11409 ;;		___lwtoft
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           
 11414                           ;psect for function ___ftpack
 11415  0C0B                     ___ftpack:	
 11416                           
 11417                           ;incstack = 0
 11418                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11419  0C0B  0873               	movf	___ftpack@exp,w
 11420  0C0C  1903               	btfsc	3,2
 11421  0C0D  2C13               	goto	l2068
 11422  0C0E  0872               	movf	___ftpack@arg+2,w
 11423  0C0F  0471               	iorwf	___ftpack@arg+1,w
 11424  0C10  0470               	iorwf	___ftpack@arg,w
 11425  0C11  1D03               	skipz
 11426  0C12  2C24               	goto	l2074
 11427  0C13                     l2068:	
 11428  0C13  3000               	movlw	0
 11429  0C14  00F0               	movwf	?___ftpack
 11430  0C15  3000               	movlw	0
 11431  0C16  00F1               	movwf	?___ftpack+1
 11432  0C17  3000               	movlw	0
 11433  0C18  00F2               	movwf	?___ftpack+2
 11434  0C19  0008               	return
 11435  0C1A                     l2072:	
 11436  0C1A  3001               	movlw	1
 11437  0C1B  00F5               	movwf	??___ftpack
 11438  0C1C  0875               	movf	??___ftpack,w
 11439  0C1D  07F3               	addwf	___ftpack@exp,f
 11440  0C1E  3001               	movlw	1
 11441  0C1F                     u1715:	
 11442  0C1F  36F2               	lsrf	___ftpack@arg+2,f
 11443  0C20  0CF1               	rrf	___ftpack@arg+1,f
 11444  0C21  0CF0               	rrf	___ftpack@arg,f
 11445  0C22  0B89               	decfsz	9,f
 11446  0C23  2C1F               	goto	u1715
 11447  0C24                     l2074:	
 11448  0C24  30FE               	movlw	254
 11449  0C25  0572               	andwf	___ftpack@arg+2,w
 11450  0C26  1903               	btfsc	3,2
 11451  0C27  2C3D               	goto	l639
 11452  0C28  2C1A               	goto	l2072
 11453  0C29                     l2076:	
 11454  0C29  3001               	movlw	1
 11455  0C2A  00F5               	movwf	??___ftpack
 11456  0C2B  0875               	movf	??___ftpack,w
 11457  0C2C  07F3               	addwf	___ftpack@exp,f
 11458  0C2D  3001               	movlw	1
 11459  0C2E  07F0               	addwf	___ftpack@arg,f
 11460  0C2F  3000               	movlw	0
 11461  0C30  1803               	skipnc
 11462  0C31  3001               	movlw	1
 11463  0C32  07F1               	addwf	___ftpack@arg+1,f
 11464  0C33  3000               	movlw	0
 11465  0C34  1803               	skipnc
 11466  0C35  3001               	movlw	1
 11467  0C36  07F2               	addwf	___ftpack@arg+2,f
 11468  0C37  3001               	movlw	1
 11469  0C38                     u1735:	
 11470  0C38  36F2               	lsrf	___ftpack@arg+2,f
 11471  0C39  0CF1               	rrf	___ftpack@arg+1,f
 11472  0C3A  0CF0               	rrf	___ftpack@arg,f
 11473  0C3B  0B89               	decfsz	9,f
 11474  0C3C  2C38               	goto	u1735
 11475  0C3D                     l639:	
 11476  0C3D  30FF               	movlw	255
 11477  0C3E  0572               	andwf	___ftpack@arg+2,w
 11478  0C3F  1903               	btfsc	3,2
 11479  0C40  2C4A               	goto	l2084
 11480  0C41  2C29               	goto	l2076
 11481  0C42                     l2082:	
 11482  0C42  3001               	movlw	1
 11483  0C43  02F3               	subwf	___ftpack@exp,f
 11484  0C44  3001               	movlw	1
 11485  0C45                     u1755:	
 11486  0C45  35F0               	lslf	___ftpack@arg,f
 11487  0C46  0DF1               	rlf	___ftpack@arg+1,f
 11488  0C47  0DF2               	rlf	___ftpack@arg+2,f
 11489  0C48  0B89               	decfsz	9,f
 11490  0C49  2C45               	goto	u1755
 11491  0C4A                     l2084:	
 11492  0C4A  1BF1               	btfsc	___ftpack@arg+1,7
 11493  0C4B  2C50               	goto	l646
 11494  0C4C  3002               	movlw	2
 11495  0C4D  0273               	subwf	___ftpack@exp,w
 11496  0C4E  1803               	skipnc
 11497  0C4F  2C42               	goto	l2082
 11498  0C50                     l646:	
 11499  0C50  1873               	btfsc	___ftpack@exp,0
 11500  0C51  2C58               	goto	l647
 11501  0C52  30FF               	movlw	255
 11502  0C53  05F0               	andwf	___ftpack@arg,f
 11503  0C54  307F               	movlw	127
 11504  0C55  05F1               	andwf	___ftpack@arg+1,f
 11505  0C56  30FF               	movlw	255
 11506  0C57  05F2               	andwf	___ftpack@arg+2,f
 11507  0C58                     l647:	
 11508  0C58  1003               	clrc
 11509  0C59  0CF3               	rrf	___ftpack@exp,f
 11510  0C5A  0873               	movf	___ftpack@exp,w
 11511  0C5B  00F5               	movwf	??___ftpack
 11512  0C5C  01F6               	clrf	??___ftpack+1
 11513  0C5D  01F7               	clrf	??___ftpack+2
 11514  0C5E  3010               	movlw	16
 11515  0C5F                     u1795:	
 11516  0C5F  35F5               	lslf	??___ftpack,f
 11517  0C60  0DF6               	rlf	??___ftpack+1,f
 11518  0C61  0DF7               	rlf	??___ftpack+2,f
 11519  0C62  0B89               	decfsz	9,f
 11520  0C63  2C5F               	goto	u1795
 11521  0C64  0875               	movf	??___ftpack,w
 11522  0C65  04F0               	iorwf	___ftpack@arg,f
 11523  0C66  0876               	movf	??___ftpack+1,w
 11524  0C67  04F1               	iorwf	___ftpack@arg+1,f
 11525  0C68  0877               	movf	??___ftpack+2,w
 11526  0C69  04F2               	iorwf	___ftpack@arg+2,f
 11527  0C6A  0874               	movf	___ftpack@sign,w
 11528  0C6B  1903               	btfsc	3,2
 11529  0C6C  0008               	return
 11530  0C6D  17F2               	bsf	___ftpack@arg+2,7
 11531  0C6E  0008               	return
 11532  0C6F                     __end_of___ftpack:	
 11533                           
 11534                           	psect	text41
 11535  0808                     __ptext41:	
 11536 ;; *************** function _ADCC_GetSingleConversion *****************
 11537 ;; Defined at:
 11538 ;;		line 52 in file "adcc.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  channel         1    wreg     enum E13559
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  channel         1    3[COMMON] enum E13559
 11543 ;; Return value:  Size  Location     Type
 11544 ;;                  2    0[COMMON] unsigned int 
 11545 ;; Registers used:
 11546 ;;		wreg
 11547 ;; Tracked objects:
 11548 ;;		On entry : 0/0
 11549 ;;		On exit  : 0/0
 11550 ;;		Unchanged: 0/0
 11551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;Total ram usage:        4 bytes
 11557 ;; Hardware stack levels used:    1
 11558 ;; This function calls:
 11559 ;;		Nothing
 11560 ;; This function is called by:
 11561 ;;		_main
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           
 11566                           ;psect for function _ADCC_GetSingleConversion
 11567  0808                     _ADCC_GetSingleConversion:	
 11568                           
 11569                           ;incstack = 0
 11570                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11571                           ;ADCC_GetSingleConversion@channel stored from wreg
 11572  0808  00F3               	movwf	ADCC_GetSingleConversion@channel
 11573                           
 11574                           ;adcc.c: 55: ADPCH = channel;
 11575  0809  0873               	movf	ADCC_GetSingleConversion@channel,w
 11576  080A  0021               	movlb	1	; select bank1
 11577  080B  009E               	movwf	30	;volatile
 11578                           
 11579                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11580  080C  1793               	bsf	19,7	;volatile
 11581                           
 11582                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11583  080D  1313               	bcf	19,6	;volatile
 11584                           
 11585                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11586  080E  1413               	bsf	19,0	;volatile
 11587  080F                     l224:	
 11588                           ;adcc.c: 68: {
 11589                           
 11590                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11591                           
 11592  080F  1813               	btfsc	19,0	;volatile
 11593  0810  280F               	goto	l224
 11594                           
 11595                           ;adcc.c: 69: }
 11596                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11597  0811  080D               	movf	13,w	;volatile
 11598  0812  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11599  0813  080C               	movf	12,w	;volatile
 11600  0814  00F0               	movwf	?_ADCC_GetSingleConversion
 11601  0815  0008               	return
 11602  0816                     __end_of_ADCC_GetSingleConversion:	
 11603  007E                     btemp	set	126	;btemp
 11604  007E                     wtemp	set	126
 11605  007E                     wtemp0	set	126
 11606  0080                     wtemp1	set	128
 11607  0082                     wtemp2	set	130
 11608  0084                     wtemp3	set	132
 11609  0086                     wtemp4	set	134
 11610  0088                     wtemp5	set	136
 11611  007F                     wtemp6	set	127
 11612  007E                     ttemp	set	126
 11613  007E                     ttemp0	set	126
 11614  0081                     ttemp1	set	129
 11615  0084                     ttemp2	set	132
 11616  0087                     ttemp3	set	135
 11617  007F                     ttemp4	set	127
 11618  007E                     ltemp	set	126
 11619  007E                     ltemp0	set	126
 11620  0082                     ltemp1	set	130
 11621  0086                     ltemp2	set	134
 11622  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     36      70
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   67756
                                              0 BANK1     36    36      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             61 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       23    18      5   10734
                                             38 BANK0     23    18      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     244
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Sep 11 16:48:05 2017

                                _x 006F                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l111 0880  
                              l113 0885                                l107 0875  
                              l109 087B                                l224 080F  
                              l283 03CA                                l284 03F9  
                              l285 048F                                l533 0CFB  
                              l730 0DD9                                l389 0072  
                              l646 0C50                                l670 02BE  
                              l478 08F4                                l647 0C58  
                              l639 0C3D                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0E9C  
                     ___awmod@sign 0076                    _TMR2_Initialize 0825  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0846                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0AD6  
                     ___ftdiv@sign 002F                               l2030 0881  
                             l2022 0877                               l2110 0B6F  
                             l2120 0B77                               l2104 0B64  
                             l2026 087C                               l3002 0A1E  
                             l2122 0B83                               l2300 0277  
                             l2132 0B9E                               l2220 0177  
                             l3100 0771                               l2310 0299  
                             l2230 017E                               l2206 08D4  
                             l2072 0C1A                               l2320 02BA  
                             l2312 029D                               l2136 0BA6  
                             l2128 0B95                               l2160 0B2C  
                             l2152 0B26                               l2240 01BD  
                             l2232 01AB                               l3024 04D4  
                             l2082 0C42                               l2074 0C24  
                             l2306 028A                               l2162 0B38  
                             l2170 0B4D                               l2250 01FE  
                             l2242 01CE                               l3114 07C0  
                             l3106 0780                               l2084 0C4A  
                             l2076 0C29                               l2068 0C13  
                             l2324 02D0                               l2308 0294  
                             l2260 08EE                               l2148 0B1F  
                             l2236 01AF                               l2318 02B0  
                             l2190 0AF6                               l2174 0B55  
                             l2166 0B44                               l2254 020B  
                             l2238 01B4                               l3070 06EA  
                             l3038 055D                               l2328 02E2  
                             l2248 01D2                               l2338 02FD  
                             l2282 024E                               l2370 0FBC  
                             l2354 0F79                               l2602 0081  
                             l2348 0F63                               l2612 0091  
                             l2604 0082                               l2622 092F  
                             l2278 0247                               l2630 0A75  
                             l2382 0FD8                               l2366 0FB4  
                             l2288 025D                               l2544 0963  
                             l2634 0A8B                               l2378 0FD0  
                             l2538 0952                               l2750 04B7  
                             l2910 0E61                               l2662 0A35  
                             l2558 000D                               l2814 00F8  
                             l2806 009C                               l2680 0C04  
                             l2760 0EBB                               l2592 006D  
                             l2808 00ED                               l2930 090F  
                             l2834 013A                               l2940 0D85  
                             l2862 0D1C                               l2854 0D0C  
                             l2918 0E7A                               l2766 0ECE  
                             l2880 0D63                               l2872 0D4A  
                             l2864 0D2A                               l2960 0DC3  
                             l2890 0E0A                               l2786 00AD  
                             l2876 0D55                               l2972 0DEA  
                             l2966 0DD0                               l2958 0DB5  
                             l2990 09F7                               l2896 0E20  
                             l2968 0DDC                               l2992 0A03  
                             ?_log 0047                               l2998 0A15  
                             STR_1 1025                               STR_2 101B  
                             STR_3 101B                               STR_4 101B  
                             u2015 0AE2                               u2050 0161  
                             u2035 0B01                               u2115 01EC  
                             u3005 0E71                               _LATA 0016  
                             _LATB 0017                               u3015 0E7B  
                             _LATC 0018                               u2305 028B  
                             u3115 0DD1                               u2155 08F5  
                             u2165 08FA                               u2335 029E  
                             u3055 0D8C                               u2505 0FD9  
                             u2530 09ED                               _T2PR 028D  
                             u1715 0C1F                               u2275 0278  
                             u2515 0FDF                               u2435 0F85  
                             u3155 09FA                               u3307 0061  
                             u2365 02B1                               u2445 0F95  
                             u3317 0AB6                               u3085 0DB6  
                             u1735 0C38                               u3407 0CBC  
                             u3327 0AC2                               u3175 0A04  
                             u2465 0FBD                               u3417 0CC9  
                             u3337 0ACE                               u3185 0A0E  
                      main@counter 00B6                               u1755 0C45  
                             u2475 0FC3                               u3427 0CD8  
                             u3347 0C78                               u3195 0A16  
                             u2725 0868                               u1685 09A3  
                             u3437 0CE6                               u3357 0C85  
                             u1845 0B7A                               u3277 00E4  
                             u3447 09AF                               u3367 0C90  
                             u3287 0132                               u3457 09BA  
                             u3377 0C99                               u2905 0D2B  
                             u1865 0B84                               u1945 0B2F  
                             u3297 014C                               u1795 0C5F  
                             u3467 0840                               u3387 0CA2  
                             u2915 0D3F                               u1875 0B8E  
                             u3397 0CAF                               u2925 0D4B  
                             u1885 0B96                               u1965 0B3E  
                             u1975 0B45                               u2885 0D1F  
                             u2975 0E32                               u2985 0E42  
                             u2995 0E62                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B2                        main@seconds 00B4  
                             _main 04BF                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             ltemp 007E                               start 0002  
               ??_LCD_Write_String 0077                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 0156                       ___ftmul@sign 002F  
                     ___fttol@exp1 006A                       ___fttol@lval 0066  
                            ??_log 004A            __end_of_TMR0_Initialize 0825  
                 __end_of_LCD_Init 0CEA                   __end_of_LCD_Port 0887  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 000C                    __end_of___aldiv 0D6C  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0BAB  
                            _ADPRE 009C                    __end_of___ftadd 0315  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0B5A  
                            _ADRPT 010D                    __end_of___ftdiv 0E9C  
                  __end_of___ftneg 17DB                    __end_of___ftmul 1000  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0925  
                  __end_of___fttol 0DF3                              _T2CON 028E  
              main@readTemperature 00B8                              _T2HLT 028F  
                  __end_of___lwdiv 0A23                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 17F3             __end_of_LCD_Set_Cursor 0B15  
                    ___awtoft@sign 007D                              _frexp 0A23  
                            _errno 00D8                      ___ftpack@sign 0074  
                            main@R 00AA                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 0993  
                  __initialization 07C7                        log@exponent 004B  
                     __end_of_main 07C7                   __end_of_Init_PID 0993  
          __end_of_TMR2_Initialize 0834                             ??_main 00A0  
                    ___fttol@sign1 0065                  __end_of_LCD_Clear 0808  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0945  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0C6F  
                 __end_of___lbtoft 08D2                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0859  
                           _PID_Kd 00C9                             _PID_Ki 00CC  
                           _PID_Kp 00CF                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 09BD  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0A5E             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 08EC  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0061                          ??___lwdiv 007A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 1800  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 089F  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00C1                    _InitCustomChars 0945  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                    _pidIntegrated 00D2                  _SYSTEM_Initialize 0A9A  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005D  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK1 17CD                       __pidataBANK2 0887  
              ??_SYSTEM_Initialize 0077                      __end_of_frexp 0A5E  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
             __size_of_readButtons 0087                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0AD6                         __pbssBANK0 006B  
                       __pbssBANK1 00C4                 __size_of_eval_poly 0060  
                        ?_Init_PID 0070                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070             __size_of_PID_Calculate 01AA  
              PID_Calculate@Result 0057                         __pmaintext 04BF  
                          ?___ftge 003D                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 08B8  
       __end_of_PWM6_LoadDutyValue 086F          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 096B  
                          _LCD_Cmd 0834                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                       ??_Init_PID 0070              PID_Calculate@setpoint 0046  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0CEA                            ___cgram 0120  
                  __size_of___ftge 003C                            ___awdiv 0B5A  
                          ___ftadd 021F                            ___awmod 0B15  
                          ___ftdiv 0DF3                            ___ftneg 17D3  
                  __size_of___wmul 001B                            ___ftmul 0F4C  
                          ___ftsub 0907                            ___fttol 0D6C  
                          ___lwdiv 09EF                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0C0B                   ??_LCD_Set_Cursor 0074  
                          __ptext1 0093                            __ptext2 000C  
                          __ptext3 08D2                            __ptext4 0156  
                          __ptext5 0B15                            __ptext6 0B5A  
                          __ptext7 0AD6                            __ptext8 0E9C  
                          __ptext9 0A23                         ??___lwtoft 007B  
                    _PID_Calculate 0315       PID_Calculate@derivativeValue 0051  
            _OSCILLATOR_Initialize 0004                          _T2CONbits 028E  
                     __size_of_log 00B0                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 006E                            _samples 238C  
                        _LCD_Clear 0800                            _presets 00E0  
       __size_of_SYSTEM_Initialize 003C                            clrloop0 17DC  
             end_of_initialization 07FD                            init_ram 17E7  
                          initloop 17E8                     ??_tempSetpoint 0031  
        PID_Calculate@pidPrevError 0054                   ___aldiv@quotient 0022  
          PID_Calculate@errorValue 004B                  LCD_Write_Int@sign 007D  
              tempSetpoint@counter 0034                       __pstringtext 1000  
                 ?_ADCC_Initialize 0070   __end_of_ADCC_GetSingleConversion 0816  
            __CFG_WDTCPS$WDTCPS_31 0000                     ?_PID_Calculate 0046  
               _PID_Calculate$1053 004E                   ?_InitCustomChars 0070  
                       ?_LCD_Clear 0070                   __CFG_FEXTOSC$OFF 0000  
                LCD_Write_String@a 0075                  LCD_Write_String@i 0078  
                 ??_LCD_Write_Char 0071                        ___ftdiv@exp 002E  
                __size_of_LCD_Init 007B                         main@toggle 00BA  
                __size_of_LCD_Port 0018                         main@totals 00BD  
                      ___ftmul@exp 002A                     __end_of___ftge 0A9A  
                   __end_of___wmul 0907                   _LCD_Write_String 08D2  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07C7  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 0F4C  
                       frexp@value 0070           LCD_Write_Int@fieldLength 007B  
                __size_of_Init_PID 0028              __end_of_LCD_Write_Int 021F  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0043  
                         ??___wmul 0074                       _pidMaxOutput 00DA  
                      __pdataBANK1 00E0                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                     _pidMinOutput 006B                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0808  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 0156                 _PWM6_LoadDutyValue 0859  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
                     _pidPrevInput 00D5                ?_PWM6_LoadDutyValue 0070  
                        _main$1054 00AD                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 09BD                 PID_Calculate@error 005A  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 005D  
                         ?___lwdiv 0076                    main@displayTemp 00BB  
             ??_PWM6_LoadDutyValue 0072                          _downCount 006D  
                        _eval_poly 0BAB                __end_of_readButtons 0093  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0C6F  
                   ___wmul@product 0074                           _LCD_Port 086F  
                        clear_ram0 17DB                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 08EC                           _Init_PID 096B  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 000C  
                         ___awtoft 0925                           ___ftpack 0C0B  
                         ___lbtoft 08B8              __size_of_tempSetpoint 00C3  
                         ___lwtoft 0846                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00DC  
                  ___lwdiv@divisor 0076                        _oldSetpoint 00DE  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0BAB                           __ptext11 08EC  
                         __ptext20 0825                           __ptext12 0846  
                         __ptext21 0816                           __ptext13 09EF  
                         __ptext30 0834                           __ptext22 17F3  
                         __ptext14 08B8                           __ptext31 086F  
                         __ptext23 09BD                           __ptext15 0D6C  
                         __ptext40 0C0B                           __ptext32 089F  
                         __ptext24 0004                           __ptext16 0907  
                         __ptext41 0808                           __ptext33 0859  
                         __ptext25 0C6F                           __ptext17 0DF3  
                         __ptext34 0315                           __ptext26 0800  
                         __ptext18 0CEA                           __ptext35 17D3  
                         __ptext27 096B                           __ptext19 0A9A  
                         __ptext36 0F4C                           __ptext28 0945  
                         __ptext37 0A5E                           __ptext29 0993  
                         __ptext38 021F                           __ptext39 0925  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F13694 00C4                  ??_PWM6_Initialize 0070  
                    __size_of_main 0308               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 0093         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 00E5        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 04BF  
                  _TMR0_Initialize 0816                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 09EF                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00B0                        _toggleCount 00DF  
                ??_InitCustomChars 0075  
