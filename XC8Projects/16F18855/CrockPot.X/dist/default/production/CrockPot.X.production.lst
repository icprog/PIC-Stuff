

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 08 00:34:57 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5BC,52
    59                           	dabs	1,0x238C,0,_samples
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  020F                     	;# 
   170  020F                     	;# 
   171  0210                     	;# 
   172  0210                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0218                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028D                     	;# 
   199  028E                     	;# 
   200  028F                     	;# 
   201  0290                     	;# 
   202  0290                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0296                     	;# 
   212  0297                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031C                     	;# 
   244  031D                     	;# 
   245  031E                     	;# 
   246  031F                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0390                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  040C                     	;# 
   254  040D                     	;# 
   255  040E                     	;# 
   256  040F                     	;# 
   257  0410                     	;# 
   258  0411                     	;# 
   259  0416                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041A                     	;# 
   267  041B                     	;# 
   268  041C                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  048C                     	;# 
   274  048C                     	;# 
   275  048D                     	;# 
   276  048E                     	;# 
   277  048F                     	;# 
   278  048F                     	;# 
   279  0490                     	;# 
   280  0491                     	;# 
   281  0492                     	;# 
   282  0492                     	;# 
   283  0493                     	;# 
   284  0494                     	;# 
   285  0495                     	;# 
   286  0495                     	;# 
   287  0496                     	;# 
   288  0497                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  050C                     	;# 
   296  050C                     	;# 
   297  050D                     	;# 
   298  050E                     	;# 
   299  050F                     	;# 
   300  050F                     	;# 
   301  0510                     	;# 
   302  0511                     	;# 
   303  0512                     	;# 
   304  0512                     	;# 
   305  0513                     	;# 
   306  0514                     	;# 
   307  0515                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  051B                     	;# 
   315  051C                     	;# 
   316  051D                     	;# 
   317  058C                     	;# 
   318  058C                     	;# 
   319  058D                     	;# 
   320  058E                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0593                     	;# 
   327  060C                     	;# 
   328  060D                     	;# 
   329  060E                     	;# 
   330  060F                     	;# 
   331  0610                     	;# 
   332  0611                     	;# 
   333  0612                     	;# 
   334  0613                     	;# 
   335  0614                     	;# 
   336  0616                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  061A                     	;# 
   341  061B                     	;# 
   342  061C                     	;# 
   343  061D                     	;# 
   344  061E                     	;# 
   345  068C                     	;# 
   346  068D                     	;# 
   347  068E                     	;# 
   348  068F                     	;# 
   349  0690                     	;# 
   350  0691                     	;# 
   351  0692                     	;# 
   352  0693                     	;# 
   353  0694                     	;# 
   354  070C                     	;# 
   355  070D                     	;# 
   356  070E                     	;# 
   357  070F                     	;# 
   358  0710                     	;# 
   359  0711                     	;# 
   360  0712                     	;# 
   361  0713                     	;# 
   362  0714                     	;# 
   363  0716                     	;# 
   364  0717                     	;# 
   365  0718                     	;# 
   366  0719                     	;# 
   367  071A                     	;# 
   368  071B                     	;# 
   369  071C                     	;# 
   370  071D                     	;# 
   371  071E                     	;# 
   372  0796                     	;# 
   373  0797                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  079B                     	;# 
   378  080C                     	;# 
   379  080D                     	;# 
   380  080E                     	;# 
   381  080F                     	;# 
   382  0810                     	;# 
   383  0811                     	;# 
   384  0812                     	;# 
   385  0813                     	;# 
   386  0814                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081D                     	;# 
   391  081E                     	;# 
   392  081F                     	;# 
   393  088C                     	;# 
   394  088D                     	;# 
   395  088E                     	;# 
   396  088F                     	;# 
   397  0890                     	;# 
   398  0891                     	;# 
   399  0892                     	;# 
   400  0893                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  089A                     	;# 
   407  089B                     	;# 
   408  090C                     	;# 
   409  090E                     	;# 
   410  090F                     	;# 
   411  091F                     	;# 
   412  091F                     	;# 
   413  098F                     	;# 
   414  098F                     	;# 
   415  0990                     	;# 
   416  0991                     	;# 
   417  0992                     	;# 
   418  0993                     	;# 
   419  0994                     	;# 
   420  0995                     	;# 
   421  0996                     	;# 
   422  0997                     	;# 
   423  0E0F                     	;# 
   424  0E10                     	;# 
   425  0E11                     	;# 
   426  0E12                     	;# 
   427  0E13                     	;# 
   428  0E14                     	;# 
   429  0E15                     	;# 
   430  0E16                     	;# 
   431  0E17                     	;# 
   432  0E18                     	;# 
   433  0E19                     	;# 
   434  0E1A                     	;# 
   435  0E1B                     	;# 
   436  0E1C                     	;# 
   437  0E1D                     	;# 
   438  0E1E                     	;# 
   439  0E1F                     	;# 
   440  0E20                     	;# 
   441  0E21                     	;# 
   442  0E22                     	;# 
   443  0E23                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E26                     	;# 
   447  0E27                     	;# 
   448  0E28                     	;# 
   449  0E29                     	;# 
   450  0E2A                     	;# 
   451  0E2B                     	;# 
   452  0E2C                     	;# 
   453  0E2D                     	;# 
   454  0E2E                     	;# 
   455  0E2F                     	;# 
   456  0E30                     	;# 
   457  0E31                     	;# 
   458  0E32                     	;# 
   459  0E33                     	;# 
   460  0E34                     	;# 
   461  0E35                     	;# 
   462  0E36                     	;# 
   463  0E37                     	;# 
   464  0E8F                     	;# 
   465  0E90                     	;# 
   466  0E91                     	;# 
   467  0E92                     	;# 
   468  0E93                     	;# 
   469  0E94                     	;# 
   470  0E95                     	;# 
   471  0E96                     	;# 
   472  0E97                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0EA1                     	;# 
   477  0EA2                     	;# 
   478  0EA3                     	;# 
   479  0EA4                     	;# 
   480  0EA5                     	;# 
   481  0EA9                     	;# 
   482  0EAA                     	;# 
   483  0EAB                     	;# 
   484  0EAC                     	;# 
   485  0EB1                     	;# 
   486  0EB2                     	;# 
   487  0EB3                     	;# 
   488  0EB8                     	;# 
   489  0EB9                     	;# 
   490  0EBA                     	;# 
   491  0EBB                     	;# 
   492  0EBC                     	;# 
   493  0EBD                     	;# 
   494  0EBE                     	;# 
   495  0EC3                     	;# 
   496  0EC5                     	;# 
   497  0EC6                     	;# 
   498  0EC7                     	;# 
   499  0EC8                     	;# 
   500  0EC9                     	;# 
   501  0ECA                     	;# 
   502  0ECB                     	;# 
   503  0ECC                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F38                     	;# 
   529  0F39                     	;# 
   530  0F3A                     	;# 
   531  0F3B                     	;# 
   532  0F3C                     	;# 
   533  0F3D                     	;# 
   534  0F3E                     	;# 
   535  0F3F                     	;# 
   536  0F40                     	;# 
   537  0F41                     	;# 
   538  0F43                     	;# 
   539  0F44                     	;# 
   540  0F45                     	;# 
   541  0F46                     	;# 
   542  0F47                     	;# 
   543  0F48                     	;# 
   544  0F49                     	;# 
   545  0F4A                     	;# 
   546  0F4B                     	;# 
   547  0F4C                     	;# 
   548  0F4E                     	;# 
   549  0F4F                     	;# 
   550  0F50                     	;# 
   551  0F51                     	;# 
   552  0F52                     	;# 
   553  0F53                     	;# 
   554  0F54                     	;# 
   555  0F55                     	;# 
   556  0F56                     	;# 
   557  0F57                     	;# 
   558  0F65                     	;# 
   559  0F68                     	;# 
   560  0F69                     	;# 
   561  0F6A                     	;# 
   562  0F6B                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  001C                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001D                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010E                     	;# 
   627  010F                     	;# 
   628  0110                     	;# 
   629  0110                     	;# 
   630  0111                     	;# 
   631  0112                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  018E                     	;# 
   668  018F                     	;# 
   669  0190                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0196                     	;# 
   673  0197                     	;# 
   674  0198                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0218                     	;# 
   698  0219                     	;# 
   699  021A                     	;# 
   700  021B                     	;# 
   701  021B                     	;# 
   702  021C                     	;# 
   703  021C                     	;# 
   704  021D                     	;# 
   705  021D                     	;# 
   706  021E                     	;# 
   707  021F                     	;# 
   708  028C                     	;# 
   709  028C                     	;# 
   710  028D                     	;# 
   711  028D                     	;# 
   712  028E                     	;# 
   713  028F                     	;# 
   714  0290                     	;# 
   715  0290                     	;# 
   716  0291                     	;# 
   717  0292                     	;# 
   718  0292                     	;# 
   719  0293                     	;# 
   720  0293                     	;# 
   721  0294                     	;# 
   722  0295                     	;# 
   723  0296                     	;# 
   724  0296                     	;# 
   725  0297                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  030C                     	;# 
   736  030C                     	;# 
   737  030D                     	;# 
   738  030E                     	;# 
   739  030F                     	;# 
   740  0310                     	;# 
   741  0310                     	;# 
   742  0311                     	;# 
   743  0312                     	;# 
   744  0313                     	;# 
   745  0314                     	;# 
   746  0314                     	;# 
   747  0315                     	;# 
   748  0316                     	;# 
   749  0317                     	;# 
   750  0318                     	;# 
   751  0318                     	;# 
   752  0319                     	;# 
   753  031A                     	;# 
   754  031B                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  031F                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0390                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  040C                     	;# 
   767  040D                     	;# 
   768  040E                     	;# 
   769  040F                     	;# 
   770  0410                     	;# 
   771  0411                     	;# 
   772  0416                     	;# 
   773  0416                     	;# 
   774  0417                     	;# 
   775  0418                     	;# 
   776  0418                     	;# 
   777  0419                     	;# 
   778  041A                     	;# 
   779  041A                     	;# 
   780  041B                     	;# 
   781  041C                     	;# 
   782  041C                     	;# 
   783  041D                     	;# 
   784  041E                     	;# 
   785  041F                     	;# 
   786  048C                     	;# 
   787  048C                     	;# 
   788  048D                     	;# 
   789  048E                     	;# 
   790  048F                     	;# 
   791  048F                     	;# 
   792  0490                     	;# 
   793  0491                     	;# 
   794  0492                     	;# 
   795  0492                     	;# 
   796  0493                     	;# 
   797  0494                     	;# 
   798  0495                     	;# 
   799  0495                     	;# 
   800  0496                     	;# 
   801  0497                     	;# 
   802  0498                     	;# 
   803  0499                     	;# 
   804  049A                     	;# 
   805  049B                     	;# 
   806  049C                     	;# 
   807  049D                     	;# 
   808  050C                     	;# 
   809  050C                     	;# 
   810  050D                     	;# 
   811  050E                     	;# 
   812  050F                     	;# 
   813  050F                     	;# 
   814  0510                     	;# 
   815  0511                     	;# 
   816  0512                     	;# 
   817  0512                     	;# 
   818  0513                     	;# 
   819  0514                     	;# 
   820  0515                     	;# 
   821  0515                     	;# 
   822  0516                     	;# 
   823  0517                     	;# 
   824  0518                     	;# 
   825  0519                     	;# 
   826  051A                     	;# 
   827  051B                     	;# 
   828  051C                     	;# 
   829  051D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060E                     	;# 
   843  060F                     	;# 
   844  0610                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0614                     	;# 
   849  0616                     	;# 
   850  0617                     	;# 
   851  0618                     	;# 
   852  0619                     	;# 
   853  061A                     	;# 
   854  061B                     	;# 
   855  061C                     	;# 
   856  061D                     	;# 
   857  061E                     	;# 
   858  068C                     	;# 
   859  068D                     	;# 
   860  068E                     	;# 
   861  068F                     	;# 
   862  0690                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0714                     	;# 
   876  0716                     	;# 
   877  0717                     	;# 
   878  0718                     	;# 
   879  0719                     	;# 
   880  071A                     	;# 
   881  071B                     	;# 
   882  071C                     	;# 
   883  071D                     	;# 
   884  071E                     	;# 
   885  0796                     	;# 
   886  0797                     	;# 
   887  0798                     	;# 
   888  0799                     	;# 
   889  079A                     	;# 
   890  079B                     	;# 
   891  080C                     	;# 
   892  080D                     	;# 
   893  080E                     	;# 
   894  080F                     	;# 
   895  0810                     	;# 
   896  0811                     	;# 
   897  0812                     	;# 
   898  0813                     	;# 
   899  0814                     	;# 
   900  081A                     	;# 
   901  081B                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  0897                     	;# 
   917  0898                     	;# 
   918  0899                     	;# 
   919  089A                     	;# 
   920  089B                     	;# 
   921  090C                     	;# 
   922  090E                     	;# 
   923  090F                     	;# 
   924  091F                     	;# 
   925  091F                     	;# 
   926  098F                     	;# 
   927  098F                     	;# 
   928  0990                     	;# 
   929  0991                     	;# 
   930  0992                     	;# 
   931  0993                     	;# 
   932  0994                     	;# 
   933  0995                     	;# 
   934  0996                     	;# 
   935  0997                     	;# 
   936  0E0F                     	;# 
   937  0E10                     	;# 
   938  0E11                     	;# 
   939  0E12                     	;# 
   940  0E13                     	;# 
   941  0E14                     	;# 
   942  0E15                     	;# 
   943  0E16                     	;# 
   944  0E17                     	;# 
   945  0E18                     	;# 
   946  0E19                     	;# 
   947  0E1A                     	;# 
   948  0E1B                     	;# 
   949  0E1C                     	;# 
   950  0E1D                     	;# 
   951  0E1E                     	;# 
   952  0E1F                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E23                     	;# 
   957  0E24                     	;# 
   958  0E25                     	;# 
   959  0E26                     	;# 
   960  0E27                     	;# 
   961  0E28                     	;# 
   962  0E29                     	;# 
   963  0E2A                     	;# 
   964  0E2B                     	;# 
   965  0E2C                     	;# 
   966  0E2D                     	;# 
   967  0E2E                     	;# 
   968  0E2F                     	;# 
   969  0E30                     	;# 
   970  0E31                     	;# 
   971  0E32                     	;# 
   972  0E33                     	;# 
   973  0E34                     	;# 
   974  0E35                     	;# 
   975  0E36                     	;# 
   976  0E37                     	;# 
   977  0E8F                     	;# 
   978  0E90                     	;# 
   979  0E91                     	;# 
   980  0E92                     	;# 
   981  0E93                     	;# 
   982  0E94                     	;# 
   983  0E95                     	;# 
   984  0E96                     	;# 
   985  0E97                     	;# 
   986  0E9C                     	;# 
   987  0E9D                     	;# 
   988  0E9E                     	;# 
   989  0EA1                     	;# 
   990  0EA2                     	;# 
   991  0EA3                     	;# 
   992  0EA4                     	;# 
   993  0EA5                     	;# 
   994  0EA9                     	;# 
   995  0EAA                     	;# 
   996  0EAB                     	;# 
   997  0EAC                     	;# 
   998  0EB1                     	;# 
   999  0EB2                     	;# 
  1000  0EB3                     	;# 
  1001  0EB8                     	;# 
  1002  0EB9                     	;# 
  1003  0EBA                     	;# 
  1004  0EBB                     	;# 
  1005  0EBC                     	;# 
  1006  0EBD                     	;# 
  1007  0EBE                     	;# 
  1008  0EC3                     	;# 
  1009  0EC5                     	;# 
  1010  0EC6                     	;# 
  1011  0EC7                     	;# 
  1012  0EC8                     	;# 
  1013  0EC9                     	;# 
  1014  0ECA                     	;# 
  1015  0ECB                     	;# 
  1016  0ECC                     	;# 
  1017  0F10                     	;# 
  1018  0F11                     	;# 
  1019  0F12                     	;# 
  1020  0F13                     	;# 
  1021  0F14                     	;# 
  1022  0F15                     	;# 
  1023  0F16                     	;# 
  1024  0F17                     	;# 
  1025  0F18                     	;# 
  1026  0F19                     	;# 
  1027  0F1A                     	;# 
  1028  0F1B                     	;# 
  1029  0F1C                     	;# 
  1030  0F1D                     	;# 
  1031  0F1E                     	;# 
  1032  0F1F                     	;# 
  1033  0F20                     	;# 
  1034  0F21                     	;# 
  1035  0F22                     	;# 
  1036  0F23                     	;# 
  1037  0F24                     	;# 
  1038  0F25                     	;# 
  1039  0F26                     	;# 
  1040  0F27                     	;# 
  1041  0F38                     	;# 
  1042  0F39                     	;# 
  1043  0F3A                     	;# 
  1044  0F3B                     	;# 
  1045  0F3C                     	;# 
  1046  0F3D                     	;# 
  1047  0F3E                     	;# 
  1048  0F3F                     	;# 
  1049  0F40                     	;# 
  1050  0F41                     	;# 
  1051  0F43                     	;# 
  1052  0F44                     	;# 
  1053  0F45                     	;# 
  1054  0F46                     	;# 
  1055  0F47                     	;# 
  1056  0F48                     	;# 
  1057  0F49                     	;# 
  1058  0F4A                     	;# 
  1059  0F4B                     	;# 
  1060  0F4C                     	;# 
  1061  0F4E                     	;# 
  1062  0F4F                     	;# 
  1063  0F50                     	;# 
  1064  0F51                     	;# 
  1065  0F52                     	;# 
  1066  0F53                     	;# 
  1067  0F54                     	;# 
  1068  0F55                     	;# 
  1069  0F56                     	;# 
  1070  0F57                     	;# 
  1071  0F65                     	;# 
  1072  0F68                     	;# 
  1073  0F69                     	;# 
  1074  0F6A                     	;# 
  1075  0F6B                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0010                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0016                     	;# 
  1107  0017                     	;# 
  1108  0018                     	;# 
  1109  001C                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001D                     	;# 
  1113  001E                     	;# 
  1114  001F                     	;# 
  1115  008C                     	;# 
  1116  008C                     	;# 
  1117  008D                     	;# 
  1118  008E                     	;# 
  1119  008E                     	;# 
  1120  008F                     	;# 
  1121  0090                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0093                     	;# 
  1125  0094                     	;# 
  1126  0095                     	;# 
  1127  0096                     	;# 
  1128  0097                     	;# 
  1129  0098                     	;# 
  1130  0099                     	;# 
  1131  009A                     	;# 
  1132  009B                     	;# 
  1133  009C                     	;# 
  1134  009D                     	;# 
  1135  009E                     	;# 
  1136  010C                     	;# 
  1137  010D                     	;# 
  1138  010E                     	;# 
  1139  010E                     	;# 
  1140  010F                     	;# 
  1141  0110                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0192                     	;# 
  1185  0196                     	;# 
  1186  0197                     	;# 
  1187  0198                     	;# 
  1188  0199                     	;# 
  1189  019A                     	;# 
  1190  019B                     	;# 
  1191  019C                     	;# 
  1192  020C                     	;# 
  1193  020D                     	;# 
  1194  020E                     	;# 
  1195  020F                     	;# 
  1196  020F                     	;# 
  1197  0210                     	;# 
  1198  0210                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0216                     	;# 
  1207  0216                     	;# 
  1208  0217                     	;# 
  1209  0217                     	;# 
  1210  0218                     	;# 
  1211  0219                     	;# 
  1212  021A                     	;# 
  1213  021B                     	;# 
  1214  021B                     	;# 
  1215  021C                     	;# 
  1216  021C                     	;# 
  1217  021D                     	;# 
  1218  021D                     	;# 
  1219  021E                     	;# 
  1220  021F                     	;# 
  1221  028C                     	;# 
  1222  028C                     	;# 
  1223  028D                     	;# 
  1224  028D                     	;# 
  1225  028E                     	;# 
  1226  028F                     	;# 
  1227  0290                     	;# 
  1228  0290                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0292                     	;# 
  1232  0293                     	;# 
  1233  0293                     	;# 
  1234  0294                     	;# 
  1235  0295                     	;# 
  1236  0296                     	;# 
  1237  0296                     	;# 
  1238  0297                     	;# 
  1239  0298                     	;# 
  1240  0298                     	;# 
  1241  0299                     	;# 
  1242  0299                     	;# 
  1243  029A                     	;# 
  1244  029B                     	;# 
  1245  029C                     	;# 
  1246  029C                     	;# 
  1247  029D                     	;# 
  1248  030C                     	;# 
  1249  030C                     	;# 
  1250  030D                     	;# 
  1251  030E                     	;# 
  1252  030F                     	;# 
  1253  0310                     	;# 
  1254  0310                     	;# 
  1255  0311                     	;# 
  1256  0312                     	;# 
  1257  0313                     	;# 
  1258  0314                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0316                     	;# 
  1262  0317                     	;# 
  1263  0318                     	;# 
  1264  0318                     	;# 
  1265  0319                     	;# 
  1266  031A                     	;# 
  1267  031B                     	;# 
  1268  031C                     	;# 
  1269  031C                     	;# 
  1270  031D                     	;# 
  1271  031E                     	;# 
  1272  031F                     	;# 
  1273  038C                     	;# 
  1274  038D                     	;# 
  1275  038E                     	;# 
  1276  0390                     	;# 
  1277  0391                     	;# 
  1278  0392                     	;# 
  1279  040C                     	;# 
  1280  040D                     	;# 
  1281  040E                     	;# 
  1282  040F                     	;# 
  1283  0410                     	;# 
  1284  0411                     	;# 
  1285  0416                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  0418                     	;# 
  1289  0418                     	;# 
  1290  0419                     	;# 
  1291  041A                     	;# 
  1292  041A                     	;# 
  1293  041B                     	;# 
  1294  041C                     	;# 
  1295  041C                     	;# 
  1296  041D                     	;# 
  1297  041E                     	;# 
  1298  041F                     	;# 
  1299  048C                     	;# 
  1300  048C                     	;# 
  1301  048D                     	;# 
  1302  048E                     	;# 
  1303  048F                     	;# 
  1304  048F                     	;# 
  1305  0490                     	;# 
  1306  0491                     	;# 
  1307  0492                     	;# 
  1308  0492                     	;# 
  1309  0493                     	;# 
  1310  0494                     	;# 
  1311  0495                     	;# 
  1312  0495                     	;# 
  1313  0496                     	;# 
  1314  0497                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049C                     	;# 
  1320  049D                     	;# 
  1321  050C                     	;# 
  1322  050C                     	;# 
  1323  050D                     	;# 
  1324  050E                     	;# 
  1325  050F                     	;# 
  1326  050F                     	;# 
  1327  0510                     	;# 
  1328  0511                     	;# 
  1329  0512                     	;# 
  1330  0512                     	;# 
  1331  0513                     	;# 
  1332  0514                     	;# 
  1333  0515                     	;# 
  1334  0515                     	;# 
  1335  0516                     	;# 
  1336  0517                     	;# 
  1337  0518                     	;# 
  1338  0519                     	;# 
  1339  051A                     	;# 
  1340  051B                     	;# 
  1341  051C                     	;# 
  1342  051D                     	;# 
  1343  058C                     	;# 
  1344  058C                     	;# 
  1345  058D                     	;# 
  1346  058E                     	;# 
  1347  058F                     	;# 
  1348  058F                     	;# 
  1349  0590                     	;# 
  1350  0591                     	;# 
  1351  0592                     	;# 
  1352  0593                     	;# 
  1353  060C                     	;# 
  1354  060D                     	;# 
  1355  060E                     	;# 
  1356  060F                     	;# 
  1357  0610                     	;# 
  1358  0611                     	;# 
  1359  0612                     	;# 
  1360  0613                     	;# 
  1361  0614                     	;# 
  1362  0616                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061D                     	;# 
  1370  061E                     	;# 
  1371  068C                     	;# 
  1372  068D                     	;# 
  1373  068E                     	;# 
  1374  068F                     	;# 
  1375  0690                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  070C                     	;# 
  1381  070D                     	;# 
  1382  070E                     	;# 
  1383  070F                     	;# 
  1384  0710                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  071A                     	;# 
  1394  071B                     	;# 
  1395  071C                     	;# 
  1396  071D                     	;# 
  1397  071E                     	;# 
  1398  0796                     	;# 
  1399  0797                     	;# 
  1400  0798                     	;# 
  1401  0799                     	;# 
  1402  079A                     	;# 
  1403  079B                     	;# 
  1404  080C                     	;# 
  1405  080D                     	;# 
  1406  080E                     	;# 
  1407  080F                     	;# 
  1408  0810                     	;# 
  1409  0811                     	;# 
  1410  0812                     	;# 
  1411  0813                     	;# 
  1412  0814                     	;# 
  1413  081A                     	;# 
  1414  081B                     	;# 
  1415  081C                     	;# 
  1416  081D                     	;# 
  1417  081E                     	;# 
  1418  081F                     	;# 
  1419  088C                     	;# 
  1420  088D                     	;# 
  1421  088E                     	;# 
  1422  088F                     	;# 
  1423  0890                     	;# 
  1424  0891                     	;# 
  1425  0892                     	;# 
  1426  0893                     	;# 
  1427  0895                     	;# 
  1428  0896                     	;# 
  1429  0897                     	;# 
  1430  0898                     	;# 
  1431  0899                     	;# 
  1432  089A                     	;# 
  1433  089B                     	;# 
  1434  090C                     	;# 
  1435  090E                     	;# 
  1436  090F                     	;# 
  1437  091F                     	;# 
  1438  091F                     	;# 
  1439  098F                     	;# 
  1440  098F                     	;# 
  1441  0990                     	;# 
  1442  0991                     	;# 
  1443  0992                     	;# 
  1444  0993                     	;# 
  1445  0994                     	;# 
  1446  0995                     	;# 
  1447  0996                     	;# 
  1448  0997                     	;# 
  1449  0E0F                     	;# 
  1450  0E10                     	;# 
  1451  0E11                     	;# 
  1452  0E12                     	;# 
  1453  0E13                     	;# 
  1454  0E14                     	;# 
  1455  0E15                     	;# 
  1456  0E16                     	;# 
  1457  0E17                     	;# 
  1458  0E18                     	;# 
  1459  0E19                     	;# 
  1460  0E1A                     	;# 
  1461  0E1B                     	;# 
  1462  0E1C                     	;# 
  1463  0E1D                     	;# 
  1464  0E1E                     	;# 
  1465  0E1F                     	;# 
  1466  0E20                     	;# 
  1467  0E21                     	;# 
  1468  0E22                     	;# 
  1469  0E23                     	;# 
  1470  0E24                     	;# 
  1471  0E25                     	;# 
  1472  0E26                     	;# 
  1473  0E27                     	;# 
  1474  0E28                     	;# 
  1475  0E29                     	;# 
  1476  0E2A                     	;# 
  1477  0E2B                     	;# 
  1478  0E2C                     	;# 
  1479  0E2D                     	;# 
  1480  0E2E                     	;# 
  1481  0E2F                     	;# 
  1482  0E30                     	;# 
  1483  0E31                     	;# 
  1484  0E32                     	;# 
  1485  0E33                     	;# 
  1486  0E34                     	;# 
  1487  0E35                     	;# 
  1488  0E36                     	;# 
  1489  0E37                     	;# 
  1490  0E8F                     	;# 
  1491  0E90                     	;# 
  1492  0E91                     	;# 
  1493  0E92                     	;# 
  1494  0E93                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0E96                     	;# 
  1498  0E97                     	;# 
  1499  0E9C                     	;# 
  1500  0E9D                     	;# 
  1501  0E9E                     	;# 
  1502  0EA1                     	;# 
  1503  0EA2                     	;# 
  1504  0EA3                     	;# 
  1505  0EA4                     	;# 
  1506  0EA5                     	;# 
  1507  0EA9                     	;# 
  1508  0EAA                     	;# 
  1509  0EAB                     	;# 
  1510  0EAC                     	;# 
  1511  0EB1                     	;# 
  1512  0EB2                     	;# 
  1513  0EB3                     	;# 
  1514  0EB8                     	;# 
  1515  0EB9                     	;# 
  1516  0EBA                     	;# 
  1517  0EBB                     	;# 
  1518  0EBC                     	;# 
  1519  0EBD                     	;# 
  1520  0EBE                     	;# 
  1521  0EC3                     	;# 
  1522  0EC5                     	;# 
  1523  0EC6                     	;# 
  1524  0EC7                     	;# 
  1525  0EC8                     	;# 
  1526  0EC9                     	;# 
  1527  0ECA                     	;# 
  1528  0ECB                     	;# 
  1529  0ECC                     	;# 
  1530  0F10                     	;# 
  1531  0F11                     	;# 
  1532  0F12                     	;# 
  1533  0F13                     	;# 
  1534  0F14                     	;# 
  1535  0F15                     	;# 
  1536  0F16                     	;# 
  1537  0F17                     	;# 
  1538  0F18                     	;# 
  1539  0F19                     	;# 
  1540  0F1A                     	;# 
  1541  0F1B                     	;# 
  1542  0F1C                     	;# 
  1543  0F1D                     	;# 
  1544  0F1E                     	;# 
  1545  0F1F                     	;# 
  1546  0F20                     	;# 
  1547  0F21                     	;# 
  1548  0F22                     	;# 
  1549  0F23                     	;# 
  1550  0F24                     	;# 
  1551  0F25                     	;# 
  1552  0F26                     	;# 
  1553  0F27                     	;# 
  1554  0F38                     	;# 
  1555  0F39                     	;# 
  1556  0F3A                     	;# 
  1557  0F3B                     	;# 
  1558  0F3C                     	;# 
  1559  0F3D                     	;# 
  1560  0F3E                     	;# 
  1561  0F3F                     	;# 
  1562  0F40                     	;# 
  1563  0F41                     	;# 
  1564  0F43                     	;# 
  1565  0F44                     	;# 
  1566  0F45                     	;# 
  1567  0F46                     	;# 
  1568  0F47                     	;# 
  1569  0F48                     	;# 
  1570  0F49                     	;# 
  1571  0F4A                     	;# 
  1572  0F4B                     	;# 
  1573  0F4C                     	;# 
  1574  0F4E                     	;# 
  1575  0F4F                     	;# 
  1576  0F50                     	;# 
  1577  0F51                     	;# 
  1578  0F52                     	;# 
  1579  0F53                     	;# 
  1580  0F54                     	;# 
  1581  0F55                     	;# 
  1582  0F56                     	;# 
  1583  0F57                     	;# 
  1584  0F65                     	;# 
  1585  0F68                     	;# 
  1586  0F69                     	;# 
  1587  0F6A                     	;# 
  1588  0F6B                     	;# 
  1589  0FE4                     	;# 
  1590  0FE5                     	;# 
  1591  0FE6                     	;# 
  1592  0FE7                     	;# 
  1593  0FE8                     	;# 
  1594  0FE9                     	;# 
  1595  0FEA                     	;# 
  1596  0FEB                     	;# 
  1597  0FED                     	;# 
  1598  0FEE                     	;# 
  1599  0FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000D                     	;# 
  1614  000E                     	;# 
  1615  0010                     	;# 
  1616  0011                     	;# 
  1617  0012                     	;# 
  1618  0013                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  001C                     	;# 
  1623  001C                     	;# 
  1624  001D                     	;# 
  1625  001D                     	;# 
  1626  001E                     	;# 
  1627  001F                     	;# 
  1628  008C                     	;# 
  1629  008C                     	;# 
  1630  008D                     	;# 
  1631  008E                     	;# 
  1632  008E                     	;# 
  1633  008F                     	;# 
  1634  0090                     	;# 
  1635  0090                     	;# 
  1636  0091                     	;# 
  1637  0093                     	;# 
  1638  0094                     	;# 
  1639  0095                     	;# 
  1640  0096                     	;# 
  1641  0097                     	;# 
  1642  0098                     	;# 
  1643  0099                     	;# 
  1644  009A                     	;# 
  1645  009B                     	;# 
  1646  009C                     	;# 
  1647  009D                     	;# 
  1648  009E                     	;# 
  1649  010C                     	;# 
  1650  010D                     	;# 
  1651  010E                     	;# 
  1652  010E                     	;# 
  1653  010F                     	;# 
  1654  0110                     	;# 
  1655  0110                     	;# 
  1656  0111                     	;# 
  1657  0112                     	;# 
  1658  0112                     	;# 
  1659  0113                     	;# 
  1660  0114                     	;# 
  1661  0114                     	;# 
  1662  0115                     	;# 
  1663  0116                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  018C                     	;# 
  1692  018D                     	;# 
  1693  018E                     	;# 
  1694  018F                     	;# 
  1695  0190                     	;# 
  1696  0191                     	;# 
  1697  0192                     	;# 
  1698  0196                     	;# 
  1699  0197                     	;# 
  1700  0198                     	;# 
  1701  0199                     	;# 
  1702  019A                     	;# 
  1703  019B                     	;# 
  1704  019C                     	;# 
  1705  020C                     	;# 
  1706  020D                     	;# 
  1707  020E                     	;# 
  1708  020F                     	;# 
  1709  020F                     	;# 
  1710  0210                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0213                     	;# 
  1716  0214                     	;# 
  1717  0215                     	;# 
  1718  0215                     	;# 
  1719  0216                     	;# 
  1720  0216                     	;# 
  1721  0217                     	;# 
  1722  0217                     	;# 
  1723  0218                     	;# 
  1724  0219                     	;# 
  1725  021A                     	;# 
  1726  021B                     	;# 
  1727  021B                     	;# 
  1728  021C                     	;# 
  1729  021C                     	;# 
  1730  021D                     	;# 
  1731  021D                     	;# 
  1732  021E                     	;# 
  1733  021F                     	;# 
  1734  028C                     	;# 
  1735  028C                     	;# 
  1736  028D                     	;# 
  1737  028D                     	;# 
  1738  028E                     	;# 
  1739  028F                     	;# 
  1740  0290                     	;# 
  1741  0290                     	;# 
  1742  0291                     	;# 
  1743  0292                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0293                     	;# 
  1747  0294                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0296                     	;# 
  1751  0297                     	;# 
  1752  0298                     	;# 
  1753  0298                     	;# 
  1754  0299                     	;# 
  1755  0299                     	;# 
  1756  029A                     	;# 
  1757  029B                     	;# 
  1758  029C                     	;# 
  1759  029C                     	;# 
  1760  029D                     	;# 
  1761  030C                     	;# 
  1762  030C                     	;# 
  1763  030D                     	;# 
  1764  030E                     	;# 
  1765  030F                     	;# 
  1766  0310                     	;# 
  1767  0310                     	;# 
  1768  0311                     	;# 
  1769  0312                     	;# 
  1770  0313                     	;# 
  1771  0314                     	;# 
  1772  0314                     	;# 
  1773  0315                     	;# 
  1774  0316                     	;# 
  1775  0317                     	;# 
  1776  0318                     	;# 
  1777  0318                     	;# 
  1778  0319                     	;# 
  1779  031A                     	;# 
  1780  031B                     	;# 
  1781  031C                     	;# 
  1782  031C                     	;# 
  1783  031D                     	;# 
  1784  031E                     	;# 
  1785  031F                     	;# 
  1786  038C                     	;# 
  1787  038D                     	;# 
  1788  038E                     	;# 
  1789  0390                     	;# 
  1790  0391                     	;# 
  1791  0392                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  040E                     	;# 
  1795  040F                     	;# 
  1796  0410                     	;# 
  1797  0411                     	;# 
  1798  0416                     	;# 
  1799  0416                     	;# 
  1800  0417                     	;# 
  1801  0418                     	;# 
  1802  0418                     	;# 
  1803  0419                     	;# 
  1804  041A                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  041F                     	;# 
  1812  048C                     	;# 
  1813  048C                     	;# 
  1814  048D                     	;# 
  1815  048E                     	;# 
  1816  048F                     	;# 
  1817  048F                     	;# 
  1818  0490                     	;# 
  1819  0491                     	;# 
  1820  0492                     	;# 
  1821  0492                     	;# 
  1822  0493                     	;# 
  1823  0494                     	;# 
  1824  0495                     	;# 
  1825  0495                     	;# 
  1826  0496                     	;# 
  1827  0497                     	;# 
  1828  0498                     	;# 
  1829  0499                     	;# 
  1830  049A                     	;# 
  1831  049B                     	;# 
  1832  049C                     	;# 
  1833  049D                     	;# 
  1834  050C                     	;# 
  1835  050C                     	;# 
  1836  050D                     	;# 
  1837  050E                     	;# 
  1838  050F                     	;# 
  1839  050F                     	;# 
  1840  0510                     	;# 
  1841  0511                     	;# 
  1842  0512                     	;# 
  1843  0512                     	;# 
  1844  0513                     	;# 
  1845  0514                     	;# 
  1846  0515                     	;# 
  1847  0515                     	;# 
  1848  0516                     	;# 
  1849  0517                     	;# 
  1850  0518                     	;# 
  1851  0519                     	;# 
  1852  051A                     	;# 
  1853  051B                     	;# 
  1854  051C                     	;# 
  1855  051D                     	;# 
  1856  058C                     	;# 
  1857  058C                     	;# 
  1858  058D                     	;# 
  1859  058E                     	;# 
  1860  058F                     	;# 
  1861  058F                     	;# 
  1862  0590                     	;# 
  1863  0591                     	;# 
  1864  0592                     	;# 
  1865  0593                     	;# 
  1866  060C                     	;# 
  1867  060D                     	;# 
  1868  060E                     	;# 
  1869  060F                     	;# 
  1870  0610                     	;# 
  1871  0611                     	;# 
  1872  0612                     	;# 
  1873  0613                     	;# 
  1874  0614                     	;# 
  1875  0616                     	;# 
  1876  0617                     	;# 
  1877  0618                     	;# 
  1878  0619                     	;# 
  1879  061A                     	;# 
  1880  061B                     	;# 
  1881  061C                     	;# 
  1882  061D                     	;# 
  1883  061E                     	;# 
  1884  068C                     	;# 
  1885  068D                     	;# 
  1886  068E                     	;# 
  1887  068F                     	;# 
  1888  0690                     	;# 
  1889  0691                     	;# 
  1890  0692                     	;# 
  1891  0693                     	;# 
  1892  0694                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0714                     	;# 
  1902  0716                     	;# 
  1903  0717                     	;# 
  1904  0718                     	;# 
  1905  0719                     	;# 
  1906  071A                     	;# 
  1907  071B                     	;# 
  1908  071C                     	;# 
  1909  071D                     	;# 
  1910  071E                     	;# 
  1911  0796                     	;# 
  1912  0797                     	;# 
  1913  0798                     	;# 
  1914  0799                     	;# 
  1915  079A                     	;# 
  1916  079B                     	;# 
  1917  080C                     	;# 
  1918  080D                     	;# 
  1919  080E                     	;# 
  1920  080F                     	;# 
  1921  0810                     	;# 
  1922  0811                     	;# 
  1923  0812                     	;# 
  1924  0813                     	;# 
  1925  0814                     	;# 
  1926  081A                     	;# 
  1927  081B                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  0897                     	;# 
  1943  0898                     	;# 
  1944  0899                     	;# 
  1945  089A                     	;# 
  1946  089B                     	;# 
  1947  090C                     	;# 
  1948  090E                     	;# 
  1949  090F                     	;# 
  1950  091F                     	;# 
  1951  091F                     	;# 
  1952  098F                     	;# 
  1953  098F                     	;# 
  1954  0990                     	;# 
  1955  0991                     	;# 
  1956  0992                     	;# 
  1957  0993                     	;# 
  1958  0994                     	;# 
  1959  0995                     	;# 
  1960  0996                     	;# 
  1961  0997                     	;# 
  1962  0E0F                     	;# 
  1963  0E10                     	;# 
  1964  0E11                     	;# 
  1965  0E12                     	;# 
  1966  0E13                     	;# 
  1967  0E14                     	;# 
  1968  0E15                     	;# 
  1969  0E16                     	;# 
  1970  0E17                     	;# 
  1971  0E18                     	;# 
  1972  0E19                     	;# 
  1973  0E1A                     	;# 
  1974  0E1B                     	;# 
  1975  0E1C                     	;# 
  1976  0E1D                     	;# 
  1977  0E1E                     	;# 
  1978  0E1F                     	;# 
  1979  0E20                     	;# 
  1980  0E21                     	;# 
  1981  0E22                     	;# 
  1982  0E23                     	;# 
  1983  0E24                     	;# 
  1984  0E25                     	;# 
  1985  0E26                     	;# 
  1986  0E27                     	;# 
  1987  0E28                     	;# 
  1988  0E29                     	;# 
  1989  0E2A                     	;# 
  1990  0E2B                     	;# 
  1991  0E2C                     	;# 
  1992  0E2D                     	;# 
  1993  0E2E                     	;# 
  1994  0E2F                     	;# 
  1995  0E30                     	;# 
  1996  0E31                     	;# 
  1997  0E32                     	;# 
  1998  0E33                     	;# 
  1999  0E34                     	;# 
  2000  0E35                     	;# 
  2001  0E36                     	;# 
  2002  0E37                     	;# 
  2003  0E8F                     	;# 
  2004  0E90                     	;# 
  2005  0E91                     	;# 
  2006  0E92                     	;# 
  2007  0E93                     	;# 
  2008  0E94                     	;# 
  2009  0E95                     	;# 
  2010  0E96                     	;# 
  2011  0E97                     	;# 
  2012  0E9C                     	;# 
  2013  0E9D                     	;# 
  2014  0E9E                     	;# 
  2015  0EA1                     	;# 
  2016  0EA2                     	;# 
  2017  0EA3                     	;# 
  2018  0EA4                     	;# 
  2019  0EA5                     	;# 
  2020  0EA9                     	;# 
  2021  0EAA                     	;# 
  2022  0EAB                     	;# 
  2023  0EAC                     	;# 
  2024  0EB1                     	;# 
  2025  0EB2                     	;# 
  2026  0EB3                     	;# 
  2027  0EB8                     	;# 
  2028  0EB9                     	;# 
  2029  0EBA                     	;# 
  2030  0EBB                     	;# 
  2031  0EBC                     	;# 
  2032  0EBD                     	;# 
  2033  0EBE                     	;# 
  2034  0EC3                     	;# 
  2035  0EC5                     	;# 
  2036  0EC6                     	;# 
  2037  0EC7                     	;# 
  2038  0EC8                     	;# 
  2039  0EC9                     	;# 
  2040  0ECA                     	;# 
  2041  0ECB                     	;# 
  2042  0ECC                     	;# 
  2043  0F10                     	;# 
  2044  0F11                     	;# 
  2045  0F12                     	;# 
  2046  0F13                     	;# 
  2047  0F14                     	;# 
  2048  0F15                     	;# 
  2049  0F16                     	;# 
  2050  0F17                     	;# 
  2051  0F18                     	;# 
  2052  0F19                     	;# 
  2053  0F1A                     	;# 
  2054  0F1B                     	;# 
  2055  0F1C                     	;# 
  2056  0F1D                     	;# 
  2057  0F1E                     	;# 
  2058  0F1F                     	;# 
  2059  0F20                     	;# 
  2060  0F21                     	;# 
  2061  0F22                     	;# 
  2062  0F23                     	;# 
  2063  0F24                     	;# 
  2064  0F25                     	;# 
  2065  0F26                     	;# 
  2066  0F27                     	;# 
  2067  0F38                     	;# 
  2068  0F39                     	;# 
  2069  0F3A                     	;# 
  2070  0F3B                     	;# 
  2071  0F3C                     	;# 
  2072  0F3D                     	;# 
  2073  0F3E                     	;# 
  2074  0F3F                     	;# 
  2075  0F40                     	;# 
  2076  0F41                     	;# 
  2077  0F43                     	;# 
  2078  0F44                     	;# 
  2079  0F45                     	;# 
  2080  0F46                     	;# 
  2081  0F47                     	;# 
  2082  0F48                     	;# 
  2083  0F49                     	;# 
  2084  0F4A                     	;# 
  2085  0F4B                     	;# 
  2086  0F4C                     	;# 
  2087  0F4E                     	;# 
  2088  0F4F                     	;# 
  2089  0F50                     	;# 
  2090  0F51                     	;# 
  2091  0F52                     	;# 
  2092  0F53                     	;# 
  2093  0F54                     	;# 
  2094  0F55                     	;# 
  2095  0F56                     	;# 
  2096  0F57                     	;# 
  2097  0F65                     	;# 
  2098  0F68                     	;# 
  2099  0F69                     	;# 
  2100  0F6A                     	;# 
  2101  0F6B                     	;# 
  2102  0FE4                     	;# 
  2103  0FE5                     	;# 
  2104  0FE6                     	;# 
  2105  0FE7                     	;# 
  2106  0FE8                     	;# 
  2107  0FE9                     	;# 
  2108  0FEA                     	;# 
  2109  0FEB                     	;# 
  2110  0FED                     	;# 
  2111  0FEE                     	;# 
  2112  0FEF                     	;# 
  2113  0000                     	;# 
  2114  0001                     	;# 
  2115  0002                     	;# 
  2116  0003                     	;# 
  2117  0004                     	;# 
  2118  0005                     	;# 
  2119  0006                     	;# 
  2120  0007                     	;# 
  2121  0008                     	;# 
  2122  0009                     	;# 
  2123  000A                     	;# 
  2124  000B                     	;# 
  2125  000C                     	;# 
  2126  000D                     	;# 
  2127  000E                     	;# 
  2128  0010                     	;# 
  2129  0011                     	;# 
  2130  0012                     	;# 
  2131  0013                     	;# 
  2132  0016                     	;# 
  2133  0017                     	;# 
  2134  0018                     	;# 
  2135  001C                     	;# 
  2136  001C                     	;# 
  2137  001D                     	;# 
  2138  001D                     	;# 
  2139  001E                     	;# 
  2140  001F                     	;# 
  2141  008C                     	;# 
  2142  008C                     	;# 
  2143  008D                     	;# 
  2144  008E                     	;# 
  2145  008E                     	;# 
  2146  008F                     	;# 
  2147  0090                     	;# 
  2148  0090                     	;# 
  2149  0091                     	;# 
  2150  0093                     	;# 
  2151  0094                     	;# 
  2152  0095                     	;# 
  2153  0096                     	;# 
  2154  0097                     	;# 
  2155  0098                     	;# 
  2156  0099                     	;# 
  2157  009A                     	;# 
  2158  009B                     	;# 
  2159  009C                     	;# 
  2160  009D                     	;# 
  2161  009E                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  010E                     	;# 
  2166  010F                     	;# 
  2167  0110                     	;# 
  2168  0110                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0112                     	;# 
  2172  0113                     	;# 
  2173  0114                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  018C                     	;# 
  2205  018D                     	;# 
  2206  018E                     	;# 
  2207  018F                     	;# 
  2208  0190                     	;# 
  2209  0191                     	;# 
  2210  0192                     	;# 
  2211  0196                     	;# 
  2212  0197                     	;# 
  2213  0198                     	;# 
  2214  0199                     	;# 
  2215  019A                     	;# 
  2216  019B                     	;# 
  2217  019C                     	;# 
  2218  020C                     	;# 
  2219  020D                     	;# 
  2220  020E                     	;# 
  2221  020F                     	;# 
  2222  020F                     	;# 
  2223  0210                     	;# 
  2224  0210                     	;# 
  2225  0211                     	;# 
  2226  0211                     	;# 
  2227  0212                     	;# 
  2228  0213                     	;# 
  2229  0214                     	;# 
  2230  0215                     	;# 
  2231  0215                     	;# 
  2232  0216                     	;# 
  2233  0216                     	;# 
  2234  0217                     	;# 
  2235  0217                     	;# 
  2236  0218                     	;# 
  2237  0219                     	;# 
  2238  021A                     	;# 
  2239  021B                     	;# 
  2240  021B                     	;# 
  2241  021C                     	;# 
  2242  021C                     	;# 
  2243  021D                     	;# 
  2244  021D                     	;# 
  2245  021E                     	;# 
  2246  021F                     	;# 
  2247  028C                     	;# 
  2248  028C                     	;# 
  2249  028D                     	;# 
  2250  028D                     	;# 
  2251  028E                     	;# 
  2252  028F                     	;# 
  2253  0290                     	;# 
  2254  0290                     	;# 
  2255  0291                     	;# 
  2256  0292                     	;# 
  2257  0292                     	;# 
  2258  0293                     	;# 
  2259  0293                     	;# 
  2260  0294                     	;# 
  2261  0295                     	;# 
  2262  0296                     	;# 
  2263  0296                     	;# 
  2264  0297                     	;# 
  2265  0298                     	;# 
  2266  0298                     	;# 
  2267  0299                     	;# 
  2268  0299                     	;# 
  2269  029A                     	;# 
  2270  029B                     	;# 
  2271  029C                     	;# 
  2272  029C                     	;# 
  2273  029D                     	;# 
  2274  030C                     	;# 
  2275  030C                     	;# 
  2276  030D                     	;# 
  2277  030E                     	;# 
  2278  030F                     	;# 
  2279  0310                     	;# 
  2280  0310                     	;# 
  2281  0311                     	;# 
  2282  0312                     	;# 
  2283  0313                     	;# 
  2284  0314                     	;# 
  2285  0314                     	;# 
  2286  0315                     	;# 
  2287  0316                     	;# 
  2288  0317                     	;# 
  2289  0318                     	;# 
  2290  0318                     	;# 
  2291  0319                     	;# 
  2292  031A                     	;# 
  2293  031B                     	;# 
  2294  031C                     	;# 
  2295  031C                     	;# 
  2296  031D                     	;# 
  2297  031E                     	;# 
  2298  031F                     	;# 
  2299  038C                     	;# 
  2300  038D                     	;# 
  2301  038E                     	;# 
  2302  0390                     	;# 
  2303  0391                     	;# 
  2304  0392                     	;# 
  2305  040C                     	;# 
  2306  040D                     	;# 
  2307  040E                     	;# 
  2308  040F                     	;# 
  2309  0410                     	;# 
  2310  0411                     	;# 
  2311  0416                     	;# 
  2312  0416                     	;# 
  2313  0417                     	;# 
  2314  0418                     	;# 
  2315  0418                     	;# 
  2316  0419                     	;# 
  2317  041A                     	;# 
  2318  041A                     	;# 
  2319  041B                     	;# 
  2320  041C                     	;# 
  2321  041C                     	;# 
  2322  041D                     	;# 
  2323  041E                     	;# 
  2324  041F                     	;# 
  2325  048C                     	;# 
  2326  048C                     	;# 
  2327  048D                     	;# 
  2328  048E                     	;# 
  2329  048F                     	;# 
  2330  048F                     	;# 
  2331  0490                     	;# 
  2332  0491                     	;# 
  2333  0492                     	;# 
  2334  0492                     	;# 
  2335  0493                     	;# 
  2336  0494                     	;# 
  2337  0495                     	;# 
  2338  0495                     	;# 
  2339  0496                     	;# 
  2340  0497                     	;# 
  2341  0498                     	;# 
  2342  0499                     	;# 
  2343  049A                     	;# 
  2344  049B                     	;# 
  2345  049C                     	;# 
  2346  049D                     	;# 
  2347  050C                     	;# 
  2348  050C                     	;# 
  2349  050D                     	;# 
  2350  050E                     	;# 
  2351  050F                     	;# 
  2352  050F                     	;# 
  2353  0510                     	;# 
  2354  0511                     	;# 
  2355  0512                     	;# 
  2356  0512                     	;# 
  2357  0513                     	;# 
  2358  0514                     	;# 
  2359  0515                     	;# 
  2360  0515                     	;# 
  2361  0516                     	;# 
  2362  0517                     	;# 
  2363  0518                     	;# 
  2364  0519                     	;# 
  2365  051A                     	;# 
  2366  051B                     	;# 
  2367  051C                     	;# 
  2368  051D                     	;# 
  2369  058C                     	;# 
  2370  058C                     	;# 
  2371  058D                     	;# 
  2372  058E                     	;# 
  2373  058F                     	;# 
  2374  058F                     	;# 
  2375  0590                     	;# 
  2376  0591                     	;# 
  2377  0592                     	;# 
  2378  0593                     	;# 
  2379  060C                     	;# 
  2380  060D                     	;# 
  2381  060E                     	;# 
  2382  060F                     	;# 
  2383  0610                     	;# 
  2384  0611                     	;# 
  2385  0612                     	;# 
  2386  0613                     	;# 
  2387  0614                     	;# 
  2388  0616                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  061A                     	;# 
  2393  061B                     	;# 
  2394  061C                     	;# 
  2395  061D                     	;# 
  2396  061E                     	;# 
  2397  068C                     	;# 
  2398  068D                     	;# 
  2399  068E                     	;# 
  2400  068F                     	;# 
  2401  0690                     	;# 
  2402  0691                     	;# 
  2403  0692                     	;# 
  2404  0693                     	;# 
  2405  0694                     	;# 
  2406  070C                     	;# 
  2407  070D                     	;# 
  2408  070E                     	;# 
  2409  070F                     	;# 
  2410  0710                     	;# 
  2411  0711                     	;# 
  2412  0712                     	;# 
  2413  0713                     	;# 
  2414  0714                     	;# 
  2415  0716                     	;# 
  2416  0717                     	;# 
  2417  0718                     	;# 
  2418  0719                     	;# 
  2419  071A                     	;# 
  2420  071B                     	;# 
  2421  071C                     	;# 
  2422  071D                     	;# 
  2423  071E                     	;# 
  2424  0796                     	;# 
  2425  0797                     	;# 
  2426  0798                     	;# 
  2427  0799                     	;# 
  2428  079A                     	;# 
  2429  079B                     	;# 
  2430  080C                     	;# 
  2431  080D                     	;# 
  2432  080E                     	;# 
  2433  080F                     	;# 
  2434  0810                     	;# 
  2435  0811                     	;# 
  2436  0812                     	;# 
  2437  0813                     	;# 
  2438  0814                     	;# 
  2439  081A                     	;# 
  2440  081B                     	;# 
  2441  081C                     	;# 
  2442  081D                     	;# 
  2443  081E                     	;# 
  2444  081F                     	;# 
  2445  088C                     	;# 
  2446  088D                     	;# 
  2447  088E                     	;# 
  2448  088F                     	;# 
  2449  0890                     	;# 
  2450  0891                     	;# 
  2451  0892                     	;# 
  2452  0893                     	;# 
  2453  0895                     	;# 
  2454  0896                     	;# 
  2455  0897                     	;# 
  2456  0898                     	;# 
  2457  0899                     	;# 
  2458  089A                     	;# 
  2459  089B                     	;# 
  2460  090C                     	;# 
  2461  090E                     	;# 
  2462  090F                     	;# 
  2463  091F                     	;# 
  2464  091F                     	;# 
  2465  098F                     	;# 
  2466  098F                     	;# 
  2467  0990                     	;# 
  2468  0991                     	;# 
  2469  0992                     	;# 
  2470  0993                     	;# 
  2471  0994                     	;# 
  2472  0995                     	;# 
  2473  0996                     	;# 
  2474  0997                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E23                     	;# 
  2496  0E24                     	;# 
  2497  0E25                     	;# 
  2498  0E26                     	;# 
  2499  0E27                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E30                     	;# 
  2509  0E31                     	;# 
  2510  0E32                     	;# 
  2511  0E33                     	;# 
  2512  0E34                     	;# 
  2513  0E35                     	;# 
  2514  0E36                     	;# 
  2515  0E37                     	;# 
  2516  0E8F                     	;# 
  2517  0E90                     	;# 
  2518  0E91                     	;# 
  2519  0E92                     	;# 
  2520  0E93                     	;# 
  2521  0E94                     	;# 
  2522  0E95                     	;# 
  2523  0E96                     	;# 
  2524  0E97                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0EA1                     	;# 
  2529  0EA2                     	;# 
  2530  0EA3                     	;# 
  2531  0EA4                     	;# 
  2532  0EA5                     	;# 
  2533  0EA9                     	;# 
  2534  0EAA                     	;# 
  2535  0EAB                     	;# 
  2536  0EAC                     	;# 
  2537  0EB1                     	;# 
  2538  0EB2                     	;# 
  2539  0EB3                     	;# 
  2540  0EB8                     	;# 
  2541  0EB9                     	;# 
  2542  0EBA                     	;# 
  2543  0EBB                     	;# 
  2544  0EBC                     	;# 
  2545  0EBD                     	;# 
  2546  0EBE                     	;# 
  2547  0EC3                     	;# 
  2548  0EC5                     	;# 
  2549  0EC6                     	;# 
  2550  0EC7                     	;# 
  2551  0EC8                     	;# 
  2552  0EC9                     	;# 
  2553  0ECA                     	;# 
  2554  0ECB                     	;# 
  2555  0ECC                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F38                     	;# 
  2581  0F39                     	;# 
  2582  0F3A                     	;# 
  2583  0F3B                     	;# 
  2584  0F3C                     	;# 
  2585  0F3D                     	;# 
  2586  0F3E                     	;# 
  2587  0F3F                     	;# 
  2588  0F40                     	;# 
  2589  0F41                     	;# 
  2590  0F43                     	;# 
  2591  0F44                     	;# 
  2592  0F45                     	;# 
  2593  0F46                     	;# 
  2594  0F47                     	;# 
  2595  0F48                     	;# 
  2596  0F49                     	;# 
  2597  0F4A                     	;# 
  2598  0F4B                     	;# 
  2599  0F4C                     	;# 
  2600  0F4E                     	;# 
  2601  0F4F                     	;# 
  2602  0F50                     	;# 
  2603  0F51                     	;# 
  2604  0F52                     	;# 
  2605  0F53                     	;# 
  2606  0F54                     	;# 
  2607  0F55                     	;# 
  2608  0F56                     	;# 
  2609  0F57                     	;# 
  2610  0F65                     	;# 
  2611  0F68                     	;# 
  2612  0F69                     	;# 
  2613  0F6A                     	;# 
  2614  0F6B                     	;# 
  2615  0FE4                     	;# 
  2616  0FE5                     	;# 
  2617  0FE6                     	;# 
  2618  0FE7                     	;# 
  2619  0FE8                     	;# 
  2620  0FE9                     	;# 
  2621  0FEA                     	;# 
  2622  0FEB                     	;# 
  2623  0FED                     	;# 
  2624  0FEE                     	;# 
  2625  0FEF                     	;# 
  2626  0000                     	;# 
  2627  0001                     	;# 
  2628  0002                     	;# 
  2629  0003                     	;# 
  2630  0004                     	;# 
  2631  0005                     	;# 
  2632  0006                     	;# 
  2633  0007                     	;# 
  2634  0008                     	;# 
  2635  0009                     	;# 
  2636  000A                     	;# 
  2637  000B                     	;# 
  2638  000C                     	;# 
  2639  000D                     	;# 
  2640  000E                     	;# 
  2641  0010                     	;# 
  2642  0011                     	;# 
  2643  0012                     	;# 
  2644  0013                     	;# 
  2645  0016                     	;# 
  2646  0017                     	;# 
  2647  0018                     	;# 
  2648  001C                     	;# 
  2649  001C                     	;# 
  2650  001D                     	;# 
  2651  001D                     	;# 
  2652  001E                     	;# 
  2653  001F                     	;# 
  2654  008C                     	;# 
  2655  008C                     	;# 
  2656  008D                     	;# 
  2657  008E                     	;# 
  2658  008E                     	;# 
  2659  008F                     	;# 
  2660  0090                     	;# 
  2661  0090                     	;# 
  2662  0091                     	;# 
  2663  0093                     	;# 
  2664  0094                     	;# 
  2665  0095                     	;# 
  2666  0096                     	;# 
  2667  0097                     	;# 
  2668  0098                     	;# 
  2669  0099                     	;# 
  2670  009A                     	;# 
  2671  009B                     	;# 
  2672  009C                     	;# 
  2673  009D                     	;# 
  2674  009E                     	;# 
  2675  010C                     	;# 
  2676  010D                     	;# 
  2677  010E                     	;# 
  2678  010E                     	;# 
  2679  010F                     	;# 
  2680  0110                     	;# 
  2681  0110                     	;# 
  2682  0111                     	;# 
  2683  0112                     	;# 
  2684  0112                     	;# 
  2685  0113                     	;# 
  2686  0114                     	;# 
  2687  0114                     	;# 
  2688  0115                     	;# 
  2689  0116                     	;# 
  2690  0116                     	;# 
  2691  0117                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  018C                     	;# 
  2718  018D                     	;# 
  2719  018E                     	;# 
  2720  018F                     	;# 
  2721  0190                     	;# 
  2722  0191                     	;# 
  2723  0192                     	;# 
  2724  0196                     	;# 
  2725  0197                     	;# 
  2726  0198                     	;# 
  2727  0199                     	;# 
  2728  019A                     	;# 
  2729  019B                     	;# 
  2730  019C                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  020E                     	;# 
  2734  020F                     	;# 
  2735  020F                     	;# 
  2736  0210                     	;# 
  2737  0210                     	;# 
  2738  0211                     	;# 
  2739  0211                     	;# 
  2740  0212                     	;# 
  2741  0213                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0216                     	;# 
  2746  0216                     	;# 
  2747  0217                     	;# 
  2748  0217                     	;# 
  2749  0218                     	;# 
  2750  0219                     	;# 
  2751  021A                     	;# 
  2752  021B                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021C                     	;# 
  2756  021D                     	;# 
  2757  021D                     	;# 
  2758  021E                     	;# 
  2759  021F                     	;# 
  2760  028C                     	;# 
  2761  028C                     	;# 
  2762  028D                     	;# 
  2763  028D                     	;# 
  2764  028E                     	;# 
  2765  028F                     	;# 
  2766  0290                     	;# 
  2767  0290                     	;# 
  2768  0291                     	;# 
  2769  0292                     	;# 
  2770  0292                     	;# 
  2771  0293                     	;# 
  2772  0293                     	;# 
  2773  0294                     	;# 
  2774  0295                     	;# 
  2775  0296                     	;# 
  2776  0296                     	;# 
  2777  0297                     	;# 
  2778  0298                     	;# 
  2779  0298                     	;# 
  2780  0299                     	;# 
  2781  0299                     	;# 
  2782  029A                     	;# 
  2783  029B                     	;# 
  2784  029C                     	;# 
  2785  029C                     	;# 
  2786  029D                     	;# 
  2787  030C                     	;# 
  2788  030C                     	;# 
  2789  030D                     	;# 
  2790  030E                     	;# 
  2791  030F                     	;# 
  2792  0310                     	;# 
  2793  0310                     	;# 
  2794  0311                     	;# 
  2795  0312                     	;# 
  2796  0313                     	;# 
  2797  0314                     	;# 
  2798  0314                     	;# 
  2799  0315                     	;# 
  2800  0316                     	;# 
  2801  0317                     	;# 
  2802  0318                     	;# 
  2803  0318                     	;# 
  2804  0319                     	;# 
  2805  031A                     	;# 
  2806  031B                     	;# 
  2807  031C                     	;# 
  2808  031C                     	;# 
  2809  031D                     	;# 
  2810  031E                     	;# 
  2811  031F                     	;# 
  2812  038C                     	;# 
  2813  038D                     	;# 
  2814  038E                     	;# 
  2815  0390                     	;# 
  2816  0391                     	;# 
  2817  0392                     	;# 
  2818  040C                     	;# 
  2819  040D                     	;# 
  2820  040E                     	;# 
  2821  040F                     	;# 
  2822  0410                     	;# 
  2823  0411                     	;# 
  2824  0416                     	;# 
  2825  0416                     	;# 
  2826  0417                     	;# 
  2827  0418                     	;# 
  2828  0418                     	;# 
  2829  0419                     	;# 
  2830  041A                     	;# 
  2831  041A                     	;# 
  2832  041B                     	;# 
  2833  041C                     	;# 
  2834  041C                     	;# 
  2835  041D                     	;# 
  2836  041E                     	;# 
  2837  041F                     	;# 
  2838  048C                     	;# 
  2839  048C                     	;# 
  2840  048D                     	;# 
  2841  048E                     	;# 
  2842  048F                     	;# 
  2843  048F                     	;# 
  2844  0490                     	;# 
  2845  0491                     	;# 
  2846  0492                     	;# 
  2847  0492                     	;# 
  2848  0493                     	;# 
  2849  0494                     	;# 
  2850  0495                     	;# 
  2851  0495                     	;# 
  2852  0496                     	;# 
  2853  0497                     	;# 
  2854  0498                     	;# 
  2855  0499                     	;# 
  2856  049A                     	;# 
  2857  049B                     	;# 
  2858  049C                     	;# 
  2859  049D                     	;# 
  2860  050C                     	;# 
  2861  050C                     	;# 
  2862  050D                     	;# 
  2863  050E                     	;# 
  2864  050F                     	;# 
  2865  050F                     	;# 
  2866  0510                     	;# 
  2867  0511                     	;# 
  2868  0512                     	;# 
  2869  0512                     	;# 
  2870  0513                     	;# 
  2871  0514                     	;# 
  2872  0515                     	;# 
  2873  0515                     	;# 
  2874  0516                     	;# 
  2875  0517                     	;# 
  2876  0518                     	;# 
  2877  0519                     	;# 
  2878  051A                     	;# 
  2879  051B                     	;# 
  2880  051C                     	;# 
  2881  051D                     	;# 
  2882  058C                     	;# 
  2883  058C                     	;# 
  2884  058D                     	;# 
  2885  058E                     	;# 
  2886  058F                     	;# 
  2887  058F                     	;# 
  2888  0590                     	;# 
  2889  0591                     	;# 
  2890  0592                     	;# 
  2891  0593                     	;# 
  2892  060C                     	;# 
  2893  060D                     	;# 
  2894  060E                     	;# 
  2895  060F                     	;# 
  2896  0610                     	;# 
  2897  0611                     	;# 
  2898  0612                     	;# 
  2899  0613                     	;# 
  2900  0614                     	;# 
  2901  0616                     	;# 
  2902  0617                     	;# 
  2903  0618                     	;# 
  2904  0619                     	;# 
  2905  061A                     	;# 
  2906  061B                     	;# 
  2907  061C                     	;# 
  2908  061D                     	;# 
  2909  061E                     	;# 
  2910  068C                     	;# 
  2911  068D                     	;# 
  2912  068E                     	;# 
  2913  068F                     	;# 
  2914  0690                     	;# 
  2915  0691                     	;# 
  2916  0692                     	;# 
  2917  0693                     	;# 
  2918  0694                     	;# 
  2919  070C                     	;# 
  2920  070D                     	;# 
  2921  070E                     	;# 
  2922  070F                     	;# 
  2923  0710                     	;# 
  2924  0711                     	;# 
  2925  0712                     	;# 
  2926  0713                     	;# 
  2927  0714                     	;# 
  2928  0716                     	;# 
  2929  0717                     	;# 
  2930  0718                     	;# 
  2931  0719                     	;# 
  2932  071A                     	;# 
  2933  071B                     	;# 
  2934  071C                     	;# 
  2935  071D                     	;# 
  2936  071E                     	;# 
  2937  0796                     	;# 
  2938  0797                     	;# 
  2939  0798                     	;# 
  2940  0799                     	;# 
  2941  079A                     	;# 
  2942  079B                     	;# 
  2943  080C                     	;# 
  2944  080D                     	;# 
  2945  080E                     	;# 
  2946  080F                     	;# 
  2947  0810                     	;# 
  2948  0811                     	;# 
  2949  0812                     	;# 
  2950  0813                     	;# 
  2951  0814                     	;# 
  2952  081A                     	;# 
  2953  081B                     	;# 
  2954  081C                     	;# 
  2955  081D                     	;# 
  2956  081E                     	;# 
  2957  081F                     	;# 
  2958  088C                     	;# 
  2959  088D                     	;# 
  2960  088E                     	;# 
  2961  088F                     	;# 
  2962  0890                     	;# 
  2963  0891                     	;# 
  2964  0892                     	;# 
  2965  0893                     	;# 
  2966  0895                     	;# 
  2967  0896                     	;# 
  2968  0897                     	;# 
  2969  0898                     	;# 
  2970  0899                     	;# 
  2971  089A                     	;# 
  2972  089B                     	;# 
  2973  090C                     	;# 
  2974  090E                     	;# 
  2975  090F                     	;# 
  2976  091F                     	;# 
  2977  091F                     	;# 
  2978  098F                     	;# 
  2979  098F                     	;# 
  2980  0990                     	;# 
  2981  0991                     	;# 
  2982  0992                     	;# 
  2983  0993                     	;# 
  2984  0994                     	;# 
  2985  0995                     	;# 
  2986  0996                     	;# 
  2987  0997                     	;# 
  2988  0E0F                     	;# 
  2989  0E10                     	;# 
  2990  0E11                     	;# 
  2991  0E12                     	;# 
  2992  0E13                     	;# 
  2993  0E14                     	;# 
  2994  0E15                     	;# 
  2995  0E16                     	;# 
  2996  0E17                     	;# 
  2997  0E18                     	;# 
  2998  0E19                     	;# 
  2999  0E1A                     	;# 
  3000  0E1B                     	;# 
  3001  0E1C                     	;# 
  3002  0E1D                     	;# 
  3003  0E1E                     	;# 
  3004  0E1F                     	;# 
  3005  0E20                     	;# 
  3006  0E21                     	;# 
  3007  0E22                     	;# 
  3008  0E23                     	;# 
  3009  0E24                     	;# 
  3010  0E25                     	;# 
  3011  0E26                     	;# 
  3012  0E27                     	;# 
  3013  0E28                     	;# 
  3014  0E29                     	;# 
  3015  0E2A                     	;# 
  3016  0E2B                     	;# 
  3017  0E2C                     	;# 
  3018  0E2D                     	;# 
  3019  0E2E                     	;# 
  3020  0E2F                     	;# 
  3021  0E30                     	;# 
  3022  0E31                     	;# 
  3023  0E32                     	;# 
  3024  0E33                     	;# 
  3025  0E34                     	;# 
  3026  0E35                     	;# 
  3027  0E36                     	;# 
  3028  0E37                     	;# 
  3029  0E8F                     	;# 
  3030  0E90                     	;# 
  3031  0E91                     	;# 
  3032  0E92                     	;# 
  3033  0E93                     	;# 
  3034  0E94                     	;# 
  3035  0E95                     	;# 
  3036  0E96                     	;# 
  3037  0E97                     	;# 
  3038  0E9C                     	;# 
  3039  0E9D                     	;# 
  3040  0E9E                     	;# 
  3041  0EA1                     	;# 
  3042  0EA2                     	;# 
  3043  0EA3                     	;# 
  3044  0EA4                     	;# 
  3045  0EA5                     	;# 
  3046  0EA9                     	;# 
  3047  0EAA                     	;# 
  3048  0EAB                     	;# 
  3049  0EAC                     	;# 
  3050  0EB1                     	;# 
  3051  0EB2                     	;# 
  3052  0EB3                     	;# 
  3053  0EB8                     	;# 
  3054  0EB9                     	;# 
  3055  0EBA                     	;# 
  3056  0EBB                     	;# 
  3057  0EBC                     	;# 
  3058  0EBD                     	;# 
  3059  0EBE                     	;# 
  3060  0EC3                     	;# 
  3061  0EC5                     	;# 
  3062  0EC6                     	;# 
  3063  0EC7                     	;# 
  3064  0EC8                     	;# 
  3065  0EC9                     	;# 
  3066  0ECA                     	;# 
  3067  0ECB                     	;# 
  3068  0ECC                     	;# 
  3069  0F10                     	;# 
  3070  0F11                     	;# 
  3071  0F12                     	;# 
  3072  0F13                     	;# 
  3073  0F14                     	;# 
  3074  0F15                     	;# 
  3075  0F16                     	;# 
  3076  0F17                     	;# 
  3077  0F18                     	;# 
  3078  0F19                     	;# 
  3079  0F1A                     	;# 
  3080  0F1B                     	;# 
  3081  0F1C                     	;# 
  3082  0F1D                     	;# 
  3083  0F1E                     	;# 
  3084  0F1F                     	;# 
  3085  0F20                     	;# 
  3086  0F21                     	;# 
  3087  0F22                     	;# 
  3088  0F23                     	;# 
  3089  0F24                     	;# 
  3090  0F25                     	;# 
  3091  0F26                     	;# 
  3092  0F27                     	;# 
  3093  0F38                     	;# 
  3094  0F39                     	;# 
  3095  0F3A                     	;# 
  3096  0F3B                     	;# 
  3097  0F3C                     	;# 
  3098  0F3D                     	;# 
  3099  0F3E                     	;# 
  3100  0F3F                     	;# 
  3101  0F40                     	;# 
  3102  0F41                     	;# 
  3103  0F43                     	;# 
  3104  0F44                     	;# 
  3105  0F45                     	;# 
  3106  0F46                     	;# 
  3107  0F47                     	;# 
  3108  0F48                     	;# 
  3109  0F49                     	;# 
  3110  0F4A                     	;# 
  3111  0F4B                     	;# 
  3112  0F4C                     	;# 
  3113  0F4E                     	;# 
  3114  0F4F                     	;# 
  3115  0F50                     	;# 
  3116  0F51                     	;# 
  3117  0F52                     	;# 
  3118  0F53                     	;# 
  3119  0F54                     	;# 
  3120  0F55                     	;# 
  3121  0F56                     	;# 
  3122  0F57                     	;# 
  3123  0F65                     	;# 
  3124  0F68                     	;# 
  3125  0F69                     	;# 
  3126  0F6A                     	;# 
  3127  0F6B                     	;# 
  3128  0FE4                     	;# 
  3129  0FE5                     	;# 
  3130  0FE6                     	;# 
  3131  0FE7                     	;# 
  3132  0FE8                     	;# 
  3133  0FE9                     	;# 
  3134  0FEA                     	;# 
  3135  0FEB                     	;# 
  3136  0FED                     	;# 
  3137  0FEE                     	;# 
  3138  0FEF                     	;# 
  3139  0000                     	;# 
  3140  0001                     	;# 
  3141  0002                     	;# 
  3142  0003                     	;# 
  3143  0004                     	;# 
  3144  0005                     	;# 
  3145  0006                     	;# 
  3146  0007                     	;# 
  3147  0008                     	;# 
  3148  0009                     	;# 
  3149  000A                     	;# 
  3150  000B                     	;# 
  3151  000C                     	;# 
  3152  000D                     	;# 
  3153  000E                     	;# 
  3154  0010                     	;# 
  3155  0011                     	;# 
  3156  0012                     	;# 
  3157  0013                     	;# 
  3158  0016                     	;# 
  3159  0017                     	;# 
  3160  0018                     	;# 
  3161  001C                     	;# 
  3162  001C                     	;# 
  3163  001D                     	;# 
  3164  001D                     	;# 
  3165  001E                     	;# 
  3166  001F                     	;# 
  3167  008C                     	;# 
  3168  008C                     	;# 
  3169  008D                     	;# 
  3170  008E                     	;# 
  3171  008E                     	;# 
  3172  008F                     	;# 
  3173  0090                     	;# 
  3174  0090                     	;# 
  3175  0091                     	;# 
  3176  0093                     	;# 
  3177  0094                     	;# 
  3178  0095                     	;# 
  3179  0096                     	;# 
  3180  0097                     	;# 
  3181  0098                     	;# 
  3182  0099                     	;# 
  3183  009A                     	;# 
  3184  009B                     	;# 
  3185  009C                     	;# 
  3186  009D                     	;# 
  3187  009E                     	;# 
  3188  010C                     	;# 
  3189  010D                     	;# 
  3190  010E                     	;# 
  3191  010E                     	;# 
  3192  010F                     	;# 
  3193  0110                     	;# 
  3194  0110                     	;# 
  3195  0111                     	;# 
  3196  0112                     	;# 
  3197  0112                     	;# 
  3198  0113                     	;# 
  3199  0114                     	;# 
  3200  0114                     	;# 
  3201  0115                     	;# 
  3202  0116                     	;# 
  3203  0116                     	;# 
  3204  0117                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  018C                     	;# 
  3231  018D                     	;# 
  3232  018E                     	;# 
  3233  018F                     	;# 
  3234  0190                     	;# 
  3235  0191                     	;# 
  3236  0192                     	;# 
  3237  0196                     	;# 
  3238  0197                     	;# 
  3239  0198                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019B                     	;# 
  3243  019C                     	;# 
  3244  020C                     	;# 
  3245  020D                     	;# 
  3246  020E                     	;# 
  3247  020F                     	;# 
  3248  020F                     	;# 
  3249  0210                     	;# 
  3250  0210                     	;# 
  3251  0211                     	;# 
  3252  0211                     	;# 
  3253  0212                     	;# 
  3254  0213                     	;# 
  3255  0214                     	;# 
  3256  0215                     	;# 
  3257  0215                     	;# 
  3258  0216                     	;# 
  3259  0216                     	;# 
  3260  0217                     	;# 
  3261  0217                     	;# 
  3262  0218                     	;# 
  3263  0219                     	;# 
  3264  021A                     	;# 
  3265  021B                     	;# 
  3266  021B                     	;# 
  3267  021C                     	;# 
  3268  021C                     	;# 
  3269  021D                     	;# 
  3270  021D                     	;# 
  3271  021E                     	;# 
  3272  021F                     	;# 
  3273  028C                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028D                     	;# 
  3277  028E                     	;# 
  3278  028F                     	;# 
  3279  0290                     	;# 
  3280  0290                     	;# 
  3281  0291                     	;# 
  3282  0292                     	;# 
  3283  0292                     	;# 
  3284  0293                     	;# 
  3285  0293                     	;# 
  3286  0294                     	;# 
  3287  0295                     	;# 
  3288  0296                     	;# 
  3289  0296                     	;# 
  3290  0297                     	;# 
  3291  0298                     	;# 
  3292  0298                     	;# 
  3293  0299                     	;# 
  3294  0299                     	;# 
  3295  029A                     	;# 
  3296  029B                     	;# 
  3297  029C                     	;# 
  3298  029C                     	;# 
  3299  029D                     	;# 
  3300  030C                     	;# 
  3301  030C                     	;# 
  3302  030D                     	;# 
  3303  030E                     	;# 
  3304  030F                     	;# 
  3305  0310                     	;# 
  3306  0310                     	;# 
  3307  0311                     	;# 
  3308  0312                     	;# 
  3309  0313                     	;# 
  3310  0314                     	;# 
  3311  0314                     	;# 
  3312  0315                     	;# 
  3313  0316                     	;# 
  3314  0317                     	;# 
  3315  0318                     	;# 
  3316  0318                     	;# 
  3317  0319                     	;# 
  3318  031A                     	;# 
  3319  031B                     	;# 
  3320  031C                     	;# 
  3321  031C                     	;# 
  3322  031D                     	;# 
  3323  031E                     	;# 
  3324  031F                     	;# 
  3325  038C                     	;# 
  3326  038D                     	;# 
  3327  038E                     	;# 
  3328  0390                     	;# 
  3329  0391                     	;# 
  3330  0392                     	;# 
  3331  040C                     	;# 
  3332  040D                     	;# 
  3333  040E                     	;# 
  3334  040F                     	;# 
  3335  0410                     	;# 
  3336  0411                     	;# 
  3337  0416                     	;# 
  3338  0416                     	;# 
  3339  0417                     	;# 
  3340  0418                     	;# 
  3341  0418                     	;# 
  3342  0419                     	;# 
  3343  041A                     	;# 
  3344  041A                     	;# 
  3345  041B                     	;# 
  3346  041C                     	;# 
  3347  041C                     	;# 
  3348  041D                     	;# 
  3349  041E                     	;# 
  3350  041F                     	;# 
  3351  048C                     	;# 
  3352  048C                     	;# 
  3353  048D                     	;# 
  3354  048E                     	;# 
  3355  048F                     	;# 
  3356  048F                     	;# 
  3357  0490                     	;# 
  3358  0491                     	;# 
  3359  0492                     	;# 
  3360  0492                     	;# 
  3361  0493                     	;# 
  3362  0494                     	;# 
  3363  0495                     	;# 
  3364  0495                     	;# 
  3365  0496                     	;# 
  3366  0497                     	;# 
  3367  0498                     	;# 
  3368  0499                     	;# 
  3369  049A                     	;# 
  3370  049B                     	;# 
  3371  049C                     	;# 
  3372  049D                     	;# 
  3373  050C                     	;# 
  3374  050C                     	;# 
  3375  050D                     	;# 
  3376  050E                     	;# 
  3377  050F                     	;# 
  3378  050F                     	;# 
  3379  0510                     	;# 
  3380  0511                     	;# 
  3381  0512                     	;# 
  3382  0512                     	;# 
  3383  0513                     	;# 
  3384  0514                     	;# 
  3385  0515                     	;# 
  3386  0515                     	;# 
  3387  0516                     	;# 
  3388  0517                     	;# 
  3389  0518                     	;# 
  3390  0519                     	;# 
  3391  051A                     	;# 
  3392  051B                     	;# 
  3393  051C                     	;# 
  3394  051D                     	;# 
  3395  058C                     	;# 
  3396  058C                     	;# 
  3397  058D                     	;# 
  3398  058E                     	;# 
  3399  058F                     	;# 
  3400  058F                     	;# 
  3401  0590                     	;# 
  3402  0591                     	;# 
  3403  0592                     	;# 
  3404  0593                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  0616                     	;# 
  3415  0617                     	;# 
  3416  0618                     	;# 
  3417  0619                     	;# 
  3418  061A                     	;# 
  3419  061B                     	;# 
  3420  061C                     	;# 
  3421  061D                     	;# 
  3422  061E                     	;# 
  3423  068C                     	;# 
  3424  068D                     	;# 
  3425  068E                     	;# 
  3426  068F                     	;# 
  3427  0690                     	;# 
  3428  0691                     	;# 
  3429  0692                     	;# 
  3430  0693                     	;# 
  3431  0694                     	;# 
  3432  070C                     	;# 
  3433  070D                     	;# 
  3434  070E                     	;# 
  3435  070F                     	;# 
  3436  0710                     	;# 
  3437  0711                     	;# 
  3438  0712                     	;# 
  3439  0713                     	;# 
  3440  0714                     	;# 
  3441  0716                     	;# 
  3442  0717                     	;# 
  3443  0718                     	;# 
  3444  0719                     	;# 
  3445  071A                     	;# 
  3446  071B                     	;# 
  3447  071C                     	;# 
  3448  071D                     	;# 
  3449  071E                     	;# 
  3450  0796                     	;# 
  3451  0797                     	;# 
  3452  0798                     	;# 
  3453  0799                     	;# 
  3454  079A                     	;# 
  3455  079B                     	;# 
  3456  080C                     	;# 
  3457  080D                     	;# 
  3458  080E                     	;# 
  3459  080F                     	;# 
  3460  0810                     	;# 
  3461  0811                     	;# 
  3462  0812                     	;# 
  3463  0813                     	;# 
  3464  0814                     	;# 
  3465  081A                     	;# 
  3466  081B                     	;# 
  3467  081C                     	;# 
  3468  081D                     	;# 
  3469  081E                     	;# 
  3470  081F                     	;# 
  3471  088C                     	;# 
  3472  088D                     	;# 
  3473  088E                     	;# 
  3474  088F                     	;# 
  3475  0890                     	;# 
  3476  0891                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0895                     	;# 
  3480  0896                     	;# 
  3481  0897                     	;# 
  3482  0898                     	;# 
  3483  0899                     	;# 
  3484  089A                     	;# 
  3485  089B                     	;# 
  3486  090C                     	;# 
  3487  090E                     	;# 
  3488  090F                     	;# 
  3489  091F                     	;# 
  3490  091F                     	;# 
  3491  098F                     	;# 
  3492  098F                     	;# 
  3493  0990                     	;# 
  3494  0991                     	;# 
  3495  0992                     	;# 
  3496  0993                     	;# 
  3497  0994                     	;# 
  3498  0995                     	;# 
  3499  0996                     	;# 
  3500  0997                     	;# 
  3501  0E0F                     	;# 
  3502  0E10                     	;# 
  3503  0E11                     	;# 
  3504  0E12                     	;# 
  3505  0E13                     	;# 
  3506  0E14                     	;# 
  3507  0E15                     	;# 
  3508  0E16                     	;# 
  3509  0E17                     	;# 
  3510  0E18                     	;# 
  3511  0E19                     	;# 
  3512  0E1A                     	;# 
  3513  0E1B                     	;# 
  3514  0E1C                     	;# 
  3515  0E1D                     	;# 
  3516  0E1E                     	;# 
  3517  0E1F                     	;# 
  3518  0E20                     	;# 
  3519  0E21                     	;# 
  3520  0E22                     	;# 
  3521  0E23                     	;# 
  3522  0E24                     	;# 
  3523  0E25                     	;# 
  3524  0E26                     	;# 
  3525  0E27                     	;# 
  3526  0E28                     	;# 
  3527  0E29                     	;# 
  3528  0E2A                     	;# 
  3529  0E2B                     	;# 
  3530  0E2C                     	;# 
  3531  0E2D                     	;# 
  3532  0E2E                     	;# 
  3533  0E2F                     	;# 
  3534  0E30                     	;# 
  3535  0E31                     	;# 
  3536  0E32                     	;# 
  3537  0E33                     	;# 
  3538  0E34                     	;# 
  3539  0E35                     	;# 
  3540  0E36                     	;# 
  3541  0E37                     	;# 
  3542  0E8F                     	;# 
  3543  0E90                     	;# 
  3544  0E91                     	;# 
  3545  0E92                     	;# 
  3546  0E93                     	;# 
  3547  0E94                     	;# 
  3548  0E95                     	;# 
  3549  0E96                     	;# 
  3550  0E97                     	;# 
  3551  0E9C                     	;# 
  3552  0E9D                     	;# 
  3553  0E9E                     	;# 
  3554  0EA1                     	;# 
  3555  0EA2                     	;# 
  3556  0EA3                     	;# 
  3557  0EA4                     	;# 
  3558  0EA5                     	;# 
  3559  0EA9                     	;# 
  3560  0EAA                     	;# 
  3561  0EAB                     	;# 
  3562  0EAC                     	;# 
  3563  0EB1                     	;# 
  3564  0EB2                     	;# 
  3565  0EB3                     	;# 
  3566  0EB8                     	;# 
  3567  0EB9                     	;# 
  3568  0EBA                     	;# 
  3569  0EBB                     	;# 
  3570  0EBC                     	;# 
  3571  0EBD                     	;# 
  3572  0EBE                     	;# 
  3573  0EC3                     	;# 
  3574  0EC5                     	;# 
  3575  0EC6                     	;# 
  3576  0EC7                     	;# 
  3577  0EC8                     	;# 
  3578  0EC9                     	;# 
  3579  0ECA                     	;# 
  3580  0ECB                     	;# 
  3581  0ECC                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F38                     	;# 
  3607  0F39                     	;# 
  3608  0F3A                     	;# 
  3609  0F3B                     	;# 
  3610  0F3C                     	;# 
  3611  0F3D                     	;# 
  3612  0F3E                     	;# 
  3613  0F3F                     	;# 
  3614  0F40                     	;# 
  3615  0F41                     	;# 
  3616  0F43                     	;# 
  3617  0F44                     	;# 
  3618  0F45                     	;# 
  3619  0F46                     	;# 
  3620  0F47                     	;# 
  3621  0F48                     	;# 
  3622  0F49                     	;# 
  3623  0F4A                     	;# 
  3624  0F4B                     	;# 
  3625  0F4C                     	;# 
  3626  0F4E                     	;# 
  3627  0F4F                     	;# 
  3628  0F50                     	;# 
  3629  0F51                     	;# 
  3630  0F52                     	;# 
  3631  0F53                     	;# 
  3632  0F54                     	;# 
  3633  0F55                     	;# 
  3634  0F56                     	;# 
  3635  0F57                     	;# 
  3636  0F65                     	;# 
  3637  0F68                     	;# 
  3638  0F69                     	;# 
  3639  0F6A                     	;# 
  3640  0F6B                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEF                     	;# 
  3652  0000                     	;# 
  3653  0001                     	;# 
  3654  0002                     	;# 
  3655  0003                     	;# 
  3656  0004                     	;# 
  3657  0005                     	;# 
  3658  0006                     	;# 
  3659  0007                     	;# 
  3660  0008                     	;# 
  3661  0009                     	;# 
  3662  000A                     	;# 
  3663  000B                     	;# 
  3664  000C                     	;# 
  3665  000D                     	;# 
  3666  000E                     	;# 
  3667  0010                     	;# 
  3668  0011                     	;# 
  3669  0012                     	;# 
  3670  0013                     	;# 
  3671  0016                     	;# 
  3672  0017                     	;# 
  3673  0018                     	;# 
  3674  001C                     	;# 
  3675  001C                     	;# 
  3676  001D                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  008E                     	;# 
  3685  008F                     	;# 
  3686  0090                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0095                     	;# 
  3692  0096                     	;# 
  3693  0097                     	;# 
  3694  0098                     	;# 
  3695  0099                     	;# 
  3696  009A                     	;# 
  3697  009B                     	;# 
  3698  009C                     	;# 
  3699  009D                     	;# 
  3700  009E                     	;# 
  3701  010C                     	;# 
  3702  010D                     	;# 
  3703  010E                     	;# 
  3704  010E                     	;# 
  3705  010F                     	;# 
  3706  0110                     	;# 
  3707  0110                     	;# 
  3708  0111                     	;# 
  3709  0112                     	;# 
  3710  0112                     	;# 
  3711  0113                     	;# 
  3712  0114                     	;# 
  3713  0114                     	;# 
  3714  0115                     	;# 
  3715  0116                     	;# 
  3716  0116                     	;# 
  3717  0117                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  018C                     	;# 
  3744  018D                     	;# 
  3745  018E                     	;# 
  3746  018F                     	;# 
  3747  0190                     	;# 
  3748  0191                     	;# 
  3749  0192                     	;# 
  3750  0196                     	;# 
  3751  0197                     	;# 
  3752  0198                     	;# 
  3753  0199                     	;# 
  3754  019A                     	;# 
  3755  019B                     	;# 
  3756  019C                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  020F                     	;# 
  3761  020F                     	;# 
  3762  0210                     	;# 
  3763  0210                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0214                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0216                     	;# 
  3772  0216                     	;# 
  3773  0217                     	;# 
  3774  0217                     	;# 
  3775  0218                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021B                     	;# 
  3780  021C                     	;# 
  3781  021C                     	;# 
  3782  021D                     	;# 
  3783  021D                     	;# 
  3784  021E                     	;# 
  3785  021F                     	;# 
  3786  028C                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  028F                     	;# 
  3792  0290                     	;# 
  3793  0290                     	;# 
  3794  0291                     	;# 
  3795  0292                     	;# 
  3796  0292                     	;# 
  3797  0293                     	;# 
  3798  0293                     	;# 
  3799  0294                     	;# 
  3800  0295                     	;# 
  3801  0296                     	;# 
  3802  0296                     	;# 
  3803  0297                     	;# 
  3804  0298                     	;# 
  3805  0298                     	;# 
  3806  0299                     	;# 
  3807  0299                     	;# 
  3808  029A                     	;# 
  3809  029B                     	;# 
  3810  029C                     	;# 
  3811  029C                     	;# 
  3812  029D                     	;# 
  3813  030C                     	;# 
  3814  030C                     	;# 
  3815  030D                     	;# 
  3816  030E                     	;# 
  3817  030F                     	;# 
  3818  0310                     	;# 
  3819  0310                     	;# 
  3820  0311                     	;# 
  3821  0312                     	;# 
  3822  0313                     	;# 
  3823  0314                     	;# 
  3824  0314                     	;# 
  3825  0315                     	;# 
  3826  0316                     	;# 
  3827  0317                     	;# 
  3828  0318                     	;# 
  3829  0318                     	;# 
  3830  0319                     	;# 
  3831  031A                     	;# 
  3832  031B                     	;# 
  3833  031C                     	;# 
  3834  031C                     	;# 
  3835  031D                     	;# 
  3836  031E                     	;# 
  3837  031F                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0390                     	;# 
  3842  0391                     	;# 
  3843  0392                     	;# 
  3844  040C                     	;# 
  3845  040D                     	;# 
  3846  040E                     	;# 
  3847  040F                     	;# 
  3848  0410                     	;# 
  3849  0411                     	;# 
  3850  0416                     	;# 
  3851  0416                     	;# 
  3852  0417                     	;# 
  3853  0418                     	;# 
  3854  0418                     	;# 
  3855  0419                     	;# 
  3856  041A                     	;# 
  3857  041A                     	;# 
  3858  041B                     	;# 
  3859  041C                     	;# 
  3860  041C                     	;# 
  3861  041D                     	;# 
  3862  041E                     	;# 
  3863  041F                     	;# 
  3864  048C                     	;# 
  3865  048C                     	;# 
  3866  048D                     	;# 
  3867  048E                     	;# 
  3868  048F                     	;# 
  3869  048F                     	;# 
  3870  0490                     	;# 
  3871  0491                     	;# 
  3872  0492                     	;# 
  3873  0492                     	;# 
  3874  0493                     	;# 
  3875  0494                     	;# 
  3876  0495                     	;# 
  3877  0495                     	;# 
  3878  0496                     	;# 
  3879  0497                     	;# 
  3880  0498                     	;# 
  3881  0499                     	;# 
  3882  049A                     	;# 
  3883  049B                     	;# 
  3884  049C                     	;# 
  3885  049D                     	;# 
  3886  050C                     	;# 
  3887  050C                     	;# 
  3888  050D                     	;# 
  3889  050E                     	;# 
  3890  050F                     	;# 
  3891  050F                     	;# 
  3892  0510                     	;# 
  3893  0511                     	;# 
  3894  0512                     	;# 
  3895  0512                     	;# 
  3896  0513                     	;# 
  3897  0514                     	;# 
  3898  0515                     	;# 
  3899  0515                     	;# 
  3900  0516                     	;# 
  3901  0517                     	;# 
  3902  0518                     	;# 
  3903  0519                     	;# 
  3904  051A                     	;# 
  3905  051B                     	;# 
  3906  051C                     	;# 
  3907  051D                     	;# 
  3908  058C                     	;# 
  3909  058C                     	;# 
  3910  058D                     	;# 
  3911  058E                     	;# 
  3912  058F                     	;# 
  3913  058F                     	;# 
  3914  0590                     	;# 
  3915  0591                     	;# 
  3916  0592                     	;# 
  3917  0593                     	;# 
  3918  060C                     	;# 
  3919  060D                     	;# 
  3920  060E                     	;# 
  3921  060F                     	;# 
  3922  0610                     	;# 
  3923  0611                     	;# 
  3924  0612                     	;# 
  3925  0613                     	;# 
  3926  0614                     	;# 
  3927  0616                     	;# 
  3928  0617                     	;# 
  3929  0618                     	;# 
  3930  0619                     	;# 
  3931  061A                     	;# 
  3932  061B                     	;# 
  3933  061C                     	;# 
  3934  061D                     	;# 
  3935  061E                     	;# 
  3936  068C                     	;# 
  3937  068D                     	;# 
  3938  068E                     	;# 
  3939  068F                     	;# 
  3940  0690                     	;# 
  3941  0691                     	;# 
  3942  0692                     	;# 
  3943  0693                     	;# 
  3944  0694                     	;# 
  3945  070C                     	;# 
  3946  070D                     	;# 
  3947  070E                     	;# 
  3948  070F                     	;# 
  3949  0710                     	;# 
  3950  0711                     	;# 
  3951  0712                     	;# 
  3952  0713                     	;# 
  3953  0714                     	;# 
  3954  0716                     	;# 
  3955  0717                     	;# 
  3956  0718                     	;# 
  3957  0719                     	;# 
  3958  071A                     	;# 
  3959  071B                     	;# 
  3960  071C                     	;# 
  3961  071D                     	;# 
  3962  071E                     	;# 
  3963  0796                     	;# 
  3964  0797                     	;# 
  3965  0798                     	;# 
  3966  0799                     	;# 
  3967  079A                     	;# 
  3968  079B                     	;# 
  3969  080C                     	;# 
  3970  080D                     	;# 
  3971  080E                     	;# 
  3972  080F                     	;# 
  3973  0810                     	;# 
  3974  0811                     	;# 
  3975  0812                     	;# 
  3976  0813                     	;# 
  3977  0814                     	;# 
  3978  081A                     	;# 
  3979  081B                     	;# 
  3980  081C                     	;# 
  3981  081D                     	;# 
  3982  081E                     	;# 
  3983  081F                     	;# 
  3984  088C                     	;# 
  3985  088D                     	;# 
  3986  088E                     	;# 
  3987  088F                     	;# 
  3988  0890                     	;# 
  3989  0891                     	;# 
  3990  0892                     	;# 
  3991  0893                     	;# 
  3992  0895                     	;# 
  3993  0896                     	;# 
  3994  0897                     	;# 
  3995  0898                     	;# 
  3996  0899                     	;# 
  3997  089A                     	;# 
  3998  089B                     	;# 
  3999  090C                     	;# 
  4000  090E                     	;# 
  4001  090F                     	;# 
  4002  091F                     	;# 
  4003  091F                     	;# 
  4004  098F                     	;# 
  4005  098F                     	;# 
  4006  0990                     	;# 
  4007  0991                     	;# 
  4008  0992                     	;# 
  4009  0993                     	;# 
  4010  0994                     	;# 
  4011  0995                     	;# 
  4012  0996                     	;# 
  4013  0997                     	;# 
  4014  0E0F                     	;# 
  4015  0E10                     	;# 
  4016  0E11                     	;# 
  4017  0E12                     	;# 
  4018  0E13                     	;# 
  4019  0E14                     	;# 
  4020  0E15                     	;# 
  4021  0E16                     	;# 
  4022  0E17                     	;# 
  4023  0E18                     	;# 
  4024  0E19                     	;# 
  4025  0E1A                     	;# 
  4026  0E1B                     	;# 
  4027  0E1C                     	;# 
  4028  0E1D                     	;# 
  4029  0E1E                     	;# 
  4030  0E1F                     	;# 
  4031  0E20                     	;# 
  4032  0E21                     	;# 
  4033  0E22                     	;# 
  4034  0E23                     	;# 
  4035  0E24                     	;# 
  4036  0E25                     	;# 
  4037  0E26                     	;# 
  4038  0E27                     	;# 
  4039  0E28                     	;# 
  4040  0E29                     	;# 
  4041  0E2A                     	;# 
  4042  0E2B                     	;# 
  4043  0E2C                     	;# 
  4044  0E2D                     	;# 
  4045  0E2E                     	;# 
  4046  0E2F                     	;# 
  4047  0E30                     	;# 
  4048  0E31                     	;# 
  4049  0E32                     	;# 
  4050  0E33                     	;# 
  4051  0E34                     	;# 
  4052  0E35                     	;# 
  4053  0E36                     	;# 
  4054  0E37                     	;# 
  4055  0E8F                     	;# 
  4056  0E90                     	;# 
  4057  0E91                     	;# 
  4058  0E92                     	;# 
  4059  0E93                     	;# 
  4060  0E94                     	;# 
  4061  0E95                     	;# 
  4062  0E96                     	;# 
  4063  0E97                     	;# 
  4064  0E9C                     	;# 
  4065  0E9D                     	;# 
  4066  0E9E                     	;# 
  4067  0EA1                     	;# 
  4068  0EA2                     	;# 
  4069  0EA3                     	;# 
  4070  0EA4                     	;# 
  4071  0EA5                     	;# 
  4072  0EA9                     	;# 
  4073  0EAA                     	;# 
  4074  0EAB                     	;# 
  4075  0EAC                     	;# 
  4076  0EB1                     	;# 
  4077  0EB2                     	;# 
  4078  0EB3                     	;# 
  4079  0EB8                     	;# 
  4080  0EB9                     	;# 
  4081  0EBA                     	;# 
  4082  0EBB                     	;# 
  4083  0EBC                     	;# 
  4084  0EBD                     	;# 
  4085  0EBE                     	;# 
  4086  0EC3                     	;# 
  4087  0EC5                     	;# 
  4088  0EC6                     	;# 
  4089  0EC7                     	;# 
  4090  0EC8                     	;# 
  4091  0EC9                     	;# 
  4092  0ECA                     	;# 
  4093  0ECB                     	;# 
  4094  0ECC                     	;# 
  4095  0F10                     	;# 
  4096  0F11                     	;# 
  4097  0F12                     	;# 
  4098  0F13                     	;# 
  4099  0F14                     	;# 
  4100  0F15                     	;# 
  4101  0F16                     	;# 
  4102  0F17                     	;# 
  4103  0F18                     	;# 
  4104  0F19                     	;# 
  4105  0F1A                     	;# 
  4106  0F1B                     	;# 
  4107  0F1C                     	;# 
  4108  0F1D                     	;# 
  4109  0F1E                     	;# 
  4110  0F1F                     	;# 
  4111  0F20                     	;# 
  4112  0F21                     	;# 
  4113  0F22                     	;# 
  4114  0F23                     	;# 
  4115  0F24                     	;# 
  4116  0F25                     	;# 
  4117  0F26                     	;# 
  4118  0F27                     	;# 
  4119  0F38                     	;# 
  4120  0F39                     	;# 
  4121  0F3A                     	;# 
  4122  0F3B                     	;# 
  4123  0F3C                     	;# 
  4124  0F3D                     	;# 
  4125  0F3E                     	;# 
  4126  0F3F                     	;# 
  4127  0F40                     	;# 
  4128  0F41                     	;# 
  4129  0F43                     	;# 
  4130  0F44                     	;# 
  4131  0F45                     	;# 
  4132  0F46                     	;# 
  4133  0F47                     	;# 
  4134  0F48                     	;# 
  4135  0F49                     	;# 
  4136  0F4A                     	;# 
  4137  0F4B                     	;# 
  4138  0F4C                     	;# 
  4139  0F4E                     	;# 
  4140  0F4F                     	;# 
  4141  0F50                     	;# 
  4142  0F51                     	;# 
  4143  0F52                     	;# 
  4144  0F53                     	;# 
  4145  0F54                     	;# 
  4146  0F55                     	;# 
  4147  0F56                     	;# 
  4148  0F57                     	;# 
  4149  0F65                     	;# 
  4150  0F68                     	;# 
  4151  0F69                     	;# 
  4152  0F6A                     	;# 
  4153  0F6B                     	;# 
  4154  0FE4                     	;# 
  4155  0FE5                     	;# 
  4156  0FE6                     	;# 
  4157  0FE7                     	;# 
  4158  0FE8                     	;# 
  4159  0FE9                     	;# 
  4160  0FEA                     	;# 
  4161  0FEB                     	;# 
  4162  0FED                     	;# 
  4163  0FEE                     	;# 
  4164  0FEF                     	;_samples
  4165                           
  4166                           	psect	idataBANK0
  4167  0917                     __pidataBANK0:	
  4168                           
  4169                           ;initializer for _presets
  4170  0917  3400               	retlw	0
  4171  0918  3446               	retlw	70
  4172  0919  345F               	retlw	95
  4173  091A  3469               	retlw	105
  4174  091B  3478               	retlw	120
  4175                           
  4176                           ;initializer for _setpoint
  4177  091C  3446               	retlw	70
  4178                           
  4179                           	psect	idataBANK1
  4180  09D9                     __pidataBANK1:	
  4181                           
  4182                           ;initializer for ___cgram
  4183  09D9  340C               	retlw	12
  4184  09DA  3412               	retlw	18
  4185  09DB  3412               	retlw	18
  4186  09DC  340C               	retlw	12
  4187  09DD  3400               	retlw	0
  4188  09DE  3400               	retlw	0
  4189  09DF  3400               	retlw	0
  4190  09E0  3400               	retlw	0
  4191  09E1  340A               	retlw	10
  4192  09E2  3415               	retlw	21
  4193  09E3  3411               	retlw	17
  4194  09E4  340A               	retlw	10
  4195  09E5  3404               	retlw	4
  4196  09E6  3400               	retlw	0
  4197  09E7  3400               	retlw	0
  4198  09E8  3400               	retlw	0
  4199  09E9  340A               	retlw	10
  4200  09EA  341F               	retlw	31
  4201  09EB  341F               	retlw	31
  4202  09EC  340E               	retlw	14
  4203  09ED  3404               	retlw	4
  4204  09EE  3400               	retlw	0
  4205  09EF  3400               	retlw	0
  4206  09F0  3400               	retlw	0
  4207                           
  4208                           	psect	stringtext
  4209  1000                     __pstringtext:	
  4210  1000                     log@coeff:	
  4211  1000  3400               	retlw	0
  4212  1001  3400               	retlw	0
  4213  1002  3400               	retlw	0
  4214  1003  3400               	retlw	0
  4215  1004  3480               	retlw	128
  4216  1005  343F               	retlw	63
  4217  1006  34F0               	retlw	240
  4218  1007  34FF               	retlw	255
  4219  1008  34BE               	retlw	190
  4220  1009  34E2               	retlw	226
  4221  100A  34A9               	retlw	169
  4222  100B  343E               	retlw	62
  4223  100C  3483               	retlw	131
  4224  100D  3476               	retlw	118
  4225  100E  34BE               	retlw	190
  4226  100F  34AE               	retlw	174
  4227  1010  342B               	retlw	43
  4228  1011  343E               	retlw	62
  4229  1012  343C               	retlw	60
  4230  1013  34C3               	retlw	195
  4231  1014  34BD               	retlw	189
  4232  1015  34D2               	retlw	210
  4233  1016  3413               	retlw	19
  4234  1017  343D               	retlw	61
  4235  1018  3478               	retlw	120
  4236  1019  34D3               	retlw	211
  4237  101A  34BB               	retlw	187
  4238  101B                     __end_oflog@coeff:	
  4239  0016                     _LATA	set	22
  4240  0017                     _LATB	set	23
  4241  0018                     _LATC	set	24
  4242  001E                     _T0CON0	set	30
  4243  001E                     _T0CON0bits	set	30
  4244  001F                     _T0CON1	set	31
  4245  001D                     _TMR0H	set	29
  4246  001C                     _TMR0L	set	28
  4247  0011                     _TRISA	set	17
  4248  0012                     _TRISB	set	18
  4249  0013                     _TRISC	set	19
  4250  005F                     _GIE	set	95
  4251  0063                     _RA3	set	99
  4252  0064                     _RA4	set	100
  4253  0068                     _RB0	set	104
  4254  0069                     _RB1	set	105
  4255  006A                     _RB2	set	106
  4256  006B                     _RB3	set	107
  4257  006C                     _RB4	set	108
  4258  006D                     _RB5	set	109
  4259  009D                     _ADACQ	set	157
  4260  0099                     _ADACT	set	153
  4261  009B                     _ADCAP	set	155
  4262  0098                     _ADCLK	set	152
  4263  0093                     _ADCON0	set	147
  4264  0093                     _ADCON0bits	set	147
  4265  0094                     _ADCON1	set	148
  4266  0095                     _ADCON2	set	149
  4267  0096                     _ADCON3	set	150
  4268  009E                     _ADPCH	set	158
  4269  009C                     _ADPRE	set	156
  4270  009A                     _ADREF	set	154
  4271  008D                     _ADRESH	set	141
  4272  008C                     _ADRESL	set	140
  4273  0097                     _ADSTAT	set	151
  4274  010F                     _ADLTHH	set	271
  4275  010E                     _ADLTHL	set	270
  4276  010D                     _ADRPT	set	269
  4277  0113                     _ADSTPTH	set	275
  4278  0112                     _ADSTPTL	set	274
  4279  0111                     _ADUTHH	set	273
  4280  0110                     _ADUTHL	set	272
  4281  021F                     _CCPTMRS1bits	set	543
  4282  0290                     _T2CLKCON	set	656
  4283  028E                     _T2CON	set	654
  4284  028E                     _T2CONbits	set	654
  4285  028F                     _T2HLT	set	655
  4286  028D                     _T2PR	set	653
  4287  0291                     _T2RST	set	657
  4288  028C                     _T2TMR	set	652
  4289  038E                     _PWM6CON	set	910
  4290  038D                     _PWM6DCH	set	909
  4291  038C                     _PWM6DCL	set	908
  4292  0716                     _PIE0bits	set	1814
  4293  070C                     _PIR0bits	set	1804
  4294  0710                     _PIR4bits	set	1808
  4295  3865                     _TMR0IF	set	14437
  4296  088D                     _OSCCON1	set	2189
  4297  088F                     _OSCCON3	set	2191
  4298  0891                     _OSCEN	set	2193
  4299  0893                     _OSCFRQ	set	2195
  4300  0892                     _OSCTUNE	set	2194
  4301  090C                     _FVRCON	set	2316
  4302  0E8F                     _PPSLOCK	set	3727
  4303  0E8F                     _PPSLOCKbits	set	3727
  4304  0F38                     _ANSELA	set	3896
  4305  0F43                     _ANSELB	set	3907
  4306  0F4E                     _ANSELC	set	3918
  4307  0F11                     _RA1PPS	set	3857
  4308  0F39                     _WPUA	set	3897
  4309  0F44                     _WPUB	set	3908
  4310  0F4F                     _WPUC	set	3919
  4311  0F65                     _WPUE	set	3941
  4312  101B                     STR_1:	
  4313  101B  3453               	retlw	83	;'S'
  4314  101C  3465               	retlw	101	;'e'
  4315  101D  3474               	retlw	116	;'t'
  4316  101E  3470               	retlw	112	;'p'
  4317  101F  346F               	retlw	111	;'o'
  4318  1020  3469               	retlw	105	;'i'
  4319  1021  346E               	retlw	110	;'n'
  4320  1022  3474               	retlw	116	;'t'
  4321  1023  343F               	retlw	63	;'?'
  4322  1024  3400               	retlw	0
  4323  1025                     STR_4:	
  4324  1025  3454               	retlw	84	;'T'
  4325  1026  3469               	retlw	105	;'i'
  4326  1027  346D               	retlw	109	;'m'
  4327  1028  3465               	retlw	101	;'e'
  4328  1029  343A               	retlw	58	;':'
  4329  102A  3400               	retlw	0
  4330  101B                     
  4331                           ; #config settings
  4332  0000                     
  4333                           	psect	cinit
  4334  07C9                     start_initialization:	
  4335  07C9                     __initialization:		;BIGRAM
  4336                           
  4337                           ; Initialize objects allocated to BANK0
  4338  07C9  3017               	movlw	low __pidataBANK0
  4339  07CA  0084               	movwf	4
  4340  07CB  3089               	movlw	(high __pidataBANK0)| (0+128)
  4341  07CC  0085               	movwf	5
  4342  07CD  3063               	movlw	low __pdataBANK0
  4343  07CE  0086               	movwf	6
  4344  07CF  3000               	movlw	high __pdataBANK0
  4345  07D0  0087               	movwf	7
  4346  07D1  3000               	movlw	0
  4347  07D2  00FF               	movwf	btemp+1
  4348  07D3  3006               	movlw	6
  4349  07D4  3189  2141  3187   	fcall	init_ram
  4350                           
  4351                           ; Initialize objects allocated to BANK1
  4352  07D7  30D9               	movlw	low __pidataBANK1
  4353  07D8  0084               	movwf	4
  4354  07D9  3089               	movlw	(high __pidataBANK1)| (0+128)
  4355  07DA  0085               	movwf	5
  4356  07DB  30BE               	movlw	low __pdataBANK1
  4357  07DC  0086               	movwf	6
  4358  07DD  3000               	movlw	high __pdataBANK1
  4359  07DE  0087               	movwf	7
  4360  07DF  3000               	movlw	0
  4361  07E0  00FF               	movwf	btemp+1
  4362  07E1  3018               	movlw	24
  4363  07E2  3189  2141  3187   	fcall	init_ram
  4364                           
  4365                           ; Clear objects allocated to BIGRAM
  4366  07E5  308C               	movlw	low (0+9100)
  4367  07E6  0084               	movwf	4
  4368  07E7  3023               	movlw	high (0+9100)
  4369  07E8  0085               	movwf	5
  4370  07E9  3064               	movlw	100
  4371  07EA  00FE               	movwf	btemp
  4372  07EB  3000               	movlw	0
  4373  07EC  00FF               	movwf	btemp+1
  4374  07ED  3189  2135  3187   	fcall	clear_ram0
  4375                           
  4376                           ; Clear objects allocated to BANK0
  4377  07F0  3057               	movlw	low __pbssBANK0
  4378  07F1  0084               	movwf	4
  4379  07F2  3000               	movlw	high __pbssBANK0
  4380  07F3  0085               	movwf	5
  4381  07F4  300C               	movlw	12
  4382  07F5  00FE               	movwf	btemp
  4383  07F6  3000               	movlw	0
  4384  07F7  00FF               	movwf	btemp+1
  4385  07F8  3189  2135         	fcall	clear_ram0
  4386                           
  4387                           ; Clear objects allocated to BANK1
  4388  07FA  0021               	movlb	1	; select bank1
  4389  07FB  01D6               	clrf	__pbssBANK1& (0+127)
  4390  07FC  01D7               	clrf	(__pbssBANK1+1)& (0+127)
  4391  07FD                     end_of_initialization:	
  4392                           ;End of C runtime variable initialization code
  4393                           
  4394  07FD                     __end_of__initialization:	
  4395  07FD  0020               	movlb	0
  4396  07FE  3184  2C26         	ljmp	_main	;jump to C main() function
  4397                           
  4398                           	psect	bssBANK0
  4399  0057                     __pbssBANK0:	
  4400  0057                     LCD_Write_Int@F13685:	
  4401  0057                     	ds	5
  4402  005C                     _errno:	
  4403  005C                     	ds	2
  4404  005E                     _downCount:	
  4405  005E                     	ds	1
  4406  005F                     _oldSetpoint:	
  4407  005F                     	ds	1
  4408  0060                     _toggleCount:	
  4409  0060                     	ds	1
  4410  0061                     _upCount:	
  4411  0061                     	ds	1
  4412  0062                     _x:	
  4413  0062                     	ds	1
  4414                           
  4415                           	psect	dataBANK0
  4416  0063                     __pdataBANK0:	
  4417  0063                     _presets:	
  4418  0063                     	ds	5
  4419  0068                     _setpoint:	
  4420  0068                     	ds	1
  4421                           
  4422                           	psect	bssBANK1
  4423  00D6                     __pbssBANK1:	
  4424  00D6                     main@sampleIndex:	
  4425  00D6                     	ds	2
  4426                           
  4427                           	psect	dataBANK1
  4428  00BE                     __pdataBANK1:	
  4429  00BE                     ___cgram:	
  4430  00BE                     	ds	24
  4431                           
  4432                           	psect	inittext
  4433  0941                     init_ram:	
  4434  0941  00FE               	movwf	126
  4435  0942                     initloop:	
  4436  0942  0012               	moviw fsr0++
  4437  0943  001E               	movwi fsr1++
  4438  0944  3001               	movlw	1
  4439  0945  02FE               	subwf	126,f
  4440  0946  3000               	movlw	0
  4441  0947  3BFF               	subwfb	127,f
  4442  0948  087F               	movf	127,w
  4443  0949  047E               	iorwf	126,w
  4444  094A  1903               	btfsc	3,2
  4445  094B  3400               	retlw	0
  4446  094C  2942               	goto	initloop
  4447                           
  4448                           	psect	clrtext
  4449  0935                     clear_ram0:	
  4450                           ;	Called with FSR0 containing the base address, and
  4451                           ;	btemp/btemp+1 has the size to clear
  4452                           
  4453  0935  0064               	clrwdt	;clear the watchdog before getting into this loop
  4454  0936                     clrloop0:	
  4455  0936  0180               	clrf	0	;clear RAM location pointed to by FSR
  4456  0937  3101               	addfsr 0,1
  4457  0938  3001               	movlw	1
  4458  0939  02FE               	subwf	126,f
  4459  093A  3000               	movlw	0
  4460  093B  3BFF               	subwfb	127,f
  4461  093C  087F               	movf	127,w
  4462  093D  047E               	iorwf	126,w
  4463  093E  1903               	btfsc	3,2
  4464  093F  3400               	retlw	0	;all done for this memory range, return
  4465  0940  2936               	goto	clrloop0	;have we reached the end yet?
  4466                           
  4467                           	psect	cstackBANK1
  4468  00A0                     __pcstackBANK1:	
  4469  00A0                     main@R:	
  4470                           
  4471                           ; 3 bytes @ 0x0
  4472  00A0                     	ds	3
  4473  00A3                     _main$1031:	
  4474                           
  4475                           ; 3 bytes @ 0x3
  4476  00A3                     	ds	3
  4477  00A6                     main@minutes:	
  4478                           
  4479                           ; 2 bytes @ 0x6
  4480  00A6                     	ds	2
  4481  00A8                     main@seconds:	
  4482                           
  4483                           ; 2 bytes @ 0x8
  4484  00A8                     	ds	2
  4485  00AA                     main@firstTimeThrough:	
  4486                           
  4487                           ; 1 bytes @ 0xA
  4488  00AA                     	ds	1
  4489  00AB                     main@counter:	
  4490                           
  4491                           ; 2 bytes @ 0xB
  4492  00AB                     	ds	2
  4493  00AD                     main@startupTimer:	
  4494                           
  4495                           ; 1 bytes @ 0xD
  4496  00AD                     	ds	1
  4497  00AE                     main@toggle:	
  4498                           
  4499                           ; 1 bytes @ 0xE
  4500  00AE                     	ds	1
  4501  00AF                     main@totals:	
  4502                           
  4503                           ; 4 bytes @ 0xF
  4504  00AF                     	ds	4
  4505  00B3                     main@readTemperatureOld:	
  4506                           
  4507                           ; 2 bytes @ 0x13
  4508  00B3                     	ds	2
  4509  00B5                     main@displayTemp:	
  4510                           
  4511                           ; 2 bytes @ 0x15
  4512  00B5                     	ds	2
  4513  00B7                     main@outCurrent:	
  4514                           
  4515                           ; 2 bytes @ 0x17
  4516  00B7                     	ds	2
  4517  00B9                     main@readTemperature:	
  4518                           
  4519                           ; 2 bytes @ 0x19
  4520  00B9                     	ds	2
  4521  00BB                     main@steinhart:	
  4522                           
  4523                           ; 3 bytes @ 0x1B
  4524  00BB                     	ds	3
  4525                           
  4526                           	psect	cstackCOMMON
  4527  0070                     __pcstackCOMMON:	
  4528  0070                     ?_OSCILLATOR_Initialize:	
  4529  0070                     ??_OSCILLATOR_Initialize:	
  4530                           ; 1 bytes @ 0x0
  4531                           
  4532  0070                     ?_ADCC_Initialize:	
  4533                           ; 1 bytes @ 0x0
  4534                           
  4535  0070                     ??_ADCC_Initialize:	
  4536                           ; 1 bytes @ 0x0
  4537                           
  4538  0070                     ?_PWM6_Initialize:	
  4539                           ; 1 bytes @ 0x0
  4540                           
  4541  0070                     ??_PWM6_Initialize:	
  4542                           ; 1 bytes @ 0x0
  4543                           
  4544  0070                     ?_TMR0_Initialize:	
  4545                           ; 1 bytes @ 0x0
  4546                           
  4547  0070                     ??_TMR0_Initialize:	
  4548                           ; 1 bytes @ 0x0
  4549                           
  4550  0070                     ?_TMR2_Initialize:	
  4551                           ; 1 bytes @ 0x0
  4552                           
  4553  0070                     ??_TMR2_Initialize:	
  4554                           ; 1 bytes @ 0x0
  4555                           
  4556  0070                     ?_LCD_Init:	
  4557                           ; 1 bytes @ 0x0
  4558                           
  4559  0070                     ?_LCD_Clear:	
  4560                           ; 1 bytes @ 0x0
  4561                           
  4562  0070                     ?_InitCustomChars:	
  4563                           ; 1 bytes @ 0x0
  4564                           
  4565  0070                     ?_LCD_Cmd:	
  4566                           ; 1 bytes @ 0x0
  4567                           
  4568  0070                     ?_LCD_Write_Char:	
  4569                           ; 1 bytes @ 0x0
  4570                           
  4571  0070                     ?_readButtons:	
  4572                           ; 1 bytes @ 0x0
  4573                           
  4574  0070                     ?_PIN_MANAGER_Initialize:	
  4575                           ; 1 bytes @ 0x0
  4576                           
  4577  0070                     ??_PIN_MANAGER_Initialize:	
  4578                           ; 1 bytes @ 0x0
  4579                           
  4580  0070                     ?_SYSTEM_Initialize:	
  4581                           ; 1 bytes @ 0x0
  4582                           
  4583  0070                     ?_LCD_Port:	
  4584                           ; 1 bytes @ 0x0
  4585                           
  4586  0070                     ??_LCD_Port:	
  4587                           ; 1 bytes @ 0x0
  4588                           
  4589  0070                     ?_PWM6_LoadDutyValue:	
  4590                           ; 1 bytes @ 0x0
  4591                           
  4592  0070                     ?_tempSetpoint:	
  4593                           ; 1 bytes @ 0x0
  4594                           
  4595  0070                     ?_main:	
  4596                           ; 1 bytes @ 0x0
  4597                           
  4598  0070                     ?_ADCC_GetSingleConversion:	
  4599                           ; 1 bytes @ 0x0
  4600                           
  4601  0070                     ?___awdiv:	
  4602                           ; 2 bytes @ 0x0
  4603                           
  4604  0070                     ?___awmod:	
  4605                           ; 2 bytes @ 0x0
  4606                           
  4607  0070                     ?___ftpack:	
  4608                           ; 2 bytes @ 0x0
  4609                           
  4610  0070                     ?_frexp:	
  4611                           ; 3 bytes @ 0x0
  4612                           
  4613  0070                     ?___ftneg:	
  4614                           ; 3 bytes @ 0x0
  4615                           
  4616  0070                     ?___aldiv:	
  4617                           ; 3 bytes @ 0x0
  4618                           
  4619  0070                     ?___fttol:	
  4620                           ; 4 bytes @ 0x0
  4621                           
  4622  0070                     PIN_MANAGER_Initialize@state:	
  4623                           ; 4 bytes @ 0x0
  4624                           
  4625  0070                     LCD_Port@a:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     PWM6_LoadDutyValue@dutyValue:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0070                     ___awdiv@divisor:	
  4632                           ; 2 bytes @ 0x0
  4633                           
  4634  0070                     ___awmod@divisor:	
  4635                           ; 2 bytes @ 0x0
  4636                           
  4637  0070                     ___ftpack@arg:	
  4638                           ; 2 bytes @ 0x0
  4639                           
  4640  0070                     ___ftneg@f1:	
  4641                           ; 3 bytes @ 0x0
  4642                           
  4643  0070                     ___fttol@f1:	
  4644                           ; 3 bytes @ 0x0
  4645                           
  4646  0070                     frexp@value:	
  4647                           ; 3 bytes @ 0x0
  4648                           
  4649  0070                     ___aldiv@divisor:	
  4650                           ; 3 bytes @ 0x0
  4651                           
  4652                           
  4653                           ; 4 bytes @ 0x0
  4654  0070                     	ds	1
  4655  0071                     ??_LCD_Cmd:	
  4656  0071                     ??_LCD_Write_Char:	
  4657                           ; 1 bytes @ 0x1
  4658                           
  4659                           
  4660                           ; 1 bytes @ 0x1
  4661  0071                     	ds	1
  4662  0072                     ??_PWM6_LoadDutyValue:	
  4663  0072                     LCD_Cmd@a:	
  4664                           ; 1 bytes @ 0x2
  4665                           
  4666  0072                     LCD_Write_Char@temp:	
  4667                           ; 1 bytes @ 0x2
  4668                           
  4669  0072                     ___awdiv@dividend:	
  4670                           ; 1 bytes @ 0x2
  4671                           
  4672  0072                     ___awmod@dividend:	
  4673                           ; 2 bytes @ 0x2
  4674                           
  4675                           
  4676                           ; 2 bytes @ 0x2
  4677  0072                     	ds	1
  4678  0073                     ??_LCD_Init:	
  4679  0073                     ??_LCD_Clear:	
  4680                           ; 1 bytes @ 0x3
  4681                           
  4682  0073                     ?_LCD_Set_Cursor:	
  4683                           ; 1 bytes @ 0x3
  4684                           
  4685  0073                     ??_ADCC_GetSingleConversion:	
  4686                           ; 1 bytes @ 0x3
  4687                           
  4688  0073                     ??___ftneg:	
  4689                           ; 1 bytes @ 0x3
  4690                           
  4691  0073                     LCD_Set_Cursor@y:	
  4692                           ; 1 bytes @ 0x3
  4693                           
  4694  0073                     LCD_Write_Char@y:	
  4695                           ; 1 bytes @ 0x3
  4696                           
  4697  0073                     ADCC_GetSingleConversion@channel:	
  4698                           ; 1 bytes @ 0x3
  4699                           
  4700  0073                     ___ftpack@exp:	
  4701                           ; 1 bytes @ 0x3
  4702                           
  4703  0073                     frexp@eptr:	
  4704                           ; 1 bytes @ 0x3
  4705                           
  4706                           
  4707                           ; 1 bytes @ 0x3
  4708  0073                     	ds	1
  4709  0074                     ??_frexp:	
  4710  0074                     ??_LCD_Set_Cursor:	
  4711                           ; 1 bytes @ 0x4
  4712                           
  4713  0074                     ??___awdiv:	
  4714                           ; 1 bytes @ 0x4
  4715                           
  4716  0074                     ??___awmod:	
  4717                           ; 1 bytes @ 0x4
  4718                           
  4719  0074                     ??___fttol:	
  4720                           ; 1 bytes @ 0x4
  4721                           
  4722  0074                     LCD_Write_Char@a:	
  4723                           ; 1 bytes @ 0x4
  4724                           
  4725  0074                     ___ftpack@sign:	
  4726                           ; 1 bytes @ 0x4
  4727                           
  4728  0074                     ___aldiv@dividend:	
  4729                           ; 1 bytes @ 0x4
  4730                           
  4731                           
  4732                           ; 4 bytes @ 0x4
  4733  0074                     	ds	1
  4734  0075                     ??_InitCustomChars:	
  4735  0075                     ??___ftpack:	
  4736                           ; 1 bytes @ 0x5
  4737                           
  4738  0075                     ?_LCD_Write_String:	
  4739                           ; 1 bytes @ 0x5
  4740                           
  4741  0075                     LCD_Init@style:	
  4742                           ; 1 bytes @ 0x5
  4743                           
  4744  0075                     ___awdiv@counter:	
  4745                           ; 1 bytes @ 0x5
  4746                           
  4747  0075                     ___awmod@counter:	
  4748                           ; 1 bytes @ 0x5
  4749                           
  4750  0075                     LCD_Write_String@a:	
  4751                           ; 1 bytes @ 0x5
  4752                           
  4753                           
  4754                           ; 2 bytes @ 0x5
  4755  0075                     	ds	1
  4756  0076                     InitCustomChars@i:	
  4757  0076                     LCD_Set_Cursor@x:	
  4758                           ; 1 bytes @ 0x6
  4759                           
  4760  0076                     ___awdiv@sign:	
  4761                           ; 1 bytes @ 0x6
  4762                           
  4763  0076                     ___awmod@sign:	
  4764                           ; 1 bytes @ 0x6
  4765                           
  4766                           
  4767                           ; 1 bytes @ 0x6
  4768  0076                     	ds	1
  4769  0077                     ??_SYSTEM_Initialize:	
  4770  0077                     ??_LCD_Write_String:	
  4771                           ; 1 bytes @ 0x7
  4772                           
  4773  0077                     LCD_Set_Cursor@z:	
  4774                           ; 1 bytes @ 0x7
  4775                           
  4776  0077                     ___awdiv@quotient:	
  4777                           ; 1 bytes @ 0x7
  4778                           
  4779                           
  4780                           ; 2 bytes @ 0x7
  4781  0077                     	ds	1
  4782  0078                     ??___aldiv:	
  4783  0078                     ?___awtoft:	
  4784                           ; 1 bytes @ 0x8
  4785                           
  4786  0078                     ?___lbtoft:	
  4787                           ; 3 bytes @ 0x8
  4788                           
  4789  0078                     ?___lwtoft:	
  4790                           ; 3 bytes @ 0x8
  4791                           
  4792  0078                     LCD_Set_Cursor@w:	
  4793                           ; 3 bytes @ 0x8
  4794                           
  4795  0078                     ___fttol@sign1:	
  4796                           ; 1 bytes @ 0x8
  4797                           
  4798  0078                     LCD_Write_String@i:	
  4799                           ; 1 bytes @ 0x8
  4800                           
  4801  0078                     ___awtoft@c:	
  4802                           ; 2 bytes @ 0x8
  4803                           
  4804  0078                     ___lwtoft@c:	
  4805                           ; 2 bytes @ 0x8
  4806                           
  4807                           
  4808                           ; 2 bytes @ 0x8
  4809  0078                     	ds	1
  4810  0079                     ?_LCD_Write_Int:	
  4811  0079                     LCD_Set_Cursor@temp:	
  4812                           ; 1 bytes @ 0x9
  4813                           
  4814  0079                     LCD_Write_Int@value:	
  4815                           ; 1 bytes @ 0x9
  4816                           
  4817  0079                     ___fttol@lval:	
  4818                           ; 2 bytes @ 0x9
  4819                           
  4820                           
  4821                           ; 4 bytes @ 0x9
  4822  0079                     	ds	2
  4823  007B                     ??___awtoft:	
  4824  007B                     ??___lwtoft:	
  4825                           ; 1 bytes @ 0xB
  4826                           
  4827  007B                     LCD_Write_Int@fieldLength:	
  4828                           ; 1 bytes @ 0xB
  4829                           
  4830  007B                     ___lbtoft@c:	
  4831                           ; 1 bytes @ 0xB
  4832                           
  4833                           
  4834                           ; 1 bytes @ 0xB
  4835  007B                     	ds	1
  4836  007C                     LCD_Write_Int@numPlaces:	
  4837                           
  4838                           ; 1 bytes @ 0xC
  4839  007C                     	ds	1
  4840  007D                     LCD_Write_Int@sign:	
  4841  007D                     ___awtoft@sign:	
  4842                           ; 1 bytes @ 0xD
  4843                           
  4844  007D                     ___fttol@exp1:	
  4845                           ; 1 bytes @ 0xD
  4846                           
  4847                           
  4848                           ; 1 bytes @ 0xD
  4849  007D                     	ds	1
  4850  007E                     ??_eval_poly:	
  4851  007E                     ??___wmul:	
  4852                           ; 1 bytes @ 0xE
  4853                           
  4854  007E                     ??___ftsub:	
  4855                           ; 1 bytes @ 0xE
  4856                           
  4857                           
  4858                           	psect	cstackBANK0
  4859  0020                     __pcstackBANK0:	
  4860                           ; 1 bytes @ 0xE
  4861                           
  4862  0020                     ??_LCD_Write_Int:	
  4863  0020                     ??___lbtoft:	
  4864                           ; 1 bytes @ 0x0
  4865                           
  4866  0020                     ?___wmul:	
  4867                           ; 1 bytes @ 0x0
  4868                           
  4869  0020                     ?___ftdiv:	
  4870                           ; 2 bytes @ 0x0
  4871                           
  4872  0020                     ?___ftmul:	
  4873                           ; 3 bytes @ 0x0
  4874                           
  4875  0020                     ___aldiv@counter:	
  4876                           ; 3 bytes @ 0x0
  4877                           
  4878  0020                     ___wmul@multiplier:	
  4879                           ; 1 bytes @ 0x0
  4880                           
  4881  0020                     ___ftdiv@f2:	
  4882                           ; 2 bytes @ 0x0
  4883                           
  4884  0020                     ___ftmul@f1:	
  4885                           ; 3 bytes @ 0x0
  4886                           
  4887                           
  4888                           ; 3 bytes @ 0x0
  4889  0020                     	ds	1
  4890  0021                     ___aldiv@sign:	
  4891                           
  4892                           ; 1 bytes @ 0x1
  4893  0021                     	ds	1
  4894  0022                     ___wmul@multiplicand:	
  4895  0022                     ___aldiv@quotient:	
  4896                           ; 2 bytes @ 0x2
  4897                           
  4898                           
  4899                           ; 4 bytes @ 0x2
  4900  0022                     	ds	1
  4901  0023                     ___ftdiv@f1:	
  4902  0023                     ___ftmul@f2:	
  4903                           ; 3 bytes @ 0x3
  4904                           
  4905                           
  4906                           ; 3 bytes @ 0x3
  4907  0023                     	ds	1
  4908  0024                     ___wmul@product:	
  4909                           
  4910                           ; 2 bytes @ 0x4
  4911  0024                     	ds	1
  4912  0025                     LCD_Write_Int@str:	
  4913                           
  4914                           ; 5 bytes @ 0x5
  4915  0025                     	ds	1
  4916  0026                     ??___ftdiv:	
  4917  0026                     ??___ftmul:	
  4918                           ; 1 bytes @ 0x6
  4919                           
  4920  0026                     ?___lwdiv:	
  4921                           ; 1 bytes @ 0x6
  4922                           
  4923  0026                     ___lwdiv@divisor:	
  4924                           ; 2 bytes @ 0x6
  4925                           
  4926                           
  4927                           ; 2 bytes @ 0x6
  4928  0026                     	ds	2
  4929  0028                     ___lwdiv@dividend:	
  4930                           
  4931                           ; 2 bytes @ 0x8
  4932  0028                     	ds	2
  4933  002A                     ??___lwdiv:	
  4934  002A                     ___ftdiv@cntr:	
  4935                           ; 1 bytes @ 0xA
  4936                           
  4937  002A                     ___ftmul@exp:	
  4938                           ; 1 bytes @ 0xA
  4939                           
  4940  002A                     LCD_Write_Int@j:	
  4941                           ; 1 bytes @ 0xA
  4942                           
  4943                           
  4944                           ; 2 bytes @ 0xA
  4945  002A                     	ds	1
  4946  002B                     ___lwdiv@quotient:	
  4947  002B                     ___ftdiv@f3:	
  4948                           ; 2 bytes @ 0xB
  4949                           
  4950  002B                     ___ftmul@f3_as_product:	
  4951                           ; 3 bytes @ 0xB
  4952                           
  4953                           
  4954                           ; 3 bytes @ 0xB
  4955  002B                     	ds	1
  4956  002C                     LCD_Write_Int@i:	
  4957                           
  4958                           ; 2 bytes @ 0xC
  4959  002C                     	ds	1
  4960  002D                     ___lwdiv@counter:	
  4961                           
  4962                           ; 1 bytes @ 0xD
  4963  002D                     	ds	1
  4964  002E                     ??_readButtons:	
  4965  002E                     ___ftdiv@exp:	
  4966                           ; 1 bytes @ 0xE
  4967                           
  4968  002E                     ___ftmul@cntr:	
  4969                           ; 1 bytes @ 0xE
  4970                           
  4971                           
  4972                           ; 1 bytes @ 0xE
  4973  002E                     	ds	1
  4974  002F                     ___ftdiv@sign:	
  4975  002F                     ___ftmul@sign:	
  4976                           ; 1 bytes @ 0xF
  4977                           
  4978                           
  4979                           ; 1 bytes @ 0xF
  4980  002F                     	ds	1
  4981  0030                     ?___ftadd:	
  4982  0030                     ___ftadd@f1:	
  4983                           ; 3 bytes @ 0x10
  4984                           
  4985                           
  4986                           ; 3 bytes @ 0x10
  4987  0030                     	ds	1
  4988  0031                     ??_tempSetpoint:	
  4989                           
  4990                           ; 1 bytes @ 0x11
  4991  0031                     	ds	2
  4992  0033                     ___ftadd@f2:	
  4993                           
  4994                           ; 3 bytes @ 0x13
  4995  0033                     	ds	1
  4996  0034                     tempSetpoint@counter:	
  4997                           
  4998                           ; 1 bytes @ 0x14
  4999  0034                     	ds	2
  5000  0036                     ??___ftadd:	
  5001                           
  5002                           ; 1 bytes @ 0x16
  5003  0036                     	ds	4
  5004  003A                     ___ftadd@sign:	
  5005                           
  5006                           ; 1 bytes @ 0x1A
  5007  003A                     	ds	1
  5008  003B                     ___ftadd@exp2:	
  5009                           
  5010                           ; 1 bytes @ 0x1B
  5011  003B                     	ds	1
  5012  003C                     ___ftadd@exp1:	
  5013                           
  5014                           ; 1 bytes @ 0x1C
  5015  003C                     	ds	1
  5016  003D                     ?___ftge:	
  5017  003D                     ?_eval_poly:	
  5018                           ; 1 bit 
  5019                           
  5020  003D                     ?___ftsub:	
  5021                           ; 3 bytes @ 0x1D
  5022                           
  5023  003D                     ___ftge@ff1:	
  5024                           ; 3 bytes @ 0x1D
  5025                           
  5026  003D                     ___ftsub@f2:	
  5027                           ; 3 bytes @ 0x1D
  5028                           
  5029  003D                     eval_poly@x:	
  5030                           ; 3 bytes @ 0x1D
  5031                           
  5032                           
  5033                           ; 3 bytes @ 0x1D
  5034  003D                     	ds	3
  5035  0040                     eval_poly@d:	
  5036  0040                     ___ftge@ff2:	
  5037                           ; 2 bytes @ 0x20
  5038                           
  5039  0040                     ___ftsub@f1:	
  5040                           ; 3 bytes @ 0x20
  5041                           
  5042                           
  5043                           ; 3 bytes @ 0x20
  5044  0040                     	ds	2
  5045  0042                     eval_poly@n:	
  5046                           
  5047                           ; 2 bytes @ 0x22
  5048  0042                     	ds	1
  5049  0043                     ??___ftge:	
  5050                           
  5051                           ; 1 bytes @ 0x23
  5052  0043                     	ds	1
  5053  0044                     eval_poly@res:	
  5054                           
  5055                           ; 3 bytes @ 0x24
  5056  0044                     	ds	3
  5057  0047                     ?_log:	
  5058  0047                     log@x:	
  5059                           ; 3 bytes @ 0x27
  5060                           
  5061                           
  5062                           ; 3 bytes @ 0x27
  5063  0047                     	ds	3
  5064  004A                     ??_log:	
  5065                           
  5066                           ; 1 bytes @ 0x2A
  5067  004A                     	ds	1
  5068  004B                     log@exponent:	
  5069                           
  5070                           ; 2 bytes @ 0x2B
  5071  004B                     	ds	2
  5072  004D                     ??_main:	
  5073                           
  5074                           ; 1 bytes @ 0x2D
  5075  004D                     	ds	10
  5076                           
  5077                           	psect	maintext
  5078  0426                     __pmaintext:	
  5079 ;;
  5080 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5081 ;;
  5082 ;; *************** function _main *****************
  5083 ;; Defined at:
  5084 ;;		line 13 in file "main.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  totals          4   15[BANK1 ] long 
  5089 ;;  steinhart       3   27[BANK1 ] float 
  5090 ;;  R               3    0[BANK1 ] float 
  5091 ;;  readTemperat    2   25[BANK1 ] unsigned int 
  5092 ;;  outCurrent      2   23[BANK1 ] unsigned int 
  5093 ;;  displayTemp     2   21[BANK1 ] unsigned int 
  5094 ;;  readTemperat    2   19[BANK1 ] unsigned int 
  5095 ;;  counter         2   11[BANK1 ] unsigned int 
  5096 ;;  seconds         2    8[BANK1 ] unsigned int 
  5097 ;;  minutes         2    6[BANK1 ] unsigned int 
  5098 ;;  toggle          1   14[BANK1 ] unsigned char 
  5099 ;;  startupTimer    1   13[BANK1 ] unsigned char 
  5100 ;;  firstTimeThr    1   10[BANK1 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : B1F/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Totals:         0      10      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;Total ram usage:       40 bytes
  5115 ;; Hardware stack levels required when called:    5
  5116 ;; This function calls:
  5117 ;;		_ADCC_GetSingleConversion
  5118 ;;		_LCD_Set_Cursor
  5119 ;;		_LCD_Write_Char
  5120 ;;		_LCD_Write_Int
  5121 ;;		_LCD_Write_String
  5122 ;;		_PWM6_LoadDutyValue
  5123 ;;		_SYSTEM_Initialize
  5124 ;;		___aldiv
  5125 ;;		___ftadd
  5126 ;;		___ftdiv
  5127 ;;		___ftge
  5128 ;;		___ftneg
  5129 ;;		___ftsub
  5130 ;;		___fttol
  5131 ;;		___lbtoft
  5132 ;;		___lwdiv
  5133 ;;		___lwtoft
  5134 ;;		___wmul
  5135 ;;		_log
  5136 ;;		_readButtons
  5137 ;;		_tempSetpoint
  5138 ;; This function is called by:
  5139 ;;		Startup code after reset
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           
  5144                           ;psect for function _main
  5145  0426                     _main:	
  5146                           
  5147                           ;main.c: 15: SYSTEM_Initialize();
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5151  0426  318B  234E  3184   	fcall	_SYSTEM_Initialize
  5152                           
  5153                           ;main.c: 17: uint16_t readTemperature, outCurrent = 1023, readTemperatureOld, displayTem
      +                          p = 70, seconds = 0, counter = 0, minutes = 0;
  5154  0429  30FF               	movlw	255
  5155  042A  0021               	movlb	1	; select bank1
  5156  042B  00B7               	movwf	main@outCurrent^(0+128)
  5157  042C  3003               	movlw	3
  5158  042D  00B8               	movwf	(main@outCurrent^(0+128)+1)
  5159  042E  3046               	movlw	70
  5160  042F  00B5               	movwf	main@displayTemp^(0+128)
  5161  0430  3000               	movlw	0
  5162  0431  00B6               	movwf	(main@displayTemp^(0+128)+1)
  5163  0432  01A8               	clrf	main@seconds^(0+128)
  5164  0433  01A9               	clrf	(main@seconds+1)^(0+128)
  5165  0434  01AB               	clrf	main@counter^(0+128)
  5166  0435  01AC               	clrf	(main@counter+1)^(0+128)
  5167  0436  01A6               	clrf	main@minutes^(0+128)
  5168  0437  01A7               	clrf	(main@minutes+1)^(0+128)
  5169                           
  5170                           ;main.c: 19: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5171  0438  01AD               	clrf	main@startupTimer^(0+128)
  5172  0439  01AA               	clrf	main@firstTimeThrough^(0+128)
  5173  043A  01AE               	clrf	main@toggle^(0+128)
  5174                           
  5175                           ;main.c: 21: float R, steinhart;
  5176                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5177                           ;main.c: 25: int32_t totals = 0;
  5178  043B  3000               	movlw	0
  5179  043C  00B2               	movwf	(main@totals+3)^(0+128)
  5180  043D  3000               	movlw	0
  5181  043E  00B1               	movwf	(main@totals+2)^(0+128)
  5182  043F  3000               	movlw	0
  5183  0440  00B0               	movwf	(main@totals+1)^(0+128)
  5184  0441  3000               	movlw	0
  5185  0442  00AF               	movwf	main@totals^(0+128)
  5186  0443                     l2964:	
  5187                           ;main.c: 29: while (1)
  5188                           
  5189                           
  5190                           ;main.c: 30: {
  5191                           ;main.c: 31: readTemperature = ADCC_GetSingleConversion(2);
  5192  0443  3002               	movlw	2
  5193  0444  3189  215A  3184   	fcall	_ADCC_GetSingleConversion
  5194  0447  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5195  0448  0021               	movlb	1	; select bank1
  5196  0449  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5197  044A  0870               	movf	?_ADCC_GetSingleConversion,w
  5198  044B  00B9               	movwf	main@readTemperature^(0+128)
  5199                           
  5200                           ;main.c: 33: totals = totals - samples[sampleIndex];
  5201  044C  082F               	movf	main@totals^(0+128),w
  5202  044D  0020               	movlb	0	; select bank0
  5203  044E  00CD               	movwf	??_main
  5204  044F  0021               	movlb	1	; select bank1
  5205  0450  0830               	movf	(main@totals+1)^(0+128),w
  5206  0451  0020               	movlb	0	; select bank0
  5207  0452  00CE               	movwf	??_main+1
  5208  0453  0021               	movlb	1	; select bank1
  5209  0454  0831               	movf	(main@totals+2)^(0+128),w
  5210  0455  0020               	movlb	0	; select bank0
  5211  0456  00CF               	movwf	??_main+2
  5212  0457  0021               	movlb	1	; select bank1
  5213  0458  0832               	movf	(main@totals+3)^(0+128),w
  5214  0459  0020               	movlb	0	; select bank0
  5215  045A  00D0               	movwf	??_main+3
  5216  045B  0021               	movlb	1	; select bank1
  5217  045C  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5218  045D  0020               	movlb	0	; select bank0
  5219  045E  00D2               	movwf	??_main+5
  5220  045F  0021               	movlb	1	; select bank1
  5221  0460  0856               	movf	main@sampleIndex^(0+128),w
  5222  0461  0020               	movlb	0	; select bank0
  5223  0462  00D1               	movwf	??_main+4
  5224  0463  35D1               	lslf	??_main+4,f
  5225  0464  0DD2               	rlf	??_main+5,f
  5226  0465  308C               	movlw	140
  5227  0466  0751               	addwf	??_main+4,w
  5228  0467  0084               	movwf	4
  5229  0468  3023               	movlw	35
  5230  0469  3D52               	addwfc	??_main+5,w
  5231  046A  0085               	movwf	5
  5232  046B  3F00               	moviw [0]fsr0
  5233  046C  00D3               	movwf	??_main+6
  5234  046D  3F01               	moviw [1]fsr0
  5235  046E  00D4               	movwf	??_main+7
  5236  046F  01D5               	clrf	??_main+8
  5237  0470  01D6               	clrf	??_main+9
  5238  0471  09D3               	comf	??_main+6,f
  5239  0472  09D4               	comf	??_main+7,f
  5240  0473  09D5               	comf	??_main+8,f
  5241  0474  09D6               	comf	??_main+9,f
  5242  0475  0AD3               	incf	??_main+6,f
  5243  0476  1903               	skipnz
  5244  0477  0AD4               	incf	??_main+7,f
  5245  0478  1903               	skipnz
  5246  0479  0AD5               	incf	??_main+8,f
  5247  047A  1903               	skipnz
  5248  047B  0AD6               	incf	??_main+9,f
  5249  047C  0853               	movf	??_main+6,w
  5250  047D  07CD               	addwf	??_main,f
  5251  047E  0854               	movf	??_main+7,w
  5252  047F  3DCE               	addwfc	??_main+1,f
  5253  0480  0855               	movf	??_main+8,w
  5254  0481  3DCF               	addwfc	??_main+2,f
  5255  0482  0856               	movf	??_main+9,w
  5256  0483  3DD0               	addwfc	??_main+3,f
  5257  0484  0850               	movf	??_main+3,w
  5258  0485  0021               	movlb	1	; select bank1
  5259  0486  00B2               	movwf	(main@totals+3)^(0+128)
  5260  0487  0020               	movlb	0	; select bank0
  5261  0488  084F               	movf	??_main+2,w
  5262  0489  0021               	movlb	1	; select bank1
  5263  048A  00B1               	movwf	(main@totals+2)^(0+128)
  5264  048B  0020               	movlb	0	; select bank0
  5265  048C  084E               	movf	??_main+1,w
  5266  048D  0021               	movlb	1	; select bank1
  5267  048E  00B0               	movwf	(main@totals+1)^(0+128)
  5268  048F  0020               	movlb	0	; select bank0
  5269  0490  084D               	movf	??_main,w
  5270  0491  0021               	movlb	1	; select bank1
  5271  0492  00AF               	movwf	main@totals^(0+128)
  5272                           
  5273                           ;main.c: 35: samples[sampleIndex] = readTemperature;
  5274  0493  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5275  0494  0020               	movlb	0	; select bank0
  5276  0495  00CE               	movwf	??_main+1
  5277  0496  0021               	movlb	1	; select bank1
  5278  0497  0856               	movf	main@sampleIndex^(0+128),w
  5279  0498  0020               	movlb	0	; select bank0
  5280  0499  00CD               	movwf	??_main
  5281  049A  35CD               	lslf	??_main,f
  5282  049B  0DCE               	rlf	??_main+1,f
  5283  049C  308C               	movlw	140
  5284  049D  00CF               	movwf	??_main+2
  5285  049E  3023               	movlw	35
  5286  049F  00D0               	movwf	??_main+3
  5287  04A0  084D               	movf	??_main,w
  5288  04A1  074F               	addwf	??_main+2,w
  5289  04A2  0086               	movwf	6
  5290  04A3  084E               	movf	??_main+1,w
  5291  04A4  3D50               	addwfc	??_main+3,w
  5292  04A5  0087               	movwf	7
  5293  04A6  0021               	movlb	1	; select bank1
  5294  04A7  0839               	movf	main@readTemperature^(0+128),w
  5295  04A8  3FC0               	movwi [0]fsr1
  5296  04A9  083A               	movf	(main@readTemperature+1)^(0+128),w
  5297  04AA  3FC1               	movwi [1]fsr1
  5298                           
  5299                           ;main.c: 37: totals = totals + samples[sampleIndex];
  5300  04AB  082F               	movf	main@totals^(0+128),w
  5301  04AC  0020               	movlb	0	; select bank0
  5302  04AD  00CD               	movwf	??_main
  5303  04AE  0021               	movlb	1	; select bank1
  5304  04AF  0830               	movf	(main@totals+1)^(0+128),w
  5305  04B0  0020               	movlb	0	; select bank0
  5306  04B1  00CE               	movwf	??_main+1
  5307  04B2  0021               	movlb	1	; select bank1
  5308  04B3  0831               	movf	(main@totals+2)^(0+128),w
  5309  04B4  0020               	movlb	0	; select bank0
  5310  04B5  00CF               	movwf	??_main+2
  5311  04B6  0021               	movlb	1	; select bank1
  5312  04B7  0832               	movf	(main@totals+3)^(0+128),w
  5313  04B8  0020               	movlb	0	; select bank0
  5314  04B9  00D0               	movwf	??_main+3
  5315  04BA  0021               	movlb	1	; select bank1
  5316  04BB  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5317  04BC  0020               	movlb	0	; select bank0
  5318  04BD  00D2               	movwf	??_main+5
  5319  04BE  0021               	movlb	1	; select bank1
  5320  04BF  0856               	movf	main@sampleIndex^(0+128),w
  5321  04C0  0020               	movlb	0	; select bank0
  5322  04C1  00D1               	movwf	??_main+4
  5323  04C2  35D1               	lslf	??_main+4,f
  5324  04C3  0DD2               	rlf	??_main+5,f
  5325  04C4  308C               	movlw	140
  5326  04C5  0751               	addwf	??_main+4,w
  5327  04C6  0084               	movwf	4
  5328  04C7  3023               	movlw	35
  5329  04C8  3D52               	addwfc	??_main+5,w
  5330  04C9  0085               	movwf	5
  5331  04CA  3F00               	moviw [0]fsr0
  5332  04CB  00D3               	movwf	??_main+6
  5333  04CC  3F01               	moviw [1]fsr0
  5334  04CD  00D4               	movwf	??_main+7
  5335  04CE  01D5               	clrf	??_main+8
  5336  04CF  01D6               	clrf	??_main+9
  5337  04D0  0853               	movf	??_main+6,w
  5338  04D1  07CD               	addwf	??_main,f
  5339  04D2  0854               	movf	??_main+7,w
  5340  04D3  3DCE               	addwfc	??_main+1,f
  5341  04D4  0855               	movf	??_main+8,w
  5342  04D5  3DCF               	addwfc	??_main+2,f
  5343  04D6  0856               	movf	??_main+9,w
  5344  04D7  3DD0               	addwfc	??_main+3,f
  5345  04D8  0850               	movf	??_main+3,w
  5346  04D9  0021               	movlb	1	; select bank1
  5347  04DA  00B2               	movwf	(main@totals+3)^(0+128)
  5348  04DB  0020               	movlb	0	; select bank0
  5349  04DC  084F               	movf	??_main+2,w
  5350  04DD  0021               	movlb	1	; select bank1
  5351  04DE  00B1               	movwf	(main@totals+2)^(0+128)
  5352  04DF  0020               	movlb	0	; select bank0
  5353  04E0  084E               	movf	??_main+1,w
  5354  04E1  0021               	movlb	1	; select bank1
  5355  04E2  00B0               	movwf	(main@totals+1)^(0+128)
  5356  04E3  0020               	movlb	0	; select bank0
  5357  04E4  084D               	movf	??_main,w
  5358  04E5  0021               	movlb	1	; select bank1
  5359  04E6  00AF               	movwf	main@totals^(0+128)
  5360                           
  5361                           ;main.c: 39: sampleIndex += 1;
  5362  04E7  3001               	movlw	1
  5363  04E8  07D6               	addwf	main@sampleIndex^(0+128),f
  5364  04E9  3000               	movlw	0
  5365  04EA  3DD7               	addwfc	(main@sampleIndex+1)^(0+128),f
  5366                           
  5367                           ;main.c: 41: if(sampleIndex >= 50)
  5368  04EB  3000               	movlw	0
  5369  04EC  0257               	subwf	(main@sampleIndex+1)^(0+128),w
  5370  04ED  3032               	movlw	50
  5371  04EE  1903               	skipnz
  5372  04EF  0256               	subwf	main@sampleIndex^(0+128),w
  5373  04F0  1C03               	skipc
  5374  04F1  2CF4               	goto	l2976
  5375                           
  5376                           ;main.c: 42: {
  5377                           ;main.c: 43: sampleIndex = 0;
  5378  04F2  01D6               	clrf	main@sampleIndex^(0+128)
  5379  04F3  01D7               	clrf	(main@sampleIndex+1)^(0+128)
  5380  04F4                     l2976:	
  5381                           
  5382                           ;main.c: 44: }
  5383                           ;main.c: 46: readTemperature = totals / 50;
  5384  04F4  3000               	movlw	0
  5385  04F5  00F3               	movwf	___aldiv@divisor+3
  5386  04F6  3000               	movlw	0
  5387  04F7  00F2               	movwf	___aldiv@divisor+2
  5388  04F8  3000               	movlw	0
  5389  04F9  00F1               	movwf	___aldiv@divisor+1
  5390  04FA  3032               	movlw	50
  5391  04FB  00F0               	movwf	___aldiv@divisor
  5392  04FC  0832               	movf	(main@totals+3)^(0+128),w
  5393  04FD  00F7               	movwf	___aldiv@dividend+3
  5394  04FE  0831               	movf	(main@totals+2)^(0+128),w
  5395  04FF  00F6               	movwf	___aldiv@dividend+2
  5396  0500  0830               	movf	(main@totals+1)^(0+128),w
  5397  0501  00F5               	movwf	___aldiv@dividend+1
  5398  0502  082F               	movf	main@totals^(0+128),w
  5399  0503  00F4               	movwf	___aldiv@dividend
  5400  0504  318E  264F  3184   	fcall	___aldiv
  5401  0507  0871               	movf	?___aldiv+1,w
  5402  0508  0021               	movlb	1	; select bank1
  5403  0509  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5404  050A  0870               	movf	?___aldiv,w
  5405  050B  00B9               	movwf	main@readTemperature^(0+128)
  5406                           
  5407                           ;main.c: 49: if(startupTimer >= 70)
  5408  050C  3046               	movlw	70
  5409  050D  022D               	subwf	main@startupTimer^(0+128),w
  5410  050E  1C03               	skipc
  5411  050F  2D9E               	goto	l3014
  5412                           
  5413                           ;main.c: 50: {
  5414                           ;main.c: 51: if(firstTimeThrough == 0)
  5415  0510  082A               	movf	main@firstTimeThrough^(0+128),w
  5416  0511  1D03               	btfss	3,2
  5417  0512  2D1F               	goto	l2988
  5418                           
  5419                           ;main.c: 52: {
  5420                           ;main.c: 53: readTemperatureOld = readTemperature;
  5421  0513  083A               	movf	(main@readTemperature+1)^(0+128),w
  5422  0514  00B4               	movwf	(main@readTemperatureOld+1)^(0+128)
  5423  0515  0839               	movf	main@readTemperature^(0+128),w
  5424  0516  00B3               	movwf	main@readTemperatureOld^(0+128)
  5425                           
  5426                           ;main.c: 54: counter = 0;
  5427  0517  01AB               	clrf	main@counter^(0+128)
  5428  0518  01AC               	clrf	(main@counter+1)^(0+128)
  5429                           
  5430                           ;main.c: 55: firstTimeThrough +=1;
  5431  0519  3001               	movlw	1
  5432  051A  0020               	movlb	0	; select bank0
  5433  051B  00CD               	movwf	??_main
  5434  051C  084D               	movf	??_main,w
  5435  051D  0021               	movlb	1	; select bank1
  5436  051E  07AA               	addwf	main@firstTimeThrough^(0+128),f
  5437  051F                     l2988:	
  5438                           
  5439                           ;main.c: 56: }
  5440                           ;main.c: 58: if(readTemperature > readTemperatureOld)
  5441  051F  083A               	movf	(main@readTemperature+1)^(0+128),w
  5442  0520  0234               	subwf	(main@readTemperatureOld+1)^(0+128),w
  5443  0521  1D03               	skipz
  5444  0522  2D25               	goto	u3245
  5445  0523  0839               	movf	main@readTemperature^(0+128),w
  5446  0524  0233               	subwf	main@readTemperatureOld^(0+128),w
  5447  0525                     u3245:	
  5448  0525  1803               	skipnc
  5449  0526  2D2B               	goto	l322
  5450                           
  5451                           ;main.c: 59: {
  5452                           ;main.c: 60: readTemperatureOld += 1;
  5453  0527  3001               	movlw	1
  5454  0528  07B3               	addwf	main@readTemperatureOld^(0+128),f
  5455  0529  3000               	movlw	0
  5456  052A  3DB4               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  5457  052B                     l322:	
  5458                           
  5459                           ;main.c: 61: }
  5460                           ;main.c: 63: if(readTemperature < readTemperatureOld)
  5461  052B  0834               	movf	(main@readTemperatureOld+1)^(0+128),w
  5462  052C  023A               	subwf	(main@readTemperature+1)^(0+128),w
  5463  052D  1D03               	skipz
  5464  052E  2D31               	goto	u3255
  5465  052F  0833               	movf	main@readTemperatureOld^(0+128),w
  5466  0530  0239               	subwf	main@readTemperature^(0+128),w
  5467  0531                     u3255:	
  5468  0531  1803               	skipnc
  5469  0532  2D37               	goto	l323
  5470                           
  5471                           ;main.c: 64: {
  5472                           ;main.c: 65: readTemperatureOld -= 1;
  5473  0533  3001               	movlw	1
  5474  0534  02B3               	subwf	main@readTemperatureOld^(0+128),f
  5475  0535  3000               	movlw	0
  5476  0536  3BB4               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  5477  0537                     l323:	
  5478                           
  5479                           ;main.c: 66: }
  5480                           ;main.c: 68: readTemperature = readTemperatureOld;
  5481  0537  0834               	movf	(main@readTemperatureOld+1)^(0+128),w
  5482  0538  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5483  0539  0833               	movf	main@readTemperatureOld^(0+128),w
  5484  053A  00B9               	movwf	main@readTemperature^(0+128)
  5485                           
  5486                           ;main.c: 70: if(setpoint > steinhart)
  5487  053B  083B               	movf	main@steinhart^(0+128),w
  5488  053C  0020               	movlb	0	; select bank0
  5489  053D  00BD               	movwf	___ftge@ff1
  5490  053E  0021               	movlb	1	; select bank1
  5491  053F  083C               	movf	(main@steinhart+1)^(0+128),w
  5492  0540  0020               	movlb	0	; select bank0
  5493  0541  00BE               	movwf	___ftge@ff1+1
  5494  0542  0021               	movlb	1	; select bank1
  5495  0543  083D               	movf	(main@steinhart+2)^(0+128),w
  5496  0544  0020               	movlb	0	; select bank0
  5497  0545  00BF               	movwf	___ftge@ff1+2
  5498  0546  0868               	movf	_setpoint,w
  5499  0547  318A  220A  3184   	fcall	___lbtoft
  5500  054A  0878               	movf	?___lbtoft,w
  5501  054B  0020               	movlb	0	; select bank0
  5502  054C  00C0               	movwf	___ftge@ff2
  5503  054D  0879               	movf	?___lbtoft+1,w
  5504  054E  00C1               	movwf	___ftge@ff2+1
  5505  054F  087A               	movf	?___lbtoft+2,w
  5506  0550  00C2               	movwf	___ftge@ff2+2
  5507  0551  318B  23C3  3184   	fcall	___ftge
  5508  0554  1803               	btfsc	3,0
  5509  0555  2D67               	goto	l3002
  5510                           
  5511                           ;main.c: 71: {
  5512                           ;main.c: 72: if(outCurrent < 1023)
  5513  0556  3003               	movlw	3
  5514  0557  0021               	movlb	1	; select bank1
  5515  0558  0238               	subwf	(main@outCurrent+1)^(0+128),w
  5516  0559  30FF               	movlw	255
  5517  055A  1903               	skipnz
  5518  055B  0237               	subwf	main@outCurrent^(0+128),w
  5519  055C  1803               	skipnc
  5520  055D  2D63               	goto	l3000
  5521                           
  5522                           ;main.c: 73: {
  5523                           ;main.c: 74: outCurrent++;
  5524  055E  3001               	movlw	1
  5525  055F  07B7               	addwf	main@outCurrent^(0+128),f
  5526  0560  3000               	movlw	0
  5527  0561  3DB8               	addwfc	(main@outCurrent+1)^(0+128),f
  5528                           
  5529                           ;main.c: 75: }
  5530  0562  2D67               	goto	l3002
  5531  0563                     l3000:	
  5532                           
  5533                           ;main.c: 76: else
  5534                           ;main.c: 77: {
  5535                           ;main.c: 78: outCurrent = 1023;
  5536  0563  30FF               	movlw	255
  5537  0564  00B7               	movwf	main@outCurrent^(0+128)
  5538  0565  3003               	movlw	3
  5539  0566  00B8               	movwf	(main@outCurrent^(0+128)+1)
  5540  0567                     l3002:	
  5541                           
  5542                           ;main.c: 79: }
  5543                           ;main.c: 80: }
  5544                           ;main.c: 82: if(setpoint < steinhart)
  5545  0567  0020               	movlb	0	; select bank0
  5546  0568  0868               	movf	_setpoint,w
  5547  0569  318A  220A  3184   	fcall	___lbtoft
  5548  056C  0878               	movf	?___lbtoft,w
  5549  056D  0020               	movlb	0	; select bank0
  5550  056E  00BD               	movwf	___ftge@ff1
  5551  056F  0879               	movf	?___lbtoft+1,w
  5552  0570  00BE               	movwf	___ftge@ff1+1
  5553  0571  087A               	movf	?___lbtoft+2,w
  5554  0572  00BF               	movwf	___ftge@ff1+2
  5555  0573  0021               	movlb	1	; select bank1
  5556  0574  083B               	movf	main@steinhart^(0+128),w
  5557  0575  0020               	movlb	0	; select bank0
  5558  0576  00C0               	movwf	___ftge@ff2
  5559  0577  0021               	movlb	1	; select bank1
  5560  0578  083C               	movf	(main@steinhart+1)^(0+128),w
  5561  0579  0020               	movlb	0	; select bank0
  5562  057A  00C1               	movwf	___ftge@ff2+1
  5563  057B  0021               	movlb	1	; select bank1
  5564  057C  083D               	movf	(main@steinhart+2)^(0+128),w
  5565  057D  0020               	movlb	0	; select bank0
  5566  057E  00C2               	movwf	___ftge@ff2+2
  5567  057F  318B  23C3  3184   	fcall	___ftge
  5568  0582  1803               	btfsc	3,0
  5569  0583  2D90               	goto	l3010
  5570                           
  5571                           ;main.c: 83: {
  5572                           ;main.c: 84: if(outCurrent > 0)
  5573  0584  0021               	movlb	1	; select bank1
  5574  0585  0837               	movf	main@outCurrent^(0+128),w
  5575  0586  0438               	iorwf	(main@outCurrent+1)^(0+128),w
  5576  0587  1903               	btfsc	3,2
  5577  0588  2D8E               	goto	l3008
  5578                           
  5579                           ;main.c: 85: {
  5580                           ;main.c: 86: outCurrent-=1;
  5581  0589  3001               	movlw	1
  5582  058A  02B7               	subwf	main@outCurrent^(0+128),f
  5583  058B  3000               	movlw	0
  5584  058C  3BB8               	subwfb	(main@outCurrent+1)^(0+128),f
  5585                           
  5586                           ;main.c: 87: }
  5587  058D  2D90               	goto	l3010
  5588  058E                     l3008:	
  5589                           
  5590                           ;main.c: 88: else
  5591                           ;main.c: 89: {
  5592                           ;main.c: 90: outCurrent = 0;
  5593  058E  01B7               	clrf	main@outCurrent^(0+128)
  5594  058F  01B8               	clrf	(main@outCurrent+1)^(0+128)
  5595  0590                     l3010:	
  5596                           
  5597                           ;main.c: 91: }
  5598                           ;main.c: 92: }
  5599                           ;main.c: 94: PWM6_LoadDutyValue(outCurrent);
  5600  0590  0021               	movlb	1	; select bank1
  5601  0591  0838               	movf	(main@outCurrent+1)^(0+128),w
  5602  0592  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5603  0593  0837               	movf	main@outCurrent^(0+128),w
  5604  0594  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5605  0595  3189  21AB  3184   	fcall	_PWM6_LoadDutyValue
  5606                           
  5607                           ;main.c: 96: startupTimer = 69;
  5608  0598  3045               	movlw	69
  5609  0599  0020               	movlb	0	; select bank0
  5610  059A  00CD               	movwf	??_main
  5611  059B  084D               	movf	??_main,w
  5612  059C  0021               	movlb	1	; select bank1
  5613  059D  00AD               	movwf	main@startupTimer^(0+128)
  5614  059E                     l3014:	
  5615                           
  5616                           ;main.c: 97: }
  5617                           ;main.c: 99: startupTimer +=1;
  5618  059E  3001               	movlw	1
  5619  059F  0020               	movlb	0	; select bank0
  5620  05A0  00CD               	movwf	??_main
  5621  05A1  084D               	movf	??_main,w
  5622  05A2  0021               	movlb	1	; select bank1
  5623  05A3  07AD               	addwf	main@startupTimer^(0+128),f
  5624                           
  5625                           ;main.c: 102: R = 10200/(1023/(float)readTemperature - 1);
  5626  05A4  3000               	movlw	0
  5627  05A5  0020               	movlb	0	; select bank0
  5628  05A6  00B0               	movwf	___ftadd@f1
  5629  05A7  3080               	movlw	128
  5630  05A8  00B1               	movwf	___ftadd@f1+1
  5631  05A9  30BF               	movlw	191
  5632  05AA  00B2               	movwf	___ftadd@f1+2
  5633  05AB  0021               	movlb	1	; select bank1
  5634  05AC  083A               	movf	(main@readTemperature+1)^(0+128),w
  5635  05AD  00F9               	movwf	___lwtoft@c+1
  5636  05AE  0839               	movf	main@readTemperature^(0+128),w
  5637  05AF  00F8               	movwf	___lwtoft@c
  5638  05B0  3189  2198  3184   	fcall	___lwtoft
  5639  05B3  0878               	movf	?___lwtoft,w
  5640  05B4  0020               	movlb	0	; select bank0
  5641  05B5  00A0               	movwf	___ftdiv@f2
  5642  05B6  0879               	movf	?___lwtoft+1,w
  5643  05B7  00A1               	movwf	___ftdiv@f2+1
  5644  05B8  087A               	movf	?___lwtoft+2,w
  5645  05B9  00A2               	movwf	___ftdiv@f2+2
  5646  05BA  30C0               	movlw	192
  5647  05BB  00A3               	movwf	___ftdiv@f1
  5648  05BC  307F               	movlw	127
  5649  05BD  00A4               	movwf	___ftdiv@f1+1
  5650  05BE  3044               	movlw	68
  5651  05BF  00A5               	movwf	___ftdiv@f1+2
  5652  05C0  318F  2757  3184   	fcall	___ftdiv
  5653  05C3  0020               	movlb	0	; select bank0
  5654  05C4  0820               	movf	?___ftdiv,w
  5655  05C5  00B3               	movwf	___ftadd@f2
  5656  05C6  0821               	movf	?___ftdiv+1,w
  5657  05C7  00B4               	movwf	___ftadd@f2+1
  5658  05C8  0822               	movf	?___ftdiv+2,w
  5659  05C9  00B5               	movwf	___ftadd@f2+2
  5660  05CA  3183  2330  3184   	fcall	___ftadd
  5661  05CD  0020               	movlb	0	; select bank0
  5662  05CE  0830               	movf	?___ftadd,w
  5663  05CF  0021               	movlb	1	; select bank1
  5664  05D0  00A3               	movwf	_main$1031^(0+128)
  5665  05D1  0020               	movlb	0	; select bank0
  5666  05D2  0831               	movf	?___ftadd+1,w
  5667  05D3  0021               	movlb	1	; select bank1
  5668  05D4  00A4               	movwf	(_main$1031+1)^(0+128)
  5669  05D5  0020               	movlb	0	; select bank0
  5670  05D6  0832               	movf	?___ftadd+2,w
  5671  05D7  0021               	movlb	1	; select bank1
  5672  05D8  00A5               	movwf	(_main$1031+2)^(0+128)
  5673                           
  5674                           ;main.c: 102: R = 10200/(1023/(float)readTemperature - 1);
  5675  05D9  0823               	movf	_main$1031^(0+128),w
  5676  05DA  0020               	movlb	0	; select bank0
  5677  05DB  00A0               	movwf	___ftdiv@f2
  5678  05DC  0021               	movlb	1	; select bank1
  5679  05DD  0824               	movf	(_main$1031+1)^(0+128),w
  5680  05DE  0020               	movlb	0	; select bank0
  5681  05DF  00A1               	movwf	___ftdiv@f2+1
  5682  05E0  0021               	movlb	1	; select bank1
  5683  05E1  0825               	movf	(_main$1031+2)^(0+128),w
  5684  05E2  0020               	movlb	0	; select bank0
  5685  05E3  00A2               	movwf	___ftdiv@f2+2
  5686  05E4  3060               	movlw	96
  5687  05E5  00A3               	movwf	___ftdiv@f1
  5688  05E6  301F               	movlw	31
  5689  05E7  00A4               	movwf	___ftdiv@f1+1
  5690  05E8  3046               	movlw	70
  5691  05E9  00A5               	movwf	___ftdiv@f1+2
  5692  05EA  318F  2757  3184   	fcall	___ftdiv
  5693  05ED  0020               	movlb	0	; select bank0
  5694  05EE  0820               	movf	?___ftdiv,w
  5695  05EF  0021               	movlb	1	; select bank1
  5696  05F0  00A0               	movwf	main@R^(0+128)
  5697  05F1  0020               	movlb	0	; select bank0
  5698  05F2  0821               	movf	?___ftdiv+1,w
  5699  05F3  0021               	movlb	1	; select bank1
  5700  05F4  00A1               	movwf	(main@R+1)^(0+128)
  5701  05F5  0020               	movlb	0	; select bank0
  5702  05F6  0822               	movf	?___ftdiv+2,w
  5703  05F7  0021               	movlb	1	; select bank1
  5704  05F8  00A2               	movwf	(main@R+2)^(0+128)
  5705                           
  5706                           ;main.c: 104: steinhart = R /10061;
  5707  05F9  3034               	movlw	52
  5708  05FA  0020               	movlb	0	; select bank0
  5709  05FB  00A0               	movwf	___ftdiv@f2
  5710  05FC  301D               	movlw	29
  5711  05FD  00A1               	movwf	___ftdiv@f2+1
  5712  05FE  3046               	movlw	70
  5713  05FF  00A2               	movwf	___ftdiv@f2+2
  5714  0600  0021               	movlb	1	; select bank1
  5715  0601  0820               	movf	main@R^(0+128),w
  5716  0602  0020               	movlb	0	; select bank0
  5717  0603  00A3               	movwf	___ftdiv@f1
  5718  0604  0021               	movlb	1	; select bank1
  5719  0605  0821               	movf	(main@R+1)^(0+128),w
  5720  0606  0020               	movlb	0	; select bank0
  5721  0607  00A4               	movwf	___ftdiv@f1+1
  5722  0608  0021               	movlb	1	; select bank1
  5723  0609  0822               	movf	(main@R+2)^(0+128),w
  5724  060A  0020               	movlb	0	; select bank0
  5725  060B  00A5               	movwf	___ftdiv@f1+2
  5726  060C  318F  2757  3184   	fcall	___ftdiv
  5727  060F  0020               	movlb	0	; select bank0
  5728  0610  0820               	movf	?___ftdiv,w
  5729  0611  0021               	movlb	1	; select bank1
  5730  0612  00BB               	movwf	main@steinhart^(0+128)
  5731  0613  0020               	movlb	0	; select bank0
  5732  0614  0821               	movf	?___ftdiv+1,w
  5733  0615  0021               	movlb	1	; select bank1
  5734  0616  00BC               	movwf	(main@steinhart+1)^(0+128)
  5735  0617  0020               	movlb	0	; select bank0
  5736  0618  0822               	movf	?___ftdiv+2,w
  5737  0619  0021               	movlb	1	; select bank1
  5738  061A  00BD               	movwf	(main@steinhart+2)^(0+128)
  5739                           
  5740                           ;main.c: 105: steinhart = log(steinhart);
  5741  061B  083B               	movf	main@steinhart^(0+128),w
  5742  061C  0020               	movlb	0	; select bank0
  5743  061D  00C7               	movwf	log@x
  5744  061E  0021               	movlb	1	; select bank1
  5745  061F  083C               	movf	(main@steinhart+1)^(0+128),w
  5746  0620  0020               	movlb	0	; select bank0
  5747  0621  00C8               	movwf	log@x+1
  5748  0622  0021               	movlb	1	; select bank1
  5749  0623  083D               	movf	(main@steinhart+2)^(0+128),w
  5750  0624  0020               	movlb	0	; select bank0
  5751  0625  00C9               	movwf	log@x+2
  5752  0626  3180  204C  3184   	fcall	_log
  5753  0629  0020               	movlb	0	; select bank0
  5754  062A  0847               	movf	?_log,w
  5755  062B  0021               	movlb	1	; select bank1
  5756  062C  00BB               	movwf	main@steinhart^(0+128)
  5757  062D  0020               	movlb	0	; select bank0
  5758  062E  0848               	movf	?_log+1,w
  5759  062F  0021               	movlb	1	; select bank1
  5760  0630  00BC               	movwf	(main@steinhart+1)^(0+128)
  5761  0631  0020               	movlb	0	; select bank0
  5762  0632  0849               	movf	?_log+2,w
  5763  0633  0021               	movlb	1	; select bank1
  5764  0634  00BD               	movwf	(main@steinhart+2)^(0+128)
  5765                           
  5766                           ;main.c: 106: steinhart /= 3995;
  5767  0635  30B0               	movlw	176
  5768  0636  0020               	movlb	0	; select bank0
  5769  0637  00A0               	movwf	___ftdiv@f2
  5770  0638  3079               	movlw	121
  5771  0639  00A1               	movwf	___ftdiv@f2+1
  5772  063A  3045               	movlw	69
  5773  063B  00A2               	movwf	___ftdiv@f2+2
  5774  063C  0021               	movlb	1	; select bank1
  5775  063D  083B               	movf	main@steinhart^(0+128),w
  5776  063E  0020               	movlb	0	; select bank0
  5777  063F  00A3               	movwf	___ftdiv@f1
  5778  0640  0021               	movlb	1	; select bank1
  5779  0641  083C               	movf	(main@steinhart+1)^(0+128),w
  5780  0642  0020               	movlb	0	; select bank0
  5781  0643  00A4               	movwf	___ftdiv@f1+1
  5782  0644  0021               	movlb	1	; select bank1
  5783  0645  083D               	movf	(main@steinhart+2)^(0+128),w
  5784  0646  0020               	movlb	0	; select bank0
  5785  0647  00A5               	movwf	___ftdiv@f1+2
  5786  0648  318F  2757  3184   	fcall	___ftdiv
  5787  064B  0020               	movlb	0	; select bank0
  5788  064C  0820               	movf	?___ftdiv,w
  5789  064D  0021               	movlb	1	; select bank1
  5790  064E  00BB               	movwf	main@steinhart^(0+128)
  5791  064F  0020               	movlb	0	; select bank0
  5792  0650  0821               	movf	?___ftdiv+1,w
  5793  0651  0021               	movlb	1	; select bank1
  5794  0652  00BC               	movwf	(main@steinhart+1)^(0+128)
  5795  0653  0020               	movlb	0	; select bank0
  5796  0654  0822               	movf	?___ftdiv+2,w
  5797  0655  0021               	movlb	1	; select bank1
  5798  0656  00BD               	movwf	(main@steinhart+2)^(0+128)
  5799                           
  5800                           ;main.c: 107: steinhart += 1.0 / (25 + 273.15);
  5801  0657  30CF               	movlw	207
  5802  0658  0020               	movlb	0	; select bank0
  5803  0659  00B0               	movwf	___ftadd@f1
  5804  065A  305B               	movlw	91
  5805  065B  00B1               	movwf	___ftadd@f1+1
  5806  065C  303B               	movlw	59
  5807  065D  00B2               	movwf	___ftadd@f1+2
  5808  065E  0021               	movlb	1	; select bank1
  5809  065F  083B               	movf	main@steinhart^(0+128),w
  5810  0660  0020               	movlb	0	; select bank0
  5811  0661  00B3               	movwf	___ftadd@f2
  5812  0662  0021               	movlb	1	; select bank1
  5813  0663  083C               	movf	(main@steinhart+1)^(0+128),w
  5814  0664  0020               	movlb	0	; select bank0
  5815  0665  00B4               	movwf	___ftadd@f2+1
  5816  0666  0021               	movlb	1	; select bank1
  5817  0667  083D               	movf	(main@steinhart+2)^(0+128),w
  5818  0668  0020               	movlb	0	; select bank0
  5819  0669  00B5               	movwf	___ftadd@f2+2
  5820  066A  3183  2330  3184   	fcall	___ftadd
  5821  066D  0020               	movlb	0	; select bank0
  5822  066E  0830               	movf	?___ftadd,w
  5823  066F  0021               	movlb	1	; select bank1
  5824  0670  00BB               	movwf	main@steinhart^(0+128)
  5825  0671  0020               	movlb	0	; select bank0
  5826  0672  0831               	movf	?___ftadd+1,w
  5827  0673  0021               	movlb	1	; select bank1
  5828  0674  00BC               	movwf	(main@steinhart+1)^(0+128)
  5829  0675  0020               	movlb	0	; select bank0
  5830  0676  0832               	movf	?___ftadd+2,w
  5831  0677  0021               	movlb	1	; select bank1
  5832  0678  00BD               	movwf	(main@steinhart+2)^(0+128)
  5833                           
  5834                           ;main.c: 108: steinhart = 1.0 / steinhart;
  5835  0679  083B               	movf	main@steinhart^(0+128),w
  5836  067A  0020               	movlb	0	; select bank0
  5837  067B  00A0               	movwf	___ftdiv@f2
  5838  067C  0021               	movlb	1	; select bank1
  5839  067D  083C               	movf	(main@steinhart+1)^(0+128),w
  5840  067E  0020               	movlb	0	; select bank0
  5841  067F  00A1               	movwf	___ftdiv@f2+1
  5842  0680  0021               	movlb	1	; select bank1
  5843  0681  083D               	movf	(main@steinhart+2)^(0+128),w
  5844  0682  0020               	movlb	0	; select bank0
  5845  0683  00A2               	movwf	___ftdiv@f2+2
  5846  0684  3000               	movlw	0
  5847  0685  00A3               	movwf	___ftdiv@f1
  5848  0686  3080               	movlw	128
  5849  0687  00A4               	movwf	___ftdiv@f1+1
  5850  0688  303F               	movlw	63
  5851  0689  00A5               	movwf	___ftdiv@f1+2
  5852  068A  318F  2757  3184   	fcall	___ftdiv
  5853  068D  0020               	movlb	0	; select bank0
  5854  068E  0820               	movf	?___ftdiv,w
  5855  068F  0021               	movlb	1	; select bank1
  5856  0690  00BB               	movwf	main@steinhart^(0+128)
  5857  0691  0020               	movlb	0	; select bank0
  5858  0692  0821               	movf	?___ftdiv+1,w
  5859  0693  0021               	movlb	1	; select bank1
  5860  0694  00BC               	movwf	(main@steinhart+1)^(0+128)
  5861  0695  0020               	movlb	0	; select bank0
  5862  0696  0822               	movf	?___ftdiv+2,w
  5863  0697  0021               	movlb	1	; select bank1
  5864  0698  00BD               	movwf	(main@steinhart+2)^(0+128)
  5865                           
  5866                           ;main.c: 109: steinhart -= 273.15;
  5867  0699  3093               	movlw	147
  5868  069A  0020               	movlb	0	; select bank0
  5869  069B  00BD               	movwf	___ftsub@f2
  5870  069C  3088               	movlw	136
  5871  069D  00BE               	movwf	___ftsub@f2+1
  5872  069E  3043               	movlw	67
  5873  069F  00BF               	movwf	___ftsub@f2+2
  5874  06A0  0021               	movlb	1	; select bank1
  5875  06A1  083B               	movf	main@steinhart^(0+128),w
  5876  06A2  0020               	movlb	0	; select bank0
  5877  06A3  00C0               	movwf	___ftsub@f1
  5878  06A4  0021               	movlb	1	; select bank1
  5879  06A5  083C               	movf	(main@steinhart+1)^(0+128),w
  5880  06A6  0020               	movlb	0	; select bank0
  5881  06A7  00C1               	movwf	___ftsub@f1+1
  5882  06A8  0021               	movlb	1	; select bank1
  5883  06A9  083D               	movf	(main@steinhart+2)^(0+128),w
  5884  06AA  0020               	movlb	0	; select bank0
  5885  06AB  00C2               	movwf	___ftsub@f1+2
  5886  06AC  318A  225A  3184   	fcall	___ftsub
  5887  06AF  0020               	movlb	0	; select bank0
  5888  06B0  083D               	movf	?___ftsub,w
  5889  06B1  0021               	movlb	1	; select bank1
  5890  06B2  00BB               	movwf	main@steinhart^(0+128)
  5891  06B3  0020               	movlb	0	; select bank0
  5892  06B4  083E               	movf	?___ftsub+1,w
  5893  06B5  0021               	movlb	1	; select bank1
  5894  06B6  00BC               	movwf	(main@steinhart+1)^(0+128)
  5895  06B7  0020               	movlb	0	; select bank0
  5896  06B8  083F               	movf	?___ftsub+2,w
  5897  06B9  0021               	movlb	1	; select bank1
  5898  06BA  00BD               	movwf	(main@steinhart+2)^(0+128)
  5899                           
  5900                           ;main.c: 112: displayTemp = (uint16_t)steinhart * 10;
  5901  06BB  083B               	movf	main@steinhart^(0+128),w
  5902  06BC  00F0               	movwf	___fttol@f1
  5903  06BD  083C               	movf	(main@steinhart+1)^(0+128),w
  5904  06BE  00F1               	movwf	___fttol@f1+1
  5905  06BF  083D               	movf	(main@steinhart+2)^(0+128),w
  5906  06C0  00F2               	movwf	___fttol@f1+2
  5907  06C1  318E  26D1  3184   	fcall	___fttol
  5908  06C4  0871               	movf	?___fttol+1,w
  5909  06C5  0020               	movlb	0	; select bank0
  5910  06C6  00A1               	movwf	___wmul@multiplier+1
  5911  06C7  0870               	movf	?___fttol,w
  5912  06C8  00A0               	movwf	___wmul@multiplier
  5913  06C9  300A               	movlw	10
  5914  06CA  00A2               	movwf	___wmul@multiplicand
  5915  06CB  3000               	movlw	0
  5916  06CC  00A3               	movwf	___wmul@multiplicand+1
  5917  06CD  318A  223E  3184   	fcall	___wmul
  5918  06D0  0020               	movlb	0	; select bank0
  5919  06D1  0821               	movf	?___wmul+1,w
  5920  06D2  0021               	movlb	1	; select bank1
  5921  06D3  00B6               	movwf	(main@displayTemp+1)^(0+128)
  5922  06D4  0020               	movlb	0	; select bank0
  5923  06D5  0820               	movf	?___wmul,w
  5924  06D6  0021               	movlb	1	; select bank1
  5925  06D7  00B5               	movwf	main@displayTemp^(0+128)
  5926                           
  5927                           ;main.c: 114: if(toggle == 1)
  5928  06D8  032E               	decf	main@toggle^(0+128),w
  5929  06D9  1D03               	btfss	3,2
  5930  06DA  2F1A               	goto	l3046
  5931                           
  5932                           ;main.c: 115: {
  5933                           ;main.c: 116: displayTemp = displayTemp*9/5+320;
  5934  06DB  3005               	movlw	5
  5935  06DC  0020               	movlb	0	; select bank0
  5936  06DD  00A6               	movwf	___lwdiv@divisor
  5937  06DE  3000               	movlw	0
  5938  06DF  00A7               	movwf	___lwdiv@divisor+1
  5939  06E0  0021               	movlb	1	; select bank1
  5940  06E1  0836               	movf	(main@displayTemp+1)^(0+128),w
  5941  06E2  0020               	movlb	0	; select bank0
  5942  06E3  00A1               	movwf	___wmul@multiplier+1
  5943  06E4  0021               	movlb	1	; select bank1
  5944  06E5  0835               	movf	main@displayTemp^(0+128),w
  5945  06E6  0020               	movlb	0	; select bank0
  5946  06E7  00A0               	movwf	___wmul@multiplier
  5947  06E8  3009               	movlw	9
  5948  06E9  00A2               	movwf	___wmul@multiplicand
  5949  06EA  3000               	movlw	0
  5950  06EB  00A3               	movwf	___wmul@multiplicand+1
  5951  06EC  318A  223E  3184   	fcall	___wmul
  5952  06EF  0020               	movlb	0	; select bank0
  5953  06F0  0821               	movf	?___wmul+1,w
  5954  06F1  00A9               	movwf	___lwdiv@dividend+1
  5955  06F2  0820               	movf	?___wmul,w
  5956  06F3  00A8               	movwf	___lwdiv@dividend
  5957  06F4  318B  2319  3184   	fcall	___lwdiv
  5958  06F7  0020               	movlb	0	; select bank0
  5959  06F8  0826               	movf	?___lwdiv,w
  5960  06F9  3E40               	addlw	64
  5961  06FA  0021               	movlb	1	; select bank1
  5962  06FB  00B5               	movwf	main@displayTemp^(0+128)
  5963  06FC  3001               	movlw	1
  5964  06FD  0020               	movlb	0	; select bank0
  5965  06FE  3D27               	addwfc	?___lwdiv+1,w
  5966  06FF  0021               	movlb	1	; select bank1
  5967  0700  00B6               	movwf	(main@displayTemp+1)^(0+128)
  5968                           
  5969                           ;main.c: 117: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5970  0701  01F3               	clrf	LCD_Set_Cursor@y
  5971  0702  0AF3               	incf	LCD_Set_Cursor@y,f
  5972  0703  3000               	movlw	0
  5973  0704  318B  23FF  3184   	fcall	_LCD_Set_Cursor
  5974  0707  0021               	movlb	1	; select bank1
  5975  0708  0836               	movf	(main@displayTemp+1)^(0+128),w
  5976  0709  00FA               	movwf	LCD_Write_Int@value+1
  5977  070A  0835               	movf	main@displayTemp^(0+128),w
  5978  070B  00F9               	movwf	LCD_Write_Int@value
  5979  070C  01FB               	clrf	LCD_Write_Int@fieldLength
  5980  070D  03FB               	decf	LCD_Write_Int@fieldLength,f
  5981  070E  01FC               	clrf	LCD_Write_Int@numPlaces
  5982  070F  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5983  0710  01FD               	clrf	LCD_Write_Int@sign
  5984  0711  3182  2267  3184   	fcall	_LCD_Write_Int
  5985                           
  5986                           ;main.c: 118: LCD_Write_Char(0);
  5987  0714  3000               	movlw	0
  5988  0715  318A  22BD  3184   	fcall	_LCD_Write_Char
  5989                           
  5990                           ;main.c: 119: LCD_Write_Char('F');
  5991  0718  3046               	movlw	70
  5992  0719  2F32               	goto	L1
  5993  071A                     l3046:	
  5994                           ;main.c: 121: }
  5995                           
  5996                           ;main.c: 120: LCD_Write_Char(' ');
  5997                           
  5998                           
  5999                           ;main.c: 122: else
  6000                           ;main.c: 123: {
  6001                           ;main.c: 124: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6002  071A  01F3               	clrf	LCD_Set_Cursor@y
  6003  071B  0AF3               	incf	LCD_Set_Cursor@y,f
  6004  071C  3000               	movlw	0
  6005  071D  318B  23FF  3184   	fcall	_LCD_Set_Cursor
  6006  0720  0021               	movlb	1	; select bank1
  6007  0721  0836               	movf	(main@displayTemp+1)^(0+128),w
  6008  0722  00FA               	movwf	LCD_Write_Int@value+1
  6009  0723  0835               	movf	main@displayTemp^(0+128),w
  6010  0724  00F9               	movwf	LCD_Write_Int@value
  6011  0725  01FB               	clrf	LCD_Write_Int@fieldLength
  6012  0726  03FB               	decf	LCD_Write_Int@fieldLength,f
  6013  0727  01FC               	clrf	LCD_Write_Int@numPlaces
  6014  0728  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6015  0729  01FD               	clrf	LCD_Write_Int@sign
  6016  072A  3182  2267  3184   	fcall	_LCD_Write_Int
  6017                           
  6018                           ;main.c: 125: LCD_Write_Char(0);
  6019  072D  3000               	movlw	0
  6020  072E  318A  22BD  3184   	fcall	_LCD_Write_Char
  6021                           
  6022                           ;main.c: 126: LCD_Write_Char('C');
  6023  0731  3043               	movlw	67
  6024  0732                     L1:	
  6025  0732  318A  22BD  3184   	fcall	_LCD_Write_Char
  6026                           
  6027                           ;main.c: 127: LCD_Write_Char(' ');
  6028  0735  3020               	movlw	32
  6029  0736  318A  22BD  3184   	fcall	_LCD_Write_Char
  6030                           
  6031                           ;main.c: 128: }
  6032                           ;main.c: 131: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  6033  0739  01F3               	clrf	LCD_Set_Cursor@y
  6034  073A  3001               	movlw	1
  6035  073B  318B  23FF  3184   	fcall	_LCD_Set_Cursor
  6036  073E  3025               	movlw	low (STR_4| (0+32768))
  6037  073F  00F5               	movwf	LCD_Write_String@a
  6038  0740  3090               	movlw	high (STR_4| (0+32768))
  6039  0741  00F6               	movwf	LCD_Write_String@a+1
  6040  0742  318A  2224  3184   	fcall	_LCD_Write_String
  6041                           
  6042                           ;main.c: 132: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,-1, 0, 0);};
  6043  0745  3005               	movlw	5
  6044  0746  0020               	movlb	0	; select bank0
  6045  0747  00CD               	movwf	??_main
  6046  0748  084D               	movf	??_main,w
  6047  0749  00F3               	movwf	LCD_Set_Cursor@y
  6048  074A  3001               	movlw	1
  6049  074B  318B  23FF  3184   	fcall	_LCD_Set_Cursor
  6050  074E  0021               	movlb	1	; select bank1
  6051  074F  0827               	movf	(main@minutes+1)^(0+128),w
  6052  0750  00FA               	movwf	LCD_Write_Int@value+1
  6053  0751  0826               	movf	main@minutes^(0+128),w
  6054  0752  00F9               	movwf	LCD_Write_Int@value
  6055  0753  01FB               	clrf	LCD_Write_Int@fieldLength
  6056  0754  03FB               	decf	LCD_Write_Int@fieldLength,f
  6057  0755  01FC               	clrf	LCD_Write_Int@numPlaces
  6058  0756  01FD               	clrf	LCD_Write_Int@sign
  6059  0757  3182  2267  3184   	fcall	_LCD_Write_Int
  6060                           
  6061                           ;main.c: 133: LCD_Write_Char(' ');
  6062  075A  3020               	movlw	32
  6063  075B  318A  22BD  3184   	fcall	_LCD_Write_Char
  6064                           
  6065                           ;main.c: 136: counter +=1;
  6066  075E  3001               	movlw	1
  6067  075F  0021               	movlb	1	; select bank1
  6068  0760  07AB               	addwf	main@counter^(0+128),f
  6069  0761  3000               	movlw	0
  6070  0762  3DAC               	addwfc	(main@counter+1)^(0+128),f
  6071                           
  6072                           ;main.c: 138: if(counter>12)
  6073  0763  3000               	movlw	0
  6074  0764  022C               	subwf	(main@counter+1)^(0+128),w
  6075  0765  300D               	movlw	13
  6076  0766  1903               	skipnz
  6077  0767  022B               	subwf	main@counter^(0+128),w
  6078  0768  1C03               	skipc
  6079  0769  2F74               	goto	l3074
  6080                           
  6081                           ;main.c: 139: {
  6082                           ;main.c: 140: toggle = 1-toggle;
  6083  076A  032E               	decf	main@toggle^(0+128),w
  6084  076B  3AFF               	xorlw	255
  6085  076C  3E01               	addlw	1
  6086  076D  0020               	movlb	0	; select bank0
  6087  076E  00CD               	movwf	??_main
  6088  076F  084D               	movf	??_main,w
  6089  0770  0021               	movlb	1	; select bank1
  6090  0771  00AE               	movwf	main@toggle^(0+128)
  6091                           
  6092                           ;main.c: 141: counter = 0;
  6093  0772  01AB               	clrf	main@counter^(0+128)
  6094  0773  01AC               	clrf	(main@counter+1)^(0+128)
  6095  0774                     l3074:	
  6096                           
  6097                           ;main.c: 142: }
  6098                           ;main.c: 145: if(TMR0IF)
  6099  0774  002E               	movlb	14	; select bank14
  6100  0775  1E8C               	btfss	12,5	;volatile
  6101  0776  2F83               	goto	l3080
  6102                           
  6103                           ;main.c: 146: {
  6104                           ;main.c: 147: TMR0H = 0x24;
  6105  0777  3024               	movlw	36
  6106  0778  0020               	movlb	0	; select bank0
  6107  0779  009D               	movwf	29	;volatile
  6108                           
  6109                           ;main.c: 148: TMR0L = 0x9F;
  6110  077A  309F               	movlw	159
  6111  077B  009C               	movwf	28	;volatile
  6112                           
  6113                           ;main.c: 149: TMR0IF = 0;
  6114  077C  002E               	movlb	14	; select bank14
  6115  077D  128C               	bcf	12,5	;volatile
  6116                           
  6117                           ;main.c: 150: seconds+=1;
  6118  077E  3001               	movlw	1
  6119  077F  0021               	movlb	1	; select bank1
  6120  0780  07A8               	addwf	main@seconds^(0+128),f
  6121  0781  3000               	movlw	0
  6122  0782  3DA9               	addwfc	(main@seconds+1)^(0+128),f
  6123  0783                     l3080:	
  6124                           
  6125                           ;main.c: 151: }
  6126                           ;main.c: 153: if(setpoint - steinhart < 2)
  6127  0783  0021               	movlb	1	; select bank1
  6128  0784  083B               	movf	main@steinhart^(0+128),w
  6129  0785  00F0               	movwf	___ftneg@f1
  6130  0786  083C               	movf	(main@steinhart+1)^(0+128),w
  6131  0787  00F1               	movwf	___ftneg@f1+1
  6132  0788  083D               	movf	(main@steinhart+2)^(0+128),w
  6133  0789  00F2               	movwf	___ftneg@f1+2
  6134  078A  3189  212D  3184   	fcall	___ftneg
  6135  078D  0870               	movf	?___ftneg,w
  6136  078E  0020               	movlb	0	; select bank0
  6137  078F  00B0               	movwf	___ftadd@f1
  6138  0790  0871               	movf	?___ftneg+1,w
  6139  0791  00B1               	movwf	___ftadd@f1+1
  6140  0792  0872               	movf	?___ftneg+2,w
  6141  0793  00B2               	movwf	___ftadd@f1+2
  6142  0794  0868               	movf	_setpoint,w
  6143  0795  318A  220A  3184   	fcall	___lbtoft
  6144  0798  0878               	movf	?___lbtoft,w
  6145  0799  0020               	movlb	0	; select bank0
  6146  079A  00B3               	movwf	___ftadd@f2
  6147  079B  0879               	movf	?___lbtoft+1,w
  6148  079C  00B4               	movwf	___ftadd@f2+1
  6149  079D  087A               	movf	?___lbtoft+2,w
  6150  079E  00B5               	movwf	___ftadd@f2+2
  6151  079F  3183  2330  3184   	fcall	___ftadd
  6152  07A2  0020               	movlb	0	; select bank0
  6153  07A3  0830               	movf	?___ftadd,w
  6154  07A4  00BD               	movwf	___ftge@ff1
  6155  07A5  0831               	movf	?___ftadd+1,w
  6156  07A6  00BE               	movwf	___ftge@ff1+1
  6157  07A7  0832               	movf	?___ftadd+2,w
  6158  07A8  00BF               	movwf	___ftge@ff1+2
  6159  07A9  3000               	movlw	0
  6160  07AA  00C0               	movwf	___ftge@ff2
  6161  07AB  3000               	movlw	0
  6162  07AC  00C1               	movwf	___ftge@ff2+1
  6163  07AD  3040               	movlw	64
  6164  07AE  00C2               	movwf	___ftge@ff2+2
  6165  07AF  318B  23C3  3184   	fcall	___ftge
  6166  07B2  1803               	btfsc	3,0
  6167  07B3  2FC2               	goto	l3088
  6168                           
  6169                           ;main.c: 154: {
  6170                           ;main.c: 155: if(seconds>61)
  6171  07B4  3000               	movlw	0
  6172  07B5  0021               	movlb	1	; select bank1
  6173  07B6  0229               	subwf	(main@seconds+1)^(0+128),w
  6174  07B7  303E               	movlw	62
  6175  07B8  1903               	skipnz
  6176  07B9  0228               	subwf	main@seconds^(0+128),w
  6177  07BA  1C03               	skipc
  6178  07BB  2FC2               	goto	l3088
  6179                           
  6180                           ;main.c: 156: {
  6181                           ;main.c: 157: minutes+=1;
  6182  07BC  3001               	movlw	1
  6183  07BD  07A6               	addwf	main@minutes^(0+128),f
  6184  07BE  3000               	movlw	0
  6185  07BF  3DA7               	addwfc	(main@minutes+1)^(0+128),f
  6186                           
  6187                           ;main.c: 158: seconds = 0;
  6188  07C0  01A8               	clrf	main@seconds^(0+128)
  6189  07C1  01A9               	clrf	(main@seconds+1)^(0+128)
  6190  07C2                     l3088:	
  6191                           
  6192                           ;main.c: 159: }
  6193                           ;main.c: 160: }
  6194                           ;main.c: 163: readButtons();
  6195  07C2  318D  25CE  3184   	fcall	_readButtons
  6196                           
  6197                           ;main.c: 164: tempSetpoint();
  6198  07C5  3181  21AD  3184   	fcall	_tempSetpoint
  6199  07C8  2C43               	goto	l2964
  6200  07C9                     __end_of_main:	
  6201                           
  6202                           	psect	text1
  6203  01AD                     __ptext1:	
  6204 ;; *************** function _tempSetpoint *****************
  6205 ;; Defined at:
  6206 ;;		line 12 in file "user.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  counter         1   20[BANK0 ] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;Total ram usage:        4 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    4
  6227 ;; This function calls:
  6228 ;;		_LCD_Clear
  6229 ;;		_LCD_Set_Cursor
  6230 ;;		_LCD_Write_Char
  6231 ;;		_LCD_Write_Int
  6232 ;;		_LCD_Write_String
  6233 ;;		_readButtons
  6234 ;; This function is called by:
  6235 ;;		_main
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _tempSetpoint
  6241  01AD                     _tempSetpoint:	
  6242                           
  6243                           ;user.c: 14: uint8_t counter = 0;
  6244                           
  6245                           ;incstack = 0
  6246                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6247  01AD  0020               	movlb	0	; select bank0
  6248  01AE  01B4               	clrf	tempSetpoint@counter
  6249                           
  6250                           ;user.c: 16: oldSetpoint = setpoint;
  6251  01AF  0868               	movf	_setpoint,w
  6252  01B0  00B1               	movwf	??_tempSetpoint
  6253  01B1  0831               	movf	??_tempSetpoint,w
  6254  01B2  00DF               	movwf	_oldSetpoint
  6255  01B3                     l2710:	
  6256                           ;user.c: 18: while(downCount >= 5)
  6257                           
  6258  01B3  3005               	movlw	5
  6259  01B4  0020               	movlb	0	; select bank0
  6260  01B5  025E               	subwf	_downCount,w
  6261  01B6  1C03               	btfss	3,0
  6262  01B7  2A4D               	goto	l2738
  6263                           
  6264                           ;user.c: 19: {
  6265                           ;user.c: 20: counter+=1;
  6266  01B8  3001               	movlw	1
  6267  01B9  00B1               	movwf	??_tempSetpoint
  6268  01BA  0831               	movf	??_tempSetpoint,w
  6269  01BB  07B4               	addwf	tempSetpoint@counter,f
  6270                           
  6271                           ;user.c: 21: if(counter<=1)
  6272  01BC  3002               	movlw	2
  6273  01BD  0234               	subwf	tempSetpoint@counter,w
  6274  01BE  1803               	skipnc
  6275  01BF  29C3               	goto	l2690
  6276                           
  6277                           ;user.c: 22: {
  6278                           ;user.c: 23: LCD_Clear();
  6279  01C0  3189  211D  3181   	fcall	_LCD_Clear
  6280  01C3                     l2690:	
  6281                           
  6282                           ;user.c: 24: }
  6283                           ;user.c: 25: setpoint-=1;
  6284  01C3  3001               	movlw	1
  6285  01C4  0020               	movlb	0	; select bank0
  6286  01C5  02E8               	subwf	_setpoint,f
  6287                           
  6288                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6289  01C6  01F3               	clrf	LCD_Set_Cursor@y
  6290  01C7  3000               	movlw	0
  6291  01C8  318B  23FF  3181   	fcall	_LCD_Set_Cursor
  6292  01CB  301B               	movlw	low (STR_1| (0+32768))
  6293  01CC  00F5               	movwf	LCD_Write_String@a
  6294  01CD  3090               	movlw	high (STR_1| (0+32768))
  6295  01CE  00F6               	movwf	LCD_Write_String@a+1
  6296  01CF  318A  2224  3181   	fcall	_LCD_Write_String
  6297                           
  6298                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6299  01D2  01F3               	clrf	LCD_Set_Cursor@y
  6300  01D3  3001               	movlw	1
  6301  01D4  318B  23FF  3181   	fcall	_LCD_Set_Cursor
  6302  01D7  0020               	movlb	0	; select bank0
  6303  01D8  0868               	movf	_setpoint,w
  6304  01D9  00B1               	movwf	??_tempSetpoint
  6305  01DA  01B2               	clrf	??_tempSetpoint+1
  6306  01DB  0831               	movf	??_tempSetpoint,w
  6307  01DC  00F9               	movwf	LCD_Write_Int@value
  6308  01DD  0832               	movf	??_tempSetpoint+1,w
  6309  01DE  00FA               	movwf	LCD_Write_Int@value+1
  6310  01DF  3003               	movlw	3
  6311  01E0  00B3               	movwf	??_tempSetpoint+2
  6312  01E1  0833               	movf	??_tempSetpoint+2,w
  6313  01E2  00FB               	movwf	LCD_Write_Int@fieldLength
  6314  01E3  01FC               	clrf	LCD_Write_Int@numPlaces
  6315  01E4  01FD               	clrf	LCD_Write_Int@sign
  6316  01E5  3182  2267  3181   	fcall	_LCD_Write_Int
  6317                           
  6318                           ;user.c: 28: LCD_Write_Char(0);
  6319  01E8  3000               	movlw	0
  6320  01E9  318A  22BD  3181   	fcall	_LCD_Write_Char
  6321                           
  6322                           ;user.c: 29: LCD_Write_Char('C');
  6323  01EC  3043               	movlw	67
  6324  01ED  318A  22BD  3181   	fcall	_LCD_Write_Char
  6325                           
  6326                           ;user.c: 30: LCD_Write_Char(' ');
  6327  01F0  3020               	movlw	32
  6328  01F1  318A  22BD  3181   	fcall	_LCD_Write_Char
  6329                           
  6330                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6331  01F4  3072               	movlw	114
  6332  01F5  0020               	movlb	0	; select bank0
  6333  01F6  00B2               	movwf	??_tempSetpoint+1
  6334  01F7  30A1               	movlw	161
  6335  01F8  00B1               	movwf	??_tempSetpoint
  6336  01F9                     u3357:	
  6337  01F9  0BB1               	decfsz	??_tempSetpoint,f
  6338  01FA  29F9               	goto	u3357
  6339  01FB  0BB2               	decfsz	??_tempSetpoint+1,f
  6340  01FC  29F9               	goto	u3357
  6341  01FD  3200               	nop2
  6342                           
  6343                           ;user.c: 32: readButtons();
  6344  01FE  318D  25CE  3181   	fcall	_readButtons
  6345  0201  29B3               	goto	l2710
  6346  0202                     l2712:	
  6347                           ;user.c: 33: }
  6348                           ;user.c: 35: while(upCount >= 5)
  6349                           
  6350                           
  6351                           ;user.c: 36: {
  6352                           ;user.c: 37: counter+=1;
  6353  0202  3001               	movlw	1
  6354  0203  00B1               	movwf	??_tempSetpoint
  6355  0204  0831               	movf	??_tempSetpoint,w
  6356  0205  07B4               	addwf	tempSetpoint@counter,f
  6357                           
  6358                           ;user.c: 38: if(counter<=1)
  6359  0206  3002               	movlw	2
  6360  0207  0234               	subwf	tempSetpoint@counter,w
  6361  0208  1803               	skipnc
  6362  0209  2A0D               	goto	l2718
  6363                           
  6364                           ;user.c: 39: {
  6365                           ;user.c: 40: LCD_Clear();
  6366  020A  3189  211D  3181   	fcall	_LCD_Clear
  6367  020D                     l2718:	
  6368                           
  6369                           ;user.c: 41: }
  6370                           ;user.c: 42: setpoint+=1;
  6371  020D  3001               	movlw	1
  6372  020E  0020               	movlb	0	; select bank0
  6373  020F  00B1               	movwf	??_tempSetpoint
  6374  0210  0831               	movf	??_tempSetpoint,w
  6375  0211  07E8               	addwf	_setpoint,f
  6376                           
  6377                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6378  0212  01F3               	clrf	LCD_Set_Cursor@y
  6379  0213  3000               	movlw	0
  6380  0214  318B  23FF  3181   	fcall	_LCD_Set_Cursor
  6381  0217  301B               	movlw	low (STR_1| (0+32768))
  6382  0218  00F5               	movwf	LCD_Write_String@a
  6383  0219  3090               	movlw	high (STR_1| (0+32768))
  6384  021A  00F6               	movwf	LCD_Write_String@a+1
  6385  021B  318A  2224  3181   	fcall	_LCD_Write_String
  6386                           
  6387                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6388  021E  01F3               	clrf	LCD_Set_Cursor@y
  6389  021F  3001               	movlw	1
  6390  0220  318B  23FF  3181   	fcall	_LCD_Set_Cursor
  6391  0223  0020               	movlb	0	; select bank0
  6392  0224  0868               	movf	_setpoint,w
  6393  0225  00B1               	movwf	??_tempSetpoint
  6394  0226  01B2               	clrf	??_tempSetpoint+1
  6395  0227  0831               	movf	??_tempSetpoint,w
  6396  0228  00F9               	movwf	LCD_Write_Int@value
  6397  0229  0832               	movf	??_tempSetpoint+1,w
  6398  022A  00FA               	movwf	LCD_Write_Int@value+1
  6399  022B  3003               	movlw	3
  6400  022C  00B3               	movwf	??_tempSetpoint+2
  6401  022D  0833               	movf	??_tempSetpoint+2,w
  6402  022E  00FB               	movwf	LCD_Write_Int@fieldLength
  6403  022F  01FC               	clrf	LCD_Write_Int@numPlaces
  6404  0230  01FD               	clrf	LCD_Write_Int@sign
  6405  0231  3182  2267  3181   	fcall	_LCD_Write_Int
  6406                           
  6407                           ;user.c: 45: LCD_Write_Char(0);
  6408  0234  3000               	movlw	0
  6409  0235  318A  22BD  3181   	fcall	_LCD_Write_Char
  6410                           
  6411                           ;user.c: 46: LCD_Write_Char('C');
  6412  0238  3043               	movlw	67
  6413  0239  318A  22BD  3181   	fcall	_LCD_Write_Char
  6414                           
  6415                           ;user.c: 47: LCD_Write_Char(' ');
  6416  023C  3020               	movlw	32
  6417  023D  318A  22BD  3181   	fcall	_LCD_Write_Char
  6418                           
  6419                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6420  0240  3072               	movlw	114
  6421  0241  0020               	movlb	0	; select bank0
  6422  0242  00B2               	movwf	??_tempSetpoint+1
  6423  0243  30A1               	movlw	161
  6424  0244  00B1               	movwf	??_tempSetpoint
  6425  0245                     u3367:	
  6426  0245  0BB1               	decfsz	??_tempSetpoint,f
  6427  0246  2A45               	goto	u3367
  6428  0247  0BB2               	decfsz	??_tempSetpoint+1,f
  6429  0248  2A45               	goto	u3367
  6430  0249  3200               	nop2
  6431                           
  6432                           ;user.c: 49: readButtons();
  6433  024A  318D  25CE  3181   	fcall	_readButtons
  6434  024D                     l2738:	
  6435  024D  3005               	movlw	5
  6436  024E  0020               	movlb	0	; select bank0
  6437  024F  0261               	subwf	_upCount,w
  6438  0250  1803               	skipnc
  6439  0251  2A02               	goto	l2712
  6440                           
  6441                           ;user.c: 50: }
  6442                           ;user.c: 52: counter = 0;
  6443  0252  01B4               	clrf	tempSetpoint@counter
  6444                           
  6445                           ;user.c: 54: if(oldSetpoint!=setpoint)
  6446  0253  085F               	movf	_oldSetpoint,w
  6447  0254  0668               	xorwf	_setpoint,w
  6448  0255  1903               	skipnz
  6449  0256  0008               	return
  6450                           
  6451                           ;user.c: 55: {
  6452                           ;user.c: 56: _delay((unsigned long)((3000)*(1000000/4000.0)));
  6453  0257  3004               	movlw	4
  6454  0258  00B3               	movwf	??_tempSetpoint+2
  6455  0259  30CF               	movlw	207
  6456  025A  00B2               	movwf	??_tempSetpoint+1
  6457  025B  3003               	movlw	3
  6458  025C  00B1               	movwf	??_tempSetpoint
  6459  025D                     u3377:	
  6460  025D  0BB1               	decfsz	??_tempSetpoint,f
  6461  025E  2A5D               	goto	u3377
  6462  025F  0BB2               	decfsz	??_tempSetpoint+1,f
  6463  0260  2A5D               	goto	u3377
  6464  0261  0BB3               	decfsz	??_tempSetpoint+2,f
  6465  0262  2A5D               	goto	u3377
  6466  0263  3200               	nop2
  6467                           
  6468                           ;user.c: 57: LCD_Clear();
  6469  0264  3189  211D         	fcall	_LCD_Clear
  6470  0266  0008               	return
  6471  0267                     __end_of_tempSetpoint:	
  6472                           
  6473                           	psect	text2
  6474  0DCE                     __ptext2:	
  6475 ;; *************** function _readButtons *****************
  6476 ;; Defined at:
  6477 ;;		line 62 in file "user.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;Total ram usage:        3 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    3
  6498 ;; This function calls:
  6499 ;;		_LCD_Clear
  6500 ;;		_LCD_Set_Cursor
  6501 ;;		_LCD_Write_Char
  6502 ;;		_LCD_Write_Int
  6503 ;;		_LCD_Write_String
  6504 ;; This function is called by:
  6505 ;;		_tempSetpoint
  6506 ;;		_main
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           
  6511                           ;psect for function _readButtons
  6512  0DCE                     _readButtons:	
  6513                           
  6514                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6518  0DCE  0020               	movlb	0	; select bank0
  6519  0DCF  1D8C               	btfss	12,3	;volatile
  6520  0DD0  1A0C               	btfsc	12,4	;volatile
  6521  0DD1  2E2D               	goto	l2560
  6522                           
  6523                           ;user.c: 65: {
  6524                           ;user.c: 66: downCount = 0;
  6525  0DD2  01DE               	clrf	_downCount
  6526                           
  6527                           ;user.c: 67: upCount = 0;
  6528  0DD3  01E1               	clrf	_upCount
  6529                           
  6530                           ;user.c: 68: toggleCount+=1;
  6531  0DD4  3001               	movlw	1
  6532  0DD5  00AE               	movwf	??_readButtons
  6533  0DD6  082E               	movf	??_readButtons,w
  6534  0DD7  07E0               	addwf	_toggleCount,f
  6535                           
  6536                           ;user.c: 69: if(toggleCount >=6)
  6537  0DD8  3006               	movlw	6
  6538  0DD9  0260               	subwf	_toggleCount,w
  6539  0DDA  1C03               	skipc
  6540  0DDB  2E2D               	goto	l2560
  6541                           
  6542                           ;user.c: 70: {
  6543                           ;user.c: 71: x+=1;
  6544  0DDC  3001               	movlw	1
  6545  0DDD  00AE               	movwf	??_readButtons
  6546  0DDE  082E               	movf	??_readButtons,w
  6547  0DDF  07E2               	addwf	_x,f
  6548                           
  6549                           ;user.c: 72: if(x>4)
  6550  0DE0  3005               	movlw	5
  6551  0DE1  0262               	subwf	_x,w
  6552  0DE2  1803               	btfsc	3,0
  6553                           
  6554                           ;user.c: 73: {
  6555                           ;user.c: 74: x=0;
  6556  0DE3  01E2               	clrf	_x
  6557                           
  6558                           ;user.c: 75: }
  6559                           ;user.c: 76: setpoint = presets[x];
  6560  0DE4  0862               	movf	_x,w
  6561  0DE5  3E63               	addlw	(low (_presets| 0))& (0+255)
  6562  0DE6  0086               	movwf	6
  6563  0DE7  0187               	clrf	7
  6564  0DE8  0801               	movf	1,w
  6565  0DE9  00AE               	movwf	??_readButtons
  6566  0DEA  082E               	movf	??_readButtons,w
  6567  0DEB  00E8               	movwf	_setpoint
  6568                           
  6569                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6570  0DEC  01F3               	clrf	LCD_Set_Cursor@y
  6571  0DED  3000               	movlw	0
  6572  0DEE  318B  23FF  318D   	fcall	_LCD_Set_Cursor
  6573  0DF1  301B               	movlw	low (STR_1| (0+32768))
  6574  0DF2  00F5               	movwf	LCD_Write_String@a
  6575  0DF3  3090               	movlw	high (STR_1| (0+32768))
  6576  0DF4  00F6               	movwf	LCD_Write_String@a+1
  6577  0DF5  318A  2224  318D   	fcall	_LCD_Write_String
  6578                           
  6579                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6580  0DF8  01F3               	clrf	LCD_Set_Cursor@y
  6581  0DF9  3001               	movlw	1
  6582  0DFA  318B  23FF  318D   	fcall	_LCD_Set_Cursor
  6583  0DFD  0020               	movlb	0	; select bank0
  6584  0DFE  0868               	movf	_setpoint,w
  6585  0DFF  00AE               	movwf	??_readButtons
  6586  0E00  01AF               	clrf	??_readButtons+1
  6587  0E01  082E               	movf	??_readButtons,w
  6588  0E02  00F9               	movwf	LCD_Write_Int@value
  6589  0E03  082F               	movf	??_readButtons+1,w
  6590  0E04  00FA               	movwf	LCD_Write_Int@value+1
  6591  0E05  3003               	movlw	3
  6592  0E06  00B0               	movwf	??_readButtons+2
  6593  0E07  0830               	movf	??_readButtons+2,w
  6594  0E08  00FB               	movwf	LCD_Write_Int@fieldLength
  6595  0E09  01FC               	clrf	LCD_Write_Int@numPlaces
  6596  0E0A  01FD               	clrf	LCD_Write_Int@sign
  6597  0E0B  3182  2267  318D   	fcall	_LCD_Write_Int
  6598                           
  6599                           ;user.c: 79: LCD_Write_Char(0);
  6600  0E0E  3000               	movlw	0
  6601  0E0F  318A  22BD  318D   	fcall	_LCD_Write_Char
  6602                           
  6603                           ;user.c: 80: LCD_Write_Char('C');
  6604  0E12  3043               	movlw	67
  6605  0E13  318A  22BD  318D   	fcall	_LCD_Write_Char
  6606                           
  6607                           ;user.c: 81: LCD_Write_Char(' ');
  6608  0E16  3020               	movlw	32
  6609  0E17  318A  22BD  318D   	fcall	_LCD_Write_Char
  6610                           
  6611                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6612  0E1A  3002               	movlw	2
  6613  0E1B  0020               	movlb	0	; select bank0
  6614  0E1C  00B0               	movwf	??_readButtons+2
  6615  0E1D  30E7               	movlw	231
  6616  0E1E  00AF               	movwf	??_readButtons+1
  6617  0E1F  3000               	movlw	0
  6618  0E20  00AE               	movwf	??_readButtons
  6619  0E21                     u3387:	
  6620  0E21  0BAE               	decfsz	??_readButtons,f
  6621  0E22  2E21               	goto	u3387
  6622  0E23  0BAF               	decfsz	??_readButtons+1,f
  6623  0E24  2E21               	goto	u3387
  6624  0E25  0BB0               	decfsz	??_readButtons+2,f
  6625  0E26  2E21               	goto	u3387
  6626  0E27  0000               	nop
  6627                           
  6628                           ;user.c: 83: toggleCount = 0;
  6629  0E28  0020               	movlb	0	; select bank0
  6630  0E29  01E0               	clrf	_toggleCount
  6631                           
  6632                           ;user.c: 84: LCD_Clear();
  6633  0E2A  3189  211D  318D   	fcall	_LCD_Clear
  6634  0E2D                     l2560:	
  6635                           
  6636                           ;user.c: 85: }
  6637                           ;user.c: 86: }
  6638                           ;user.c: 87: if(RA3 == 0)
  6639  0E2D  0020               	movlb	0	; select bank0
  6640  0E2E  198C               	btfsc	12,3	;volatile
  6641  0E2F  2E3D               	goto	l2568
  6642                           
  6643                           ;user.c: 88: {
  6644                           ;user.c: 89: downCount +=1;
  6645  0E30  3001               	movlw	1
  6646  0E31  00AE               	movwf	??_readButtons
  6647  0E32  082E               	movf	??_readButtons,w
  6648  0E33  07DE               	addwf	_downCount,f
  6649                           
  6650                           ;user.c: 90: if(downCount>5)
  6651  0E34  3006               	movlw	6
  6652  0E35  025E               	subwf	_downCount,w
  6653  0E36  1C03               	skipc
  6654  0E37  2E3E               	goto	l2570
  6655                           
  6656                           ;user.c: 91: {
  6657                           ;user.c: 92: downCount = 5;
  6658  0E38  3005               	movlw	5
  6659  0E39  00AE               	movwf	??_readButtons
  6660  0E3A  082E               	movf	??_readButtons,w
  6661  0E3B  00DE               	movwf	_downCount
  6662                           
  6663                           ;user.c: 93: }
  6664                           ;user.c: 94: }
  6665  0E3C  2E3E               	goto	l2570
  6666  0E3D                     l2568:	
  6667                           
  6668                           ;user.c: 95: else
  6669                           ;user.c: 96: {
  6670                           ;user.c: 97: downCount = 0;
  6671  0E3D  01DE               	clrf	_downCount
  6672  0E3E                     l2570:	
  6673                           
  6674                           ;user.c: 98: }
  6675                           ;user.c: 100: if(RA4 == 0)
  6676  0E3E  1A0C               	btfsc	12,4	;volatile
  6677  0E3F  2E4D               	goto	l2578
  6678                           
  6679                           ;user.c: 101: {
  6680                           ;user.c: 102: upCount +=1;
  6681  0E40  3001               	movlw	1
  6682  0E41  00AE               	movwf	??_readButtons
  6683  0E42  082E               	movf	??_readButtons,w
  6684  0E43  07E1               	addwf	_upCount,f
  6685                           
  6686                           ;user.c: 103: if(upCount>5)
  6687  0E44  3006               	movlw	6
  6688  0E45  0261               	subwf	_upCount,w
  6689  0E46  1C03               	skipc
  6690  0E47  0008               	return
  6691                           
  6692                           ;user.c: 104: {
  6693                           ;user.c: 105: upCount = 5;
  6694  0E48  3005               	movlw	5
  6695  0E49  00AE               	movwf	??_readButtons
  6696  0E4A  082E               	movf	??_readButtons,w
  6697  0E4B  00E1               	movwf	_upCount
  6698                           
  6699                           ;user.c: 106: }
  6700                           ;user.c: 107: }
  6701  0E4C  0008               	return
  6702  0E4D                     l2578:	
  6703                           
  6704                           ;user.c: 108: else
  6705                           ;user.c: 109: {
  6706                           ;user.c: 110: upCount = 0;
  6707  0E4D  01E1               	clrf	_upCount
  6708  0E4E  0008               	return
  6709  0E4F                     __end_of_readButtons:	
  6710                           
  6711                           	psect	text3
  6712  0A24                     __ptext3:	
  6713 ;; *************** function _LCD_Write_String *****************
  6714 ;; Defined at:
  6715 ;;		line 239 in file "lcd.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  a               2    5[COMMON] PTR const unsigned char 
  6718 ;;		 -> STR_4(6), STR_3(10), STR_2(10), STR_1(10), 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  i               2    8[COMMON] int 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;Total ram usage:        5 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    2
  6737 ;; This function calls:
  6738 ;;		_LCD_Write_Char
  6739 ;; This function is called by:
  6740 ;;		_tempSetpoint
  6741 ;;		_readButtons
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _LCD_Write_String
  6748  0A24                     _LCD_Write_String:	
  6749                           
  6750                           ;lcd.c: 241: int i;
  6751                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6752                           
  6753                           ;incstack = 0
  6754                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6755  0A24  01F8               	clrf	LCD_Write_String@i
  6756  0A25  01F9               	clrf	LCD_Write_String@i+1
  6757  0A26                     l2182:	
  6758  0A26  0875               	movf	LCD_Write_String@a,w
  6759  0A27  0778               	addwf	LCD_Write_String@i,w
  6760  0A28  0084               	movwf	4
  6761  0A29  0876               	movf	LCD_Write_String@a+1,w
  6762  0A2A  3D79               	addwfc	LCD_Write_String@i+1,w
  6763  0A2B  0085               	movwf	5
  6764  0A2C  0012               	moviw fsr0++
  6765  0A2D  1903               	btfsc	3,2
  6766  0A2E  0008               	return
  6767                           
  6768                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6769  0A2F  0875               	movf	LCD_Write_String@a,w
  6770  0A30  0778               	addwf	LCD_Write_String@i,w
  6771  0A31  0084               	movwf	4
  6772  0A32  0876               	movf	LCD_Write_String@a+1,w
  6773  0A33  3D79               	addwfc	LCD_Write_String@i+1,w
  6774  0A34  0085               	movwf	5
  6775  0A35  0800               	movf	0,w	;code access
  6776  0A36  318A  22BD  318A   	fcall	_LCD_Write_Char
  6777  0A39  3001               	movlw	1
  6778  0A3A  07F8               	addwf	LCD_Write_String@i,f
  6779  0A3B  3000               	movlw	0
  6780  0A3C  3DF9               	addwfc	LCD_Write_String@i+1,f
  6781  0A3D  2A26               	goto	l2182
  6782  0A3E                     __end_of_LCD_Write_String:	
  6783                           
  6784                           	psect	text4
  6785  0267                     __ptext4:	
  6786 ;; *************** function _LCD_Write_Int *****************
  6787 ;; Defined at:
  6788 ;;		line 246 in file "lcd.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  value           2    9[COMMON] int 
  6791 ;;  fieldLength     1   11[COMMON] char 
  6792 ;;  numPlaces       1   12[COMMON] char 
  6793 ;;  sign            1   13[COMMON] char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  str             5    5[BANK0 ] unsigned char [5]
  6796 ;;  i               2   12[BANK0 ] int 
  6797 ;;  j               2   10[BANK0 ] int 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6807 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;Total ram usage:       19 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    2
  6814 ;; This function calls:
  6815 ;;		_LCD_Write_Char
  6816 ;;		___awdiv
  6817 ;;		___awmod
  6818 ;; This function is called by:
  6819 ;;		_tempSetpoint
  6820 ;;		_readButtons
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _LCD_Write_Int
  6827  0267                     _LCD_Write_Int:	
  6828                           
  6829                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6830                           
  6831                           ;incstack = 0
  6832                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6833  0267  3057               	movlw	low LCD_Write_Int@F13685
  6834  0268  0086               	movwf	6
  6835  0269  3000               	movlw	high LCD_Write_Int@F13685
  6836  026A  0087               	movwf	7
  6837  026B  3025               	movlw	low LCD_Write_Int@str
  6838  026C  0084               	movwf	4
  6839  026D  3000               	movlw	high LCD_Write_Int@str
  6840  026E  0085               	movwf	5
  6841  026F  3005               	movlw	5
  6842  0270  0020               	movlb	0	; select bank0
  6843  0271  00A0               	movwf	??_LCD_Write_Int
  6844  0272                     u2090:	
  6845  0272  0016               	moviw fsr1++
  6846  0273  001A               	movwi fsr0++
  6847  0274  0BA0               	decfsz	??_LCD_Write_Int,f
  6848  0275  2A72               	goto	u2090
  6849                           
  6850                           ;lcd.c: 249: int i=4,j=0;
  6851  0276  3004               	movlw	4
  6852  0277  00AC               	movwf	LCD_Write_Int@i
  6853  0278  3000               	movlw	0
  6854  0279  00AD               	movwf	LCD_Write_Int@i+1
  6855  027A  01AA               	clrf	LCD_Write_Int@j
  6856  027B  01AB               	clrf	LCD_Write_Int@j+1
  6857                           
  6858                           ;lcd.c: 251: if(value<0)
  6859  027C  1FFA               	btfss	LCD_Write_Int@value+1,7
  6860  027D  2A88               	goto	l2196
  6861                           
  6862                           ;lcd.c: 252: {
  6863                           ;lcd.c: 253: LCD_Write_Char('-');
  6864  027E  302D               	movlw	45
  6865  027F  318A  22BD  3182   	fcall	_LCD_Write_Char
  6866                           
  6867                           ;lcd.c: 254: value=value*-1;
  6868  0282  09F9               	comf	LCD_Write_Int@value,f
  6869  0283  09FA               	comf	LCD_Write_Int@value+1,f
  6870  0284  0AF9               	incf	LCD_Write_Int@value,f
  6871  0285  1903               	skipnz
  6872  0286  0AFA               	incf	LCD_Write_Int@value+1,f
  6873                           
  6874                           ;lcd.c: 255: }
  6875  0287  2A8F               	goto	l2206
  6876  0288                     l2196:	
  6877                           
  6878                           ;lcd.c: 257: else
  6879                           ;lcd.c: 258: {
  6880                           ;lcd.c: 259: if(sign == 1)
  6881  0288  037D               	decf	LCD_Write_Int@sign,w
  6882  0289  1D03               	btfss	3,2
  6883  028A  2A8F               	goto	l2206
  6884                           
  6885                           ;lcd.c: 260: {
  6886                           ;lcd.c: 261: LCD_Write_Char('+');
  6887  028B  302B               	movlw	43
  6888  028C  318A  22BD  3182   	fcall	_LCD_Write_Char
  6889  028F                     l2206:	
  6890                           ;lcd.c: 262: }
  6891                           ;lcd.c: 263: }
  6892                           ;lcd.c: 265: while(value)
  6893                           
  6894  028F  0879               	movf	LCD_Write_Int@value,w
  6895  0290  047A               	iorwf	LCD_Write_Int@value+1,w
  6896  0291  1903               	btfsc	3,2
  6897  0292  2ABC               	goto	l2208
  6898                           
  6899                           ;lcd.c: 266: {
  6900                           ;lcd.c: 267: str[i]=value%10;
  6901  0293  300A               	movlw	10
  6902  0294  00F0               	movwf	___awmod@divisor
  6903  0295  3000               	movlw	0
  6904  0296  00F1               	movwf	___awmod@divisor+1
  6905  0297  087A               	movf	LCD_Write_Int@value+1,w
  6906  0298  00F3               	movwf	___awmod@dividend+1
  6907  0299  0879               	movf	LCD_Write_Int@value,w
  6908  029A  00F2               	movwf	___awmod@dividend
  6909  029B  3180  2007  3182   	fcall	___awmod
  6910  029E  0870               	movf	?___awmod,w
  6911  029F  0020               	movlb	0	; select bank0
  6912  02A0  00A0               	movwf	??_LCD_Write_Int
  6913  02A1  082C               	movf	LCD_Write_Int@i,w
  6914  02A2  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6915  02A3  0086               	movwf	6
  6916  02A4  0187               	clrf	7
  6917  02A5  0820               	movf	??_LCD_Write_Int,w
  6918  02A6  0081               	movwf	1
  6919                           
  6920                           ;lcd.c: 268: value=value/10;
  6921  02A7  300A               	movlw	10
  6922  02A8  00F0               	movwf	___awdiv@divisor
  6923  02A9  3000               	movlw	0
  6924  02AA  00F1               	movwf	___awdiv@divisor+1
  6925  02AB  087A               	movf	LCD_Write_Int@value+1,w
  6926  02AC  00F3               	movwf	___awdiv@dividend+1
  6927  02AD  0879               	movf	LCD_Write_Int@value,w
  6928  02AE  00F2               	movwf	___awdiv@dividend
  6929  02AF  318C  243E  3182   	fcall	___awdiv
  6930  02B2  0871               	movf	?___awdiv+1,w
  6931  02B3  00FA               	movwf	LCD_Write_Int@value+1
  6932  02B4  0870               	movf	?___awdiv,w
  6933  02B5  00F9               	movwf	LCD_Write_Int@value
  6934                           
  6935                           ;lcd.c: 269: i--;
  6936  02B6  30FF               	movlw	255
  6937  02B7  0020               	movlb	0	; select bank0
  6938  02B8  07AC               	addwf	LCD_Write_Int@i,f
  6939  02B9  30FF               	movlw	255
  6940  02BA  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6941  02BB  2A8F               	goto	l2206
  6942  02BC                     l2208:	
  6943                           
  6944                           ;lcd.c: 270: }
  6945                           ;lcd.c: 271: if(fieldLength==-1)
  6946  02BC  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6947  02BD  1903               	btfsc	3,2
  6948  02BE  2AC5               	goto	l2214
  6949  02BF  2ACE               	goto	l2216
  6950  02C0                     l2212:	
  6951                           ;lcd.c: 272: {
  6952                           ;lcd.c: 273: while(str[j]==0)
  6953                           
  6954                           
  6955                           ;lcd.c: 274: {
  6956                           ;lcd.c: 275: j++;
  6957  02C0  3001               	movlw	1
  6958  02C1  0020               	movlb	0	; select bank0
  6959  02C2  07AA               	addwf	LCD_Write_Int@j,f
  6960  02C3  3000               	movlw	0
  6961  02C4  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6962  02C5                     l2214:	
  6963  02C5  0020               	movlb	0	; select bank0
  6964  02C6  082A               	movf	LCD_Write_Int@j,w
  6965  02C7  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6966  02C8  0086               	movwf	6
  6967  02C9  0187               	clrf	7
  6968  02CA  0801               	movf	1,w
  6969  02CB  1D03               	btfss	3,2
  6970  02CC  2ADF               	goto	l2218
  6971  02CD  2AC0               	goto	l2212
  6972  02CE                     l2216:	
  6973                           ;lcd.c: 276: }
  6974                           ;lcd.c: 277: }
  6975                           
  6976                           
  6977                           ;lcd.c: 278: else
  6978                           ;lcd.c: 279: {
  6979                           ;lcd.c: 280: j=5-fieldLength;
  6980  02CE  087B               	movf	LCD_Write_Int@fieldLength,w
  6981  02CF  0020               	movlb	0	; select bank0
  6982  02D0  00A0               	movwf	??_LCD_Write_Int
  6983  02D1  01A1               	clrf	??_LCD_Write_Int+1
  6984  02D2  1BA0               	btfsc	??_LCD_Write_Int,7
  6985  02D3  03A1               	decf	??_LCD_Write_Int+1,f
  6986  02D4  09A0               	comf	??_LCD_Write_Int,f
  6987  02D5  09A1               	comf	??_LCD_Write_Int+1,f
  6988  02D6  0AA0               	incf	??_LCD_Write_Int,f
  6989  02D7  1903               	skipnz
  6990  02D8  0AA1               	incf	??_LCD_Write_Int+1,f
  6991  02D9  0820               	movf	??_LCD_Write_Int,w
  6992  02DA  3E05               	addlw	5
  6993  02DB  00AA               	movwf	LCD_Write_Int@j
  6994  02DC  3000               	movlw	0
  6995  02DD  3D21               	addwfc	??_LCD_Write_Int+1,w
  6996  02DE  00AB               	movwf	LCD_Write_Int@j+1
  6997  02DF                     l2218:	
  6998                           
  6999                           ;lcd.c: 281: }
  7000                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7001  02DF  082B               	movf	LCD_Write_Int@j+1,w
  7002  02E0  00AD               	movwf	LCD_Write_Int@i+1
  7003  02E1  082A               	movf	LCD_Write_Int@j,w
  7004  02E2  00AC               	movwf	LCD_Write_Int@i
  7005  02E3                     l2224:	
  7006  02E3  087C               	movf	LCD_Write_Int@numPlaces,w
  7007  02E4  00A0               	movwf	??_LCD_Write_Int
  7008  02E5  01A1               	clrf	??_LCD_Write_Int+1
  7009  02E6  1BA0               	btfsc	??_LCD_Write_Int,7
  7010  02E7  03A1               	decf	??_LCD_Write_Int+1,f
  7011  02E8  09A0               	comf	??_LCD_Write_Int,f
  7012  02E9  09A1               	comf	??_LCD_Write_Int+1,f
  7013  02EA  0AA0               	incf	??_LCD_Write_Int,f
  7014  02EB  1903               	skipnz
  7015  02EC  0AA1               	incf	??_LCD_Write_Int+1,f
  7016  02ED  0820               	movf	??_LCD_Write_Int,w
  7017  02EE  3E05               	addlw	5
  7018  02EF  00A2               	movwf	??_LCD_Write_Int+2
  7019  02F0  3000               	movlw	0
  7020  02F1  3D21               	addwfc	??_LCD_Write_Int+1,w
  7021  02F2  00A3               	movwf	??_LCD_Write_Int+3
  7022  02F3  082D               	movf	LCD_Write_Int@i+1,w
  7023  02F4  3A80               	xorlw	128
  7024  02F5  00A4               	movwf	??_LCD_Write_Int+4
  7025  02F6  0823               	movf	??_LCD_Write_Int+3,w
  7026  02F7  3A80               	xorlw	128
  7027  02F8  0224               	subwf	??_LCD_Write_Int+4,w
  7028  02F9  1D03               	skipz
  7029  02FA  2AFD               	goto	u2155
  7030  02FB  0822               	movf	??_LCD_Write_Int+2,w
  7031  02FC  022C               	subwf	LCD_Write_Int@i,w
  7032  02FD                     u2155:	
  7033  02FD  1803               	btfsc	3,0
  7034  02FE  2B0F               	goto	l2226
  7035                           
  7036                           ;lcd.c: 284: {
  7037                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7038  02FF  0020               	movlb	0	; select bank0
  7039  0300  082C               	movf	LCD_Write_Int@i,w
  7040  0301  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7041  0302  0086               	movwf	6
  7042  0303  0187               	clrf	7
  7043  0304  0801               	movf	1,w
  7044  0305  3E30               	addlw	48
  7045  0306  318A  22BD  3182   	fcall	_LCD_Write_Char
  7046  0309  3001               	movlw	1
  7047  030A  0020               	movlb	0	; select bank0
  7048  030B  07AC               	addwf	LCD_Write_Int@i,f
  7049  030C  3000               	movlw	0
  7050  030D  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7051  030E  2AE3               	goto	l2224
  7052  030F                     l2226:	
  7053                           
  7054                           ;lcd.c: 286: }
  7055                           ;lcd.c: 288: if(numPlaces == 1)
  7056  030F  037C               	decf	LCD_Write_Int@numPlaces,w
  7057  0310  1D03               	btfss	3,2
  7058  0311  2B1C               	goto	l2230
  7059                           
  7060                           ;lcd.c: 289: {
  7061                           ;lcd.c: 290: LCD_Write_Char(46);
  7062  0312  302E               	movlw	46
  7063  0313  318A  22BD  3182   	fcall	_LCD_Write_Char
  7064                           
  7065                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7066  0316  0020               	movlb	0	; select bank0
  7067  0317  0829               	movf	LCD_Write_Int@str+4,w
  7068  0318  3E30               	addlw	48
  7069  0319  318A  22BD  3182   	fcall	_LCD_Write_Char
  7070  031C                     l2230:	
  7071                           
  7072                           ;lcd.c: 292: }
  7073                           ;lcd.c: 294: if(numPlaces == 2)
  7074  031C  3002               	movlw	2
  7075  031D  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7076  031E  1D03               	btfss	3,2
  7077  031F  0008               	return
  7078                           
  7079                           ;lcd.c: 295: {
  7080                           ;lcd.c: 296: LCD_Write_Char(46);
  7081  0320  302E               	movlw	46
  7082  0321  318A  22BD  3182   	fcall	_LCD_Write_Char
  7083                           
  7084                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7085  0324  0020               	movlb	0	; select bank0
  7086  0325  0828               	movf	LCD_Write_Int@str+3,w
  7087  0326  3E30               	addlw	48
  7088  0327  318A  22BD  3182   	fcall	_LCD_Write_Char
  7089                           
  7090                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7091  032A  0020               	movlb	0	; select bank0
  7092  032B  0829               	movf	LCD_Write_Int@str+4,w
  7093  032C  3E30               	addlw	48
  7094  032D  318A  22BD         	fcall	_LCD_Write_Char
  7095  032F  0008               	return
  7096  0330                     __end_of_LCD_Write_Int:	
  7097                           
  7098                           	psect	text5
  7099  0007                     __ptext5:	
  7100 ;; *************** function ___awmod *****************
  7101 ;; Defined at:
  7102 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  divisor         2    0[COMMON] int 
  7105 ;;  dividend        2    2[COMMON] int 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  sign            1    6[COMMON] unsigned char 
  7108 ;;  counter         1    5[COMMON] unsigned char 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    0[COMMON] int 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;Total ram usage:        7 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_LCD_Write_Int
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           
  7132                           ;psect for function ___awmod
  7133  0007                     ___awmod:	
  7134                           
  7135                           ;incstack = 0
  7136                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7137  0007  01F6               	clrf	___awmod@sign
  7138  0008  1FF3               	btfss	___awmod@dividend+1,7
  7139  0009  2811               	goto	l2124
  7140  000A  09F2               	comf	___awmod@dividend,f
  7141  000B  09F3               	comf	___awmod@dividend+1,f
  7142  000C  0AF2               	incf	___awmod@dividend,f
  7143  000D  1903               	skipnz
  7144  000E  0AF3               	incf	___awmod@dividend+1,f
  7145  000F  01F6               	clrf	___awmod@sign
  7146  0010  0AF6               	incf	___awmod@sign,f
  7147  0011                     l2124:	
  7148  0011  1FF1               	btfss	___awmod@divisor+1,7
  7149  0012  2818               	goto	l2128
  7150  0013  09F0               	comf	___awmod@divisor,f
  7151  0014  09F1               	comf	___awmod@divisor+1,f
  7152  0015  0AF0               	incf	___awmod@divisor,f
  7153  0016  1903               	skipnz
  7154  0017  0AF1               	incf	___awmod@divisor+1,f
  7155  0018                     l2128:	
  7156  0018  0870               	movf	___awmod@divisor,w
  7157  0019  0471               	iorwf	___awmod@divisor+1,w
  7158  001A  1903               	btfsc	3,2
  7159  001B  283F               	goto	l2146
  7160  001C  01F5               	clrf	___awmod@counter
  7161  001D  0AF5               	incf	___awmod@counter,f
  7162  001E                     l2136:	
  7163  001E  1BF1               	btfsc	___awmod@divisor+1,7
  7164  001F  282A               	goto	l2138
  7165  0020  3001               	movlw	1
  7166  0021                     u1985:	
  7167  0021  35F0               	lslf	___awmod@divisor,f
  7168  0022  0DF1               	rlf	___awmod@divisor+1,f
  7169  0023  0B89               	decfsz	9,f
  7170  0024  2821               	goto	u1985
  7171  0025  3001               	movlw	1
  7172  0026  00F4               	movwf	??___awmod
  7173  0027  0874               	movf	??___awmod,w
  7174  0028  07F5               	addwf	___awmod@counter,f
  7175  0029  281E               	goto	l2136
  7176  002A                     l2138:	
  7177  002A  0871               	movf	___awmod@divisor+1,w
  7178  002B  0273               	subwf	___awmod@dividend+1,w
  7179  002C  1D03               	skipz
  7180  002D  2830               	goto	u2005
  7181  002E  0870               	movf	___awmod@divisor,w
  7182  002F  0272               	subwf	___awmod@dividend,w
  7183  0030                     u2005:	
  7184  0030  1C03               	skipc
  7185  0031  2836               	goto	l2142
  7186  0032  0870               	movf	___awmod@divisor,w
  7187  0033  02F2               	subwf	___awmod@dividend,f
  7188  0034  0871               	movf	___awmod@divisor+1,w
  7189  0035  3BF3               	subwfb	___awmod@dividend+1,f
  7190  0036                     l2142:	
  7191  0036  3001               	movlw	1
  7192  0037                     u2015:	
  7193  0037  36F1               	lsrf	___awmod@divisor+1,f
  7194  0038  0CF0               	rrf	___awmod@divisor,f
  7195  0039  0B89               	decfsz	9,f
  7196  003A  2837               	goto	u2015
  7197  003B  3001               	movlw	1
  7198  003C  02F5               	subwf	___awmod@counter,f
  7199  003D  1D03               	btfss	3,2
  7200  003E  282A               	goto	l2138
  7201  003F                     l2146:	
  7202  003F  0876               	movf	___awmod@sign,w
  7203  0040  1903               	btfsc	3,2
  7204  0041  2847               	goto	l2150
  7205  0042  09F2               	comf	___awmod@dividend,f
  7206  0043  09F3               	comf	___awmod@dividend+1,f
  7207  0044  0AF2               	incf	___awmod@dividend,f
  7208  0045  1903               	skipnz
  7209  0046  0AF3               	incf	___awmod@dividend+1,f
  7210  0047                     l2150:	
  7211  0047  0873               	movf	___awmod@dividend+1,w
  7212  0048  00F1               	movwf	?___awmod+1
  7213  0049  0872               	movf	___awmod@dividend,w
  7214  004A  00F0               	movwf	?___awmod
  7215  004B  0008               	return
  7216  004C                     __end_of___awmod:	
  7217                           
  7218                           	psect	text6
  7219  0C3E                     __ptext6:	
  7220 ;; *************** function ___awdiv *****************
  7221 ;; Defined at:
  7222 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  divisor         2    0[COMMON] int 
  7225 ;;  dividend        2    2[COMMON] int 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  quotient        2    7[COMMON] int 
  7228 ;;  sign            1    6[COMMON] unsigned char 
  7229 ;;  counter         1    5[COMMON] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  2    0[COMMON] int 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;Total ram usage:        9 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_LCD_Write_Int
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           
  7253                           ;psect for function ___awdiv
  7254  0C3E                     ___awdiv:	
  7255                           
  7256                           ;incstack = 0
  7257                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7258  0C3E  01F6               	clrf	___awdiv@sign
  7259  0C3F  1FF1               	btfss	___awdiv@divisor+1,7
  7260  0C40  2C48               	goto	l2080
  7261  0C41  09F0               	comf	___awdiv@divisor,f
  7262  0C42  09F1               	comf	___awdiv@divisor+1,f
  7263  0C43  0AF0               	incf	___awdiv@divisor,f
  7264  0C44  1903               	skipnz
  7265  0C45  0AF1               	incf	___awdiv@divisor+1,f
  7266  0C46  01F6               	clrf	___awdiv@sign
  7267  0C47  0AF6               	incf	___awdiv@sign,f
  7268  0C48                     l2080:	
  7269  0C48  1FF3               	btfss	___awdiv@dividend+1,7
  7270  0C49  2C53               	goto	l2086
  7271  0C4A  09F2               	comf	___awdiv@dividend,f
  7272  0C4B  09F3               	comf	___awdiv@dividend+1,f
  7273  0C4C  0AF2               	incf	___awdiv@dividend,f
  7274  0C4D  1903               	skipnz
  7275  0C4E  0AF3               	incf	___awdiv@dividend+1,f
  7276  0C4F  3001               	movlw	1
  7277  0C50  00F4               	movwf	??___awdiv
  7278  0C51  0874               	movf	??___awdiv,w
  7279  0C52  06F6               	xorwf	___awdiv@sign,f
  7280  0C53                     l2086:	
  7281  0C53  01F7               	clrf	___awdiv@quotient
  7282  0C54  01F8               	clrf	___awdiv@quotient+1
  7283  0C55  0870               	movf	___awdiv@divisor,w
  7284  0C56  0471               	iorwf	___awdiv@divisor+1,w
  7285  0C57  1903               	btfsc	3,2
  7286  0C58  2C82               	goto	l2108
  7287  0C59  01F5               	clrf	___awdiv@counter
  7288  0C5A  0AF5               	incf	___awdiv@counter,f
  7289  0C5B                     l2096:	
  7290  0C5B  1BF1               	btfsc	___awdiv@divisor+1,7
  7291  0C5C  2C67               	goto	l2098
  7292  0C5D  3001               	movlw	1
  7293  0C5E                     u1885:	
  7294  0C5E  35F0               	lslf	___awdiv@divisor,f
  7295  0C5F  0DF1               	rlf	___awdiv@divisor+1,f
  7296  0C60  0B89               	decfsz	9,f
  7297  0C61  2C5E               	goto	u1885
  7298  0C62  3001               	movlw	1
  7299  0C63  00F4               	movwf	??___awdiv
  7300  0C64  0874               	movf	??___awdiv,w
  7301  0C65  07F5               	addwf	___awdiv@counter,f
  7302  0C66  2C5B               	goto	l2096
  7303  0C67                     l2098:	
  7304  0C67  3001               	movlw	1
  7305  0C68                     u1905:	
  7306  0C68  35F7               	lslf	___awdiv@quotient,f
  7307  0C69  0DF8               	rlf	___awdiv@quotient+1,f
  7308  0C6A  0B89               	decfsz	9,f
  7309  0C6B  2C68               	goto	u1905
  7310  0C6C  0871               	movf	___awdiv@divisor+1,w
  7311  0C6D  0273               	subwf	___awdiv@dividend+1,w
  7312  0C6E  1D03               	skipz
  7313  0C6F  2C72               	goto	u1915
  7314  0C70  0870               	movf	___awdiv@divisor,w
  7315  0C71  0272               	subwf	___awdiv@dividend,w
  7316  0C72                     u1915:	
  7317  0C72  1C03               	skipc
  7318  0C73  2C79               	goto	l2104
  7319  0C74  0870               	movf	___awdiv@divisor,w
  7320  0C75  02F2               	subwf	___awdiv@dividend,f
  7321  0C76  0871               	movf	___awdiv@divisor+1,w
  7322  0C77  3BF3               	subwfb	___awdiv@dividend+1,f
  7323  0C78  1477               	bsf	___awdiv@quotient,0
  7324  0C79                     l2104:	
  7325  0C79  3001               	movlw	1
  7326  0C7A                     u1925:	
  7327  0C7A  36F1               	lsrf	___awdiv@divisor+1,f
  7328  0C7B  0CF0               	rrf	___awdiv@divisor,f
  7329  0C7C  0B89               	decfsz	9,f
  7330  0C7D  2C7A               	goto	u1925
  7331  0C7E  3001               	movlw	1
  7332  0C7F  02F5               	subwf	___awdiv@counter,f
  7333  0C80  1D03               	btfss	3,2
  7334  0C81  2C67               	goto	l2098
  7335  0C82                     l2108:	
  7336  0C82  0876               	movf	___awdiv@sign,w
  7337  0C83  1903               	btfsc	3,2
  7338  0C84  2C8A               	goto	l2112
  7339  0C85  09F7               	comf	___awdiv@quotient,f
  7340  0C86  09F8               	comf	___awdiv@quotient+1,f
  7341  0C87  0AF7               	incf	___awdiv@quotient,f
  7342  0C88  1903               	skipnz
  7343  0C89  0AF8               	incf	___awdiv@quotient+1,f
  7344  0C8A                     l2112:	
  7345  0C8A  0878               	movf	___awdiv@quotient+1,w
  7346  0C8B  00F1               	movwf	?___awdiv+1
  7347  0C8C  0877               	movf	___awdiv@quotient,w
  7348  0C8D  00F0               	movwf	?___awdiv
  7349  0C8E  0008               	return
  7350  0C8F                     __end_of___awdiv:	
  7351                           
  7352                           	psect	text7
  7353  0BFF                     __ptext7:	
  7354 ;; *************** function _LCD_Set_Cursor *****************
  7355 ;; Defined at:
  7356 ;;		line 82 in file "lcd.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  x               1    wreg     unsigned char 
  7359 ;;  y               1    3[COMMON] unsigned char 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  x               1    6[COMMON] unsigned char 
  7362 ;;  temp            1    9[COMMON] unsigned char 
  7363 ;;  w               1    8[COMMON] unsigned char 
  7364 ;;  z               1    7[COMMON] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0, pclath, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7374 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;Total ram usage:        7 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    2
  7381 ;; This function calls:
  7382 ;;		_LCD_Cmd
  7383 ;; This function is called by:
  7384 ;;		_tempSetpoint
  7385 ;;		_readButtons
  7386 ;;		_main
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           
  7391                           ;psect for function _LCD_Set_Cursor
  7392  0BFF                     _LCD_Set_Cursor:	
  7393                           
  7394                           ;incstack = 0
  7395                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7396                           ;LCD_Set_Cursor@x stored from wreg
  7397  0BFF  00F6               	movwf	LCD_Set_Cursor@x
  7398                           
  7399                           ;lcd.c: 86: char temp,z,w;
  7400                           ;lcd.c: 88: if(x == 0)
  7401  0C00  0876               	movf	LCD_Set_Cursor@x,w
  7402  0C01  1D03               	btfss	3,2
  7403  0C02  2C1F               	goto	l2166
  7404                           
  7405                           ;lcd.c: 89: {
  7406                           ;lcd.c: 90: temp = 0x80 + y;
  7407  0C03  0873               	movf	LCD_Set_Cursor@y,w
  7408  0C04  3E80               	addlw	128
  7409  0C05  00F4               	movwf	??_LCD_Set_Cursor
  7410  0C06  0874               	movf	??_LCD_Set_Cursor,w
  7411  0C07  00F9               	movwf	LCD_Set_Cursor@temp
  7412                           
  7413                           ;lcd.c: 91: z = temp>>4;
  7414  0C08  0879               	movf	LCD_Set_Cursor@temp,w
  7415  0C09  00F4               	movwf	??_LCD_Set_Cursor
  7416  0C0A  3004               	movlw	4
  7417  0C0B                     u2055:	
  7418  0C0B  36F4               	lsrf	??_LCD_Set_Cursor,f
  7419  0C0C  0B89               	decfsz	9,f
  7420  0C0D  2C0B               	goto	u2055
  7421  0C0E  0874               	movf	??_LCD_Set_Cursor,w
  7422  0C0F  00F5               	movwf	??_LCD_Set_Cursor+1
  7423  0C10  0875               	movf	??_LCD_Set_Cursor+1,w
  7424  0C11  00F7               	movwf	LCD_Set_Cursor@z
  7425                           
  7426                           ;lcd.c: 92: w = temp & 0x0F;
  7427  0C12  0879               	movf	LCD_Set_Cursor@temp,w
  7428  0C13  390F               	andlw	15
  7429  0C14  00F4               	movwf	??_LCD_Set_Cursor
  7430  0C15  0874               	movf	??_LCD_Set_Cursor,w
  7431  0C16  00F8               	movwf	LCD_Set_Cursor@w
  7432                           
  7433                           ;lcd.c: 93: LCD_Cmd(z);
  7434  0C17  0877               	movf	LCD_Set_Cursor@z,w
  7435  0C18  3189  2186  318B   	fcall	_LCD_Cmd
  7436                           
  7437                           ;lcd.c: 94: LCD_Cmd(w);
  7438  0C1B  0878               	movf	LCD_Set_Cursor@w,w
  7439  0C1C  3189  2186         	fcall	_LCD_Cmd
  7440                           
  7441                           ;lcd.c: 95: }
  7442  0C1E  0008               	return
  7443  0C1F                     l2166:	
  7444                           
  7445                           ;lcd.c: 97: else if(x == 1)
  7446  0C1F  0376               	decf	LCD_Set_Cursor@x,w
  7447  0C20  1D03               	btfss	3,2
  7448  0C21  0008               	return
  7449                           
  7450                           ;lcd.c: 98: {
  7451                           ;lcd.c: 99: temp = 0xC0 + y;
  7452  0C22  0873               	movf	LCD_Set_Cursor@y,w
  7453  0C23  3EC0               	addlw	192
  7454  0C24  00F4               	movwf	??_LCD_Set_Cursor
  7455  0C25  0874               	movf	??_LCD_Set_Cursor,w
  7456  0C26  00F9               	movwf	LCD_Set_Cursor@temp
  7457                           
  7458                           ;lcd.c: 100: z = temp>>4;
  7459  0C27  0879               	movf	LCD_Set_Cursor@temp,w
  7460  0C28  00F4               	movwf	??_LCD_Set_Cursor
  7461  0C29  3004               	movlw	4
  7462  0C2A                     u2075:	
  7463  0C2A  36F4               	lsrf	??_LCD_Set_Cursor,f
  7464  0C2B  0B89               	decfsz	9,f
  7465  0C2C  2C2A               	goto	u2075
  7466  0C2D  0874               	movf	??_LCD_Set_Cursor,w
  7467  0C2E  00F5               	movwf	??_LCD_Set_Cursor+1
  7468  0C2F  0875               	movf	??_LCD_Set_Cursor+1,w
  7469  0C30  00F7               	movwf	LCD_Set_Cursor@z
  7470                           
  7471                           ;lcd.c: 101: w = temp & 0x0F;
  7472  0C31  0879               	movf	LCD_Set_Cursor@temp,w
  7473  0C32  390F               	andlw	15
  7474  0C33  00F4               	movwf	??_LCD_Set_Cursor
  7475  0C34  0874               	movf	??_LCD_Set_Cursor,w
  7476  0C35  00F8               	movwf	LCD_Set_Cursor@w
  7477                           
  7478                           ;lcd.c: 102: LCD_Cmd(z);
  7479  0C36  0877               	movf	LCD_Set_Cursor@z,w
  7480  0C37  3189  2186  318B   	fcall	_LCD_Cmd
  7481                           
  7482                           ;lcd.c: 103: LCD_Cmd(w);
  7483  0C3A  0878               	movf	LCD_Set_Cursor@w,w
  7484  0C3B  3189  2186         	fcall	_LCD_Cmd
  7485  0C3D  0008               	return
  7486  0C3E                     __end_of_LCD_Set_Cursor:	
  7487                           
  7488                           	psect	text8
  7489  004C                     __ptext8:	
  7490 ;; *************** function _log *****************
  7491 ;; Defined at:
  7492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  x               3   39[BANK0 ] void 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  exponent        2   43[BANK0 ] int 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  3   39[BANK0 ] int 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7506 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;Total ram usage:        6 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    3
  7513 ;; This function calls:
  7514 ;;		___awtoft
  7515 ;;		___ftadd
  7516 ;;		___ftge
  7517 ;;		___ftmul
  7518 ;;		_eval_poly
  7519 ;;		_frexp
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _log
  7527  004C                     _log:	
  7528                           
  7529                           ;incstack = 0
  7530                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7531  004C  0020               	movlb	0	; select bank0
  7532  004D  0847               	movf	log@x,w
  7533  004E  00BD               	movwf	___ftge@ff1
  7534  004F  0848               	movf	log@x+1,w
  7535  0050  00BE               	movwf	___ftge@ff1+1
  7536  0051  0849               	movf	log@x+2,w
  7537  0052  00BF               	movwf	___ftge@ff1+2
  7538  0053  3000               	movlw	0
  7539  0054  00C0               	movwf	___ftge@ff2
  7540  0055  3000               	movlw	0
  7541  0056  00C1               	movwf	___ftge@ff2+1
  7542  0057  3000               	movlw	0
  7543  0058  00C2               	movwf	___ftge@ff2+2
  7544  0059  318B  23C3  3180   	fcall	___ftge
  7545  005C  1803               	btfsc	3,0
  7546  005D  286A               	goto	l2754
  7547  005E  3021               	movlw	33
  7548  005F  0020               	movlb	0	; select bank0
  7549  0060  00DC               	movwf	_errno
  7550  0061  3000               	movlw	0
  7551  0062  00DD               	movwf	_errno+1
  7552  0063  3000               	movlw	0
  7553  0064  00C7               	movwf	?_log
  7554  0065  3000               	movlw	0
  7555  0066  00C8               	movwf	?_log+1
  7556  0067  3000               	movlw	0
  7557  0068  00C9               	movwf	?_log+2
  7558  0069  0008               	return
  7559  006A                     l2754:	
  7560  006A  0020               	movlb	0	; select bank0
  7561  006B  0849               	movf	log@x+2,w
  7562  006C  0448               	iorwf	log@x+1,w
  7563  006D  0447               	iorwf	log@x,w
  7564  006E  1D03               	skipz
  7565  006F  287B               	goto	l2760
  7566  0070  3022               	movlw	34
  7567  0071  00DC               	movwf	_errno
  7568  0072  3000               	movlw	0
  7569  0073  00DD               	movwf	_errno+1
  7570  0074  3000               	movlw	0
  7571  0075  00C7               	movwf	?_log
  7572  0076  3000               	movlw	0
  7573  0077  00C8               	movwf	?_log+1
  7574  0078  3000               	movlw	0
  7575  0079  00C9               	movwf	?_log+2
  7576  007A  0008               	return
  7577  007B                     l2760:	
  7578  007B  3000               	movlw	0
  7579  007C  00B0               	movwf	___ftadd@f1
  7580  007D  3080               	movlw	128
  7581  007E  00B1               	movwf	___ftadd@f1+1
  7582  007F  30BF               	movlw	191
  7583  0080  00B2               	movwf	___ftadd@f1+2
  7584  0081  3000               	movlw	0
  7585  0082  00A0               	movwf	___ftmul@f1
  7586  0083  3000               	movlw	0
  7587  0084  00A1               	movwf	___ftmul@f1+1
  7588  0085  3040               	movlw	64
  7589  0086  00A2               	movwf	___ftmul@f1+2
  7590  0087  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7591  0088  00CA               	movwf	??_log
  7592  0089  084A               	movf	??_log,w
  7593  008A  00F3               	movwf	frexp@eptr
  7594  008B  0847               	movf	log@x,w
  7595  008C  00F0               	movwf	frexp@value
  7596  008D  0848               	movf	log@x+1,w
  7597  008E  00F1               	movwf	frexp@value+1
  7598  008F  0849               	movf	log@x+2,w
  7599  0090  00F2               	movwf	frexp@value+2
  7600  0091  318B  2388  3180   	fcall	_frexp
  7601  0094  0870               	movf	?_frexp,w
  7602  0095  0020               	movlb	0	; select bank0
  7603  0096  00A3               	movwf	___ftmul@f2
  7604  0097  0871               	movf	?_frexp+1,w
  7605  0098  00A4               	movwf	___ftmul@f2+1
  7606  0099  0872               	movf	?_frexp+2,w
  7607  009A  00A5               	movwf	___ftmul@f2+2
  7608  009B  3180  20F9  3180   	fcall	___ftmul
  7609  009E  0020               	movlb	0	; select bank0
  7610  009F  0820               	movf	?___ftmul,w
  7611  00A0  00B3               	movwf	___ftadd@f2
  7612  00A1  0821               	movf	?___ftmul+1,w
  7613  00A2  00B4               	movwf	___ftadd@f2+1
  7614  00A3  0822               	movf	?___ftmul+2,w
  7615  00A4  00B5               	movwf	___ftadd@f2+2
  7616  00A5  3183  2330  3180   	fcall	___ftadd
  7617  00A8  0020               	movlb	0	; select bank0
  7618  00A9  0830               	movf	?___ftadd,w
  7619  00AA  00C7               	movwf	log@x
  7620  00AB  0831               	movf	?___ftadd+1,w
  7621  00AC  00C8               	movwf	log@x+1
  7622  00AD  0832               	movf	?___ftadd+2,w
  7623  00AE  00C9               	movwf	log@x+2
  7624  00AF  30FF               	movlw	255
  7625  00B0  07CB               	addwf	log@exponent,f
  7626  00B1  30FF               	movlw	255
  7627  00B2  3DCC               	addwfc	log@exponent+1,f
  7628  00B3  0847               	movf	log@x,w
  7629  00B4  00BD               	movwf	eval_poly@x
  7630  00B5  0848               	movf	log@x+1,w
  7631  00B6  00BE               	movwf	eval_poly@x+1
  7632  00B7  0849               	movf	log@x+2,w
  7633  00B8  00BF               	movwf	eval_poly@x+2
  7634  00B9  3000               	movlw	low (log@coeff| (0+32768))
  7635  00BA  00C0               	movwf	eval_poly@d
  7636  00BB  3090               	movlw	high (log@coeff| (0+32768))
  7637  00BC  00C1               	movwf	eval_poly@d+1
  7638  00BD  3008               	movlw	8
  7639  00BE  00C2               	movwf	eval_poly@n
  7640  00BF  3000               	movlw	0
  7641  00C0  00C3               	movwf	eval_poly@n+1
  7642  00C1  318C  248F  3180   	fcall	_eval_poly
  7643  00C4  0020               	movlb	0	; select bank0
  7644  00C5  083D               	movf	?_eval_poly,w
  7645  00C6  00C7               	movwf	log@x
  7646  00C7  083E               	movf	?_eval_poly+1,w
  7647  00C8  00C8               	movwf	log@x+1
  7648  00C9  083F               	movf	?_eval_poly+2,w
  7649  00CA  00C9               	movwf	log@x+2
  7650  00CB  0847               	movf	log@x,w
  7651  00CC  00B0               	movwf	___ftadd@f1
  7652  00CD  0848               	movf	log@x+1,w
  7653  00CE  00B1               	movwf	___ftadd@f1+1
  7654  00CF  0849               	movf	log@x+2,w
  7655  00D0  00B2               	movwf	___ftadd@f1+2
  7656  00D1  3072               	movlw	114
  7657  00D2  00A0               	movwf	___ftmul@f1
  7658  00D3  3031               	movlw	49
  7659  00D4  00A1               	movwf	___ftmul@f1+1
  7660  00D5  303F               	movlw	63
  7661  00D6  00A2               	movwf	___ftmul@f1+2
  7662  00D7  084C               	movf	log@exponent+1,w
  7663  00D8  00F9               	movwf	___awtoft@c+1
  7664  00D9  084B               	movf	log@exponent,w
  7665  00DA  00F8               	movwf	___awtoft@c
  7666  00DB  318A  2278  3180   	fcall	___awtoft
  7667  00DE  0878               	movf	?___awtoft,w
  7668  00DF  0020               	movlb	0	; select bank0
  7669  00E0  00A3               	movwf	___ftmul@f2
  7670  00E1  0879               	movf	?___awtoft+1,w
  7671  00E2  00A4               	movwf	___ftmul@f2+1
  7672  00E3  087A               	movf	?___awtoft+2,w
  7673  00E4  00A5               	movwf	___ftmul@f2+2
  7674  00E5  3180  20F9  3180   	fcall	___ftmul
  7675  00E8  0020               	movlb	0	; select bank0
  7676  00E9  0820               	movf	?___ftmul,w
  7677  00EA  00B3               	movwf	___ftadd@f2
  7678  00EB  0821               	movf	?___ftmul+1,w
  7679  00EC  00B4               	movwf	___ftadd@f2+1
  7680  00ED  0822               	movf	?___ftmul+2,w
  7681  00EE  00B5               	movwf	___ftadd@f2+2
  7682  00EF  3183  2330         	fcall	___ftadd
  7683  00F1  0020               	movlb	0	; select bank0
  7684  00F2  0830               	movf	?___ftadd,w
  7685  00F3  00C7               	movwf	?_log
  7686  00F4  0831               	movf	?___ftadd+1,w
  7687  00F5  00C8               	movwf	?_log+1
  7688  00F6  0832               	movf	?___ftadd+2,w
  7689  00F7  00C9               	movwf	?_log+2
  7690  00F8  0008               	return
  7691  00F9                     __end_of_log:	
  7692                           
  7693                           	psect	text9
  7694  0B88                     __ptext9:	
  7695 ;; *************** function _frexp *****************
  7696 ;; Defined at:
  7697 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  value           3    0[COMMON] int 
  7700 ;;  eptr            1    3[COMMON] PTR int 
  7701 ;;		 -> log@exponent(2), 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  3    0[COMMON] PTR int 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;Total ram usage:        6 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_log
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           
  7727                           ;psect for function _frexp
  7728  0B88                     _frexp:	
  7729                           
  7730                           ;incstack = 0
  7731                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7732  0B88  0872               	movf	frexp@value+2,w
  7733  0B89  0471               	iorwf	frexp@value+1,w
  7734  0B8A  0470               	iorwf	frexp@value,w
  7735  0B8B  1D03               	skipz
  7736  0B8C  2B9A               	goto	l2620
  7737  0B8D  0873               	movf	frexp@eptr,w
  7738  0B8E  0086               	movwf	6
  7739  0B8F  0187               	clrf	7
  7740  0B90  3000               	movlw	0
  7741  0B91  3FC0               	movwi [0]fsr1
  7742  0B92  3FC1               	movwi [1]fsr1
  7743  0B93  3000               	movlw	0
  7744  0B94  00F0               	movwf	?_frexp
  7745  0B95  3000               	movlw	0
  7746  0B96  00F1               	movwf	?_frexp+1
  7747  0B97  3000               	movlw	0
  7748  0B98  00F2               	movwf	?_frexp+2
  7749  0B99  0008               	return
  7750  0B9A                     l2620:	
  7751  0B9A  0872               	movf	frexp@value+2,w
  7752  0B9B  397F               	andlw	127
  7753  0B9C  00F4               	movwf	??_frexp
  7754  0B9D  01F5               	clrf	??_frexp+1
  7755  0B9E  35F4               	lslf	??_frexp,f
  7756  0B9F  0DF5               	rlf	??_frexp+1,f
  7757  0BA0  0873               	movf	frexp@eptr,w
  7758  0BA1  0086               	movwf	6
  7759  0BA2  0187               	clrf	7
  7760  0BA3  0874               	movf	??_frexp,w
  7761  0BA4  3FC0               	movwi [0]fsr1
  7762  0BA5  0875               	movf	??_frexp+1,w
  7763  0BA6  3FC1               	movwi [1]fsr1
  7764  0BA7  0D71               	rlf	frexp@value+1,w
  7765  0BA8  0D71               	rlf	frexp@value+1,w
  7766  0BA9  3901               	andlw	1
  7767  0BAA  00F4               	movwf	??_frexp
  7768  0BAB  01F5               	clrf	??_frexp+1
  7769  0BAC  0873               	movf	frexp@eptr,w
  7770  0BAD  0086               	movwf	6
  7771  0BAE  0187               	clrf	7
  7772  0BAF  0874               	movf	??_frexp,w
  7773  0BB0  0481               	iorwf	1,f
  7774  0BB1  3141               	addfsr 1,1
  7775  0BB2  0875               	movf	??_frexp+1,w
  7776  0BB3  0481               	iorwf	1,f
  7777  0BB4  0873               	movf	frexp@eptr,w
  7778  0BB5  0086               	movwf	6
  7779  0BB6  0187               	clrf	7
  7780  0BB7  3082               	movlw	130
  7781  0BB8  0781               	addwf	1,f
  7782  0BB9  3141               	addfsr 1,1
  7783  0BBA  30FF               	movlw	255
  7784  0BBB  3D81               	addwfc	1,f
  7785  0BBC  317F               	addfsr 1,-1
  7786  0BBD  0872               	movf	frexp@value+2,w
  7787  0BBE  3980               	andlw	-128
  7788  0BBF  383F               	iorlw	63
  7789  0BC0  00F2               	movwf	frexp@value+2
  7790  0BC1  13F1               	bcf	frexp@value+1,7
  7791  0BC2  0008               	return
  7792  0BC3                     __end_of_frexp:	
  7793                           
  7794                           	psect	text10
  7795  0C8F                     __ptext10:	
  7796 ;; *************** function _eval_poly *****************
  7797 ;; Defined at:
  7798 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  x               3   29[BANK0 ] PTR int 
  7801 ;;  d               2   32[BANK0 ] PTR const 
  7802 ;;		 -> log@coeff(27), 
  7803 ;;  n               2   34[BANK0 ] int 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  res             3   36[BANK0 ] int 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  3   29[BANK0 ] int 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7815 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;Total ram usage:       10 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    2
  7822 ;; This function calls:
  7823 ;;		___ftadd
  7824 ;;		___ftmul
  7825 ;;		___wmul
  7826 ;; This function is called by:
  7827 ;;		_log
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function _eval_poly
  7833  0C8F                     _eval_poly:	
  7834                           
  7835                           ;incstack = 0
  7836                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7837  0C8F  0020               	movlb	0	; select bank0
  7838  0C90  0843               	movf	eval_poly@n+1,w
  7839  0C91  00A1               	movwf	___wmul@multiplier+1
  7840  0C92  0842               	movf	eval_poly@n,w
  7841  0C93  00A0               	movwf	___wmul@multiplier
  7842  0C94  3003               	movlw	3
  7843  0C95  00A2               	movwf	___wmul@multiplicand
  7844  0C96  3000               	movlw	0
  7845  0C97  00A3               	movwf	___wmul@multiplicand+1
  7846  0C98  318A  223E  318C   	fcall	___wmul
  7847  0C9B  0020               	movlb	0	; select bank0
  7848  0C9C  0840               	movf	eval_poly@d,w
  7849  0C9D  0720               	addwf	?___wmul,w
  7850  0C9E  0084               	movwf	4
  7851  0C9F  0841               	movf	eval_poly@d+1,w
  7852  0CA0  3D21               	addwfc	?___wmul+1,w
  7853  0CA1  0085               	movwf	5
  7854  0CA2  3F00               	moviw [0]fsr0
  7855  0CA3  00C4               	movwf	eval_poly@res
  7856  0CA4  3F01               	moviw [1]fsr0
  7857  0CA5  00C5               	movwf	eval_poly@res+1
  7858  0CA6  3F02               	moviw [2]fsr0
  7859  0CA7                     L2:	
  7860  0CA7  00C6               	movwf	eval_poly@res+2
  7861  0CA8  0842               	movf	eval_poly@n,w
  7862  0CA9  0443               	iorwf	eval_poly@n+1,w
  7863  0CAA  1903               	btfsc	3,2
  7864  0CAB  2CE8               	goto	l2638
  7865  0CAC  30FF               	movlw	255
  7866  0CAD  07C2               	addwf	eval_poly@n,f
  7867  0CAE  30FF               	movlw	255
  7868  0CAF  3DC3               	addwfc	eval_poly@n+1,f
  7869  0CB0  0843               	movf	eval_poly@n+1,w
  7870  0CB1  00A1               	movwf	___wmul@multiplier+1
  7871  0CB2  0842               	movf	eval_poly@n,w
  7872  0CB3  00A0               	movwf	___wmul@multiplier
  7873  0CB4  3003               	movlw	3
  7874  0CB5  00A2               	movwf	___wmul@multiplicand
  7875  0CB6  3000               	movlw	0
  7876  0CB7  00A3               	movwf	___wmul@multiplicand+1
  7877  0CB8  318A  223E  318C   	fcall	___wmul
  7878  0CBB  0020               	movlb	0	; select bank0
  7879  0CBC  0840               	movf	eval_poly@d,w
  7880  0CBD  0720               	addwf	?___wmul,w
  7881  0CBE  0084               	movwf	4
  7882  0CBF  0841               	movf	eval_poly@d+1,w
  7883  0CC0  3D21               	addwfc	?___wmul+1,w
  7884  0CC1  0085               	movwf	5
  7885  0CC2  3F00               	moviw [0]fsr0
  7886  0CC3  00B0               	movwf	___ftadd@f1
  7887  0CC4  3F01               	moviw [1]fsr0
  7888  0CC5  00B1               	movwf	___ftadd@f1+1
  7889  0CC6  3F02               	moviw [2]fsr0
  7890  0CC7  00B2               	movwf	___ftadd@f1+2
  7891  0CC8  0844               	movf	eval_poly@res,w
  7892  0CC9  00A0               	movwf	___ftmul@f1
  7893  0CCA  0845               	movf	eval_poly@res+1,w
  7894  0CCB  00A1               	movwf	___ftmul@f1+1
  7895  0CCC  0846               	movf	eval_poly@res+2,w
  7896  0CCD  00A2               	movwf	___ftmul@f1+2
  7897  0CCE  083D               	movf	eval_poly@x,w
  7898  0CCF  00A3               	movwf	___ftmul@f2
  7899  0CD0  083E               	movf	eval_poly@x+1,w
  7900  0CD1  00A4               	movwf	___ftmul@f2+1
  7901  0CD2  083F               	movf	eval_poly@x+2,w
  7902  0CD3  00A5               	movwf	___ftmul@f2+2
  7903  0CD4  3180  20F9  318C   	fcall	___ftmul
  7904  0CD7  0020               	movlb	0	; select bank0
  7905  0CD8  0820               	movf	?___ftmul,w
  7906  0CD9  00B3               	movwf	___ftadd@f2
  7907  0CDA  0821               	movf	?___ftmul+1,w
  7908  0CDB  00B4               	movwf	___ftadd@f2+1
  7909  0CDC  0822               	movf	?___ftmul+2,w
  7910  0CDD  00B5               	movwf	___ftadd@f2+2
  7911  0CDE  3183  2330  318C   	fcall	___ftadd
  7912  0CE1  0020               	movlb	0	; select bank0
  7913  0CE2  0830               	movf	?___ftadd,w
  7914  0CE3  00C4               	movwf	eval_poly@res
  7915  0CE4  0831               	movf	?___ftadd+1,w
  7916  0CE5  00C5               	movwf	eval_poly@res+1
  7917  0CE6  0832               	movf	?___ftadd+2,w
  7918  0CE7  2CA7               	goto	L2
  7919  0CE8                     l2638:	
  7920  0CE8  0844               	movf	eval_poly@res,w
  7921  0CE9  00BD               	movwf	?_eval_poly
  7922  0CEA  0845               	movf	eval_poly@res+1,w
  7923  0CEB  00BE               	movwf	?_eval_poly+1
  7924  0CEC  0846               	movf	eval_poly@res+2,w
  7925  0CED  00BF               	movwf	?_eval_poly+2
  7926  0CEE  0008               	return
  7927  0CEF                     __end_of_eval_poly:	
  7928                           
  7929                           	psect	text11
  7930  0A3E                     __ptext11:	
  7931 ;; *************** function ___wmul *****************
  7932 ;; Defined at:
  7933 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7936 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  product         2    4[BANK0 ] unsigned int 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  2    0[BANK0 ] unsigned int 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;Total ram usage:        6 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_main
  7958 ;;		_eval_poly
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           
  7963                           ;psect for function ___wmul
  7964  0A3E                     ___wmul:	
  7965                           
  7966                           ;incstack = 0
  7967                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7968  0A3E  0020               	movlb	0	; select bank0
  7969  0A3F  01A4               	clrf	___wmul@product
  7970  0A40  01A5               	clrf	___wmul@product+1
  7971  0A41                     l2236:	
  7972  0A41  1C20               	btfss	___wmul@multiplier,0
  7973  0A42  2A47               	goto	l456
  7974  0A43  0822               	movf	___wmul@multiplicand,w
  7975  0A44  07A4               	addwf	___wmul@product,f
  7976  0A45  0823               	movf	___wmul@multiplicand+1,w
  7977  0A46  3DA5               	addwfc	___wmul@product+1,f
  7978  0A47                     l456:	
  7979  0A47  3001               	movlw	1
  7980  0A48                     u2195:	
  7981  0A48  35A2               	lslf	___wmul@multiplicand,f
  7982  0A49  0DA3               	rlf	___wmul@multiplicand+1,f
  7983  0A4A  0B89               	decfsz	9,f
  7984  0A4B  2A48               	goto	u2195
  7985  0A4C  3001               	movlw	1
  7986  0A4D                     u2205:	
  7987  0A4D  36A1               	lsrf	___wmul@multiplier+1,f
  7988  0A4E  0CA0               	rrf	___wmul@multiplier,f
  7989  0A4F  0B89               	decfsz	9,f
  7990  0A50  2A4D               	goto	u2205
  7991  0A51  0820               	movf	___wmul@multiplier,w
  7992  0A52  0421               	iorwf	___wmul@multiplier+1,w
  7993  0A53  1D03               	btfss	3,2
  7994  0A54  2A41               	goto	l2236
  7995  0A55  0825               	movf	___wmul@product+1,w
  7996  0A56  00A1               	movwf	?___wmul+1
  7997  0A57  0824               	movf	___wmul@product,w
  7998  0A58  00A0               	movwf	?___wmul
  7999  0A59  0008               	return
  8000  0A5A                     __end_of___wmul:	
  8001                           
  8002                           	psect	text12
  8003  00F9                     __ptext12:	
  8004 ;; *************** function ___ftmul *****************
  8005 ;; Defined at:
  8006 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  f1              3    0[BANK0 ] float 
  8009 ;;  f2              3    3[BANK0 ] float 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8012 ;;  sign            1   15[BANK0 ] unsigned char 
  8013 ;;  cntr            1   14[BANK0 ] unsigned char 
  8014 ;;  exp             1   10[BANK0 ] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  3    0[BANK0 ] float 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0, pclath, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8024 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;Total ram usage:       16 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    1
  8031 ;; This function calls:
  8032 ;;		___ftpack
  8033 ;; This function is called by:
  8034 ;;		_log
  8035 ;;		_eval_poly
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function ___ftmul
  8041  00F9                     ___ftmul:	
  8042                           
  8043                           ;incstack = 0
  8044                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8045  00F9  0020               	movlb	0	; select bank0
  8046  00FA  0820               	movf	___ftmul@f1,w
  8047  00FB  00A6               	movwf	??___ftmul
  8048  00FC  0821               	movf	___ftmul@f1+1,w
  8049  00FD  00A7               	movwf	??___ftmul+1
  8050  00FE  0822               	movf	___ftmul@f1+2,w
  8051  00FF  00A8               	movwf	??___ftmul+2
  8052  0100  1003               	clrc
  8053  0101  0D27               	rlf	??___ftmul+1,w
  8054  0102  0D28               	rlf	??___ftmul+2,w
  8055  0103  00A9               	movwf	??___ftmul+3
  8056  0104  0829               	movf	??___ftmul+3,w
  8057  0105  00AA               	movwf	___ftmul@exp
  8058  0106  082A               	movf	___ftmul@exp,w
  8059  0107  1D03               	btfss	3,2
  8060  0108  2910               	goto	l2324
  8061  0109  3000               	movlw	0
  8062  010A  00A0               	movwf	?___ftmul
  8063  010B  3000               	movlw	0
  8064  010C  00A1               	movwf	?___ftmul+1
  8065  010D  3000               	movlw	0
  8066  010E  00A2               	movwf	?___ftmul+2
  8067  010F  0008               	return
  8068  0110                     l2324:	
  8069  0110  0823               	movf	___ftmul@f2,w
  8070  0111  00A6               	movwf	??___ftmul
  8071  0112  0824               	movf	___ftmul@f2+1,w
  8072  0113  00A7               	movwf	??___ftmul+1
  8073  0114  0825               	movf	___ftmul@f2+2,w
  8074  0115  00A8               	movwf	??___ftmul+2
  8075  0116  1003               	clrc
  8076  0117  0D27               	rlf	??___ftmul+1,w
  8077  0118  0D28               	rlf	??___ftmul+2,w
  8078  0119  00A9               	movwf	??___ftmul+3
  8079  011A  0829               	movf	??___ftmul+3,w
  8080  011B  00AF               	movwf	___ftmul@sign
  8081  011C  082F               	movf	___ftmul@sign,w
  8082  011D  1D03               	btfss	3,2
  8083  011E  2926               	goto	l2330
  8084  011F  3000               	movlw	0
  8085  0120  00A0               	movwf	?___ftmul
  8086  0121  3000               	movlw	0
  8087  0122  00A1               	movwf	?___ftmul+1
  8088  0123  3000               	movlw	0
  8089  0124  00A2               	movwf	?___ftmul+2
  8090  0125  0008               	return
  8091  0126                     l2330:	
  8092  0126  082F               	movf	___ftmul@sign,w
  8093  0127  3E7B               	addlw	123
  8094  0128  00A6               	movwf	??___ftmul
  8095  0129  0826               	movf	??___ftmul,w
  8096  012A  07AA               	addwf	___ftmul@exp,f
  8097  012B  0820               	movf	___ftmul@f1,w
  8098  012C  00A6               	movwf	??___ftmul
  8099  012D  0821               	movf	___ftmul@f1+1,w
  8100  012E  00A7               	movwf	??___ftmul+1
  8101  012F  0822               	movf	___ftmul@f1+2,w
  8102  0130  00A8               	movwf	??___ftmul+2
  8103  0131  3010               	movlw	16
  8104  0132                     u2475:	
  8105  0132  36A8               	lsrf	??___ftmul+2,f
  8106  0133  0CA7               	rrf	??___ftmul+1,f
  8107  0134  0CA6               	rrf	??___ftmul,f
  8108  0135  0B89               	decfsz	9,f
  8109  0136  2932               	goto	u2475
  8110  0137  0826               	movf	??___ftmul,w
  8111  0138  00A9               	movwf	??___ftmul+3
  8112  0139  0829               	movf	??___ftmul+3,w
  8113  013A  00AF               	movwf	___ftmul@sign
  8114  013B  0823               	movf	___ftmul@f2,w
  8115  013C  00A6               	movwf	??___ftmul
  8116  013D  0824               	movf	___ftmul@f2+1,w
  8117  013E  00A7               	movwf	??___ftmul+1
  8118  013F  0825               	movf	___ftmul@f2+2,w
  8119  0140  00A8               	movwf	??___ftmul+2
  8120  0141  3010               	movlw	16
  8121  0142                     u2485:	
  8122  0142  36A8               	lsrf	??___ftmul+2,f
  8123  0143  0CA7               	rrf	??___ftmul+1,f
  8124  0144  0CA6               	rrf	??___ftmul,f
  8125  0145  0B89               	decfsz	9,f
  8126  0146  2942               	goto	u2485
  8127  0147  0826               	movf	??___ftmul,w
  8128  0148  00A9               	movwf	??___ftmul+3
  8129  0149  0829               	movf	??___ftmul+3,w
  8130  014A  06AF               	xorwf	___ftmul@sign,f
  8131  014B  3080               	movlw	128
  8132  014C  00A6               	movwf	??___ftmul
  8133  014D  0826               	movf	??___ftmul,w
  8134  014E  05AF               	andwf	___ftmul@sign,f
  8135  014F  17A1               	bsf	___ftmul@f1+1,7
  8136  0150  17A4               	bsf	___ftmul@f2+1,7
  8137  0151  30FF               	movlw	255
  8138  0152  05A3               	andwf	___ftmul@f2,f
  8139  0153  30FF               	movlw	255
  8140  0154  05A4               	andwf	___ftmul@f2+1,f
  8141  0155  3000               	movlw	0
  8142  0156  05A5               	andwf	___ftmul@f2+2,f
  8143  0157  3000               	movlw	0
  8144  0158  00AB               	movwf	___ftmul@f3_as_product
  8145  0159  3000               	movlw	0
  8146  015A  00AC               	movwf	___ftmul@f3_as_product+1
  8147  015B  3000               	movlw	0
  8148  015C  00AD               	movwf	___ftmul@f3_as_product+2
  8149  015D  3007               	movlw	7
  8150  015E  00A6               	movwf	??___ftmul
  8151  015F  0826               	movf	??___ftmul,w
  8152  0160  00AE               	movwf	___ftmul@cntr
  8153  0161                     l2342:	
  8154  0161  1C20               	btfss	___ftmul@f1,0
  8155  0162  2969               	goto	l2346
  8156  0163  0823               	movf	___ftmul@f2,w
  8157  0164  07AB               	addwf	___ftmul@f3_as_product,f
  8158  0165  0824               	movf	___ftmul@f2+1,w
  8159  0166  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8160  0167  0825               	movf	___ftmul@f2+2,w
  8161  0168  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8162  0169                     l2346:	
  8163  0169  3001               	movlw	1
  8164  016A                     u2505:	
  8165  016A  36A2               	lsrf	___ftmul@f1+2,f
  8166  016B  0CA1               	rrf	___ftmul@f1+1,f
  8167  016C  0CA0               	rrf	___ftmul@f1,f
  8168  016D  0B89               	decfsz	9,f
  8169  016E  296A               	goto	u2505
  8170  016F  3001               	movlw	1
  8171  0170                     u2515:	
  8172  0170  35A3               	lslf	___ftmul@f2,f
  8173  0171  0DA4               	rlf	___ftmul@f2+1,f
  8174  0172  0DA5               	rlf	___ftmul@f2+2,f
  8175  0173  0B89               	decfsz	9,f
  8176  0174  2970               	goto	u2515
  8177  0175  3001               	movlw	1
  8178  0176  02AE               	subwf	___ftmul@cntr,f
  8179  0177  1D03               	btfss	3,2
  8180  0178  2961               	goto	l2342
  8181  0179  3009               	movlw	9
  8182  017A  00A6               	movwf	??___ftmul
  8183  017B  0826               	movf	??___ftmul,w
  8184  017C  00AE               	movwf	___ftmul@cntr
  8185  017D                     l2354:	
  8186  017D  1C20               	btfss	___ftmul@f1,0
  8187  017E  2985               	goto	l2358
  8188  017F  0823               	movf	___ftmul@f2,w
  8189  0180  07AB               	addwf	___ftmul@f3_as_product,f
  8190  0181  0824               	movf	___ftmul@f2+1,w
  8191  0182  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8192  0183  0825               	movf	___ftmul@f2+2,w
  8193  0184  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8194  0185                     l2358:	
  8195  0185  3001               	movlw	1
  8196  0186                     u2545:	
  8197  0186  36A2               	lsrf	___ftmul@f1+2,f
  8198  0187  0CA1               	rrf	___ftmul@f1+1,f
  8199  0188  0CA0               	rrf	___ftmul@f1,f
  8200  0189  0B89               	decfsz	9,f
  8201  018A  2986               	goto	u2545
  8202  018B  3001               	movlw	1
  8203  018C                     u2555:	
  8204  018C  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8205  018D  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8206  018E  0CAB               	rrf	___ftmul@f3_as_product,f
  8207  018F  0B89               	decfsz	9,f
  8208  0190  298C               	goto	u2555
  8209  0191  3001               	movlw	1
  8210  0192  02AE               	subwf	___ftmul@cntr,f
  8211  0193  1D03               	btfss	3,2
  8212  0194  297D               	goto	l2354
  8213  0195  082B               	movf	___ftmul@f3_as_product,w
  8214  0196  00F0               	movwf	___ftpack@arg
  8215  0197  082C               	movf	___ftmul@f3_as_product+1,w
  8216  0198  00F1               	movwf	___ftpack@arg+1
  8217  0199  082D               	movf	___ftmul@f3_as_product+2,w
  8218  019A  00F2               	movwf	___ftpack@arg+2
  8219  019B  082A               	movf	___ftmul@exp,w
  8220  019C  00A6               	movwf	??___ftmul
  8221  019D  0826               	movf	??___ftmul,w
  8222  019E  00F3               	movwf	___ftpack@exp
  8223  019F  082F               	movf	___ftmul@sign,w
  8224  01A0  00A7               	movwf	??___ftmul+1
  8225  01A1  0827               	movf	??___ftmul+1,w
  8226  01A2  00F4               	movwf	___ftpack@sign
  8227  01A3  318C  24EF         	fcall	___ftpack
  8228  01A5  0870               	movf	?___ftpack,w
  8229  01A6  0020               	movlb	0	; select bank0
  8230  01A7  00A0               	movwf	?___ftmul
  8231  01A8  0871               	movf	?___ftpack+1,w
  8232  01A9  00A1               	movwf	?___ftmul+1
  8233  01AA  0872               	movf	?___ftpack+2,w
  8234  01AB  00A2               	movwf	?___ftmul+2
  8235  01AC  0008               	return
  8236  01AD                     __end_of___ftmul:	
  8237                           
  8238                           	psect	text13
  8239  0BC3                     __ptext13:	
  8240 ;; *************** function ___ftge *****************
  8241 ;; Defined at:
  8242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  ff1             3   29[BANK0 ] float 
  8245 ;;  ff2             3   32[BANK0 ] float 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;		None               void
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8257 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;Total ram usage:        9 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_main
  8267 ;;		_log
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function ___ftge
  8273  0BC3                     ___ftge:	
  8274                           
  8275                           ;incstack = 0
  8276                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8277  0BC3  0020               	movlb	0	; select bank0
  8278  0BC4  1FBF               	btfss	___ftge@ff1+2,7
  8279  0BC5  2BDA               	goto	l2596
  8280  0BC6  093D               	comf	___ftge@ff1,w
  8281  0BC7  00C3               	movwf	??___ftge
  8282  0BC8  093E               	comf	___ftge@ff1+1,w
  8283  0BC9  00C4               	movwf	??___ftge+1
  8284  0BCA  093F               	comf	___ftge@ff1+2,w
  8285  0BCB  00C5               	movwf	??___ftge+2
  8286  0BCC  0AC3               	incf	??___ftge,f
  8287  0BCD  1903               	skipnz
  8288  0BCE  0AC4               	incf	??___ftge+1,f
  8289  0BCF  1903               	skipnz
  8290  0BD0  0AC5               	incf	??___ftge+2,f
  8291  0BD1  3000               	movlw	0
  8292  0BD2  0743               	addwf	??___ftge,w
  8293  0BD3  00BD               	movwf	___ftge@ff1
  8294  0BD4  3000               	movlw	0
  8295  0BD5  3D44               	addwfc	??___ftge+1,w
  8296  0BD6  00BE               	movwf	___ftge@ff1+1
  8297  0BD7  3080               	movlw	128
  8298  0BD8  3D45               	addwfc	??___ftge+2,w
  8299  0BD9  00BF               	movwf	___ftge@ff1+2
  8300  0BDA                     l2596:	
  8301  0BDA  1FC2               	btfss	___ftge@ff2+2,7
  8302  0BDB  2BF0               	goto	l2600
  8303  0BDC  0940               	comf	___ftge@ff2,w
  8304  0BDD  00C3               	movwf	??___ftge
  8305  0BDE  0941               	comf	___ftge@ff2+1,w
  8306  0BDF  00C4               	movwf	??___ftge+1
  8307  0BE0  0942               	comf	___ftge@ff2+2,w
  8308  0BE1  00C5               	movwf	??___ftge+2
  8309  0BE2  0AC3               	incf	??___ftge,f
  8310  0BE3  1903               	skipnz
  8311  0BE4  0AC4               	incf	??___ftge+1,f
  8312  0BE5  1903               	skipnz
  8313  0BE6  0AC5               	incf	??___ftge+2,f
  8314  0BE7  3000               	movlw	0
  8315  0BE8  0743               	addwf	??___ftge,w
  8316  0BE9  00C0               	movwf	___ftge@ff2
  8317  0BEA  3000               	movlw	0
  8318  0BEB  3D44               	addwfc	??___ftge+1,w
  8319  0BEC  00C1               	movwf	___ftge@ff2+1
  8320  0BED  3080               	movlw	128
  8321  0BEE  3D45               	addwfc	??___ftge+2,w
  8322  0BEF  00C2               	movwf	___ftge@ff2+2
  8323  0BF0                     l2600:	
  8324  0BF0  3080               	movlw	128
  8325  0BF1  06BF               	xorwf	___ftge@ff1+2,f
  8326  0BF2  3080               	movlw	128
  8327  0BF3  06C2               	xorwf	___ftge@ff2+2,f
  8328  0BF4  0842               	movf	___ftge@ff2+2,w
  8329  0BF5  023F               	subwf	___ftge@ff1+2,w
  8330  0BF6  1D03               	skipz
  8331  0BF7  0008               	return
  8332  0BF8  0841               	movf	___ftge@ff2+1,w
  8333  0BF9  023E               	subwf	___ftge@ff1+1,w
  8334  0BFA  1D03               	skipz
  8335  0BFB  0008               	return
  8336  0BFC  0840               	movf	___ftge@ff2,w
  8337  0BFD  023D               	subwf	___ftge@ff1,w
  8338  0BFE  0008               	return
  8339  0BFF                     __end_of___ftge:	
  8340                           
  8341                           	psect	text14
  8342  0A78                     __ptext14:	
  8343 ;; *************** function ___awtoft *****************
  8344 ;; Defined at:
  8345 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  c               2    8[COMMON] int 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  sign            1   13[COMMON] unsigned char 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  3    8[COMMON] float 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8359 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;Total ram usage:        6 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    1
  8366 ;; This function calls:
  8367 ;;		___ftpack
  8368 ;; This function is called by:
  8369 ;;		_log
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function ___awtoft
  8375  0A78                     ___awtoft:	
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8379  0A78  01FD               	clrf	___awtoft@sign
  8380  0A79  1FF9               	btfss	___awtoft@c+1,7
  8381  0A7A  2A82               	goto	l2588
  8382  0A7B  09F8               	comf	___awtoft@c,f
  8383  0A7C  09F9               	comf	___awtoft@c+1,f
  8384  0A7D  0AF8               	incf	___awtoft@c,f
  8385  0A7E  1903               	skipnz
  8386  0A7F  0AF9               	incf	___awtoft@c+1,f
  8387  0A80  01FD               	clrf	___awtoft@sign
  8388  0A81  0AFD               	incf	___awtoft@sign,f
  8389  0A82                     l2588:	
  8390  0A82  0878               	movf	___awtoft@c,w
  8391  0A83  00F0               	movwf	___ftpack@arg
  8392  0A84  0879               	movf	___awtoft@c+1,w
  8393  0A85  00F1               	movwf	___ftpack@arg+1
  8394  0A86  01F2               	clrf	___ftpack@arg+2
  8395  0A87  308E               	movlw	142
  8396  0A88  00FB               	movwf	??___awtoft
  8397  0A89  087B               	movf	??___awtoft,w
  8398  0A8A  00F3               	movwf	___ftpack@exp
  8399  0A8B  087D               	movf	___awtoft@sign,w
  8400  0A8C  00FC               	movwf	??___awtoft+1
  8401  0A8D  087C               	movf	??___awtoft+1,w
  8402  0A8E  00F4               	movwf	___ftpack@sign
  8403  0A8F  318C  24EF         	fcall	___ftpack
  8404  0A91  0870               	movf	?___ftpack,w
  8405  0A92  00F8               	movwf	?___awtoft
  8406  0A93  0871               	movf	?___ftpack+1,w
  8407  0A94  00F9               	movwf	?___awtoft+1
  8408  0A95  0872               	movf	?___ftpack+2,w
  8409  0A96  00FA               	movwf	?___awtoft+2
  8410  0A97  0008               	return
  8411  0A98                     __end_of___awtoft:	
  8412                           
  8413                           	psect	text15
  8414  0998                     __ptext15:	
  8415 ;; *************** function ___lwtoft *****************
  8416 ;; Defined at:
  8417 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  c               2    8[COMMON] unsigned int 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  3    8[COMMON] float 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0, pclath, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8431 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;Total ram usage:        4 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    1
  8438 ;; This function calls:
  8439 ;;		___ftpack
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           
  8446                           ;psect for function ___lwtoft
  8447  0998                     ___lwtoft:	
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8451  0998  0878               	movf	___lwtoft@c,w
  8452  0999  00F0               	movwf	___ftpack@arg
  8453  099A  0879               	movf	___lwtoft@c+1,w
  8454  099B  00F1               	movwf	___ftpack@arg+1
  8455  099C  01F2               	clrf	___ftpack@arg+2
  8456  099D  308E               	movlw	142
  8457  099E  00FB               	movwf	??___lwtoft
  8458  099F  087B               	movf	??___lwtoft,w
  8459  09A0  00F3               	movwf	___ftpack@exp
  8460  09A1  01F4               	clrf	___ftpack@sign
  8461  09A2  318C  24EF         	fcall	___ftpack
  8462  09A4  0870               	movf	?___ftpack,w
  8463  09A5  00F8               	movwf	?___lwtoft
  8464  09A6  0871               	movf	?___ftpack+1,w
  8465  09A7  00F9               	movwf	?___lwtoft+1
  8466  09A8  0872               	movf	?___ftpack+2,w
  8467  09A9  00FA               	movwf	?___lwtoft+2
  8468  09AA  0008               	return
  8469  09AB                     __end_of___lwtoft:	
  8470                           
  8471                           	psect	text16
  8472  0B19                     __ptext16:	
  8473 ;; *************** function ___lwdiv *****************
  8474 ;; Defined at:
  8475 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  divisor         2    6[BANK0 ] unsigned int 
  8478 ;;  dividend        2    8[BANK0 ] unsigned int 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  quotient        2   11[BANK0 ] unsigned int 
  8481 ;;  counter         1   13[BANK0 ] unsigned char 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  2    6[BANK0 ] unsigned int 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;Total ram usage:        8 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_main
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function ___lwdiv
  8506  0B19                     ___lwdiv:	
  8507                           
  8508                           ;incstack = 0
  8509                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8510  0B19  0020               	movlb	0	; select bank0
  8511  0B1A  01AB               	clrf	___lwdiv@quotient
  8512  0B1B  01AC               	clrf	___lwdiv@quotient+1
  8513  0B1C  0826               	movf	___lwdiv@divisor,w
  8514  0B1D  0427               	iorwf	___lwdiv@divisor+1,w
  8515  0B1E  1903               	btfsc	3,2
  8516  0B1F  2B49               	goto	l2936
  8517  0B20  01AD               	clrf	___lwdiv@counter
  8518  0B21  0AAD               	incf	___lwdiv@counter,f
  8519  0B22                     l2924:	
  8520  0B22  1BA7               	btfsc	___lwdiv@divisor+1,7
  8521  0B23  2B2E               	goto	l2926
  8522  0B24  3001               	movlw	1
  8523  0B25                     u3155:	
  8524  0B25  35A6               	lslf	___lwdiv@divisor,f
  8525  0B26  0DA7               	rlf	___lwdiv@divisor+1,f
  8526  0B27  0B89               	decfsz	9,f
  8527  0B28  2B25               	goto	u3155
  8528  0B29  3001               	movlw	1
  8529  0B2A  00AA               	movwf	??___lwdiv
  8530  0B2B  082A               	movf	??___lwdiv,w
  8531  0B2C  07AD               	addwf	___lwdiv@counter,f
  8532  0B2D  2B22               	goto	l2924
  8533  0B2E                     l2926:	
  8534  0B2E  3001               	movlw	1
  8535  0B2F                     u3175:	
  8536  0B2F  35AB               	lslf	___lwdiv@quotient,f
  8537  0B30  0DAC               	rlf	___lwdiv@quotient+1,f
  8538  0B31  0B89               	decfsz	9,f
  8539  0B32  2B2F               	goto	u3175
  8540  0B33  0827               	movf	___lwdiv@divisor+1,w
  8541  0B34  0229               	subwf	___lwdiv@dividend+1,w
  8542  0B35  1D03               	skipz
  8543  0B36  2B39               	goto	u3185
  8544  0B37  0826               	movf	___lwdiv@divisor,w
  8545  0B38  0228               	subwf	___lwdiv@dividend,w
  8546  0B39                     u3185:	
  8547  0B39  1C03               	skipc
  8548  0B3A  2B40               	goto	l2932
  8549  0B3B  0826               	movf	___lwdiv@divisor,w
  8550  0B3C  02A8               	subwf	___lwdiv@dividend,f
  8551  0B3D  0827               	movf	___lwdiv@divisor+1,w
  8552  0B3E  3BA9               	subwfb	___lwdiv@dividend+1,f
  8553  0B3F  142B               	bsf	___lwdiv@quotient,0
  8554  0B40                     l2932:	
  8555  0B40  3001               	movlw	1
  8556  0B41                     u3195:	
  8557  0B41  36A7               	lsrf	___lwdiv@divisor+1,f
  8558  0B42  0CA6               	rrf	___lwdiv@divisor,f
  8559  0B43  0B89               	decfsz	9,f
  8560  0B44  2B41               	goto	u3195
  8561  0B45  3001               	movlw	1
  8562  0B46  02AD               	subwf	___lwdiv@counter,f
  8563  0B47  1D03               	btfss	3,2
  8564  0B48  2B2E               	goto	l2926
  8565  0B49                     l2936:	
  8566  0B49  082C               	movf	___lwdiv@quotient+1,w
  8567  0B4A  00A7               	movwf	?___lwdiv+1
  8568  0B4B  082B               	movf	___lwdiv@quotient,w
  8569  0B4C  00A6               	movwf	?___lwdiv
  8570  0B4D  0008               	return
  8571  0B4E                     __end_of___lwdiv:	
  8572                           
  8573                           	psect	text17
  8574  0A0A                     __ptext17:	
  8575 ;; *************** function ___lbtoft *****************
  8576 ;; Defined at:
  8577 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  c               1    wreg     unsigned char 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  c               1   11[COMMON] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  3    8[COMMON] float 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0, pclath, cstack
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;Total ram usage:        8 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    1
  8598 ;; This function calls:
  8599 ;;		___ftpack
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function ___lbtoft
  8607  0A0A                     ___lbtoft:	
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8611                           ;___lbtoft@c stored from wreg
  8612  0A0A  00FB               	movwf	___lbtoft@c
  8613  0A0B  087B               	movf	___lbtoft@c,w
  8614  0A0C  0020               	movlb	0	; select bank0
  8615  0A0D  00A0               	movwf	??___lbtoft
  8616  0A0E  01A1               	clrf	??___lbtoft+1
  8617  0A0F  01A2               	clrf	??___lbtoft+2
  8618  0A10  0820               	movf	??___lbtoft,w
  8619  0A11  00F0               	movwf	___ftpack@arg
  8620  0A12  0821               	movf	??___lbtoft+1,w
  8621  0A13  00F1               	movwf	___ftpack@arg+1
  8622  0A14  0822               	movf	??___lbtoft+2,w
  8623  0A15  00F2               	movwf	___ftpack@arg+2
  8624  0A16  308E               	movlw	142
  8625  0A17  00A3               	movwf	??___lbtoft+3
  8626  0A18  0823               	movf	??___lbtoft+3,w
  8627  0A19  00F3               	movwf	___ftpack@exp
  8628  0A1A  01F4               	clrf	___ftpack@sign
  8629  0A1B  318C  24EF         	fcall	___ftpack
  8630  0A1D  0870               	movf	?___ftpack,w
  8631  0A1E  00F8               	movwf	?___lbtoft
  8632  0A1F  0871               	movf	?___ftpack+1,w
  8633  0A20  00F9               	movwf	?___lbtoft+1
  8634  0A21  0872               	movf	?___ftpack+2,w
  8635  0A22  00FA               	movwf	?___lbtoft+2
  8636  0A23  0008               	return
  8637  0A24                     __end_of___lbtoft:	
  8638                           
  8639                           	psect	text18
  8640  0ED1                     __ptext18:	
  8641 ;; *************** function ___fttol *****************
  8642 ;; Defined at:
  8643 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  f1              3    0[COMMON] float 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  lval            4    9[COMMON] unsigned long 
  8648 ;;  exp1            1   13[COMMON] unsigned char 
  8649 ;;  sign1           1    8[COMMON] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  4    0[COMMON] long 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;Total ram usage:       14 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_main
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function ___fttol
  8674  0ED1                     ___fttol:	
  8675                           
  8676                           ;incstack = 0
  8677                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8678  0ED1  0870               	movf	___fttol@f1,w
  8679  0ED2  00F4               	movwf	??___fttol
  8680  0ED3  0871               	movf	___fttol@f1+1,w
  8681  0ED4  00F5               	movwf	??___fttol+1
  8682  0ED5  0872               	movf	___fttol@f1+2,w
  8683  0ED6  00F6               	movwf	??___fttol+2
  8684  0ED7  1003               	clrc
  8685  0ED8  0D75               	rlf	??___fttol+1,w
  8686  0ED9  0D76               	rlf	??___fttol+2,w
  8687  0EDA  00F7               	movwf	??___fttol+3
  8688  0EDB  0877               	movf	??___fttol+3,w
  8689  0EDC  00FD               	movwf	___fttol@exp1
  8690  0EDD  087D               	movf	___fttol@exp1,w
  8691  0EDE  1D03               	btfss	3,2
  8692  0EDF  2EE9               	goto	l2874
  8693  0EE0  3000               	movlw	0
  8694  0EE1  00F3               	movwf	?___fttol+3
  8695  0EE2  3000               	movlw	0
  8696  0EE3  00F2               	movwf	?___fttol+2
  8697  0EE4  3000               	movlw	0
  8698  0EE5  00F1               	movwf	?___fttol+1
  8699  0EE6  3000               	movlw	0
  8700  0EE7  00F0               	movwf	?___fttol
  8701  0EE8  0008               	return
  8702  0EE9                     l2874:	
  8703  0EE9  0870               	movf	___fttol@f1,w
  8704  0EEA  00F4               	movwf	??___fttol
  8705  0EEB  0871               	movf	___fttol@f1+1,w
  8706  0EEC  00F5               	movwf	??___fttol+1
  8707  0EED  0872               	movf	___fttol@f1+2,w
  8708  0EEE  00F6               	movwf	??___fttol+2
  8709  0EEF  3017               	movlw	23
  8710  0EF0                     u3055:	
  8711  0EF0  36F6               	lsrf	??___fttol+2,f
  8712  0EF1  0CF5               	rrf	??___fttol+1,f
  8713  0EF2  0CF4               	rrf	??___fttol,f
  8714  0EF3  0B89               	decfsz	9,f
  8715  0EF4  2EF0               	goto	u3055
  8716  0EF5  0874               	movf	??___fttol,w
  8717  0EF6  00F7               	movwf	??___fttol+3
  8718  0EF7  0877               	movf	??___fttol+3,w
  8719  0EF8  00F8               	movwf	___fttol@sign1
  8720  0EF9  17F1               	bsf	___fttol@f1+1,7
  8721  0EFA  30FF               	movlw	255
  8722  0EFB  05F0               	andwf	___fttol@f1,f
  8723  0EFC  30FF               	movlw	255
  8724  0EFD  05F1               	andwf	___fttol@f1+1,f
  8725  0EFE  3000               	movlw	0
  8726  0EFF  05F2               	andwf	___fttol@f1+2,f
  8727  0F00  0870               	movf	___fttol@f1,w
  8728  0F01  00F9               	movwf	___fttol@lval
  8729  0F02  0871               	movf	___fttol@f1+1,w
  8730  0F03  00FA               	movwf	___fttol@lval+1
  8731  0F04  0872               	movf	___fttol@f1+2,w
  8732  0F05  00FB               	movwf	___fttol@lval+2
  8733  0F06  01FC               	clrf	___fttol@lval+3
  8734  0F07  308E               	movlw	142
  8735  0F08  02FD               	subwf	___fttol@exp1,f
  8736  0F09  1FFD               	btfss	___fttol@exp1,7
  8737  0F0A  2F27               	goto	l2894
  8738  0F0B  087D               	movf	___fttol@exp1,w
  8739  0F0C  3A80               	xorlw	128
  8740  0F0D  3E8F               	addlw	143
  8741  0F0E  1803               	skipnc
  8742  0F0F  2F19               	goto	l2892
  8743  0F10  3000               	movlw	0
  8744  0F11  00F3               	movwf	?___fttol+3
  8745  0F12  3000               	movlw	0
  8746  0F13  00F2               	movwf	?___fttol+2
  8747  0F14  3000               	movlw	0
  8748  0F15  00F1               	movwf	?___fttol+1
  8749  0F16  3000               	movlw	0
  8750  0F17  00F0               	movwf	?___fttol
  8751  0F18  0008               	return
  8752  0F19                     l2892:	
  8753  0F19  3001               	movlw	1
  8754  0F1A                     u3085:	
  8755  0F1A  36FC               	lsrf	___fttol@lval+3,f
  8756  0F1B  0CFB               	rrf	___fttol@lval+2,f
  8757  0F1C  0CFA               	rrf	___fttol@lval+1,f
  8758  0F1D  0CF9               	rrf	___fttol@lval,f
  8759  0F1E  0B89               	decfsz	9,f
  8760  0F1F  2F1A               	goto	u3085
  8761  0F20  3001               	movlw	1
  8762  0F21  00F4               	movwf	??___fttol
  8763  0F22  0874               	movf	??___fttol,w
  8764  0F23  07FD               	addwf	___fttol@exp1,f
  8765  0F24  1903               	btfsc	3,2
  8766  0F25  2F40               	goto	l2902
  8767  0F26  2F19               	goto	l2892
  8768  0F27                     l2894:	
  8769  0F27  3018               	movlw	24
  8770  0F28  027D               	subwf	___fttol@exp1,w
  8771  0F29  1C03               	skipc
  8772  0F2A  2F3D               	goto	l708
  8773  0F2B  3000               	movlw	0
  8774  0F2C  00F3               	movwf	?___fttol+3
  8775  0F2D  3000               	movlw	0
  8776  0F2E  00F2               	movwf	?___fttol+2
  8777  0F2F  3000               	movlw	0
  8778  0F30  00F1               	movwf	?___fttol+1
  8779  0F31  3000               	movlw	0
  8780  0F32  00F0               	movwf	?___fttol
  8781  0F33  0008               	return
  8782  0F34                     l2900:	
  8783  0F34  3001               	movlw	1
  8784  0F35                     u3115:	
  8785  0F35  35F9               	lslf	___fttol@lval,f
  8786  0F36  0DFA               	rlf	___fttol@lval+1,f
  8787  0F37  0DFB               	rlf	___fttol@lval+2,f
  8788  0F38  0DFC               	rlf	___fttol@lval+3,f
  8789  0F39  0B89               	decfsz	9,f
  8790  0F3A  2F35               	goto	u3115
  8791  0F3B  3001               	movlw	1
  8792  0F3C  02FD               	subwf	___fttol@exp1,f
  8793  0F3D                     l708:	
  8794  0F3D  087D               	movf	___fttol@exp1,w
  8795  0F3E  1D03               	btfss	3,2
  8796  0F3F  2F34               	goto	l2900
  8797  0F40                     l2902:	
  8798  0F40  0878               	movf	___fttol@sign1,w
  8799  0F41  1903               	btfsc	3,2
  8800  0F42  2F4E               	goto	l2906
  8801  0F43  09F9               	comf	___fttol@lval,f
  8802  0F44  09FA               	comf	___fttol@lval+1,f
  8803  0F45  09FB               	comf	___fttol@lval+2,f
  8804  0F46  09FC               	comf	___fttol@lval+3,f
  8805  0F47  0AF9               	incf	___fttol@lval,f
  8806  0F48  1903               	skipnz
  8807  0F49  0AFA               	incf	___fttol@lval+1,f
  8808  0F4A  1903               	skipnz
  8809  0F4B  0AFB               	incf	___fttol@lval+2,f
  8810  0F4C  1903               	skipnz
  8811  0F4D  0AFC               	incf	___fttol@lval+3,f
  8812  0F4E                     l2906:	
  8813  0F4E  087C               	movf	___fttol@lval+3,w
  8814  0F4F  00F3               	movwf	?___fttol+3
  8815  0F50  087B               	movf	___fttol@lval+2,w
  8816  0F51  00F2               	movwf	?___fttol+2
  8817  0F52  087A               	movf	___fttol@lval+1,w
  8818  0F53  00F1               	movwf	?___fttol+1
  8819  0F54  0879               	movf	___fttol@lval,w
  8820  0F55  00F0               	movwf	?___fttol
  8821  0F56  0008               	return
  8822  0F57                     __end_of___fttol:	
  8823                           
  8824                           	psect	text19
  8825  0A5A                     __ptext19:	
  8826 ;; *************** function ___ftsub *****************
  8827 ;; Defined at:
  8828 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  f2              3   29[BANK0 ] float 
  8831 ;;  f1              3   32[BANK0 ] float 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  3   29[BANK0 ] float 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:        6 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    2
  8850 ;; This function calls:
  8851 ;;		___ftadd
  8852 ;; This function is called by:
  8853 ;;		_main
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function ___ftsub
  8859  0A5A                     ___ftsub:	
  8860                           
  8861                           ;incstack = 0
  8862                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8863  0A5A  0020               	movlb	0	; select bank0
  8864  0A5B  083F               	movf	___ftsub@f2+2,w
  8865  0A5C  043E               	iorwf	___ftsub@f2+1,w
  8866  0A5D  043D               	iorwf	___ftsub@f2,w
  8867  0A5E  1903               	skipnz
  8868  0A5F  2A62               	goto	l2864
  8869  0A60  3080               	movlw	128
  8870  0A61  06BF               	xorwf	___ftsub@f2+2,f
  8871  0A62                     l2864:	
  8872  0A62  0840               	movf	___ftsub@f1,w
  8873  0A63  00B0               	movwf	___ftadd@f1
  8874  0A64  0841               	movf	___ftsub@f1+1,w
  8875  0A65  00B1               	movwf	___ftadd@f1+1
  8876  0A66  0842               	movf	___ftsub@f1+2,w
  8877  0A67  00B2               	movwf	___ftadd@f1+2
  8878  0A68  083D               	movf	___ftsub@f2,w
  8879  0A69  00B3               	movwf	___ftadd@f2
  8880  0A6A  083E               	movf	___ftsub@f2+1,w
  8881  0A6B  00B4               	movwf	___ftadd@f2+1
  8882  0A6C  083F               	movf	___ftsub@f2+2,w
  8883  0A6D  00B5               	movwf	___ftadd@f2+2
  8884  0A6E  3183  2330         	fcall	___ftadd
  8885  0A70  0020               	movlb	0	; select bank0
  8886  0A71  0830               	movf	?___ftadd,w
  8887  0A72  00BD               	movwf	?___ftsub
  8888  0A73  0831               	movf	?___ftadd+1,w
  8889  0A74  00BE               	movwf	?___ftsub+1
  8890  0A75  0832               	movf	?___ftadd+2,w
  8891  0A76  00BF               	movwf	?___ftsub+2
  8892  0A77  0008               	return
  8893  0A78                     __end_of___ftsub:	
  8894                           
  8895                           	psect	text20
  8896  0330                     __ptext20:	
  8897 ;; *************** function ___ftadd *****************
  8898 ;; Defined at:
  8899 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  f1              3   16[BANK0 ] float 
  8902 ;;  f2              3   19[BANK0 ] float 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  exp1            1   28[BANK0 ] unsigned char 
  8905 ;;  exp2            1   27[BANK0 ] unsigned char 
  8906 ;;  sign            1   26[BANK0 ] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  3   16[BANK0 ] float 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0, pclath, cstack
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8916 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;Total ram usage:       13 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    1
  8923 ;; This function calls:
  8924 ;;		___ftpack
  8925 ;; This function is called by:
  8926 ;;		_main
  8927 ;;		___ftsub
  8928 ;;		_log
  8929 ;;		_eval_poly
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function ___ftadd
  8935  0330                     ___ftadd:	
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8939  0330  0020               	movlb	0	; select bank0
  8940  0331  0830               	movf	___ftadd@f1,w
  8941  0332  00B6               	movwf	??___ftadd
  8942  0333  0831               	movf	___ftadd@f1+1,w
  8943  0334  00B7               	movwf	??___ftadd+1
  8944  0335  0832               	movf	___ftadd@f1+2,w
  8945  0336  00B8               	movwf	??___ftadd+2
  8946  0337  1003               	clrc
  8947  0338  0D37               	rlf	??___ftadd+1,w
  8948  0339  0D38               	rlf	??___ftadd+2,w
  8949  033A  00B9               	movwf	??___ftadd+3
  8950  033B  0839               	movf	??___ftadd+3,w
  8951  033C  00BC               	movwf	___ftadd@exp1
  8952  033D  0833               	movf	___ftadd@f2,w
  8953  033E  00B6               	movwf	??___ftadd
  8954  033F  0834               	movf	___ftadd@f2+1,w
  8955  0340  00B7               	movwf	??___ftadd+1
  8956  0341  0835               	movf	___ftadd@f2+2,w
  8957  0342  00B8               	movwf	??___ftadd+2
  8958  0343  1003               	clrc
  8959  0344  0D37               	rlf	??___ftadd+1,w
  8960  0345  0D38               	rlf	??___ftadd+2,w
  8961  0346  00B9               	movwf	??___ftadd+3
  8962  0347  0839               	movf	??___ftadd+3,w
  8963  0348  00BB               	movwf	___ftadd@exp2
  8964  0349  083C               	movf	___ftadd@exp1,w
  8965  034A  1903               	btfsc	3,2
  8966  034B  2B58               	goto	l2254
  8967  034C  083B               	movf	___ftadd@exp2,w
  8968  034D  023C               	subwf	___ftadd@exp1,w
  8969  034E  1803               	skipnc
  8970  034F  2B5F               	goto	l2258
  8971  0350  033C               	decf	___ftadd@exp1,w
  8972  0351  3AFF               	xorlw	255
  8973  0352  073B               	addwf	___ftadd@exp2,w
  8974  0353  00B6               	movwf	??___ftadd
  8975  0354  3019               	movlw	25
  8976  0355  0236               	subwf	??___ftadd,w
  8977  0356  1C03               	skipc
  8978  0357  2B5F               	goto	l2258
  8979  0358                     l2254:	
  8980  0358  0833               	movf	___ftadd@f2,w
  8981  0359  00B0               	movwf	?___ftadd
  8982  035A  0834               	movf	___ftadd@f2+1,w
  8983  035B  00B1               	movwf	?___ftadd+1
  8984  035C  0835               	movf	___ftadd@f2+2,w
  8985  035D  00B2               	movwf	?___ftadd+2
  8986  035E  0008               	return
  8987  035F                     l2258:	
  8988  035F  083B               	movf	___ftadd@exp2,w
  8989  0360  1903               	btfsc	3,2
  8990  0361  0008               	return
  8991  0362  083C               	movf	___ftadd@exp1,w
  8992  0363  023B               	subwf	___ftadd@exp2,w
  8993  0364  1803               	skipnc
  8994  0365  2B6E               	goto	l2264
  8995  0366  033B               	decf	___ftadd@exp2,w
  8996  0367  3AFF               	xorlw	255
  8997  0368  073C               	addwf	___ftadd@exp1,w
  8998  0369  00B6               	movwf	??___ftadd
  8999  036A  3019               	movlw	25
  9000  036B  0236               	subwf	??___ftadd,w
  9001  036C  1803               	btfsc	3,0
  9002  036D  0008               	return
  9003  036E                     l2264:	
  9004  036E  3006               	movlw	6
  9005  036F  00B6               	movwf	??___ftadd
  9006  0370  0836               	movf	??___ftadd,w
  9007  0371  00BA               	movwf	___ftadd@sign
  9008  0372  1BB2               	btfsc	___ftadd@f1+2,7
  9009  0373  17BA               	bsf	___ftadd@sign,7
  9010  0374  1BB5               	btfsc	___ftadd@f2+2,7
  9011  0375  173A               	bsf	___ftadd@sign,6
  9012  0376  17B1               	bsf	___ftadd@f1+1,7
  9013  0377  30FF               	movlw	255
  9014  0378  05B0               	andwf	___ftadd@f1,f
  9015  0379  30FF               	movlw	255
  9016  037A  05B1               	andwf	___ftadd@f1+1,f
  9017  037B  3000               	movlw	0
  9018  037C  05B2               	andwf	___ftadd@f1+2,f
  9019  037D  17B4               	bsf	___ftadd@f2+1,7
  9020  037E  30FF               	movlw	255
  9021  037F  05B3               	andwf	___ftadd@f2,f
  9022  0380  30FF               	movlw	255
  9023  0381  05B4               	andwf	___ftadd@f2+1,f
  9024  0382  3000               	movlw	0
  9025  0383  05B5               	andwf	___ftadd@f2+2,f
  9026  0384  083B               	movf	___ftadd@exp2,w
  9027  0385  023C               	subwf	___ftadd@exp1,w
  9028  0386  1803               	skipnc
  9029  0387  2BAA               	goto	l2286
  9030  0388                     l2276:	
  9031  0388  3001               	movlw	1
  9032  0389                     u2315:	
  9033  0389  35B3               	lslf	___ftadd@f2,f
  9034  038A  0DB4               	rlf	___ftadd@f2+1,f
  9035  038B  0DB5               	rlf	___ftadd@f2+2,f
  9036  038C  0B89               	decfsz	9,f
  9037  038D  2B89               	goto	u2315
  9038  038E  3001               	movlw	1
  9039  038F  02BB               	subwf	___ftadd@exp2,f
  9040  0390  083B               	movf	___ftadd@exp2,w
  9041  0391  063C               	xorwf	___ftadd@exp1,w
  9042  0392  1903               	skipnz
  9043  0393  2BA5               	goto	l2284
  9044  0394  3001               	movlw	1
  9045  0395  02BA               	subwf	___ftadd@sign,f
  9046  0396  083A               	movf	___ftadd@sign,w
  9047  0397  3907               	andlw	7
  9048  0398  1903               	btfsc	3,2
  9049  0399  2BA5               	goto	l2284
  9050  039A  2B88               	goto	l2276
  9051  039B                     l2282:	
  9052  039B  3001               	movlw	1
  9053  039C                     u2345:	
  9054  039C  36B2               	lsrf	___ftadd@f1+2,f
  9055  039D  0CB1               	rrf	___ftadd@f1+1,f
  9056  039E  0CB0               	rrf	___ftadd@f1,f
  9057  039F  0B89               	decfsz	9,f
  9058  03A0  2B9C               	goto	u2345
  9059  03A1  3001               	movlw	1
  9060  03A2  00B6               	movwf	??___ftadd
  9061  03A3  0836               	movf	??___ftadd,w
  9062  03A4  07BC               	addwf	___ftadd@exp1,f
  9063  03A5                     l2284:	
  9064  03A5  083C               	movf	___ftadd@exp1,w
  9065  03A6  063B               	xorwf	___ftadd@exp2,w
  9066  03A7  1903               	btfsc	3,2
  9067  03A8  2BCF               	goto	l648
  9068  03A9  2B9B               	goto	l2282
  9069  03AA                     l2286:	
  9070  03AA  083C               	movf	___ftadd@exp1,w
  9071  03AB  023B               	subwf	___ftadd@exp2,w
  9072  03AC  1803               	skipnc
  9073  03AD  2BCF               	goto	l648
  9074  03AE                     l2288:	
  9075  03AE  3001               	movlw	1
  9076  03AF                     u2375:	
  9077  03AF  35B0               	lslf	___ftadd@f1,f
  9078  03B0  0DB1               	rlf	___ftadd@f1+1,f
  9079  03B1  0DB2               	rlf	___ftadd@f1+2,f
  9080  03B2  0B89               	decfsz	9,f
  9081  03B3  2BAF               	goto	u2375
  9082  03B4  3001               	movlw	1
  9083  03B5  02BC               	subwf	___ftadd@exp1,f
  9084  03B6  083B               	movf	___ftadd@exp2,w
  9085  03B7  063C               	xorwf	___ftadd@exp1,w
  9086  03B8  1903               	skipnz
  9087  03B9  2BCB               	goto	l2296
  9088  03BA  3001               	movlw	1
  9089  03BB  02BA               	subwf	___ftadd@sign,f
  9090  03BC  083A               	movf	___ftadd@sign,w
  9091  03BD  3907               	andlw	7
  9092  03BE  1903               	btfsc	3,2
  9093  03BF  2BCB               	goto	l2296
  9094  03C0  2BAE               	goto	l2288
  9095  03C1                     l2294:	
  9096  03C1  3001               	movlw	1
  9097  03C2                     u2405:	
  9098  03C2  36B5               	lsrf	___ftadd@f2+2,f
  9099  03C3  0CB4               	rrf	___ftadd@f2+1,f
  9100  03C4  0CB3               	rrf	___ftadd@f2,f
  9101  03C5  0B89               	decfsz	9,f
  9102  03C6  2BC2               	goto	u2405
  9103  03C7  3001               	movlw	1
  9104  03C8  00B6               	movwf	??___ftadd
  9105  03C9  0836               	movf	??___ftadd,w
  9106  03CA  07BB               	addwf	___ftadd@exp2,f
  9107  03CB                     l2296:	
  9108  03CB  083C               	movf	___ftadd@exp1,w
  9109  03CC  063B               	xorwf	___ftadd@exp2,w
  9110  03CD  1D03               	skipz
  9111  03CE  2BC1               	goto	l2294
  9112  03CF                     l648:	
  9113  03CF  1FBA               	btfss	___ftadd@sign,7
  9114  03D0  2BE1               	goto	l2300
  9115  03D1  30FF               	movlw	255
  9116  03D2  06B0               	xorwf	___ftadd@f1,f
  9117  03D3  30FF               	movlw	255
  9118  03D4  06B1               	xorwf	___ftadd@f1+1,f
  9119  03D5  30FF               	movlw	255
  9120  03D6  06B2               	xorwf	___ftadd@f1+2,f
  9121  03D7  3001               	movlw	1
  9122  03D8  07B0               	addwf	___ftadd@f1,f
  9123  03D9  3000               	movlw	0
  9124  03DA  1803               	skipnc
  9125  03DB  3001               	movlw	1
  9126  03DC  07B1               	addwf	___ftadd@f1+1,f
  9127  03DD  3000               	movlw	0
  9128  03DE  1803               	skipnc
  9129  03DF  3001               	movlw	1
  9130  03E0  07B2               	addwf	___ftadd@f1+2,f
  9131  03E1                     l2300:	
  9132  03E1  1F3A               	btfss	___ftadd@sign,6
  9133  03E2  2BF3               	goto	l2304
  9134  03E3  30FF               	movlw	255
  9135  03E4  06B3               	xorwf	___ftadd@f2,f
  9136  03E5  30FF               	movlw	255
  9137  03E6  06B4               	xorwf	___ftadd@f2+1,f
  9138  03E7  30FF               	movlw	255
  9139  03E8  06B5               	xorwf	___ftadd@f2+2,f
  9140  03E9  3001               	movlw	1
  9141  03EA  07B3               	addwf	___ftadd@f2,f
  9142  03EB  3000               	movlw	0
  9143  03EC  1803               	skipnc
  9144  03ED  3001               	movlw	1
  9145  03EE  07B4               	addwf	___ftadd@f2+1,f
  9146  03EF  3000               	movlw	0
  9147  03F0  1803               	skipnc
  9148  03F1  3001               	movlw	1
  9149  03F2  07B5               	addwf	___ftadd@f2+2,f
  9150  03F3                     l2304:	
  9151  03F3  01BA               	clrf	___ftadd@sign
  9152  03F4  0830               	movf	___ftadd@f1,w
  9153  03F5  07B3               	addwf	___ftadd@f2,f
  9154  03F6  0831               	movf	___ftadd@f1+1,w
  9155  03F7  3DB4               	addwfc	___ftadd@f2+1,f
  9156  03F8  0832               	movf	___ftadd@f1+2,w
  9157  03F9  3DB5               	addwfc	___ftadd@f2+2,f
  9158  03FA  1FB5               	btfss	___ftadd@f2+2,7
  9159  03FB  2C0E               	goto	l2314
  9160  03FC  30FF               	movlw	255
  9161  03FD  06B3               	xorwf	___ftadd@f2,f
  9162  03FE  30FF               	movlw	255
  9163  03FF  06B4               	xorwf	___ftadd@f2+1,f
  9164  0400  30FF               	movlw	255
  9165  0401  06B5               	xorwf	___ftadd@f2+2,f
  9166  0402  3001               	movlw	1
  9167  0403  07B3               	addwf	___ftadd@f2,f
  9168  0404  3000               	movlw	0
  9169  0405  1803               	skipnc
  9170  0406  3001               	movlw	1
  9171  0407  07B4               	addwf	___ftadd@f2+1,f
  9172  0408  3000               	movlw	0
  9173  0409  1803               	skipnc
  9174  040A  3001               	movlw	1
  9175  040B  07B5               	addwf	___ftadd@f2+2,f
  9176  040C  01BA               	clrf	___ftadd@sign
  9177  040D  0ABA               	incf	___ftadd@sign,f
  9178  040E                     l2314:	
  9179  040E  0833               	movf	___ftadd@f2,w
  9180  040F  00F0               	movwf	___ftpack@arg
  9181  0410  0834               	movf	___ftadd@f2+1,w
  9182  0411  00F1               	movwf	___ftpack@arg+1
  9183  0412  0835               	movf	___ftadd@f2+2,w
  9184  0413  00F2               	movwf	___ftpack@arg+2
  9185  0414  083C               	movf	___ftadd@exp1,w
  9186  0415  00B6               	movwf	??___ftadd
  9187  0416  0836               	movf	??___ftadd,w
  9188  0417  00F3               	movwf	___ftpack@exp
  9189  0418  083A               	movf	___ftadd@sign,w
  9190  0419  00B7               	movwf	??___ftadd+1
  9191  041A  0837               	movf	??___ftadd+1,w
  9192  041B  00F4               	movwf	___ftpack@sign
  9193  041C  318C  24EF         	fcall	___ftpack
  9194  041E  0870               	movf	?___ftpack,w
  9195  041F  0020               	movlb	0	; select bank0
  9196  0420  00B0               	movwf	?___ftadd
  9197  0421  0871               	movf	?___ftpack+1,w
  9198  0422  00B1               	movwf	?___ftadd+1
  9199  0423  0872               	movf	?___ftpack+2,w
  9200  0424  00B2               	movwf	?___ftadd+2
  9201  0425  0008               	return
  9202  0426                     __end_of___ftadd:	
  9203                           
  9204                           	psect	text21
  9205  092D                     __ptext21:	
  9206 ;; *************** function ___ftneg *****************
  9207 ;; Defined at:
  9208 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  f1              3    0[COMMON] float 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;		None
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  3    0[COMMON] float 
  9215 ;; Registers used:
  9216 ;;		wreg
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9222 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;Total ram usage:        3 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_main
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           
  9236                           ;psect for function ___ftneg
  9237  092D                     ___ftneg:	
  9238                           
  9239                           ;incstack = 0
  9240                           ; Regs used in ___ftneg: [wreg]
  9241  092D  0872               	movf	___ftneg@f1+2,w
  9242  092E  0471               	iorwf	___ftneg@f1+1,w
  9243  092F  0470               	iorwf	___ftneg@f1,w
  9244  0930  1903               	skipnz
  9245  0931  0008               	return
  9246  0932  3080               	movlw	128
  9247  0933  06F2               	xorwf	___ftneg@f1+2,f
  9248  0934  0008               	return
  9249  0935                     __end_of___ftneg:	
  9250                           
  9251                           	psect	text22
  9252  0F57                     __ptext22:	
  9253 ;; *************** function ___ftdiv *****************
  9254 ;; Defined at:
  9255 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  f2              3    0[BANK0 ] float 
  9258 ;;  f1              3    3[BANK0 ] float 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  f3              3   11[BANK0 ] float 
  9261 ;;  sign            1   15[BANK0 ] unsigned char 
  9262 ;;  exp             1   14[BANK0 ] unsigned char 
  9263 ;;  cntr            1   10[BANK0 ] unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  3    0[BANK0 ] float 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, pclath, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9273 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9277 ;;Total ram usage:       16 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    1
  9280 ;; This function calls:
  9281 ;;		___ftpack
  9282 ;; This function is called by:
  9283 ;;		_main
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function ___ftdiv
  9289  0F57                     ___ftdiv:	
  9290                           
  9291                           ;incstack = 0
  9292                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9293  0F57  0020               	movlb	0	; select bank0
  9294  0F58  0823               	movf	___ftdiv@f1,w
  9295  0F59  00A6               	movwf	??___ftdiv
  9296  0F5A  0824               	movf	___ftdiv@f1+1,w
  9297  0F5B  00A7               	movwf	??___ftdiv+1
  9298  0F5C  0825               	movf	___ftdiv@f1+2,w
  9299  0F5D  00A8               	movwf	??___ftdiv+2
  9300  0F5E  1003               	clrc
  9301  0F5F  0D27               	rlf	??___ftdiv+1,w
  9302  0F60  0D28               	rlf	??___ftdiv+2,w
  9303  0F61  00A9               	movwf	??___ftdiv+3
  9304  0F62  0829               	movf	??___ftdiv+3,w
  9305  0F63  00AE               	movwf	___ftdiv@exp
  9306  0F64  082E               	movf	___ftdiv@exp,w
  9307  0F65  1D03               	btfss	3,2
  9308  0F66  2F6E               	goto	l2816
  9309  0F67  3000               	movlw	0
  9310  0F68  00A0               	movwf	?___ftdiv
  9311  0F69  3000               	movlw	0
  9312  0F6A  00A1               	movwf	?___ftdiv+1
  9313  0F6B  3000               	movlw	0
  9314  0F6C  00A2               	movwf	?___ftdiv+2
  9315  0F6D  0008               	return
  9316  0F6E                     l2816:	
  9317  0F6E  0820               	movf	___ftdiv@f2,w
  9318  0F6F  00A6               	movwf	??___ftdiv
  9319  0F70  0821               	movf	___ftdiv@f2+1,w
  9320  0F71  00A7               	movwf	??___ftdiv+1
  9321  0F72  0822               	movf	___ftdiv@f2+2,w
  9322  0F73  00A8               	movwf	??___ftdiv+2
  9323  0F74  1003               	clrc
  9324  0F75  0D27               	rlf	??___ftdiv+1,w
  9325  0F76  0D28               	rlf	??___ftdiv+2,w
  9326  0F77  00A9               	movwf	??___ftdiv+3
  9327  0F78  0829               	movf	??___ftdiv+3,w
  9328  0F79  00AF               	movwf	___ftdiv@sign
  9329  0F7A  082F               	movf	___ftdiv@sign,w
  9330  0F7B  1D03               	btfss	3,2
  9331  0F7C  2F84               	goto	l2822
  9332  0F7D  3000               	movlw	0
  9333  0F7E  00A0               	movwf	?___ftdiv
  9334  0F7F  3000               	movlw	0
  9335  0F80  00A1               	movwf	?___ftdiv+1
  9336  0F81  3000               	movlw	0
  9337  0F82  00A2               	movwf	?___ftdiv+2
  9338  0F83  0008               	return
  9339  0F84                     l2822:	
  9340  0F84  3000               	movlw	0
  9341  0F85  00AB               	movwf	___ftdiv@f3
  9342  0F86  3000               	movlw	0
  9343  0F87  00AC               	movwf	___ftdiv@f3+1
  9344  0F88  3000               	movlw	0
  9345  0F89  00AD               	movwf	___ftdiv@f3+2
  9346  0F8A  3089               	movlw	137
  9347  0F8B  072F               	addwf	___ftdiv@sign,w
  9348  0F8C  00A6               	movwf	??___ftdiv
  9349  0F8D  0826               	movf	??___ftdiv,w
  9350  0F8E  02AE               	subwf	___ftdiv@exp,f
  9351  0F8F  0823               	movf	___ftdiv@f1,w
  9352  0F90  00A6               	movwf	??___ftdiv
  9353  0F91  0824               	movf	___ftdiv@f1+1,w
  9354  0F92  00A7               	movwf	??___ftdiv+1
  9355  0F93  0825               	movf	___ftdiv@f1+2,w
  9356  0F94  00A8               	movwf	??___ftdiv+2
  9357  0F95  3010               	movlw	16
  9358  0F96                     u2965:	
  9359  0F96  36A8               	lsrf	??___ftdiv+2,f
  9360  0F97  0CA7               	rrf	??___ftdiv+1,f
  9361  0F98  0CA6               	rrf	??___ftdiv,f
  9362  0F99  0B89               	decfsz	9,f
  9363  0F9A  2F96               	goto	u2965
  9364  0F9B  0826               	movf	??___ftdiv,w
  9365  0F9C  00A9               	movwf	??___ftdiv+3
  9366  0F9D  0829               	movf	??___ftdiv+3,w
  9367  0F9E  00AF               	movwf	___ftdiv@sign
  9368  0F9F  0820               	movf	___ftdiv@f2,w
  9369  0FA0  00A6               	movwf	??___ftdiv
  9370  0FA1  0821               	movf	___ftdiv@f2+1,w
  9371  0FA2  00A7               	movwf	??___ftdiv+1
  9372  0FA3  0822               	movf	___ftdiv@f2+2,w
  9373  0FA4  00A8               	movwf	??___ftdiv+2
  9374  0FA5  3010               	movlw	16
  9375  0FA6                     u2975:	
  9376  0FA6  36A8               	lsrf	??___ftdiv+2,f
  9377  0FA7  0CA7               	rrf	??___ftdiv+1,f
  9378  0FA8  0CA6               	rrf	??___ftdiv,f
  9379  0FA9  0B89               	decfsz	9,f
  9380  0FAA  2FA6               	goto	u2975
  9381  0FAB  0826               	movf	??___ftdiv,w
  9382  0FAC  00A9               	movwf	??___ftdiv+3
  9383  0FAD  0829               	movf	??___ftdiv+3,w
  9384  0FAE  06AF               	xorwf	___ftdiv@sign,f
  9385  0FAF  3080               	movlw	128
  9386  0FB0  00A6               	movwf	??___ftdiv
  9387  0FB1  0826               	movf	??___ftdiv,w
  9388  0FB2  05AF               	andwf	___ftdiv@sign,f
  9389  0FB3  17A4               	bsf	___ftdiv@f1+1,7
  9390  0FB4  30FF               	movlw	255
  9391  0FB5  05A3               	andwf	___ftdiv@f1,f
  9392  0FB6  30FF               	movlw	255
  9393  0FB7  05A4               	andwf	___ftdiv@f1+1,f
  9394  0FB8  3000               	movlw	0
  9395  0FB9  05A5               	andwf	___ftdiv@f1+2,f
  9396  0FBA  17A1               	bsf	___ftdiv@f2+1,7
  9397  0FBB  30FF               	movlw	255
  9398  0FBC  05A0               	andwf	___ftdiv@f2,f
  9399  0FBD  30FF               	movlw	255
  9400  0FBE  05A1               	andwf	___ftdiv@f2+1,f
  9401  0FBF  3000               	movlw	0
  9402  0FC0  05A2               	andwf	___ftdiv@f2+2,f
  9403  0FC1  3018               	movlw	24
  9404  0FC2  00A6               	movwf	??___ftdiv
  9405  0FC3  0826               	movf	??___ftdiv,w
  9406  0FC4  00AA               	movwf	___ftdiv@cntr
  9407  0FC5                     l2836:	
  9408  0FC5  3001               	movlw	1
  9409  0FC6                     u2985:	
  9410  0FC6  35AB               	lslf	___ftdiv@f3,f
  9411  0FC7  0DAC               	rlf	___ftdiv@f3+1,f
  9412  0FC8  0DAD               	rlf	___ftdiv@f3+2,f
  9413  0FC9  0B89               	decfsz	9,f
  9414  0FCA  2FC6               	goto	u2985
  9415  0FCB  0822               	movf	___ftdiv@f2+2,w
  9416  0FCC  0225               	subwf	___ftdiv@f1+2,w
  9417  0FCD  1D03               	skipz
  9418  0FCE  2FD5               	goto	u2995
  9419  0FCF  0821               	movf	___ftdiv@f2+1,w
  9420  0FD0  0224               	subwf	___ftdiv@f1+1,w
  9421  0FD1  1D03               	skipz
  9422  0FD2  2FD5               	goto	u2995
  9423  0FD3  0820               	movf	___ftdiv@f2,w
  9424  0FD4  0223               	subwf	___ftdiv@f1,w
  9425  0FD5                     u2995:	
  9426  0FD5  1C03               	skipc
  9427  0FD6  2FDE               	goto	l2844
  9428  0FD7  0820               	movf	___ftdiv@f2,w
  9429  0FD8  02A3               	subwf	___ftdiv@f1,f
  9430  0FD9  0821               	movf	___ftdiv@f2+1,w
  9431  0FDA  3BA4               	subwfb	___ftdiv@f1+1,f
  9432  0FDB  0822               	movf	___ftdiv@f2+2,w
  9433  0FDC  3BA5               	subwfb	___ftdiv@f1+2,f
  9434  0FDD  142B               	bsf	___ftdiv@f3,0
  9435  0FDE                     l2844:	
  9436  0FDE  3001               	movlw	1
  9437  0FDF                     u3005:	
  9438  0FDF  35A3               	lslf	___ftdiv@f1,f
  9439  0FE0  0DA4               	rlf	___ftdiv@f1+1,f
  9440  0FE1  0DA5               	rlf	___ftdiv@f1+2,f
  9441  0FE2  0B89               	decfsz	9,f
  9442  0FE3  2FDF               	goto	u3005
  9443  0FE4  3001               	movlw	1
  9444  0FE5  02AA               	subwf	___ftdiv@cntr,f
  9445  0FE6  1D03               	btfss	3,2
  9446  0FE7  2FC5               	goto	l2836
  9447  0FE8  082B               	movf	___ftdiv@f3,w
  9448  0FE9  00F0               	movwf	___ftpack@arg
  9449  0FEA  082C               	movf	___ftdiv@f3+1,w
  9450  0FEB  00F1               	movwf	___ftpack@arg+1
  9451  0FEC  082D               	movf	___ftdiv@f3+2,w
  9452  0FED  00F2               	movwf	___ftpack@arg+2
  9453  0FEE  082E               	movf	___ftdiv@exp,w
  9454  0FEF  00A6               	movwf	??___ftdiv
  9455  0FF0  0826               	movf	??___ftdiv,w
  9456  0FF1  00F3               	movwf	___ftpack@exp
  9457  0FF2  082F               	movf	___ftdiv@sign,w
  9458  0FF3  00A7               	movwf	??___ftdiv+1
  9459  0FF4  0827               	movf	??___ftdiv+1,w
  9460  0FF5  00F4               	movwf	___ftpack@sign
  9461  0FF6  318C  24EF         	fcall	___ftpack
  9462  0FF8  0870               	movf	?___ftpack,w
  9463  0FF9  0020               	movlb	0	; select bank0
  9464  0FFA  00A0               	movwf	?___ftdiv
  9465  0FFB  0871               	movf	?___ftpack+1,w
  9466  0FFC  00A1               	movwf	?___ftdiv+1
  9467  0FFD  0872               	movf	?___ftpack+2,w
  9468  0FFE  00A2               	movwf	?___ftdiv+2
  9469  0FFF  0008               	return
  9470  1000                     __end_of___ftdiv:	
  9471                           
  9472                           	psect	text23
  9473  0CEF                     __ptext23:	
  9474 ;; *************** function ___ftpack *****************
  9475 ;; Defined at:
  9476 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  arg             3    0[COMMON] unsigned um
  9479 ;;  exp             1    3[COMMON] unsigned char 
  9480 ;;  sign            1    4[COMMON] unsigned char 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  3    0[COMMON] float 
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9492 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;Total ram usage:        8 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		___awtoft
  9502 ;;		___ftadd
  9503 ;;		___ftdiv
  9504 ;;		___ftmul
  9505 ;;		___lbtoft
  9506 ;;		___lwtoft
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           
  9511                           ;psect for function ___ftpack
  9512  0CEF                     ___ftpack:	
  9513                           
  9514                           ;incstack = 0
  9515                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9516  0CEF  0873               	movf	___ftpack@exp,w
  9517  0CF0  1903               	btfsc	3,2
  9518  0CF1  2CF7               	goto	l2044
  9519  0CF2  0872               	movf	___ftpack@arg+2,w
  9520  0CF3  0471               	iorwf	___ftpack@arg+1,w
  9521  0CF4  0470               	iorwf	___ftpack@arg,w
  9522  0CF5  1D03               	skipz
  9523  0CF6  2D08               	goto	l2050
  9524  0CF7                     l2044:	
  9525  0CF7  3000               	movlw	0
  9526  0CF8  00F0               	movwf	?___ftpack
  9527  0CF9  3000               	movlw	0
  9528  0CFA  00F1               	movwf	?___ftpack+1
  9529  0CFB  3000               	movlw	0
  9530  0CFC  00F2               	movwf	?___ftpack+2
  9531  0CFD  0008               	return
  9532  0CFE                     l2048:	
  9533  0CFE  3001               	movlw	1
  9534  0CFF  00F5               	movwf	??___ftpack
  9535  0D00  0875               	movf	??___ftpack,w
  9536  0D01  07F3               	addwf	___ftpack@exp,f
  9537  0D02  3001               	movlw	1
  9538  0D03                     u1755:	
  9539  0D03  36F2               	lsrf	___ftpack@arg+2,f
  9540  0D04  0CF1               	rrf	___ftpack@arg+1,f
  9541  0D05  0CF0               	rrf	___ftpack@arg,f
  9542  0D06  0B89               	decfsz	9,f
  9543  0D07  2D03               	goto	u1755
  9544  0D08                     l2050:	
  9545  0D08  30FE               	movlw	254
  9546  0D09  0572               	andwf	___ftpack@arg+2,w
  9547  0D0A  1903               	btfsc	3,2
  9548  0D0B  2D21               	goto	l617
  9549  0D0C  2CFE               	goto	l2048
  9550  0D0D                     l2052:	
  9551  0D0D  3001               	movlw	1
  9552  0D0E  00F5               	movwf	??___ftpack
  9553  0D0F  0875               	movf	??___ftpack,w
  9554  0D10  07F3               	addwf	___ftpack@exp,f
  9555  0D11  3001               	movlw	1
  9556  0D12  07F0               	addwf	___ftpack@arg,f
  9557  0D13  3000               	movlw	0
  9558  0D14  1803               	skipnc
  9559  0D15  3001               	movlw	1
  9560  0D16  07F1               	addwf	___ftpack@arg+1,f
  9561  0D17  3000               	movlw	0
  9562  0D18  1803               	skipnc
  9563  0D19  3001               	movlw	1
  9564  0D1A  07F2               	addwf	___ftpack@arg+2,f
  9565  0D1B  3001               	movlw	1
  9566  0D1C                     u1775:	
  9567  0D1C  36F2               	lsrf	___ftpack@arg+2,f
  9568  0D1D  0CF1               	rrf	___ftpack@arg+1,f
  9569  0D1E  0CF0               	rrf	___ftpack@arg,f
  9570  0D1F  0B89               	decfsz	9,f
  9571  0D20  2D1C               	goto	u1775
  9572  0D21                     l617:	
  9573  0D21  30FF               	movlw	255
  9574  0D22  0572               	andwf	___ftpack@arg+2,w
  9575  0D23  1903               	btfsc	3,2
  9576  0D24  2D2E               	goto	l2060
  9577  0D25  2D0D               	goto	l2052
  9578  0D26                     l2058:	
  9579  0D26  3001               	movlw	1
  9580  0D27  02F3               	subwf	___ftpack@exp,f
  9581  0D28  3001               	movlw	1
  9582  0D29                     u1795:	
  9583  0D29  35F0               	lslf	___ftpack@arg,f
  9584  0D2A  0DF1               	rlf	___ftpack@arg+1,f
  9585  0D2B  0DF2               	rlf	___ftpack@arg+2,f
  9586  0D2C  0B89               	decfsz	9,f
  9587  0D2D  2D29               	goto	u1795
  9588  0D2E                     l2060:	
  9589  0D2E  1BF1               	btfsc	___ftpack@arg+1,7
  9590  0D2F  2D34               	goto	l624
  9591  0D30  3002               	movlw	2
  9592  0D31  0273               	subwf	___ftpack@exp,w
  9593  0D32  1803               	skipnc
  9594  0D33  2D26               	goto	l2058
  9595  0D34                     l624:	
  9596  0D34  1873               	btfsc	___ftpack@exp,0
  9597  0D35  2D3C               	goto	l625
  9598  0D36  30FF               	movlw	255
  9599  0D37  05F0               	andwf	___ftpack@arg,f
  9600  0D38  307F               	movlw	127
  9601  0D39  05F1               	andwf	___ftpack@arg+1,f
  9602  0D3A  30FF               	movlw	255
  9603  0D3B  05F2               	andwf	___ftpack@arg+2,f
  9604  0D3C                     l625:	
  9605  0D3C  1003               	clrc
  9606  0D3D  0CF3               	rrf	___ftpack@exp,f
  9607  0D3E  0873               	movf	___ftpack@exp,w
  9608  0D3F  00F5               	movwf	??___ftpack
  9609  0D40  01F6               	clrf	??___ftpack+1
  9610  0D41  01F7               	clrf	??___ftpack+2
  9611  0D42  3010               	movlw	16
  9612  0D43                     u1835:	
  9613  0D43  35F5               	lslf	??___ftpack,f
  9614  0D44  0DF6               	rlf	??___ftpack+1,f
  9615  0D45  0DF7               	rlf	??___ftpack+2,f
  9616  0D46  0B89               	decfsz	9,f
  9617  0D47  2D43               	goto	u1835
  9618  0D48  0875               	movf	??___ftpack,w
  9619  0D49  04F0               	iorwf	___ftpack@arg,f
  9620  0D4A  0876               	movf	??___ftpack+1,w
  9621  0D4B  04F1               	iorwf	___ftpack@arg+1,f
  9622  0D4C  0877               	movf	??___ftpack+2,w
  9623  0D4D  04F2               	iorwf	___ftpack@arg+2,f
  9624  0D4E  0874               	movf	___ftpack@sign,w
  9625  0D4F  1903               	btfsc	3,2
  9626  0D50  0008               	return
  9627  0D51  17F2               	bsf	___ftpack@arg+2,7
  9628  0D52  0008               	return
  9629  0D53                     __end_of___ftpack:	
  9630                           
  9631                           	psect	text24
  9632  0E4F                     __ptext24:	
  9633 ;; *************** function ___aldiv *****************
  9634 ;; Defined at:
  9635 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  divisor         4    0[COMMON] long 
  9638 ;;  dividend        4    4[COMMON] long 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  quotient        4    2[BANK0 ] long 
  9641 ;;  sign            1    1[BANK0 ] unsigned char 
  9642 ;;  counter         1    0[BANK0 ] unsigned char 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  4    0[COMMON] long 
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;Total ram usage:       15 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_main
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           
  9666                           ;psect for function ___aldiv
  9667  0E4F                     ___aldiv:	
  9668                           
  9669                           ;incstack = 0
  9670                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9671  0E4F  0020               	movlb	0	; select bank0
  9672  0E50  01A1               	clrf	___aldiv@sign
  9673  0E51  1FF3               	btfss	___aldiv@divisor+3,7
  9674  0E52  2E60               	goto	l511
  9675  0E53  09F0               	comf	___aldiv@divisor,f
  9676  0E54  09F1               	comf	___aldiv@divisor+1,f
  9677  0E55  09F2               	comf	___aldiv@divisor+2,f
  9678  0E56  09F3               	comf	___aldiv@divisor+3,f
  9679  0E57  0AF0               	incf	___aldiv@divisor,f
  9680  0E58  1903               	skipnz
  9681  0E59  0AF1               	incf	___aldiv@divisor+1,f
  9682  0E5A  1903               	skipnz
  9683  0E5B  0AF2               	incf	___aldiv@divisor+2,f
  9684  0E5C  1903               	skipnz
  9685  0E5D  0AF3               	incf	___aldiv@divisor+3,f
  9686  0E5E  01A1               	clrf	___aldiv@sign
  9687  0E5F  0AA1               	incf	___aldiv@sign,f
  9688  0E60                     l511:	
  9689  0E60  1FF7               	btfss	___aldiv@dividend+3,7
  9690  0E61  2E71               	goto	l2780
  9691  0E62  09F4               	comf	___aldiv@dividend,f
  9692  0E63  09F5               	comf	___aldiv@dividend+1,f
  9693  0E64  09F6               	comf	___aldiv@dividend+2,f
  9694  0E65  09F7               	comf	___aldiv@dividend+3,f
  9695  0E66  0AF4               	incf	___aldiv@dividend,f
  9696  0E67  1903               	skipnz
  9697  0E68  0AF5               	incf	___aldiv@dividend+1,f
  9698  0E69  1903               	skipnz
  9699  0E6A  0AF6               	incf	___aldiv@dividend+2,f
  9700  0E6B  1903               	skipnz
  9701  0E6C  0AF7               	incf	___aldiv@dividend+3,f
  9702  0E6D  3001               	movlw	1
  9703  0E6E  00F8               	movwf	??___aldiv
  9704  0E6F  0878               	movf	??___aldiv,w
  9705  0E70  06A1               	xorwf	___aldiv@sign,f
  9706  0E71                     l2780:	
  9707  0E71  3000               	movlw	0
  9708  0E72  00A5               	movwf	___aldiv@quotient+3
  9709  0E73  3000               	movlw	0
  9710  0E74  00A4               	movwf	___aldiv@quotient+2
  9711  0E75  3000               	movlw	0
  9712  0E76  00A3               	movwf	___aldiv@quotient+1
  9713  0E77  3000               	movlw	0
  9714  0E78  00A2               	movwf	___aldiv@quotient
  9715  0E79  0873               	movf	___aldiv@divisor+3,w
  9716  0E7A  0472               	iorwf	___aldiv@divisor+2,w
  9717  0E7B  0471               	iorwf	___aldiv@divisor+1,w
  9718  0E7C  0470               	iorwf	___aldiv@divisor,w
  9719  0E7D  1903               	skipnz
  9720  0E7E  2EBA               	goto	l2802
  9721  0E7F  01A0               	clrf	___aldiv@counter
  9722  0E80  0AA0               	incf	___aldiv@counter,f
  9723  0E81                     l2788:	
  9724  0E81  1BF3               	btfsc	___aldiv@divisor+3,7
  9725  0E82  2E8F               	goto	l2790
  9726  0E83  3001               	movlw	1
  9727  0E84                     u2875:	
  9728  0E84  35F0               	lslf	___aldiv@divisor,f
  9729  0E85  0DF1               	rlf	___aldiv@divisor+1,f
  9730  0E86  0DF2               	rlf	___aldiv@divisor+2,f
  9731  0E87  0DF3               	rlf	___aldiv@divisor+3,f
  9732  0E88  0B89               	decfsz	9,f
  9733  0E89  2E84               	goto	u2875
  9734  0E8A  3001               	movlw	1
  9735  0E8B  00F8               	movwf	??___aldiv
  9736  0E8C  0878               	movf	??___aldiv,w
  9737  0E8D  07A0               	addwf	___aldiv@counter,f
  9738  0E8E  2E81               	goto	l2788
  9739  0E8F                     l2790:	
  9740  0E8F  3001               	movlw	1
  9741  0E90                     u2895:	
  9742  0E90  35A2               	lslf	___aldiv@quotient,f
  9743  0E91  0DA3               	rlf	___aldiv@quotient+1,f
  9744  0E92  0DA4               	rlf	___aldiv@quotient+2,f
  9745  0E93  0DA5               	rlf	___aldiv@quotient+3,f
  9746  0E94  0B89               	decfsz	9,f
  9747  0E95  2E90               	goto	u2895
  9748  0E96  0873               	movf	___aldiv@divisor+3,w
  9749  0E97  0277               	subwf	___aldiv@dividend+3,w
  9750  0E98  1D03               	skipz
  9751  0E99  2EA4               	goto	u2905
  9752  0E9A  0872               	movf	___aldiv@divisor+2,w
  9753  0E9B  0276               	subwf	___aldiv@dividend+2,w
  9754  0E9C  1D03               	skipz
  9755  0E9D  2EA4               	goto	u2905
  9756  0E9E  0871               	movf	___aldiv@divisor+1,w
  9757  0E9F  0275               	subwf	___aldiv@dividend+1,w
  9758  0EA0  1D03               	skipz
  9759  0EA1  2EA4               	goto	u2905
  9760  0EA2  0870               	movf	___aldiv@divisor,w
  9761  0EA3  0274               	subwf	___aldiv@dividend,w
  9762  0EA4                     u2905:	
  9763  0EA4  1C03               	skipc
  9764  0EA5  2EAF               	goto	l2798
  9765  0EA6  0870               	movf	___aldiv@divisor,w
  9766  0EA7  02F4               	subwf	___aldiv@dividend,f
  9767  0EA8  0871               	movf	___aldiv@divisor+1,w
  9768  0EA9  3BF5               	subwfb	___aldiv@dividend+1,f
  9769  0EAA  0872               	movf	___aldiv@divisor+2,w
  9770  0EAB  3BF6               	subwfb	___aldiv@dividend+2,f
  9771  0EAC  0873               	movf	___aldiv@divisor+3,w
  9772  0EAD  3BF7               	subwfb	___aldiv@dividend+3,f
  9773  0EAE  1422               	bsf	___aldiv@quotient,0
  9774  0EAF                     l2798:	
  9775  0EAF  3001               	movlw	1
  9776  0EB0                     u2915:	
  9777  0EB0  36F3               	lsrf	___aldiv@divisor+3,f
  9778  0EB1  0CF2               	rrf	___aldiv@divisor+2,f
  9779  0EB2  0CF1               	rrf	___aldiv@divisor+1,f
  9780  0EB3  0CF0               	rrf	___aldiv@divisor,f
  9781  0EB4  0B89               	decfsz	9,f
  9782  0EB5  2EB0               	goto	u2915
  9783  0EB6  3001               	movlw	1
  9784  0EB7  02A0               	subwf	___aldiv@counter,f
  9785  0EB8  1D03               	btfss	3,2
  9786  0EB9  2E8F               	goto	l2790
  9787  0EBA                     l2802:	
  9788  0EBA  0821               	movf	___aldiv@sign,w
  9789  0EBB  1903               	btfsc	3,2
  9790  0EBC  2EC8               	goto	l2806
  9791  0EBD  09A2               	comf	___aldiv@quotient,f
  9792  0EBE  09A3               	comf	___aldiv@quotient+1,f
  9793  0EBF  09A4               	comf	___aldiv@quotient+2,f
  9794  0EC0  09A5               	comf	___aldiv@quotient+3,f
  9795  0EC1  0AA2               	incf	___aldiv@quotient,f
  9796  0EC2  1903               	skipnz
  9797  0EC3  0AA3               	incf	___aldiv@quotient+1,f
  9798  0EC4  1903               	skipnz
  9799  0EC5  0AA4               	incf	___aldiv@quotient+2,f
  9800  0EC6  1903               	skipnz
  9801  0EC7  0AA5               	incf	___aldiv@quotient+3,f
  9802  0EC8                     l2806:	
  9803  0EC8  0825               	movf	___aldiv@quotient+3,w
  9804  0EC9  00F3               	movwf	?___aldiv+3
  9805  0ECA  0824               	movf	___aldiv@quotient+2,w
  9806  0ECB  00F2               	movwf	?___aldiv+2
  9807  0ECC  0823               	movf	___aldiv@quotient+1,w
  9808  0ECD  00F1               	movwf	?___aldiv+1
  9809  0ECE  0822               	movf	___aldiv@quotient,w
  9810  0ECF  00F0               	movwf	?___aldiv
  9811  0ED0  0008               	return
  9812  0ED1                     __end_of___aldiv:	
  9813                           
  9814                           	psect	text25
  9815  0B4E                     __ptext25:	
  9816 ;; *************** function _SYSTEM_Initialize *****************
  9817 ;; Defined at:
  9818 ;;		line 37 in file "system.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:        2 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:    3
  9839 ;; This function calls:
  9840 ;;		_ADCC_Initialize
  9841 ;;		_InitCustomChars
  9842 ;;		_LCD_Clear
  9843 ;;		_LCD_Init
  9844 ;;		_OSCILLATOR_Initialize
  9845 ;;		_PIN_MANAGER_Initialize
  9846 ;;		_PWM6_Initialize
  9847 ;;		_TMR0_Initialize
  9848 ;;		_TMR2_Initialize
  9849 ;; This function is called by:
  9850 ;;		_main
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           
  9855                           ;psect for function _SYSTEM_Initialize
  9856  0B4E                     _SYSTEM_Initialize:	
  9857                           
  9858                           ;system.c: 40: PIN_MANAGER_Initialize();
  9859                           
  9860                           ;incstack = 0
  9861                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9862  0B4E  318A  22E7  318B   	fcall	_PIN_MANAGER_Initialize
  9863                           
  9864                           ;system.c: 41: OSCILLATOR_Initialize();
  9865  0B51  3189  2125  318B   	fcall	_OSCILLATOR_Initialize
  9866                           
  9867                           ;system.c: 42: FVRCON = 0x00;
  9868  0B54  0032               	movlb	18	; select bank18
  9869  0B55  018C               	clrf	12	;volatile
  9870                           
  9871                           ;system.c: 43: ADCC_Initialize();
  9872  0B56  3189  21F1  318B   	fcall	_ADCC_Initialize
  9873                           
  9874                           ;system.c: 44: PWM6_Initialize();
  9875  0B59  3189  214D  318B   	fcall	_PWM6_Initialize
  9876                           
  9877                           ;system.c: 45: TMR0_Initialize();
  9878  0B5C  3189  2168  318B   	fcall	_TMR0_Initialize
  9879                           
  9880                           ;system.c: 46: TMR2_Initialize();
  9881  0B5F  3189  2177  318B   	fcall	_TMR2_Initialize
  9882                           
  9883                           ;system.c: 47: LCD_Init(0X00);
  9884  0B62  3000               	movlw	0
  9885  0B63  318D  2553  318B   	fcall	_LCD_Init
  9886                           
  9887                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
  9888  0B66  3041               	movlw	65
  9889  0B67  00F8               	movwf	??_SYSTEM_Initialize+1
  9890  0B68  30EE               	movlw	238
  9891  0B69  00F7               	movwf	??_SYSTEM_Initialize
  9892  0B6A                     u3397:	
  9893  0B6A  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9894  0B6B  2B6A               	goto	u3397
  9895  0B6C  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9896  0B6D  2B6A               	goto	u3397
  9897  0B6E  0000               	nop
  9898                           
  9899                           ;system.c: 49: LCD_Clear();
  9900  0B6F  3189  211D  318B   	fcall	_LCD_Clear
  9901                           
  9902                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
  9903  0B72  3021               	movlw	33
  9904  0B73  00F8               	movwf	??_SYSTEM_Initialize+1
  9905  0B74  3076               	movlw	118
  9906  0B75  00F7               	movwf	??_SYSTEM_Initialize
  9907  0B76                     u3407:	
  9908  0B76  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9909  0B77  2B76               	goto	u3407
  9910  0B78  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9911  0B79  2B76               	goto	u3407
  9912  0B7A  0000               	nop
  9913                           
  9914                           ;system.c: 51: InitCustomChars();
  9915  0B7B  318A  2298  318B   	fcall	_InitCustomChars
  9916                           
  9917                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
  9918  0B7E  3041               	movlw	65
  9919  0B7F  00F8               	movwf	??_SYSTEM_Initialize+1
  9920  0B80  30EE               	movlw	238
  9921  0B81  00F7               	movwf	??_SYSTEM_Initialize
  9922  0B82                     u3417:	
  9923  0B82  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9924  0B83  2B82               	goto	u3417
  9925  0B84  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9926  0B85  2B82               	goto	u3417
  9927  0B86  0000               	nop
  9928  0B87  0008               	return
  9929  0B88                     __end_of_SYSTEM_Initialize:	
  9930                           
  9931                           	psect	text26
  9932  0977                     __ptext26:	
  9933 ;; *************** function _TMR2_Initialize *****************
  9934 ;; Defined at:
  9935 ;;		line 21 in file "timers.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, status,2
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;Total ram usage:        0 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_SYSTEM_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           
  9963                           ;psect for function _TMR2_Initialize
  9964  0977                     _TMR2_Initialize:	
  9965                           
  9966                           ;timers.c: 23: T2CON = 0x7F;
  9967                           
  9968                           ;incstack = 0
  9969                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9970  0977  307F               	movlw	127
  9971  0978  0025               	movlb	5	; select bank5
  9972  0979  008E               	movwf	14	;volatile
  9973                           
  9974                           ;timers.c: 25: T2CLKCON = 0x01;
  9975  097A  3001               	movlw	1
  9976  097B  0090               	movwf	16	;volatile
  9977                           
  9978                           ;timers.c: 27: T2HLT = 0x00;
  9979  097C  018F               	clrf	15	;volatile
  9980                           
  9981                           ;timers.c: 29: T2RST = 0x00;
  9982  097D  0191               	clrf	17	;volatile
  9983                           
  9984                           ;timers.c: 31: T2PR = 0xFF;
  9985  097E  30FF               	movlw	255
  9986  097F  008D               	movwf	13	;volatile
  9987                           
  9988                           ;timers.c: 33: T2TMR = 0x00;
  9989  0980  018C               	clrf	12	;volatile
  9990                           
  9991                           ;timers.c: 35: PIR4bits.TMR2IF = 0;
  9992  0981  002E               	movlb	14	; select bank14
  9993  0982  1090               	bcf	16,1	;volatile
  9994                           
  9995                           ;timers.c: 37: T2CONbits.TMR2ON = 1;
  9996  0983  0025               	movlb	5	; select bank5
  9997  0984  178E               	bsf	14,7	;volatile
  9998  0985  0008               	return
  9999  0986                     __end_of_TMR2_Initialize:	
 10000                           
 10001                           	psect	text27
 10002  0968                     __ptext27:	
 10003 ;; *************** function _TMR0_Initialize *****************
 10004 ;; Defined at:
 10005 ;;		line 3 in file "timers.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_SYSTEM_Initialize
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           
 10033                           ;psect for function _TMR0_Initialize
 10034  0968                     _TMR0_Initialize:	
 10035                           
 10036                           ;timers.c: 5: T0CON0 = 0x10;
 10037                           
 10038                           ;incstack = 0
 10039                           ; Regs used in _TMR0_Initialize: [wreg]
 10040  0968  3010               	movlw	16
 10041  0969  0020               	movlb	0	; select bank0
 10042  096A  009E               	movwf	30	;volatile
 10043                           
 10044                           ;timers.c: 7: T0CON1 = 0x42;
 10045  096B  3042               	movlw	66
 10046  096C  009F               	movwf	31	;volatile
 10047                           
 10048                           ;timers.c: 9: TMR0H = 0x24;
 10049  096D  3024               	movlw	36
 10050  096E  009D               	movwf	29	;volatile
 10051                           
 10052                           ;timers.c: 11: TMR0L = 0x9F;
 10053  096F  309F               	movlw	159
 10054  0970  009C               	movwf	28	;volatile
 10055                           
 10056                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
 10057  0971  002E               	movlb	14	; select bank14
 10058  0972  1696               	bsf	22,5	;volatile
 10059                           
 10060                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
 10061  0973  128C               	bcf	12,5	;volatile
 10062                           
 10063                           ;timers.c: 17: T0CON0bits.T0EN = 1;
 10064  0974  0020               	movlb	0	; select bank0
 10065  0975  179E               	bsf	30,7	;volatile
 10066  0976  0008               	return
 10067  0977                     __end_of_TMR0_Initialize:	
 10068                           
 10069                           	psect	text28
 10070  094D                     __ptext28:	
 10071 ;; *************** function _PWM6_Initialize *****************
 10072 ;; Defined at:
 10073 ;;		line 4 in file "pwm6.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_SYSTEM_Initialize
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           
 10101                           ;psect for function _PWM6_Initialize
 10102  094D                     _PWM6_Initialize:	
 10103                           
 10104                           ;pwm6.c: 6: PWM6CON = 0x80;
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10108  094D  3080               	movlw	128
 10109  094E  0027               	movlb	7	; select bank7
 10110  094F  008E               	movwf	14	;volatile
 10111                           
 10112                           ;pwm6.c: 8: PWM6DCH = 0xFF;
 10113  0950  30FF               	movlw	255
 10114  0951  008D               	movwf	13	;volatile
 10115                           
 10116                           ;pwm6.c: 10: PWM6DCL = 0xC0;
 10117  0952  30C0               	movlw	192
 10118  0953  008C               	movwf	12	;volatile
 10119                           
 10120                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
 10121  0954  0024               	movlb	4	; select bank4
 10122  0955  081F               	movf	31,w	;volatile
 10123  0956  39F3               	andlw	-13
 10124  0957  3804               	iorlw	4
 10125  0958  009F               	movwf	31	;volatile
 10126  0959  0008               	return
 10127  095A                     __end_of_PWM6_Initialize:	
 10128                           
 10129                           	psect	text29
 10130  0AE7                     __ptext29:	
 10131 ;; *************** function _PIN_MANAGER_Initialize *****************
 10132 ;; Defined at:
 10133 ;;		line 5 in file "pin_manager.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;		None
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;  state           1    0[COMMON] unsigned char 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1    wreg      void 
 10140 ;; Registers used:
 10141 ;;		wreg, status,2
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;Total ram usage:        1 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_SYSTEM_Initialize
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           
 10161                           ;psect for function _PIN_MANAGER_Initialize
 10162  0AE7                     _PIN_MANAGER_Initialize:	
 10163                           
 10164                           ;pin_manager.c: 7: LATA = 0x00;
 10165                           
 10166                           ;incstack = 0
 10167                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10168  0AE7  0020               	movlb	0	; select bank0
 10169  0AE8  0196               	clrf	22	;volatile
 10170                           
 10171                           ;pin_manager.c: 8: LATB = 0x0;
 10172  0AE9  0197               	clrf	23	;volatile
 10173                           
 10174                           ;pin_manager.c: 9: LATC = 0x0;
 10175  0AEA  0198               	clrf	24	;volatile
 10176                           
 10177                           ;pin_manager.c: 11: WPUA = 0x18;
 10178  0AEB  3018               	movlw	24
 10179  0AEC  003E               	movlb	30	; select bank30
 10180  0AED  00B9               	movwf	57	;volatile
 10181                           
 10182                           ;pin_manager.c: 12: WPUB = 0x00;
 10183  0AEE  01C4               	clrf	68	;volatile
 10184                           
 10185                           ;pin_manager.c: 13: WPUC = 0x00;
 10186  0AEF  01CF               	clrf	79	;volatile
 10187                           
 10188                           ;pin_manager.c: 14: WPUE = 0x8;
 10189  0AF0  3008               	movlw	8
 10190  0AF1  00E5               	movwf	101	;volatile
 10191                           
 10192                           ;pin_manager.c: 16: TRISA = 0x1C;
 10193  0AF2  301C               	movlw	28
 10194  0AF3  0020               	movlb	0	; select bank0
 10195  0AF4  0091               	movwf	17	;volatile
 10196                           
 10197                           ;pin_manager.c: 17: TRISB = 0x00;
 10198  0AF5  0192               	clrf	18	;volatile
 10199                           
 10200                           ;pin_manager.c: 18: TRISC = 0x10;
 10201  0AF6  3010               	movlw	16
 10202  0AF7  0093               	movwf	19	;volatile
 10203                           
 10204                           ;pin_manager.c: 20: ANSELA = 0x04;
 10205  0AF8  3004               	movlw	4
 10206  0AF9  003E               	movlb	30	; select bank30
 10207  0AFA  00B8               	movwf	56	;volatile
 10208                           
 10209                           ;pin_manager.c: 21: ANSELB = 0x00;
 10210  0AFB  01C3               	clrf	67	;volatile
 10211                           
 10212                           ;pin_manager.c: 22: ANSELC = 0x00;
 10213  0AFC  01CE               	clrf	78	;volatile
 10214                           
 10215                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 10216  0AFD  002E               	movlb	14	; select bank14
 10217  0AFE  1216               	bcf	22,4	;volatile
 10218                           
 10219                           ;pin_manager.c: 25: bool state = GIE;
 10220  0AFF  3000               	movlw	0
 10221  0B00  1B8B               	btfsc	11,7	;volatile
 10222  0B01  3001               	movlw	1
 10223  0B02  00F0               	movwf	PIN_MANAGER_Initialize@state
 10224                           
 10225                           ;pin_manager.c: 26: GIE = 0;
 10226  0B03  138B               	bcf	11,7	;volatile
 10227                           
 10228                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 10229  0B04  3055               	movlw	85
 10230  0B05  003D               	movlb	29	; select bank29
 10231  0B06  008F               	movwf	15	;volatile
 10232                           
 10233                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 10234  0B07  30AA               	movlw	170
 10235  0B08  008F               	movwf	15	;volatile
 10236                           
 10237                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 10238  0B09  100F               	bcf	15,0	;volatile
 10239                           
 10240                           ;pin_manager.c: 32: RA1PPS = 0x000E;
 10241  0B0A  300E               	movlw	14
 10242  0B0B  003E               	movlb	30	; select bank30
 10243  0B0C  0091               	movwf	17	;volatile
 10244                           
 10245                           ;pin_manager.c: 36: PPSLOCK = 0x55;
 10246  0B0D  3055               	movlw	85
 10247  0B0E  003D               	movlb	29	; select bank29
 10248  0B0F  008F               	movwf	15	;volatile
 10249                           
 10250                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
 10251  0B10  30AA               	movlw	170
 10252  0B11  008F               	movwf	15	;volatile
 10253                           
 10254                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
 10255  0B12  140F               	bsf	15,0	;volatile
 10256                           
 10257                           ;pin_manager.c: 39: GIE = state;
 10258  0B13  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10259  0B14  2B17               	goto	u2570
 10260  0B15  178B               	bsf	11,7	;volatile
 10261  0B16  0008               	return
 10262  0B17                     u2570:	
 10263  0B17  138B               	bcf	11,7	;volatile
 10264  0B18  0008               	return
 10265  0B19                     __end_of_PIN_MANAGER_Initialize:	
 10266                           
 10267                           	psect	text30
 10268  0925                     __ptext30:	
 10269 ;; *************** function _OSCILLATOR_Initialize *****************
 10270 ;; Defined at:
 10271 ;;		line 55 in file "system.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;		None
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1    wreg      void 
 10278 ;; Registers used:
 10279 ;;		wreg, status,2
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;Total ram usage:        0 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_SYSTEM_Initialize
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           
 10299                           ;psect for function _OSCILLATOR_Initialize
 10300  0925                     _OSCILLATOR_Initialize:	
 10301                           
 10302                           ;system.c: 81: OSCCON1 = 0x60;
 10303                           
 10304                           ;incstack = 0
 10305                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10306  0925  3060               	movlw	96
 10307  0926  0031               	movlb	17	; select bank17
 10308  0927  008D               	movwf	13	;volatile
 10309                           
 10310                           ;system.c: 83: OSCCON3 = 0x00;
 10311  0928  018F               	clrf	15	;volatile
 10312                           
 10313                           ;system.c: 85: OSCEN = 0x00;
 10314  0929  0191               	clrf	17	;volatile
 10315                           
 10316                           ;system.c: 87: OSCFRQ = 0x00;
 10317  092A  0193               	clrf	19	;volatile
 10318                           
 10319                           ;system.c: 89: OSCTUNE = 0x00;
 10320  092B  0192               	clrf	18	;volatile
 10321  092C  0008               	return
 10322  092D                     __end_of_OSCILLATOR_Initialize:	
 10323                           
 10324                           	psect	text31
 10325  0D53                     __ptext31:	
 10326 ;; *************** function _LCD_Init *****************
 10327 ;; Defined at:
 10328 ;;		line 154 in file "lcd.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  style           1    wreg     unsigned char 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  style           1    5[COMMON] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0, pclath, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;Total ram usage:        3 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    2
 10349 ;; This function calls:
 10350 ;;		_LCD_Cmd
 10351 ;;		_LCD_Port
 10352 ;; This function is called by:
 10353 ;;		_SYSTEM_Initialize
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           
 10358                           ;psect for function _LCD_Init
 10359  0D53                     _LCD_Init:	
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10363                           ;LCD_Init@style stored from wreg
 10364  0D53  00F5               	movwf	LCD_Init@style
 10365                           
 10366                           ;lcd.c: 156: LCD_Port(0x00);
 10367  0D54  3000               	movlw	0
 10368  0D55  3189  21C1  318D   	fcall	_LCD_Port
 10369                           
 10370                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
 10371  0D58  3021               	movlw	33
 10372  0D59  00F4               	movwf	??_LCD_Init+1
 10373  0D5A  3076               	movlw	118
 10374  0D5B  00F3               	movwf	??_LCD_Init
 10375  0D5C                     u3427:	
 10376  0D5C  0BF3               	decfsz	??_LCD_Init,f
 10377  0D5D  2D5C               	goto	u3427
 10378  0D5E  0BF4               	decfsz	??_LCD_Init+1,f
 10379  0D5F  2D5C               	goto	u3427
 10380  0D60  0000               	nop
 10381                           
 10382                           ;lcd.c: 160: LCD_Cmd(0x03);
 10383  0D61  3003               	movlw	3
 10384  0D62  3189  2186  318D   	fcall	_LCD_Cmd
 10385                           
 10386                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
 10387  0D65  3004               	movlw	4
 10388  0D66  00F4               	movwf	??_LCD_Init+1
 10389  0D67  303D               	movlw	61
 10390  0D68  00F3               	movwf	??_LCD_Init
 10391  0D69                     u3437:	
 10392  0D69  0BF3               	decfsz	??_LCD_Init,f
 10393  0D6A  2D69               	goto	u3437
 10394  0D6B  0BF4               	decfsz	??_LCD_Init+1,f
 10395  0D6C  2D69               	goto	u3437
 10396  0D6D  3200               	nop2
 10397                           
 10398                           ;lcd.c: 164: LCD_Cmd(0x03);
 10399  0D6E  3003               	movlw	3
 10400  0D6F  3189  2186  318D   	fcall	_LCD_Cmd
 10401                           
 10402                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10403  0D72  3009               	movlw	9
 10404  0D73  00F3               	movwf	??_LCD_Init
 10405  0D74                     u3447:	
 10406  0D74  0BF3               	decfsz	??_LCD_Init,f
 10407  0D75  2D74               	goto	u3447
 10408  0D76  3200               	nop2	;nop
 10409                           
 10410                           ;lcd.c: 168: LCD_Cmd(0x03);
 10411  0D77  3003               	movlw	3
 10412  0D78  3189  2186  318D   	fcall	_LCD_Cmd
 10413                           
 10414                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10415  0D7B  3009               	movlw	9
 10416  0D7C  00F3               	movwf	??_LCD_Init
 10417  0D7D                     u3457:	
 10418  0D7D  0BF3               	decfsz	??_LCD_Init,f
 10419  0D7E  2D7D               	goto	u3457
 10420  0D7F  3200               	nop2	;nop
 10421                           
 10422                           ;lcd.c: 172: LCD_Cmd(0x02);
 10423  0D80  3002               	movlw	2
 10424  0D81  3189  2186  318D   	fcall	_LCD_Cmd
 10425                           
 10426                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10427  0D84  3009               	movlw	9
 10428  0D85  00F3               	movwf	??_LCD_Init
 10429  0D86                     u3467:	
 10430  0D86  0BF3               	decfsz	??_LCD_Init,f
 10431  0D87  2D86               	goto	u3467
 10432  0D88  3200               	nop2	;nop
 10433                           
 10434                           ;lcd.c: 176: LCD_Cmd(0x2);
 10435  0D89  3002               	movlw	2
 10436  0D8A  3189  2186  318D   	fcall	_LCD_Cmd
 10437                           
 10438                           ;lcd.c: 178: LCD_Cmd(0x8);
 10439  0D8D  3008               	movlw	8
 10440  0D8E  3189  2186  318D   	fcall	_LCD_Cmd
 10441                           
 10442                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10443  0D91  3009               	movlw	9
 10444  0D92  00F3               	movwf	??_LCD_Init
 10445  0D93                     u3477:	
 10446  0D93  0BF3               	decfsz	??_LCD_Init,f
 10447  0D94  2D93               	goto	u3477
 10448  0D95  3200               	nop2	;nop
 10449                           
 10450                           ;lcd.c: 182: LCD_Cmd(0x0);
 10451  0D96  3000               	movlw	0
 10452  0D97  3189  2186  318D   	fcall	_LCD_Cmd
 10453                           
 10454                           ;lcd.c: 184: LCD_Cmd(0x8);
 10455  0D9A  3008               	movlw	8
 10456  0D9B  3189  2186  318D   	fcall	_LCD_Cmd
 10457                           
 10458                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10459  0D9E  3009               	movlw	9
 10460  0D9F  00F3               	movwf	??_LCD_Init
 10461  0DA0                     u3487:	
 10462  0DA0  0BF3               	decfsz	??_LCD_Init,f
 10463  0DA1  2DA0               	goto	u3487
 10464  0DA2  3200               	nop2	;nop
 10465                           
 10466                           ;lcd.c: 188: LCD_Cmd(0x0);
 10467  0DA3  3000               	movlw	0
 10468  0DA4  3189  2186  318D   	fcall	_LCD_Cmd
 10469                           
 10470                           ;lcd.c: 190: LCD_Cmd(0x1);
 10471  0DA7  3001               	movlw	1
 10472  0DA8  3189  2186  318D   	fcall	_LCD_Cmd
 10473                           
 10474                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10475  0DAB  30F9               	movlw	249
 10476  0DAC  00F3               	movwf	??_LCD_Init
 10477  0DAD                     u3497:	
 10478  0DAD  3200               	nop2
 10479  0DAE  0BF3               	decfsz	??_LCD_Init,f
 10480  0DAF  2DAD               	goto	u3497
 10481  0DB0  3200               	nop2	;nop
 10482  0DB1  3200               	nop2	;nop
 10483                           
 10484                           ;lcd.c: 194: LCD_Cmd(0x0);
 10485  0DB2  3000               	movlw	0
 10486  0DB3  3189  2186  318D   	fcall	_LCD_Cmd
 10487                           
 10488                           ;lcd.c: 196: LCD_Cmd(0x6);
 10489  0DB6  3006               	movlw	6
 10490  0DB7  3189  2186  318D   	fcall	_LCD_Cmd
 10491                           
 10492                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10493  0DBA  3009               	movlw	9
 10494  0DBB  00F3               	movwf	??_LCD_Init
 10495  0DBC                     u3507:	
 10496  0DBC  0BF3               	decfsz	??_LCD_Init,f
 10497  0DBD  2DBC               	goto	u3507
 10498  0DBE  3200               	nop2	;nop
 10499                           
 10500                           ;lcd.c: 200: LCD_Cmd(0x0);
 10501  0DBF  3000               	movlw	0
 10502  0DC0  3189  2186  318D   	fcall	_LCD_Cmd
 10503                           
 10504                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10505  0DC3  0875               	movf	LCD_Init@style,w
 10506  0DC4  380C               	iorlw	12
 10507  0DC5  3189  2186  318D   	fcall	_LCD_Cmd
 10508                           
 10509                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10510  0DC8  3009               	movlw	9
 10511  0DC9  00F3               	movwf	??_LCD_Init
 10512  0DCA                     u3517:	
 10513  0DCA  0BF3               	decfsz	??_LCD_Init,f
 10514  0DCB  2DCA               	goto	u3517
 10515  0DCC  3200               	nop2	;nop
 10516  0DCD  0008               	return
 10517  0DCE                     __end_of_LCD_Init:	
 10518                           
 10519                           	psect	text32
 10520  091D                     __ptext32:	
 10521 ;; *************** function _LCD_Clear *****************
 10522 ;; Defined at:
 10523 ;;		line 75 in file "lcd.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;		None
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;		None
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0, pclath, cstack
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;Total ram usage:        0 bytes
 10542 ;; Hardware stack levels used:    1
 10543 ;; Hardware stack levels required when called:    2
 10544 ;; This function calls:
 10545 ;;		_LCD_Cmd
 10546 ;; This function is called by:
 10547 ;;		_SYSTEM_Initialize
 10548 ;;		_tempSetpoint
 10549 ;;		_readButtons
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           
 10554                           ;psect for function _LCD_Clear
 10555  091D                     _LCD_Clear:	
 10556                           
 10557                           ;lcd.c: 77: LCD_Cmd(0);
 10558                           
 10559                           ;incstack = 0
 10560                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10561  091D  3000               	movlw	0
 10562  091E  3189  2186  3189   	fcall	_LCD_Cmd
 10563                           
 10564                           ;lcd.c: 78: LCD_Cmd(1);
 10565  0921  3001               	movlw	1
 10566  0922  3189  2186         	fcall	_LCD_Cmd
 10567  0924  0008               	return
 10568  0925                     __end_of_LCD_Clear:	
 10569                           
 10570                           	psect	text33
 10571  0A98                     __ptext33:	
 10572 ;; *************** function _InitCustomChars *****************
 10573 ;; Defined at:
 10574 ;;		line 29 in file "lcd.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;		None
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;  i               1    6[COMMON] unsigned char 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;Total ram usage:        2 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    2
 10595 ;; This function calls:
 10596 ;;		_LCD_Cmd
 10597 ;;		_LCD_Write_Char
 10598 ;; This function is called by:
 10599 ;;		_SYSTEM_Initialize
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           
 10604                           ;psect for function _InitCustomChars
 10605  0A98                     _InitCustomChars:	
 10606                           
 10607                           ;lcd.c: 31: uint8_t i;
 10608                           ;lcd.c: 32: LCD_Cmd(0x04);
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10612  0A98  3004               	movlw	4
 10613  0A99  3189  2186  318A   	fcall	_LCD_Cmd
 10614                           
 10615                           ;lcd.c: 33: LCD_Cmd(0x00);
 10616  0A9C  3000               	movlw	0
 10617  0A9D  3189  2186  318A   	fcall	_LCD_Cmd
 10618                           
 10619                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10620  0AA0  01F6               	clrf	InitCustomChars@i
 10621  0AA1  3018               	movlw	24
 10622  0AA2  0276               	subwf	InitCustomChars@i,w
 10623  0AA3  1803               	btfsc	3,0
 10624  0AA4  2AB5               	goto	l2520
 10625  0AA5                     l2514:	
 10626                           
 10627                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10628  0AA5  0876               	movf	InitCustomChars@i,w
 10629  0AA6  3EBE               	addlw	(low (___cgram| 0))& (0+255)
 10630  0AA7  0086               	movwf	6
 10631  0AA8  0187               	clrf	7
 10632  0AA9  0801               	movf	1,w
 10633  0AAA  318A  22BD  318A   	fcall	_LCD_Write_Char
 10634  0AAD  3001               	movlw	1
 10635  0AAE  00F5               	movwf	??_InitCustomChars
 10636  0AAF  0875               	movf	??_InitCustomChars,w
 10637  0AB0  07F6               	addwf	InitCustomChars@i,f
 10638  0AB1  3018               	movlw	24
 10639  0AB2  0276               	subwf	InitCustomChars@i,w
 10640  0AB3  1C03               	skipc
 10641  0AB4  2AA5               	goto	l2514
 10642  0AB5                     l2520:	
 10643                           
 10644                           ;lcd.c: 36: LCD_Cmd(0);
 10645  0AB5  3000               	movlw	0
 10646  0AB6  3189  2186  318A   	fcall	_LCD_Cmd
 10647                           
 10648                           ;lcd.c: 37: LCD_Cmd(2);
 10649  0AB9  3002               	movlw	2
 10650  0ABA  3189  2186         	fcall	_LCD_Cmd
 10651  0ABC  0008               	return
 10652  0ABD                     __end_of_InitCustomChars:	
 10653                           
 10654                           	psect	text34
 10655  0ABD                     __ptext34:	
 10656 ;; *************** function _LCD_Write_Char *****************
 10657 ;; Defined at:
 10658 ;;		line 223 in file "lcd.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  a               1    wreg     const unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  a               1    4[COMMON] const unsigned char 
 10663 ;;  y               1    3[COMMON] unsigned char 
 10664 ;;  temp            1    2[COMMON] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0, pclath, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;Total ram usage:        4 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    1
 10681 ;; This function calls:
 10682 ;;		_LCD_Port
 10683 ;; This function is called by:
 10684 ;;		_InitCustomChars
 10685 ;;		_LCD_Write_String
 10686 ;;		_LCD_Write_Int
 10687 ;;		_tempSetpoint
 10688 ;;		_readButtons
 10689 ;;		_main
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function _LCD_Write_Char
 10695  0ABD                     _LCD_Write_Char:	
 10696                           
 10697                           ;incstack = 0
 10698                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10699                           ;LCD_Write_Char@a stored from wreg
 10700  0ABD  00F4               	movwf	LCD_Write_Char@a
 10701                           
 10702                           ;lcd.c: 225: char temp,y;
 10703                           ;lcd.c: 226: temp = a&0x0F;
 10704  0ABE  0874               	movf	LCD_Write_Char@a,w
 10705  0ABF  390F               	andlw	15
 10706  0AC0  00F1               	movwf	??_LCD_Write_Char
 10707  0AC1  0871               	movf	??_LCD_Write_Char,w
 10708  0AC2  00F2               	movwf	LCD_Write_Char@temp
 10709                           
 10710                           ;lcd.c: 227: y = a&0xF0;
 10711  0AC3  0874               	movf	LCD_Write_Char@a,w
 10712  0AC4  39F0               	andlw	240
 10713  0AC5  00F1               	movwf	??_LCD_Write_Char
 10714  0AC6  0871               	movf	??_LCD_Write_Char,w
 10715  0AC7  00F3               	movwf	LCD_Write_Char@y
 10716                           
 10717                           ;lcd.c: 228: RB0 = 1;
 10718  0AC8  0020               	movlb	0	; select bank0
 10719  0AC9  140D               	bsf	13,0	;volatile
 10720                           
 10721                           ;lcd.c: 229: LCD_Port(y>>4);
 10722  0ACA  0873               	movf	LCD_Write_Char@y,w
 10723  0ACB  00F1               	movwf	??_LCD_Write_Char
 10724  0ACC  3004               	movlw	4
 10725  0ACD                     u1725:	
 10726  0ACD  36F1               	lsrf	??_LCD_Write_Char,f
 10727  0ACE  0B89               	decfsz	9,f
 10728  0ACF  2ACD               	goto	u1725
 10729  0AD0  0871               	movf	??_LCD_Write_Char,w
 10730  0AD1  3189  21C1  318A   	fcall	_LCD_Port
 10731                           
 10732                           ;lcd.c: 230: RB1 = 1;
 10733  0AD4  0020               	movlb	0	; select bank0
 10734  0AD5  148D               	bsf	13,1	;volatile
 10735                           
 10736                           ;lcd.c: 231: RB1 = 0;
 10737  0AD6  108D               	bcf	13,1	;volatile
 10738                           
 10739                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10740  0AD7  3003               	movlw	3
 10741  0AD8  00F1               	movwf	??_LCD_Write_Char
 10742  0AD9                     u3527:	
 10743  0AD9  0BF1               	decfsz	??_LCD_Write_Char,f
 10744  0ADA  2AD9               	goto	u3527
 10745                           
 10746                           ;lcd.c: 233: LCD_Port(temp);
 10747  0ADB  0872               	movf	LCD_Write_Char@temp,w
 10748  0ADC  3189  21C1  318A   	fcall	_LCD_Port
 10749                           
 10750                           ;lcd.c: 234: RB1 = 1;
 10751  0ADF  0020               	movlb	0	; select bank0
 10752  0AE0  148D               	bsf	13,1	;volatile
 10753                           
 10754                           ;lcd.c: 235: RB1 = 0;
 10755  0AE1  108D               	bcf	13,1	;volatile
 10756                           
 10757                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10758  0AE2  3003               	movlw	3
 10759  0AE3  00F1               	movwf	??_LCD_Write_Char
 10760  0AE4                     u3537:	
 10761  0AE4  0BF1               	decfsz	??_LCD_Write_Char,f
 10762  0AE5  2AE4               	goto	u3537
 10763  0AE6  0008               	return
 10764  0AE7                     __end_of_LCD_Write_Char:	
 10765                           
 10766                           	psect	text35
 10767  0986                     __ptext35:	
 10768 ;; *************** function _LCD_Cmd *****************
 10769 ;; Defined at:
 10770 ;;		line 65 in file "lcd.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  a               1    wreg     unsigned char 
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;  a               1    2[COMMON] unsigned char 
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		wreg, status,2, status,0, pclath, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;Total ram usage:        2 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    1
 10791 ;; This function calls:
 10792 ;;		_LCD_Port
 10793 ;; This function is called by:
 10794 ;;		_InitCustomChars
 10795 ;;		_LCD_Clear
 10796 ;;		_LCD_Set_Cursor
 10797 ;;		_LCD_Init
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           
 10802                           ;psect for function _LCD_Cmd
 10803  0986                     _LCD_Cmd:	
 10804                           
 10805                           ;incstack = 0
 10806                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10807                           ;LCD_Cmd@a stored from wreg
 10808  0986  00F2               	movwf	LCD_Cmd@a
 10809                           
 10810                           ;lcd.c: 67: RB0 = 0;
 10811  0987  0020               	movlb	0	; select bank0
 10812  0988  100D               	bcf	13,0	;volatile
 10813                           
 10814                           ;lcd.c: 68: LCD_Port(a);
 10815  0989  0872               	movf	LCD_Cmd@a,w
 10816  098A  3189  21C1  3189   	fcall	_LCD_Port
 10817                           
 10818                           ;lcd.c: 69: RB1 = 1;
 10819  098D  0020               	movlb	0	; select bank0
 10820  098E  148D               	bsf	13,1	;volatile
 10821                           
 10822                           ;lcd.c: 70: RB1 = 0;
 10823  098F  108D               	bcf	13,1	;volatile
 10824                           
 10825                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10826  0990  30F9               	movlw	249
 10827  0991  00F1               	movwf	??_LCD_Cmd
 10828  0992                     u3547:	
 10829  0992  0000               	nop
 10830  0993  0BF1               	decfsz	??_LCD_Cmd,f
 10831  0994  2992               	goto	u3547
 10832  0995  3200               	nop2	;nop
 10833  0996  0000               	nop
 10834  0997  0008               	return
 10835  0998                     __end_of_LCD_Cmd:	
 10836                           
 10837                           	psect	text36
 10838  09C1                     __ptext36:	
 10839 ;; *************** function _LCD_Port *****************
 10840 ;; Defined at:
 10841 ;;		line 41 in file "lcd.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  a               1    wreg     unsigned char 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  a               1    0[COMMON] unsigned char 
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        1 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_LCD_Cmd
 10865 ;;		_LCD_Init
 10866 ;;		_LCD_Write_Char
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           
 10871                           ;psect for function _LCD_Port
 10872  09C1                     _LCD_Port:	
 10873                           
 10874                           ;incstack = 0
 10875                           ; Regs used in _LCD_Port: [wreg]
 10876                           ;LCD_Port@a stored from wreg
 10877  09C1  00F0               	movwf	LCD_Port@a
 10878                           
 10879                           ;lcd.c: 43: if(a & 1)
 10880  09C2  1C70               	btfss	LCD_Port@a,0
 10881  09C3  29C7               	goto	l105
 10882                           
 10883                           ;lcd.c: 44: RB2 = 1;
 10884  09C4  0020               	movlb	0	; select bank0
 10885  09C5  150D               	bsf	13,2	;volatile
 10886  09C6  29C9               	goto	l1998
 10887  09C7                     l105:	
 10888                           
 10889                           ;lcd.c: 45: else
 10890                           ;lcd.c: 46: RB2 = 0;
 10891  09C7  0020               	movlb	0	; select bank0
 10892  09C8  110D               	bcf	13,2	;volatile
 10893  09C9                     l1998:	
 10894                           
 10895                           ;lcd.c: 48: if(a & 2)
 10896  09C9  1CF0               	btfss	LCD_Port@a,1
 10897  09CA  29CD               	goto	l107
 10898                           
 10899                           ;lcd.c: 49: RB3 = 1;
 10900  09CB  158D               	bsf	13,3	;volatile
 10901  09CC  29CE               	goto	l2002
 10902  09CD                     l107:	
 10903                           
 10904                           ;lcd.c: 50: else
 10905                           ;lcd.c: 51: RB3 = 0;
 10906  09CD  118D               	bcf	13,3	;volatile
 10907  09CE                     l2002:	
 10908                           
 10909                           ;lcd.c: 53: if(a & 4)
 10910  09CE  1D70               	btfss	LCD_Port@a,2
 10911  09CF  29D2               	goto	l109
 10912                           
 10913                           ;lcd.c: 54: RB4 = 1;
 10914  09D0  160D               	bsf	13,4	;volatile
 10915  09D1  29D3               	goto	l2006
 10916  09D2                     l109:	
 10917                           
 10918                           ;lcd.c: 55: else
 10919                           ;lcd.c: 56: RB4 = 0;
 10920  09D2  120D               	bcf	13,4	;volatile
 10921  09D3                     l2006:	
 10922                           
 10923                           ;lcd.c: 58: if(a & 8)
 10924  09D3  1DF0               	btfss	LCD_Port@a,3
 10925  09D4  29D7               	goto	l111
 10926                           
 10927                           ;lcd.c: 59: RB5 = 1;
 10928  09D5  168D               	bsf	13,5	;volatile
 10929  09D6  0008               	return
 10930  09D7                     l111:	
 10931                           
 10932                           ;lcd.c: 60: else
 10933                           ;lcd.c: 61: RB5 = 0;
 10934  09D7  128D               	bcf	13,5	;volatile
 10935  09D8  0008               	return
 10936  09D9                     __end_of_LCD_Port:	
 10937                           
 10938                           	psect	text37
 10939  09F1                     __ptext37:	
 10940 ;; *************** function _ADCC_Initialize *****************
 10941 ;; Defined at:
 10942 ;;		line 5 in file "adcc.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;		None
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, status,2
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;Total ram usage:        0 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_SYSTEM_Initialize
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           
 10970                           ;psect for function _ADCC_Initialize
 10971  09F1                     _ADCC_Initialize:	
 10972                           
 10973                           ;adcc.c: 8: ADCON1 = 0x00;
 10974                           
 10975                           ;incstack = 0
 10976                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10977  09F1  0021               	movlb	1	; select bank1
 10978  09F2  0194               	clrf	20	;volatile
 10979                           
 10980                           ;adcc.c: 10: ADCON2 = 0x00;
 10981  09F3  0195               	clrf	21	;volatile
 10982                           
 10983                           ;adcc.c: 12: ADCON3 = 0x00;
 10984  09F4  0196               	clrf	22	;volatile
 10985                           
 10986                           ;adcc.c: 14: ADACT = 0x00;
 10987  09F5  0199               	clrf	25	;volatile
 10988                           
 10989                           ;adcc.c: 16: ADSTAT = 0x00;
 10990  09F6  0197               	clrf	23	;volatile
 10991                           
 10992                           ;adcc.c: 18: ADCLK = 0x0F;
 10993  09F7  300F               	movlw	15
 10994  09F8  0098               	movwf	24	;volatile
 10995                           
 10996                           ;adcc.c: 21: ADREF = 0x00;
 10997  09F9  019A               	clrf	26	;volatile
 10998                           
 10999                           ;adcc.c: 23: ADCAP = 0x00;
 11000  09FA  019B               	clrf	27	;volatile
 11001                           
 11002                           ;adcc.c: 25: ADPRE = 0x00;
 11003  09FB  019C               	clrf	28	;volatile
 11004                           
 11005                           ;adcc.c: 27: ADACQ = 0x00;
 11006  09FC  019D               	clrf	29	;volatile
 11007                           
 11008                           ;adcc.c: 29: ADPCH = 0x00;
 11009  09FD  019E               	clrf	30	;volatile
 11010                           
 11011                           ;adcc.c: 31: ADRPT = 0x00;
 11012  09FE  0022               	movlb	2	; select bank2
 11013  09FF  018D               	clrf	13	;volatile
 11014                           
 11015                           ;adcc.c: 33: ADLTHL = 0x00;
 11016  0A00  018E               	clrf	14	;volatile
 11017                           
 11018                           ;adcc.c: 35: ADLTHH = 0x00;
 11019  0A01  018F               	clrf	15	;volatile
 11020                           
 11021                           ;adcc.c: 37: ADUTHL = 0x00;
 11022  0A02  0190               	clrf	16	;volatile
 11023                           
 11024                           ;adcc.c: 39: ADUTHH = 0x00;
 11025  0A03  0191               	clrf	17	;volatile
 11026                           
 11027                           ;adcc.c: 41: ADSTPTL = 0x00;
 11028  0A04  0192               	clrf	18	;volatile
 11029                           
 11030                           ;adcc.c: 43: ADSTPTH = 0x00;
 11031  0A05  0193               	clrf	19	;volatile
 11032                           
 11033                           ;adcc.c: 46: ADCON0 = 0x84;
 11034  0A06  3084               	movlw	132
 11035  0A07  0021               	movlb	1	; select bank1
 11036  0A08  0093               	movwf	19	;volatile
 11037  0A09  0008               	return
 11038  0A0A                     __end_of_ADCC_Initialize:	
 11039                           
 11040                           	psect	text38
 11041  09AB                     __ptext38:	
 11042 ;; *************** function _PWM6_LoadDutyValue *****************
 11043 ;; Defined at:
 11044 ;;		line 15 in file "pwm6.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  dutyValue       2    0[COMMON] unsigned int 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        4 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; This function calls:
 11065 ;;		Nothing
 11066 ;; This function is called by:
 11067 ;;		_main
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function _PWM6_LoadDutyValue
 11073  09AB                     _PWM6_LoadDutyValue:	
 11074                           
 11075                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11079  09AB  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11080  09AC  00F3               	movwf	??_PWM6_LoadDutyValue+1
 11081  09AD  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11082  09AE  00F2               	movwf	??_PWM6_LoadDutyValue
 11083  09AF  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11084  09B0  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11085  09B1  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11086  09B2  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11087  09B3  0872               	movf	??_PWM6_LoadDutyValue,w
 11088  09B4  0027               	movlb	7	; select bank7
 11089  09B5  008D               	movwf	13	;volatile
 11090                           
 11091                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 11092  09B6  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11093  09B7  3903               	andlw	3
 11094  09B8  00F2               	movwf	??_PWM6_LoadDutyValue
 11095  09B9  3005               	movlw	5
 11096  09BA                     u2755:	
 11097  09BA  35F2               	lslf	??_PWM6_LoadDutyValue,f
 11098  09BB  3EFF               	addlw	-1
 11099  09BC  1D03               	skipz
 11100  09BD  29BA               	goto	u2755
 11101  09BE  3572               	lslf	??_PWM6_LoadDutyValue,w
 11102  09BF  008C               	movwf	12	;volatile
 11103  09C0  0008               	return
 11104  09C1                     __end_of_PWM6_LoadDutyValue:	
 11105                           
 11106                           	psect	text39
 11107  095A                     __ptext39:	
 11108 ;; *************** function _ADCC_GetSingleConversion *****************
 11109 ;; Defined at:
 11110 ;;		line 52 in file "adcc.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  channel         1    wreg     enum E13559
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  channel         1    3[COMMON] enum E13559
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  2    0[COMMON] unsigned int 
 11117 ;; Registers used:
 11118 ;;		wreg
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:        4 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_main
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _ADCC_GetSingleConversion
 11139  095A                     _ADCC_GetSingleConversion:	
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11143                           ;ADCC_GetSingleConversion@channel stored from wreg
 11144  095A  00F3               	movwf	ADCC_GetSingleConversion@channel
 11145                           
 11146                           ;adcc.c: 55: ADPCH = channel;
 11147  095B  0873               	movf	ADCC_GetSingleConversion@channel,w
 11148  095C  0021               	movlb	1	; select bank1
 11149  095D  009E               	movwf	30	;volatile
 11150                           
 11151                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11152  095E  1793               	bsf	19,7	;volatile
 11153                           
 11154                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11155  095F  1313               	bcf	19,6	;volatile
 11156                           
 11157                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11158  0960  1413               	bsf	19,0	;volatile
 11159  0961                     l222:	
 11160                           ;adcc.c: 68: {
 11161                           
 11162                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11163                           
 11164  0961  1813               	btfsc	19,0	;volatile
 11165  0962  2961               	goto	l222
 11166                           
 11167                           ;adcc.c: 69: }
 11168                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11169  0963  080D               	movf	13,w	;volatile
 11170  0964  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11171  0965  080C               	movf	12,w	;volatile
 11172  0966  00F0               	movwf	?_ADCC_GetSingleConversion
 11173  0967  0008               	return
 11174  0968                     __end_of_ADCC_GetSingleConversion:	
 11175  007E                     btemp	set	126	;btemp
 11176  007E                     wtemp	set	126
 11177  007E                     wtemp0	set	126
 11178  0080                     wtemp1	set	128
 11179  0082                     wtemp2	set	130
 11180  0084                     wtemp3	set	132
 11181  0086                     wtemp4	set	134
 11182  0088                     wtemp5	set	136
 11183  007F                     wtemp6	set	127
 11184  007E                     ttemp	set	126
 11185  007E                     ttemp0	set	126
 11186  0081                     ttemp1	set	129
 11187  0084                     ttemp2	set	132
 11188  0087                     ttemp3	set	135
 11189  007F                     ttemp4	set	127
 11190  007E                     ltemp	set	126
 11191  007E                     ltemp0	set	126
 11192  0082                     ltemp1	set	130
 11193  0086                     ltemp2	set	134
 11194  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      73
    BANK1            80     30      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___fttol
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___wmul->___fttol
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftge->___ftadd
    ___lwdiv->___wmul
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   50529
                                             45 BANK0     10    10      0
                                              0 BANK1     30    30      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15762
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6729
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     516
                                              0 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2509
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     640
                                             29 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3540
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3367
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     138
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___fttol (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
   ___fttol
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
       ___fttol (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
     ___fttol (ARG)
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
         ___fttol (ARG)
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 08 00:34:57 2017

                                _x 0062                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0022  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l111 09D7  
                              l105 09C7                                l107 09CD  
                              l109 09D2                                l222 0961  
                              l322 052B                                l323 0537  
                              l511 0E60                                l624 0D34  
                              l456 0A47                                l625 0D3C  
                              l617 0D21                                l708 0F3D  
                              l648 03CF                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 004C  
                     ___awmod@sign 0076                    _TMR2_Initialize 0977  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0998                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0BFF  
                     ___ftdiv@sign 002F                               l2002 09CE  
                             l2006 09D3                               l2112 0C8A  
                             l2104 0C79                               l3000 0563  
                             l2050 0D08                               l3010 0590  
                             l3002 0567                               l2060 0D2E  
                             l2052 0D0D                               l2044 0CF7  
                             l2300 03E1                               l2108 0C82  
                             l2124 0011                               l2212 02C0  
                             l2150 0047                               l2142 0036  
                             l2230 031C                               l2214 02C5  
                             l2206 028F                               l3014 059E  
                             l2048 0CFE                               l2304 03F3  
                             l2080 0C48                               l2136 001E  
                             l2128 0018                               l2224 02E3  
                             l2216 02CE                               l2208 02BC  
                             l3008 058E                               l2058 0D26  
                             l2314 040E                               l2330 0126  
                             l2138 002A                               l2146 003F  
                             l2226 030F                               l2218 02DF  
                             l2324 0110                               l2236 0A41  
                             l2254 0358                               l2342 0161  
                             l2166 0C1F                               l2086 0C53  
                             l2182 0A26                               l3046 071A  
                             l2520 0AB5                               l2264 036E  
                             l2600 0BF0                               l2096 0C5B  
                             l3080 0783                               l2514 0AA5  
                             l2282 039B                               l2258 035F  
                             l2354 017D                               l2346 0169  
                             l2098 0C67                               l3074 0774  
                             l2284 03A5                               l2276 0388  
                             l2620 0B9A                               l2196 0288  
                             l2294 03C1                               l2286 03AA  
                             l2358 0185                               l2710 01B3  
                             l2296 03CB                               l2288 03AE  
                             l2560 0E2D                               l2712 0202  
                             l3088 07C2                               l2802 0EBA  
                             l2570 0E3E                               l2900 0F34  
                             l2806 0EC8                               l2822 0F84  
                             l2902 0F40                               l2638 0CE8  
                             l2718 020D                               l2816 0F6E  
                             l2760 007B                               l2568 0E3D  
                             l2906 0F4E                               l2754 006A  
                             l2578 0E4D                               l2738 024D  
                             l2690 01C3                               l2780 0E71  
                             l2844 0FDE                               l2836 0FC5  
                             l2932 0B40                               l2924 0B22  
                             l2588 0A82                               l2596 0BDA  
                             l2790 0E8F                               l2926 0B2E  
                             l2864 0A62                               l2936 0B49  
                             l2874 0EE9                               l2788 0E81  
                             l2892 0F19                               l2964 0443  
                             l1998 09C9                               l2798 0EAF  
                             l2894 0F27                               l2976 04F4  
                             l2988 051F                               ?_log 0047  
                             STR_1 101B                               STR_2 101B  
                             STR_3 101B                               STR_4 1025  
                             u2005 0030                               u2015 0037  
                             u3005 0FDF                               u2205 0A4D  
                             _LATA 0016                               _LATB 0017  
                             u2055 0C0B                               _LATC 0018  
                             u2090 0272                               u2315 0389  
                             u3115 0F35                               u2075 0C2A  
                             u2155 02FD                               u2405 03C2  
                             u3055 0EF0                               u2345 039C  
                             u2505 016A                               _T2PR 028D  
                             u3155 0B25                               u2515 0170  
                             u2195 0A48                               u1725 0ACD  
                             u3085 0F1A                               u3245 0525  
                             u3407 0B76                               u2375 03AF  
                             u3175 0B2F                               u3255 0531  
                             u3417 0B82                               u3185 0B39  
                             u2545 0186                               u1905 0C68  
                      main@counter 00AB                               u2570 0B17  
                             u3507 0DBC                               u3427 0D5C  
                             u1835 0D43                               u1755 0D03  
                             u3195 0B41                               u2555 018C  
                             u2475 0132                               u1915 0C72  
                             u3517 0DCA                               u3437 0D69  
                             u2485 0142                               u1925 0C7A  
                             u3357 01F9                               u3527 0AD9  
                             u3447 0D74                               u1775 0D1C  
                             u3367 0245                               u3537 0AE4  
                             u3457 0D7D                               u2905 0EA4  
                             u3377 025D                               u2755 09BA  
                             u3547 0992                               u3467 0D86  
                             u2915 0EB0                               u1795 0D29  
                             u3387 0E21                               u3477 0D93  
                             u3397 0B6A                               u1885 0C5E  
                             u3487 0DA0                               u3497 0DAD  
                             u1985 0021                               u2875 0E84  
                             u2965 0F96                               u2895 0E90  
                             u2975 0FA6                               u2985 0FC6  
                             u2995 0FD5                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00A6                        main@seconds 00A8  
                             _main 0426                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             ltemp 007E                               start 0002  
               ??_LCD_Write_String 0077                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 0267                       ___ftmul@sign 002F  
                     ___fttol@exp1 007D                              ??_log 004A  
                     ___fttol@lval 0079            __end_of_TMR0_Initialize 0977  
                 __end_of_LCD_Init 0DCE                   __end_of_LCD_Port 09D9  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 092D                    __end_of___aldiv 0ED1  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0C8F  
                            _ADPRE 009C                    __end_of___ftadd 0426  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 004C  
                            _ADRPT 010D                    __end_of___ftdiv 1000  
                  __end_of___ftneg 0935                    __end_of___ftmul 01AD  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0A78  
                  __end_of___fttol 0F57                              _T2CON 028E  
              main@readTemperature 00B9                              _T2HLT 028F  
                  __end_of___lwdiv 0B4E                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 094D             __end_of_LCD_Set_Cursor 0C3E  
                    ___awtoft@sign 007D                              _frexp 0B88  
                            _errno 005C                      ___ftpack@sign 0074  
                            main@R 00A0                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 0ABD  
                  __initialization 07C9                        log@exponent 004B  
                     __end_of_main 07C9            __end_of_TMR2_Initialize 0986  
                           ??_main 004D                      ___fttol@sign1 0078  
                __end_of_LCD_Clear 0925                          ??_LCD_Cmd 0071  
                  ?_LCD_Set_Cursor 0073                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             ?_frexp 0070  
                           _ADLTHH 010F                             _ADLTHL 010E  
                           _ADRESH 008D                             _ADRESL 008C  
                           _ADSTAT 0097                             _ADUTHH 0111  
                 ___awdiv@dividend 0072                             _ADUTHL 0110  
                 __end_of___awtoft 0A98                             _ANSELA 0F38  
                           _ANSELB 0F43                             _ANSELC 0F4E  
                 __end_of___ftpack 0D53                   __end_of___lbtoft 0A24  
               __CFG_RSTOSC$HFINT1 0000                             _T0CON0 001E  
                           _T0CON1 001F                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 09AB                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 0AE7  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0BC3             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 0A3E  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074                          ??___lwdiv 002A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 095A  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 09F1  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00BB                    _InitCustomChars 0A98  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                _SYSTEM_Initialize 0B4E                   __end_oflog@coeff 101B  
          __end_of__initialization 07FD                          ?_LCD_Init 0070  
                        ?_LCD_Port 0070                         ___ftadd@f1 0030  
                       ___ftadd@f2 0033                         ___ftge@ff1 003D  
                       ___ftge@ff2 0040                    ??_LCD_Write_Int 0020  
               ?_SYSTEM_Initialize 0070                       eval_poly@res 0044  
                       ___ftdiv@f1 0023                         ___ftdiv@f2 0020  
                       ___ftdiv@f3 002B                    ?_LCD_Write_Char 0070  
                       ___ftneg@f1 0070                      LCD_Init@style 0075  
                       ___awtoft@c 0078                         ___lbtoft@c 007B  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
                       ___ftsub@f1 0040                         ___ftsub@f2 003D  
                       ___fttol@f1 0070                     __pcstackCOMMON 0070  
                        LCD_Port@a 0070                       __pidataBANK0 0917  
                     __pidataBANK1 09D9                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0BC3                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0081  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0B88  
                       __pbssBANK0 0057                         __pbssBANK1 00D6  
               __size_of_eval_poly 0060                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070                         __pmaintext 0426  
                          ?___ftge 003D                            ?___wmul 0020  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 0A0A  
       __end_of_PWM6_LoadDutyValue 09C1          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0ABD  
                          _LCD_Cmd 0986                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0E4F                            ___cgram 00BE  
                  __size_of___ftge 003C                            ___awdiv 0C3E  
                          ___ftadd 0330                            ___awmod 0007  
                          ___ftdiv 0F57                            ___ftneg 092D  
                  __size_of___wmul 001C                            ___ftmul 00F9  
                          ___ftsub 0A5A                            ___fttol 0ED1  
                          ___lwdiv 0B19                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0CEF                   ??_LCD_Set_Cursor 0074  
                          __ptext1 01AD                            __ptext2 0DCE  
                          __ptext3 0A24                            __ptext4 0267  
                          __ptext5 0007                            __ptext6 0C3E  
                          __ptext7 0BFF                            __ptext8 004C  
                          __ptext9 0B88                         ??___lwtoft 007B  
            _OSCILLATOR_Initialize 0925                          _T2CONbits 028E  
                     __size_of_log 00AD                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 0061                            _samples 238C  
                        _LCD_Clear 091D                            _presets 0063  
       __size_of_SYSTEM_Initialize 003A                            clrloop0 0936  
             end_of_initialization 07FD                     main@outCurrent 00B7  
                          init_ram 0941                            initloop 0942  
                   ??_tempSetpoint 0031                   ___aldiv@quotient 0022  
                LCD_Write_Int@sign 007D                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0968              __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 007B  
                       main@toggle 00AE                  __size_of_LCD_Port 0018  
                       main@totals 00AF                        ___ftmul@exp 002A  
                   __end_of___ftge 0BFF                     __end_of___wmul 0A5A  
                 _LCD_Write_String 0A24             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07C9                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 00F9                         frexp@value 0070  
         LCD_Write_Int@fieldLength 007B              __end_of_LCD_Write_Int 0330  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0043  
                         ??___wmul 007E                        __pdataBANK0 0063  
                      __pdataBANK1 00BE                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                         ?_LCD_Cmd 0070                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 095A                  __size_of___ftpack 0064  
                __size_of___lbtoft 001A                        __pbssBIGRAM 238C  
                         LCD_Cmd@a 0072                          ___latbits 0002  
                __size_of___lwtoft 0013                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0               __end_of_tempSetpoint 0267  
               _PWM6_LoadDutyValue 09AB           __size_of_TMR2_Initialize 000F  
                      ??_LCD_Clear 0073                ?_PWM6_LoadDutyValue 0070  
                        _main$1031 00A3                   ___lwdiv@dividend 0028  
           _PIN_MANAGER_Initialize 0AE7                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0030                           ?___awmod 0070  
                         ?___ftdiv 0020                           ?___ftneg 0070  
                         ?___ftmul 0020                           ?___ftsub 003D  
                         ?___fttol 0070                           ?___lwdiv 0026  
                  main@displayTemp 00B5               ??_PWM6_LoadDutyValue 0072  
                        _downCount 005E                          _eval_poly 0C8F  
              __end_of_readButtons 0E4F           __size_of_PWM6_Initialize 000D  
                 ___lwdiv@quotient 002B                     __size_of_frexp 003B  
                         _T2CLKCON 0290             main@readTemperatureOld 00B3  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0D53  
                   ___wmul@product 0024                           _LCD_Port 09C1  
                        clear_ram0 0935                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0020  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 0A3E                  ??_TMR2_Initialize 0070  
                        frexp@eptr 0073               main@firstTimeThrough 00AA  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0086  
                 __size_of___lwdiv 0035                        _readButtons 0DCE  
                         ___awtoft 0A78                           ___ftpack 0CEF  
                         ___lbtoft 0A0A              __size_of_tempSetpoint 00BA  
                         ___lwtoft 0998                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00D6  
                  ___lwdiv@divisor 0026                        _oldSetpoint 005F  
                  ___lwdiv@counter 002D                           __ptext10 0C8F  
                         __ptext11 0A3E                           __ptext20 0330  
                         __ptext12 00F9                           __ptext21 092D  
                         __ptext13 0BC3                           __ptext30 0925  
                         __ptext22 0F57                           __ptext14 0A78  
                         __ptext31 0D53                           __ptext23 0CEF  
                         __ptext15 0998                           __ptext32 091D  
                         __ptext24 0E4F                           __ptext16 0B19  
                         __ptext33 0A98                           __ptext25 0B4E  
                         __ptext17 0A0A                           __ptext34 0ABD  
                         __ptext26 0977                           __ptext18 0ED1  
                         __ptext35 0986                           __ptext27 0968  
                         __ptext19 0A5A                           __ptext36 09C1  
                         __ptext28 094D                           __ptext37 09F1  
                         __ptext29 0AE7                           __ptext38 09AB  
                         __ptext39 095A            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13685 0057  
                ??_PWM6_Initialize 0070                      __size_of_main 03A3  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 01AD  
       ??_ADCC_GetSingleConversion 0073                           _setpoint 0068  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
                 main@startupTimer 00AD                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079                    _TMR0_Initialize 0968  
                     ___aldiv@sign 0021             __size_of_LCD_Write_Int 00C9  
      PWM6_LoadDutyValue@dutyValue 0070     __end_of_PIN_MANAGER_Initialize 0B19  
                ??_ADCC_Initialize 0070                        _toggleCount 0060  
                ??_InitCustomChars 0075  
