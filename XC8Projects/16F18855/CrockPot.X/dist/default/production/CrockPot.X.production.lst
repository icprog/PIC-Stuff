

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Sep 09 16:27:53 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5BC,52
    63                           	dabs	1,0x238C,0,_samples
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  001C                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0110                     	;# 
   120  0110                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0119                     	;# 
   132  0119                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011A                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  011C                     	;# 
   144  011C                     	;# 
   145  011D                     	;# 
   146  011D                     	;# 
   147  011D                     	;# 
   148  011E                     	;# 
   149  011E                     	;# 
   150  011E                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  018F                     	;# 
   160  0190                     	;# 
   161  0191                     	;# 
   162  0192                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0198                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  020F                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0218                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  028C                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  028F                     	;# 
   205  0290                     	;# 
   206  0290                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0293                     	;# 
   212  0294                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0296                     	;# 
   216  0297                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029B                     	;# 
   223  029C                     	;# 
   224  029C                     	;# 
   225  029D                     	;# 
   226  030C                     	;# 
   227  030C                     	;# 
   228  030D                     	;# 
   229  030E                     	;# 
   230  030F                     	;# 
   231  0310                     	;# 
   232  0310                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0314                     	;# 
   237  0314                     	;# 
   238  0315                     	;# 
   239  0316                     	;# 
   240  0317                     	;# 
   241  0318                     	;# 
   242  0318                     	;# 
   243  0319                     	;# 
   244  031A                     	;# 
   245  031B                     	;# 
   246  031C                     	;# 
   247  031C                     	;# 
   248  031D                     	;# 
   249  031E                     	;# 
   250  031F                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0390                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  040C                     	;# 
   258  040D                     	;# 
   259  040E                     	;# 
   260  040F                     	;# 
   261  0410                     	;# 
   262  0411                     	;# 
   263  0416                     	;# 
   264  0416                     	;# 
   265  0417                     	;# 
   266  0418                     	;# 
   267  0418                     	;# 
   268  0419                     	;# 
   269  041A                     	;# 
   270  041A                     	;# 
   271  041B                     	;# 
   272  041C                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  041F                     	;# 
   277  048C                     	;# 
   278  048C                     	;# 
   279  048D                     	;# 
   280  048E                     	;# 
   281  048F                     	;# 
   282  048F                     	;# 
   283  0490                     	;# 
   284  0491                     	;# 
   285  0492                     	;# 
   286  0492                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0495                     	;# 
   290  0495                     	;# 
   291  0496                     	;# 
   292  0497                     	;# 
   293  0498                     	;# 
   294  0499                     	;# 
   295  049A                     	;# 
   296  049B                     	;# 
   297  049C                     	;# 
   298  049D                     	;# 
   299  050C                     	;# 
   300  050C                     	;# 
   301  050D                     	;# 
   302  050E                     	;# 
   303  050F                     	;# 
   304  050F                     	;# 
   305  0510                     	;# 
   306  0511                     	;# 
   307  0512                     	;# 
   308  0512                     	;# 
   309  0513                     	;# 
   310  0514                     	;# 
   311  0515                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  051B                     	;# 
   319  051C                     	;# 
   320  051D                     	;# 
   321  058C                     	;# 
   322  058C                     	;# 
   323  058D                     	;# 
   324  058E                     	;# 
   325  058F                     	;# 
   326  058F                     	;# 
   327  0590                     	;# 
   328  0591                     	;# 
   329  0592                     	;# 
   330  0593                     	;# 
   331  060C                     	;# 
   332  060D                     	;# 
   333  060E                     	;# 
   334  060F                     	;# 
   335  0610                     	;# 
   336  0611                     	;# 
   337  0612                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0616                     	;# 
   341  0617                     	;# 
   342  0618                     	;# 
   343  0619                     	;# 
   344  061A                     	;# 
   345  061B                     	;# 
   346  061C                     	;# 
   347  061D                     	;# 
   348  061E                     	;# 
   349  068C                     	;# 
   350  068D                     	;# 
   351  068E                     	;# 
   352  068F                     	;# 
   353  0690                     	;# 
   354  0691                     	;# 
   355  0692                     	;# 
   356  0693                     	;# 
   357  0694                     	;# 
   358  070C                     	;# 
   359  070D                     	;# 
   360  070E                     	;# 
   361  070F                     	;# 
   362  0710                     	;# 
   363  0711                     	;# 
   364  0712                     	;# 
   365  0713                     	;# 
   366  0714                     	;# 
   367  0716                     	;# 
   368  0717                     	;# 
   369  0718                     	;# 
   370  0719                     	;# 
   371  071A                     	;# 
   372  071B                     	;# 
   373  071C                     	;# 
   374  071D                     	;# 
   375  071E                     	;# 
   376  0796                     	;# 
   377  0797                     	;# 
   378  0798                     	;# 
   379  0799                     	;# 
   380  079A                     	;# 
   381  079B                     	;# 
   382  080C                     	;# 
   383  080D                     	;# 
   384  080E                     	;# 
   385  080F                     	;# 
   386  0810                     	;# 
   387  0811                     	;# 
   388  0812                     	;# 
   389  0813                     	;# 
   390  0814                     	;# 
   391  081A                     	;# 
   392  081B                     	;# 
   393  081C                     	;# 
   394  081D                     	;# 
   395  081E                     	;# 
   396  081F                     	;# 
   397  088C                     	;# 
   398  088D                     	;# 
   399  088E                     	;# 
   400  088F                     	;# 
   401  0890                     	;# 
   402  0891                     	;# 
   403  0892                     	;# 
   404  0893                     	;# 
   405  0895                     	;# 
   406  0896                     	;# 
   407  0897                     	;# 
   408  0898                     	;# 
   409  0899                     	;# 
   410  089A                     	;# 
   411  089B                     	;# 
   412  090C                     	;# 
   413  090E                     	;# 
   414  090F                     	;# 
   415  091F                     	;# 
   416  091F                     	;# 
   417  098F                     	;# 
   418  098F                     	;# 
   419  0990                     	;# 
   420  0991                     	;# 
   421  0992                     	;# 
   422  0993                     	;# 
   423  0994                     	;# 
   424  0995                     	;# 
   425  0996                     	;# 
   426  0997                     	;# 
   427  0E0F                     	;# 
   428  0E10                     	;# 
   429  0E11                     	;# 
   430  0E12                     	;# 
   431  0E13                     	;# 
   432  0E14                     	;# 
   433  0E15                     	;# 
   434  0E16                     	;# 
   435  0E17                     	;# 
   436  0E18                     	;# 
   437  0E19                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E1D                     	;# 
   442  0E1E                     	;# 
   443  0E1F                     	;# 
   444  0E20                     	;# 
   445  0E21                     	;# 
   446  0E22                     	;# 
   447  0E23                     	;# 
   448  0E24                     	;# 
   449  0E25                     	;# 
   450  0E26                     	;# 
   451  0E27                     	;# 
   452  0E28                     	;# 
   453  0E29                     	;# 
   454  0E2A                     	;# 
   455  0E2B                     	;# 
   456  0E2C                     	;# 
   457  0E2D                     	;# 
   458  0E2E                     	;# 
   459  0E2F                     	;# 
   460  0E30                     	;# 
   461  0E31                     	;# 
   462  0E32                     	;# 
   463  0E33                     	;# 
   464  0E34                     	;# 
   465  0E35                     	;# 
   466  0E36                     	;# 
   467  0E37                     	;# 
   468  0E8F                     	;# 
   469  0E90                     	;# 
   470  0E91                     	;# 
   471  0E92                     	;# 
   472  0E93                     	;# 
   473  0E94                     	;# 
   474  0E95                     	;# 
   475  0E96                     	;# 
   476  0E97                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0EA1                     	;# 
   481  0EA2                     	;# 
   482  0EA3                     	;# 
   483  0EA4                     	;# 
   484  0EA5                     	;# 
   485  0EA9                     	;# 
   486  0EAA                     	;# 
   487  0EAB                     	;# 
   488  0EAC                     	;# 
   489  0EB1                     	;# 
   490  0EB2                     	;# 
   491  0EB3                     	;# 
   492  0EB8                     	;# 
   493  0EB9                     	;# 
   494  0EBA                     	;# 
   495  0EBB                     	;# 
   496  0EBC                     	;# 
   497  0EBD                     	;# 
   498  0EBE                     	;# 
   499  0EC3                     	;# 
   500  0EC5                     	;# 
   501  0EC6                     	;# 
   502  0EC7                     	;# 
   503  0EC8                     	;# 
   504  0EC9                     	;# 
   505  0ECA                     	;# 
   506  0ECB                     	;# 
   507  0ECC                     	;# 
   508  0F10                     	;# 
   509  0F11                     	;# 
   510  0F12                     	;# 
   511  0F13                     	;# 
   512  0F14                     	;# 
   513  0F15                     	;# 
   514  0F16                     	;# 
   515  0F17                     	;# 
   516  0F18                     	;# 
   517  0F19                     	;# 
   518  0F1A                     	;# 
   519  0F1B                     	;# 
   520  0F1C                     	;# 
   521  0F1D                     	;# 
   522  0F1E                     	;# 
   523  0F1F                     	;# 
   524  0F20                     	;# 
   525  0F21                     	;# 
   526  0F22                     	;# 
   527  0F23                     	;# 
   528  0F24                     	;# 
   529  0F25                     	;# 
   530  0F26                     	;# 
   531  0F27                     	;# 
   532  0F38                     	;# 
   533  0F39                     	;# 
   534  0F3A                     	;# 
   535  0F3B                     	;# 
   536  0F3C                     	;# 
   537  0F3D                     	;# 
   538  0F3E                     	;# 
   539  0F3F                     	;# 
   540  0F40                     	;# 
   541  0F41                     	;# 
   542  0F43                     	;# 
   543  0F44                     	;# 
   544  0F45                     	;# 
   545  0F46                     	;# 
   546  0F47                     	;# 
   547  0F48                     	;# 
   548  0F49                     	;# 
   549  0F4A                     	;# 
   550  0F4B                     	;# 
   551  0F4C                     	;# 
   552  0F4E                     	;# 
   553  0F4F                     	;# 
   554  0F50                     	;# 
   555  0F51                     	;# 
   556  0F52                     	;# 
   557  0F53                     	;# 
   558  0F54                     	;# 
   559  0F55                     	;# 
   560  0F56                     	;# 
   561  0F57                     	;# 
   562  0F65                     	;# 
   563  0F68                     	;# 
   564  0F69                     	;# 
   565  0F6A                     	;# 
   566  0F6B                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000D                     	;# 
   592  000E                     	;# 
   593  0010                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  001C                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001D                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0090                     	;# 
   614  0091                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0110                     	;# 
   633  0110                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  0119                     	;# 
   645  0119                     	;# 
   646  0119                     	;# 
   647  011A                     	;# 
   648  011A                     	;# 
   649  011A                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011C                     	;# 
   656  011C                     	;# 
   657  011C                     	;# 
   658  011D                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  011E                     	;# 
   662  011E                     	;# 
   663  011E                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  018E                     	;# 
   672  018F                     	;# 
   673  0190                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0196                     	;# 
   677  0197                     	;# 
   678  0198                     	;# 
   679  0199                     	;# 
   680  019A                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  020C                     	;# 
   684  020D                     	;# 
   685  020E                     	;# 
   686  020F                     	;# 
   687  020F                     	;# 
   688  0210                     	;# 
   689  0210                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0215                     	;# 
   696  0215                     	;# 
   697  0216                     	;# 
   698  0216                     	;# 
   699  0217                     	;# 
   700  0217                     	;# 
   701  0218                     	;# 
   702  0219                     	;# 
   703  021A                     	;# 
   704  021B                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021D                     	;# 
   710  021E                     	;# 
   711  021F                     	;# 
   712  028C                     	;# 
   713  028C                     	;# 
   714  028D                     	;# 
   715  028D                     	;# 
   716  028E                     	;# 
   717  028F                     	;# 
   718  0290                     	;# 
   719  0290                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0292                     	;# 
   723  0293                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0296                     	;# 
   728  0296                     	;# 
   729  0297                     	;# 
   730  0298                     	;# 
   731  0298                     	;# 
   732  0299                     	;# 
   733  0299                     	;# 
   734  029A                     	;# 
   735  029B                     	;# 
   736  029C                     	;# 
   737  029C                     	;# 
   738  029D                     	;# 
   739  030C                     	;# 
   740  030C                     	;# 
   741  030D                     	;# 
   742  030E                     	;# 
   743  030F                     	;# 
   744  0310                     	;# 
   745  0310                     	;# 
   746  0311                     	;# 
   747  0312                     	;# 
   748  0313                     	;# 
   749  0314                     	;# 
   750  0314                     	;# 
   751  0315                     	;# 
   752  0316                     	;# 
   753  0317                     	;# 
   754  0318                     	;# 
   755  0318                     	;# 
   756  0319                     	;# 
   757  031A                     	;# 
   758  031B                     	;# 
   759  031C                     	;# 
   760  031C                     	;# 
   761  031D                     	;# 
   762  031E                     	;# 
   763  031F                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  040C                     	;# 
   771  040D                     	;# 
   772  040E                     	;# 
   773  040F                     	;# 
   774  0410                     	;# 
   775  0411                     	;# 
   776  0416                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  0418                     	;# 
   780  0418                     	;# 
   781  0419                     	;# 
   782  041A                     	;# 
   783  041A                     	;# 
   784  041B                     	;# 
   785  041C                     	;# 
   786  041C                     	;# 
   787  041D                     	;# 
   788  041E                     	;# 
   789  041F                     	;# 
   790  048C                     	;# 
   791  048C                     	;# 
   792  048D                     	;# 
   793  048E                     	;# 
   794  048F                     	;# 
   795  048F                     	;# 
   796  0490                     	;# 
   797  0491                     	;# 
   798  0492                     	;# 
   799  0492                     	;# 
   800  0493                     	;# 
   801  0494                     	;# 
   802  0495                     	;# 
   803  0495                     	;# 
   804  0496                     	;# 
   805  0497                     	;# 
   806  0498                     	;# 
   807  0499                     	;# 
   808  049A                     	;# 
   809  049B                     	;# 
   810  049C                     	;# 
   811  049D                     	;# 
   812  050C                     	;# 
   813  050C                     	;# 
   814  050D                     	;# 
   815  050E                     	;# 
   816  050F                     	;# 
   817  050F                     	;# 
   818  0510                     	;# 
   819  0511                     	;# 
   820  0512                     	;# 
   821  0512                     	;# 
   822  0513                     	;# 
   823  0514                     	;# 
   824  0515                     	;# 
   825  0515                     	;# 
   826  0516                     	;# 
   827  0517                     	;# 
   828  0518                     	;# 
   829  0519                     	;# 
   830  051A                     	;# 
   831  051B                     	;# 
   832  051C                     	;# 
   833  051D                     	;# 
   834  058C                     	;# 
   835  058C                     	;# 
   836  058D                     	;# 
   837  058E                     	;# 
   838  058F                     	;# 
   839  058F                     	;# 
   840  0590                     	;# 
   841  0591                     	;# 
   842  0592                     	;# 
   843  0593                     	;# 
   844  060C                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  0616                     	;# 
   854  0617                     	;# 
   855  0618                     	;# 
   856  0619                     	;# 
   857  061A                     	;# 
   858  061B                     	;# 
   859  061C                     	;# 
   860  061D                     	;# 
   861  061E                     	;# 
   862  068C                     	;# 
   863  068D                     	;# 
   864  068E                     	;# 
   865  068F                     	;# 
   866  0690                     	;# 
   867  0691                     	;# 
   868  0692                     	;# 
   869  0693                     	;# 
   870  0694                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  080C                     	;# 
   896  080D                     	;# 
   897  080E                     	;# 
   898  080F                     	;# 
   899  0810                     	;# 
   900  0811                     	;# 
   901  0812                     	;# 
   902  0813                     	;# 
   903  0814                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081D                     	;# 
   908  081E                     	;# 
   909  081F                     	;# 
   910  088C                     	;# 
   911  088D                     	;# 
   912  088E                     	;# 
   913  088F                     	;# 
   914  0890                     	;# 
   915  0891                     	;# 
   916  0892                     	;# 
   917  0893                     	;# 
   918  0895                     	;# 
   919  0896                     	;# 
   920  0897                     	;# 
   921  0898                     	;# 
   922  0899                     	;# 
   923  089A                     	;# 
   924  089B                     	;# 
   925  090C                     	;# 
   926  090E                     	;# 
   927  090F                     	;# 
   928  091F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  0E0F                     	;# 
   941  0E10                     	;# 
   942  0E11                     	;# 
   943  0E12                     	;# 
   944  0E13                     	;# 
   945  0E14                     	;# 
   946  0E15                     	;# 
   947  0E16                     	;# 
   948  0E17                     	;# 
   949  0E18                     	;# 
   950  0E19                     	;# 
   951  0E1A                     	;# 
   952  0E1B                     	;# 
   953  0E1C                     	;# 
   954  0E1D                     	;# 
   955  0E1E                     	;# 
   956  0E1F                     	;# 
   957  0E20                     	;# 
   958  0E21                     	;# 
   959  0E22                     	;# 
   960  0E23                     	;# 
   961  0E24                     	;# 
   962  0E25                     	;# 
   963  0E26                     	;# 
   964  0E27                     	;# 
   965  0E28                     	;# 
   966  0E29                     	;# 
   967  0E2A                     	;# 
   968  0E2B                     	;# 
   969  0E2C                     	;# 
   970  0E2D                     	;# 
   971  0E2E                     	;# 
   972  0E2F                     	;# 
   973  0E30                     	;# 
   974  0E31                     	;# 
   975  0E32                     	;# 
   976  0E33                     	;# 
   977  0E34                     	;# 
   978  0E35                     	;# 
   979  0E36                     	;# 
   980  0E37                     	;# 
   981  0E8F                     	;# 
   982  0E90                     	;# 
   983  0E91                     	;# 
   984  0E92                     	;# 
   985  0E93                     	;# 
   986  0E94                     	;# 
   987  0E95                     	;# 
   988  0E96                     	;# 
   989  0E97                     	;# 
   990  0E9C                     	;# 
   991  0E9D                     	;# 
   992  0E9E                     	;# 
   993  0EA1                     	;# 
   994  0EA2                     	;# 
   995  0EA3                     	;# 
   996  0EA4                     	;# 
   997  0EA5                     	;# 
   998  0EA9                     	;# 
   999  0EAA                     	;# 
  1000  0EAB                     	;# 
  1001  0EAC                     	;# 
  1002  0EB1                     	;# 
  1003  0EB2                     	;# 
  1004  0EB3                     	;# 
  1005  0EB8                     	;# 
  1006  0EB9                     	;# 
  1007  0EBA                     	;# 
  1008  0EBB                     	;# 
  1009  0EBC                     	;# 
  1010  0EBD                     	;# 
  1011  0EBE                     	;# 
  1012  0EC3                     	;# 
  1013  0EC5                     	;# 
  1014  0EC6                     	;# 
  1015  0EC7                     	;# 
  1016  0EC8                     	;# 
  1017  0EC9                     	;# 
  1018  0ECA                     	;# 
  1019  0ECB                     	;# 
  1020  0ECC                     	;# 
  1021  0F10                     	;# 
  1022  0F11                     	;# 
  1023  0F12                     	;# 
  1024  0F13                     	;# 
  1025  0F14                     	;# 
  1026  0F15                     	;# 
  1027  0F16                     	;# 
  1028  0F17                     	;# 
  1029  0F18                     	;# 
  1030  0F19                     	;# 
  1031  0F1A                     	;# 
  1032  0F1B                     	;# 
  1033  0F1C                     	;# 
  1034  0F1D                     	;# 
  1035  0F1E                     	;# 
  1036  0F1F                     	;# 
  1037  0F20                     	;# 
  1038  0F21                     	;# 
  1039  0F22                     	;# 
  1040  0F23                     	;# 
  1041  0F24                     	;# 
  1042  0F25                     	;# 
  1043  0F26                     	;# 
  1044  0F27                     	;# 
  1045  0F38                     	;# 
  1046  0F39                     	;# 
  1047  0F3A                     	;# 
  1048  0F3B                     	;# 
  1049  0F3C                     	;# 
  1050  0F3D                     	;# 
  1051  0F3E                     	;# 
  1052  0F3F                     	;# 
  1053  0F40                     	;# 
  1054  0F41                     	;# 
  1055  0F43                     	;# 
  1056  0F44                     	;# 
  1057  0F45                     	;# 
  1058  0F46                     	;# 
  1059  0F47                     	;# 
  1060  0F48                     	;# 
  1061  0F49                     	;# 
  1062  0F4A                     	;# 
  1063  0F4B                     	;# 
  1064  0F4C                     	;# 
  1065  0F4E                     	;# 
  1066  0F4F                     	;# 
  1067  0F50                     	;# 
  1068  0F51                     	;# 
  1069  0F52                     	;# 
  1070  0F53                     	;# 
  1071  0F54                     	;# 
  1072  0F55                     	;# 
  1073  0F56                     	;# 
  1074  0F57                     	;# 
  1075  0F65                     	;# 
  1076  0F68                     	;# 
  1077  0F69                     	;# 
  1078  0F6A                     	;# 
  1079  0F6B                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0016                     	;# 
  1111  0017                     	;# 
  1112  0018                     	;# 
  1113  001C                     	;# 
  1114  001C                     	;# 
  1115  001D                     	;# 
  1116  001D                     	;# 
  1117  001E                     	;# 
  1118  001F                     	;# 
  1119  008C                     	;# 
  1120  008C                     	;# 
  1121  008D                     	;# 
  1122  008E                     	;# 
  1123  008E                     	;# 
  1124  008F                     	;# 
  1125  0090                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0093                     	;# 
  1129  0094                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0097                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009A                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  010C                     	;# 
  1141  010D                     	;# 
  1142  010E                     	;# 
  1143  010E                     	;# 
  1144  010F                     	;# 
  1145  0110                     	;# 
  1146  0110                     	;# 
  1147  0111                     	;# 
  1148  0112                     	;# 
  1149  0112                     	;# 
  1150  0113                     	;# 
  1151  0114                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0119                     	;# 
  1158  0119                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011A                     	;# 
  1162  011A                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011B                     	;# 
  1167  011B                     	;# 
  1168  011C                     	;# 
  1169  011C                     	;# 
  1170  011C                     	;# 
  1171  011D                     	;# 
  1172  011D                     	;# 
  1173  011D                     	;# 
  1174  011E                     	;# 
  1175  011E                     	;# 
  1176  011E                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  011F                     	;# 
  1181  011F                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0196                     	;# 
  1190  0197                     	;# 
  1191  0198                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  020C                     	;# 
  1197  020D                     	;# 
  1198  020E                     	;# 
  1199  020F                     	;# 
  1200  020F                     	;# 
  1201  0210                     	;# 
  1202  0210                     	;# 
  1203  0211                     	;# 
  1204  0211                     	;# 
  1205  0212                     	;# 
  1206  0213                     	;# 
  1207  0214                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0216                     	;# 
  1211  0216                     	;# 
  1212  0217                     	;# 
  1213  0217                     	;# 
  1214  0218                     	;# 
  1215  0219                     	;# 
  1216  021A                     	;# 
  1217  021B                     	;# 
  1218  021B                     	;# 
  1219  021C                     	;# 
  1220  021C                     	;# 
  1221  021D                     	;# 
  1222  021D                     	;# 
  1223  021E                     	;# 
  1224  021F                     	;# 
  1225  028C                     	;# 
  1226  028C                     	;# 
  1227  028D                     	;# 
  1228  028D                     	;# 
  1229  028E                     	;# 
  1230  028F                     	;# 
  1231  0290                     	;# 
  1232  0290                     	;# 
  1233  0291                     	;# 
  1234  0292                     	;# 
  1235  0292                     	;# 
  1236  0293                     	;# 
  1237  0293                     	;# 
  1238  0294                     	;# 
  1239  0295                     	;# 
  1240  0296                     	;# 
  1241  0296                     	;# 
  1242  0297                     	;# 
  1243  0298                     	;# 
  1244  0298                     	;# 
  1245  0299                     	;# 
  1246  0299                     	;# 
  1247  029A                     	;# 
  1248  029B                     	;# 
  1249  029C                     	;# 
  1250  029C                     	;# 
  1251  029D                     	;# 
  1252  030C                     	;# 
  1253  030C                     	;# 
  1254  030D                     	;# 
  1255  030E                     	;# 
  1256  030F                     	;# 
  1257  0310                     	;# 
  1258  0310                     	;# 
  1259  0311                     	;# 
  1260  0312                     	;# 
  1261  0313                     	;# 
  1262  0314                     	;# 
  1263  0314                     	;# 
  1264  0315                     	;# 
  1265  0316                     	;# 
  1266  0317                     	;# 
  1267  0318                     	;# 
  1268  0318                     	;# 
  1269  0319                     	;# 
  1270  031A                     	;# 
  1271  031B                     	;# 
  1272  031C                     	;# 
  1273  031C                     	;# 
  1274  031D                     	;# 
  1275  031E                     	;# 
  1276  031F                     	;# 
  1277  038C                     	;# 
  1278  038D                     	;# 
  1279  038E                     	;# 
  1280  0390                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  040C                     	;# 
  1284  040D                     	;# 
  1285  040E                     	;# 
  1286  040F                     	;# 
  1287  0410                     	;# 
  1288  0411                     	;# 
  1289  0416                     	;# 
  1290  0416                     	;# 
  1291  0417                     	;# 
  1292  0418                     	;# 
  1293  0418                     	;# 
  1294  0419                     	;# 
  1295  041A                     	;# 
  1296  041A                     	;# 
  1297  041B                     	;# 
  1298  041C                     	;# 
  1299  041C                     	;# 
  1300  041D                     	;# 
  1301  041E                     	;# 
  1302  041F                     	;# 
  1303  048C                     	;# 
  1304  048C                     	;# 
  1305  048D                     	;# 
  1306  048E                     	;# 
  1307  048F                     	;# 
  1308  048F                     	;# 
  1309  0490                     	;# 
  1310  0491                     	;# 
  1311  0492                     	;# 
  1312  0492                     	;# 
  1313  0493                     	;# 
  1314  0494                     	;# 
  1315  0495                     	;# 
  1316  0495                     	;# 
  1317  0496                     	;# 
  1318  0497                     	;# 
  1319  0498                     	;# 
  1320  0499                     	;# 
  1321  049A                     	;# 
  1322  049B                     	;# 
  1323  049C                     	;# 
  1324  049D                     	;# 
  1325  050C                     	;# 
  1326  050C                     	;# 
  1327  050D                     	;# 
  1328  050E                     	;# 
  1329  050F                     	;# 
  1330  050F                     	;# 
  1331  0510                     	;# 
  1332  0511                     	;# 
  1333  0512                     	;# 
  1334  0512                     	;# 
  1335  0513                     	;# 
  1336  0514                     	;# 
  1337  0515                     	;# 
  1338  0515                     	;# 
  1339  0516                     	;# 
  1340  0517                     	;# 
  1341  0518                     	;# 
  1342  0519                     	;# 
  1343  051A                     	;# 
  1344  051B                     	;# 
  1345  051C                     	;# 
  1346  051D                     	;# 
  1347  058C                     	;# 
  1348  058C                     	;# 
  1349  058D                     	;# 
  1350  058E                     	;# 
  1351  058F                     	;# 
  1352  058F                     	;# 
  1353  0590                     	;# 
  1354  0591                     	;# 
  1355  0592                     	;# 
  1356  0593                     	;# 
  1357  060C                     	;# 
  1358  060D                     	;# 
  1359  060E                     	;# 
  1360  060F                     	;# 
  1361  0610                     	;# 
  1362  0611                     	;# 
  1363  0612                     	;# 
  1364  0613                     	;# 
  1365  0614                     	;# 
  1366  0616                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  061A                     	;# 
  1371  061B                     	;# 
  1372  061C                     	;# 
  1373  061D                     	;# 
  1374  061E                     	;# 
  1375  068C                     	;# 
  1376  068D                     	;# 
  1377  068E                     	;# 
  1378  068F                     	;# 
  1379  0690                     	;# 
  1380  0691                     	;# 
  1381  0692                     	;# 
  1382  0693                     	;# 
  1383  0694                     	;# 
  1384  070C                     	;# 
  1385  070D                     	;# 
  1386  070E                     	;# 
  1387  070F                     	;# 
  1388  0710                     	;# 
  1389  0711                     	;# 
  1390  0712                     	;# 
  1391  0713                     	;# 
  1392  0714                     	;# 
  1393  0716                     	;# 
  1394  0717                     	;# 
  1395  0718                     	;# 
  1396  0719                     	;# 
  1397  071A                     	;# 
  1398  071B                     	;# 
  1399  071C                     	;# 
  1400  071D                     	;# 
  1401  071E                     	;# 
  1402  0796                     	;# 
  1403  0797                     	;# 
  1404  0798                     	;# 
  1405  0799                     	;# 
  1406  079A                     	;# 
  1407  079B                     	;# 
  1408  080C                     	;# 
  1409  080D                     	;# 
  1410  080E                     	;# 
  1411  080F                     	;# 
  1412  0810                     	;# 
  1413  0811                     	;# 
  1414  0812                     	;# 
  1415  0813                     	;# 
  1416  0814                     	;# 
  1417  081A                     	;# 
  1418  081B                     	;# 
  1419  081C                     	;# 
  1420  081D                     	;# 
  1421  081E                     	;# 
  1422  081F                     	;# 
  1423  088C                     	;# 
  1424  088D                     	;# 
  1425  088E                     	;# 
  1426  088F                     	;# 
  1427  0890                     	;# 
  1428  0891                     	;# 
  1429  0892                     	;# 
  1430  0893                     	;# 
  1431  0895                     	;# 
  1432  0896                     	;# 
  1433  0897                     	;# 
  1434  0898                     	;# 
  1435  0899                     	;# 
  1436  089A                     	;# 
  1437  089B                     	;# 
  1438  090C                     	;# 
  1439  090E                     	;# 
  1440  090F                     	;# 
  1441  091F                     	;# 
  1442  091F                     	;# 
  1443  098F                     	;# 
  1444  098F                     	;# 
  1445  0990                     	;# 
  1446  0991                     	;# 
  1447  0992                     	;# 
  1448  0993                     	;# 
  1449  0994                     	;# 
  1450  0995                     	;# 
  1451  0996                     	;# 
  1452  0997                     	;# 
  1453  0E0F                     	;# 
  1454  0E10                     	;# 
  1455  0E11                     	;# 
  1456  0E12                     	;# 
  1457  0E13                     	;# 
  1458  0E14                     	;# 
  1459  0E15                     	;# 
  1460  0E16                     	;# 
  1461  0E17                     	;# 
  1462  0E18                     	;# 
  1463  0E19                     	;# 
  1464  0E1A                     	;# 
  1465  0E1B                     	;# 
  1466  0E1C                     	;# 
  1467  0E1D                     	;# 
  1468  0E1E                     	;# 
  1469  0E1F                     	;# 
  1470  0E20                     	;# 
  1471  0E21                     	;# 
  1472  0E22                     	;# 
  1473  0E23                     	;# 
  1474  0E24                     	;# 
  1475  0E25                     	;# 
  1476  0E26                     	;# 
  1477  0E27                     	;# 
  1478  0E28                     	;# 
  1479  0E29                     	;# 
  1480  0E2A                     	;# 
  1481  0E2B                     	;# 
  1482  0E2C                     	;# 
  1483  0E2D                     	;# 
  1484  0E2E                     	;# 
  1485  0E2F                     	;# 
  1486  0E30                     	;# 
  1487  0E31                     	;# 
  1488  0E32                     	;# 
  1489  0E33                     	;# 
  1490  0E34                     	;# 
  1491  0E35                     	;# 
  1492  0E36                     	;# 
  1493  0E37                     	;# 
  1494  0E8F                     	;# 
  1495  0E90                     	;# 
  1496  0E91                     	;# 
  1497  0E92                     	;# 
  1498  0E93                     	;# 
  1499  0E94                     	;# 
  1500  0E95                     	;# 
  1501  0E96                     	;# 
  1502  0E97                     	;# 
  1503  0E9C                     	;# 
  1504  0E9D                     	;# 
  1505  0E9E                     	;# 
  1506  0EA1                     	;# 
  1507  0EA2                     	;# 
  1508  0EA3                     	;# 
  1509  0EA4                     	;# 
  1510  0EA5                     	;# 
  1511  0EA9                     	;# 
  1512  0EAA                     	;# 
  1513  0EAB                     	;# 
  1514  0EAC                     	;# 
  1515  0EB1                     	;# 
  1516  0EB2                     	;# 
  1517  0EB3                     	;# 
  1518  0EB8                     	;# 
  1519  0EB9                     	;# 
  1520  0EBA                     	;# 
  1521  0EBB                     	;# 
  1522  0EBC                     	;# 
  1523  0EBD                     	;# 
  1524  0EBE                     	;# 
  1525  0EC3                     	;# 
  1526  0EC5                     	;# 
  1527  0EC6                     	;# 
  1528  0EC7                     	;# 
  1529  0EC8                     	;# 
  1530  0EC9                     	;# 
  1531  0ECA                     	;# 
  1532  0ECB                     	;# 
  1533  0ECC                     	;# 
  1534  0F10                     	;# 
  1535  0F11                     	;# 
  1536  0F12                     	;# 
  1537  0F13                     	;# 
  1538  0F14                     	;# 
  1539  0F15                     	;# 
  1540  0F16                     	;# 
  1541  0F17                     	;# 
  1542  0F18                     	;# 
  1543  0F19                     	;# 
  1544  0F1A                     	;# 
  1545  0F1B                     	;# 
  1546  0F1C                     	;# 
  1547  0F1D                     	;# 
  1548  0F1E                     	;# 
  1549  0F1F                     	;# 
  1550  0F20                     	;# 
  1551  0F21                     	;# 
  1552  0F22                     	;# 
  1553  0F23                     	;# 
  1554  0F24                     	;# 
  1555  0F25                     	;# 
  1556  0F26                     	;# 
  1557  0F27                     	;# 
  1558  0F38                     	;# 
  1559  0F39                     	;# 
  1560  0F3A                     	;# 
  1561  0F3B                     	;# 
  1562  0F3C                     	;# 
  1563  0F3D                     	;# 
  1564  0F3E                     	;# 
  1565  0F3F                     	;# 
  1566  0F40                     	;# 
  1567  0F41                     	;# 
  1568  0F43                     	;# 
  1569  0F44                     	;# 
  1570  0F45                     	;# 
  1571  0F46                     	;# 
  1572  0F47                     	;# 
  1573  0F48                     	;# 
  1574  0F49                     	;# 
  1575  0F4A                     	;# 
  1576  0F4B                     	;# 
  1577  0F4C                     	;# 
  1578  0F4E                     	;# 
  1579  0F4F                     	;# 
  1580  0F50                     	;# 
  1581  0F51                     	;# 
  1582  0F52                     	;# 
  1583  0F53                     	;# 
  1584  0F54                     	;# 
  1585  0F55                     	;# 
  1586  0F56                     	;# 
  1587  0F57                     	;# 
  1588  0F65                     	;# 
  1589  0F68                     	;# 
  1590  0F69                     	;# 
  1591  0F6A                     	;# 
  1592  0F6B                     	;# 
  1593  0FE4                     	;# 
  1594  0FE5                     	;# 
  1595  0FE6                     	;# 
  1596  0FE7                     	;# 
  1597  0FE8                     	;# 
  1598  0FE9                     	;# 
  1599  0FEA                     	;# 
  1600  0FEB                     	;# 
  1601  0FED                     	;# 
  1602  0FEE                     	;# 
  1603  0FEF                     	;# 
  1604  0000                     	;# 
  1605  0001                     	;# 
  1606  0002                     	;# 
  1607  0003                     	;# 
  1608  0004                     	;# 
  1609  0005                     	;# 
  1610  0006                     	;# 
  1611  0007                     	;# 
  1612  0008                     	;# 
  1613  0009                     	;# 
  1614  000A                     	;# 
  1615  000B                     	;# 
  1616  000C                     	;# 
  1617  000D                     	;# 
  1618  000E                     	;# 
  1619  0010                     	;# 
  1620  0011                     	;# 
  1621  0012                     	;# 
  1622  0013                     	;# 
  1623  0016                     	;# 
  1624  0017                     	;# 
  1625  0018                     	;# 
  1626  001C                     	;# 
  1627  001C                     	;# 
  1628  001D                     	;# 
  1629  001D                     	;# 
  1630  001E                     	;# 
  1631  001F                     	;# 
  1632  008C                     	;# 
  1633  008C                     	;# 
  1634  008D                     	;# 
  1635  008E                     	;# 
  1636  008E                     	;# 
  1637  008F                     	;# 
  1638  0090                     	;# 
  1639  0090                     	;# 
  1640  0091                     	;# 
  1641  0093                     	;# 
  1642  0094                     	;# 
  1643  0095                     	;# 
  1644  0096                     	;# 
  1645  0097                     	;# 
  1646  0098                     	;# 
  1647  0099                     	;# 
  1648  009A                     	;# 
  1649  009B                     	;# 
  1650  009C                     	;# 
  1651  009D                     	;# 
  1652  009E                     	;# 
  1653  010C                     	;# 
  1654  010D                     	;# 
  1655  010E                     	;# 
  1656  010E                     	;# 
  1657  010F                     	;# 
  1658  0110                     	;# 
  1659  0110                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0112                     	;# 
  1663  0113                     	;# 
  1664  0114                     	;# 
  1665  0114                     	;# 
  1666  0115                     	;# 
  1667  0116                     	;# 
  1668  0116                     	;# 
  1669  0117                     	;# 
  1670  0119                     	;# 
  1671  0119                     	;# 
  1672  0119                     	;# 
  1673  011A                     	;# 
  1674  011A                     	;# 
  1675  011A                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011B                     	;# 
  1680  011B                     	;# 
  1681  011C                     	;# 
  1682  011C                     	;# 
  1683  011C                     	;# 
  1684  011D                     	;# 
  1685  011D                     	;# 
  1686  011D                     	;# 
  1687  011E                     	;# 
  1688  011E                     	;# 
  1689  011E                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  011F                     	;# 
  1694  011F                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018E                     	;# 
  1698  018F                     	;# 
  1699  0190                     	;# 
  1700  0191                     	;# 
  1701  0192                     	;# 
  1702  0196                     	;# 
  1703  0197                     	;# 
  1704  0198                     	;# 
  1705  0199                     	;# 
  1706  019A                     	;# 
  1707  019B                     	;# 
  1708  019C                     	;# 
  1709  020C                     	;# 
  1710  020D                     	;# 
  1711  020E                     	;# 
  1712  020F                     	;# 
  1713  020F                     	;# 
  1714  0210                     	;# 
  1715  0210                     	;# 
  1716  0211                     	;# 
  1717  0211                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0214                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0218                     	;# 
  1728  0219                     	;# 
  1729  021A                     	;# 
  1730  021B                     	;# 
  1731  021B                     	;# 
  1732  021C                     	;# 
  1733  021C                     	;# 
  1734  021D                     	;# 
  1735  021D                     	;# 
  1736  021E                     	;# 
  1737  021F                     	;# 
  1738  028C                     	;# 
  1739  028C                     	;# 
  1740  028D                     	;# 
  1741  028D                     	;# 
  1742  028E                     	;# 
  1743  028F                     	;# 
  1744  0290                     	;# 
  1745  0290                     	;# 
  1746  0291                     	;# 
  1747  0292                     	;# 
  1748  0292                     	;# 
  1749  0293                     	;# 
  1750  0293                     	;# 
  1751  0294                     	;# 
  1752  0295                     	;# 
  1753  0296                     	;# 
  1754  0296                     	;# 
  1755  0297                     	;# 
  1756  0298                     	;# 
  1757  0298                     	;# 
  1758  0299                     	;# 
  1759  0299                     	;# 
  1760  029A                     	;# 
  1761  029B                     	;# 
  1762  029C                     	;# 
  1763  029C                     	;# 
  1764  029D                     	;# 
  1765  030C                     	;# 
  1766  030C                     	;# 
  1767  030D                     	;# 
  1768  030E                     	;# 
  1769  030F                     	;# 
  1770  0310                     	;# 
  1771  0310                     	;# 
  1772  0311                     	;# 
  1773  0312                     	;# 
  1774  0313                     	;# 
  1775  0314                     	;# 
  1776  0314                     	;# 
  1777  0315                     	;# 
  1778  0316                     	;# 
  1779  0317                     	;# 
  1780  0318                     	;# 
  1781  0318                     	;# 
  1782  0319                     	;# 
  1783  031A                     	;# 
  1784  031B                     	;# 
  1785  031C                     	;# 
  1786  031C                     	;# 
  1787  031D                     	;# 
  1788  031E                     	;# 
  1789  031F                     	;# 
  1790  038C                     	;# 
  1791  038D                     	;# 
  1792  038E                     	;# 
  1793  0390                     	;# 
  1794  0391                     	;# 
  1795  0392                     	;# 
  1796  040C                     	;# 
  1797  040D                     	;# 
  1798  040E                     	;# 
  1799  040F                     	;# 
  1800  0410                     	;# 
  1801  0411                     	;# 
  1802  0416                     	;# 
  1803  0416                     	;# 
  1804  0417                     	;# 
  1805  0418                     	;# 
  1806  0418                     	;# 
  1807  0419                     	;# 
  1808  041A                     	;# 
  1809  041A                     	;# 
  1810  041B                     	;# 
  1811  041C                     	;# 
  1812  041C                     	;# 
  1813  041D                     	;# 
  1814  041E                     	;# 
  1815  041F                     	;# 
  1816  048C                     	;# 
  1817  048C                     	;# 
  1818  048D                     	;# 
  1819  048E                     	;# 
  1820  048F                     	;# 
  1821  048F                     	;# 
  1822  0490                     	;# 
  1823  0491                     	;# 
  1824  0492                     	;# 
  1825  0492                     	;# 
  1826  0493                     	;# 
  1827  0494                     	;# 
  1828  0495                     	;# 
  1829  0495                     	;# 
  1830  0496                     	;# 
  1831  0497                     	;# 
  1832  0498                     	;# 
  1833  0499                     	;# 
  1834  049A                     	;# 
  1835  049B                     	;# 
  1836  049C                     	;# 
  1837  049D                     	;# 
  1838  050C                     	;# 
  1839  050C                     	;# 
  1840  050D                     	;# 
  1841  050E                     	;# 
  1842  050F                     	;# 
  1843  050F                     	;# 
  1844  0510                     	;# 
  1845  0511                     	;# 
  1846  0512                     	;# 
  1847  0512                     	;# 
  1848  0513                     	;# 
  1849  0514                     	;# 
  1850  0515                     	;# 
  1851  0515                     	;# 
  1852  0516                     	;# 
  1853  0517                     	;# 
  1854  0518                     	;# 
  1855  0519                     	;# 
  1856  051A                     	;# 
  1857  051B                     	;# 
  1858  051C                     	;# 
  1859  051D                     	;# 
  1860  058C                     	;# 
  1861  058C                     	;# 
  1862  058D                     	;# 
  1863  058E                     	;# 
  1864  058F                     	;# 
  1865  058F                     	;# 
  1866  0590                     	;# 
  1867  0591                     	;# 
  1868  0592                     	;# 
  1869  0593                     	;# 
  1870  060C                     	;# 
  1871  060D                     	;# 
  1872  060E                     	;# 
  1873  060F                     	;# 
  1874  0610                     	;# 
  1875  0611                     	;# 
  1876  0612                     	;# 
  1877  0613                     	;# 
  1878  0614                     	;# 
  1879  0616                     	;# 
  1880  0617                     	;# 
  1881  0618                     	;# 
  1882  0619                     	;# 
  1883  061A                     	;# 
  1884  061B                     	;# 
  1885  061C                     	;# 
  1886  061D                     	;# 
  1887  061E                     	;# 
  1888  068C                     	;# 
  1889  068D                     	;# 
  1890  068E                     	;# 
  1891  068F                     	;# 
  1892  0690                     	;# 
  1893  0691                     	;# 
  1894  0692                     	;# 
  1895  0693                     	;# 
  1896  0694                     	;# 
  1897  070C                     	;# 
  1898  070D                     	;# 
  1899  070E                     	;# 
  1900  070F                     	;# 
  1901  0710                     	;# 
  1902  0711                     	;# 
  1903  0712                     	;# 
  1904  0713                     	;# 
  1905  0714                     	;# 
  1906  0716                     	;# 
  1907  0717                     	;# 
  1908  0718                     	;# 
  1909  0719                     	;# 
  1910  071A                     	;# 
  1911  071B                     	;# 
  1912  071C                     	;# 
  1913  071D                     	;# 
  1914  071E                     	;# 
  1915  0796                     	;# 
  1916  0797                     	;# 
  1917  0798                     	;# 
  1918  0799                     	;# 
  1919  079A                     	;# 
  1920  079B                     	;# 
  1921  080C                     	;# 
  1922  080D                     	;# 
  1923  080E                     	;# 
  1924  080F                     	;# 
  1925  0810                     	;# 
  1926  0811                     	;# 
  1927  0812                     	;# 
  1928  0813                     	;# 
  1929  0814                     	;# 
  1930  081A                     	;# 
  1931  081B                     	;# 
  1932  081C                     	;# 
  1933  081D                     	;# 
  1934  081E                     	;# 
  1935  081F                     	;# 
  1936  088C                     	;# 
  1937  088D                     	;# 
  1938  088E                     	;# 
  1939  088F                     	;# 
  1940  0890                     	;# 
  1941  0891                     	;# 
  1942  0892                     	;# 
  1943  0893                     	;# 
  1944  0895                     	;# 
  1945  0896                     	;# 
  1946  0897                     	;# 
  1947  0898                     	;# 
  1948  0899                     	;# 
  1949  089A                     	;# 
  1950  089B                     	;# 
  1951  090C                     	;# 
  1952  090E                     	;# 
  1953  090F                     	;# 
  1954  091F                     	;# 
  1955  091F                     	;# 
  1956  098F                     	;# 
  1957  098F                     	;# 
  1958  0990                     	;# 
  1959  0991                     	;# 
  1960  0992                     	;# 
  1961  0993                     	;# 
  1962  0994                     	;# 
  1963  0995                     	;# 
  1964  0996                     	;# 
  1965  0997                     	;# 
  1966  0E0F                     	;# 
  1967  0E10                     	;# 
  1968  0E11                     	;# 
  1969  0E12                     	;# 
  1970  0E13                     	;# 
  1971  0E14                     	;# 
  1972  0E15                     	;# 
  1973  0E16                     	;# 
  1974  0E17                     	;# 
  1975  0E18                     	;# 
  1976  0E19                     	;# 
  1977  0E1A                     	;# 
  1978  0E1B                     	;# 
  1979  0E1C                     	;# 
  1980  0E1D                     	;# 
  1981  0E1E                     	;# 
  1982  0E1F                     	;# 
  1983  0E20                     	;# 
  1984  0E21                     	;# 
  1985  0E22                     	;# 
  1986  0E23                     	;# 
  1987  0E24                     	;# 
  1988  0E25                     	;# 
  1989  0E26                     	;# 
  1990  0E27                     	;# 
  1991  0E28                     	;# 
  1992  0E29                     	;# 
  1993  0E2A                     	;# 
  1994  0E2B                     	;# 
  1995  0E2C                     	;# 
  1996  0E2D                     	;# 
  1997  0E2E                     	;# 
  1998  0E2F                     	;# 
  1999  0E30                     	;# 
  2000  0E31                     	;# 
  2001  0E32                     	;# 
  2002  0E33                     	;# 
  2003  0E34                     	;# 
  2004  0E35                     	;# 
  2005  0E36                     	;# 
  2006  0E37                     	;# 
  2007  0E8F                     	;# 
  2008  0E90                     	;# 
  2009  0E91                     	;# 
  2010  0E92                     	;# 
  2011  0E93                     	;# 
  2012  0E94                     	;# 
  2013  0E95                     	;# 
  2014  0E96                     	;# 
  2015  0E97                     	;# 
  2016  0E9C                     	;# 
  2017  0E9D                     	;# 
  2018  0E9E                     	;# 
  2019  0EA1                     	;# 
  2020  0EA2                     	;# 
  2021  0EA3                     	;# 
  2022  0EA4                     	;# 
  2023  0EA5                     	;# 
  2024  0EA9                     	;# 
  2025  0EAA                     	;# 
  2026  0EAB                     	;# 
  2027  0EAC                     	;# 
  2028  0EB1                     	;# 
  2029  0EB2                     	;# 
  2030  0EB3                     	;# 
  2031  0EB8                     	;# 
  2032  0EB9                     	;# 
  2033  0EBA                     	;# 
  2034  0EBB                     	;# 
  2035  0EBC                     	;# 
  2036  0EBD                     	;# 
  2037  0EBE                     	;# 
  2038  0EC3                     	;# 
  2039  0EC5                     	;# 
  2040  0EC6                     	;# 
  2041  0EC7                     	;# 
  2042  0EC8                     	;# 
  2043  0EC9                     	;# 
  2044  0ECA                     	;# 
  2045  0ECB                     	;# 
  2046  0ECC                     	;# 
  2047  0F10                     	;# 
  2048  0F11                     	;# 
  2049  0F12                     	;# 
  2050  0F13                     	;# 
  2051  0F14                     	;# 
  2052  0F15                     	;# 
  2053  0F16                     	;# 
  2054  0F17                     	;# 
  2055  0F18                     	;# 
  2056  0F19                     	;# 
  2057  0F1A                     	;# 
  2058  0F1B                     	;# 
  2059  0F1C                     	;# 
  2060  0F1D                     	;# 
  2061  0F1E                     	;# 
  2062  0F1F                     	;# 
  2063  0F20                     	;# 
  2064  0F21                     	;# 
  2065  0F22                     	;# 
  2066  0F23                     	;# 
  2067  0F24                     	;# 
  2068  0F25                     	;# 
  2069  0F26                     	;# 
  2070  0F27                     	;# 
  2071  0F38                     	;# 
  2072  0F39                     	;# 
  2073  0F3A                     	;# 
  2074  0F3B                     	;# 
  2075  0F3C                     	;# 
  2076  0F3D                     	;# 
  2077  0F3E                     	;# 
  2078  0F3F                     	;# 
  2079  0F40                     	;# 
  2080  0F41                     	;# 
  2081  0F43                     	;# 
  2082  0F44                     	;# 
  2083  0F45                     	;# 
  2084  0F46                     	;# 
  2085  0F47                     	;# 
  2086  0F48                     	;# 
  2087  0F49                     	;# 
  2088  0F4A                     	;# 
  2089  0F4B                     	;# 
  2090  0F4C                     	;# 
  2091  0F4E                     	;# 
  2092  0F4F                     	;# 
  2093  0F50                     	;# 
  2094  0F51                     	;# 
  2095  0F52                     	;# 
  2096  0F53                     	;# 
  2097  0F54                     	;# 
  2098  0F55                     	;# 
  2099  0F56                     	;# 
  2100  0F57                     	;# 
  2101  0F65                     	;# 
  2102  0F68                     	;# 
  2103  0F69                     	;# 
  2104  0F6A                     	;# 
  2105  0F6B                     	;# 
  2106  0FE4                     	;# 
  2107  0FE5                     	;# 
  2108  0FE6                     	;# 
  2109  0FE7                     	;# 
  2110  0FE8                     	;# 
  2111  0FE9                     	;# 
  2112  0FEA                     	;# 
  2113  0FEB                     	;# 
  2114  0FED                     	;# 
  2115  0FEE                     	;# 
  2116  0FEF                     	;# 
  2117  0000                     	;# 
  2118  0001                     	;# 
  2119  0002                     	;# 
  2120  0003                     	;# 
  2121  0004                     	;# 
  2122  0005                     	;# 
  2123  0006                     	;# 
  2124  0007                     	;# 
  2125  0008                     	;# 
  2126  0009                     	;# 
  2127  000A                     	;# 
  2128  000B                     	;# 
  2129  000C                     	;# 
  2130  000D                     	;# 
  2131  000E                     	;# 
  2132  0010                     	;# 
  2133  0011                     	;# 
  2134  0012                     	;# 
  2135  0013                     	;# 
  2136  0016                     	;# 
  2137  0017                     	;# 
  2138  0018                     	;# 
  2139  001C                     	;# 
  2140  001C                     	;# 
  2141  001D                     	;# 
  2142  001D                     	;# 
  2143  001E                     	;# 
  2144  001F                     	;# 
  2145  008C                     	;# 
  2146  008C                     	;# 
  2147  008D                     	;# 
  2148  008E                     	;# 
  2149  008E                     	;# 
  2150  008F                     	;# 
  2151  0090                     	;# 
  2152  0090                     	;# 
  2153  0091                     	;# 
  2154  0093                     	;# 
  2155  0094                     	;# 
  2156  0095                     	;# 
  2157  0096                     	;# 
  2158  0097                     	;# 
  2159  0098                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009C                     	;# 
  2164  009D                     	;# 
  2165  009E                     	;# 
  2166  010C                     	;# 
  2167  010D                     	;# 
  2168  010E                     	;# 
  2169  010E                     	;# 
  2170  010F                     	;# 
  2171  0110                     	;# 
  2172  0110                     	;# 
  2173  0111                     	;# 
  2174  0112                     	;# 
  2175  0112                     	;# 
  2176  0113                     	;# 
  2177  0114                     	;# 
  2178  0114                     	;# 
  2179  0115                     	;# 
  2180  0116                     	;# 
  2181  0116                     	;# 
  2182  0117                     	;# 
  2183  0119                     	;# 
  2184  0119                     	;# 
  2185  0119                     	;# 
  2186  011A                     	;# 
  2187  011A                     	;# 
  2188  011A                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011B                     	;# 
  2193  011B                     	;# 
  2194  011C                     	;# 
  2195  011C                     	;# 
  2196  011C                     	;# 
  2197  011D                     	;# 
  2198  011D                     	;# 
  2199  011D                     	;# 
  2200  011E                     	;# 
  2201  011E                     	;# 
  2202  011E                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  011F                     	;# 
  2207  011F                     	;# 
  2208  018C                     	;# 
  2209  018D                     	;# 
  2210  018E                     	;# 
  2211  018F                     	;# 
  2212  0190                     	;# 
  2213  0191                     	;# 
  2214  0192                     	;# 
  2215  0196                     	;# 
  2216  0197                     	;# 
  2217  0198                     	;# 
  2218  0199                     	;# 
  2219  019A                     	;# 
  2220  019B                     	;# 
  2221  019C                     	;# 
  2222  020C                     	;# 
  2223  020D                     	;# 
  2224  020E                     	;# 
  2225  020F                     	;# 
  2226  020F                     	;# 
  2227  0210                     	;# 
  2228  0210                     	;# 
  2229  0211                     	;# 
  2230  0211                     	;# 
  2231  0212                     	;# 
  2232  0213                     	;# 
  2233  0214                     	;# 
  2234  0215                     	;# 
  2235  0215                     	;# 
  2236  0216                     	;# 
  2237  0216                     	;# 
  2238  0217                     	;# 
  2239  0217                     	;# 
  2240  0218                     	;# 
  2241  0219                     	;# 
  2242  021A                     	;# 
  2243  021B                     	;# 
  2244  021B                     	;# 
  2245  021C                     	;# 
  2246  021C                     	;# 
  2247  021D                     	;# 
  2248  021D                     	;# 
  2249  021E                     	;# 
  2250  021F                     	;# 
  2251  028C                     	;# 
  2252  028C                     	;# 
  2253  028D                     	;# 
  2254  028D                     	;# 
  2255  028E                     	;# 
  2256  028F                     	;# 
  2257  0290                     	;# 
  2258  0290                     	;# 
  2259  0291                     	;# 
  2260  0292                     	;# 
  2261  0292                     	;# 
  2262  0293                     	;# 
  2263  0293                     	;# 
  2264  0294                     	;# 
  2265  0295                     	;# 
  2266  0296                     	;# 
  2267  0296                     	;# 
  2268  0297                     	;# 
  2269  0298                     	;# 
  2270  0298                     	;# 
  2271  0299                     	;# 
  2272  0299                     	;# 
  2273  029A                     	;# 
  2274  029B                     	;# 
  2275  029C                     	;# 
  2276  029C                     	;# 
  2277  029D                     	;# 
  2278  030C                     	;# 
  2279  030C                     	;# 
  2280  030D                     	;# 
  2281  030E                     	;# 
  2282  030F                     	;# 
  2283  0310                     	;# 
  2284  0310                     	;# 
  2285  0311                     	;# 
  2286  0312                     	;# 
  2287  0313                     	;# 
  2288  0314                     	;# 
  2289  0314                     	;# 
  2290  0315                     	;# 
  2291  0316                     	;# 
  2292  0317                     	;# 
  2293  0318                     	;# 
  2294  0318                     	;# 
  2295  0319                     	;# 
  2296  031A                     	;# 
  2297  031B                     	;# 
  2298  031C                     	;# 
  2299  031C                     	;# 
  2300  031D                     	;# 
  2301  031E                     	;# 
  2302  031F                     	;# 
  2303  038C                     	;# 
  2304  038D                     	;# 
  2305  038E                     	;# 
  2306  0390                     	;# 
  2307  0391                     	;# 
  2308  0392                     	;# 
  2309  040C                     	;# 
  2310  040D                     	;# 
  2311  040E                     	;# 
  2312  040F                     	;# 
  2313  0410                     	;# 
  2314  0411                     	;# 
  2315  0416                     	;# 
  2316  0416                     	;# 
  2317  0417                     	;# 
  2318  0418                     	;# 
  2319  0418                     	;# 
  2320  0419                     	;# 
  2321  041A                     	;# 
  2322  041A                     	;# 
  2323  041B                     	;# 
  2324  041C                     	;# 
  2325  041C                     	;# 
  2326  041D                     	;# 
  2327  041E                     	;# 
  2328  041F                     	;# 
  2329  048C                     	;# 
  2330  048C                     	;# 
  2331  048D                     	;# 
  2332  048E                     	;# 
  2333  048F                     	;# 
  2334  048F                     	;# 
  2335  0490                     	;# 
  2336  0491                     	;# 
  2337  0492                     	;# 
  2338  0492                     	;# 
  2339  0493                     	;# 
  2340  0494                     	;# 
  2341  0495                     	;# 
  2342  0495                     	;# 
  2343  0496                     	;# 
  2344  0497                     	;# 
  2345  0498                     	;# 
  2346  0499                     	;# 
  2347  049A                     	;# 
  2348  049B                     	;# 
  2349  049C                     	;# 
  2350  049D                     	;# 
  2351  050C                     	;# 
  2352  050C                     	;# 
  2353  050D                     	;# 
  2354  050E                     	;# 
  2355  050F                     	;# 
  2356  050F                     	;# 
  2357  0510                     	;# 
  2358  0511                     	;# 
  2359  0512                     	;# 
  2360  0512                     	;# 
  2361  0513                     	;# 
  2362  0514                     	;# 
  2363  0515                     	;# 
  2364  0515                     	;# 
  2365  0516                     	;# 
  2366  0517                     	;# 
  2367  0518                     	;# 
  2368  0519                     	;# 
  2369  051A                     	;# 
  2370  051B                     	;# 
  2371  051C                     	;# 
  2372  051D                     	;# 
  2373  058C                     	;# 
  2374  058C                     	;# 
  2375  058D                     	;# 
  2376  058E                     	;# 
  2377  058F                     	;# 
  2378  058F                     	;# 
  2379  0590                     	;# 
  2380  0591                     	;# 
  2381  0592                     	;# 
  2382  0593                     	;# 
  2383  060C                     	;# 
  2384  060D                     	;# 
  2385  060E                     	;# 
  2386  060F                     	;# 
  2387  0610                     	;# 
  2388  0611                     	;# 
  2389  0612                     	;# 
  2390  0613                     	;# 
  2391  0614                     	;# 
  2392  0616                     	;# 
  2393  0617                     	;# 
  2394  0618                     	;# 
  2395  0619                     	;# 
  2396  061A                     	;# 
  2397  061B                     	;# 
  2398  061C                     	;# 
  2399  061D                     	;# 
  2400  061E                     	;# 
  2401  068C                     	;# 
  2402  068D                     	;# 
  2403  068E                     	;# 
  2404  068F                     	;# 
  2405  0690                     	;# 
  2406  0691                     	;# 
  2407  0692                     	;# 
  2408  0693                     	;# 
  2409  0694                     	;# 
  2410  070C                     	;# 
  2411  070D                     	;# 
  2412  070E                     	;# 
  2413  070F                     	;# 
  2414  0710                     	;# 
  2415  0711                     	;# 
  2416  0712                     	;# 
  2417  0713                     	;# 
  2418  0714                     	;# 
  2419  0716                     	;# 
  2420  0717                     	;# 
  2421  0718                     	;# 
  2422  0719                     	;# 
  2423  071A                     	;# 
  2424  071B                     	;# 
  2425  071C                     	;# 
  2426  071D                     	;# 
  2427  071E                     	;# 
  2428  0796                     	;# 
  2429  0797                     	;# 
  2430  0798                     	;# 
  2431  0799                     	;# 
  2432  079A                     	;# 
  2433  079B                     	;# 
  2434  080C                     	;# 
  2435  080D                     	;# 
  2436  080E                     	;# 
  2437  080F                     	;# 
  2438  0810                     	;# 
  2439  0811                     	;# 
  2440  0812                     	;# 
  2441  0813                     	;# 
  2442  0814                     	;# 
  2443  081A                     	;# 
  2444  081B                     	;# 
  2445  081C                     	;# 
  2446  081D                     	;# 
  2447  081E                     	;# 
  2448  081F                     	;# 
  2449  088C                     	;# 
  2450  088D                     	;# 
  2451  088E                     	;# 
  2452  088F                     	;# 
  2453  0890                     	;# 
  2454  0891                     	;# 
  2455  0892                     	;# 
  2456  0893                     	;# 
  2457  0895                     	;# 
  2458  0896                     	;# 
  2459  0897                     	;# 
  2460  0898                     	;# 
  2461  0899                     	;# 
  2462  089A                     	;# 
  2463  089B                     	;# 
  2464  090C                     	;# 
  2465  090E                     	;# 
  2466  090F                     	;# 
  2467  091F                     	;# 
  2468  091F                     	;# 
  2469  098F                     	;# 
  2470  098F                     	;# 
  2471  0990                     	;# 
  2472  0991                     	;# 
  2473  0992                     	;# 
  2474  0993                     	;# 
  2475  0994                     	;# 
  2476  0995                     	;# 
  2477  0996                     	;# 
  2478  0997                     	;# 
  2479  0E0F                     	;# 
  2480  0E10                     	;# 
  2481  0E11                     	;# 
  2482  0E12                     	;# 
  2483  0E13                     	;# 
  2484  0E14                     	;# 
  2485  0E15                     	;# 
  2486  0E16                     	;# 
  2487  0E17                     	;# 
  2488  0E18                     	;# 
  2489  0E19                     	;# 
  2490  0E1A                     	;# 
  2491  0E1B                     	;# 
  2492  0E1C                     	;# 
  2493  0E1D                     	;# 
  2494  0E1E                     	;# 
  2495  0E1F                     	;# 
  2496  0E20                     	;# 
  2497  0E21                     	;# 
  2498  0E22                     	;# 
  2499  0E23                     	;# 
  2500  0E24                     	;# 
  2501  0E25                     	;# 
  2502  0E26                     	;# 
  2503  0E27                     	;# 
  2504  0E28                     	;# 
  2505  0E29                     	;# 
  2506  0E2A                     	;# 
  2507  0E2B                     	;# 
  2508  0E2C                     	;# 
  2509  0E2D                     	;# 
  2510  0E2E                     	;# 
  2511  0E2F                     	;# 
  2512  0E30                     	;# 
  2513  0E31                     	;# 
  2514  0E32                     	;# 
  2515  0E33                     	;# 
  2516  0E34                     	;# 
  2517  0E35                     	;# 
  2518  0E36                     	;# 
  2519  0E37                     	;# 
  2520  0E8F                     	;# 
  2521  0E90                     	;# 
  2522  0E91                     	;# 
  2523  0E92                     	;# 
  2524  0E93                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E96                     	;# 
  2528  0E97                     	;# 
  2529  0E9C                     	;# 
  2530  0E9D                     	;# 
  2531  0E9E                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA9                     	;# 
  2538  0EAA                     	;# 
  2539  0EAB                     	;# 
  2540  0EAC                     	;# 
  2541  0EB1                     	;# 
  2542  0EB2                     	;# 
  2543  0EB3                     	;# 
  2544  0EB8                     	;# 
  2545  0EB9                     	;# 
  2546  0EBA                     	;# 
  2547  0EBB                     	;# 
  2548  0EBC                     	;# 
  2549  0EBD                     	;# 
  2550  0EBE                     	;# 
  2551  0EC3                     	;# 
  2552  0EC5                     	;# 
  2553  0EC6                     	;# 
  2554  0EC7                     	;# 
  2555  0EC8                     	;# 
  2556  0EC9                     	;# 
  2557  0ECA                     	;# 
  2558  0ECB                     	;# 
  2559  0ECC                     	;# 
  2560  0F10                     	;# 
  2561  0F11                     	;# 
  2562  0F12                     	;# 
  2563  0F13                     	;# 
  2564  0F14                     	;# 
  2565  0F15                     	;# 
  2566  0F16                     	;# 
  2567  0F17                     	;# 
  2568  0F18                     	;# 
  2569  0F19                     	;# 
  2570  0F1A                     	;# 
  2571  0F1B                     	;# 
  2572  0F1C                     	;# 
  2573  0F1D                     	;# 
  2574  0F1E                     	;# 
  2575  0F1F                     	;# 
  2576  0F20                     	;# 
  2577  0F21                     	;# 
  2578  0F22                     	;# 
  2579  0F23                     	;# 
  2580  0F24                     	;# 
  2581  0F25                     	;# 
  2582  0F26                     	;# 
  2583  0F27                     	;# 
  2584  0F38                     	;# 
  2585  0F39                     	;# 
  2586  0F3A                     	;# 
  2587  0F3B                     	;# 
  2588  0F3C                     	;# 
  2589  0F3D                     	;# 
  2590  0F3E                     	;# 
  2591  0F3F                     	;# 
  2592  0F40                     	;# 
  2593  0F41                     	;# 
  2594  0F43                     	;# 
  2595  0F44                     	;# 
  2596  0F45                     	;# 
  2597  0F46                     	;# 
  2598  0F47                     	;# 
  2599  0F48                     	;# 
  2600  0F49                     	;# 
  2601  0F4A                     	;# 
  2602  0F4B                     	;# 
  2603  0F4C                     	;# 
  2604  0F4E                     	;# 
  2605  0F4F                     	;# 
  2606  0F50                     	;# 
  2607  0F51                     	;# 
  2608  0F52                     	;# 
  2609  0F53                     	;# 
  2610  0F54                     	;# 
  2611  0F55                     	;# 
  2612  0F56                     	;# 
  2613  0F57                     	;# 
  2614  0F65                     	;# 
  2615  0F68                     	;# 
  2616  0F69                     	;# 
  2617  0F6A                     	;# 
  2618  0F6B                     	;# 
  2619  0FE4                     	;# 
  2620  0FE5                     	;# 
  2621  0FE6                     	;# 
  2622  0FE7                     	;# 
  2623  0FE8                     	;# 
  2624  0FE9                     	;# 
  2625  0FEA                     	;# 
  2626  0FEB                     	;# 
  2627  0FED                     	;# 
  2628  0FEE                     	;# 
  2629  0FEF                     	;# 
  2630  0000                     	;# 
  2631  0001                     	;# 
  2632  0002                     	;# 
  2633  0003                     	;# 
  2634  0004                     	;# 
  2635  0005                     	;# 
  2636  0006                     	;# 
  2637  0007                     	;# 
  2638  0008                     	;# 
  2639  0009                     	;# 
  2640  000A                     	;# 
  2641  000B                     	;# 
  2642  000C                     	;# 
  2643  000D                     	;# 
  2644  000E                     	;# 
  2645  0010                     	;# 
  2646  0011                     	;# 
  2647  0012                     	;# 
  2648  0013                     	;# 
  2649  0016                     	;# 
  2650  0017                     	;# 
  2651  0018                     	;# 
  2652  001C                     	;# 
  2653  001C                     	;# 
  2654  001D                     	;# 
  2655  001D                     	;# 
  2656  001E                     	;# 
  2657  001F                     	;# 
  2658  008C                     	;# 
  2659  008C                     	;# 
  2660  008D                     	;# 
  2661  008E                     	;# 
  2662  008E                     	;# 
  2663  008F                     	;# 
  2664  0090                     	;# 
  2665  0090                     	;# 
  2666  0091                     	;# 
  2667  0093                     	;# 
  2668  0094                     	;# 
  2669  0095                     	;# 
  2670  0096                     	;# 
  2671  0097                     	;# 
  2672  0098                     	;# 
  2673  0099                     	;# 
  2674  009A                     	;# 
  2675  009B                     	;# 
  2676  009C                     	;# 
  2677  009D                     	;# 
  2678  009E                     	;# 
  2679  010C                     	;# 
  2680  010D                     	;# 
  2681  010E                     	;# 
  2682  010E                     	;# 
  2683  010F                     	;# 
  2684  0110                     	;# 
  2685  0110                     	;# 
  2686  0111                     	;# 
  2687  0112                     	;# 
  2688  0112                     	;# 
  2689  0113                     	;# 
  2690  0114                     	;# 
  2691  0114                     	;# 
  2692  0115                     	;# 
  2693  0116                     	;# 
  2694  0116                     	;# 
  2695  0117                     	;# 
  2696  0119                     	;# 
  2697  0119                     	;# 
  2698  0119                     	;# 
  2699  011A                     	;# 
  2700  011A                     	;# 
  2701  011A                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011B                     	;# 
  2706  011B                     	;# 
  2707  011C                     	;# 
  2708  011C                     	;# 
  2709  011C                     	;# 
  2710  011D                     	;# 
  2711  011D                     	;# 
  2712  011D                     	;# 
  2713  011E                     	;# 
  2714  011E                     	;# 
  2715  011E                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  011F                     	;# 
  2720  011F                     	;# 
  2721  018C                     	;# 
  2722  018D                     	;# 
  2723  018E                     	;# 
  2724  018F                     	;# 
  2725  0190                     	;# 
  2726  0191                     	;# 
  2727  0192                     	;# 
  2728  0196                     	;# 
  2729  0197                     	;# 
  2730  0198                     	;# 
  2731  0199                     	;# 
  2732  019A                     	;# 
  2733  019B                     	;# 
  2734  019C                     	;# 
  2735  020C                     	;# 
  2736  020D                     	;# 
  2737  020E                     	;# 
  2738  020F                     	;# 
  2739  020F                     	;# 
  2740  0210                     	;# 
  2741  0210                     	;# 
  2742  0211                     	;# 
  2743  0211                     	;# 
  2744  0212                     	;# 
  2745  0213                     	;# 
  2746  0214                     	;# 
  2747  0215                     	;# 
  2748  0215                     	;# 
  2749  0216                     	;# 
  2750  0216                     	;# 
  2751  0217                     	;# 
  2752  0217                     	;# 
  2753  0218                     	;# 
  2754  0219                     	;# 
  2755  021A                     	;# 
  2756  021B                     	;# 
  2757  021B                     	;# 
  2758  021C                     	;# 
  2759  021C                     	;# 
  2760  021D                     	;# 
  2761  021D                     	;# 
  2762  021E                     	;# 
  2763  021F                     	;# 
  2764  028C                     	;# 
  2765  028C                     	;# 
  2766  028D                     	;# 
  2767  028D                     	;# 
  2768  028E                     	;# 
  2769  028F                     	;# 
  2770  0290                     	;# 
  2771  0290                     	;# 
  2772  0291                     	;# 
  2773  0292                     	;# 
  2774  0292                     	;# 
  2775  0293                     	;# 
  2776  0293                     	;# 
  2777  0294                     	;# 
  2778  0295                     	;# 
  2779  0296                     	;# 
  2780  0296                     	;# 
  2781  0297                     	;# 
  2782  0298                     	;# 
  2783  0298                     	;# 
  2784  0299                     	;# 
  2785  0299                     	;# 
  2786  029A                     	;# 
  2787  029B                     	;# 
  2788  029C                     	;# 
  2789  029C                     	;# 
  2790  029D                     	;# 
  2791  030C                     	;# 
  2792  030C                     	;# 
  2793  030D                     	;# 
  2794  030E                     	;# 
  2795  030F                     	;# 
  2796  0310                     	;# 
  2797  0310                     	;# 
  2798  0311                     	;# 
  2799  0312                     	;# 
  2800  0313                     	;# 
  2801  0314                     	;# 
  2802  0314                     	;# 
  2803  0315                     	;# 
  2804  0316                     	;# 
  2805  0317                     	;# 
  2806  0318                     	;# 
  2807  0318                     	;# 
  2808  0319                     	;# 
  2809  031A                     	;# 
  2810  031B                     	;# 
  2811  031C                     	;# 
  2812  031C                     	;# 
  2813  031D                     	;# 
  2814  031E                     	;# 
  2815  031F                     	;# 
  2816  038C                     	;# 
  2817  038D                     	;# 
  2818  038E                     	;# 
  2819  0390                     	;# 
  2820  0391                     	;# 
  2821  0392                     	;# 
  2822  040C                     	;# 
  2823  040D                     	;# 
  2824  040E                     	;# 
  2825  040F                     	;# 
  2826  0410                     	;# 
  2827  0411                     	;# 
  2828  0416                     	;# 
  2829  0416                     	;# 
  2830  0417                     	;# 
  2831  0418                     	;# 
  2832  0418                     	;# 
  2833  0419                     	;# 
  2834  041A                     	;# 
  2835  041A                     	;# 
  2836  041B                     	;# 
  2837  041C                     	;# 
  2838  041C                     	;# 
  2839  041D                     	;# 
  2840  041E                     	;# 
  2841  041F                     	;# 
  2842  048C                     	;# 
  2843  048C                     	;# 
  2844  048D                     	;# 
  2845  048E                     	;# 
  2846  048F                     	;# 
  2847  048F                     	;# 
  2848  0490                     	;# 
  2849  0491                     	;# 
  2850  0492                     	;# 
  2851  0492                     	;# 
  2852  0493                     	;# 
  2853  0494                     	;# 
  2854  0495                     	;# 
  2855  0495                     	;# 
  2856  0496                     	;# 
  2857  0497                     	;# 
  2858  0498                     	;# 
  2859  0499                     	;# 
  2860  049A                     	;# 
  2861  049B                     	;# 
  2862  049C                     	;# 
  2863  049D                     	;# 
  2864  050C                     	;# 
  2865  050C                     	;# 
  2866  050D                     	;# 
  2867  050E                     	;# 
  2868  050F                     	;# 
  2869  050F                     	;# 
  2870  0510                     	;# 
  2871  0511                     	;# 
  2872  0512                     	;# 
  2873  0512                     	;# 
  2874  0513                     	;# 
  2875  0514                     	;# 
  2876  0515                     	;# 
  2877  0515                     	;# 
  2878  0516                     	;# 
  2879  0517                     	;# 
  2880  0518                     	;# 
  2881  0519                     	;# 
  2882  051A                     	;# 
  2883  051B                     	;# 
  2884  051C                     	;# 
  2885  051D                     	;# 
  2886  058C                     	;# 
  2887  058C                     	;# 
  2888  058D                     	;# 
  2889  058E                     	;# 
  2890  058F                     	;# 
  2891  058F                     	;# 
  2892  0590                     	;# 
  2893  0591                     	;# 
  2894  0592                     	;# 
  2895  0593                     	;# 
  2896  060C                     	;# 
  2897  060D                     	;# 
  2898  060E                     	;# 
  2899  060F                     	;# 
  2900  0610                     	;# 
  2901  0611                     	;# 
  2902  0612                     	;# 
  2903  0613                     	;# 
  2904  0614                     	;# 
  2905  0616                     	;# 
  2906  0617                     	;# 
  2907  0618                     	;# 
  2908  0619                     	;# 
  2909  061A                     	;# 
  2910  061B                     	;# 
  2911  061C                     	;# 
  2912  061D                     	;# 
  2913  061E                     	;# 
  2914  068C                     	;# 
  2915  068D                     	;# 
  2916  068E                     	;# 
  2917  068F                     	;# 
  2918  0690                     	;# 
  2919  0691                     	;# 
  2920  0692                     	;# 
  2921  0693                     	;# 
  2922  0694                     	;# 
  2923  070C                     	;# 
  2924  070D                     	;# 
  2925  070E                     	;# 
  2926  070F                     	;# 
  2927  0710                     	;# 
  2928  0711                     	;# 
  2929  0712                     	;# 
  2930  0713                     	;# 
  2931  0714                     	;# 
  2932  0716                     	;# 
  2933  0717                     	;# 
  2934  0718                     	;# 
  2935  0719                     	;# 
  2936  071A                     	;# 
  2937  071B                     	;# 
  2938  071C                     	;# 
  2939  071D                     	;# 
  2940  071E                     	;# 
  2941  0796                     	;# 
  2942  0797                     	;# 
  2943  0798                     	;# 
  2944  0799                     	;# 
  2945  079A                     	;# 
  2946  079B                     	;# 
  2947  080C                     	;# 
  2948  080D                     	;# 
  2949  080E                     	;# 
  2950  080F                     	;# 
  2951  0810                     	;# 
  2952  0811                     	;# 
  2953  0812                     	;# 
  2954  0813                     	;# 
  2955  0814                     	;# 
  2956  081A                     	;# 
  2957  081B                     	;# 
  2958  081C                     	;# 
  2959  081D                     	;# 
  2960  081E                     	;# 
  2961  081F                     	;# 
  2962  088C                     	;# 
  2963  088D                     	;# 
  2964  088E                     	;# 
  2965  088F                     	;# 
  2966  0890                     	;# 
  2967  0891                     	;# 
  2968  0892                     	;# 
  2969  0893                     	;# 
  2970  0895                     	;# 
  2971  0896                     	;# 
  2972  0897                     	;# 
  2973  0898                     	;# 
  2974  0899                     	;# 
  2975  089A                     	;# 
  2976  089B                     	;# 
  2977  090C                     	;# 
  2978  090E                     	;# 
  2979  090F                     	;# 
  2980  091F                     	;# 
  2981  091F                     	;# 
  2982  098F                     	;# 
  2983  098F                     	;# 
  2984  0990                     	;# 
  2985  0991                     	;# 
  2986  0992                     	;# 
  2987  0993                     	;# 
  2988  0994                     	;# 
  2989  0995                     	;# 
  2990  0996                     	;# 
  2991  0997                     	;# 
  2992  0E0F                     	;# 
  2993  0E10                     	;# 
  2994  0E11                     	;# 
  2995  0E12                     	;# 
  2996  0E13                     	;# 
  2997  0E14                     	;# 
  2998  0E15                     	;# 
  2999  0E16                     	;# 
  3000  0E17                     	;# 
  3001  0E18                     	;# 
  3002  0E19                     	;# 
  3003  0E1A                     	;# 
  3004  0E1B                     	;# 
  3005  0E1C                     	;# 
  3006  0E1D                     	;# 
  3007  0E1E                     	;# 
  3008  0E1F                     	;# 
  3009  0E20                     	;# 
  3010  0E21                     	;# 
  3011  0E22                     	;# 
  3012  0E23                     	;# 
  3013  0E24                     	;# 
  3014  0E25                     	;# 
  3015  0E26                     	;# 
  3016  0E27                     	;# 
  3017  0E28                     	;# 
  3018  0E29                     	;# 
  3019  0E2A                     	;# 
  3020  0E2B                     	;# 
  3021  0E2C                     	;# 
  3022  0E2D                     	;# 
  3023  0E2E                     	;# 
  3024  0E2F                     	;# 
  3025  0E30                     	;# 
  3026  0E31                     	;# 
  3027  0E32                     	;# 
  3028  0E33                     	;# 
  3029  0E34                     	;# 
  3030  0E35                     	;# 
  3031  0E36                     	;# 
  3032  0E37                     	;# 
  3033  0E8F                     	;# 
  3034  0E90                     	;# 
  3035  0E91                     	;# 
  3036  0E92                     	;# 
  3037  0E93                     	;# 
  3038  0E94                     	;# 
  3039  0E95                     	;# 
  3040  0E96                     	;# 
  3041  0E97                     	;# 
  3042  0E9C                     	;# 
  3043  0E9D                     	;# 
  3044  0E9E                     	;# 
  3045  0EA1                     	;# 
  3046  0EA2                     	;# 
  3047  0EA3                     	;# 
  3048  0EA4                     	;# 
  3049  0EA5                     	;# 
  3050  0EA9                     	;# 
  3051  0EAA                     	;# 
  3052  0EAB                     	;# 
  3053  0EAC                     	;# 
  3054  0EB1                     	;# 
  3055  0EB2                     	;# 
  3056  0EB3                     	;# 
  3057  0EB8                     	;# 
  3058  0EB9                     	;# 
  3059  0EBA                     	;# 
  3060  0EBB                     	;# 
  3061  0EBC                     	;# 
  3062  0EBD                     	;# 
  3063  0EBE                     	;# 
  3064  0EC3                     	;# 
  3065  0EC5                     	;# 
  3066  0EC6                     	;# 
  3067  0EC7                     	;# 
  3068  0EC8                     	;# 
  3069  0EC9                     	;# 
  3070  0ECA                     	;# 
  3071  0ECB                     	;# 
  3072  0ECC                     	;# 
  3073  0F10                     	;# 
  3074  0F11                     	;# 
  3075  0F12                     	;# 
  3076  0F13                     	;# 
  3077  0F14                     	;# 
  3078  0F15                     	;# 
  3079  0F16                     	;# 
  3080  0F17                     	;# 
  3081  0F18                     	;# 
  3082  0F19                     	;# 
  3083  0F1A                     	;# 
  3084  0F1B                     	;# 
  3085  0F1C                     	;# 
  3086  0F1D                     	;# 
  3087  0F1E                     	;# 
  3088  0F1F                     	;# 
  3089  0F20                     	;# 
  3090  0F21                     	;# 
  3091  0F22                     	;# 
  3092  0F23                     	;# 
  3093  0F24                     	;# 
  3094  0F25                     	;# 
  3095  0F26                     	;# 
  3096  0F27                     	;# 
  3097  0F38                     	;# 
  3098  0F39                     	;# 
  3099  0F3A                     	;# 
  3100  0F3B                     	;# 
  3101  0F3C                     	;# 
  3102  0F3D                     	;# 
  3103  0F3E                     	;# 
  3104  0F3F                     	;# 
  3105  0F40                     	;# 
  3106  0F41                     	;# 
  3107  0F43                     	;# 
  3108  0F44                     	;# 
  3109  0F45                     	;# 
  3110  0F46                     	;# 
  3111  0F47                     	;# 
  3112  0F48                     	;# 
  3113  0F49                     	;# 
  3114  0F4A                     	;# 
  3115  0F4B                     	;# 
  3116  0F4C                     	;# 
  3117  0F4E                     	;# 
  3118  0F4F                     	;# 
  3119  0F50                     	;# 
  3120  0F51                     	;# 
  3121  0F52                     	;# 
  3122  0F53                     	;# 
  3123  0F54                     	;# 
  3124  0F55                     	;# 
  3125  0F56                     	;# 
  3126  0F57                     	;# 
  3127  0F65                     	;# 
  3128  0F68                     	;# 
  3129  0F69                     	;# 
  3130  0F6A                     	;# 
  3131  0F6B                     	;# 
  3132  0FE4                     	;# 
  3133  0FE5                     	;# 
  3134  0FE6                     	;# 
  3135  0FE7                     	;# 
  3136  0FE8                     	;# 
  3137  0FE9                     	;# 
  3138  0FEA                     	;# 
  3139  0FEB                     	;# 
  3140  0FED                     	;# 
  3141  0FEE                     	;# 
  3142  0FEF                     	;# 
  3143  0000                     	;# 
  3144  0001                     	;# 
  3145  0002                     	;# 
  3146  0003                     	;# 
  3147  0004                     	;# 
  3148  0005                     	;# 
  3149  0006                     	;# 
  3150  0007                     	;# 
  3151  0008                     	;# 
  3152  0009                     	;# 
  3153  000A                     	;# 
  3154  000B                     	;# 
  3155  000C                     	;# 
  3156  000D                     	;# 
  3157  000E                     	;# 
  3158  0010                     	;# 
  3159  0011                     	;# 
  3160  0012                     	;# 
  3161  0013                     	;# 
  3162  0016                     	;# 
  3163  0017                     	;# 
  3164  0018                     	;# 
  3165  001C                     	;# 
  3166  001C                     	;# 
  3167  001D                     	;# 
  3168  001D                     	;# 
  3169  001E                     	;# 
  3170  001F                     	;# 
  3171  008C                     	;# 
  3172  008C                     	;# 
  3173  008D                     	;# 
  3174  008E                     	;# 
  3175  008E                     	;# 
  3176  008F                     	;# 
  3177  0090                     	;# 
  3178  0090                     	;# 
  3179  0091                     	;# 
  3180  0093                     	;# 
  3181  0094                     	;# 
  3182  0095                     	;# 
  3183  0096                     	;# 
  3184  0097                     	;# 
  3185  0098                     	;# 
  3186  0099                     	;# 
  3187  009A                     	;# 
  3188  009B                     	;# 
  3189  009C                     	;# 
  3190  009D                     	;# 
  3191  009E                     	;# 
  3192  010C                     	;# 
  3193  010D                     	;# 
  3194  010E                     	;# 
  3195  010E                     	;# 
  3196  010F                     	;# 
  3197  0110                     	;# 
  3198  0110                     	;# 
  3199  0111                     	;# 
  3200  0112                     	;# 
  3201  0112                     	;# 
  3202  0113                     	;# 
  3203  0114                     	;# 
  3204  0114                     	;# 
  3205  0115                     	;# 
  3206  0116                     	;# 
  3207  0116                     	;# 
  3208  0117                     	;# 
  3209  0119                     	;# 
  3210  0119                     	;# 
  3211  0119                     	;# 
  3212  011A                     	;# 
  3213  011A                     	;# 
  3214  011A                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011B                     	;# 
  3219  011B                     	;# 
  3220  011C                     	;# 
  3221  011C                     	;# 
  3222  011C                     	;# 
  3223  011D                     	;# 
  3224  011D                     	;# 
  3225  011D                     	;# 
  3226  011E                     	;# 
  3227  011E                     	;# 
  3228  011E                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  011F                     	;# 
  3233  011F                     	;# 
  3234  018C                     	;# 
  3235  018D                     	;# 
  3236  018E                     	;# 
  3237  018F                     	;# 
  3238  0190                     	;# 
  3239  0191                     	;# 
  3240  0192                     	;# 
  3241  0196                     	;# 
  3242  0197                     	;# 
  3243  0198                     	;# 
  3244  0199                     	;# 
  3245  019A                     	;# 
  3246  019B                     	;# 
  3247  019C                     	;# 
  3248  020C                     	;# 
  3249  020D                     	;# 
  3250  020E                     	;# 
  3251  020F                     	;# 
  3252  020F                     	;# 
  3253  0210                     	;# 
  3254  0210                     	;# 
  3255  0211                     	;# 
  3256  0211                     	;# 
  3257  0212                     	;# 
  3258  0213                     	;# 
  3259  0214                     	;# 
  3260  0215                     	;# 
  3261  0215                     	;# 
  3262  0216                     	;# 
  3263  0216                     	;# 
  3264  0217                     	;# 
  3265  0217                     	;# 
  3266  0218                     	;# 
  3267  0219                     	;# 
  3268  021A                     	;# 
  3269  021B                     	;# 
  3270  021B                     	;# 
  3271  021C                     	;# 
  3272  021C                     	;# 
  3273  021D                     	;# 
  3274  021D                     	;# 
  3275  021E                     	;# 
  3276  021F                     	;# 
  3277  028C                     	;# 
  3278  028C                     	;# 
  3279  028D                     	;# 
  3280  028D                     	;# 
  3281  028E                     	;# 
  3282  028F                     	;# 
  3283  0290                     	;# 
  3284  0290                     	;# 
  3285  0291                     	;# 
  3286  0292                     	;# 
  3287  0292                     	;# 
  3288  0293                     	;# 
  3289  0293                     	;# 
  3290  0294                     	;# 
  3291  0295                     	;# 
  3292  0296                     	;# 
  3293  0296                     	;# 
  3294  0297                     	;# 
  3295  0298                     	;# 
  3296  0298                     	;# 
  3297  0299                     	;# 
  3298  0299                     	;# 
  3299  029A                     	;# 
  3300  029B                     	;# 
  3301  029C                     	;# 
  3302  029C                     	;# 
  3303  029D                     	;# 
  3304  030C                     	;# 
  3305  030C                     	;# 
  3306  030D                     	;# 
  3307  030E                     	;# 
  3308  030F                     	;# 
  3309  0310                     	;# 
  3310  0310                     	;# 
  3311  0311                     	;# 
  3312  0312                     	;# 
  3313  0313                     	;# 
  3314  0314                     	;# 
  3315  0314                     	;# 
  3316  0315                     	;# 
  3317  0316                     	;# 
  3318  0317                     	;# 
  3319  0318                     	;# 
  3320  0318                     	;# 
  3321  0319                     	;# 
  3322  031A                     	;# 
  3323  031B                     	;# 
  3324  031C                     	;# 
  3325  031C                     	;# 
  3326  031D                     	;# 
  3327  031E                     	;# 
  3328  031F                     	;# 
  3329  038C                     	;# 
  3330  038D                     	;# 
  3331  038E                     	;# 
  3332  0390                     	;# 
  3333  0391                     	;# 
  3334  0392                     	;# 
  3335  040C                     	;# 
  3336  040D                     	;# 
  3337  040E                     	;# 
  3338  040F                     	;# 
  3339  0410                     	;# 
  3340  0411                     	;# 
  3341  0416                     	;# 
  3342  0416                     	;# 
  3343  0417                     	;# 
  3344  0418                     	;# 
  3345  0418                     	;# 
  3346  0419                     	;# 
  3347  041A                     	;# 
  3348  041A                     	;# 
  3349  041B                     	;# 
  3350  041C                     	;# 
  3351  041C                     	;# 
  3352  041D                     	;# 
  3353  041E                     	;# 
  3354  041F                     	;# 
  3355  048C                     	;# 
  3356  048C                     	;# 
  3357  048D                     	;# 
  3358  048E                     	;# 
  3359  048F                     	;# 
  3360  048F                     	;# 
  3361  0490                     	;# 
  3362  0491                     	;# 
  3363  0492                     	;# 
  3364  0492                     	;# 
  3365  0493                     	;# 
  3366  0494                     	;# 
  3367  0495                     	;# 
  3368  0495                     	;# 
  3369  0496                     	;# 
  3370  0497                     	;# 
  3371  0498                     	;# 
  3372  0499                     	;# 
  3373  049A                     	;# 
  3374  049B                     	;# 
  3375  049C                     	;# 
  3376  049D                     	;# 
  3377  050C                     	;# 
  3378  050C                     	;# 
  3379  050D                     	;# 
  3380  050E                     	;# 
  3381  050F                     	;# 
  3382  050F                     	;# 
  3383  0510                     	;# 
  3384  0511                     	;# 
  3385  0512                     	;# 
  3386  0512                     	;# 
  3387  0513                     	;# 
  3388  0514                     	;# 
  3389  0515                     	;# 
  3390  0515                     	;# 
  3391  0516                     	;# 
  3392  0517                     	;# 
  3393  0518                     	;# 
  3394  0519                     	;# 
  3395  051A                     	;# 
  3396  051B                     	;# 
  3397  051C                     	;# 
  3398  051D                     	;# 
  3399  058C                     	;# 
  3400  058C                     	;# 
  3401  058D                     	;# 
  3402  058E                     	;# 
  3403  058F                     	;# 
  3404  058F                     	;# 
  3405  0590                     	;# 
  3406  0591                     	;# 
  3407  0592                     	;# 
  3408  0593                     	;# 
  3409  060C                     	;# 
  3410  060D                     	;# 
  3411  060E                     	;# 
  3412  060F                     	;# 
  3413  0610                     	;# 
  3414  0611                     	;# 
  3415  0612                     	;# 
  3416  0613                     	;# 
  3417  0614                     	;# 
  3418  0616                     	;# 
  3419  0617                     	;# 
  3420  0618                     	;# 
  3421  0619                     	;# 
  3422  061A                     	;# 
  3423  061B                     	;# 
  3424  061C                     	;# 
  3425  061D                     	;# 
  3426  061E                     	;# 
  3427  068C                     	;# 
  3428  068D                     	;# 
  3429  068E                     	;# 
  3430  068F                     	;# 
  3431  0690                     	;# 
  3432  0691                     	;# 
  3433  0692                     	;# 
  3434  0693                     	;# 
  3435  0694                     	;# 
  3436  070C                     	;# 
  3437  070D                     	;# 
  3438  070E                     	;# 
  3439  070F                     	;# 
  3440  0710                     	;# 
  3441  0711                     	;# 
  3442  0712                     	;# 
  3443  0713                     	;# 
  3444  0714                     	;# 
  3445  0716                     	;# 
  3446  0717                     	;# 
  3447  0718                     	;# 
  3448  0719                     	;# 
  3449  071A                     	;# 
  3450  071B                     	;# 
  3451  071C                     	;# 
  3452  071D                     	;# 
  3453  071E                     	;# 
  3454  0796                     	;# 
  3455  0797                     	;# 
  3456  0798                     	;# 
  3457  0799                     	;# 
  3458  079A                     	;# 
  3459  079B                     	;# 
  3460  080C                     	;# 
  3461  080D                     	;# 
  3462  080E                     	;# 
  3463  080F                     	;# 
  3464  0810                     	;# 
  3465  0811                     	;# 
  3466  0812                     	;# 
  3467  0813                     	;# 
  3468  0814                     	;# 
  3469  081A                     	;# 
  3470  081B                     	;# 
  3471  081C                     	;# 
  3472  081D                     	;# 
  3473  081E                     	;# 
  3474  081F                     	;# 
  3475  088C                     	;# 
  3476  088D                     	;# 
  3477  088E                     	;# 
  3478  088F                     	;# 
  3479  0890                     	;# 
  3480  0891                     	;# 
  3481  0892                     	;# 
  3482  0893                     	;# 
  3483  0895                     	;# 
  3484  0896                     	;# 
  3485  0897                     	;# 
  3486  0898                     	;# 
  3487  0899                     	;# 
  3488  089A                     	;# 
  3489  089B                     	;# 
  3490  090C                     	;# 
  3491  090E                     	;# 
  3492  090F                     	;# 
  3493  091F                     	;# 
  3494  091F                     	;# 
  3495  098F                     	;# 
  3496  098F                     	;# 
  3497  0990                     	;# 
  3498  0991                     	;# 
  3499  0992                     	;# 
  3500  0993                     	;# 
  3501  0994                     	;# 
  3502  0995                     	;# 
  3503  0996                     	;# 
  3504  0997                     	;# 
  3505  0E0F                     	;# 
  3506  0E10                     	;# 
  3507  0E11                     	;# 
  3508  0E12                     	;# 
  3509  0E13                     	;# 
  3510  0E14                     	;# 
  3511  0E15                     	;# 
  3512  0E16                     	;# 
  3513  0E17                     	;# 
  3514  0E18                     	;# 
  3515  0E19                     	;# 
  3516  0E1A                     	;# 
  3517  0E1B                     	;# 
  3518  0E1C                     	;# 
  3519  0E1D                     	;# 
  3520  0E1E                     	;# 
  3521  0E1F                     	;# 
  3522  0E20                     	;# 
  3523  0E21                     	;# 
  3524  0E22                     	;# 
  3525  0E23                     	;# 
  3526  0E24                     	;# 
  3527  0E25                     	;# 
  3528  0E26                     	;# 
  3529  0E27                     	;# 
  3530  0E28                     	;# 
  3531  0E29                     	;# 
  3532  0E2A                     	;# 
  3533  0E2B                     	;# 
  3534  0E2C                     	;# 
  3535  0E2D                     	;# 
  3536  0E2E                     	;# 
  3537  0E2F                     	;# 
  3538  0E30                     	;# 
  3539  0E31                     	;# 
  3540  0E32                     	;# 
  3541  0E33                     	;# 
  3542  0E34                     	;# 
  3543  0E35                     	;# 
  3544  0E36                     	;# 
  3545  0E37                     	;# 
  3546  0E8F                     	;# 
  3547  0E90                     	;# 
  3548  0E91                     	;# 
  3549  0E92                     	;# 
  3550  0E93                     	;# 
  3551  0E94                     	;# 
  3552  0E95                     	;# 
  3553  0E96                     	;# 
  3554  0E97                     	;# 
  3555  0E9C                     	;# 
  3556  0E9D                     	;# 
  3557  0E9E                     	;# 
  3558  0EA1                     	;# 
  3559  0EA2                     	;# 
  3560  0EA3                     	;# 
  3561  0EA4                     	;# 
  3562  0EA5                     	;# 
  3563  0EA9                     	;# 
  3564  0EAA                     	;# 
  3565  0EAB                     	;# 
  3566  0EAC                     	;# 
  3567  0EB1                     	;# 
  3568  0EB2                     	;# 
  3569  0EB3                     	;# 
  3570  0EB8                     	;# 
  3571  0EB9                     	;# 
  3572  0EBA                     	;# 
  3573  0EBB                     	;# 
  3574  0EBC                     	;# 
  3575  0EBD                     	;# 
  3576  0EBE                     	;# 
  3577  0EC3                     	;# 
  3578  0EC5                     	;# 
  3579  0EC6                     	;# 
  3580  0EC7                     	;# 
  3581  0EC8                     	;# 
  3582  0EC9                     	;# 
  3583  0ECA                     	;# 
  3584  0ECB                     	;# 
  3585  0ECC                     	;# 
  3586  0F10                     	;# 
  3587  0F11                     	;# 
  3588  0F12                     	;# 
  3589  0F13                     	;# 
  3590  0F14                     	;# 
  3591  0F15                     	;# 
  3592  0F16                     	;# 
  3593  0F17                     	;# 
  3594  0F18                     	;# 
  3595  0F19                     	;# 
  3596  0F1A                     	;# 
  3597  0F1B                     	;# 
  3598  0F1C                     	;# 
  3599  0F1D                     	;# 
  3600  0F1E                     	;# 
  3601  0F1F                     	;# 
  3602  0F20                     	;# 
  3603  0F21                     	;# 
  3604  0F22                     	;# 
  3605  0F23                     	;# 
  3606  0F24                     	;# 
  3607  0F25                     	;# 
  3608  0F26                     	;# 
  3609  0F27                     	;# 
  3610  0F38                     	;# 
  3611  0F39                     	;# 
  3612  0F3A                     	;# 
  3613  0F3B                     	;# 
  3614  0F3C                     	;# 
  3615  0F3D                     	;# 
  3616  0F3E                     	;# 
  3617  0F3F                     	;# 
  3618  0F40                     	;# 
  3619  0F41                     	;# 
  3620  0F43                     	;# 
  3621  0F44                     	;# 
  3622  0F45                     	;# 
  3623  0F46                     	;# 
  3624  0F47                     	;# 
  3625  0F48                     	;# 
  3626  0F49                     	;# 
  3627  0F4A                     	;# 
  3628  0F4B                     	;# 
  3629  0F4C                     	;# 
  3630  0F4E                     	;# 
  3631  0F4F                     	;# 
  3632  0F50                     	;# 
  3633  0F51                     	;# 
  3634  0F52                     	;# 
  3635  0F53                     	;# 
  3636  0F54                     	;# 
  3637  0F55                     	;# 
  3638  0F56                     	;# 
  3639  0F57                     	;# 
  3640  0F65                     	;# 
  3641  0F68                     	;# 
  3642  0F69                     	;# 
  3643  0F6A                     	;# 
  3644  0F6B                     	;# 
  3645  0FE4                     	;# 
  3646  0FE5                     	;# 
  3647  0FE6                     	;# 
  3648  0FE7                     	;# 
  3649  0FE8                     	;# 
  3650  0FE9                     	;# 
  3651  0FEA                     	;# 
  3652  0FEB                     	;# 
  3653  0FED                     	;# 
  3654  0FEE                     	;# 
  3655  0FEF                     	;# 
  3656  0000                     	;# 
  3657  0001                     	;# 
  3658  0002                     	;# 
  3659  0003                     	;# 
  3660  0004                     	;# 
  3661  0005                     	;# 
  3662  0006                     	;# 
  3663  0007                     	;# 
  3664  0008                     	;# 
  3665  0009                     	;# 
  3666  000A                     	;# 
  3667  000B                     	;# 
  3668  000C                     	;# 
  3669  000D                     	;# 
  3670  000E                     	;# 
  3671  0010                     	;# 
  3672  0011                     	;# 
  3673  0012                     	;# 
  3674  0013                     	;# 
  3675  0016                     	;# 
  3676  0017                     	;# 
  3677  0018                     	;# 
  3678  001C                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008C                     	;# 
  3686  008D                     	;# 
  3687  008E                     	;# 
  3688  008E                     	;# 
  3689  008F                     	;# 
  3690  0090                     	;# 
  3691  0090                     	;# 
  3692  0091                     	;# 
  3693  0093                     	;# 
  3694  0094                     	;# 
  3695  0095                     	;# 
  3696  0096                     	;# 
  3697  0097                     	;# 
  3698  0098                     	;# 
  3699  0099                     	;# 
  3700  009A                     	;# 
  3701  009B                     	;# 
  3702  009C                     	;# 
  3703  009D                     	;# 
  3704  009E                     	;# 
  3705  010C                     	;# 
  3706  010D                     	;# 
  3707  010E                     	;# 
  3708  010E                     	;# 
  3709  010F                     	;# 
  3710  0110                     	;# 
  3711  0110                     	;# 
  3712  0111                     	;# 
  3713  0112                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0114                     	;# 
  3718  0115                     	;# 
  3719  0116                     	;# 
  3720  0116                     	;# 
  3721  0117                     	;# 
  3722  0119                     	;# 
  3723  0119                     	;# 
  3724  0119                     	;# 
  3725  011A                     	;# 
  3726  011A                     	;# 
  3727  011A                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011B                     	;# 
  3732  011B                     	;# 
  3733  011C                     	;# 
  3734  011C                     	;# 
  3735  011C                     	;# 
  3736  011D                     	;# 
  3737  011D                     	;# 
  3738  011D                     	;# 
  3739  011E                     	;# 
  3740  011E                     	;# 
  3741  011E                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  011F                     	;# 
  3746  011F                     	;# 
  3747  018C                     	;# 
  3748  018D                     	;# 
  3749  018E                     	;# 
  3750  018F                     	;# 
  3751  0190                     	;# 
  3752  0191                     	;# 
  3753  0192                     	;# 
  3754  0196                     	;# 
  3755  0197                     	;# 
  3756  0198                     	;# 
  3757  0199                     	;# 
  3758  019A                     	;# 
  3759  019B                     	;# 
  3760  019C                     	;# 
  3761  020C                     	;# 
  3762  020D                     	;# 
  3763  020E                     	;# 
  3764  020F                     	;# 
  3765  020F                     	;# 
  3766  0210                     	;# 
  3767  0210                     	;# 
  3768  0211                     	;# 
  3769  0211                     	;# 
  3770  0212                     	;# 
  3771  0213                     	;# 
  3772  0214                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0216                     	;# 
  3776  0216                     	;# 
  3777  0217                     	;# 
  3778  0217                     	;# 
  3779  0218                     	;# 
  3780  0219                     	;# 
  3781  021A                     	;# 
  3782  021B                     	;# 
  3783  021B                     	;# 
  3784  021C                     	;# 
  3785  021C                     	;# 
  3786  021D                     	;# 
  3787  021D                     	;# 
  3788  021E                     	;# 
  3789  021F                     	;# 
  3790  028C                     	;# 
  3791  028C                     	;# 
  3792  028D                     	;# 
  3793  028D                     	;# 
  3794  028E                     	;# 
  3795  028F                     	;# 
  3796  0290                     	;# 
  3797  0290                     	;# 
  3798  0291                     	;# 
  3799  0292                     	;# 
  3800  0292                     	;# 
  3801  0293                     	;# 
  3802  0293                     	;# 
  3803  0294                     	;# 
  3804  0295                     	;# 
  3805  0296                     	;# 
  3806  0296                     	;# 
  3807  0297                     	;# 
  3808  0298                     	;# 
  3809  0298                     	;# 
  3810  0299                     	;# 
  3811  0299                     	;# 
  3812  029A                     	;# 
  3813  029B                     	;# 
  3814  029C                     	;# 
  3815  029C                     	;# 
  3816  029D                     	;# 
  3817  030C                     	;# 
  3818  030C                     	;# 
  3819  030D                     	;# 
  3820  030E                     	;# 
  3821  030F                     	;# 
  3822  0310                     	;# 
  3823  0310                     	;# 
  3824  0311                     	;# 
  3825  0312                     	;# 
  3826  0313                     	;# 
  3827  0314                     	;# 
  3828  0314                     	;# 
  3829  0315                     	;# 
  3830  0316                     	;# 
  3831  0317                     	;# 
  3832  0318                     	;# 
  3833  0318                     	;# 
  3834  0319                     	;# 
  3835  031A                     	;# 
  3836  031B                     	;# 
  3837  031C                     	;# 
  3838  031C                     	;# 
  3839  031D                     	;# 
  3840  031E                     	;# 
  3841  031F                     	;# 
  3842  038C                     	;# 
  3843  038D                     	;# 
  3844  038E                     	;# 
  3845  0390                     	;# 
  3846  0391                     	;# 
  3847  0392                     	;# 
  3848  040C                     	;# 
  3849  040D                     	;# 
  3850  040E                     	;# 
  3851  040F                     	;# 
  3852  0410                     	;# 
  3853  0411                     	;# 
  3854  0416                     	;# 
  3855  0416                     	;# 
  3856  0417                     	;# 
  3857  0418                     	;# 
  3858  0418                     	;# 
  3859  0419                     	;# 
  3860  041A                     	;# 
  3861  041A                     	;# 
  3862  041B                     	;# 
  3863  041C                     	;# 
  3864  041C                     	;# 
  3865  041D                     	;# 
  3866  041E                     	;# 
  3867  041F                     	;# 
  3868  048C                     	;# 
  3869  048C                     	;# 
  3870  048D                     	;# 
  3871  048E                     	;# 
  3872  048F                     	;# 
  3873  048F                     	;# 
  3874  0490                     	;# 
  3875  0491                     	;# 
  3876  0492                     	;# 
  3877  0492                     	;# 
  3878  0493                     	;# 
  3879  0494                     	;# 
  3880  0495                     	;# 
  3881  0495                     	;# 
  3882  0496                     	;# 
  3883  0497                     	;# 
  3884  0498                     	;# 
  3885  0499                     	;# 
  3886  049A                     	;# 
  3887  049B                     	;# 
  3888  049C                     	;# 
  3889  049D                     	;# 
  3890  050C                     	;# 
  3891  050C                     	;# 
  3892  050D                     	;# 
  3893  050E                     	;# 
  3894  050F                     	;# 
  3895  050F                     	;# 
  3896  0510                     	;# 
  3897  0511                     	;# 
  3898  0512                     	;# 
  3899  0512                     	;# 
  3900  0513                     	;# 
  3901  0514                     	;# 
  3902  0515                     	;# 
  3903  0515                     	;# 
  3904  0516                     	;# 
  3905  0517                     	;# 
  3906  0518                     	;# 
  3907  0519                     	;# 
  3908  051A                     	;# 
  3909  051B                     	;# 
  3910  051C                     	;# 
  3911  051D                     	;# 
  3912  058C                     	;# 
  3913  058C                     	;# 
  3914  058D                     	;# 
  3915  058E                     	;# 
  3916  058F                     	;# 
  3917  058F                     	;# 
  3918  0590                     	;# 
  3919  0591                     	;# 
  3920  0592                     	;# 
  3921  0593                     	;# 
  3922  060C                     	;# 
  3923  060D                     	;# 
  3924  060E                     	;# 
  3925  060F                     	;# 
  3926  0610                     	;# 
  3927  0611                     	;# 
  3928  0612                     	;# 
  3929  0613                     	;# 
  3930  0614                     	;# 
  3931  0616                     	;# 
  3932  0617                     	;# 
  3933  0618                     	;# 
  3934  0619                     	;# 
  3935  061A                     	;# 
  3936  061B                     	;# 
  3937  061C                     	;# 
  3938  061D                     	;# 
  3939  061E                     	;# 
  3940  068C                     	;# 
  3941  068D                     	;# 
  3942  068E                     	;# 
  3943  068F                     	;# 
  3944  0690                     	;# 
  3945  0691                     	;# 
  3946  0692                     	;# 
  3947  0693                     	;# 
  3948  0694                     	;# 
  3949  070C                     	;# 
  3950  070D                     	;# 
  3951  070E                     	;# 
  3952  070F                     	;# 
  3953  0710                     	;# 
  3954  0711                     	;# 
  3955  0712                     	;# 
  3956  0713                     	;# 
  3957  0714                     	;# 
  3958  0716                     	;# 
  3959  0717                     	;# 
  3960  0718                     	;# 
  3961  0719                     	;# 
  3962  071A                     	;# 
  3963  071B                     	;# 
  3964  071C                     	;# 
  3965  071D                     	;# 
  3966  071E                     	;# 
  3967  0796                     	;# 
  3968  0797                     	;# 
  3969  0798                     	;# 
  3970  0799                     	;# 
  3971  079A                     	;# 
  3972  079B                     	;# 
  3973  080C                     	;# 
  3974  080D                     	;# 
  3975  080E                     	;# 
  3976  080F                     	;# 
  3977  0810                     	;# 
  3978  0811                     	;# 
  3979  0812                     	;# 
  3980  0813                     	;# 
  3981  0814                     	;# 
  3982  081A                     	;# 
  3983  081B                     	;# 
  3984  081C                     	;# 
  3985  081D                     	;# 
  3986  081E                     	;# 
  3987  081F                     	;# 
  3988  088C                     	;# 
  3989  088D                     	;# 
  3990  088E                     	;# 
  3991  088F                     	;# 
  3992  0890                     	;# 
  3993  0891                     	;# 
  3994  0892                     	;# 
  3995  0893                     	;# 
  3996  0895                     	;# 
  3997  0896                     	;# 
  3998  0897                     	;# 
  3999  0898                     	;# 
  4000  0899                     	;# 
  4001  089A                     	;# 
  4002  089B                     	;# 
  4003  090C                     	;# 
  4004  090E                     	;# 
  4005  090F                     	;# 
  4006  091F                     	;# 
  4007  091F                     	;# 
  4008  098F                     	;# 
  4009  098F                     	;# 
  4010  0990                     	;# 
  4011  0991                     	;# 
  4012  0992                     	;# 
  4013  0993                     	;# 
  4014  0994                     	;# 
  4015  0995                     	;# 
  4016  0996                     	;# 
  4017  0997                     	;# 
  4018  0E0F                     	;# 
  4019  0E10                     	;# 
  4020  0E11                     	;# 
  4021  0E12                     	;# 
  4022  0E13                     	;# 
  4023  0E14                     	;# 
  4024  0E15                     	;# 
  4025  0E16                     	;# 
  4026  0E17                     	;# 
  4027  0E18                     	;# 
  4028  0E19                     	;# 
  4029  0E1A                     	;# 
  4030  0E1B                     	;# 
  4031  0E1C                     	;# 
  4032  0E1D                     	;# 
  4033  0E1E                     	;# 
  4034  0E1F                     	;# 
  4035  0E20                     	;# 
  4036  0E21                     	;# 
  4037  0E22                     	;# 
  4038  0E23                     	;# 
  4039  0E24                     	;# 
  4040  0E25                     	;# 
  4041  0E26                     	;# 
  4042  0E27                     	;# 
  4043  0E28                     	;# 
  4044  0E29                     	;# 
  4045  0E2A                     	;# 
  4046  0E2B                     	;# 
  4047  0E2C                     	;# 
  4048  0E2D                     	;# 
  4049  0E2E                     	;# 
  4050  0E2F                     	;# 
  4051  0E30                     	;# 
  4052  0E31                     	;# 
  4053  0E32                     	;# 
  4054  0E33                     	;# 
  4055  0E34                     	;# 
  4056  0E35                     	;# 
  4057  0E36                     	;# 
  4058  0E37                     	;# 
  4059  0E8F                     	;# 
  4060  0E90                     	;# 
  4061  0E91                     	;# 
  4062  0E92                     	;# 
  4063  0E93                     	;# 
  4064  0E94                     	;# 
  4065  0E95                     	;# 
  4066  0E96                     	;# 
  4067  0E97                     	;# 
  4068  0E9C                     	;# 
  4069  0E9D                     	;# 
  4070  0E9E                     	;# 
  4071  0EA1                     	;# 
  4072  0EA2                     	;# 
  4073  0EA3                     	;# 
  4074  0EA4                     	;# 
  4075  0EA5                     	;# 
  4076  0EA9                     	;# 
  4077  0EAA                     	;# 
  4078  0EAB                     	;# 
  4079  0EAC                     	;# 
  4080  0EB1                     	;# 
  4081  0EB2                     	;# 
  4082  0EB3                     	;# 
  4083  0EB8                     	;# 
  4084  0EB9                     	;# 
  4085  0EBA                     	;# 
  4086  0EBB                     	;# 
  4087  0EBC                     	;# 
  4088  0EBD                     	;# 
  4089  0EBE                     	;# 
  4090  0EC3                     	;# 
  4091  0EC5                     	;# 
  4092  0EC6                     	;# 
  4093  0EC7                     	;# 
  4094  0EC8                     	;# 
  4095  0EC9                     	;# 
  4096  0ECA                     	;# 
  4097  0ECB                     	;# 
  4098  0ECC                     	;# 
  4099  0F10                     	;# 
  4100  0F11                     	;# 
  4101  0F12                     	;# 
  4102  0F13                     	;# 
  4103  0F14                     	;# 
  4104  0F15                     	;# 
  4105  0F16                     	;# 
  4106  0F17                     	;# 
  4107  0F18                     	;# 
  4108  0F19                     	;# 
  4109  0F1A                     	;# 
  4110  0F1B                     	;# 
  4111  0F1C                     	;# 
  4112  0F1D                     	;# 
  4113  0F1E                     	;# 
  4114  0F1F                     	;# 
  4115  0F20                     	;# 
  4116  0F21                     	;# 
  4117  0F22                     	;# 
  4118  0F23                     	;# 
  4119  0F24                     	;# 
  4120  0F25                     	;# 
  4121  0F26                     	;# 
  4122  0F27                     	;# 
  4123  0F38                     	;# 
  4124  0F39                     	;# 
  4125  0F3A                     	;# 
  4126  0F3B                     	;# 
  4127  0F3C                     	;# 
  4128  0F3D                     	;# 
  4129  0F3E                     	;# 
  4130  0F3F                     	;# 
  4131  0F40                     	;# 
  4132  0F41                     	;# 
  4133  0F43                     	;# 
  4134  0F44                     	;# 
  4135  0F45                     	;# 
  4136  0F46                     	;# 
  4137  0F47                     	;# 
  4138  0F48                     	;# 
  4139  0F49                     	;# 
  4140  0F4A                     	;# 
  4141  0F4B                     	;# 
  4142  0F4C                     	;# 
  4143  0F4E                     	;# 
  4144  0F4F                     	;# 
  4145  0F50                     	;# 
  4146  0F51                     	;# 
  4147  0F52                     	;# 
  4148  0F53                     	;# 
  4149  0F54                     	;# 
  4150  0F55                     	;# 
  4151  0F56                     	;# 
  4152  0F57                     	;# 
  4153  0F65                     	;# 
  4154  0F68                     	;# 
  4155  0F69                     	;# 
  4156  0F6A                     	;# 
  4157  0F6B                     	;# 
  4158  0FE4                     	;# 
  4159  0FE5                     	;# 
  4160  0FE6                     	;# 
  4161  0FE7                     	;# 
  4162  0FE8                     	;# 
  4163  0FE9                     	;# 
  4164  0FEA                     	;# 
  4165  0FEB                     	;# 
  4166  0FED                     	;# 
  4167  0FEE                     	;# 
  4168  0FEF                     	;# 
  4169  0000                     	;# 
  4170  0001                     	;# 
  4171  0002                     	;# 
  4172  0003                     	;# 
  4173  0004                     	;# 
  4174  0005                     	;# 
  4175  0006                     	;# 
  4176  0007                     	;# 
  4177  0008                     	;# 
  4178  0009                     	;# 
  4179  000A                     	;# 
  4180  000B                     	;# 
  4181  000C                     	;# 
  4182  000D                     	;# 
  4183  000E                     	;# 
  4184  0010                     	;# 
  4185  0011                     	;# 
  4186  0012                     	;# 
  4187  0013                     	;# 
  4188  0016                     	;# 
  4189  0017                     	;# 
  4190  0018                     	;# 
  4191  001C                     	;# 
  4192  001C                     	;# 
  4193  001D                     	;# 
  4194  001D                     	;# 
  4195  001E                     	;# 
  4196  001F                     	;# 
  4197  008C                     	;# 
  4198  008C                     	;# 
  4199  008D                     	;# 
  4200  008E                     	;# 
  4201  008E                     	;# 
  4202  008F                     	;# 
  4203  0090                     	;# 
  4204  0090                     	;# 
  4205  0091                     	;# 
  4206  0093                     	;# 
  4207  0094                     	;# 
  4208  0095                     	;# 
  4209  0096                     	;# 
  4210  0097                     	;# 
  4211  0098                     	;# 
  4212  0099                     	;# 
  4213  009A                     	;# 
  4214  009B                     	;# 
  4215  009C                     	;# 
  4216  009D                     	;# 
  4217  009E                     	;# 
  4218  010C                     	;# 
  4219  010D                     	;# 
  4220  010E                     	;# 
  4221  010E                     	;# 
  4222  010F                     	;# 
  4223  0110                     	;# 
  4224  0110                     	;# 
  4225  0111                     	;# 
  4226  0112                     	;# 
  4227  0112                     	;# 
  4228  0113                     	;# 
  4229  0114                     	;# 
  4230  0114                     	;# 
  4231  0115                     	;# 
  4232  0116                     	;# 
  4233  0116                     	;# 
  4234  0117                     	;# 
  4235  0119                     	;# 
  4236  0119                     	;# 
  4237  0119                     	;# 
  4238  011A                     	;# 
  4239  011A                     	;# 
  4240  011A                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011B                     	;# 
  4244  011B                     	;# 
  4245  011B                     	;# 
  4246  011C                     	;# 
  4247  011C                     	;# 
  4248  011C                     	;# 
  4249  011D                     	;# 
  4250  011D                     	;# 
  4251  011D                     	;# 
  4252  011E                     	;# 
  4253  011E                     	;# 
  4254  011E                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  011F                     	;# 
  4258  011F                     	;# 
  4259  011F                     	;# 
  4260  018C                     	;# 
  4261  018D                     	;# 
  4262  018E                     	;# 
  4263  018F                     	;# 
  4264  0190                     	;# 
  4265  0191                     	;# 
  4266  0192                     	;# 
  4267  0196                     	;# 
  4268  0197                     	;# 
  4269  0198                     	;# 
  4270  0199                     	;# 
  4271  019A                     	;# 
  4272  019B                     	;# 
  4273  019C                     	;# 
  4274  020C                     	;# 
  4275  020D                     	;# 
  4276  020E                     	;# 
  4277  020F                     	;# 
  4278  020F                     	;# 
  4279  0210                     	;# 
  4280  0210                     	;# 
  4281  0211                     	;# 
  4282  0211                     	;# 
  4283  0212                     	;# 
  4284  0213                     	;# 
  4285  0214                     	;# 
  4286  0215                     	;# 
  4287  0215                     	;# 
  4288  0216                     	;# 
  4289  0216                     	;# 
  4290  0217                     	;# 
  4291  0217                     	;# 
  4292  0218                     	;# 
  4293  0219                     	;# 
  4294  021A                     	;# 
  4295  021B                     	;# 
  4296  021B                     	;# 
  4297  021C                     	;# 
  4298  021C                     	;# 
  4299  021D                     	;# 
  4300  021D                     	;# 
  4301  021E                     	;# 
  4302  021F                     	;# 
  4303  028C                     	;# 
  4304  028C                     	;# 
  4305  028D                     	;# 
  4306  028D                     	;# 
  4307  028E                     	;# 
  4308  028F                     	;# 
  4309  0290                     	;# 
  4310  0290                     	;# 
  4311  0291                     	;# 
  4312  0292                     	;# 
  4313  0292                     	;# 
  4314  0293                     	;# 
  4315  0293                     	;# 
  4316  0294                     	;# 
  4317  0295                     	;# 
  4318  0296                     	;# 
  4319  0296                     	;# 
  4320  0297                     	;# 
  4321  0298                     	;# 
  4322  0298                     	;# 
  4323  0299                     	;# 
  4324  0299                     	;# 
  4325  029A                     	;# 
  4326  029B                     	;# 
  4327  029C                     	;# 
  4328  029C                     	;# 
  4329  029D                     	;# 
  4330  030C                     	;# 
  4331  030C                     	;# 
  4332  030D                     	;# 
  4333  030E                     	;# 
  4334  030F                     	;# 
  4335  0310                     	;# 
  4336  0310                     	;# 
  4337  0311                     	;# 
  4338  0312                     	;# 
  4339  0313                     	;# 
  4340  0314                     	;# 
  4341  0314                     	;# 
  4342  0315                     	;# 
  4343  0316                     	;# 
  4344  0317                     	;# 
  4345  0318                     	;# 
  4346  0318                     	;# 
  4347  0319                     	;# 
  4348  031A                     	;# 
  4349  031B                     	;# 
  4350  031C                     	;# 
  4351  031C                     	;# 
  4352  031D                     	;# 
  4353  031E                     	;# 
  4354  031F                     	;# 
  4355  038C                     	;# 
  4356  038D                     	;# 
  4357  038E                     	;# 
  4358  0390                     	;# 
  4359  0391                     	;# 
  4360  0392                     	;# 
  4361  040C                     	;# 
  4362  040D                     	;# 
  4363  040E                     	;# 
  4364  040F                     	;# 
  4365  0410                     	;# 
  4366  0411                     	;# 
  4367  0416                     	;# 
  4368  0416                     	;# 
  4369  0417                     	;# 
  4370  0418                     	;# 
  4371  0418                     	;# 
  4372  0419                     	;# 
  4373  041A                     	;# 
  4374  041A                     	;# 
  4375  041B                     	;# 
  4376  041C                     	;# 
  4377  041C                     	;# 
  4378  041D                     	;# 
  4379  041E                     	;# 
  4380  041F                     	;# 
  4381  048C                     	;# 
  4382  048C                     	;# 
  4383  048D                     	;# 
  4384  048E                     	;# 
  4385  048F                     	;# 
  4386  048F                     	;# 
  4387  0490                     	;# 
  4388  0491                     	;# 
  4389  0492                     	;# 
  4390  0492                     	;# 
  4391  0493                     	;# 
  4392  0494                     	;# 
  4393  0495                     	;# 
  4394  0495                     	;# 
  4395  0496                     	;# 
  4396  0497                     	;# 
  4397  0498                     	;# 
  4398  0499                     	;# 
  4399  049A                     	;# 
  4400  049B                     	;# 
  4401  049C                     	;# 
  4402  049D                     	;# 
  4403  050C                     	;# 
  4404  050C                     	;# 
  4405  050D                     	;# 
  4406  050E                     	;# 
  4407  050F                     	;# 
  4408  050F                     	;# 
  4409  0510                     	;# 
  4410  0511                     	;# 
  4411  0512                     	;# 
  4412  0512                     	;# 
  4413  0513                     	;# 
  4414  0514                     	;# 
  4415  0515                     	;# 
  4416  0515                     	;# 
  4417  0516                     	;# 
  4418  0517                     	;# 
  4419  0518                     	;# 
  4420  0519                     	;# 
  4421  051A                     	;# 
  4422  051B                     	;# 
  4423  051C                     	;# 
  4424  051D                     	;# 
  4425  058C                     	;# 
  4426  058C                     	;# 
  4427  058D                     	;# 
  4428  058E                     	;# 
  4429  058F                     	;# 
  4430  058F                     	;# 
  4431  0590                     	;# 
  4432  0591                     	;# 
  4433  0592                     	;# 
  4434  0593                     	;# 
  4435  060C                     	;# 
  4436  060D                     	;# 
  4437  060E                     	;# 
  4438  060F                     	;# 
  4439  0610                     	;# 
  4440  0611                     	;# 
  4441  0612                     	;# 
  4442  0613                     	;# 
  4443  0614                     	;# 
  4444  0616                     	;# 
  4445  0617                     	;# 
  4446  0618                     	;# 
  4447  0619                     	;# 
  4448  061A                     	;# 
  4449  061B                     	;# 
  4450  061C                     	;# 
  4451  061D                     	;# 
  4452  061E                     	;# 
  4453  068C                     	;# 
  4454  068D                     	;# 
  4455  068E                     	;# 
  4456  068F                     	;# 
  4457  0690                     	;# 
  4458  0691                     	;# 
  4459  0692                     	;# 
  4460  0693                     	;# 
  4461  0694                     	;# 
  4462  070C                     	;# 
  4463  070D                     	;# 
  4464  070E                     	;# 
  4465  070F                     	;# 
  4466  0710                     	;# 
  4467  0711                     	;# 
  4468  0712                     	;# 
  4469  0713                     	;# 
  4470  0714                     	;# 
  4471  0716                     	;# 
  4472  0717                     	;# 
  4473  0718                     	;# 
  4474  0719                     	;# 
  4475  071A                     	;# 
  4476  071B                     	;# 
  4477  071C                     	;# 
  4478  071D                     	;# 
  4479  071E                     	;# 
  4480  0796                     	;# 
  4481  0797                     	;# 
  4482  0798                     	;# 
  4483  0799                     	;# 
  4484  079A                     	;# 
  4485  079B                     	;# 
  4486  080C                     	;# 
  4487  080D                     	;# 
  4488  080E                     	;# 
  4489  080F                     	;# 
  4490  0810                     	;# 
  4491  0811                     	;# 
  4492  0812                     	;# 
  4493  0813                     	;# 
  4494  0814                     	;# 
  4495  081A                     	;# 
  4496  081B                     	;# 
  4497  081C                     	;# 
  4498  081D                     	;# 
  4499  081E                     	;# 
  4500  081F                     	;# 
  4501  088C                     	;# 
  4502  088D                     	;# 
  4503  088E                     	;# 
  4504  088F                     	;# 
  4505  0890                     	;# 
  4506  0891                     	;# 
  4507  0892                     	;# 
  4508  0893                     	;# 
  4509  0895                     	;# 
  4510  0896                     	;# 
  4511  0897                     	;# 
  4512  0898                     	;# 
  4513  0899                     	;# 
  4514  089A                     	;# 
  4515  089B                     	;# 
  4516  090C                     	;# 
  4517  090E                     	;# 
  4518  090F                     	;# 
  4519  091F                     	;# 
  4520  091F                     	;# 
  4521  098F                     	;# 
  4522  098F                     	;# 
  4523  0990                     	;# 
  4524  0991                     	;# 
  4525  0992                     	;# 
  4526  0993                     	;# 
  4527  0994                     	;# 
  4528  0995                     	;# 
  4529  0996                     	;# 
  4530  0997                     	;# 
  4531  0E0F                     	;# 
  4532  0E10                     	;# 
  4533  0E11                     	;# 
  4534  0E12                     	;# 
  4535  0E13                     	;# 
  4536  0E14                     	;# 
  4537  0E15                     	;# 
  4538  0E16                     	;# 
  4539  0E17                     	;# 
  4540  0E18                     	;# 
  4541  0E19                     	;# 
  4542  0E1A                     	;# 
  4543  0E1B                     	;# 
  4544  0E1C                     	;# 
  4545  0E1D                     	;# 
  4546  0E1E                     	;# 
  4547  0E1F                     	;# 
  4548  0E20                     	;# 
  4549  0E21                     	;# 
  4550  0E22                     	;# 
  4551  0E23                     	;# 
  4552  0E24                     	;# 
  4553  0E25                     	;# 
  4554  0E26                     	;# 
  4555  0E27                     	;# 
  4556  0E28                     	;# 
  4557  0E29                     	;# 
  4558  0E2A                     	;# 
  4559  0E2B                     	;# 
  4560  0E2C                     	;# 
  4561  0E2D                     	;# 
  4562  0E2E                     	;# 
  4563  0E2F                     	;# 
  4564  0E30                     	;# 
  4565  0E31                     	;# 
  4566  0E32                     	;# 
  4567  0E33                     	;# 
  4568  0E34                     	;# 
  4569  0E35                     	;# 
  4570  0E36                     	;# 
  4571  0E37                     	;# 
  4572  0E8F                     	;# 
  4573  0E90                     	;# 
  4574  0E91                     	;# 
  4575  0E92                     	;# 
  4576  0E93                     	;# 
  4577  0E94                     	;# 
  4578  0E95                     	;# 
  4579  0E96                     	;# 
  4580  0E97                     	;# 
  4581  0E9C                     	;# 
  4582  0E9D                     	;# 
  4583  0E9E                     	;# 
  4584  0EA1                     	;# 
  4585  0EA2                     	;# 
  4586  0EA3                     	;# 
  4587  0EA4                     	;# 
  4588  0EA5                     	;# 
  4589  0EA9                     	;# 
  4590  0EAA                     	;# 
  4591  0EAB                     	;# 
  4592  0EAC                     	;# 
  4593  0EB1                     	;# 
  4594  0EB2                     	;# 
  4595  0EB3                     	;# 
  4596  0EB8                     	;# 
  4597  0EB9                     	;# 
  4598  0EBA                     	;# 
  4599  0EBB                     	;# 
  4600  0EBC                     	;# 
  4601  0EBD                     	;# 
  4602  0EBE                     	;# 
  4603  0EC3                     	;# 
  4604  0EC5                     	;# 
  4605  0EC6                     	;# 
  4606  0EC7                     	;# 
  4607  0EC8                     	;# 
  4608  0EC9                     	;# 
  4609  0ECA                     	;# 
  4610  0ECB                     	;# 
  4611  0ECC                     	;# 
  4612  0F10                     	;# 
  4613  0F11                     	;# 
  4614  0F12                     	;# 
  4615  0F13                     	;# 
  4616  0F14                     	;# 
  4617  0F15                     	;# 
  4618  0F16                     	;# 
  4619  0F17                     	;# 
  4620  0F18                     	;# 
  4621  0F19                     	;# 
  4622  0F1A                     	;# 
  4623  0F1B                     	;# 
  4624  0F1C                     	;# 
  4625  0F1D                     	;# 
  4626  0F1E                     	;# 
  4627  0F1F                     	;# 
  4628  0F20                     	;# 
  4629  0F21                     	;# 
  4630  0F22                     	;# 
  4631  0F23                     	;# 
  4632  0F24                     	;# 
  4633  0F25                     	;# 
  4634  0F26                     	;# 
  4635  0F27                     	;# 
  4636  0F38                     	;# 
  4637  0F39                     	;# 
  4638  0F3A                     	;# 
  4639  0F3B                     	;# 
  4640  0F3C                     	;# 
  4641  0F3D                     	;# 
  4642  0F3E                     	;# 
  4643  0F3F                     	;# 
  4644  0F40                     	;# 
  4645  0F41                     	;# 
  4646  0F43                     	;# 
  4647  0F44                     	;# 
  4648  0F45                     	;# 
  4649  0F46                     	;# 
  4650  0F47                     	;# 
  4651  0F48                     	;# 
  4652  0F49                     	;# 
  4653  0F4A                     	;# 
  4654  0F4B                     	;# 
  4655  0F4C                     	;# 
  4656  0F4E                     	;# 
  4657  0F4F                     	;# 
  4658  0F50                     	;# 
  4659  0F51                     	;# 
  4660  0F52                     	;# 
  4661  0F53                     	;# 
  4662  0F54                     	;# 
  4663  0F55                     	;# 
  4664  0F56                     	;# 
  4665  0F57                     	;# 
  4666  0F65                     	;# 
  4667  0F68                     	;# 
  4668  0F69                     	;# 
  4669  0F6A                     	;# 
  4670  0F6B                     	;# 
  4671  0FE4                     	;# 
  4672  0FE5                     	;# 
  4673  0FE6                     	;# 
  4674  0FE7                     	;# 
  4675  0FE8                     	;# 
  4676  0FE9                     	;# 
  4677  0FEA                     	;# 
  4678  0FEB                     	;# 
  4679  0FED                     	;# 
  4680  0FEE                     	;# 
  4681  0FEF                     	;_samples
  4682                           
  4683                           	psect	idataBANK0
  4684  1706                     __pidataBANK0:	
  4685                           
  4686                           ;initializer for _PID_MaxOutput
  4687  1706  34FF               	retlw	255
  4688  1707  3403               	retlw	3
  4689                           
  4690                           ;initializer for _setpoint
  4691  1708  3446               	retlw	70
  4692                           
  4693                           	psect	idataBANK1
  4694  1709                     __pidataBANK1:	
  4695                           ;initializer for _presets
  4696                           
  4697  1709  3400               	retlw	0
  4698  170A  3446               	retlw	70
  4699  170B  345F               	retlw	95
  4700  170C  3469               	retlw	105
  4701  170D  3478               	retlw	120
  4702                           
  4703                           ;initializer for _PID_First_Time
  4704  170E  3401               	retlw	1
  4705                           
  4706                           	psect	idataBANK2
  4707  17B5                     __pidataBANK2:	
  4708                           
  4709                           ;initializer for ___cgram
  4710  17B5  340C               	retlw	12
  4711  17B6  3412               	retlw	18
  4712  17B7  3412               	retlw	18
  4713  17B8  340C               	retlw	12
  4714  17B9  3400               	retlw	0
  4715  17BA  3400               	retlw	0
  4716  17BB  3400               	retlw	0
  4717  17BC  3400               	retlw	0
  4718  17BD  340A               	retlw	10
  4719  17BE  3415               	retlw	21
  4720  17BF  3411               	retlw	17
  4721  17C0  340A               	retlw	10
  4722  17C1  3404               	retlw	4
  4723  17C2  3400               	retlw	0
  4724  17C3  3400               	retlw	0
  4725  17C4  3400               	retlw	0
  4726  17C5  340A               	retlw	10
  4727  17C6  341F               	retlw	31
  4728  17C7  341F               	retlw	31
  4729  17C8  340E               	retlw	14
  4730  17C9  3404               	retlw	4
  4731  17CA  3400               	retlw	0
  4732  17CB  3400               	retlw	0
  4733  17CC  3400               	retlw	0
  4734                           
  4735                           	psect	stringtext
  4736  1000                     __pstringtext:	
  4737  1000                     log@coeff:	
  4738  1000  3400               	retlw	0
  4739  1001  3400               	retlw	0
  4740  1002  3400               	retlw	0
  4741  1003  3400               	retlw	0
  4742  1004  3480               	retlw	128
  4743  1005  343F               	retlw	63
  4744  1006  34F0               	retlw	240
  4745  1007  34FF               	retlw	255
  4746  1008  34BE               	retlw	190
  4747  1009  34E2               	retlw	226
  4748  100A  34A9               	retlw	169
  4749  100B  343E               	retlw	62
  4750  100C  3483               	retlw	131
  4751  100D  3476               	retlw	118
  4752  100E  34BE               	retlw	190
  4753  100F  34AE               	retlw	174
  4754  1010  342B               	retlw	43
  4755  1011  343E               	retlw	62
  4756  1012  343C               	retlw	60
  4757  1013  34C3               	retlw	195
  4758  1014  34BD               	retlw	189
  4759  1015  34D2               	retlw	210
  4760  1016  3413               	retlw	19
  4761  1017  343D               	retlw	61
  4762  1018  3478               	retlw	120
  4763  1019  34D3               	retlw	211
  4764  101A  34BB               	retlw	187
  4765  101B                     __end_oflog@coeff:	
  4766  0016                     _LATA	set	22
  4767  0017                     _LATB	set	23
  4768  0018                     _LATC	set	24
  4769  001E                     _T0CON0	set	30
  4770  001E                     _T0CON0bits	set	30
  4771  001F                     _T0CON1	set	31
  4772  001D                     _TMR0H	set	29
  4773  001C                     _TMR0L	set	28
  4774  0011                     _TRISA	set	17
  4775  0012                     _TRISB	set	18
  4776  0013                     _TRISC	set	19
  4777  005F                     _GIE	set	95
  4778  0063                     _RA3	set	99
  4779  0064                     _RA4	set	100
  4780  0068                     _RB0	set	104
  4781  0069                     _RB1	set	105
  4782  006A                     _RB2	set	106
  4783  006B                     _RB3	set	107
  4784  006C                     _RB4	set	108
  4785  006D                     _RB5	set	109
  4786  009D                     _ADACQ	set	157
  4787  0099                     _ADACT	set	153
  4788  009B                     _ADCAP	set	155
  4789  0098                     _ADCLK	set	152
  4790  0093                     _ADCON0	set	147
  4791  0093                     _ADCON0bits	set	147
  4792  0094                     _ADCON1	set	148
  4793  0095                     _ADCON2	set	149
  4794  0096                     _ADCON3	set	150
  4795  009E                     _ADPCH	set	158
  4796  009C                     _ADPRE	set	156
  4797  009A                     _ADREF	set	154
  4798  008D                     _ADRESH	set	141
  4799  008C                     _ADRESL	set	140
  4800  0097                     _ADSTAT	set	151
  4801  010F                     _ADLTHH	set	271
  4802  010E                     _ADLTHL	set	270
  4803  010D                     _ADRPT	set	269
  4804  0113                     _ADSTPTH	set	275
  4805  0112                     _ADSTPTL	set	274
  4806  0111                     _ADUTHH	set	273
  4807  0110                     _ADUTHL	set	272
  4808  021F                     _CCPTMRS1bits	set	543
  4809  0290                     _T2CLKCON	set	656
  4810  028E                     _T2CON	set	654
  4811  028E                     _T2CONbits	set	654
  4812  028F                     _T2HLT	set	655
  4813  028D                     _T2PR	set	653
  4814  0291                     _T2RST	set	657
  4815  028C                     _T2TMR	set	652
  4816  038E                     _PWM6CON	set	910
  4817  038D                     _PWM6DCH	set	909
  4818  038C                     _PWM6DCL	set	908
  4819  0716                     _PIE0bits	set	1814
  4820  070C                     _PIR0bits	set	1804
  4821  0710                     _PIR4bits	set	1808
  4822  3865                     _TMR0IF	set	14437
  4823  088D                     _OSCCON1	set	2189
  4824  088F                     _OSCCON3	set	2191
  4825  0891                     _OSCEN	set	2193
  4826  0893                     _OSCFRQ	set	2195
  4827  0892                     _OSCTUNE	set	2194
  4828  090C                     _FVRCON	set	2316
  4829  0E8F                     _PPSLOCK	set	3727
  4830  0E8F                     _PPSLOCKbits	set	3727
  4831  0F38                     _ANSELA	set	3896
  4832  0F43                     _ANSELB	set	3907
  4833  0F4E                     _ANSELC	set	3918
  4834  0F11                     _RA1PPS	set	3857
  4835  0F39                     _WPUA	set	3897
  4836  0F44                     _WPUB	set	3908
  4837  0F4F                     _WPUC	set	3919
  4838  0F65                     _WPUE	set	3941
  4839  101B                     STR_1:	
  4840  101B  3453               	retlw	83	;'S'
  4841  101C  3465               	retlw	101	;'e'
  4842  101D  3474               	retlw	116	;'t'
  4843  101E  3470               	retlw	112	;'p'
  4844  101F  346F               	retlw	111	;'o'
  4845  1020  3469               	retlw	105	;'i'
  4846  1021  346E               	retlw	110	;'n'
  4847  1022  3474               	retlw	116	;'t'
  4848  1023  343F               	retlw	63	;'?'
  4849  1024  3400               	retlw	0
  4850  101B                     
  4851                           ; #config settings
  4852  0000                     
  4853                           	psect	cinit
  4854  07BB                     start_initialization:	
  4855  07BB                     __initialization:		;BIGRAM
  4856                           
  4857                           ; Initialize objects allocated to BANK0
  4858  07BB  3197  2706  3187   	fcall	__pidataBANK0	;fetch initializer
  4859  07BE  00ED               	movwf	__pdataBANK0& (0+127)
  4860  07BF  3197  2707  3187   	fcall	__pidataBANK0+1	;fetch initializer
  4861  07C2  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  4862  07C3  3197  2708  3187   	fcall	__pidataBANK0+2	;fetch initializer
  4863  07C6  00EF               	movwf	(__pdataBANK0+2)& (0+127)
  4864                           
  4865                           ; Initialize objects allocated to BANK1
  4866  07C7  3009               	movlw	low __pidataBANK1
  4867  07C8  0084               	movwf	4
  4868  07C9  3097               	movlw	(high __pidataBANK1)| (0+128)
  4869  07CA  0085               	movwf	5
  4870  07CB  30E2               	movlw	low __pdataBANK1
  4871  07CC  0086               	movwf	6
  4872  07CD  3000               	movlw	high __pdataBANK1
  4873  07CE  0087               	movwf	7
  4874  07CF  3000               	movlw	0
  4875  07D0  00FF               	movwf	btemp+1
  4876  07D1  3006               	movlw	6
  4877  07D2  3197  2733  3187   	fcall	init_ram
  4878                           
  4879                           ; Initialize objects allocated to BANK2
  4880  07D5  30B5               	movlw	low __pidataBANK2
  4881  07D6  0084               	movwf	4
  4882  07D7  3097               	movlw	(high __pidataBANK2)| (0+128)
  4883  07D8  0085               	movwf	5
  4884  07D9  3020               	movlw	low __pdataBANK2
  4885  07DA  0086               	movwf	6
  4886  07DB  3001               	movlw	high __pdataBANK2
  4887  07DC  0087               	movwf	7
  4888  07DD  3000               	movlw	0
  4889  07DE  00FF               	movwf	btemp+1
  4890  07DF  3018               	movlw	24
  4891  07E0  3197  2733  3187   	fcall	init_ram
  4892                           
  4893                           ; Clear objects allocated to BIGRAM
  4894  07E3  308C               	movlw	low (0+9100)
  4895  07E4  0084               	movwf	4
  4896  07E5  3023               	movlw	high (0+9100)
  4897  07E6  0085               	movwf	5
  4898  07E7  3064               	movlw	100
  4899  07E8  00FE               	movwf	btemp
  4900  07E9  3000               	movlw	0
  4901  07EA  00FF               	movwf	btemp+1
  4902  07EB  3197  2727  3187   	fcall	clear_ram0
  4903                           
  4904                           ; Clear objects allocated to BANK0
  4905  07EE  01E8               	clrf	__pbssBANK0& (0+127)
  4906  07EF  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  4907  07F0  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  4908  07F1  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  4909  07F2  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  4910                           
  4911                           ; Clear objects allocated to BANK1
  4912  07F3  30C8               	movlw	low __pbssBANK1
  4913  07F4  0084               	movwf	4
  4914  07F5  3000               	movlw	high __pbssBANK1
  4915  07F6  0085               	movwf	5
  4916  07F7  301A               	movlw	26
  4917  07F8  00FE               	movwf	btemp
  4918  07F9  3000               	movlw	0
  4919  07FA  00FF               	movwf	btemp+1
  4920  07FB  3197  2727         	fcall	clear_ram0
  4921  07FD                     end_of_initialization:	
  4922                           ;End of C runtime variable initialization code
  4923                           
  4924  07FD                     __end_of__initialization:	
  4925  07FD  0020               	movlb	0
  4926  07FE  3184  2C44         	ljmp	_main	;jump to C main() function
  4927                           
  4928                           	psect	bssBANK0
  4929  0068                     __pbssBANK0:	
  4930  0068                     _PID_MinOutput:	
  4931  0068                     	ds	2
  4932  006A                     _downCount:	
  4933  006A                     	ds	1
  4934  006B                     _upCount:	
  4935  006B                     	ds	1
  4936  006C                     _x:	
  4937  006C                     	ds	1
  4938                           
  4939                           	psect	dataBANK0
  4940  006D                     __pdataBANK0:	
  4941  006D                     _PID_MaxOutput:	
  4942  006D                     	ds	2
  4943  006F                     _setpoint:	
  4944  006F                     	ds	1
  4945                           
  4946                           	psect	bssBANK1
  4947  00C8                     __pbssBANK1:	
  4948  00C8                     LCD_Write_Int@F13695:	
  4949  00C8                     	ds	5
  4950  00CD                     _PID_Integrated:	
  4951  00CD                     	ds	3
  4952  00D0                     _PID_Kd:	
  4953  00D0                     	ds	3
  4954  00D3                     _PID_Ki:	
  4955  00D3                     	ds	3
  4956  00D6                     _PID_Kp:	
  4957  00D6                     	ds	3
  4958  00D9                     _PID_Prev_Input:	
  4959  00D9                     	ds	3
  4960  00DC                     _errno:	
  4961  00DC                     	ds	2
  4962  00DE                     main@sampleIndex:	
  4963  00DE                     	ds	2
  4964  00E0                     _oldSetpoint:	
  4965  00E0                     	ds	1
  4966  00E1                     _toggleCount:	
  4967  00E1                     	ds	1
  4968                           
  4969                           	psect	dataBANK1
  4970  00E2                     __pdataBANK1:	
  4971  00E2                     _presets:	
  4972  00E2                     	ds	5
  4973  00E7                     _PID_First_Time:	
  4974  00E7                     	ds	1
  4975                           
  4976                           	psect	dataBANK2
  4977  0120                     __pdataBANK2:	
  4978  0120                     ___cgram:	
  4979  0120                     	ds	24
  4980                           
  4981                           	psect	inittext
  4982  1733                     init_ram:	
  4983  1733  00FE               	movwf	126
  4984  1734                     initloop:	
  4985  1734  0012               	moviw fsr0++
  4986  1735  001E               	movwi fsr1++
  4987  1736  3001               	movlw	1
  4988  1737  02FE               	subwf	126,f
  4989  1738  3000               	movlw	0
  4990  1739  3BFF               	subwfb	127,f
  4991  173A  087F               	movf	127,w
  4992  173B  047E               	iorwf	126,w
  4993  173C  1903               	btfsc	3,2
  4994  173D  3400               	retlw	0
  4995  173E  2F34               	goto	initloop
  4996                           
  4997                           	psect	clrtext
  4998  1727                     clear_ram0:	
  4999                           ;	Called with FSR0 containing the base address, and
  5000                           ;	btemp/btemp+1 has the size to clear
  5001                           
  5002  1727  0064               	clrwdt	;clear the watchdog before getting into this loop
  5003  1728                     clrloop0:	
  5004  1728  0180               	clrf	0	;clear RAM location pointed to by FSR
  5005  1729  3101               	addfsr 0,1
  5006  172A  3001               	movlw	1
  5007  172B  02FE               	subwf	126,f
  5008  172C  3000               	movlw	0
  5009  172D  3BFF               	subwfb	127,f
  5010  172E  087F               	movf	127,w
  5011  172F  047E               	iorwf	126,w
  5012  1730  1903               	btfsc	3,2
  5013  1731  3400               	retlw	0	;all done for this memory range, return
  5014  1732  2F28               	goto	clrloop0	;have we reached the end yet?
  5015                           
  5016                           	psect	cstackBANK1
  5017  00A0                     __pcstackBANK1:	
  5018  00A0                     ??_main:	
  5019                           
  5020                           ; 1 bytes @ 0x0
  5021  00A0                     	ds	10
  5022  00AA                     main@minutes:	
  5023                           
  5024                           ; 2 bytes @ 0xA
  5025  00AA                     	ds	2
  5026  00AC                     main@R:	
  5027                           
  5028                           ; 3 bytes @ 0xC
  5029  00AC                     	ds	3
  5030  00AF                     _main$1054:	
  5031                           
  5032                           ; 3 bytes @ 0xF
  5033  00AF                     	ds	3
  5034  00B2                     main@seconds:	
  5035                           
  5036                           ; 2 bytes @ 0x12
  5037  00B2                     	ds	2
  5038  00B4                     main@firstTimeThrough:	
  5039                           
  5040                           ; 1 bytes @ 0x14
  5041  00B4                     	ds	1
  5042  00B5                     main@counter:	
  5043                           
  5044                           ; 2 bytes @ 0x15
  5045  00B5                     	ds	2
  5046  00B7                     main@startupTimer:	
  5047                           
  5048                           ; 1 bytes @ 0x17
  5049  00B7                     	ds	1
  5050  00B8                     main@PWM_Output:	
  5051                           
  5052                           ; 2 bytes @ 0x18
  5053  00B8                     	ds	2
  5054  00BA                     main@toggle:	
  5055                           
  5056                           ; 1 bytes @ 0x1A
  5057  00BA                     	ds	1
  5058  00BB                     main@totals:	
  5059                           
  5060                           ; 4 bytes @ 0x1B
  5061  00BB                     	ds	4
  5062  00BF                     main@readTemperatureOld:	
  5063                           
  5064                           ; 2 bytes @ 0x1F
  5065  00BF                     	ds	2
  5066  00C1                     main@displayTemp:	
  5067                           
  5068                           ; 2 bytes @ 0x21
  5069  00C1                     	ds	2
  5070  00C3                     main@readTemperature:	
  5071                           
  5072                           ; 2 bytes @ 0x23
  5073  00C3                     	ds	2
  5074  00C5                     main@steinhart:	
  5075                           
  5076                           ; 3 bytes @ 0x25
  5077  00C5                     	ds	3
  5078                           
  5079                           	psect	cstackCOMMON
  5080  0070                     __pcstackCOMMON:	
  5081  0070                     ?_OSCILLATOR_Initialize:	
  5082  0070                     ??_OSCILLATOR_Initialize:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ?_ADCC_Initialize:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ??_ADCC_Initialize:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ?_PWM6_Initialize:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ??_PWM6_Initialize:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ?_TMR0_Initialize:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  0070                     ??_TMR0_Initialize:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  0070                     ?_TMR2_Initialize:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     ??_TMR2_Initialize:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     ?_LCD_Init:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     ?_LCD_Clear:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     ?_InitCustomChars:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?_Init_PID:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ??_Init_PID:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?_LCD_Cmd:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ?_LCD_Write_Char:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?_readButtons:	
  5131                           ; 1 bytes @ 0x0
  5132                           
  5133  0070                     ?_PIN_MANAGER_Initialize:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  0070                     ??_PIN_MANAGER_Initialize:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  0070                     ?_SYSTEM_Initialize:	
  5140                           ; 1 bytes @ 0x0
  5141                           
  5142  0070                     ?_LCD_Port:	
  5143                           ; 1 bytes @ 0x0
  5144                           
  5145  0070                     ??_LCD_Port:	
  5146                           ; 1 bytes @ 0x0
  5147                           
  5148  0070                     ?_PWM6_LoadDutyValue:	
  5149                           ; 1 bytes @ 0x0
  5150                           
  5151  0070                     ?_tempSetpoint:	
  5152                           ; 1 bytes @ 0x0
  5153                           
  5154  0070                     ?_main:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     ?_ADCC_GetSingleConversion:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     ?___wmul:	
  5161                           ; 2 bytes @ 0x0
  5162                           
  5163  0070                     ?___awdiv:	
  5164                           ; 2 bytes @ 0x0
  5165                           
  5166  0070                     ?___awmod:	
  5167                           ; 2 bytes @ 0x0
  5168                           
  5169  0070                     ?___ftpack:	
  5170                           ; 2 bytes @ 0x0
  5171                           
  5172  0070                     ?_frexp:	
  5173                           ; 3 bytes @ 0x0
  5174                           
  5175  0070                     ?___ftneg:	
  5176                           ; 3 bytes @ 0x0
  5177                           
  5178  0070                     ?___aldiv:	
  5179                           ; 3 bytes @ 0x0
  5180                           
  5181  0070                     PIN_MANAGER_Initialize@state:	
  5182                           ; 4 bytes @ 0x0
  5183                           
  5184  0070                     LCD_Port@a:	
  5185                           ; 1 bytes @ 0x0
  5186                           
  5187  0070                     PWM6_LoadDutyValue@dutyValue:	
  5188                           ; 1 bytes @ 0x0
  5189                           
  5190  0070                     ___wmul@multiplier:	
  5191                           ; 2 bytes @ 0x0
  5192                           
  5193  0070                     ___awdiv@divisor:	
  5194                           ; 2 bytes @ 0x0
  5195                           
  5196  0070                     ___awmod@divisor:	
  5197                           ; 2 bytes @ 0x0
  5198                           
  5199  0070                     ___ftpack@arg:	
  5200                           ; 2 bytes @ 0x0
  5201                           
  5202  0070                     ___ftneg@f1:	
  5203                           ; 3 bytes @ 0x0
  5204                           
  5205  0070                     frexp@value:	
  5206                           ; 3 bytes @ 0x0
  5207                           
  5208  0070                     ___aldiv@divisor:	
  5209                           ; 3 bytes @ 0x0
  5210                           
  5211                           
  5212                           ; 4 bytes @ 0x0
  5213  0070                     	ds	1
  5214  0071                     ??_LCD_Cmd:	
  5215  0071                     ??_LCD_Write_Char:	
  5216                           ; 1 bytes @ 0x1
  5217                           
  5218                           
  5219                           ; 1 bytes @ 0x1
  5220  0071                     	ds	1
  5221  0072                     ??_PWM6_LoadDutyValue:	
  5222  0072                     LCD_Cmd@a:	
  5223                           ; 1 bytes @ 0x2
  5224                           
  5225  0072                     LCD_Write_Char@temp:	
  5226                           ; 1 bytes @ 0x2
  5227                           
  5228  0072                     ___wmul@multiplicand:	
  5229                           ; 1 bytes @ 0x2
  5230                           
  5231  0072                     ___awdiv@dividend:	
  5232                           ; 2 bytes @ 0x2
  5233                           
  5234  0072                     ___awmod@dividend:	
  5235                           ; 2 bytes @ 0x2
  5236                           
  5237                           
  5238                           ; 2 bytes @ 0x2
  5239  0072                     	ds	1
  5240  0073                     ??_LCD_Init:	
  5241  0073                     ??_LCD_Clear:	
  5242                           ; 1 bytes @ 0x3
  5243                           
  5244  0073                     ?_LCD_Set_Cursor:	
  5245                           ; 1 bytes @ 0x3
  5246                           
  5247  0073                     ??_ADCC_GetSingleConversion:	
  5248                           ; 1 bytes @ 0x3
  5249                           
  5250  0073                     ??___ftneg:	
  5251                           ; 1 bytes @ 0x3
  5252                           
  5253  0073                     LCD_Set_Cursor@y:	
  5254                           ; 1 bytes @ 0x3
  5255                           
  5256  0073                     LCD_Write_Char@y:	
  5257                           ; 1 bytes @ 0x3
  5258                           
  5259  0073                     ADCC_GetSingleConversion@channel:	
  5260                           ; 1 bytes @ 0x3
  5261                           
  5262  0073                     ___ftpack@exp:	
  5263                           ; 1 bytes @ 0x3
  5264                           
  5265  0073                     frexp@eptr:	
  5266                           ; 1 bytes @ 0x3
  5267                           
  5268                           
  5269                           ; 1 bytes @ 0x3
  5270  0073                     	ds	1
  5271  0074                     ??_frexp:	
  5272  0074                     ??_LCD_Set_Cursor:	
  5273                           ; 1 bytes @ 0x4
  5274                           
  5275  0074                     ??___wmul:	
  5276                           ; 1 bytes @ 0x4
  5277                           
  5278  0074                     ??___awdiv:	
  5279                           ; 1 bytes @ 0x4
  5280                           
  5281  0074                     ??___awmod:	
  5282                           ; 1 bytes @ 0x4
  5283                           
  5284  0074                     LCD_Write_Char@a:	
  5285                           ; 1 bytes @ 0x4
  5286                           
  5287  0074                     ___ftpack@sign:	
  5288                           ; 1 bytes @ 0x4
  5289                           
  5290  0074                     ___wmul@product:	
  5291                           ; 1 bytes @ 0x4
  5292                           
  5293  0074                     ___aldiv@dividend:	
  5294                           ; 2 bytes @ 0x4
  5295                           
  5296                           
  5297                           ; 4 bytes @ 0x4
  5298  0074                     	ds	1
  5299  0075                     ??_InitCustomChars:	
  5300  0075                     ??___ftpack:	
  5301                           ; 1 bytes @ 0x5
  5302                           
  5303  0075                     ?_LCD_Write_String:	
  5304                           ; 1 bytes @ 0x5
  5305                           
  5306  0075                     LCD_Init@style:	
  5307                           ; 1 bytes @ 0x5
  5308                           
  5309  0075                     ___awdiv@counter:	
  5310                           ; 1 bytes @ 0x5
  5311                           
  5312  0075                     ___awmod@counter:	
  5313                           ; 1 bytes @ 0x5
  5314                           
  5315  0075                     LCD_Write_String@a:	
  5316                           ; 1 bytes @ 0x5
  5317                           
  5318                           
  5319                           ; 2 bytes @ 0x5
  5320  0075                     	ds	1
  5321  0076                     ?___lwdiv:	
  5322  0076                     InitCustomChars@i:	
  5323                           ; 2 bytes @ 0x6
  5324                           
  5325  0076                     LCD_Set_Cursor@x:	
  5326                           ; 1 bytes @ 0x6
  5327                           
  5328  0076                     ___awdiv@sign:	
  5329                           ; 1 bytes @ 0x6
  5330                           
  5331  0076                     ___awmod@sign:	
  5332                           ; 1 bytes @ 0x6
  5333                           
  5334  0076                     ___lwdiv@divisor:	
  5335                           ; 1 bytes @ 0x6
  5336                           
  5337                           
  5338                           ; 2 bytes @ 0x6
  5339  0076                     	ds	1
  5340  0077                     ??_SYSTEM_Initialize:	
  5341  0077                     ??_LCD_Write_String:	
  5342                           ; 1 bytes @ 0x7
  5343                           
  5344  0077                     LCD_Set_Cursor@z:	
  5345                           ; 1 bytes @ 0x7
  5346                           
  5347  0077                     ___awdiv@quotient:	
  5348                           ; 1 bytes @ 0x7
  5349                           
  5350                           
  5351                           ; 2 bytes @ 0x7
  5352  0077                     	ds	1
  5353  0078                     ??___aldiv:	
  5354  0078                     ?___awtoft:	
  5355                           ; 1 bytes @ 0x8
  5356                           
  5357  0078                     ?___lbtoft:	
  5358                           ; 3 bytes @ 0x8
  5359                           
  5360  0078                     ?___lwtoft:	
  5361                           ; 3 bytes @ 0x8
  5362                           
  5363  0078                     LCD_Set_Cursor@w:	
  5364                           ; 3 bytes @ 0x8
  5365                           
  5366  0078                     LCD_Write_String@i:	
  5367                           ; 1 bytes @ 0x8
  5368                           
  5369  0078                     ___awtoft@c:	
  5370                           ; 2 bytes @ 0x8
  5371                           
  5372  0078                     ___lwdiv@dividend:	
  5373                           ; 2 bytes @ 0x8
  5374                           
  5375  0078                     ___lwtoft@c:	
  5376                           ; 2 bytes @ 0x8
  5377                           
  5378                           
  5379                           ; 2 bytes @ 0x8
  5380  0078                     	ds	1
  5381  0079                     ?_LCD_Write_Int:	
  5382  0079                     LCD_Set_Cursor@temp:	
  5383                           ; 1 bytes @ 0x9
  5384                           
  5385  0079                     LCD_Write_Int@value:	
  5386                           ; 1 bytes @ 0x9
  5387                           
  5388                           
  5389                           ; 2 bytes @ 0x9
  5390  0079                     	ds	1
  5391  007A                     ??___lwdiv:	
  5392                           
  5393                           ; 1 bytes @ 0xA
  5394  007A                     	ds	1
  5395  007B                     ??___awtoft:	
  5396  007B                     ??___lwtoft:	
  5397                           ; 1 bytes @ 0xB
  5398                           
  5399  007B                     LCD_Write_Int@fieldLength:	
  5400                           ; 1 bytes @ 0xB
  5401                           
  5402  007B                     ___lbtoft@c:	
  5403                           ; 1 bytes @ 0xB
  5404                           
  5405  007B                     ___lwdiv@quotient:	
  5406                           ; 1 bytes @ 0xB
  5407                           
  5408                           
  5409                           ; 2 bytes @ 0xB
  5410  007B                     	ds	1
  5411  007C                     LCD_Write_Int@numPlaces:	
  5412                           
  5413                           ; 1 bytes @ 0xC
  5414  007C                     	ds	1
  5415  007D                     LCD_Write_Int@sign:	
  5416  007D                     ___awtoft@sign:	
  5417                           ; 1 bytes @ 0xD
  5418                           
  5419  007D                     ___lwdiv@counter:	
  5420                           ; 1 bytes @ 0xD
  5421                           
  5422                           
  5423                           ; 1 bytes @ 0xD
  5424  007D                     	ds	1
  5425  007E                     ??_eval_poly:	
  5426  007E                     ??_PID_Calculate:	
  5427                           ; 1 bytes @ 0xE
  5428                           
  5429  007E                     ??___ftsub:	
  5430                           ; 1 bytes @ 0xE
  5431                           
  5432                           
  5433                           	psect	cstackBANK0
  5434  0020                     __pcstackBANK0:	
  5435                           ; 1 bytes @ 0xE
  5436                           
  5437  0020                     ??_LCD_Write_Int:	
  5438  0020                     ??___lbtoft:	
  5439                           ; 1 bytes @ 0x0
  5440                           
  5441  0020                     ?___ftdiv:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444  0020                     ?___ftmul:	
  5445                           ; 3 bytes @ 0x0
  5446                           
  5447  0020                     ___aldiv@counter:	
  5448                           ; 3 bytes @ 0x0
  5449                           
  5450  0020                     ___ftdiv@f2:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  0020                     ___ftmul@f1:	
  5454                           ; 3 bytes @ 0x0
  5455                           
  5456                           
  5457                           ; 3 bytes @ 0x0
  5458  0020                     	ds	1
  5459  0021                     ___aldiv@sign:	
  5460                           
  5461                           ; 1 bytes @ 0x1
  5462  0021                     	ds	1
  5463  0022                     ___aldiv@quotient:	
  5464                           
  5465                           ; 4 bytes @ 0x2
  5466  0022                     	ds	1
  5467  0023                     ___ftdiv@f1:	
  5468  0023                     ___ftmul@f2:	
  5469                           ; 3 bytes @ 0x3
  5470                           
  5471                           
  5472                           ; 3 bytes @ 0x3
  5473  0023                     	ds	2
  5474  0025                     LCD_Write_Int@str:	
  5475                           
  5476                           ; 5 bytes @ 0x5
  5477  0025                     	ds	1
  5478  0026                     ??___ftdiv:	
  5479  0026                     ??___ftmul:	
  5480                           ; 1 bytes @ 0x6
  5481                           
  5482                           
  5483                           ; 1 bytes @ 0x6
  5484  0026                     	ds	4
  5485  002A                     ___ftdiv@cntr:	
  5486  002A                     ___ftmul@exp:	
  5487                           ; 1 bytes @ 0xA
  5488                           
  5489  002A                     LCD_Write_Int@j:	
  5490                           ; 1 bytes @ 0xA
  5491                           
  5492                           
  5493                           ; 2 bytes @ 0xA
  5494  002A                     	ds	1
  5495  002B                     ___ftdiv@f3:	
  5496  002B                     ___ftmul@f3_as_product:	
  5497                           ; 3 bytes @ 0xB
  5498                           
  5499                           
  5500                           ; 3 bytes @ 0xB
  5501  002B                     	ds	1
  5502  002C                     LCD_Write_Int@i:	
  5503                           
  5504                           ; 2 bytes @ 0xC
  5505  002C                     	ds	2
  5506  002E                     ??_readButtons:	
  5507  002E                     ___ftdiv@exp:	
  5508                           ; 1 bytes @ 0xE
  5509                           
  5510  002E                     ___ftmul@cntr:	
  5511                           ; 1 bytes @ 0xE
  5512                           
  5513                           
  5514                           ; 1 bytes @ 0xE
  5515  002E                     	ds	1
  5516  002F                     ___ftdiv@sign:	
  5517  002F                     ___ftmul@sign:	
  5518                           ; 1 bytes @ 0xF
  5519                           
  5520                           
  5521                           ; 1 bytes @ 0xF
  5522  002F                     	ds	1
  5523  0030                     ?___ftadd:	
  5524  0030                     ___ftadd@f1:	
  5525                           ; 3 bytes @ 0x10
  5526                           
  5527                           
  5528                           ; 3 bytes @ 0x10
  5529  0030                     	ds	1
  5530  0031                     ??_tempSetpoint:	
  5531                           
  5532                           ; 1 bytes @ 0x11
  5533  0031                     	ds	2
  5534  0033                     ___ftadd@f2:	
  5535                           
  5536                           ; 3 bytes @ 0x13
  5537  0033                     	ds	1
  5538  0034                     tempSetpoint@counter:	
  5539                           
  5540                           ; 1 bytes @ 0x14
  5541  0034                     	ds	2
  5542  0036                     ??___ftadd:	
  5543                           
  5544                           ; 1 bytes @ 0x16
  5545  0036                     	ds	4
  5546  003A                     ___ftadd@sign:	
  5547                           
  5548                           ; 1 bytes @ 0x1A
  5549  003A                     	ds	1
  5550  003B                     ___ftadd@exp2:	
  5551                           
  5552                           ; 1 bytes @ 0x1B
  5553  003B                     	ds	1
  5554  003C                     ___ftadd@exp1:	
  5555                           
  5556                           ; 1 bytes @ 0x1C
  5557  003C                     	ds	1
  5558  003D                     ?___ftge:	
  5559  003D                     ?_eval_poly:	
  5560                           ; 1 bit 
  5561                           
  5562  003D                     ?___ftsub:	
  5563                           ; 3 bytes @ 0x1D
  5564                           
  5565  003D                     ___ftge@ff1:	
  5566                           ; 3 bytes @ 0x1D
  5567                           
  5568  003D                     ___ftsub@f2:	
  5569                           ; 3 bytes @ 0x1D
  5570                           
  5571  003D                     eval_poly@x:	
  5572                           ; 3 bytes @ 0x1D
  5573                           
  5574                           
  5575                           ; 3 bytes @ 0x1D
  5576  003D                     	ds	3
  5577  0040                     eval_poly@d:	
  5578  0040                     ___ftge@ff2:	
  5579                           ; 2 bytes @ 0x20
  5580                           
  5581  0040                     ___ftsub@f1:	
  5582                           ; 3 bytes @ 0x20
  5583                           
  5584                           
  5585                           ; 3 bytes @ 0x20
  5586  0040                     	ds	2
  5587  0042                     eval_poly@n:	
  5588                           
  5589                           ; 2 bytes @ 0x22
  5590  0042                     	ds	1
  5591  0043                     ??___ftge:	
  5592                           
  5593                           ; 1 bytes @ 0x23
  5594  0043                     	ds	1
  5595  0044                     eval_poly@res:	
  5596                           
  5597                           ; 3 bytes @ 0x24
  5598  0044                     	ds	2
  5599  0046                     ?_PID_Calculate:	
  5600  0046                     PID_Calculate@setpoint:	
  5601                           ; 3 bytes @ 0x26
  5602                           
  5603                           
  5604                           ; 2 bytes @ 0x26
  5605  0046                     	ds	1
  5606  0047                     ?_log:	
  5607  0047                     log@x:	
  5608                           ; 3 bytes @ 0x27
  5609                           
  5610                           
  5611                           ; 3 bytes @ 0x27
  5612  0047                     	ds	1
  5613  0048                     PID_Calculate@temp:	
  5614                           
  5615                           ; 3 bytes @ 0x28
  5616  0048                     	ds	2
  5617  004A                     ??_log:	
  5618                           
  5619                           ; 1 bytes @ 0x2A
  5620  004A                     	ds	1
  5621  004B                     log@exponent:	
  5622  004B                     PID_Calculate@DerivativeValue:	
  5623                           ; 2 bytes @ 0x2B
  5624                           
  5625                           
  5626                           ; 3 bytes @ 0x2B
  5627  004B                     	ds	3
  5628  004E                     _PID_Calculate$1053:	
  5629                           
  5630                           ; 3 bytes @ 0x2E
  5631  004E                     	ds	3
  5632  0051                     PID_Calculate@ErrValue:	
  5633                           
  5634                           ; 3 bytes @ 0x31
  5635  0051                     	ds	3
  5636  0054                     PID_Calculate@Err:	
  5637                           
  5638                           ; 3 bytes @ 0x34
  5639  0054                     	ds	3
  5640  0057                     PID_Calculate@Result:	
  5641                           
  5642                           ; 3 bytes @ 0x37
  5643  0057                     	ds	3
  5644  005A                     ?___fttol:	
  5645  005A                     ___fttol@f1:	
  5646                           ; 4 bytes @ 0x3A
  5647                           
  5648                           
  5649                           ; 3 bytes @ 0x3A
  5650  005A                     	ds	4
  5651  005E                     ??___fttol:	
  5652                           
  5653                           ; 1 bytes @ 0x3E
  5654  005E                     	ds	4
  5655  0062                     ___fttol@sign1:	
  5656                           
  5657                           ; 1 bytes @ 0x42
  5658  0062                     	ds	1
  5659  0063                     ___fttol@lval:	
  5660                           
  5661                           ; 4 bytes @ 0x43
  5662  0063                     	ds	4
  5663  0067                     ___fttol@exp1:	
  5664                           
  5665                           ; 1 bytes @ 0x47
  5666  0067                     	ds	1
  5667                           
  5668                           	psect	maintext
  5669  0444                     __pmaintext:	
  5670 ;;
  5671 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5672 ;;
  5673 ;; *************** function _main *****************
  5674 ;; Defined at:
  5675 ;;		line 16 in file "main.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  totals          4   27[BANK1 ] long 
  5680 ;;  steinhart       3   37[BANK1 ] float 
  5681 ;;  R               3   12[BANK1 ] float 
  5682 ;;  readTemperat    2   35[BANK1 ] unsigned int 
  5683 ;;  displayTemp     2   33[BANK1 ] unsigned int 
  5684 ;;  readTemperat    2   31[BANK1 ] unsigned int 
  5685 ;;  PWM_Output      2   24[BANK1 ] unsigned int 
  5686 ;;  counter         2   21[BANK1 ] unsigned int 
  5687 ;;  seconds         2   18[BANK1 ] unsigned int 
  5688 ;;  minutes         2   10[BANK1 ] unsigned int 
  5689 ;;  toggle          1   26[BANK1 ] unsigned char 
  5690 ;;  startupTimer    1   23[BANK1 ] unsigned char 
  5691 ;;  firstTimeThr    1   20[BANK1 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : B1F/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;Total ram usage:       40 bytes
  5706 ;; Hardware stack levels required when called:    5
  5707 ;; This function calls:
  5708 ;;		_ADCC_GetSingleConversion
  5709 ;;		_LCD_Set_Cursor
  5710 ;;		_LCD_Write_Char
  5711 ;;		_LCD_Write_Int
  5712 ;;		_PID_Calculate
  5713 ;;		_PWM6_LoadDutyValue
  5714 ;;		_SYSTEM_Initialize
  5715 ;;		___aldiv
  5716 ;;		___ftadd
  5717 ;;		___ftdiv
  5718 ;;		___ftge
  5719 ;;		___ftmul
  5720 ;;		___ftneg
  5721 ;;		___ftsub
  5722 ;;		___fttol
  5723 ;;		___lbtoft
  5724 ;;		___lwdiv
  5725 ;;		___lwtoft
  5726 ;;		___wmul
  5727 ;;		_log
  5728 ;;		_readButtons
  5729 ;;		_tempSetpoint
  5730 ;; This function is called by:
  5731 ;;		Startup code after reset
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _main
  5737  0444                     _main:	
  5738                           
  5739                           ;main.c: 18: SYSTEM_Initialize();
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5743  0444  3189  21E0  3184   	fcall	_SYSTEM_Initialize
  5744                           
  5745                           ;main.c: 20: uint16_t readTemperature, PWM_Output = 1023, readTemperatureOld, displayTem
      +                          p = 70, seconds = 0, counter = 0, minutes = 0;
  5746  0447  30FF               	movlw	255
  5747  0448  0021               	movlb	1	; select bank1
  5748  0449  00B8               	movwf	main@PWM_Output^(0+128)
  5749  044A  3003               	movlw	3
  5750  044B  00B9               	movwf	(main@PWM_Output^(0+128)+1)
  5751  044C  3046               	movlw	70
  5752  044D  00C1               	movwf	main@displayTemp^(0+128)
  5753  044E  3000               	movlw	0
  5754  044F  00C2               	movwf	(main@displayTemp^(0+128)+1)
  5755  0450  01B2               	clrf	main@seconds^(0+128)
  5756  0451  01B3               	clrf	(main@seconds+1)^(0+128)
  5757  0452  01B5               	clrf	main@counter^(0+128)
  5758  0453  01B6               	clrf	(main@counter+1)^(0+128)
  5759  0454  01AA               	clrf	main@minutes^(0+128)
  5760  0455  01AB               	clrf	(main@minutes+1)^(0+128)
  5761                           
  5762                           ;main.c: 22: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5763  0456  01B7               	clrf	main@startupTimer^(0+128)
  5764  0457  01B4               	clrf	main@firstTimeThrough^(0+128)
  5765  0458  01BA               	clrf	main@toggle^(0+128)
  5766                           
  5767                           ;main.c: 24: float R, steinhart;
  5768                           ;main.c: 26: static uint16_t sampleIndex = 0;
  5769                           ;main.c: 28: int32_t totals = 0;
  5770  0459  3000               	movlw	0
  5771  045A  00BE               	movwf	(main@totals+3)^(0+128)
  5772  045B  3000               	movlw	0
  5773  045C  00BD               	movwf	(main@totals+2)^(0+128)
  5774  045D  3000               	movlw	0
  5775  045E  00BC               	movwf	(main@totals+1)^(0+128)
  5776  045F  3000               	movlw	0
  5777  0460  00BB               	movwf	main@totals^(0+128)
  5778  0461                     l3079:	
  5779                           ;main.c: 32: while (1)
  5780                           
  5781                           
  5782                           ;main.c: 33: {
  5783                           ;main.c: 34: readTemperature = ADCC_GetSingleConversion(2);
  5784  0461  3002               	movlw	2
  5785  0462  3197  274C  3184   	fcall	_ADCC_GetSingleConversion
  5786  0465  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5787  0466  0021               	movlb	1	; select bank1
  5788  0467  00C4               	movwf	(main@readTemperature+1)^(0+128)
  5789  0468  0870               	movf	?_ADCC_GetSingleConversion,w
  5790  0469  00C3               	movwf	main@readTemperature^(0+128)
  5791                           
  5792                           ;main.c: 36: totals = totals - samples[sampleIndex];
  5793  046A  083B               	movf	main@totals^(0+128),w
  5794  046B  00A0               	movwf	??_main^(0+128)
  5795  046C  083C               	movf	(main@totals+1)^(0+128),w
  5796  046D  00A1               	movwf	(??_main^(0+128)+1)
  5797  046E  083D               	movf	(main@totals+2)^(0+128),w
  5798  046F  00A2               	movwf	(??_main^(0+128)+2)
  5799  0470  083E               	movf	(main@totals+3)^(0+128),w
  5800  0471  00A3               	movwf	(??_main^(0+128)+3)
  5801  0472  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5802  0473  00A5               	movwf	((??_main+4)^(0+128)+1)
  5803  0474  085E               	movf	main@sampleIndex^(0+128),w
  5804  0475  00A4               	movwf	(??_main+4)^(0+128)
  5805  0476  35A4               	lslf	(??_main+4)^(0+128),f
  5806  0477  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5807  0478  308C               	movlw	140
  5808  0479  0724               	addwf	(??_main+4)^(0+128),w
  5809  047A  0084               	movwf	4
  5810  047B  3023               	movlw	35
  5811  047C  3D25               	addwfc	(??_main+5)^(0+128),w
  5812  047D  0085               	movwf	5
  5813  047E  3F00               	moviw [0]fsr0
  5814  047F  00A6               	movwf	(??_main+6)^(0+128)
  5815  0480  3F01               	moviw [1]fsr0
  5816  0481  00A7               	movwf	((??_main+6)^(0+128)+1)
  5817  0482  01A8               	clrf	((??_main+6)^(0+128)+2)
  5818  0483  01A9               	clrf	((??_main+6)^(0+128)+3)
  5819  0484  09A6               	comf	(??_main+6)^(0+128),f
  5820  0485  09A7               	comf	((??_main+6)^(0+128)+1),f
  5821  0486  09A8               	comf	((??_main+6)^(0+128)+2),f
  5822  0487  09A9               	comf	((??_main+6)^(0+128)+3),f
  5823  0488  0AA6               	incf	(??_main+6)^(0+128),f
  5824  0489  1903               	skipnz
  5825  048A  0AA7               	incf	((??_main+6)^(0+128)+1),f
  5826  048B  1903               	skipnz
  5827  048C  0AA8               	incf	((??_main+6)^(0+128)+2),f
  5828  048D  1903               	skipnz
  5829  048E  0AA9               	incf	((??_main+6)^(0+128)+3),f
  5830  048F  0826               	movf	(??_main+6)^(0+128),w
  5831  0490  07A0               	addwf	??_main^(0+128),f
  5832  0491  0827               	movf	(??_main+7)^(0+128),w
  5833  0492  3DA1               	addwfc	(??_main^(0+128)+1),f
  5834  0493  0828               	movf	(??_main+8)^(0+128),w
  5835  0494  3DA2               	addwfc	(??_main^(0+128)+2),f
  5836  0495  0829               	movf	(??_main+9)^(0+128),w
  5837  0496  3DA3               	addwfc	(??_main^(0+128)+3),f
  5838  0497  0823               	movf	(??_main+3)^(0+128),w
  5839  0498  00BE               	movwf	(main@totals+3)^(0+128)
  5840  0499  0822               	movf	(??_main+2)^(0+128),w
  5841  049A  00BD               	movwf	(main@totals+2)^(0+128)
  5842  049B  0821               	movf	(??_main+1)^(0+128),w
  5843  049C  00BC               	movwf	(main@totals+1)^(0+128)
  5844  049D  0820               	movf	??_main^(0+128),w
  5845  049E  00BB               	movwf	main@totals^(0+128)
  5846                           
  5847                           ;main.c: 38: samples[sampleIndex] = readTemperature;
  5848  049F  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5849  04A0  00A1               	movwf	(??_main^(0+128)+1)
  5850  04A1  085E               	movf	main@sampleIndex^(0+128),w
  5851  04A2  00A0               	movwf	??_main^(0+128)
  5852  04A3  35A0               	lslf	??_main^(0+128),f
  5853  04A4  0DA1               	rlf	(??_main^(0+128)+1),f
  5854  04A5  308C               	movlw	140
  5855  04A6  00A2               	movwf	(??_main+2)^(0+128)
  5856  04A7  3023               	movlw	35
  5857  04A8  00A3               	movwf	((??_main+2)^(0+128)+1)
  5858  04A9  0820               	movf	??_main^(0+128),w
  5859  04AA  0722               	addwf	(??_main+2)^(0+128),w
  5860  04AB  0086               	movwf	6
  5861  04AC  0821               	movf	(??_main+1)^(0+128),w
  5862  04AD  3D23               	addwfc	(??_main+3)^(0+128),w
  5863  04AE  0087               	movwf	7
  5864  04AF  0843               	movf	main@readTemperature^(0+128),w
  5865  04B0  3FC0               	movwi [0]fsr1
  5866  04B1  0844               	movf	(main@readTemperature+1)^(0+128),w
  5867  04B2  3FC1               	movwi [1]fsr1
  5868                           
  5869                           ;main.c: 40: totals = totals + samples[sampleIndex];
  5870  04B3  083B               	movf	main@totals^(0+128),w
  5871  04B4  00A0               	movwf	??_main^(0+128)
  5872  04B5  083C               	movf	(main@totals+1)^(0+128),w
  5873  04B6  00A1               	movwf	(??_main^(0+128)+1)
  5874  04B7  083D               	movf	(main@totals+2)^(0+128),w
  5875  04B8  00A2               	movwf	(??_main^(0+128)+2)
  5876  04B9  083E               	movf	(main@totals+3)^(0+128),w
  5877  04BA  00A3               	movwf	(??_main^(0+128)+3)
  5878  04BB  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5879  04BC  00A5               	movwf	((??_main+4)^(0+128)+1)
  5880  04BD  085E               	movf	main@sampleIndex^(0+128),w
  5881  04BE  00A4               	movwf	(??_main+4)^(0+128)
  5882  04BF  35A4               	lslf	(??_main+4)^(0+128),f
  5883  04C0  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5884  04C1  308C               	movlw	140
  5885  04C2  0724               	addwf	(??_main+4)^(0+128),w
  5886  04C3  0084               	movwf	4
  5887  04C4  3023               	movlw	35
  5888  04C5  3D25               	addwfc	(??_main+5)^(0+128),w
  5889  04C6  0085               	movwf	5
  5890  04C7  3F00               	moviw [0]fsr0
  5891  04C8  00A6               	movwf	(??_main+6)^(0+128)
  5892  04C9  3F01               	moviw [1]fsr0
  5893  04CA  00A7               	movwf	((??_main+6)^(0+128)+1)
  5894  04CB  01A8               	clrf	((??_main+6)^(0+128)+2)
  5895  04CC  01A9               	clrf	((??_main+6)^(0+128)+3)
  5896  04CD  0826               	movf	(??_main+6)^(0+128),w
  5897  04CE  07A0               	addwf	??_main^(0+128),f
  5898  04CF  0827               	movf	(??_main+7)^(0+128),w
  5899  04D0  3DA1               	addwfc	(??_main^(0+128)+1),f
  5900  04D1  0828               	movf	(??_main+8)^(0+128),w
  5901  04D2  3DA2               	addwfc	(??_main^(0+128)+2),f
  5902  04D3  0829               	movf	(??_main+9)^(0+128),w
  5903  04D4  3DA3               	addwfc	(??_main^(0+128)+3),f
  5904  04D5  0823               	movf	(??_main+3)^(0+128),w
  5905  04D6  00BE               	movwf	(main@totals+3)^(0+128)
  5906  04D7  0822               	movf	(??_main+2)^(0+128),w
  5907  04D8  00BD               	movwf	(main@totals+2)^(0+128)
  5908  04D9  0821               	movf	(??_main+1)^(0+128),w
  5909  04DA  00BC               	movwf	(main@totals+1)^(0+128)
  5910  04DB  0820               	movf	??_main^(0+128),w
  5911  04DC  00BB               	movwf	main@totals^(0+128)
  5912                           
  5913                           ;main.c: 42: sampleIndex += 1;
  5914  04DD  3001               	movlw	1
  5915  04DE  07DE               	addwf	main@sampleIndex^(0+128),f
  5916  04DF  3000               	movlw	0
  5917  04E0  3DDF               	addwfc	(main@sampleIndex+1)^(0+128),f
  5918                           
  5919                           ;main.c: 44: if(sampleIndex >= 50)
  5920  04E1  3000               	movlw	0
  5921  04E2  025F               	subwf	(main@sampleIndex+1)^(0+128),w
  5922  04E3  3032               	movlw	50
  5923  04E4  1903               	skipnz
  5924  04E5  025E               	subwf	main@sampleIndex^(0+128),w
  5925  04E6  1C03               	skipc
  5926  04E7  2CEA               	goto	l3091
  5927                           
  5928                           ;main.c: 45: {
  5929                           ;main.c: 46: sampleIndex = 0;
  5930  04E8  01DE               	clrf	main@sampleIndex^(0+128)
  5931  04E9  01DF               	clrf	(main@sampleIndex+1)^(0+128)
  5932  04EA                     l3091:	
  5933                           
  5934                           ;main.c: 47: }
  5935                           ;main.c: 49: readTemperature = totals / 50;
  5936  04EA  3000               	movlw	0
  5937  04EB  00F3               	movwf	___aldiv@divisor+3
  5938  04EC  3000               	movlw	0
  5939  04ED  00F2               	movwf	___aldiv@divisor+2
  5940  04EE  3000               	movlw	0
  5941  04EF  00F1               	movwf	___aldiv@divisor+1
  5942  04F0  3032               	movlw	50
  5943  04F1  00F0               	movwf	___aldiv@divisor
  5944  04F2  083E               	movf	(main@totals+3)^(0+128),w
  5945  04F3  00F7               	movwf	___aldiv@dividend+3
  5946  04F4  083D               	movf	(main@totals+2)^(0+128),w
  5947  04F5  00F6               	movwf	___aldiv@dividend+2
  5948  04F6  083C               	movf	(main@totals+1)^(0+128),w
  5949  04F7  00F5               	movwf	___aldiv@dividend+1
  5950  04F8  083B               	movf	main@totals^(0+128),w
  5951  04F9  00F4               	movwf	___aldiv@dividend
  5952  04FA  318C  2430  3184   	fcall	___aldiv
  5953  04FD  0871               	movf	?___aldiv+1,w
  5954  04FE  0021               	movlb	1	; select bank1
  5955  04FF  00C4               	movwf	(main@readTemperature+1)^(0+128)
  5956  0500  0870               	movf	?___aldiv,w
  5957  0501  00C3               	movwf	main@readTemperature^(0+128)
  5958                           
  5959                           ;main.c: 52: if(startupTimer >= 70)
  5960  0502  3046               	movlw	70
  5961  0503  0237               	subwf	main@startupTimer^(0+128),w
  5962  0504  1C03               	skipc
  5963  0505  2D9E               	goto	l3119
  5964                           
  5965                           ;main.c: 53: {
  5966                           ;main.c: 54: if(firstTimeThrough == 0)
  5967  0506  0834               	movf	main@firstTimeThrough^(0+128),w
  5968  0507  1D03               	btfss	3,2
  5969  0508  2D13               	goto	l3103
  5970                           
  5971                           ;main.c: 55: {
  5972                           ;main.c: 56: readTemperatureOld = readTemperature;
  5973  0509  0844               	movf	(main@readTemperature+1)^(0+128),w
  5974  050A  00C0               	movwf	(main@readTemperatureOld+1)^(0+128)
  5975  050B  0843               	movf	main@readTemperature^(0+128),w
  5976  050C  00BF               	movwf	main@readTemperatureOld^(0+128)
  5977                           
  5978                           ;main.c: 57: counter = 0;
  5979  050D  01B5               	clrf	main@counter^(0+128)
  5980  050E  01B6               	clrf	(main@counter+1)^(0+128)
  5981                           
  5982                           ;main.c: 58: firstTimeThrough +=1;
  5983  050F  3001               	movlw	1
  5984  0510  00A0               	movwf	??_main^(0+128)
  5985  0511  0820               	movf	??_main^(0+128),w
  5986  0512  07B4               	addwf	main@firstTimeThrough^(0+128),f
  5987  0513                     l3103:	
  5988                           
  5989                           ;main.c: 59: }
  5990                           ;main.c: 61: if(readTemperature > readTemperatureOld)
  5991  0513  0844               	movf	(main@readTemperature+1)^(0+128),w
  5992  0514  0240               	subwf	(main@readTemperatureOld+1)^(0+128),w
  5993  0515  1D03               	skipz
  5994  0516  2D19               	goto	u3355
  5995  0517  0843               	movf	main@readTemperature^(0+128),w
  5996  0518  023F               	subwf	main@readTemperatureOld^(0+128),w
  5997  0519                     u3355:	
  5998  0519  1803               	skipnc
  5999  051A  2D1F               	goto	l390
  6000                           
  6001                           ;main.c: 62: {
  6002                           ;main.c: 63: readTemperatureOld += 1;
  6003  051B  3001               	movlw	1
  6004  051C  07BF               	addwf	main@readTemperatureOld^(0+128),f
  6005  051D  3000               	movlw	0
  6006  051E  3DC0               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  6007  051F                     l390:	
  6008                           
  6009                           ;main.c: 64: }
  6010                           ;main.c: 66: if(readTemperature < readTemperatureOld)
  6011  051F  0840               	movf	(main@readTemperatureOld+1)^(0+128),w
  6012  0520  0244               	subwf	(main@readTemperature+1)^(0+128),w
  6013  0521  1D03               	skipz
  6014  0522  2D25               	goto	u3365
  6015  0523  083F               	movf	main@readTemperatureOld^(0+128),w
  6016  0524  0243               	subwf	main@readTemperature^(0+128),w
  6017  0525                     u3365:	
  6018  0525  1803               	skipnc
  6019  0526  2D2B               	goto	l391
  6020                           
  6021                           ;main.c: 67: {
  6022                           ;main.c: 68: readTemperatureOld -= 1;
  6023  0527  3001               	movlw	1
  6024  0528  02BF               	subwf	main@readTemperatureOld^(0+128),f
  6025  0529  3000               	movlw	0
  6026  052A  3BC0               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  6027  052B                     l391:	
  6028                           
  6029                           ;main.c: 69: }
  6030                           ;main.c: 71: readTemperature = readTemperatureOld;
  6031  052B  0840               	movf	(main@readTemperatureOld+1)^(0+128),w
  6032  052C  00C4               	movwf	(main@readTemperature+1)^(0+128)
  6033  052D  083F               	movf	main@readTemperatureOld^(0+128),w
  6034  052E  00C3               	movwf	main@readTemperature^(0+128)
  6035                           
  6036                           ;main.c: 73: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  6037  052F  0845               	movf	main@steinhart^(0+128),w
  6038  0530  0020               	movlb	0	; select bank0
  6039  0531  00C8               	movwf	PID_Calculate@temp
  6040  0532  0021               	movlb	1	; select bank1
  6041  0533  0846               	movf	(main@steinhart+1)^(0+128),w
  6042  0534  0020               	movlb	0	; select bank0
  6043  0535  00C9               	movwf	PID_Calculate@temp+1
  6044  0536  0021               	movlb	1	; select bank1
  6045  0537  0847               	movf	(main@steinhart+2)^(0+128),w
  6046  0538  0020               	movlb	0	; select bank0
  6047  0539  00CA               	movwf	PID_Calculate@temp+2
  6048  053A  086F               	movf	_setpoint,w
  6049  053B  0021               	movlb	1	; select bank1
  6050  053C  00A0               	movwf	??_main^(0+128)
  6051  053D  01A1               	clrf	(??_main^(0+128)+1)
  6052  053E  0820               	movf	??_main^(0+128),w
  6053  053F  0020               	movlb	0	; select bank0
  6054  0540  00C6               	movwf	PID_Calculate@setpoint
  6055  0541  0021               	movlb	1	; select bank1
  6056  0542  0821               	movf	(??_main+1)^(0+128),w
  6057  0543  0020               	movlb	0	; select bank0
  6058  0544  00C7               	movwf	PID_Calculate@setpoint+1
  6059  0545  3182  224B  3184   	fcall	_PID_Calculate
  6060  0548  0020               	movlb	0	; select bank0
  6061  0549  0846               	movf	?_PID_Calculate,w
  6062  054A  00DA               	movwf	___fttol@f1
  6063  054B  0847               	movf	?_PID_Calculate+1,w
  6064  054C  00DB               	movwf	___fttol@f1+1
  6065  054D  0848               	movf	?_PID_Calculate+2,w
  6066  054E  00DC               	movwf	___fttol@f1+2
  6067  054F  3180  2005  3184   	fcall	___fttol
  6068  0552  0020               	movlb	0	; select bank0
  6069  0553  085B               	movf	?___fttol+1,w
  6070  0554  0021               	movlb	1	; select bank1
  6071  0555  00B9               	movwf	(main@PWM_Output+1)^(0+128)
  6072  0556  0020               	movlb	0	; select bank0
  6073  0557  085A               	movf	?___fttol,w
  6074  0558  0021               	movlb	1	; select bank1
  6075  0559  00B8               	movwf	main@PWM_Output^(0+128)
  6076                           
  6077                           ;main.c: 75: if((setpoint-steinhart)>4)
  6078  055A  3000               	movlw	0
  6079  055B  0020               	movlb	0	; select bank0
  6080  055C  00BD               	movwf	___ftge@ff1
  6081  055D  3080               	movlw	128
  6082  055E  00BE               	movwf	___ftge@ff1+1
  6083  055F  3040               	movlw	64
  6084  0560  00BF               	movwf	___ftge@ff1+2
  6085  0561  0021               	movlb	1	; select bank1
  6086  0562  0845               	movf	main@steinhart^(0+128),w
  6087  0563  00F0               	movwf	___ftneg@f1
  6088  0564  0846               	movf	(main@steinhart+1)^(0+128),w
  6089  0565  00F1               	movwf	___ftneg@f1+1
  6090  0566  0847               	movf	(main@steinhart+2)^(0+128),w
  6091  0567  00F2               	movwf	___ftneg@f1+2
  6092  0568  3197  270F  3184   	fcall	___ftneg
  6093  056B  0870               	movf	?___ftneg,w
  6094  056C  0020               	movlb	0	; select bank0
  6095  056D  00B0               	movwf	___ftadd@f1
  6096  056E  0871               	movf	?___ftneg+1,w
  6097  056F  00B1               	movwf	___ftadd@f1+1
  6098  0570  0872               	movf	?___ftneg+2,w
  6099  0571  00B2               	movwf	___ftadd@f1+2
  6100  0572  086F               	movf	_setpoint,w
  6101  0573  3197  27E6  3184   	fcall	___lbtoft
  6102  0576  0878               	movf	?___lbtoft,w
  6103  0577  0020               	movlb	0	; select bank0
  6104  0578  00B3               	movwf	___ftadd@f2
  6105  0579  0879               	movf	?___lbtoft+1,w
  6106  057A  00B4               	movwf	___ftadd@f2+1
  6107  057B  087A               	movf	?___lbtoft+2,w
  6108  057C  00B5               	movwf	___ftadd@f2+2
  6109  057D  3181  2155  3184   	fcall	___ftadd
  6110  0580  0020               	movlb	0	; select bank0
  6111  0581  0830               	movf	?___ftadd,w
  6112  0582  00C0               	movwf	___ftge@ff2
  6113  0583  0831               	movf	?___ftadd+1,w
  6114  0584  00C1               	movwf	___ftge@ff2+1
  6115  0585  0832               	movf	?___ftadd+2,w
  6116  0586  00C2               	movwf	___ftge@ff2+2
  6117  0587  3189  21A4  3184   	fcall	___ftge
  6118  058A  1803               	btfsc	3,0
  6119  058B  2D91               	goto	l3115
  6120                           
  6121                           ;main.c: 76: {
  6122                           ;main.c: 77: PWM_Output = 1023;
  6123  058C  30FF               	movlw	255
  6124  058D  0021               	movlb	1	; select bank1
  6125  058E  00B8               	movwf	main@PWM_Output^(0+128)
  6126  058F  3003               	movlw	3
  6127  0590  00B9               	movwf	(main@PWM_Output^(0+128)+1)
  6128  0591                     l3115:	
  6129                           
  6130                           ;main.c: 78: }
  6131                           ;main.c: 80: PWM6_LoadDutyValue(PWM_Output);
  6132  0591  0021               	movlb	1	; select bank1
  6133  0592  0839               	movf	(main@PWM_Output+1)^(0+128),w
  6134  0593  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6135  0594  0838               	movf	main@PWM_Output^(0+128),w
  6136  0595  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6137  0596  3188  2000  3184   	fcall	_PWM6_LoadDutyValue
  6138                           
  6139                           ;main.c: 82: startupTimer = 69;
  6140  0599  3045               	movlw	69
  6141  059A  0021               	movlb	1	; select bank1
  6142  059B  00A0               	movwf	??_main^(0+128)
  6143  059C  0820               	movf	??_main^(0+128),w
  6144  059D  00B7               	movwf	main@startupTimer^(0+128)
  6145  059E                     l3119:	
  6146                           
  6147                           ;main.c: 83: }
  6148                           ;main.c: 85: startupTimer +=1;
  6149  059E  3001               	movlw	1
  6150  059F  00A0               	movwf	??_main^(0+128)
  6151  05A0  0820               	movf	??_main^(0+128),w
  6152  05A1  07B7               	addwf	main@startupTimer^(0+128),f
  6153                           
  6154                           ;main.c: 88: R = 10200/(1023/(float)readTemperature - 1);
  6155  05A2  3000               	movlw	0
  6156  05A3  0020               	movlb	0	; select bank0
  6157  05A4  00B0               	movwf	___ftadd@f1
  6158  05A5  3080               	movlw	128
  6159  05A6  00B1               	movwf	___ftadd@f1+1
  6160  05A7  30BF               	movlw	191
  6161  05A8  00B2               	movwf	___ftadd@f1+2
  6162  05A9  0021               	movlb	1	; select bank1
  6163  05AA  0844               	movf	(main@readTemperature+1)^(0+128),w
  6164  05AB  00F9               	movwf	___lwtoft@c+1
  6165  05AC  0843               	movf	main@readTemperature^(0+128),w
  6166  05AD  00F8               	movwf	___lwtoft@c
  6167  05AE  3197  278A  3184   	fcall	___lwtoft
  6168  05B1  0878               	movf	?___lwtoft,w
  6169  05B2  0020               	movlb	0	; select bank0
  6170  05B3  00A0               	movwf	___ftdiv@f2
  6171  05B4  0879               	movf	?___lwtoft+1,w
  6172  05B5  00A1               	movwf	___ftdiv@f2+1
  6173  05B6  087A               	movf	?___lwtoft+2,w
  6174  05B7  00A2               	movwf	___ftdiv@f2+2
  6175  05B8  30C0               	movlw	192
  6176  05B9  00A3               	movwf	___ftdiv@f1
  6177  05BA  307F               	movlw	127
  6178  05BB  00A4               	movwf	___ftdiv@f1+1
  6179  05BC  3044               	movlw	68
  6180  05BD  00A5               	movwf	___ftdiv@f1+2
  6181  05BE  318D  2535  3184   	fcall	___ftdiv
  6182  05C1  0020               	movlb	0	; select bank0
  6183  05C2  0820               	movf	?___ftdiv,w
  6184  05C3  00B3               	movwf	___ftadd@f2
  6185  05C4  0821               	movf	?___ftdiv+1,w
  6186  05C5  00B4               	movwf	___ftadd@f2+1
  6187  05C6  0822               	movf	?___ftdiv+2,w
  6188  05C7  00B5               	movwf	___ftadd@f2+2
  6189  05C8  3181  2155  3184   	fcall	___ftadd
  6190  05CB  0020               	movlb	0	; select bank0
  6191  05CC  0830               	movf	?___ftadd,w
  6192  05CD  0021               	movlb	1	; select bank1
  6193  05CE  00AF               	movwf	_main$1054^(0+128)
  6194  05CF  0020               	movlb	0	; select bank0
  6195  05D0  0831               	movf	?___ftadd+1,w
  6196  05D1  0021               	movlb	1	; select bank1
  6197  05D2  00B0               	movwf	(_main$1054+1)^(0+128)
  6198  05D3  0020               	movlb	0	; select bank0
  6199  05D4  0832               	movf	?___ftadd+2,w
  6200  05D5  0021               	movlb	1	; select bank1
  6201  05D6  00B1               	movwf	(_main$1054+2)^(0+128)
  6202                           
  6203                           ;main.c: 88: R = 10200/(1023/(float)readTemperature - 1);
  6204  05D7  082F               	movf	_main$1054^(0+128),w
  6205  05D8  0020               	movlb	0	; select bank0
  6206  05D9  00A0               	movwf	___ftdiv@f2
  6207  05DA  0021               	movlb	1	; select bank1
  6208  05DB  0830               	movf	(_main$1054+1)^(0+128),w
  6209  05DC  0020               	movlb	0	; select bank0
  6210  05DD  00A1               	movwf	___ftdiv@f2+1
  6211  05DE  0021               	movlb	1	; select bank1
  6212  05DF  0831               	movf	(_main$1054+2)^(0+128),w
  6213  05E0  0020               	movlb	0	; select bank0
  6214  05E1  00A2               	movwf	___ftdiv@f2+2
  6215  05E2  3060               	movlw	96
  6216  05E3  00A3               	movwf	___ftdiv@f1
  6217  05E4  301F               	movlw	31
  6218  05E5  00A4               	movwf	___ftdiv@f1+1
  6219  05E6  3046               	movlw	70
  6220  05E7  00A5               	movwf	___ftdiv@f1+2
  6221  05E8  318D  2535  3184   	fcall	___ftdiv
  6222  05EB  0020               	movlb	0	; select bank0
  6223  05EC  0820               	movf	?___ftdiv,w
  6224  05ED  0021               	movlb	1	; select bank1
  6225  05EE  00AC               	movwf	main@R^(0+128)
  6226  05EF  0020               	movlb	0	; select bank0
  6227  05F0  0821               	movf	?___ftdiv+1,w
  6228  05F1  0021               	movlb	1	; select bank1
  6229  05F2  00AD               	movwf	(main@R+1)^(0+128)
  6230  05F3  0020               	movlb	0	; select bank0
  6231  05F4  0822               	movf	?___ftdiv+2,w
  6232  05F5  0021               	movlb	1	; select bank1
  6233  05F6  00AE               	movwf	(main@R+2)^(0+128)
  6234                           
  6235                           ;main.c: 90: steinhart = R /10061;
  6236  05F7  3034               	movlw	52
  6237  05F8  0020               	movlb	0	; select bank0
  6238  05F9  00A0               	movwf	___ftdiv@f2
  6239  05FA  301D               	movlw	29
  6240  05FB  00A1               	movwf	___ftdiv@f2+1
  6241  05FC  3046               	movlw	70
  6242  05FD  00A2               	movwf	___ftdiv@f2+2
  6243  05FE  0021               	movlb	1	; select bank1
  6244  05FF  082C               	movf	main@R^(0+128),w
  6245  0600  0020               	movlb	0	; select bank0
  6246  0601  00A3               	movwf	___ftdiv@f1
  6247  0602  0021               	movlb	1	; select bank1
  6248  0603  082D               	movf	(main@R+1)^(0+128),w
  6249  0604  0020               	movlb	0	; select bank0
  6250  0605  00A4               	movwf	___ftdiv@f1+1
  6251  0606  0021               	movlb	1	; select bank1
  6252  0607  082E               	movf	(main@R+2)^(0+128),w
  6253  0608  0020               	movlb	0	; select bank0
  6254  0609  00A5               	movwf	___ftdiv@f1+2
  6255  060A  318D  2535  3184   	fcall	___ftdiv
  6256  060D  0020               	movlb	0	; select bank0
  6257  060E  0820               	movf	?___ftdiv,w
  6258  060F  0021               	movlb	1	; select bank1
  6259  0610  00C5               	movwf	main@steinhart^(0+128)
  6260  0611  0020               	movlb	0	; select bank0
  6261  0612  0821               	movf	?___ftdiv+1,w
  6262  0613  0021               	movlb	1	; select bank1
  6263  0614  00C6               	movwf	(main@steinhart+1)^(0+128)
  6264  0615  0020               	movlb	0	; select bank0
  6265  0616  0822               	movf	?___ftdiv+2,w
  6266  0617  0021               	movlb	1	; select bank1
  6267  0618  00C7               	movwf	(main@steinhart+2)^(0+128)
  6268                           
  6269                           ;main.c: 91: steinhart = log(steinhart);
  6270  0619  0845               	movf	main@steinhart^(0+128),w
  6271  061A  0020               	movlb	0	; select bank0
  6272  061B  00C7               	movwf	log@x
  6273  061C  0021               	movlb	1	; select bank1
  6274  061D  0846               	movf	(main@steinhart+1)^(0+128),w
  6275  061E  0020               	movlb	0	; select bank0
  6276  061F  00C8               	movwf	log@x+1
  6277  0620  0021               	movlb	1	; select bank1
  6278  0621  0847               	movf	(main@steinhart+2)^(0+128),w
  6279  0622  0020               	movlb	0	; select bank0
  6280  0623  00C9               	movwf	log@x+2
  6281  0624  318D  25DE  3184   	fcall	_log
  6282  0627  0020               	movlb	0	; select bank0
  6283  0628  0847               	movf	?_log,w
  6284  0629  0021               	movlb	1	; select bank1
  6285  062A  00C5               	movwf	main@steinhart^(0+128)
  6286  062B  0020               	movlb	0	; select bank0
  6287  062C  0848               	movf	?_log+1,w
  6288  062D  0021               	movlb	1	; select bank1
  6289  062E  00C6               	movwf	(main@steinhart+1)^(0+128)
  6290  062F  0020               	movlb	0	; select bank0
  6291  0630  0849               	movf	?_log+2,w
  6292  0631  0021               	movlb	1	; select bank1
  6293  0632  00C7               	movwf	(main@steinhart+2)^(0+128)
  6294                           
  6295                           ;main.c: 92: steinhart /= 3995;
  6296  0633  30B0               	movlw	176
  6297  0634  0020               	movlb	0	; select bank0
  6298  0635  00A0               	movwf	___ftdiv@f2
  6299  0636  3079               	movlw	121
  6300  0637  00A1               	movwf	___ftdiv@f2+1
  6301  0638  3045               	movlw	69
  6302  0639  00A2               	movwf	___ftdiv@f2+2
  6303  063A  0021               	movlb	1	; select bank1
  6304  063B  0845               	movf	main@steinhart^(0+128),w
  6305  063C  0020               	movlb	0	; select bank0
  6306  063D  00A3               	movwf	___ftdiv@f1
  6307  063E  0021               	movlb	1	; select bank1
  6308  063F  0846               	movf	(main@steinhart+1)^(0+128),w
  6309  0640  0020               	movlb	0	; select bank0
  6310  0641  00A4               	movwf	___ftdiv@f1+1
  6311  0642  0021               	movlb	1	; select bank1
  6312  0643  0847               	movf	(main@steinhart+2)^(0+128),w
  6313  0644  0020               	movlb	0	; select bank0
  6314  0645  00A5               	movwf	___ftdiv@f1+2
  6315  0646  318D  2535  3184   	fcall	___ftdiv
  6316  0649  0020               	movlb	0	; select bank0
  6317  064A  0820               	movf	?___ftdiv,w
  6318  064B  0021               	movlb	1	; select bank1
  6319  064C  00C5               	movwf	main@steinhart^(0+128)
  6320  064D  0020               	movlb	0	; select bank0
  6321  064E  0821               	movf	?___ftdiv+1,w
  6322  064F  0021               	movlb	1	; select bank1
  6323  0650  00C6               	movwf	(main@steinhart+1)^(0+128)
  6324  0651  0020               	movlb	0	; select bank0
  6325  0652  0822               	movf	?___ftdiv+2,w
  6326  0653  0021               	movlb	1	; select bank1
  6327  0654  00C7               	movwf	(main@steinhart+2)^(0+128)
  6328                           
  6329                           ;main.c: 93: steinhart += 1.0 / (25 + 273.15);
  6330  0655  30CF               	movlw	207
  6331  0656  0020               	movlb	0	; select bank0
  6332  0657  00B0               	movwf	___ftadd@f1
  6333  0658  305B               	movlw	91
  6334  0659  00B1               	movwf	___ftadd@f1+1
  6335  065A  303B               	movlw	59
  6336  065B  00B2               	movwf	___ftadd@f1+2
  6337  065C  0021               	movlb	1	; select bank1
  6338  065D  0845               	movf	main@steinhart^(0+128),w
  6339  065E  0020               	movlb	0	; select bank0
  6340  065F  00B3               	movwf	___ftadd@f2
  6341  0660  0021               	movlb	1	; select bank1
  6342  0661  0846               	movf	(main@steinhart+1)^(0+128),w
  6343  0662  0020               	movlb	0	; select bank0
  6344  0663  00B4               	movwf	___ftadd@f2+1
  6345  0664  0021               	movlb	1	; select bank1
  6346  0665  0847               	movf	(main@steinhart+2)^(0+128),w
  6347  0666  0020               	movlb	0	; select bank0
  6348  0667  00B5               	movwf	___ftadd@f2+2
  6349  0668  3181  2155  3184   	fcall	___ftadd
  6350  066B  0020               	movlb	0	; select bank0
  6351  066C  0830               	movf	?___ftadd,w
  6352  066D  0021               	movlb	1	; select bank1
  6353  066E  00C5               	movwf	main@steinhart^(0+128)
  6354  066F  0020               	movlb	0	; select bank0
  6355  0670  0831               	movf	?___ftadd+1,w
  6356  0671  0021               	movlb	1	; select bank1
  6357  0672  00C6               	movwf	(main@steinhart+1)^(0+128)
  6358  0673  0020               	movlb	0	; select bank0
  6359  0674  0832               	movf	?___ftadd+2,w
  6360  0675  0021               	movlb	1	; select bank1
  6361  0676  00C7               	movwf	(main@steinhart+2)^(0+128)
  6362                           
  6363                           ;main.c: 94: steinhart = 1.0 / steinhart;
  6364  0677  0845               	movf	main@steinhart^(0+128),w
  6365  0678  0020               	movlb	0	; select bank0
  6366  0679  00A0               	movwf	___ftdiv@f2
  6367  067A  0021               	movlb	1	; select bank1
  6368  067B  0846               	movf	(main@steinhart+1)^(0+128),w
  6369  067C  0020               	movlb	0	; select bank0
  6370  067D  00A1               	movwf	___ftdiv@f2+1
  6371  067E  0021               	movlb	1	; select bank1
  6372  067F  0847               	movf	(main@steinhart+2)^(0+128),w
  6373  0680  0020               	movlb	0	; select bank0
  6374  0681  00A2               	movwf	___ftdiv@f2+2
  6375  0682  3000               	movlw	0
  6376  0683  00A3               	movwf	___ftdiv@f1
  6377  0684  3080               	movlw	128
  6378  0685  00A4               	movwf	___ftdiv@f1+1
  6379  0686  303F               	movlw	63
  6380  0687  00A5               	movwf	___ftdiv@f1+2
  6381  0688  318D  2535  3184   	fcall	___ftdiv
  6382  068B  0020               	movlb	0	; select bank0
  6383  068C  0820               	movf	?___ftdiv,w
  6384  068D  0021               	movlb	1	; select bank1
  6385  068E  00C5               	movwf	main@steinhart^(0+128)
  6386  068F  0020               	movlb	0	; select bank0
  6387  0690  0821               	movf	?___ftdiv+1,w
  6388  0691  0021               	movlb	1	; select bank1
  6389  0692  00C6               	movwf	(main@steinhart+1)^(0+128)
  6390  0693  0020               	movlb	0	; select bank0
  6391  0694  0822               	movf	?___ftdiv+2,w
  6392  0695  0021               	movlb	1	; select bank1
  6393  0696  00C7               	movwf	(main@steinhart+2)^(0+128)
  6394                           
  6395                           ;main.c: 95: steinhart -= 273.15;
  6396  0697  3093               	movlw	147
  6397  0698  0020               	movlb	0	; select bank0
  6398  0699  00BD               	movwf	___ftsub@f2
  6399  069A  3088               	movlw	136
  6400  069B  00BE               	movwf	___ftsub@f2+1
  6401  069C  3043               	movlw	67
  6402  069D  00BF               	movwf	___ftsub@f2+2
  6403  069E  0021               	movlb	1	; select bank1
  6404  069F  0845               	movf	main@steinhart^(0+128),w
  6405  06A0  0020               	movlb	0	; select bank0
  6406  06A1  00C0               	movwf	___ftsub@f1
  6407  06A2  0021               	movlb	1	; select bank1
  6408  06A3  0846               	movf	(main@steinhart+1)^(0+128),w
  6409  06A4  0020               	movlb	0	; select bank0
  6410  06A5  00C1               	movwf	___ftsub@f1+1
  6411  06A6  0021               	movlb	1	; select bank1
  6412  06A7  0847               	movf	(main@steinhart+2)^(0+128),w
  6413  06A8  0020               	movlb	0	; select bank0
  6414  06A9  00C2               	movwf	___ftsub@f1+2
  6415  06AA  3188  204B  3184   	fcall	___ftsub
  6416  06AD  0020               	movlb	0	; select bank0
  6417  06AE  083D               	movf	?___ftsub,w
  6418  06AF  0021               	movlb	1	; select bank1
  6419  06B0  00C5               	movwf	main@steinhart^(0+128)
  6420  06B1  0020               	movlb	0	; select bank0
  6421  06B2  083E               	movf	?___ftsub+1,w
  6422  06B3  0021               	movlb	1	; select bank1
  6423  06B4  00C6               	movwf	(main@steinhart+1)^(0+128)
  6424  06B5  0020               	movlb	0	; select bank0
  6425  06B6  083F               	movf	?___ftsub+2,w
  6426  06B7  0021               	movlb	1	; select bank1
  6427  06B8  00C7               	movwf	(main@steinhart+2)^(0+128)
  6428                           
  6429                           ;main.c: 98: displayTemp = (uint16_t)(steinhart * 10);
  6430  06B9  0845               	movf	main@steinhart^(0+128),w
  6431  06BA  0020               	movlb	0	; select bank0
  6432  06BB  00A3               	movwf	___ftmul@f2
  6433  06BC  0021               	movlb	1	; select bank1
  6434  06BD  0846               	movf	(main@steinhart+1)^(0+128),w
  6435  06BE  0020               	movlb	0	; select bank0
  6436  06BF  00A4               	movwf	___ftmul@f2+1
  6437  06C0  0021               	movlb	1	; select bank1
  6438  06C1  0847               	movf	(main@steinhart+2)^(0+128),w
  6439  06C2  0020               	movlb	0	; select bank0
  6440  06C3  00A5               	movwf	___ftmul@f2+2
  6441  06C4  3000               	movlw	0
  6442  06C5  00A0               	movwf	___ftmul@f1
  6443  06C6  3020               	movlw	32
  6444  06C7  00A1               	movwf	___ftmul@f1+1
  6445  06C8  3041               	movlw	65
  6446  06C9  00A2               	movwf	___ftmul@f1+2
  6447  06CA  318E  268E  3184   	fcall	___ftmul
  6448  06CD  0020               	movlb	0	; select bank0
  6449  06CE  0820               	movf	?___ftmul,w
  6450  06CF  00DA               	movwf	___fttol@f1
  6451  06D0  0821               	movf	?___ftmul+1,w
  6452  06D1  00DB               	movwf	___fttol@f1+1
  6453  06D2  0822               	movf	?___ftmul+2,w
  6454  06D3  00DC               	movwf	___fttol@f1+2
  6455  06D4  3180  2005  3184   	fcall	___fttol
  6456  06D7  0020               	movlb	0	; select bank0
  6457  06D8  085B               	movf	?___fttol+1,w
  6458  06D9  0021               	movlb	1	; select bank1
  6459  06DA  00C2               	movwf	(main@displayTemp+1)^(0+128)
  6460  06DB  0020               	movlb	0	; select bank0
  6461  06DC  085A               	movf	?___fttol,w
  6462  06DD  0021               	movlb	1	; select bank1
  6463  06DE  00C1               	movwf	main@displayTemp^(0+128)
  6464                           
  6465                           ;main.c: 100: if(toggle == 1)
  6466  06DF  033A               	decf	main@toggle^(0+128),w
  6467  06E0  1D03               	btfss	3,2
  6468  06E1  2F18               	goto	l3151
  6469                           
  6470                           ;main.c: 101: {
  6471                           ;main.c: 102: displayTemp = displayTemp*9/5+320;
  6472  06E2  3005               	movlw	5
  6473  06E3  00F6               	movwf	___lwdiv@divisor
  6474  06E4  3000               	movlw	0
  6475  06E5  00F7               	movwf	___lwdiv@divisor+1
  6476  06E6  0842               	movf	(main@displayTemp+1)^(0+128),w
  6477  06E7  00F1               	movwf	___wmul@multiplier+1
  6478  06E8  0841               	movf	main@displayTemp^(0+128),w
  6479  06E9  00F0               	movwf	___wmul@multiplier
  6480  06EA  3009               	movlw	9
  6481  06EB  00F2               	movwf	___wmul@multiplicand
  6482  06EC  3000               	movlw	0
  6483  06ED  00F3               	movwf	___wmul@multiplicand+1
  6484  06EE  3188  2030  3184   	fcall	___wmul
  6485  06F1  0871               	movf	?___wmul+1,w
  6486  06F2  00F9               	movwf	___lwdiv@dividend+1
  6487  06F3  0870               	movf	?___wmul,w
  6488  06F4  00F8               	movwf	___lwdiv@dividend
  6489  06F5  3189  2135  3184   	fcall	___lwdiv
  6490  06F8  0876               	movf	?___lwdiv,w
  6491  06F9  3E40               	addlw	64
  6492  06FA  0021               	movlb	1	; select bank1
  6493  06FB  00C1               	movwf	main@displayTemp^(0+128)
  6494  06FC  3001               	movlw	1
  6495  06FD  3D77               	addwfc	?___lwdiv+1,w
  6496  06FE  00C2               	movwf	(main@displayTemp+1)^(0+128)
  6497                           
  6498                           ;main.c: 103: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6499  06FF  01F3               	clrf	LCD_Set_Cursor@y
  6500  0700  0AF3               	incf	LCD_Set_Cursor@y,f
  6501  0701  3000               	movlw	0
  6502  0702  318A  221C  3184   	fcall	_LCD_Set_Cursor
  6503  0705  0021               	movlb	1	; select bank1
  6504  0706  0842               	movf	(main@displayTemp+1)^(0+128),w
  6505  0707  00FA               	movwf	LCD_Write_Int@value+1
  6506  0708  0841               	movf	main@displayTemp^(0+128),w
  6507  0709  00F9               	movwf	LCD_Write_Int@value
  6508  070A  01FB               	clrf	LCD_Write_Int@fieldLength
  6509  070B  03FB               	decf	LCD_Write_Int@fieldLength,f
  6510  070C  01FC               	clrf	LCD_Write_Int@numPlaces
  6511  070D  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6512  070E  01FD               	clrf	LCD_Write_Int@sign
  6513  070F  3180  208C  3184   	fcall	_LCD_Write_Int
  6514                           
  6515                           ;main.c: 104: LCD_Write_Char(0);
  6516  0712  3000               	movlw	0
  6517  0713  3188  20AF  3184   	fcall	_LCD_Write_Char
  6518                           
  6519                           ;main.c: 105: LCD_Write_Char('F');
  6520  0716  3046               	movlw	70
  6521  0717  2F30               	goto	L1
  6522  0718                     l3151:	
  6523                           ;main.c: 107: }
  6524                           
  6525                           ;main.c: 106: LCD_Write_Char(' ');
  6526                           
  6527                           
  6528                           ;main.c: 108: else
  6529                           ;main.c: 109: {
  6530                           ;main.c: 110: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6531  0718  01F3               	clrf	LCD_Set_Cursor@y
  6532  0719  0AF3               	incf	LCD_Set_Cursor@y,f
  6533  071A  3000               	movlw	0
  6534  071B  318A  221C  3184   	fcall	_LCD_Set_Cursor
  6535  071E  0021               	movlb	1	; select bank1
  6536  071F  0842               	movf	(main@displayTemp+1)^(0+128),w
  6537  0720  00FA               	movwf	LCD_Write_Int@value+1
  6538  0721  0841               	movf	main@displayTemp^(0+128),w
  6539  0722  00F9               	movwf	LCD_Write_Int@value
  6540  0723  01FB               	clrf	LCD_Write_Int@fieldLength
  6541  0724  03FB               	decf	LCD_Write_Int@fieldLength,f
  6542  0725  01FC               	clrf	LCD_Write_Int@numPlaces
  6543  0726  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6544  0727  01FD               	clrf	LCD_Write_Int@sign
  6545  0728  3180  208C  3184   	fcall	_LCD_Write_Int
  6546                           
  6547                           ;main.c: 111: LCD_Write_Char(0);
  6548  072B  3000               	movlw	0
  6549  072C  3188  20AF  3184   	fcall	_LCD_Write_Char
  6550                           
  6551                           ;main.c: 112: LCD_Write_Char('C');
  6552  072F  3043               	movlw	67
  6553  0730                     L1:	
  6554  0730  3188  20AF  3184   	fcall	_LCD_Write_Char
  6555                           
  6556                           ;main.c: 113: LCD_Write_Char(' ');
  6557  0733  3020               	movlw	32
  6558  0734  3188  20AF  3184   	fcall	_LCD_Write_Char
  6559                           
  6560                           ;main.c: 114: }
  6561                           ;main.c: 117: { LCD_Set_Cursor(1,4); LCD_Write_Int(PWM_Output,4, 0, 0);};
  6562  0737  3004               	movlw	4
  6563  0738  0021               	movlb	1	; select bank1
  6564  0739  00A0               	movwf	??_main^(0+128)
  6565  073A  0820               	movf	??_main^(0+128),w
  6566  073B  00F3               	movwf	LCD_Set_Cursor@y
  6567  073C  3001               	movlw	1
  6568  073D  318A  221C  3184   	fcall	_LCD_Set_Cursor
  6569  0740  0021               	movlb	1	; select bank1
  6570  0741  0839               	movf	(main@PWM_Output+1)^(0+128),w
  6571  0742  00FA               	movwf	LCD_Write_Int@value+1
  6572  0743  0838               	movf	main@PWM_Output^(0+128),w
  6573  0744  00F9               	movwf	LCD_Write_Int@value
  6574  0745  3004               	movlw	4
  6575  0746  00A0               	movwf	??_main^(0+128)
  6576  0747  0820               	movf	??_main^(0+128),w
  6577  0748  00FB               	movwf	LCD_Write_Int@fieldLength
  6578  0749  01FC               	clrf	LCD_Write_Int@numPlaces
  6579  074A  01FD               	clrf	LCD_Write_Int@sign
  6580  074B  3180  208C  3184   	fcall	_LCD_Write_Int
  6581                           
  6582                           ;main.c: 118: LCD_Write_Char(' ');
  6583  074E  3020               	movlw	32
  6584  074F  3188  20AF  3184   	fcall	_LCD_Write_Char
  6585                           
  6586                           ;main.c: 121: counter +=1;
  6587  0752  3001               	movlw	1
  6588  0753  0021               	movlb	1	; select bank1
  6589  0754  07B5               	addwf	main@counter^(0+128),f
  6590  0755  3000               	movlw	0
  6591  0756  3DB6               	addwfc	(main@counter+1)^(0+128),f
  6592                           
  6593                           ;main.c: 123: if(counter>12)
  6594  0757  3000               	movlw	0
  6595  0758  0236               	subwf	(main@counter+1)^(0+128),w
  6596  0759  300D               	movlw	13
  6597  075A  1903               	skipnz
  6598  075B  0235               	subwf	main@counter^(0+128),w
  6599  075C  1C03               	skipc
  6600  075D  2F66               	goto	l3173
  6601                           
  6602                           ;main.c: 124: {
  6603                           ;main.c: 125: toggle = 1-toggle;
  6604  075E  033A               	decf	main@toggle^(0+128),w
  6605  075F  3AFF               	xorlw	255
  6606  0760  3E01               	addlw	1
  6607  0761  00A0               	movwf	??_main^(0+128)
  6608  0762  0820               	movf	??_main^(0+128),w
  6609  0763  00BA               	movwf	main@toggle^(0+128)
  6610                           
  6611                           ;main.c: 126: counter = 0;
  6612  0764  01B5               	clrf	main@counter^(0+128)
  6613  0765  01B6               	clrf	(main@counter+1)^(0+128)
  6614  0766                     l3173:	
  6615                           
  6616                           ;main.c: 127: }
  6617                           ;main.c: 130: if(TMR0IF)
  6618  0766  002E               	movlb	14	; select bank14
  6619  0767  1E8C               	btfss	12,5	;volatile
  6620  0768  2F75               	goto	l3179
  6621                           
  6622                           ;main.c: 131: {
  6623                           ;main.c: 132: TMR0H = 0x24;
  6624  0769  3024               	movlw	36
  6625  076A  0020               	movlb	0	; select bank0
  6626  076B  009D               	movwf	29	;volatile
  6627                           
  6628                           ;main.c: 133: TMR0L = 0x9F;
  6629  076C  309F               	movlw	159
  6630  076D  009C               	movwf	28	;volatile
  6631                           
  6632                           ;main.c: 134: TMR0IF = 0;
  6633  076E  002E               	movlb	14	; select bank14
  6634  076F  128C               	bcf	12,5	;volatile
  6635                           
  6636                           ;main.c: 135: seconds+=1;
  6637  0770  3001               	movlw	1
  6638  0771  0021               	movlb	1	; select bank1
  6639  0772  07B2               	addwf	main@seconds^(0+128),f
  6640  0773  3000               	movlw	0
  6641  0774  3DB3               	addwfc	(main@seconds+1)^(0+128),f
  6642  0775                     l3179:	
  6643                           
  6644                           ;main.c: 136: }
  6645                           ;main.c: 138: if(setpoint - steinhart < 2)
  6646  0775  0021               	movlb	1	; select bank1
  6647  0776  0845               	movf	main@steinhart^(0+128),w
  6648  0777  00F0               	movwf	___ftneg@f1
  6649  0778  0846               	movf	(main@steinhart+1)^(0+128),w
  6650  0779  00F1               	movwf	___ftneg@f1+1
  6651  077A  0847               	movf	(main@steinhart+2)^(0+128),w
  6652  077B  00F2               	movwf	___ftneg@f1+2
  6653  077C  3197  270F  3184   	fcall	___ftneg
  6654  077F  0870               	movf	?___ftneg,w
  6655  0780  0020               	movlb	0	; select bank0
  6656  0781  00B0               	movwf	___ftadd@f1
  6657  0782  0871               	movf	?___ftneg+1,w
  6658  0783  00B1               	movwf	___ftadd@f1+1
  6659  0784  0872               	movf	?___ftneg+2,w
  6660  0785  00B2               	movwf	___ftadd@f1+2
  6661  0786  086F               	movf	_setpoint,w
  6662  0787  3197  27E6  3184   	fcall	___lbtoft
  6663  078A  0878               	movf	?___lbtoft,w
  6664  078B  0020               	movlb	0	; select bank0
  6665  078C  00B3               	movwf	___ftadd@f2
  6666  078D  0879               	movf	?___lbtoft+1,w
  6667  078E  00B4               	movwf	___ftadd@f2+1
  6668  078F  087A               	movf	?___lbtoft+2,w
  6669  0790  00B5               	movwf	___ftadd@f2+2
  6670  0791  3181  2155  3184   	fcall	___ftadd
  6671  0794  0020               	movlb	0	; select bank0
  6672  0795  0830               	movf	?___ftadd,w
  6673  0796  00BD               	movwf	___ftge@ff1
  6674  0797  0831               	movf	?___ftadd+1,w
  6675  0798  00BE               	movwf	___ftge@ff1+1
  6676  0799  0832               	movf	?___ftadd+2,w
  6677  079A  00BF               	movwf	___ftge@ff1+2
  6678  079B  3000               	movlw	0
  6679  079C  00C0               	movwf	___ftge@ff2
  6680  079D  3000               	movlw	0
  6681  079E  00C1               	movwf	___ftge@ff2+1
  6682  079F  3040               	movlw	64
  6683  07A0  00C2               	movwf	___ftge@ff2+2
  6684  07A1  3189  21A4  3184   	fcall	___ftge
  6685  07A4  1803               	btfsc	3,0
  6686  07A5  2FB4               	goto	l3187
  6687                           
  6688                           ;main.c: 139: {
  6689                           ;main.c: 140: if(seconds>63)
  6690  07A6  3000               	movlw	0
  6691  07A7  0021               	movlb	1	; select bank1
  6692  07A8  0233               	subwf	(main@seconds+1)^(0+128),w
  6693  07A9  3040               	movlw	64
  6694  07AA  1903               	skipnz
  6695  07AB  0232               	subwf	main@seconds^(0+128),w
  6696  07AC  1C03               	skipc
  6697  07AD  2FB4               	goto	l3187
  6698                           
  6699                           ;main.c: 141: {
  6700                           ;main.c: 142: minutes+=1;
  6701  07AE  3001               	movlw	1
  6702  07AF  07AA               	addwf	main@minutes^(0+128),f
  6703  07B0  3000               	movlw	0
  6704  07B1  3DAB               	addwfc	(main@minutes+1)^(0+128),f
  6705                           
  6706                           ;main.c: 143: seconds = 0;
  6707  07B2  01B2               	clrf	main@seconds^(0+128)
  6708  07B3  01B3               	clrf	(main@seconds+1)^(0+128)
  6709  07B4                     l3187:	
  6710                           
  6711                           ;main.c: 144: }
  6712                           ;main.c: 145: }
  6713                           ;main.c: 148: readButtons();
  6714  07B4  318C  24B2  3184   	fcall	_readButtons
  6715                           
  6716                           ;main.c: 149: tempSetpoint();
  6717  07B7  318F  2742  3184   	fcall	_tempSetpoint
  6718  07BA  2C61               	goto	l3079
  6719  07BB                     __end_of_main:	
  6720                           
  6721                           	psect	text1
  6722  0F42                     __ptext1:	
  6723 ;; *************** function _tempSetpoint *****************
  6724 ;; Defined at:
  6725 ;;		line 12 in file "user.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  counter         1   20[BANK0 ] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;Total ram usage:        4 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		_LCD_Clear
  6748 ;;		_LCD_Set_Cursor
  6749 ;;		_LCD_Write_Char
  6750 ;;		_LCD_Write_Int
  6751 ;;		_LCD_Write_String
  6752 ;;		_readButtons
  6753 ;; This function is called by:
  6754 ;;		_main
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function _tempSetpoint
  6760  0F42                     _tempSetpoint:	
  6761                           
  6762                           ;user.c: 14: uint8_t counter = 0;
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6766  0F42  0020               	movlb	0	; select bank0
  6767  0F43  01B4               	clrf	tempSetpoint@counter
  6768                           
  6769                           ;user.c: 16: oldSetpoint = setpoint;
  6770  0F44  086F               	movf	_setpoint,w
  6771  0F45  00B1               	movwf	??_tempSetpoint
  6772  0F46  0831               	movf	??_tempSetpoint,w
  6773  0F47  0021               	movlb	1	; select bank1
  6774  0F48  00E0               	movwf	_oldSetpoint^(0+128)
  6775  0F49                     l2795:	
  6776                           ;user.c: 18: while(downCount >= 5)
  6777                           
  6778  0F49  3005               	movlw	5
  6779  0F4A  0020               	movlb	0	; select bank0
  6780  0F4B  026A               	subwf	_downCount,w
  6781  0F4C  1C03               	btfss	3,0
  6782  0F4D  2FE4               	goto	l2823
  6783                           
  6784                           ;user.c: 19: {
  6785                           ;user.c: 20: counter+=1;
  6786  0F4E  3001               	movlw	1
  6787  0F4F  0020               	movlb	0	; select bank0
  6788  0F50  00B1               	movwf	??_tempSetpoint
  6789  0F51  0831               	movf	??_tempSetpoint,w
  6790  0F52  07B4               	addwf	tempSetpoint@counter,f
  6791                           
  6792                           ;user.c: 21: if(counter<=1)
  6793  0F53  3002               	movlw	2
  6794  0F54  0234               	subwf	tempSetpoint@counter,w
  6795  0F55  1803               	skipnc
  6796  0F56  2F5A               	goto	l2775
  6797                           
  6798                           ;user.c: 22: {
  6799                           ;user.c: 23: LCD_Clear();
  6800  0F57  3197  2717  318F   	fcall	_LCD_Clear
  6801  0F5A                     l2775:	
  6802                           
  6803                           ;user.c: 24: }
  6804                           ;user.c: 25: setpoint-=1;
  6805  0F5A  3001               	movlw	1
  6806  0F5B  0020               	movlb	0	; select bank0
  6807  0F5C  02EF               	subwf	_setpoint,f
  6808                           
  6809                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6810  0F5D  01F3               	clrf	LCD_Set_Cursor@y
  6811  0F5E  3000               	movlw	0
  6812  0F5F  318A  221C  318F   	fcall	_LCD_Set_Cursor
  6813  0F62  301B               	movlw	low (STR_1| (0+32768))
  6814  0F63  00F5               	movwf	LCD_Write_String@a
  6815  0F64  3090               	movlw	high (STR_1| (0+32768))
  6816  0F65  00F6               	movwf	LCD_Write_String@a+1
  6817  0F66  3188  2016  318F   	fcall	_LCD_Write_String
  6818                           
  6819                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6820  0F69  01F3               	clrf	LCD_Set_Cursor@y
  6821  0F6A  3001               	movlw	1
  6822  0F6B  318A  221C  318F   	fcall	_LCD_Set_Cursor
  6823  0F6E  0020               	movlb	0	; select bank0
  6824  0F6F  086F               	movf	_setpoint,w
  6825  0F70  00B1               	movwf	??_tempSetpoint
  6826  0F71  01B2               	clrf	??_tempSetpoint+1
  6827  0F72  0831               	movf	??_tempSetpoint,w
  6828  0F73  00F9               	movwf	LCD_Write_Int@value
  6829  0F74  0832               	movf	??_tempSetpoint+1,w
  6830  0F75  00FA               	movwf	LCD_Write_Int@value+1
  6831  0F76  3003               	movlw	3
  6832  0F77  00B3               	movwf	??_tempSetpoint+2
  6833  0F78  0833               	movf	??_tempSetpoint+2,w
  6834  0F79  00FB               	movwf	LCD_Write_Int@fieldLength
  6835  0F7A  01FC               	clrf	LCD_Write_Int@numPlaces
  6836  0F7B  01FD               	clrf	LCD_Write_Int@sign
  6837  0F7C  3180  208C  318F   	fcall	_LCD_Write_Int
  6838                           
  6839                           ;user.c: 28: LCD_Write_Char(0);
  6840  0F7F  3000               	movlw	0
  6841  0F80  3188  20AF  318F   	fcall	_LCD_Write_Char
  6842                           
  6843                           ;user.c: 29: LCD_Write_Char('C');
  6844  0F83  3043               	movlw	67
  6845  0F84  3188  20AF  318F   	fcall	_LCD_Write_Char
  6846                           
  6847                           ;user.c: 30: LCD_Write_Char(' ');
  6848  0F87  3020               	movlw	32
  6849  0F88  3188  20AF  318F   	fcall	_LCD_Write_Char
  6850                           
  6851                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6852  0F8B  3072               	movlw	114
  6853  0F8C  0020               	movlb	0	; select bank0
  6854  0F8D  00B2               	movwf	??_tempSetpoint+1
  6855  0F8E  30A1               	movlw	161
  6856  0F8F  00B1               	movwf	??_tempSetpoint
  6857  0F90                     u3437:	
  6858  0F90  0BB1               	decfsz	??_tempSetpoint,f
  6859  0F91  2F90               	goto	u3437
  6860  0F92  0BB2               	decfsz	??_tempSetpoint+1,f
  6861  0F93  2F90               	goto	u3437
  6862  0F94  3200               	nop2
  6863                           
  6864                           ;user.c: 32: readButtons();
  6865  0F95  318C  24B2  318F   	fcall	_readButtons
  6866  0F98  2F49               	goto	l2795
  6867  0F99                     l2797:	
  6868                           ;user.c: 33: }
  6869                           ;user.c: 35: while(upCount >= 5)
  6870                           
  6871                           
  6872                           ;user.c: 36: {
  6873                           ;user.c: 37: counter+=1;
  6874  0F99  3001               	movlw	1
  6875  0F9A  00B1               	movwf	??_tempSetpoint
  6876  0F9B  0831               	movf	??_tempSetpoint,w
  6877  0F9C  07B4               	addwf	tempSetpoint@counter,f
  6878                           
  6879                           ;user.c: 38: if(counter<=1)
  6880  0F9D  3002               	movlw	2
  6881  0F9E  0234               	subwf	tempSetpoint@counter,w
  6882  0F9F  1803               	skipnc
  6883  0FA0  2FA4               	goto	l2803
  6884                           
  6885                           ;user.c: 39: {
  6886                           ;user.c: 40: LCD_Clear();
  6887  0FA1  3197  2717  318F   	fcall	_LCD_Clear
  6888  0FA4                     l2803:	
  6889                           
  6890                           ;user.c: 41: }
  6891                           ;user.c: 42: setpoint+=1;
  6892  0FA4  3001               	movlw	1
  6893  0FA5  0020               	movlb	0	; select bank0
  6894  0FA6  00B1               	movwf	??_tempSetpoint
  6895  0FA7  0831               	movf	??_tempSetpoint,w
  6896  0FA8  07EF               	addwf	_setpoint,f
  6897                           
  6898                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6899  0FA9  01F3               	clrf	LCD_Set_Cursor@y
  6900  0FAA  3000               	movlw	0
  6901  0FAB  318A  221C  318F   	fcall	_LCD_Set_Cursor
  6902  0FAE  301B               	movlw	low (STR_1| (0+32768))
  6903  0FAF  00F5               	movwf	LCD_Write_String@a
  6904  0FB0  3090               	movlw	high (STR_1| (0+32768))
  6905  0FB1  00F6               	movwf	LCD_Write_String@a+1
  6906  0FB2  3188  2016  318F   	fcall	_LCD_Write_String
  6907                           
  6908                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6909  0FB5  01F3               	clrf	LCD_Set_Cursor@y
  6910  0FB6  3001               	movlw	1
  6911  0FB7  318A  221C  318F   	fcall	_LCD_Set_Cursor
  6912  0FBA  0020               	movlb	0	; select bank0
  6913  0FBB  086F               	movf	_setpoint,w
  6914  0FBC  00B1               	movwf	??_tempSetpoint
  6915  0FBD  01B2               	clrf	??_tempSetpoint+1
  6916  0FBE  0831               	movf	??_tempSetpoint,w
  6917  0FBF  00F9               	movwf	LCD_Write_Int@value
  6918  0FC0  0832               	movf	??_tempSetpoint+1,w
  6919  0FC1  00FA               	movwf	LCD_Write_Int@value+1
  6920  0FC2  3003               	movlw	3
  6921  0FC3  00B3               	movwf	??_tempSetpoint+2
  6922  0FC4  0833               	movf	??_tempSetpoint+2,w
  6923  0FC5  00FB               	movwf	LCD_Write_Int@fieldLength
  6924  0FC6  01FC               	clrf	LCD_Write_Int@numPlaces
  6925  0FC7  01FD               	clrf	LCD_Write_Int@sign
  6926  0FC8  3180  208C  318F   	fcall	_LCD_Write_Int
  6927                           
  6928                           ;user.c: 45: LCD_Write_Char(0);
  6929  0FCB  3000               	movlw	0
  6930  0FCC  3188  20AF  318F   	fcall	_LCD_Write_Char
  6931                           
  6932                           ;user.c: 46: LCD_Write_Char('C');
  6933  0FCF  3043               	movlw	67
  6934  0FD0  3188  20AF  318F   	fcall	_LCD_Write_Char
  6935                           
  6936                           ;user.c: 47: LCD_Write_Char(' ');
  6937  0FD3  3020               	movlw	32
  6938  0FD4  3188  20AF  318F   	fcall	_LCD_Write_Char
  6939                           
  6940                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6941  0FD7  3072               	movlw	114
  6942  0FD8  0020               	movlb	0	; select bank0
  6943  0FD9  00B2               	movwf	??_tempSetpoint+1
  6944  0FDA  30A1               	movlw	161
  6945  0FDB  00B1               	movwf	??_tempSetpoint
  6946  0FDC                     u3447:	
  6947  0FDC  0BB1               	decfsz	??_tempSetpoint,f
  6948  0FDD  2FDC               	goto	u3447
  6949  0FDE  0BB2               	decfsz	??_tempSetpoint+1,f
  6950  0FDF  2FDC               	goto	u3447
  6951  0FE0  3200               	nop2
  6952                           
  6953                           ;user.c: 49: readButtons();
  6954  0FE1  318C  24B2  318F   	fcall	_readButtons
  6955  0FE4                     l2823:	
  6956  0FE4  3005               	movlw	5
  6957  0FE5  0020               	movlb	0	; select bank0
  6958  0FE6  026B               	subwf	_upCount,w
  6959  0FE7  1803               	skipnc
  6960  0FE8  2F99               	goto	l2797
  6961                           
  6962                           ;user.c: 50: }
  6963                           ;user.c: 52: counter = 0;
  6964  0FE9  01B4               	clrf	tempSetpoint@counter
  6965                           
  6966                           ;user.c: 54: if(oldSetpoint!=setpoint)
  6967  0FEA  0021               	movlb	1	; select bank1
  6968  0FEB  0860               	movf	_oldSetpoint^(0+128),w
  6969  0FEC  0020               	movlb	0	; select bank0
  6970  0FED  066F               	xorwf	_setpoint,w
  6971  0FEE  1903               	skipnz
  6972  0FEF  0008               	return
  6973                           
  6974                           ;user.c: 55: {
  6975                           ;user.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6976  0FF0  3003               	movlw	3
  6977  0FF1  00B3               	movwf	??_tempSetpoint+2
  6978  0FF2  308A               	movlw	138
  6979  0FF3  00B2               	movwf	??_tempSetpoint+1
  6980  0FF4  3056               	movlw	86
  6981  0FF5  00B1               	movwf	??_tempSetpoint
  6982  0FF6                     u3457:	
  6983  0FF6  0BB1               	decfsz	??_tempSetpoint,f
  6984  0FF7  2FF6               	goto	u3457
  6985  0FF8  0BB2               	decfsz	??_tempSetpoint+1,f
  6986  0FF9  2FF6               	goto	u3457
  6987  0FFA  0BB3               	decfsz	??_tempSetpoint+2,f
  6988  0FFB  2FF6               	goto	u3457
  6989  0FFC  3200               	nop2
  6990                           
  6991                           ;user.c: 57: LCD_Clear();
  6992  0FFD  3197  2717         	fcall	_LCD_Clear
  6993  0FFF  0008               	return
  6994  1000                     __end_of_tempSetpoint:	
  6995                           
  6996                           	psect	text2
  6997  0CB2                     __ptext2:	
  6998 ;; *************** function _readButtons *****************
  6999 ;; Defined at:
  7000 ;;		line 62 in file "user.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;Total ram usage:        3 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    3
  7021 ;; This function calls:
  7022 ;;		_LCD_Clear
  7023 ;;		_LCD_Set_Cursor
  7024 ;;		_LCD_Write_Char
  7025 ;;		_LCD_Write_Int
  7026 ;;		_LCD_Write_String
  7027 ;; This function is called by:
  7028 ;;		_tempSetpoint
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _readButtons
  7035  0CB2                     _readButtons:	
  7036                           
  7037                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7041  0CB2  0020               	movlb	0	; select bank0
  7042  0CB3  1D8C               	btfss	12,3	;volatile
  7043  0CB4  1A0C               	btfsc	12,4	;volatile
  7044  0CB5  2D13               	goto	l2635
  7045                           
  7046                           ;user.c: 65: {
  7047                           ;user.c: 66: downCount = 0;
  7048  0CB6  01EA               	clrf	_downCount
  7049                           
  7050                           ;user.c: 67: upCount = 0;
  7051  0CB7  01EB               	clrf	_upCount
  7052                           
  7053                           ;user.c: 68: toggleCount+=1;
  7054  0CB8  3001               	movlw	1
  7055  0CB9  00AE               	movwf	??_readButtons
  7056  0CBA  082E               	movf	??_readButtons,w
  7057  0CBB  0021               	movlb	1	; select bank1
  7058  0CBC  07E1               	addwf	_toggleCount^(0+128),f
  7059                           
  7060                           ;user.c: 69: if(toggleCount >=6)
  7061  0CBD  3006               	movlw	6
  7062  0CBE  0261               	subwf	_toggleCount^(0+128),w
  7063  0CBF  1C03               	skipc
  7064  0CC0  2D13               	goto	l2635
  7065                           
  7066                           ;user.c: 70: {
  7067                           ;user.c: 71: x+=1;
  7068  0CC1  3001               	movlw	1
  7069  0CC2  0020               	movlb	0	; select bank0
  7070  0CC3  00AE               	movwf	??_readButtons
  7071  0CC4  082E               	movf	??_readButtons,w
  7072  0CC5  07EC               	addwf	_x,f
  7073                           
  7074                           ;user.c: 72: if(x>4)
  7075  0CC6  3005               	movlw	5
  7076  0CC7  026C               	subwf	_x,w
  7077  0CC8  1803               	btfsc	3,0
  7078                           
  7079                           ;user.c: 73: {
  7080                           ;user.c: 74: x=0;
  7081  0CC9  01EC               	clrf	_x
  7082                           
  7083                           ;user.c: 75: }
  7084                           ;user.c: 76: setpoint = presets[x];
  7085  0CCA  086C               	movf	_x,w
  7086  0CCB  3EE2               	addlw	(low (_presets| 0))& (0+255)
  7087  0CCC  0086               	movwf	6
  7088  0CCD  0187               	clrf	7
  7089  0CCE  0801               	movf	1,w
  7090  0CCF  00AE               	movwf	??_readButtons
  7091  0CD0  082E               	movf	??_readButtons,w
  7092  0CD1  00EF               	movwf	_setpoint
  7093                           
  7094                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  7095  0CD2  01F3               	clrf	LCD_Set_Cursor@y
  7096  0CD3  3000               	movlw	0
  7097  0CD4  318A  221C  318C   	fcall	_LCD_Set_Cursor
  7098  0CD7  301B               	movlw	low (STR_1| (0+32768))
  7099  0CD8  00F5               	movwf	LCD_Write_String@a
  7100  0CD9  3090               	movlw	high (STR_1| (0+32768))
  7101  0CDA  00F6               	movwf	LCD_Write_String@a+1
  7102  0CDB  3188  2016  318C   	fcall	_LCD_Write_String
  7103                           
  7104                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  7105  0CDE  01F3               	clrf	LCD_Set_Cursor@y
  7106  0CDF  3001               	movlw	1
  7107  0CE0  318A  221C  318C   	fcall	_LCD_Set_Cursor
  7108  0CE3  0020               	movlb	0	; select bank0
  7109  0CE4  086F               	movf	_setpoint,w
  7110  0CE5  00AE               	movwf	??_readButtons
  7111  0CE6  01AF               	clrf	??_readButtons+1
  7112  0CE7  082E               	movf	??_readButtons,w
  7113  0CE8  00F9               	movwf	LCD_Write_Int@value
  7114  0CE9  082F               	movf	??_readButtons+1,w
  7115  0CEA  00FA               	movwf	LCD_Write_Int@value+1
  7116  0CEB  3003               	movlw	3
  7117  0CEC  00B0               	movwf	??_readButtons+2
  7118  0CED  0830               	movf	??_readButtons+2,w
  7119  0CEE  00FB               	movwf	LCD_Write_Int@fieldLength
  7120  0CEF  01FC               	clrf	LCD_Write_Int@numPlaces
  7121  0CF0  01FD               	clrf	LCD_Write_Int@sign
  7122  0CF1  3180  208C  318C   	fcall	_LCD_Write_Int
  7123                           
  7124                           ;user.c: 79: LCD_Write_Char(0);
  7125  0CF4  3000               	movlw	0
  7126  0CF5  3188  20AF  318C   	fcall	_LCD_Write_Char
  7127                           
  7128                           ;user.c: 80: LCD_Write_Char('C');
  7129  0CF8  3043               	movlw	67
  7130  0CF9  3188  20AF  318C   	fcall	_LCD_Write_Char
  7131                           
  7132                           ;user.c: 81: LCD_Write_Char(' ');
  7133  0CFC  3020               	movlw	32
  7134  0CFD  3188  20AF  318C   	fcall	_LCD_Write_Char
  7135                           
  7136                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  7137  0D00  3002               	movlw	2
  7138  0D01  0020               	movlb	0	; select bank0
  7139  0D02  00B0               	movwf	??_readButtons+2
  7140  0D03  30E7               	movlw	231
  7141  0D04  00AF               	movwf	??_readButtons+1
  7142  0D05  3000               	movlw	0
  7143  0D06  00AE               	movwf	??_readButtons
  7144  0D07                     u3467:	
  7145  0D07  0BAE               	decfsz	??_readButtons,f
  7146  0D08  2D07               	goto	u3467
  7147  0D09  0BAF               	decfsz	??_readButtons+1,f
  7148  0D0A  2D07               	goto	u3467
  7149  0D0B  0BB0               	decfsz	??_readButtons+2,f
  7150  0D0C  2D07               	goto	u3467
  7151  0D0D  0000               	nop
  7152                           
  7153                           ;user.c: 83: toggleCount = 0;
  7154  0D0E  0021               	movlb	1	; select bank1
  7155  0D0F  01E1               	clrf	_toggleCount^(0+128)
  7156                           
  7157                           ;user.c: 84: LCD_Clear();
  7158  0D10  3197  2717  318C   	fcall	_LCD_Clear
  7159  0D13                     l2635:	
  7160                           
  7161                           ;user.c: 85: }
  7162                           ;user.c: 86: }
  7163                           ;user.c: 88: if(RA3 == 0)
  7164  0D13  0020               	movlb	0	; select bank0
  7165  0D14  198C               	btfsc	12,3	;volatile
  7166  0D15  2D23               	goto	l2643
  7167                           
  7168                           ;user.c: 89: {
  7169                           ;user.c: 90: downCount +=1;
  7170  0D16  3001               	movlw	1
  7171  0D17  00AE               	movwf	??_readButtons
  7172  0D18  082E               	movf	??_readButtons,w
  7173  0D19  07EA               	addwf	_downCount,f
  7174                           
  7175                           ;user.c: 91: if(downCount>5)
  7176  0D1A  3006               	movlw	6
  7177  0D1B  026A               	subwf	_downCount,w
  7178  0D1C  1C03               	skipc
  7179  0D1D  2D24               	goto	l2645
  7180                           
  7181                           ;user.c: 92: {
  7182                           ;user.c: 93: downCount = 5;
  7183  0D1E  3005               	movlw	5
  7184  0D1F  00AE               	movwf	??_readButtons
  7185  0D20  082E               	movf	??_readButtons,w
  7186  0D21  00EA               	movwf	_downCount
  7187                           
  7188                           ;user.c: 94: }
  7189                           ;user.c: 95: }
  7190  0D22  2D24               	goto	l2645
  7191  0D23                     l2643:	
  7192                           
  7193                           ;user.c: 96: else
  7194                           ;user.c: 97: {
  7195                           ;user.c: 98: downCount = 0;
  7196  0D23  01EA               	clrf	_downCount
  7197  0D24                     l2645:	
  7198                           
  7199                           ;user.c: 99: }
  7200                           ;user.c: 101: if(RA4 == 0)
  7201  0D24  1A0C               	btfsc	12,4	;volatile
  7202  0D25  2D33               	goto	l2653
  7203                           
  7204                           ;user.c: 102: {
  7205                           ;user.c: 103: upCount +=1;
  7206  0D26  3001               	movlw	1
  7207  0D27  00AE               	movwf	??_readButtons
  7208  0D28  082E               	movf	??_readButtons,w
  7209  0D29  07EB               	addwf	_upCount,f
  7210                           
  7211                           ;user.c: 104: if(upCount>5)
  7212  0D2A  3006               	movlw	6
  7213  0D2B  026B               	subwf	_upCount,w
  7214  0D2C  1C03               	skipc
  7215  0D2D  0008               	return
  7216                           
  7217                           ;user.c: 105: {
  7218                           ;user.c: 106: upCount = 5;
  7219  0D2E  3005               	movlw	5
  7220  0D2F  00AE               	movwf	??_readButtons
  7221  0D30  082E               	movf	??_readButtons,w
  7222  0D31  00EB               	movwf	_upCount
  7223                           
  7224                           ;user.c: 107: }
  7225                           ;user.c: 108: }
  7226  0D32  0008               	return
  7227  0D33                     l2653:	
  7228                           
  7229                           ;user.c: 109: else
  7230                           ;user.c: 110: {
  7231                           ;user.c: 111: upCount = 0;
  7232  0D33  01EB               	clrf	_upCount
  7233  0D34  0008               	return
  7234  0D35                     __end_of_readButtons:	
  7235                           
  7236                           	psect	text3
  7237  0816                     __ptext3:	
  7238 ;; *************** function _LCD_Write_String *****************
  7239 ;; Defined at:
  7240 ;;		line 239 in file "lcd.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  a               2    5[COMMON] PTR const unsigned char 
  7243 ;;		 -> STR_3(10), STR_2(10), STR_1(10), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  i               2    8[COMMON] int 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;Total ram usage:        5 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    2
  7262 ;; This function calls:
  7263 ;;		_LCD_Write_Char
  7264 ;; This function is called by:
  7265 ;;		_tempSetpoint
  7266 ;;		_readButtons
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _LCD_Write_String
  7272  0816                     _LCD_Write_String:	
  7273                           
  7274                           ;lcd.c: 241: int i;
  7275                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  7276                           
  7277                           ;incstack = 0
  7278                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7279  0816  01F8               	clrf	LCD_Write_String@i
  7280  0817  01F9               	clrf	LCD_Write_String@i+1
  7281  0818                     l2245:	
  7282  0818  0875               	movf	LCD_Write_String@a,w
  7283  0819  0778               	addwf	LCD_Write_String@i,w
  7284  081A  0084               	movwf	4
  7285  081B  0876               	movf	LCD_Write_String@a+1,w
  7286  081C  3D79               	addwfc	LCD_Write_String@i+1,w
  7287  081D  0085               	movwf	5
  7288  081E  0012               	moviw fsr0++
  7289  081F  1903               	btfsc	3,2
  7290  0820  0008               	return
  7291                           
  7292                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  7293  0821  0875               	movf	LCD_Write_String@a,w
  7294  0822  0778               	addwf	LCD_Write_String@i,w
  7295  0823  0084               	movwf	4
  7296  0824  0876               	movf	LCD_Write_String@a+1,w
  7297  0825  3D79               	addwfc	LCD_Write_String@i+1,w
  7298  0826  0085               	movwf	5
  7299  0827  0800               	movf	0,w	;code access
  7300  0828  3188  20AF  3188   	fcall	_LCD_Write_Char
  7301  082B  3001               	movlw	1
  7302  082C  07F8               	addwf	LCD_Write_String@i,f
  7303  082D  3000               	movlw	0
  7304  082E  3DF9               	addwfc	LCD_Write_String@i+1,f
  7305  082F  2818               	goto	l2245
  7306  0830                     __end_of_LCD_Write_String:	
  7307                           
  7308                           	psect	text4
  7309  008C                     __ptext4:	
  7310 ;; *************** function _LCD_Write_Int *****************
  7311 ;; Defined at:
  7312 ;;		line 246 in file "lcd.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  value           2    9[COMMON] int 
  7315 ;;  fieldLength     1   11[COMMON] char 
  7316 ;;  numPlaces       1   12[COMMON] char 
  7317 ;;  sign            1   13[COMMON] char 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  str             5    5[BANK0 ] unsigned char [5]
  7320 ;;  i               2   12[BANK0 ] int 
  7321 ;;  j               2   10[BANK0 ] int 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7331 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;Total ram usage:       19 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    2
  7338 ;; This function calls:
  7339 ;;		_LCD_Write_Char
  7340 ;;		___awdiv
  7341 ;;		___awmod
  7342 ;; This function is called by:
  7343 ;;		_tempSetpoint
  7344 ;;		_readButtons
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function _LCD_Write_Int
  7351  008C                     _LCD_Write_Int:	
  7352                           
  7353                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7354                           
  7355                           ;incstack = 0
  7356                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7357  008C  30C8               	movlw	low LCD_Write_Int@F13695
  7358  008D  0086               	movwf	6
  7359  008E  3000               	movlw	high LCD_Write_Int@F13695
  7360  008F  0087               	movwf	7
  7361  0090  3025               	movlw	low LCD_Write_Int@str
  7362  0091  0084               	movwf	4
  7363  0092  3000               	movlw	high LCD_Write_Int@str
  7364  0093  0085               	movwf	5
  7365  0094  3005               	movlw	5
  7366  0095  0020               	movlb	0	; select bank0
  7367  0096  00A0               	movwf	??_LCD_Write_Int
  7368  0097                     u2130:	
  7369  0097  0016               	moviw fsr1++
  7370  0098  001A               	movwi fsr0++
  7371  0099  0BA0               	decfsz	??_LCD_Write_Int,f
  7372  009A  2897               	goto	u2130
  7373                           
  7374                           ;lcd.c: 249: int i=4,j=0;
  7375  009B  3004               	movlw	4
  7376  009C  00AC               	movwf	LCD_Write_Int@i
  7377  009D  3000               	movlw	0
  7378  009E  00AD               	movwf	LCD_Write_Int@i+1
  7379  009F  01AA               	clrf	LCD_Write_Int@j
  7380  00A0  01AB               	clrf	LCD_Write_Int@j+1
  7381                           
  7382                           ;lcd.c: 251: if(value<0)
  7383  00A1  1FFA               	btfss	LCD_Write_Int@value+1,7
  7384  00A2  28AD               	goto	l2259
  7385                           
  7386                           ;lcd.c: 252: {
  7387                           ;lcd.c: 253: LCD_Write_Char('-');
  7388  00A3  302D               	movlw	45
  7389  00A4  3188  20AF  3180   	fcall	_LCD_Write_Char
  7390                           
  7391                           ;lcd.c: 254: value=value*-1;
  7392  00A7  09F9               	comf	LCD_Write_Int@value,f
  7393  00A8  09FA               	comf	LCD_Write_Int@value+1,f
  7394  00A9  0AF9               	incf	LCD_Write_Int@value,f
  7395  00AA  1903               	skipnz
  7396  00AB  0AFA               	incf	LCD_Write_Int@value+1,f
  7397                           
  7398                           ;lcd.c: 255: }
  7399  00AC  28B4               	goto	l2269
  7400  00AD                     l2259:	
  7401                           
  7402                           ;lcd.c: 257: else
  7403                           ;lcd.c: 258: {
  7404                           ;lcd.c: 259: if(sign == 1)
  7405  00AD  037D               	decf	LCD_Write_Int@sign,w
  7406  00AE  1D03               	btfss	3,2
  7407  00AF  28B4               	goto	l2269
  7408                           
  7409                           ;lcd.c: 260: {
  7410                           ;lcd.c: 261: LCD_Write_Char('+');
  7411  00B0  302B               	movlw	43
  7412  00B1  3188  20AF  3180   	fcall	_LCD_Write_Char
  7413  00B4                     l2269:	
  7414                           ;lcd.c: 262: }
  7415                           ;lcd.c: 263: }
  7416                           ;lcd.c: 265: while(value)
  7417                           
  7418  00B4  0879               	movf	LCD_Write_Int@value,w
  7419  00B5  047A               	iorwf	LCD_Write_Int@value+1,w
  7420  00B6  1903               	btfsc	3,2
  7421  00B7  28E1               	goto	l2271
  7422                           
  7423                           ;lcd.c: 266: {
  7424                           ;lcd.c: 267: str[i]=value%10;
  7425  00B8  300A               	movlw	10
  7426  00B9  00F0               	movwf	___awmod@divisor
  7427  00BA  3000               	movlw	0
  7428  00BB  00F1               	movwf	___awmod@divisor+1
  7429  00BC  087A               	movf	LCD_Write_Int@value+1,w
  7430  00BD  00F3               	movwf	___awmod@dividend+1
  7431  00BE  0879               	movf	LCD_Write_Int@value,w
  7432  00BF  00F2               	movwf	___awmod@dividend
  7433  00C0  318A  225B  3180   	fcall	___awmod
  7434  00C3  0870               	movf	?___awmod,w
  7435  00C4  0020               	movlb	0	; select bank0
  7436  00C5  00A0               	movwf	??_LCD_Write_Int
  7437  00C6  082C               	movf	LCD_Write_Int@i,w
  7438  00C7  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7439  00C8  0086               	movwf	6
  7440  00C9  0187               	clrf	7
  7441  00CA  0820               	movf	??_LCD_Write_Int,w
  7442  00CB  0081               	movwf	1
  7443                           
  7444                           ;lcd.c: 268: value=value/10;
  7445  00CC  300A               	movlw	10
  7446  00CD  00F0               	movwf	___awdiv@divisor
  7447  00CE  3000               	movlw	0
  7448  00CF  00F1               	movwf	___awdiv@divisor+1
  7449  00D0  087A               	movf	LCD_Write_Int@value+1,w
  7450  00D1  00F3               	movwf	___awdiv@dividend+1
  7451  00D2  0879               	movf	LCD_Write_Int@value,w
  7452  00D3  00F2               	movwf	___awdiv@dividend
  7453  00D4  318A  22A0  3180   	fcall	___awdiv
  7454  00D7  0871               	movf	?___awdiv+1,w
  7455  00D8  00FA               	movwf	LCD_Write_Int@value+1
  7456  00D9  0870               	movf	?___awdiv,w
  7457  00DA  00F9               	movwf	LCD_Write_Int@value
  7458                           
  7459                           ;lcd.c: 269: i--;
  7460  00DB  30FF               	movlw	255
  7461  00DC  0020               	movlb	0	; select bank0
  7462  00DD  07AC               	addwf	LCD_Write_Int@i,f
  7463  00DE  30FF               	movlw	255
  7464  00DF  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7465  00E0  28B4               	goto	l2269
  7466  00E1                     l2271:	
  7467                           
  7468                           ;lcd.c: 270: }
  7469                           ;lcd.c: 271: if(fieldLength==-1)
  7470  00E1  0A7B               	incf	LCD_Write_Int@fieldLength,w
  7471  00E2  1903               	btfsc	3,2
  7472  00E3  28EA               	goto	l2277
  7473  00E4  28F3               	goto	l2279
  7474  00E5                     l2275:	
  7475                           ;lcd.c: 272: {
  7476                           ;lcd.c: 273: while(str[j]==0)
  7477                           
  7478                           
  7479                           ;lcd.c: 274: {
  7480                           ;lcd.c: 275: j++;
  7481  00E5  3001               	movlw	1
  7482  00E6  0020               	movlb	0	; select bank0
  7483  00E7  07AA               	addwf	LCD_Write_Int@j,f
  7484  00E8  3000               	movlw	0
  7485  00E9  3DAB               	addwfc	LCD_Write_Int@j+1,f
  7486  00EA                     l2277:	
  7487  00EA  0020               	movlb	0	; select bank0
  7488  00EB  082A               	movf	LCD_Write_Int@j,w
  7489  00EC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7490  00ED  0086               	movwf	6
  7491  00EE  0187               	clrf	7
  7492  00EF  0801               	movf	1,w
  7493  00F0  1D03               	btfss	3,2
  7494  00F1  2904               	goto	l2281
  7495  00F2  28E5               	goto	l2275
  7496  00F3                     l2279:	
  7497                           ;lcd.c: 276: }
  7498                           ;lcd.c: 277: }
  7499                           
  7500                           
  7501                           ;lcd.c: 278: else
  7502                           ;lcd.c: 279: {
  7503                           ;lcd.c: 280: j=5-fieldLength;
  7504  00F3  087B               	movf	LCD_Write_Int@fieldLength,w
  7505  00F4  0020               	movlb	0	; select bank0
  7506  00F5  00A0               	movwf	??_LCD_Write_Int
  7507  00F6  01A1               	clrf	??_LCD_Write_Int+1
  7508  00F7  1BA0               	btfsc	??_LCD_Write_Int,7
  7509  00F8  03A1               	decf	??_LCD_Write_Int+1,f
  7510  00F9  09A0               	comf	??_LCD_Write_Int,f
  7511  00FA  09A1               	comf	??_LCD_Write_Int+1,f
  7512  00FB  0AA0               	incf	??_LCD_Write_Int,f
  7513  00FC  1903               	skipnz
  7514  00FD  0AA1               	incf	??_LCD_Write_Int+1,f
  7515  00FE  0820               	movf	??_LCD_Write_Int,w
  7516  00FF  3E05               	addlw	5
  7517  0100  00AA               	movwf	LCD_Write_Int@j
  7518  0101  3000               	movlw	0
  7519  0102  3D21               	addwfc	??_LCD_Write_Int+1,w
  7520  0103  00AB               	movwf	LCD_Write_Int@j+1
  7521  0104                     l2281:	
  7522                           
  7523                           ;lcd.c: 281: }
  7524                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7525  0104  082B               	movf	LCD_Write_Int@j+1,w
  7526  0105  00AD               	movwf	LCD_Write_Int@i+1
  7527  0106  082A               	movf	LCD_Write_Int@j,w
  7528  0107  00AC               	movwf	LCD_Write_Int@i
  7529  0108                     l2287:	
  7530  0108  087C               	movf	LCD_Write_Int@numPlaces,w
  7531  0109  00A0               	movwf	??_LCD_Write_Int
  7532  010A  01A1               	clrf	??_LCD_Write_Int+1
  7533  010B  1BA0               	btfsc	??_LCD_Write_Int,7
  7534  010C  03A1               	decf	??_LCD_Write_Int+1,f
  7535  010D  09A0               	comf	??_LCD_Write_Int,f
  7536  010E  09A1               	comf	??_LCD_Write_Int+1,f
  7537  010F  0AA0               	incf	??_LCD_Write_Int,f
  7538  0110  1903               	skipnz
  7539  0111  0AA1               	incf	??_LCD_Write_Int+1,f
  7540  0112  0820               	movf	??_LCD_Write_Int,w
  7541  0113  3E05               	addlw	5
  7542  0114  00A2               	movwf	??_LCD_Write_Int+2
  7543  0115  3000               	movlw	0
  7544  0116  3D21               	addwfc	??_LCD_Write_Int+1,w
  7545  0117  00A3               	movwf	??_LCD_Write_Int+3
  7546  0118  082D               	movf	LCD_Write_Int@i+1,w
  7547  0119  3A80               	xorlw	128
  7548  011A  00A4               	movwf	??_LCD_Write_Int+4
  7549  011B  0823               	movf	??_LCD_Write_Int+3,w
  7550  011C  3A80               	xorlw	128
  7551  011D  0224               	subwf	??_LCD_Write_Int+4,w
  7552  011E  1D03               	skipz
  7553  011F  2922               	goto	u2195
  7554  0120  0822               	movf	??_LCD_Write_Int+2,w
  7555  0121  022C               	subwf	LCD_Write_Int@i,w
  7556  0122                     u2195:	
  7557  0122  1803               	btfsc	3,0
  7558  0123  2934               	goto	l2289
  7559                           
  7560                           ;lcd.c: 284: {
  7561                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7562  0124  0020               	movlb	0	; select bank0
  7563  0125  082C               	movf	LCD_Write_Int@i,w
  7564  0126  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7565  0127  0086               	movwf	6
  7566  0128  0187               	clrf	7
  7567  0129  0801               	movf	1,w
  7568  012A  3E30               	addlw	48
  7569  012B  3188  20AF  3180   	fcall	_LCD_Write_Char
  7570  012E  3001               	movlw	1
  7571  012F  0020               	movlb	0	; select bank0
  7572  0130  07AC               	addwf	LCD_Write_Int@i,f
  7573  0131  3000               	movlw	0
  7574  0132  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7575  0133  2908               	goto	l2287
  7576  0134                     l2289:	
  7577                           
  7578                           ;lcd.c: 286: }
  7579                           ;lcd.c: 288: if(numPlaces == 1)
  7580  0134  037C               	decf	LCD_Write_Int@numPlaces,w
  7581  0135  1D03               	btfss	3,2
  7582  0136  2941               	goto	l2293
  7583                           
  7584                           ;lcd.c: 289: {
  7585                           ;lcd.c: 290: LCD_Write_Char(46);
  7586  0137  302E               	movlw	46
  7587  0138  3188  20AF  3180   	fcall	_LCD_Write_Char
  7588                           
  7589                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7590  013B  0020               	movlb	0	; select bank0
  7591  013C  0829               	movf	LCD_Write_Int@str+4,w
  7592  013D  3E30               	addlw	48
  7593  013E  3188  20AF  3180   	fcall	_LCD_Write_Char
  7594  0141                     l2293:	
  7595                           
  7596                           ;lcd.c: 292: }
  7597                           ;lcd.c: 294: if(numPlaces == 2)
  7598  0141  3002               	movlw	2
  7599  0142  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7600  0143  1D03               	btfss	3,2
  7601  0144  0008               	return
  7602                           
  7603                           ;lcd.c: 295: {
  7604                           ;lcd.c: 296: LCD_Write_Char(46);
  7605  0145  302E               	movlw	46
  7606  0146  3188  20AF  3180   	fcall	_LCD_Write_Char
  7607                           
  7608                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7609  0149  0020               	movlb	0	; select bank0
  7610  014A  0828               	movf	LCD_Write_Int@str+3,w
  7611  014B  3E30               	addlw	48
  7612  014C  3188  20AF  3180   	fcall	_LCD_Write_Char
  7613                           
  7614                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7615  014F  0020               	movlb	0	; select bank0
  7616  0150  0829               	movf	LCD_Write_Int@str+4,w
  7617  0151  3E30               	addlw	48
  7618  0152  3188  20AF         	fcall	_LCD_Write_Char
  7619  0154  0008               	return
  7620  0155                     __end_of_LCD_Write_Int:	
  7621                           
  7622                           	psect	text5
  7623  0A5B                     __ptext5:	
  7624 ;; *************** function ___awmod *****************
  7625 ;; Defined at:
  7626 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  divisor         2    0[COMMON] int 
  7629 ;;  dividend        2    2[COMMON] int 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;  sign            1    6[COMMON] unsigned char 
  7632 ;;  counter         1    5[COMMON] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  2    0[COMMON] int 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;Total ram usage:        7 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_LCD_Write_Int
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function ___awmod
  7657  0A5B                     ___awmod:	
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7661  0A5B  01F6               	clrf	___awmod@sign
  7662  0A5C  1FF3               	btfss	___awmod@dividend+1,7
  7663  0A5D  2A65               	goto	l2187
  7664  0A5E  09F2               	comf	___awmod@dividend,f
  7665  0A5F  09F3               	comf	___awmod@dividend+1,f
  7666  0A60  0AF2               	incf	___awmod@dividend,f
  7667  0A61  1903               	skipnz
  7668  0A62  0AF3               	incf	___awmod@dividend+1,f
  7669  0A63  01F6               	clrf	___awmod@sign
  7670  0A64  0AF6               	incf	___awmod@sign,f
  7671  0A65                     l2187:	
  7672  0A65  1FF1               	btfss	___awmod@divisor+1,7
  7673  0A66  2A6C               	goto	l2191
  7674  0A67  09F0               	comf	___awmod@divisor,f
  7675  0A68  09F1               	comf	___awmod@divisor+1,f
  7676  0A69  0AF0               	incf	___awmod@divisor,f
  7677  0A6A  1903               	skipnz
  7678  0A6B  0AF1               	incf	___awmod@divisor+1,f
  7679  0A6C                     l2191:	
  7680  0A6C  0870               	movf	___awmod@divisor,w
  7681  0A6D  0471               	iorwf	___awmod@divisor+1,w
  7682  0A6E  1903               	btfsc	3,2
  7683  0A6F  2A93               	goto	l2209
  7684  0A70  01F5               	clrf	___awmod@counter
  7685  0A71  0AF5               	incf	___awmod@counter,f
  7686  0A72                     l2199:	
  7687  0A72  1BF1               	btfsc	___awmod@divisor+1,7
  7688  0A73  2A7E               	goto	l2201
  7689  0A74  3001               	movlw	1
  7690  0A75                     u2025:	
  7691  0A75  35F0               	lslf	___awmod@divisor,f
  7692  0A76  0DF1               	rlf	___awmod@divisor+1,f
  7693  0A77  0B89               	decfsz	9,f
  7694  0A78  2A75               	goto	u2025
  7695  0A79  3001               	movlw	1
  7696  0A7A  00F4               	movwf	??___awmod
  7697  0A7B  0874               	movf	??___awmod,w
  7698  0A7C  07F5               	addwf	___awmod@counter,f
  7699  0A7D  2A72               	goto	l2199
  7700  0A7E                     l2201:	
  7701  0A7E  0871               	movf	___awmod@divisor+1,w
  7702  0A7F  0273               	subwf	___awmod@dividend+1,w
  7703  0A80  1D03               	skipz
  7704  0A81  2A84               	goto	u2045
  7705  0A82  0870               	movf	___awmod@divisor,w
  7706  0A83  0272               	subwf	___awmod@dividend,w
  7707  0A84                     u2045:	
  7708  0A84  1C03               	skipc
  7709  0A85  2A8A               	goto	l2205
  7710  0A86  0870               	movf	___awmod@divisor,w
  7711  0A87  02F2               	subwf	___awmod@dividend,f
  7712  0A88  0871               	movf	___awmod@divisor+1,w
  7713  0A89  3BF3               	subwfb	___awmod@dividend+1,f
  7714  0A8A                     l2205:	
  7715  0A8A  3001               	movlw	1
  7716  0A8B                     u2055:	
  7717  0A8B  36F1               	lsrf	___awmod@divisor+1,f
  7718  0A8C  0CF0               	rrf	___awmod@divisor,f
  7719  0A8D  0B89               	decfsz	9,f
  7720  0A8E  2A8B               	goto	u2055
  7721  0A8F  3001               	movlw	1
  7722  0A90  02F5               	subwf	___awmod@counter,f
  7723  0A91  1D03               	btfss	3,2
  7724  0A92  2A7E               	goto	l2201
  7725  0A93                     l2209:	
  7726  0A93  0876               	movf	___awmod@sign,w
  7727  0A94  1903               	btfsc	3,2
  7728  0A95  2A9B               	goto	l2213
  7729  0A96  09F2               	comf	___awmod@dividend,f
  7730  0A97  09F3               	comf	___awmod@dividend+1,f
  7731  0A98  0AF2               	incf	___awmod@dividend,f
  7732  0A99  1903               	skipnz
  7733  0A9A  0AF3               	incf	___awmod@dividend+1,f
  7734  0A9B                     l2213:	
  7735  0A9B  0873               	movf	___awmod@dividend+1,w
  7736  0A9C  00F1               	movwf	?___awmod+1
  7737  0A9D  0872               	movf	___awmod@dividend,w
  7738  0A9E  00F0               	movwf	?___awmod
  7739  0A9F  0008               	return
  7740  0AA0                     __end_of___awmod:	
  7741                           
  7742                           	psect	text6
  7743  0AA0                     __ptext6:	
  7744 ;; *************** function ___awdiv *****************
  7745 ;; Defined at:
  7746 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  divisor         2    0[COMMON] int 
  7749 ;;  dividend        2    2[COMMON] int 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  quotient        2    7[COMMON] int 
  7752 ;;  sign            1    6[COMMON] unsigned char 
  7753 ;;  counter         1    5[COMMON] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2    0[COMMON] int 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;Total ram usage:        9 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_LCD_Write_Int
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function ___awdiv
  7778  0AA0                     ___awdiv:	
  7779                           
  7780                           ;incstack = 0
  7781                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7782  0AA0  01F6               	clrf	___awdiv@sign
  7783  0AA1  1FF1               	btfss	___awdiv@divisor+1,7
  7784  0AA2  2AAA               	goto	l2143
  7785  0AA3  09F0               	comf	___awdiv@divisor,f
  7786  0AA4  09F1               	comf	___awdiv@divisor+1,f
  7787  0AA5  0AF0               	incf	___awdiv@divisor,f
  7788  0AA6  1903               	skipnz
  7789  0AA7  0AF1               	incf	___awdiv@divisor+1,f
  7790  0AA8  01F6               	clrf	___awdiv@sign
  7791  0AA9  0AF6               	incf	___awdiv@sign,f
  7792  0AAA                     l2143:	
  7793  0AAA  1FF3               	btfss	___awdiv@dividend+1,7
  7794  0AAB  2AB5               	goto	l2149
  7795  0AAC  09F2               	comf	___awdiv@dividend,f
  7796  0AAD  09F3               	comf	___awdiv@dividend+1,f
  7797  0AAE  0AF2               	incf	___awdiv@dividend,f
  7798  0AAF  1903               	skipnz
  7799  0AB0  0AF3               	incf	___awdiv@dividend+1,f
  7800  0AB1  3001               	movlw	1
  7801  0AB2  00F4               	movwf	??___awdiv
  7802  0AB3  0874               	movf	??___awdiv,w
  7803  0AB4  06F6               	xorwf	___awdiv@sign,f
  7804  0AB5                     l2149:	
  7805  0AB5  01F7               	clrf	___awdiv@quotient
  7806  0AB6  01F8               	clrf	___awdiv@quotient+1
  7807  0AB7  0870               	movf	___awdiv@divisor,w
  7808  0AB8  0471               	iorwf	___awdiv@divisor+1,w
  7809  0AB9  1903               	btfsc	3,2
  7810  0ABA  2AE4               	goto	l2171
  7811  0ABB  01F5               	clrf	___awdiv@counter
  7812  0ABC  0AF5               	incf	___awdiv@counter,f
  7813  0ABD                     l2159:	
  7814  0ABD  1BF1               	btfsc	___awdiv@divisor+1,7
  7815  0ABE  2AC9               	goto	l2161
  7816  0ABF  3001               	movlw	1
  7817  0AC0                     u1925:	
  7818  0AC0  35F0               	lslf	___awdiv@divisor,f
  7819  0AC1  0DF1               	rlf	___awdiv@divisor+1,f
  7820  0AC2  0B89               	decfsz	9,f
  7821  0AC3  2AC0               	goto	u1925
  7822  0AC4  3001               	movlw	1
  7823  0AC5  00F4               	movwf	??___awdiv
  7824  0AC6  0874               	movf	??___awdiv,w
  7825  0AC7  07F5               	addwf	___awdiv@counter,f
  7826  0AC8  2ABD               	goto	l2159
  7827  0AC9                     l2161:	
  7828  0AC9  3001               	movlw	1
  7829  0ACA                     u1945:	
  7830  0ACA  35F7               	lslf	___awdiv@quotient,f
  7831  0ACB  0DF8               	rlf	___awdiv@quotient+1,f
  7832  0ACC  0B89               	decfsz	9,f
  7833  0ACD  2ACA               	goto	u1945
  7834  0ACE  0871               	movf	___awdiv@divisor+1,w
  7835  0ACF  0273               	subwf	___awdiv@dividend+1,w
  7836  0AD0  1D03               	skipz
  7837  0AD1  2AD4               	goto	u1955
  7838  0AD2  0870               	movf	___awdiv@divisor,w
  7839  0AD3  0272               	subwf	___awdiv@dividend,w
  7840  0AD4                     u1955:	
  7841  0AD4  1C03               	skipc
  7842  0AD5  2ADB               	goto	l2167
  7843  0AD6  0870               	movf	___awdiv@divisor,w
  7844  0AD7  02F2               	subwf	___awdiv@dividend,f
  7845  0AD8  0871               	movf	___awdiv@divisor+1,w
  7846  0AD9  3BF3               	subwfb	___awdiv@dividend+1,f
  7847  0ADA  1477               	bsf	___awdiv@quotient,0
  7848  0ADB                     l2167:	
  7849  0ADB  3001               	movlw	1
  7850  0ADC                     u1965:	
  7851  0ADC  36F1               	lsrf	___awdiv@divisor+1,f
  7852  0ADD  0CF0               	rrf	___awdiv@divisor,f
  7853  0ADE  0B89               	decfsz	9,f
  7854  0ADF  2ADC               	goto	u1965
  7855  0AE0  3001               	movlw	1
  7856  0AE1  02F5               	subwf	___awdiv@counter,f
  7857  0AE2  1D03               	btfss	3,2
  7858  0AE3  2AC9               	goto	l2161
  7859  0AE4                     l2171:	
  7860  0AE4  0876               	movf	___awdiv@sign,w
  7861  0AE5  1903               	btfsc	3,2
  7862  0AE6  2AEC               	goto	l2175
  7863  0AE7  09F7               	comf	___awdiv@quotient,f
  7864  0AE8  09F8               	comf	___awdiv@quotient+1,f
  7865  0AE9  0AF7               	incf	___awdiv@quotient,f
  7866  0AEA  1903               	skipnz
  7867  0AEB  0AF8               	incf	___awdiv@quotient+1,f
  7868  0AEC                     l2175:	
  7869  0AEC  0878               	movf	___awdiv@quotient+1,w
  7870  0AED  00F1               	movwf	?___awdiv+1
  7871  0AEE  0877               	movf	___awdiv@quotient,w
  7872  0AEF  00F0               	movwf	?___awdiv
  7873  0AF0  0008               	return
  7874  0AF1                     __end_of___awdiv:	
  7875                           
  7876                           	psect	text7
  7877  0A1C                     __ptext7:	
  7878 ;; *************** function _LCD_Set_Cursor *****************
  7879 ;; Defined at:
  7880 ;;		line 82 in file "lcd.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  x               1    wreg     unsigned char 
  7883 ;;  y               1    3[COMMON] unsigned char 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  x               1    6[COMMON] unsigned char 
  7886 ;;  temp            1    9[COMMON] unsigned char 
  7887 ;;  w               1    8[COMMON] unsigned char 
  7888 ;;  z               1    7[COMMON] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, pclath, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;Total ram usage:        7 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    2
  7905 ;; This function calls:
  7906 ;;		_LCD_Cmd
  7907 ;; This function is called by:
  7908 ;;		_tempSetpoint
  7909 ;;		_readButtons
  7910 ;;		_main
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function _LCD_Set_Cursor
  7916  0A1C                     _LCD_Set_Cursor:	
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7920                           ;LCD_Set_Cursor@x stored from wreg
  7921  0A1C  00F6               	movwf	LCD_Set_Cursor@x
  7922                           
  7923                           ;lcd.c: 86: char temp,z,w;
  7924                           ;lcd.c: 88: if(x == 0)
  7925  0A1D  0876               	movf	LCD_Set_Cursor@x,w
  7926  0A1E  1D03               	btfss	3,2
  7927  0A1F  2A3C               	goto	l2229
  7928                           
  7929                           ;lcd.c: 89: {
  7930                           ;lcd.c: 90: temp = 0x80 + y;
  7931  0A20  0873               	movf	LCD_Set_Cursor@y,w
  7932  0A21  3E80               	addlw	128
  7933  0A22  00F4               	movwf	??_LCD_Set_Cursor
  7934  0A23  0874               	movf	??_LCD_Set_Cursor,w
  7935  0A24  00F9               	movwf	LCD_Set_Cursor@temp
  7936                           
  7937                           ;lcd.c: 91: z = temp>>4;
  7938  0A25  0879               	movf	LCD_Set_Cursor@temp,w
  7939  0A26  00F4               	movwf	??_LCD_Set_Cursor
  7940  0A27  3004               	movlw	4
  7941  0A28                     u2095:	
  7942  0A28  36F4               	lsrf	??_LCD_Set_Cursor,f
  7943  0A29  0B89               	decfsz	9,f
  7944  0A2A  2A28               	goto	u2095
  7945  0A2B  0874               	movf	??_LCD_Set_Cursor,w
  7946  0A2C  00F5               	movwf	??_LCD_Set_Cursor+1
  7947  0A2D  0875               	movf	??_LCD_Set_Cursor+1,w
  7948  0A2E  00F7               	movwf	LCD_Set_Cursor@z
  7949                           
  7950                           ;lcd.c: 92: w = temp & 0x0F;
  7951  0A2F  0879               	movf	LCD_Set_Cursor@temp,w
  7952  0A30  390F               	andlw	15
  7953  0A31  00F4               	movwf	??_LCD_Set_Cursor
  7954  0A32  0874               	movf	??_LCD_Set_Cursor,w
  7955  0A33  00F8               	movwf	LCD_Set_Cursor@w
  7956                           
  7957                           ;lcd.c: 93: LCD_Cmd(z);
  7958  0A34  0877               	movf	LCD_Set_Cursor@z,w
  7959  0A35  3197  2778  318A   	fcall	_LCD_Cmd
  7960                           
  7961                           ;lcd.c: 94: LCD_Cmd(w);
  7962  0A38  0878               	movf	LCD_Set_Cursor@w,w
  7963  0A39  3197  2778         	fcall	_LCD_Cmd
  7964                           
  7965                           ;lcd.c: 95: }
  7966  0A3B  0008               	return
  7967  0A3C                     l2229:	
  7968                           
  7969                           ;lcd.c: 97: else if(x == 1)
  7970  0A3C  0376               	decf	LCD_Set_Cursor@x,w
  7971  0A3D  1D03               	btfss	3,2
  7972  0A3E  0008               	return
  7973                           
  7974                           ;lcd.c: 98: {
  7975                           ;lcd.c: 99: temp = 0xC0 + y;
  7976  0A3F  0873               	movf	LCD_Set_Cursor@y,w
  7977  0A40  3EC0               	addlw	192
  7978  0A41  00F4               	movwf	??_LCD_Set_Cursor
  7979  0A42  0874               	movf	??_LCD_Set_Cursor,w
  7980  0A43  00F9               	movwf	LCD_Set_Cursor@temp
  7981                           
  7982                           ;lcd.c: 100: z = temp>>4;
  7983  0A44  0879               	movf	LCD_Set_Cursor@temp,w
  7984  0A45  00F4               	movwf	??_LCD_Set_Cursor
  7985  0A46  3004               	movlw	4
  7986  0A47                     u2115:	
  7987  0A47  36F4               	lsrf	??_LCD_Set_Cursor,f
  7988  0A48  0B89               	decfsz	9,f
  7989  0A49  2A47               	goto	u2115
  7990  0A4A  0874               	movf	??_LCD_Set_Cursor,w
  7991  0A4B  00F5               	movwf	??_LCD_Set_Cursor+1
  7992  0A4C  0875               	movf	??_LCD_Set_Cursor+1,w
  7993  0A4D  00F7               	movwf	LCD_Set_Cursor@z
  7994                           
  7995                           ;lcd.c: 101: w = temp & 0x0F;
  7996  0A4E  0879               	movf	LCD_Set_Cursor@temp,w
  7997  0A4F  390F               	andlw	15
  7998  0A50  00F4               	movwf	??_LCD_Set_Cursor
  7999  0A51  0874               	movf	??_LCD_Set_Cursor,w
  8000  0A52  00F8               	movwf	LCD_Set_Cursor@w
  8001                           
  8002                           ;lcd.c: 102: LCD_Cmd(z);
  8003  0A53  0877               	movf	LCD_Set_Cursor@z,w
  8004  0A54  3197  2778  318A   	fcall	_LCD_Cmd
  8005                           
  8006                           ;lcd.c: 103: LCD_Cmd(w);
  8007  0A57  0878               	movf	LCD_Set_Cursor@w,w
  8008  0A58  3197  2778         	fcall	_LCD_Cmd
  8009  0A5A  0008               	return
  8010  0A5B                     __end_of_LCD_Set_Cursor:	
  8011                           
  8012                           	psect	text8
  8013  0DDE                     __ptext8:	
  8014 ;; *************** function _log *****************
  8015 ;; Defined at:
  8016 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  x               3   39[BANK0 ] void 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  exponent        2   43[BANK0 ] int 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  3   39[BANK0 ] int 
  8023 ;; Registers used:
  8024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:        6 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    3
  8037 ;; This function calls:
  8038 ;;		___awtoft
  8039 ;;		___ftadd
  8040 ;;		___ftge
  8041 ;;		___ftmul
  8042 ;;		_eval_poly
  8043 ;;		_frexp
  8044 ;; This function is called by:
  8045 ;;		_main
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           
  8050                           ;psect for function _log
  8051  0DDE                     _log:	
  8052                           
  8053                           ;incstack = 0
  8054                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8055  0DDE  0020               	movlb	0	; select bank0
  8056  0DDF  0847               	movf	log@x,w
  8057  0DE0  00BD               	movwf	___ftge@ff1
  8058  0DE1  0848               	movf	log@x+1,w
  8059  0DE2  00BE               	movwf	___ftge@ff1+1
  8060  0DE3  0849               	movf	log@x+2,w
  8061  0DE4  00BF               	movwf	___ftge@ff1+2
  8062  0DE5  3000               	movlw	0
  8063  0DE6  00C0               	movwf	___ftge@ff2
  8064  0DE7  3000               	movlw	0
  8065  0DE8  00C1               	movwf	___ftge@ff2+1
  8066  0DE9  3000               	movlw	0
  8067  0DEA  00C2               	movwf	___ftge@ff2+2
  8068  0DEB  3189  21A4  318D   	fcall	___ftge
  8069  0DEE  1803               	btfsc	3,0
  8070  0DEF  2DFD               	goto	l2877
  8071  0DF0  3021               	movlw	33
  8072  0DF1  0021               	movlb	1	; select bank1
  8073  0DF2  00DC               	movwf	_errno^(0+128)
  8074  0DF3  3000               	movlw	0
  8075  0DF4  00DD               	movwf	(_errno^(0+128)+1)
  8076  0DF5  3000               	movlw	0
  8077  0DF6  0020               	movlb	0	; select bank0
  8078  0DF7  00C7               	movwf	?_log
  8079  0DF8  3000               	movlw	0
  8080  0DF9  00C8               	movwf	?_log+1
  8081  0DFA  3000               	movlw	0
  8082  0DFB  00C9               	movwf	?_log+2
  8083  0DFC  0008               	return
  8084  0DFD                     l2877:	
  8085  0DFD  0020               	movlb	0	; select bank0
  8086  0DFE  0849               	movf	log@x+2,w
  8087  0DFF  0448               	iorwf	log@x+1,w
  8088  0E00  0447               	iorwf	log@x,w
  8089  0E01  1D03               	skipz
  8090  0E02  2E10               	goto	l2883
  8091  0E03  3022               	movlw	34
  8092  0E04  0021               	movlb	1	; select bank1
  8093  0E05  00DC               	movwf	_errno^(0+128)
  8094  0E06  3000               	movlw	0
  8095  0E07  00DD               	movwf	(_errno^(0+128)+1)
  8096  0E08  3000               	movlw	0
  8097  0E09  0020               	movlb	0	; select bank0
  8098  0E0A  00C7               	movwf	?_log
  8099  0E0B  3000               	movlw	0
  8100  0E0C  00C8               	movwf	?_log+1
  8101  0E0D  3000               	movlw	0
  8102  0E0E  00C9               	movwf	?_log+2
  8103  0E0F  0008               	return
  8104  0E10                     l2883:	
  8105  0E10  3000               	movlw	0
  8106  0E11  00B0               	movwf	___ftadd@f1
  8107  0E12  3080               	movlw	128
  8108  0E13  00B1               	movwf	___ftadd@f1+1
  8109  0E14  30BF               	movlw	191
  8110  0E15  00B2               	movwf	___ftadd@f1+2
  8111  0E16  3000               	movlw	0
  8112  0E17  00A0               	movwf	___ftmul@f1
  8113  0E18  3000               	movlw	0
  8114  0E19  00A1               	movwf	___ftmul@f1+1
  8115  0E1A  3040               	movlw	64
  8116  0E1B  00A2               	movwf	___ftmul@f1+2
  8117  0E1C  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8118  0E1D  00CA               	movwf	??_log
  8119  0E1E  084A               	movf	??_log,w
  8120  0E1F  00F3               	movwf	frexp@eptr
  8121  0E20  0847               	movf	log@x,w
  8122  0E21  00F0               	movwf	frexp@value
  8123  0E22  0848               	movf	log@x+1,w
  8124  0E23  00F1               	movwf	frexp@value+1
  8125  0E24  0849               	movf	log@x+2,w
  8126  0E25  00F2               	movwf	frexp@value+2
  8127  0E26  3189  2169  318D   	fcall	_frexp
  8128  0E29  0870               	movf	?_frexp,w
  8129  0E2A  0020               	movlb	0	; select bank0
  8130  0E2B  00A3               	movwf	___ftmul@f2
  8131  0E2C  0871               	movf	?_frexp+1,w
  8132  0E2D  00A4               	movwf	___ftmul@f2+1
  8133  0E2E  0872               	movf	?_frexp+2,w
  8134  0E2F  00A5               	movwf	___ftmul@f2+2
  8135  0E30  318E  268E  318D   	fcall	___ftmul
  8136  0E33  0020               	movlb	0	; select bank0
  8137  0E34  0820               	movf	?___ftmul,w
  8138  0E35  00B3               	movwf	___ftadd@f2
  8139  0E36  0821               	movf	?___ftmul+1,w
  8140  0E37  00B4               	movwf	___ftadd@f2+1
  8141  0E38  0822               	movf	?___ftmul+2,w
  8142  0E39  00B5               	movwf	___ftadd@f2+2
  8143  0E3A  3181  2155  318D   	fcall	___ftadd
  8144  0E3D  0020               	movlb	0	; select bank0
  8145  0E3E  0830               	movf	?___ftadd,w
  8146  0E3F  00C7               	movwf	log@x
  8147  0E40  0831               	movf	?___ftadd+1,w
  8148  0E41  00C8               	movwf	log@x+1
  8149  0E42  0832               	movf	?___ftadd+2,w
  8150  0E43  00C9               	movwf	log@x+2
  8151  0E44  30FF               	movlw	255
  8152  0E45  07CB               	addwf	log@exponent,f
  8153  0E46  30FF               	movlw	255
  8154  0E47  3DCC               	addwfc	log@exponent+1,f
  8155  0E48  0847               	movf	log@x,w
  8156  0E49  00BD               	movwf	eval_poly@x
  8157  0E4A  0848               	movf	log@x+1,w
  8158  0E4B  00BE               	movwf	eval_poly@x+1
  8159  0E4C  0849               	movf	log@x+2,w
  8160  0E4D  00BF               	movwf	eval_poly@x+2
  8161  0E4E  3000               	movlw	low (log@coeff| (0+32768))
  8162  0E4F  00C0               	movwf	eval_poly@d
  8163  0E50  3090               	movlw	high (log@coeff| (0+32768))
  8164  0E51  00C1               	movwf	eval_poly@d+1
  8165  0E52  3008               	movlw	8
  8166  0E53  00C2               	movwf	eval_poly@n
  8167  0E54  3000               	movlw	0
  8168  0E55  00C3               	movwf	eval_poly@n+1
  8169  0E56  318A  22F1  318D   	fcall	_eval_poly
  8170  0E59  0020               	movlb	0	; select bank0
  8171  0E5A  083D               	movf	?_eval_poly,w
  8172  0E5B  00C7               	movwf	log@x
  8173  0E5C  083E               	movf	?_eval_poly+1,w
  8174  0E5D  00C8               	movwf	log@x+1
  8175  0E5E  083F               	movf	?_eval_poly+2,w
  8176  0E5F  00C9               	movwf	log@x+2
  8177  0E60  0847               	movf	log@x,w
  8178  0E61  00B0               	movwf	___ftadd@f1
  8179  0E62  0848               	movf	log@x+1,w
  8180  0E63  00B1               	movwf	___ftadd@f1+1
  8181  0E64  0849               	movf	log@x+2,w
  8182  0E65  00B2               	movwf	___ftadd@f1+2
  8183  0E66  3072               	movlw	114
  8184  0E67  00A0               	movwf	___ftmul@f1
  8185  0E68  3031               	movlw	49
  8186  0E69  00A1               	movwf	___ftmul@f1+1
  8187  0E6A  303F               	movlw	63
  8188  0E6B  00A2               	movwf	___ftmul@f1+2
  8189  0E6C  084C               	movf	log@exponent+1,w
  8190  0E6D  00F9               	movwf	___awtoft@c+1
  8191  0E6E  084B               	movf	log@exponent,w
  8192  0E6F  00F8               	movwf	___awtoft@c
  8193  0E70  3188  2069  318D   	fcall	___awtoft
  8194  0E73  0878               	movf	?___awtoft,w
  8195  0E74  0020               	movlb	0	; select bank0
  8196  0E75  00A3               	movwf	___ftmul@f2
  8197  0E76  0879               	movf	?___awtoft+1,w
  8198  0E77  00A4               	movwf	___ftmul@f2+1
  8199  0E78  087A               	movf	?___awtoft+2,w
  8200  0E79  00A5               	movwf	___ftmul@f2+2
  8201  0E7A  318E  268E  318D   	fcall	___ftmul
  8202  0E7D  0020               	movlb	0	; select bank0
  8203  0E7E  0820               	movf	?___ftmul,w
  8204  0E7F  00B3               	movwf	___ftadd@f2
  8205  0E80  0821               	movf	?___ftmul+1,w
  8206  0E81  00B4               	movwf	___ftadd@f2+1
  8207  0E82  0822               	movf	?___ftmul+2,w
  8208  0E83  00B5               	movwf	___ftadd@f2+2
  8209  0E84  3181  2155         	fcall	___ftadd
  8210  0E86  0020               	movlb	0	; select bank0
  8211  0E87  0830               	movf	?___ftadd,w
  8212  0E88  00C7               	movwf	?_log
  8213  0E89  0831               	movf	?___ftadd+1,w
  8214  0E8A  00C8               	movwf	?_log+1
  8215  0E8B  0832               	movf	?___ftadd+2,w
  8216  0E8C  00C9               	movwf	?_log+2
  8217  0E8D  0008               	return
  8218  0E8E                     __end_of_log:	
  8219                           
  8220                           	psect	text9
  8221  0969                     __ptext9:	
  8222 ;; *************** function _frexp *****************
  8223 ;; Defined at:
  8224 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  value           3    0[COMMON] int 
  8227 ;;  eptr            1    3[COMMON] PTR int 
  8228 ;;		 -> log@exponent(2), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  3    0[COMMON] PTR int 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;Total ram usage:        6 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_log
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _frexp
  8255  0969                     _frexp:	
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8259  0969  0872               	movf	frexp@value+2,w
  8260  096A  0471               	iorwf	frexp@value+1,w
  8261  096B  0470               	iorwf	frexp@value,w
  8262  096C  1D03               	skipz
  8263  096D  297B               	goto	l2703
  8264  096E  0873               	movf	frexp@eptr,w
  8265  096F  0086               	movwf	6
  8266  0970  0187               	clrf	7
  8267  0971  3000               	movlw	0
  8268  0972  3FC0               	movwi [0]fsr1
  8269  0973  3FC1               	movwi [1]fsr1
  8270  0974  3000               	movlw	0
  8271  0975  00F0               	movwf	?_frexp
  8272  0976  3000               	movlw	0
  8273  0977  00F1               	movwf	?_frexp+1
  8274  0978  3000               	movlw	0
  8275  0979  00F2               	movwf	?_frexp+2
  8276  097A  0008               	return
  8277  097B                     l2703:	
  8278  097B  0872               	movf	frexp@value+2,w
  8279  097C  397F               	andlw	127
  8280  097D  00F4               	movwf	??_frexp
  8281  097E  01F5               	clrf	??_frexp+1
  8282  097F  35F4               	lslf	??_frexp,f
  8283  0980  0DF5               	rlf	??_frexp+1,f
  8284  0981  0873               	movf	frexp@eptr,w
  8285  0982  0086               	movwf	6
  8286  0983  0187               	clrf	7
  8287  0984  0874               	movf	??_frexp,w
  8288  0985  3FC0               	movwi [0]fsr1
  8289  0986  0875               	movf	??_frexp+1,w
  8290  0987  3FC1               	movwi [1]fsr1
  8291  0988  0D71               	rlf	frexp@value+1,w
  8292  0989  0D71               	rlf	frexp@value+1,w
  8293  098A  3901               	andlw	1
  8294  098B  00F4               	movwf	??_frexp
  8295  098C  01F5               	clrf	??_frexp+1
  8296  098D  0873               	movf	frexp@eptr,w
  8297  098E  0086               	movwf	6
  8298  098F  0187               	clrf	7
  8299  0990  0874               	movf	??_frexp,w
  8300  0991  0481               	iorwf	1,f
  8301  0992  3141               	addfsr 1,1
  8302  0993  0875               	movf	??_frexp+1,w
  8303  0994  0481               	iorwf	1,f
  8304  0995  0873               	movf	frexp@eptr,w
  8305  0996  0086               	movwf	6
  8306  0997  0187               	clrf	7
  8307  0998  3082               	movlw	130
  8308  0999  0781               	addwf	1,f
  8309  099A  3141               	addfsr 1,1
  8310  099B  30FF               	movlw	255
  8311  099C  3D81               	addwfc	1,f
  8312  099D  317F               	addfsr 1,-1
  8313  099E  0872               	movf	frexp@value+2,w
  8314  099F  3980               	andlw	-128
  8315  09A0  383F               	iorlw	63
  8316  09A1  00F2               	movwf	frexp@value+2
  8317  09A2  13F1               	bcf	frexp@value+1,7
  8318  09A3  0008               	return
  8319  09A4                     __end_of_frexp:	
  8320                           
  8321                           	psect	text10
  8322  0AF1                     __ptext10:	
  8323 ;; *************** function _eval_poly *****************
  8324 ;; Defined at:
  8325 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  x               3   29[BANK0 ] PTR int 
  8328 ;;  d               2   32[BANK0 ] PTR const 
  8329 ;;		 -> log@coeff(27), 
  8330 ;;  n               2   34[BANK0 ] int 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  res             3   36[BANK0 ] int 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  3   29[BANK0 ] int 
  8335 ;; Registers used:
  8336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8342 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;Total ram usage:       10 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		___ftadd
  8351 ;;		___ftmul
  8352 ;;		___wmul
  8353 ;; This function is called by:
  8354 ;;		_log
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           
  8359                           ;psect for function _eval_poly
  8360  0AF1                     _eval_poly:	
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8364  0AF1  0020               	movlb	0	; select bank0
  8365  0AF2  0843               	movf	eval_poly@n+1,w
  8366  0AF3  00F1               	movwf	___wmul@multiplier+1
  8367  0AF4  0842               	movf	eval_poly@n,w
  8368  0AF5  00F0               	movwf	___wmul@multiplier
  8369  0AF6  3003               	movlw	3
  8370  0AF7  00F2               	movwf	___wmul@multiplicand
  8371  0AF8  3000               	movlw	0
  8372  0AF9  00F3               	movwf	___wmul@multiplicand+1
  8373  0AFA  3188  2030  318A   	fcall	___wmul
  8374  0AFD  0020               	movlb	0	; select bank0
  8375  0AFE  0840               	movf	eval_poly@d,w
  8376  0AFF  0770               	addwf	?___wmul,w
  8377  0B00  0084               	movwf	4
  8378  0B01  0841               	movf	eval_poly@d+1,w
  8379  0B02  3D71               	addwfc	?___wmul+1,w
  8380  0B03  0085               	movwf	5
  8381  0B04  3F00               	moviw [0]fsr0
  8382  0B05  00C4               	movwf	eval_poly@res
  8383  0B06  3F01               	moviw [1]fsr0
  8384  0B07  00C5               	movwf	eval_poly@res+1
  8385  0B08  3F02               	moviw [2]fsr0
  8386  0B09                     L2:	
  8387  0B09  00C6               	movwf	eval_poly@res+2
  8388  0B0A  0842               	movf	eval_poly@n,w
  8389  0B0B  0443               	iorwf	eval_poly@n+1,w
  8390  0B0C  1903               	btfsc	3,2
  8391  0B0D  2B4A               	goto	l2721
  8392  0B0E  30FF               	movlw	255
  8393  0B0F  07C2               	addwf	eval_poly@n,f
  8394  0B10  30FF               	movlw	255
  8395  0B11  3DC3               	addwfc	eval_poly@n+1,f
  8396  0B12  0843               	movf	eval_poly@n+1,w
  8397  0B13  00F1               	movwf	___wmul@multiplier+1
  8398  0B14  0842               	movf	eval_poly@n,w
  8399  0B15  00F0               	movwf	___wmul@multiplier
  8400  0B16  3003               	movlw	3
  8401  0B17  00F2               	movwf	___wmul@multiplicand
  8402  0B18  3000               	movlw	0
  8403  0B19  00F3               	movwf	___wmul@multiplicand+1
  8404  0B1A  3188  2030  318A   	fcall	___wmul
  8405  0B1D  0020               	movlb	0	; select bank0
  8406  0B1E  0840               	movf	eval_poly@d,w
  8407  0B1F  0770               	addwf	?___wmul,w
  8408  0B20  0084               	movwf	4
  8409  0B21  0841               	movf	eval_poly@d+1,w
  8410  0B22  3D71               	addwfc	?___wmul+1,w
  8411  0B23  0085               	movwf	5
  8412  0B24  3F00               	moviw [0]fsr0
  8413  0B25  00B0               	movwf	___ftadd@f1
  8414  0B26  3F01               	moviw [1]fsr0
  8415  0B27  00B1               	movwf	___ftadd@f1+1
  8416  0B28  3F02               	moviw [2]fsr0
  8417  0B29  00B2               	movwf	___ftadd@f1+2
  8418  0B2A  0844               	movf	eval_poly@res,w
  8419  0B2B  00A0               	movwf	___ftmul@f1
  8420  0B2C  0845               	movf	eval_poly@res+1,w
  8421  0B2D  00A1               	movwf	___ftmul@f1+1
  8422  0B2E  0846               	movf	eval_poly@res+2,w
  8423  0B2F  00A2               	movwf	___ftmul@f1+2
  8424  0B30  083D               	movf	eval_poly@x,w
  8425  0B31  00A3               	movwf	___ftmul@f2
  8426  0B32  083E               	movf	eval_poly@x+1,w
  8427  0B33  00A4               	movwf	___ftmul@f2+1
  8428  0B34  083F               	movf	eval_poly@x+2,w
  8429  0B35  00A5               	movwf	___ftmul@f2+2
  8430  0B36  318E  268E  318A   	fcall	___ftmul
  8431  0B39  0020               	movlb	0	; select bank0
  8432  0B3A  0820               	movf	?___ftmul,w
  8433  0B3B  00B3               	movwf	___ftadd@f2
  8434  0B3C  0821               	movf	?___ftmul+1,w
  8435  0B3D  00B4               	movwf	___ftadd@f2+1
  8436  0B3E  0822               	movf	?___ftmul+2,w
  8437  0B3F  00B5               	movwf	___ftadd@f2+2
  8438  0B40  3181  2155  318A   	fcall	___ftadd
  8439  0B43  0020               	movlb	0	; select bank0
  8440  0B44  0830               	movf	?___ftadd,w
  8441  0B45  00C4               	movwf	eval_poly@res
  8442  0B46  0831               	movf	?___ftadd+1,w
  8443  0B47  00C5               	movwf	eval_poly@res+1
  8444  0B48  0832               	movf	?___ftadd+2,w
  8445  0B49  2B09               	goto	L2
  8446  0B4A                     l2721:	
  8447  0B4A  0844               	movf	eval_poly@res,w
  8448  0B4B  00BD               	movwf	?_eval_poly
  8449  0B4C  0845               	movf	eval_poly@res+1,w
  8450  0B4D  00BE               	movwf	?_eval_poly+1
  8451  0B4E  0846               	movf	eval_poly@res+2,w
  8452  0B4F  00BF               	movwf	?_eval_poly+2
  8453  0B50  0008               	return
  8454  0B51                     __end_of_eval_poly:	
  8455                           
  8456                           	psect	text11
  8457  0830                     __ptext11:	
  8458 ;; *************** function ___wmul *****************
  8459 ;; Defined at:
  8460 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  multiplier      2    0[COMMON] unsigned int 
  8463 ;;  multiplicand    2    2[COMMON] unsigned int 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  product         2    4[COMMON] unsigned int 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  2    0[COMMON] unsigned int 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;Total ram usage:        6 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_main
  8485 ;;		_eval_poly
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           
  8490                           ;psect for function ___wmul
  8491  0830                     ___wmul:	
  8492                           
  8493                           ;incstack = 0
  8494                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8495  0830  01F4               	clrf	___wmul@product
  8496  0831  01F5               	clrf	___wmul@product+1
  8497  0832                     l2299:	
  8498  0832  1C70               	btfss	___wmul@multiplier,0
  8499  0833  2838               	goto	l483
  8500  0834  0872               	movf	___wmul@multiplicand,w
  8501  0835  07F4               	addwf	___wmul@product,f
  8502  0836  0873               	movf	___wmul@multiplicand+1,w
  8503  0837  3DF5               	addwfc	___wmul@product+1,f
  8504  0838                     l483:	
  8505  0838  3001               	movlw	1
  8506  0839                     u2235:	
  8507  0839  35F2               	lslf	___wmul@multiplicand,f
  8508  083A  0DF3               	rlf	___wmul@multiplicand+1,f
  8509  083B  0B89               	decfsz	9,f
  8510  083C  2839               	goto	u2235
  8511  083D  3001               	movlw	1
  8512  083E                     u2245:	
  8513  083E  36F1               	lsrf	___wmul@multiplier+1,f
  8514  083F  0CF0               	rrf	___wmul@multiplier,f
  8515  0840  0B89               	decfsz	9,f
  8516  0841  283E               	goto	u2245
  8517  0842  0870               	movf	___wmul@multiplier,w
  8518  0843  0471               	iorwf	___wmul@multiplier+1,w
  8519  0844  1D03               	btfss	3,2
  8520  0845  2832               	goto	l2299
  8521  0846  0875               	movf	___wmul@product+1,w
  8522  0847  00F1               	movwf	?___wmul+1
  8523  0848  0874               	movf	___wmul@product,w
  8524  0849  00F0               	movwf	?___wmul
  8525  084A  0008               	return
  8526  084B                     __end_of___wmul:	
  8527                           
  8528                           	psect	text12
  8529  178A                     __ptext12:	
  8530 ;; *************** function ___lwtoft *****************
  8531 ;; Defined at:
  8532 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  c               2    8[COMMON] unsigned int 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  3    8[COMMON] float 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        4 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    1
  8553 ;; This function calls:
  8554 ;;		___ftpack
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function ___lwtoft
  8562  178A                     ___lwtoft:	
  8563                           
  8564                           ;incstack = 0
  8565                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8566  178A  0878               	movf	___lwtoft@c,w
  8567  178B  00F0               	movwf	___ftpack@arg
  8568  178C  0879               	movf	___lwtoft@c+1,w
  8569  178D  00F1               	movwf	___ftpack@arg+1
  8570  178E  01F2               	clrf	___ftpack@arg+2
  8571  178F  308E               	movlw	142
  8572  1790  00FB               	movwf	??___lwtoft
  8573  1791  087B               	movf	??___lwtoft,w
  8574  1792  00F3               	movwf	___ftpack@exp
  8575  1793  01F4               	clrf	___ftpack@sign
  8576  1794  318B  2351         	fcall	___ftpack
  8577  1796  0870               	movf	?___ftpack,w
  8578  1797  00F8               	movwf	?___lwtoft
  8579  1798  0871               	movf	?___ftpack+1,w
  8580  1799  00F9               	movwf	?___lwtoft+1
  8581  179A  0872               	movf	?___ftpack+2,w
  8582  179B  00FA               	movwf	?___lwtoft+2
  8583  179C  0008               	return
  8584  179D                     __end_of___lwtoft:	
  8585                           
  8586                           	psect	text13
  8587  0935                     __ptext13:	
  8588 ;; *************** function ___lwdiv *****************
  8589 ;; Defined at:
  8590 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  divisor         2    6[COMMON] unsigned int 
  8593 ;;  dividend        2    8[COMMON] unsigned int 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  quotient        2   11[COMMON] unsigned int 
  8596 ;;  counter         1   13[COMMON] unsigned char 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  2    6[COMMON] unsigned int 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;Total ram usage:        8 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; This function calls:
  8613 ;;		Nothing
  8614 ;; This function is called by:
  8615 ;;		_main
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function ___lwdiv
  8621  0935                     ___lwdiv:	
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8625  0935  01FB               	clrf	___lwdiv@quotient
  8626  0936  01FC               	clrf	___lwdiv@quotient+1
  8627  0937  0876               	movf	___lwdiv@divisor,w
  8628  0938  0477               	iorwf	___lwdiv@divisor+1,w
  8629  0939  1903               	btfsc	3,2
  8630  093A  2964               	goto	l3051
  8631  093B  01FD               	clrf	___lwdiv@counter
  8632  093C  0AFD               	incf	___lwdiv@counter,f
  8633  093D                     l3039:	
  8634  093D  1BF7               	btfsc	___lwdiv@divisor+1,7
  8635  093E  2949               	goto	l3041
  8636  093F  3001               	movlw	1
  8637  0940                     u3265:	
  8638  0940  35F6               	lslf	___lwdiv@divisor,f
  8639  0941  0DF7               	rlf	___lwdiv@divisor+1,f
  8640  0942  0B89               	decfsz	9,f
  8641  0943  2940               	goto	u3265
  8642  0944  3001               	movlw	1
  8643  0945  00FA               	movwf	??___lwdiv
  8644  0946  087A               	movf	??___lwdiv,w
  8645  0947  07FD               	addwf	___lwdiv@counter,f
  8646  0948  293D               	goto	l3039
  8647  0949                     l3041:	
  8648  0949  3001               	movlw	1
  8649  094A                     u3285:	
  8650  094A  35FB               	lslf	___lwdiv@quotient,f
  8651  094B  0DFC               	rlf	___lwdiv@quotient+1,f
  8652  094C  0B89               	decfsz	9,f
  8653  094D  294A               	goto	u3285
  8654  094E  0877               	movf	___lwdiv@divisor+1,w
  8655  094F  0279               	subwf	___lwdiv@dividend+1,w
  8656  0950  1D03               	skipz
  8657  0951  2954               	goto	u3295
  8658  0952  0876               	movf	___lwdiv@divisor,w
  8659  0953  0278               	subwf	___lwdiv@dividend,w
  8660  0954                     u3295:	
  8661  0954  1C03               	skipc
  8662  0955  295B               	goto	l3047
  8663  0956  0876               	movf	___lwdiv@divisor,w
  8664  0957  02F8               	subwf	___lwdiv@dividend,f
  8665  0958  0877               	movf	___lwdiv@divisor+1,w
  8666  0959  3BF9               	subwfb	___lwdiv@dividend+1,f
  8667  095A  147B               	bsf	___lwdiv@quotient,0
  8668  095B                     l3047:	
  8669  095B  3001               	movlw	1
  8670  095C                     u3305:	
  8671  095C  36F7               	lsrf	___lwdiv@divisor+1,f
  8672  095D  0CF6               	rrf	___lwdiv@divisor,f
  8673  095E  0B89               	decfsz	9,f
  8674  095F  295C               	goto	u3305
  8675  0960  3001               	movlw	1
  8676  0961  02FD               	subwf	___lwdiv@counter,f
  8677  0962  1D03               	btfss	3,2
  8678  0963  2949               	goto	l3041
  8679  0964                     l3051:	
  8680  0964  087C               	movf	___lwdiv@quotient+1,w
  8681  0965  00F7               	movwf	?___lwdiv+1
  8682  0966  087B               	movf	___lwdiv@quotient,w
  8683  0967  00F6               	movwf	?___lwdiv
  8684  0968  0008               	return
  8685  0969                     __end_of___lwdiv:	
  8686                           
  8687                           	psect	text14
  8688  17E6                     __ptext14:	
  8689 ;; *************** function ___lbtoft *****************
  8690 ;; Defined at:
  8691 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  c               1    wreg     unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  c               1   11[COMMON] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  3    8[COMMON] float 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8705 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8707 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8708 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;Total ram usage:        8 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    1
  8712 ;; This function calls:
  8713 ;;		___ftpack
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           
  8720                           ;psect for function ___lbtoft
  8721  17E6                     ___lbtoft:	
  8722                           
  8723                           ;incstack = 0
  8724                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8725                           ;___lbtoft@c stored from wreg
  8726  17E6  00FB               	movwf	___lbtoft@c
  8727  17E7  087B               	movf	___lbtoft@c,w
  8728  17E8  0020               	movlb	0	; select bank0
  8729  17E9  00A0               	movwf	??___lbtoft
  8730  17EA  01A1               	clrf	??___lbtoft+1
  8731  17EB  01A2               	clrf	??___lbtoft+2
  8732  17EC  0820               	movf	??___lbtoft,w
  8733  17ED  00F0               	movwf	___ftpack@arg
  8734  17EE  0821               	movf	??___lbtoft+1,w
  8735  17EF  00F1               	movwf	___ftpack@arg+1
  8736  17F0  0822               	movf	??___lbtoft+2,w
  8737  17F1  00F2               	movwf	___ftpack@arg+2
  8738  17F2  308E               	movlw	142
  8739  17F3  00A3               	movwf	??___lbtoft+3
  8740  17F4  0823               	movf	??___lbtoft+3,w
  8741  17F5  00F3               	movwf	___ftpack@exp
  8742  17F6  01F4               	clrf	___ftpack@sign
  8743  17F7  318B  2351         	fcall	___ftpack
  8744  17F9  0870               	movf	?___ftpack,w
  8745  17FA  00F8               	movwf	?___lbtoft
  8746  17FB  0871               	movf	?___ftpack+1,w
  8747  17FC  00F9               	movwf	?___lbtoft+1
  8748  17FD  0872               	movf	?___ftpack+2,w
  8749  17FE  00FA               	movwf	?___lbtoft+2
  8750  17FF  0008               	return
  8751  1800                     __end_of___lbtoft:	
  8752                           
  8753                           	psect	text15
  8754  0005                     __ptext15:	
  8755 ;; *************** function ___fttol *****************
  8756 ;; Defined at:
  8757 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  f1              3   58[BANK0 ] float 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;  lval            4   67[BANK0 ] unsigned long 
  8762 ;;  exp1            1   71[BANK0 ] unsigned char 
  8763 ;;  sign1           1   66[BANK0 ] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  4   58[BANK0 ] long 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;Total ram usage:       14 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_main
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           
  8787                           ;psect for function ___fttol
  8788  0005                     ___fttol:	
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8792  0005  0020               	movlb	0	; select bank0
  8793  0006  085A               	movf	___fttol@f1,w
  8794  0007  00DE               	movwf	??___fttol
  8795  0008  085B               	movf	___fttol@f1+1,w
  8796  0009  00DF               	movwf	??___fttol+1
  8797  000A  085C               	movf	___fttol@f1+2,w
  8798  000B  00E0               	movwf	??___fttol+2
  8799  000C  1003               	clrc
  8800  000D  0D5F               	rlf	??___fttol+1,w
  8801  000E  0D60               	rlf	??___fttol+2,w
  8802  000F  00E1               	movwf	??___fttol+3
  8803  0010  0861               	movf	??___fttol+3,w
  8804  0011  00E7               	movwf	___fttol@exp1
  8805  0012  0867               	movf	___fttol@exp1,w
  8806  0013  1D03               	btfss	3,2
  8807  0014  281E               	goto	l2989
  8808  0015  3000               	movlw	0
  8809  0016  00DD               	movwf	?___fttol+3
  8810  0017  3000               	movlw	0
  8811  0018  00DC               	movwf	?___fttol+2
  8812  0019  3000               	movlw	0
  8813  001A  00DB               	movwf	?___fttol+1
  8814  001B  3000               	movlw	0
  8815  001C  00DA               	movwf	?___fttol
  8816  001D  0008               	return
  8817  001E                     l2989:	
  8818  001E  085A               	movf	___fttol@f1,w
  8819  001F  00DE               	movwf	??___fttol
  8820  0020  085B               	movf	___fttol@f1+1,w
  8821  0021  00DF               	movwf	??___fttol+1
  8822  0022  085C               	movf	___fttol@f1+2,w
  8823  0023  00E0               	movwf	??___fttol+2
  8824  0024  3017               	movlw	23
  8825  0025                     u3165:	
  8826  0025  36E0               	lsrf	??___fttol+2,f
  8827  0026  0CDF               	rrf	??___fttol+1,f
  8828  0027  0CDE               	rrf	??___fttol,f
  8829  0028  0B89               	decfsz	9,f
  8830  0029  2825               	goto	u3165
  8831  002A  085E               	movf	??___fttol,w
  8832  002B  00E1               	movwf	??___fttol+3
  8833  002C  0861               	movf	??___fttol+3,w
  8834  002D  00E2               	movwf	___fttol@sign1
  8835  002E  17DB               	bsf	___fttol@f1+1,7
  8836  002F  30FF               	movlw	255
  8837  0030  05DA               	andwf	___fttol@f1,f
  8838  0031  30FF               	movlw	255
  8839  0032  05DB               	andwf	___fttol@f1+1,f
  8840  0033  3000               	movlw	0
  8841  0034  05DC               	andwf	___fttol@f1+2,f
  8842  0035  085A               	movf	___fttol@f1,w
  8843  0036  00E3               	movwf	___fttol@lval
  8844  0037  085B               	movf	___fttol@f1+1,w
  8845  0038  00E4               	movwf	___fttol@lval+1
  8846  0039  085C               	movf	___fttol@f1+2,w
  8847  003A  00E5               	movwf	___fttol@lval+2
  8848  003B  01E6               	clrf	___fttol@lval+3
  8849  003C  308E               	movlw	142
  8850  003D  02E7               	subwf	___fttol@exp1,f
  8851  003E  1FE7               	btfss	___fttol@exp1,7
  8852  003F  285C               	goto	l3009
  8853  0040  0867               	movf	___fttol@exp1,w
  8854  0041  3A80               	xorlw	128
  8855  0042  3E8F               	addlw	143
  8856  0043  1803               	skipnc
  8857  0044  284E               	goto	l3007
  8858  0045  3000               	movlw	0
  8859  0046  00DD               	movwf	?___fttol+3
  8860  0047  3000               	movlw	0
  8861  0048  00DC               	movwf	?___fttol+2
  8862  0049  3000               	movlw	0
  8863  004A  00DB               	movwf	?___fttol+1
  8864  004B  3000               	movlw	0
  8865  004C  00DA               	movwf	?___fttol
  8866  004D  0008               	return
  8867  004E                     l3007:	
  8868  004E  3001               	movlw	1
  8869  004F                     u3195:	
  8870  004F  36E6               	lsrf	___fttol@lval+3,f
  8871  0050  0CE5               	rrf	___fttol@lval+2,f
  8872  0051  0CE4               	rrf	___fttol@lval+1,f
  8873  0052  0CE3               	rrf	___fttol@lval,f
  8874  0053  0B89               	decfsz	9,f
  8875  0054  284F               	goto	u3195
  8876  0055  3001               	movlw	1
  8877  0056  00DE               	movwf	??___fttol
  8878  0057  085E               	movf	??___fttol,w
  8879  0058  07E7               	addwf	___fttol@exp1,f
  8880  0059  1903               	btfsc	3,2
  8881  005A  2875               	goto	l3017
  8882  005B  284E               	goto	l3007
  8883  005C                     l3009:	
  8884  005C  3018               	movlw	24
  8885  005D  0267               	subwf	___fttol@exp1,w
  8886  005E  1C03               	skipc
  8887  005F  2872               	goto	l735
  8888  0060  3000               	movlw	0
  8889  0061  00DD               	movwf	?___fttol+3
  8890  0062  3000               	movlw	0
  8891  0063  00DC               	movwf	?___fttol+2
  8892  0064  3000               	movlw	0
  8893  0065  00DB               	movwf	?___fttol+1
  8894  0066  3000               	movlw	0
  8895  0067  00DA               	movwf	?___fttol
  8896  0068  0008               	return
  8897  0069                     l3015:	
  8898  0069  3001               	movlw	1
  8899  006A                     u3225:	
  8900  006A  35E3               	lslf	___fttol@lval,f
  8901  006B  0DE4               	rlf	___fttol@lval+1,f
  8902  006C  0DE5               	rlf	___fttol@lval+2,f
  8903  006D  0DE6               	rlf	___fttol@lval+3,f
  8904  006E  0B89               	decfsz	9,f
  8905  006F  286A               	goto	u3225
  8906  0070  3001               	movlw	1
  8907  0071  02E7               	subwf	___fttol@exp1,f
  8908  0072                     l735:	
  8909  0072  0867               	movf	___fttol@exp1,w
  8910  0073  1D03               	btfss	3,2
  8911  0074  2869               	goto	l3015
  8912  0075                     l3017:	
  8913  0075  0862               	movf	___fttol@sign1,w
  8914  0076  1903               	btfsc	3,2
  8915  0077  2883               	goto	l3021
  8916  0078  09E3               	comf	___fttol@lval,f
  8917  0079  09E4               	comf	___fttol@lval+1,f
  8918  007A  09E5               	comf	___fttol@lval+2,f
  8919  007B  09E6               	comf	___fttol@lval+3,f
  8920  007C  0AE3               	incf	___fttol@lval,f
  8921  007D  1903               	skipnz
  8922  007E  0AE4               	incf	___fttol@lval+1,f
  8923  007F  1903               	skipnz
  8924  0080  0AE5               	incf	___fttol@lval+2,f
  8925  0081  1903               	skipnz
  8926  0082  0AE6               	incf	___fttol@lval+3,f
  8927  0083                     l3021:	
  8928  0083  0866               	movf	___fttol@lval+3,w
  8929  0084  00DD               	movwf	?___fttol+3
  8930  0085  0865               	movf	___fttol@lval+2,w
  8931  0086  00DC               	movwf	?___fttol+2
  8932  0087  0864               	movf	___fttol@lval+1,w
  8933  0088  00DB               	movwf	?___fttol+1
  8934  0089  0863               	movf	___fttol@lval,w
  8935  008A  00DA               	movwf	?___fttol
  8936  008B  0008               	return
  8937  008C                     __end_of___fttol:	
  8938                           
  8939                           	psect	text16
  8940  084B                     __ptext16:	
  8941 ;; *************** function ___ftsub *****************
  8942 ;; Defined at:
  8943 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  f2              3   29[BANK0 ] float 
  8946 ;;  f1              3   32[BANK0 ] float 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  3   29[BANK0 ] float 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0, pclath, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8958 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;Total ram usage:        6 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    2
  8965 ;; This function calls:
  8966 ;;		___ftadd
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function ___ftsub
  8974  084B                     ___ftsub:	
  8975                           
  8976                           ;incstack = 0
  8977                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8978  084B  0020               	movlb	0	; select bank0
  8979  084C  083F               	movf	___ftsub@f2+2,w
  8980  084D  043E               	iorwf	___ftsub@f2+1,w
  8981  084E  043D               	iorwf	___ftsub@f2,w
  8982  084F  1903               	skipnz
  8983  0850  2853               	goto	l2979
  8984  0851  3080               	movlw	128
  8985  0852  06BF               	xorwf	___ftsub@f2+2,f
  8986  0853                     l2979:	
  8987  0853  0840               	movf	___ftsub@f1,w
  8988  0854  00B0               	movwf	___ftadd@f1
  8989  0855  0841               	movf	___ftsub@f1+1,w
  8990  0856  00B1               	movwf	___ftadd@f1+1
  8991  0857  0842               	movf	___ftsub@f1+2,w
  8992  0858  00B2               	movwf	___ftadd@f1+2
  8993  0859  083D               	movf	___ftsub@f2,w
  8994  085A  00B3               	movwf	___ftadd@f2
  8995  085B  083E               	movf	___ftsub@f2+1,w
  8996  085C  00B4               	movwf	___ftadd@f2+1
  8997  085D  083F               	movf	___ftsub@f2+2,w
  8998  085E  00B5               	movwf	___ftadd@f2+2
  8999  085F  3181  2155         	fcall	___ftadd
  9000  0861  0020               	movlb	0	; select bank0
  9001  0862  0830               	movf	?___ftadd,w
  9002  0863  00BD               	movwf	?___ftsub
  9003  0864  0831               	movf	?___ftadd+1,w
  9004  0865  00BE               	movwf	?___ftsub+1
  9005  0866  0832               	movf	?___ftadd+2,w
  9006  0867  00BF               	movwf	?___ftsub+2
  9007  0868  0008               	return
  9008  0869                     __end_of___ftsub:	
  9009                           
  9010                           	psect	text17
  9011  0D35                     __ptext17:	
  9012 ;; *************** function ___ftdiv *****************
  9013 ;; Defined at:
  9014 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  f2              3    0[BANK0 ] float 
  9017 ;;  f1              3    3[BANK0 ] float 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  f3              3   11[BANK0 ] float 
  9020 ;;  sign            1   15[BANK0 ] unsigned char 
  9021 ;;  exp             1   14[BANK0 ] unsigned char 
  9022 ;;  cntr            1   10[BANK0 ] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  3    0[BANK0 ] float 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:       16 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    1
  9039 ;; This function calls:
  9040 ;;		___ftpack
  9041 ;; This function is called by:
  9042 ;;		_main
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function ___ftdiv
  9048  0D35                     ___ftdiv:	
  9049                           
  9050                           ;incstack = 0
  9051                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9052  0D35  0020               	movlb	0	; select bank0
  9053  0D36  0823               	movf	___ftdiv@f1,w
  9054  0D37  00A6               	movwf	??___ftdiv
  9055  0D38  0824               	movf	___ftdiv@f1+1,w
  9056  0D39  00A7               	movwf	??___ftdiv+1
  9057  0D3A  0825               	movf	___ftdiv@f1+2,w
  9058  0D3B  00A8               	movwf	??___ftdiv+2
  9059  0D3C  1003               	clrc
  9060  0D3D  0D27               	rlf	??___ftdiv+1,w
  9061  0D3E  0D28               	rlf	??___ftdiv+2,w
  9062  0D3F  00A9               	movwf	??___ftdiv+3
  9063  0D40  0829               	movf	??___ftdiv+3,w
  9064  0D41  00AE               	movwf	___ftdiv@exp
  9065  0D42  082E               	movf	___ftdiv@exp,w
  9066  0D43  1D03               	btfss	3,2
  9067  0D44  2D4C               	goto	l2939
  9068  0D45  3000               	movlw	0
  9069  0D46  00A0               	movwf	?___ftdiv
  9070  0D47  3000               	movlw	0
  9071  0D48  00A1               	movwf	?___ftdiv+1
  9072  0D49  3000               	movlw	0
  9073  0D4A  00A2               	movwf	?___ftdiv+2
  9074  0D4B  0008               	return
  9075  0D4C                     l2939:	
  9076  0D4C  0820               	movf	___ftdiv@f2,w
  9077  0D4D  00A6               	movwf	??___ftdiv
  9078  0D4E  0821               	movf	___ftdiv@f2+1,w
  9079  0D4F  00A7               	movwf	??___ftdiv+1
  9080  0D50  0822               	movf	___ftdiv@f2+2,w
  9081  0D51  00A8               	movwf	??___ftdiv+2
  9082  0D52  1003               	clrc
  9083  0D53  0D27               	rlf	??___ftdiv+1,w
  9084  0D54  0D28               	rlf	??___ftdiv+2,w
  9085  0D55  00A9               	movwf	??___ftdiv+3
  9086  0D56  0829               	movf	??___ftdiv+3,w
  9087  0D57  00AF               	movwf	___ftdiv@sign
  9088  0D58  082F               	movf	___ftdiv@sign,w
  9089  0D59  1D03               	btfss	3,2
  9090  0D5A  2D62               	goto	l2945
  9091  0D5B  3000               	movlw	0
  9092  0D5C  00A0               	movwf	?___ftdiv
  9093  0D5D  3000               	movlw	0
  9094  0D5E  00A1               	movwf	?___ftdiv+1
  9095  0D5F  3000               	movlw	0
  9096  0D60  00A2               	movwf	?___ftdiv+2
  9097  0D61  0008               	return
  9098  0D62                     l2945:	
  9099  0D62  3000               	movlw	0
  9100  0D63  00AB               	movwf	___ftdiv@f3
  9101  0D64  3000               	movlw	0
  9102  0D65  00AC               	movwf	___ftdiv@f3+1
  9103  0D66  3000               	movlw	0
  9104  0D67  00AD               	movwf	___ftdiv@f3+2
  9105  0D68  3089               	movlw	137
  9106  0D69  072F               	addwf	___ftdiv@sign,w
  9107  0D6A  00A6               	movwf	??___ftdiv
  9108  0D6B  0826               	movf	??___ftdiv,w
  9109  0D6C  02AE               	subwf	___ftdiv@exp,f
  9110  0D6D  0823               	movf	___ftdiv@f1,w
  9111  0D6E  00A6               	movwf	??___ftdiv
  9112  0D6F  0824               	movf	___ftdiv@f1+1,w
  9113  0D70  00A7               	movwf	??___ftdiv+1
  9114  0D71  0825               	movf	___ftdiv@f1+2,w
  9115  0D72  00A8               	movwf	??___ftdiv+2
  9116  0D73  3010               	movlw	16
  9117  0D74                     u3085:	
  9118  0D74  36A8               	lsrf	??___ftdiv+2,f
  9119  0D75  0CA7               	rrf	??___ftdiv+1,f
  9120  0D76  0CA6               	rrf	??___ftdiv,f
  9121  0D77  0B89               	decfsz	9,f
  9122  0D78  2D74               	goto	u3085
  9123  0D79  0826               	movf	??___ftdiv,w
  9124  0D7A  00A9               	movwf	??___ftdiv+3
  9125  0D7B  0829               	movf	??___ftdiv+3,w
  9126  0D7C  00AF               	movwf	___ftdiv@sign
  9127  0D7D  0820               	movf	___ftdiv@f2,w
  9128  0D7E  00A6               	movwf	??___ftdiv
  9129  0D7F  0821               	movf	___ftdiv@f2+1,w
  9130  0D80  00A7               	movwf	??___ftdiv+1
  9131  0D81  0822               	movf	___ftdiv@f2+2,w
  9132  0D82  00A8               	movwf	??___ftdiv+2
  9133  0D83  3010               	movlw	16
  9134  0D84                     u3095:	
  9135  0D84  36A8               	lsrf	??___ftdiv+2,f
  9136  0D85  0CA7               	rrf	??___ftdiv+1,f
  9137  0D86  0CA6               	rrf	??___ftdiv,f
  9138  0D87  0B89               	decfsz	9,f
  9139  0D88  2D84               	goto	u3095
  9140  0D89  0826               	movf	??___ftdiv,w
  9141  0D8A  00A9               	movwf	??___ftdiv+3
  9142  0D8B  0829               	movf	??___ftdiv+3,w
  9143  0D8C  06AF               	xorwf	___ftdiv@sign,f
  9144  0D8D  3080               	movlw	128
  9145  0D8E  00A6               	movwf	??___ftdiv
  9146  0D8F  0826               	movf	??___ftdiv,w
  9147  0D90  05AF               	andwf	___ftdiv@sign,f
  9148  0D91  17A4               	bsf	___ftdiv@f1+1,7
  9149  0D92  30FF               	movlw	255
  9150  0D93  05A3               	andwf	___ftdiv@f1,f
  9151  0D94  30FF               	movlw	255
  9152  0D95  05A4               	andwf	___ftdiv@f1+1,f
  9153  0D96  3000               	movlw	0
  9154  0D97  05A5               	andwf	___ftdiv@f1+2,f
  9155  0D98  17A1               	bsf	___ftdiv@f2+1,7
  9156  0D99  30FF               	movlw	255
  9157  0D9A  05A0               	andwf	___ftdiv@f2,f
  9158  0D9B  30FF               	movlw	255
  9159  0D9C  05A1               	andwf	___ftdiv@f2+1,f
  9160  0D9D  3000               	movlw	0
  9161  0D9E  05A2               	andwf	___ftdiv@f2+2,f
  9162  0D9F  3018               	movlw	24
  9163  0DA0  00A6               	movwf	??___ftdiv
  9164  0DA1  0826               	movf	??___ftdiv,w
  9165  0DA2  00AA               	movwf	___ftdiv@cntr
  9166  0DA3                     l2959:	
  9167  0DA3  3001               	movlw	1
  9168  0DA4                     u3105:	
  9169  0DA4  35AB               	lslf	___ftdiv@f3,f
  9170  0DA5  0DAC               	rlf	___ftdiv@f3+1,f
  9171  0DA6  0DAD               	rlf	___ftdiv@f3+2,f
  9172  0DA7  0B89               	decfsz	9,f
  9173  0DA8  2DA4               	goto	u3105
  9174  0DA9  0822               	movf	___ftdiv@f2+2,w
  9175  0DAA  0225               	subwf	___ftdiv@f1+2,w
  9176  0DAB  1D03               	skipz
  9177  0DAC  2DB3               	goto	u3115
  9178  0DAD  0821               	movf	___ftdiv@f2+1,w
  9179  0DAE  0224               	subwf	___ftdiv@f1+1,w
  9180  0DAF  1D03               	skipz
  9181  0DB0  2DB3               	goto	u3115
  9182  0DB1  0820               	movf	___ftdiv@f2,w
  9183  0DB2  0223               	subwf	___ftdiv@f1,w
  9184  0DB3                     u3115:	
  9185  0DB3  1C03               	skipc
  9186  0DB4  2DBC               	goto	l2967
  9187  0DB5  0820               	movf	___ftdiv@f2,w
  9188  0DB6  02A3               	subwf	___ftdiv@f1,f
  9189  0DB7  0821               	movf	___ftdiv@f2+1,w
  9190  0DB8  3BA4               	subwfb	___ftdiv@f1+1,f
  9191  0DB9  0822               	movf	___ftdiv@f2+2,w
  9192  0DBA  3BA5               	subwfb	___ftdiv@f1+2,f
  9193  0DBB  142B               	bsf	___ftdiv@f3,0
  9194  0DBC                     l2967:	
  9195  0DBC  3001               	movlw	1
  9196  0DBD                     u3125:	
  9197  0DBD  35A3               	lslf	___ftdiv@f1,f
  9198  0DBE  0DA4               	rlf	___ftdiv@f1+1,f
  9199  0DBF  0DA5               	rlf	___ftdiv@f1+2,f
  9200  0DC0  0B89               	decfsz	9,f
  9201  0DC1  2DBD               	goto	u3125
  9202  0DC2  3001               	movlw	1
  9203  0DC3  02AA               	subwf	___ftdiv@cntr,f
  9204  0DC4  1D03               	btfss	3,2
  9205  0DC5  2DA3               	goto	l2959
  9206  0DC6  082B               	movf	___ftdiv@f3,w
  9207  0DC7  00F0               	movwf	___ftpack@arg
  9208  0DC8  082C               	movf	___ftdiv@f3+1,w
  9209  0DC9  00F1               	movwf	___ftpack@arg+1
  9210  0DCA  082D               	movf	___ftdiv@f3+2,w
  9211  0DCB  00F2               	movwf	___ftpack@arg+2
  9212  0DCC  082E               	movf	___ftdiv@exp,w
  9213  0DCD  00A6               	movwf	??___ftdiv
  9214  0DCE  0826               	movf	??___ftdiv,w
  9215  0DCF  00F3               	movwf	___ftpack@exp
  9216  0DD0  082F               	movf	___ftdiv@sign,w
  9217  0DD1  00A7               	movwf	??___ftdiv+1
  9218  0DD2  0827               	movf	??___ftdiv+1,w
  9219  0DD3  00F4               	movwf	___ftpack@sign
  9220  0DD4  318B  2351         	fcall	___ftpack
  9221  0DD6  0870               	movf	?___ftpack,w
  9222  0DD7  0020               	movlb	0	; select bank0
  9223  0DD8  00A0               	movwf	?___ftdiv
  9224  0DD9  0871               	movf	?___ftpack+1,w
  9225  0DDA  00A1               	movwf	?___ftdiv+1
  9226  0DDB  0872               	movf	?___ftpack+2,w
  9227  0DDC  00A2               	movwf	?___ftdiv+2
  9228  0DDD  0008               	return
  9229  0DDE                     __end_of___ftdiv:	
  9230                           
  9231                           	psect	text18
  9232  0C30                     __ptext18:	
  9233 ;; *************** function ___aldiv *****************
  9234 ;; Defined at:
  9235 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  divisor         4    0[COMMON] long 
  9238 ;;  dividend        4    4[COMMON] long 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  quotient        4    2[BANK0 ] long 
  9241 ;;  sign            1    1[BANK0 ] unsigned char 
  9242 ;;  counter         1    0[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  4    0[COMMON] long 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9252 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;Total ram usage:       15 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_main
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function ___aldiv
  9267  0C30                     ___aldiv:	
  9268                           
  9269                           ;incstack = 0
  9270                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9271  0C30  0020               	movlb	0	; select bank0
  9272  0C31  01A1               	clrf	___aldiv@sign
  9273  0C32  1FF3               	btfss	___aldiv@divisor+3,7
  9274  0C33  2C41               	goto	l538
  9275  0C34  09F0               	comf	___aldiv@divisor,f
  9276  0C35  09F1               	comf	___aldiv@divisor+1,f
  9277  0C36  09F2               	comf	___aldiv@divisor+2,f
  9278  0C37  09F3               	comf	___aldiv@divisor+3,f
  9279  0C38  0AF0               	incf	___aldiv@divisor,f
  9280  0C39  1903               	skipnz
  9281  0C3A  0AF1               	incf	___aldiv@divisor+1,f
  9282  0C3B  1903               	skipnz
  9283  0C3C  0AF2               	incf	___aldiv@divisor+2,f
  9284  0C3D  1903               	skipnz
  9285  0C3E  0AF3               	incf	___aldiv@divisor+3,f
  9286  0C3F  01A1               	clrf	___aldiv@sign
  9287  0C40  0AA1               	incf	___aldiv@sign,f
  9288  0C41                     l538:	
  9289  0C41  1FF7               	btfss	___aldiv@dividend+3,7
  9290  0C42  2C52               	goto	l2903
  9291  0C43  09F4               	comf	___aldiv@dividend,f
  9292  0C44  09F5               	comf	___aldiv@dividend+1,f
  9293  0C45  09F6               	comf	___aldiv@dividend+2,f
  9294  0C46  09F7               	comf	___aldiv@dividend+3,f
  9295  0C47  0AF4               	incf	___aldiv@dividend,f
  9296  0C48  1903               	skipnz
  9297  0C49  0AF5               	incf	___aldiv@dividend+1,f
  9298  0C4A  1903               	skipnz
  9299  0C4B  0AF6               	incf	___aldiv@dividend+2,f
  9300  0C4C  1903               	skipnz
  9301  0C4D  0AF7               	incf	___aldiv@dividend+3,f
  9302  0C4E  3001               	movlw	1
  9303  0C4F  00F8               	movwf	??___aldiv
  9304  0C50  0878               	movf	??___aldiv,w
  9305  0C51  06A1               	xorwf	___aldiv@sign,f
  9306  0C52                     l2903:	
  9307  0C52  3000               	movlw	0
  9308  0C53  00A5               	movwf	___aldiv@quotient+3
  9309  0C54  3000               	movlw	0
  9310  0C55  00A4               	movwf	___aldiv@quotient+2
  9311  0C56  3000               	movlw	0
  9312  0C57  00A3               	movwf	___aldiv@quotient+1
  9313  0C58  3000               	movlw	0
  9314  0C59  00A2               	movwf	___aldiv@quotient
  9315  0C5A  0873               	movf	___aldiv@divisor+3,w
  9316  0C5B  0472               	iorwf	___aldiv@divisor+2,w
  9317  0C5C  0471               	iorwf	___aldiv@divisor+1,w
  9318  0C5D  0470               	iorwf	___aldiv@divisor,w
  9319  0C5E  1903               	skipnz
  9320  0C5F  2C9B               	goto	l2925
  9321  0C60  01A0               	clrf	___aldiv@counter
  9322  0C61  0AA0               	incf	___aldiv@counter,f
  9323  0C62                     l2911:	
  9324  0C62  1BF3               	btfsc	___aldiv@divisor+3,7
  9325  0C63  2C70               	goto	l2913
  9326  0C64  3001               	movlw	1
  9327  0C65                     u2995:	
  9328  0C65  35F0               	lslf	___aldiv@divisor,f
  9329  0C66  0DF1               	rlf	___aldiv@divisor+1,f
  9330  0C67  0DF2               	rlf	___aldiv@divisor+2,f
  9331  0C68  0DF3               	rlf	___aldiv@divisor+3,f
  9332  0C69  0B89               	decfsz	9,f
  9333  0C6A  2C65               	goto	u2995
  9334  0C6B  3001               	movlw	1
  9335  0C6C  00F8               	movwf	??___aldiv
  9336  0C6D  0878               	movf	??___aldiv,w
  9337  0C6E  07A0               	addwf	___aldiv@counter,f
  9338  0C6F  2C62               	goto	l2911
  9339  0C70                     l2913:	
  9340  0C70  3001               	movlw	1
  9341  0C71                     u3015:	
  9342  0C71  35A2               	lslf	___aldiv@quotient,f
  9343  0C72  0DA3               	rlf	___aldiv@quotient+1,f
  9344  0C73  0DA4               	rlf	___aldiv@quotient+2,f
  9345  0C74  0DA5               	rlf	___aldiv@quotient+3,f
  9346  0C75  0B89               	decfsz	9,f
  9347  0C76  2C71               	goto	u3015
  9348  0C77  0873               	movf	___aldiv@divisor+3,w
  9349  0C78  0277               	subwf	___aldiv@dividend+3,w
  9350  0C79  1D03               	skipz
  9351  0C7A  2C85               	goto	u3025
  9352  0C7B  0872               	movf	___aldiv@divisor+2,w
  9353  0C7C  0276               	subwf	___aldiv@dividend+2,w
  9354  0C7D  1D03               	skipz
  9355  0C7E  2C85               	goto	u3025
  9356  0C7F  0871               	movf	___aldiv@divisor+1,w
  9357  0C80  0275               	subwf	___aldiv@dividend+1,w
  9358  0C81  1D03               	skipz
  9359  0C82  2C85               	goto	u3025
  9360  0C83  0870               	movf	___aldiv@divisor,w
  9361  0C84  0274               	subwf	___aldiv@dividend,w
  9362  0C85                     u3025:	
  9363  0C85  1C03               	skipc
  9364  0C86  2C90               	goto	l2921
  9365  0C87  0870               	movf	___aldiv@divisor,w
  9366  0C88  02F4               	subwf	___aldiv@dividend,f
  9367  0C89  0871               	movf	___aldiv@divisor+1,w
  9368  0C8A  3BF5               	subwfb	___aldiv@dividend+1,f
  9369  0C8B  0872               	movf	___aldiv@divisor+2,w
  9370  0C8C  3BF6               	subwfb	___aldiv@dividend+2,f
  9371  0C8D  0873               	movf	___aldiv@divisor+3,w
  9372  0C8E  3BF7               	subwfb	___aldiv@dividend+3,f
  9373  0C8F  1422               	bsf	___aldiv@quotient,0
  9374  0C90                     l2921:	
  9375  0C90  3001               	movlw	1
  9376  0C91                     u3035:	
  9377  0C91  36F3               	lsrf	___aldiv@divisor+3,f
  9378  0C92  0CF2               	rrf	___aldiv@divisor+2,f
  9379  0C93  0CF1               	rrf	___aldiv@divisor+1,f
  9380  0C94  0CF0               	rrf	___aldiv@divisor,f
  9381  0C95  0B89               	decfsz	9,f
  9382  0C96  2C91               	goto	u3035
  9383  0C97  3001               	movlw	1
  9384  0C98  02A0               	subwf	___aldiv@counter,f
  9385  0C99  1D03               	btfss	3,2
  9386  0C9A  2C70               	goto	l2913
  9387  0C9B                     l2925:	
  9388  0C9B  0821               	movf	___aldiv@sign,w
  9389  0C9C  1903               	btfsc	3,2
  9390  0C9D  2CA9               	goto	l2929
  9391  0C9E  09A2               	comf	___aldiv@quotient,f
  9392  0C9F  09A3               	comf	___aldiv@quotient+1,f
  9393  0CA0  09A4               	comf	___aldiv@quotient+2,f
  9394  0CA1  09A5               	comf	___aldiv@quotient+3,f
  9395  0CA2  0AA2               	incf	___aldiv@quotient,f
  9396  0CA3  1903               	skipnz
  9397  0CA4  0AA3               	incf	___aldiv@quotient+1,f
  9398  0CA5  1903               	skipnz
  9399  0CA6  0AA4               	incf	___aldiv@quotient+2,f
  9400  0CA7  1903               	skipnz
  9401  0CA8  0AA5               	incf	___aldiv@quotient+3,f
  9402  0CA9                     l2929:	
  9403  0CA9  0825               	movf	___aldiv@quotient+3,w
  9404  0CAA  00F3               	movwf	?___aldiv+3
  9405  0CAB  0824               	movf	___aldiv@quotient+2,w
  9406  0CAC  00F2               	movwf	?___aldiv+2
  9407  0CAD  0823               	movf	___aldiv@quotient+1,w
  9408  0CAE  00F1               	movwf	?___aldiv+1
  9409  0CAF  0822               	movf	___aldiv@quotient,w
  9410  0CB0  00F0               	movwf	?___aldiv
  9411  0CB1  0008               	return
  9412  0CB2                     __end_of___aldiv:	
  9413                           
  9414                           	psect	text19
  9415  09E0                     __ptext19:	
  9416 ;; *************** function _SYSTEM_Initialize *****************
  9417 ;; Defined at:
  9418 ;;		line 37 in file "system.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;		None
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;Total ram usage:        2 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    3
  9439 ;; This function calls:
  9440 ;;		_ADCC_Initialize
  9441 ;;		_InitCustomChars
  9442 ;;		_Init_PID
  9443 ;;		_LCD_Clear
  9444 ;;		_LCD_Init
  9445 ;;		_OSCILLATOR_Initialize
  9446 ;;		_PIN_MANAGER_Initialize
  9447 ;;		_PWM6_Initialize
  9448 ;;		_TMR0_Initialize
  9449 ;;		_TMR2_Initialize
  9450 ;; This function is called by:
  9451 ;;		_main
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function _SYSTEM_Initialize
  9457  09E0                     _SYSTEM_Initialize:	
  9458                           
  9459                           ;system.c: 40: PIN_MANAGER_Initialize();
  9460                           
  9461                           ;incstack = 0
  9462                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9463  09E0  3189  2103  3189   	fcall	_PIN_MANAGER_Initialize
  9464                           
  9465                           ;system.c: 41: OSCILLATOR_Initialize();
  9466  09E3  3197  271F  3189   	fcall	_OSCILLATOR_Initialize
  9467                           
  9468                           ;system.c: 42: FVRCON = 0x00;
  9469  09E6  0032               	movlb	18	; select bank18
  9470  09E7  018C               	clrf	12	;volatile
  9471                           
  9472                           ;system.c: 43: ADCC_Initialize();
  9473  09E8  3197  27CD  3189   	fcall	_ADCC_Initialize
  9474                           
  9475                           ;system.c: 44: PWM6_Initialize();
  9476  09EB  3197  273F  3189   	fcall	_PWM6_Initialize
  9477                           
  9478                           ;system.c: 45: TMR0_Initialize();
  9479  09EE  3197  275A  3189   	fcall	_TMR0_Initialize
  9480                           
  9481                           ;system.c: 46: TMR2_Initialize();
  9482  09F1  3197  2769  3189   	fcall	_TMR2_Initialize
  9483                           
  9484                           ;system.c: 47: LCD_Init(0X00);
  9485  09F4  3000               	movlw	0
  9486  09F5  318B  23B5  3189   	fcall	_LCD_Init
  9487                           
  9488                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
  9489  09F8  3041               	movlw	65
  9490  09F9  00F8               	movwf	??_SYSTEM_Initialize+1
  9491  09FA  30EE               	movlw	238
  9492  09FB  00F7               	movwf	??_SYSTEM_Initialize
  9493  09FC                     u3477:	
  9494  09FC  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9495  09FD  29FC               	goto	u3477
  9496  09FE  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9497  09FF  29FC               	goto	u3477
  9498  0A00  0000               	nop
  9499                           
  9500                           ;system.c: 49: LCD_Clear();
  9501  0A01  3197  2717  3189   	fcall	_LCD_Clear
  9502                           
  9503                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
  9504  0A04  3021               	movlw	33
  9505  0A05  00F8               	movwf	??_SYSTEM_Initialize+1
  9506  0A06  3076               	movlw	118
  9507  0A07  00F7               	movwf	??_SYSTEM_Initialize
  9508  0A08                     u3487:	
  9509  0A08  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9510  0A09  2A08               	goto	u3487
  9511  0A0A  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9512  0A0B  2A08               	goto	u3487
  9513  0A0C  0000               	nop
  9514                           
  9515                           ;system.c: 51: InitCustomChars();
  9516  0A0D  3188  2089  3189   	fcall	_InitCustomChars
  9517                           
  9518                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
  9519  0A10  3041               	movlw	65
  9520  0A11  00F8               	movwf	??_SYSTEM_Initialize+1
  9521  0A12  30EE               	movlw	238
  9522  0A13  00F7               	movwf	??_SYSTEM_Initialize
  9523  0A14                     u3497:	
  9524  0A14  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9525  0A15  2A14               	goto	u3497
  9526  0A16  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9527  0A17  2A14               	goto	u3497
  9528  0A18  0000               	nop
  9529                           
  9530                           ;system.c: 53: Init_PID();
  9531  0A19  3188  20D9         	fcall	_Init_PID
  9532  0A1B  0008               	return
  9533  0A1C                     __end_of_SYSTEM_Initialize:	
  9534                           
  9535                           	psect	text20
  9536  1769                     __ptext20:	
  9537 ;; *************** function _TMR2_Initialize *****************
  9538 ;; Defined at:
  9539 ;;		line 21 in file "timers.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;Total ram usage:        0 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_SYSTEM_Initialize
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           
  9567                           ;psect for function _TMR2_Initialize
  9568  1769                     _TMR2_Initialize:	
  9569                           
  9570                           ;timers.c: 23: T2CON = 0x7F;
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9574  1769  307F               	movlw	127
  9575  176A  0025               	movlb	5	; select bank5
  9576  176B  008E               	movwf	14	;volatile
  9577                           
  9578                           ;timers.c: 25: T2CLKCON = 0x01;
  9579  176C  3001               	movlw	1
  9580  176D  0090               	movwf	16	;volatile
  9581                           
  9582                           ;timers.c: 27: T2HLT = 0x00;
  9583  176E  018F               	clrf	15	;volatile
  9584                           
  9585                           ;timers.c: 29: T2RST = 0x00;
  9586  176F  0191               	clrf	17	;volatile
  9587                           
  9588                           ;timers.c: 31: T2PR = 0xFF;
  9589  1770  30FF               	movlw	255
  9590  1771  008D               	movwf	13	;volatile
  9591                           
  9592                           ;timers.c: 33: T2TMR = 0x00;
  9593  1772  018C               	clrf	12	;volatile
  9594                           
  9595                           ;timers.c: 35: PIR4bits.TMR2IF = 0;
  9596  1773  002E               	movlb	14	; select bank14
  9597  1774  1090               	bcf	16,1	;volatile
  9598                           
  9599                           ;timers.c: 37: T2CONbits.TMR2ON = 1;
  9600  1775  0025               	movlb	5	; select bank5
  9601  1776  178E               	bsf	14,7	;volatile
  9602  1777  0008               	return
  9603  1778                     __end_of_TMR2_Initialize:	
  9604                           
  9605                           	psect	text21
  9606  175A                     __ptext21:	
  9607 ;; *************** function _TMR0_Initialize *****************
  9608 ;; Defined at:
  9609 ;;		line 3 in file "timers.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_SYSTEM_Initialize
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _TMR0_Initialize
  9638  175A                     _TMR0_Initialize:	
  9639                           
  9640                           ;timers.c: 5: T0CON0 = 0x10;
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _TMR0_Initialize: [wreg]
  9644  175A  3010               	movlw	16
  9645  175B  0020               	movlb	0	; select bank0
  9646  175C  009E               	movwf	30	;volatile
  9647                           
  9648                           ;timers.c: 7: T0CON1 = 0x42;
  9649  175D  3042               	movlw	66
  9650  175E  009F               	movwf	31	;volatile
  9651                           
  9652                           ;timers.c: 9: TMR0H = 0x24;
  9653  175F  3024               	movlw	36
  9654  1760  009D               	movwf	29	;volatile
  9655                           
  9656                           ;timers.c: 11: TMR0L = 0x9F;
  9657  1761  309F               	movlw	159
  9658  1762  009C               	movwf	28	;volatile
  9659                           
  9660                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
  9661  1763  002E               	movlb	14	; select bank14
  9662  1764  1696               	bsf	22,5	;volatile
  9663                           
  9664                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
  9665  1765  128C               	bcf	12,5	;volatile
  9666                           
  9667                           ;timers.c: 17: T0CON0bits.T0EN = 1;
  9668  1766  0020               	movlb	0	; select bank0
  9669  1767  179E               	bsf	30,7	;volatile
  9670  1768  0008               	return
  9671  1769                     __end_of_TMR0_Initialize:	
  9672                           
  9673                           	psect	text22
  9674  173F                     __ptext22:	
  9675 ;; *************** function _PWM6_Initialize *****************
  9676 ;; Defined at:
  9677 ;;		line 4 in file "pwm6.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  1    wreg      void 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;Total ram usage:        0 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_SYSTEM_Initialize
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           
  9705                           ;psect for function _PWM6_Initialize
  9706  173F                     _PWM6_Initialize:	
  9707                           
  9708                           ;pwm6.c: 6: PWM6CON = 0x80;
  9709                           
  9710                           ;incstack = 0
  9711                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9712  173F  3080               	movlw	128
  9713  1740  0027               	movlb	7	; select bank7
  9714  1741  008E               	movwf	14	;volatile
  9715                           
  9716                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9717  1742  30FF               	movlw	255
  9718  1743  008D               	movwf	13	;volatile
  9719                           
  9720                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9721  1744  30C0               	movlw	192
  9722  1745  008C               	movwf	12	;volatile
  9723                           
  9724                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9725  1746  0024               	movlb	4	; select bank4
  9726  1747  081F               	movf	31,w	;volatile
  9727  1748  39F3               	andlw	-13
  9728  1749  3804               	iorlw	4
  9729  174A  009F               	movwf	31	;volatile
  9730  174B  0008               	return
  9731  174C                     __end_of_PWM6_Initialize:	
  9732                           
  9733                           	psect	text23
  9734  0903                     __ptext23:	
  9735 ;; *************** function _PIN_MANAGER_Initialize *****************
  9736 ;; Defined at:
  9737 ;;		line 5 in file "pin_manager.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;  state           1    0[COMMON] unsigned char 
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;Total ram usage:        1 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_SYSTEM_Initialize
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           
  9765                           ;psect for function _PIN_MANAGER_Initialize
  9766  0903                     _PIN_MANAGER_Initialize:	
  9767                           
  9768                           ;pin_manager.c: 7: LATA = 0x00;
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9772  0903  0020               	movlb	0	; select bank0
  9773  0904  0196               	clrf	22	;volatile
  9774                           
  9775                           ;pin_manager.c: 8: LATB = 0x0;
  9776  0905  0197               	clrf	23	;volatile
  9777                           
  9778                           ;pin_manager.c: 9: LATC = 0x0;
  9779  0906  0198               	clrf	24	;volatile
  9780                           
  9781                           ;pin_manager.c: 11: WPUA = 0x18;
  9782  0907  3018               	movlw	24
  9783  0908  003E               	movlb	30	; select bank30
  9784  0909  00B9               	movwf	57	;volatile
  9785                           
  9786                           ;pin_manager.c: 12: WPUB = 0x00;
  9787  090A  01C4               	clrf	68	;volatile
  9788                           
  9789                           ;pin_manager.c: 13: WPUC = 0x00;
  9790  090B  01CF               	clrf	79	;volatile
  9791                           
  9792                           ;pin_manager.c: 14: WPUE = 0x8;
  9793  090C  3008               	movlw	8
  9794  090D  00E5               	movwf	101	;volatile
  9795                           
  9796                           ;pin_manager.c: 16: TRISA = 0x1C;
  9797  090E  301C               	movlw	28
  9798  090F  0020               	movlb	0	; select bank0
  9799  0910  0091               	movwf	17	;volatile
  9800                           
  9801                           ;pin_manager.c: 17: TRISB = 0x00;
  9802  0911  0192               	clrf	18	;volatile
  9803                           
  9804                           ;pin_manager.c: 18: TRISC = 0x10;
  9805  0912  3010               	movlw	16
  9806  0913  0093               	movwf	19	;volatile
  9807                           
  9808                           ;pin_manager.c: 20: ANSELA = 0x04;
  9809  0914  3004               	movlw	4
  9810  0915  003E               	movlb	30	; select bank30
  9811  0916  00B8               	movwf	56	;volatile
  9812                           
  9813                           ;pin_manager.c: 21: ANSELB = 0x00;
  9814  0917  01C3               	clrf	67	;volatile
  9815                           
  9816                           ;pin_manager.c: 22: ANSELC = 0x00;
  9817  0918  01CE               	clrf	78	;volatile
  9818                           
  9819                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9820  0919  002E               	movlb	14	; select bank14
  9821  091A  1216               	bcf	22,4	;volatile
  9822                           
  9823                           ;pin_manager.c: 25: bool state = GIE;
  9824  091B  3000               	movlw	0
  9825  091C  1B8B               	btfsc	11,7	;volatile
  9826  091D  3001               	movlw	1
  9827  091E  00F0               	movwf	PIN_MANAGER_Initialize@state
  9828                           
  9829                           ;pin_manager.c: 26: GIE = 0;
  9830  091F  138B               	bcf	11,7	;volatile
  9831                           
  9832                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9833  0920  3055               	movlw	85
  9834  0921  003D               	movlb	29	; select bank29
  9835  0922  008F               	movwf	15	;volatile
  9836                           
  9837                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9838  0923  30AA               	movlw	170
  9839  0924  008F               	movwf	15	;volatile
  9840                           
  9841                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9842  0925  100F               	bcf	15,0	;volatile
  9843                           
  9844                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9845  0926  300E               	movlw	14
  9846  0927  003E               	movlb	30	; select bank30
  9847  0928  0091               	movwf	17	;volatile
  9848                           
  9849                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9850  0929  3055               	movlw	85
  9851  092A  003D               	movlb	29	; select bank29
  9852  092B  008F               	movwf	15	;volatile
  9853                           
  9854                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9855  092C  30AA               	movlw	170
  9856  092D  008F               	movwf	15	;volatile
  9857                           
  9858                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9859  092E  140F               	bsf	15,0	;volatile
  9860                           
  9861                           ;pin_manager.c: 39: GIE = state;
  9862  092F  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9863  0930  2933               	goto	u2610
  9864  0931  178B               	bsf	11,7	;volatile
  9865  0932  0008               	return
  9866  0933                     u2610:	
  9867  0933  138B               	bcf	11,7	;volatile
  9868  0934  0008               	return
  9869  0935                     __end_of_PIN_MANAGER_Initialize:	
  9870                           
  9871                           	psect	text24
  9872  171F                     __ptext24:	
  9873 ;; *************** function _OSCILLATOR_Initialize *****************
  9874 ;; Defined at:
  9875 ;;		line 56 in file "system.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;Total ram usage:        0 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_SYSTEM_Initialize
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function _OSCILLATOR_Initialize
  9904  171F                     _OSCILLATOR_Initialize:	
  9905                           
  9906                           ;system.c: 58: OSCCON1 = 0x60;
  9907                           
  9908                           ;incstack = 0
  9909                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9910  171F  3060               	movlw	96
  9911  1720  0031               	movlb	17	; select bank17
  9912  1721  008D               	movwf	13	;volatile
  9913                           
  9914                           ;system.c: 60: OSCCON3 = 0x00;
  9915  1722  018F               	clrf	15	;volatile
  9916                           
  9917                           ;system.c: 62: OSCEN = 0x00;
  9918  1723  0191               	clrf	17	;volatile
  9919                           
  9920                           ;system.c: 64: OSCFRQ = 0x00;
  9921  1724  0193               	clrf	19	;volatile
  9922                           
  9923                           ;system.c: 66: OSCTUNE = 0x00;
  9924  1725  0192               	clrf	18	;volatile
  9925  1726  0008               	return
  9926  1727                     __end_of_OSCILLATOR_Initialize:	
  9927                           
  9928                           	psect	text25
  9929  0BB5                     __ptext25:	
  9930 ;; *************** function _LCD_Init *****************
  9931 ;; Defined at:
  9932 ;;		line 154 in file "lcd.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  style           1    wreg     unsigned char 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  style           1    5[COMMON] unsigned char 
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2, status,0, pclath, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;Total ram usage:        3 bytes
  9951 ;; Hardware stack levels used:    1
  9952 ;; Hardware stack levels required when called:    2
  9953 ;; This function calls:
  9954 ;;		_LCD_Cmd
  9955 ;;		_LCD_Port
  9956 ;; This function is called by:
  9957 ;;		_SYSTEM_Initialize
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function _LCD_Init
  9963  0BB5                     _LCD_Init:	
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9967                           ;LCD_Init@style stored from wreg
  9968  0BB5  00F5               	movwf	LCD_Init@style
  9969                           
  9970                           ;lcd.c: 156: LCD_Port(0x00);
  9971  0BB6  3000               	movlw	0
  9972  0BB7  3197  279D  318B   	fcall	_LCD_Port
  9973                           
  9974                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9975  0BBA  3021               	movlw	33
  9976  0BBB  00F4               	movwf	??_LCD_Init+1
  9977  0BBC  3076               	movlw	118
  9978  0BBD  00F3               	movwf	??_LCD_Init
  9979  0BBE                     u3507:	
  9980  0BBE  0BF3               	decfsz	??_LCD_Init,f
  9981  0BBF  2BBE               	goto	u3507
  9982  0BC0  0BF4               	decfsz	??_LCD_Init+1,f
  9983  0BC1  2BBE               	goto	u3507
  9984  0BC2  0000               	nop
  9985                           
  9986                           ;lcd.c: 160: LCD_Cmd(0x03);
  9987  0BC3  3003               	movlw	3
  9988  0BC4  3197  2778  318B   	fcall	_LCD_Cmd
  9989                           
  9990                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9991  0BC7  3004               	movlw	4
  9992  0BC8  00F4               	movwf	??_LCD_Init+1
  9993  0BC9  303D               	movlw	61
  9994  0BCA  00F3               	movwf	??_LCD_Init
  9995  0BCB                     u3517:	
  9996  0BCB  0BF3               	decfsz	??_LCD_Init,f
  9997  0BCC  2BCB               	goto	u3517
  9998  0BCD  0BF4               	decfsz	??_LCD_Init+1,f
  9999  0BCE  2BCB               	goto	u3517
 10000  0BCF  3200               	nop2
 10001                           
 10002                           ;lcd.c: 164: LCD_Cmd(0x03);
 10003  0BD0  3003               	movlw	3
 10004  0BD1  3197  2778  318B   	fcall	_LCD_Cmd
 10005                           
 10006                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10007  0BD4  3009               	movlw	9
 10008  0BD5  00F3               	movwf	??_LCD_Init
 10009  0BD6                     u3527:	
 10010  0BD6  0BF3               	decfsz	??_LCD_Init,f
 10011  0BD7  2BD6               	goto	u3527
 10012  0BD8  3200               	nop2	;nop
 10013                           
 10014                           ;lcd.c: 168: LCD_Cmd(0x03);
 10015  0BD9  3003               	movlw	3
 10016  0BDA  3197  2778  318B   	fcall	_LCD_Cmd
 10017                           
 10018                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10019  0BDD  3009               	movlw	9
 10020  0BDE  00F3               	movwf	??_LCD_Init
 10021  0BDF                     u3537:	
 10022  0BDF  0BF3               	decfsz	??_LCD_Init,f
 10023  0BE0  2BDF               	goto	u3537
 10024  0BE1  3200               	nop2	;nop
 10025                           
 10026                           ;lcd.c: 172: LCD_Cmd(0x02);
 10027  0BE2  3002               	movlw	2
 10028  0BE3  3197  2778  318B   	fcall	_LCD_Cmd
 10029                           
 10030                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10031  0BE6  3009               	movlw	9
 10032  0BE7  00F3               	movwf	??_LCD_Init
 10033  0BE8                     u3547:	
 10034  0BE8  0BF3               	decfsz	??_LCD_Init,f
 10035  0BE9  2BE8               	goto	u3547
 10036  0BEA  3200               	nop2	;nop
 10037                           
 10038                           ;lcd.c: 176: LCD_Cmd(0x2);
 10039  0BEB  3002               	movlw	2
 10040  0BEC  3197  2778  318B   	fcall	_LCD_Cmd
 10041                           
 10042                           ;lcd.c: 178: LCD_Cmd(0x8);
 10043  0BEF  3008               	movlw	8
 10044  0BF0  3197  2778  318B   	fcall	_LCD_Cmd
 10045                           
 10046                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10047  0BF3  3009               	movlw	9
 10048  0BF4  00F3               	movwf	??_LCD_Init
 10049  0BF5                     u3557:	
 10050  0BF5  0BF3               	decfsz	??_LCD_Init,f
 10051  0BF6  2BF5               	goto	u3557
 10052  0BF7  3200               	nop2	;nop
 10053                           
 10054                           ;lcd.c: 182: LCD_Cmd(0x0);
 10055  0BF8  3000               	movlw	0
 10056  0BF9  3197  2778  318B   	fcall	_LCD_Cmd
 10057                           
 10058                           ;lcd.c: 184: LCD_Cmd(0x8);
 10059  0BFC  3008               	movlw	8
 10060  0BFD  3197  2778  318B   	fcall	_LCD_Cmd
 10061                           
 10062                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10063  0C00  3009               	movlw	9
 10064  0C01  00F3               	movwf	??_LCD_Init
 10065  0C02                     u3567:	
 10066  0C02  0BF3               	decfsz	??_LCD_Init,f
 10067  0C03  2C02               	goto	u3567
 10068  0C04  3200               	nop2	;nop
 10069                           
 10070                           ;lcd.c: 188: LCD_Cmd(0x0);
 10071  0C05  3000               	movlw	0
 10072  0C06  3197  2778  318B   	fcall	_LCD_Cmd
 10073                           
 10074                           ;lcd.c: 190: LCD_Cmd(0x1);
 10075  0C09  3001               	movlw	1
 10076  0C0A  3197  2778  318B   	fcall	_LCD_Cmd
 10077                           
 10078                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10079  0C0D  30F9               	movlw	249
 10080  0C0E  00F3               	movwf	??_LCD_Init
 10081  0C0F                     u3577:	
 10082  0C0F  3200               	nop2
 10083  0C10  0BF3               	decfsz	??_LCD_Init,f
 10084  0C11  2C0F               	goto	u3577
 10085  0C12  3200               	nop2	;nop
 10086  0C13  3200               	nop2	;nop
 10087                           
 10088                           ;lcd.c: 194: LCD_Cmd(0x0);
 10089  0C14  3000               	movlw	0
 10090  0C15  3197  2778  318B   	fcall	_LCD_Cmd
 10091                           
 10092                           ;lcd.c: 196: LCD_Cmd(0x6);
 10093  0C18  3006               	movlw	6
 10094  0C19  3197  2778  318B   	fcall	_LCD_Cmd
 10095                           
 10096                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10097  0C1C  3009               	movlw	9
 10098  0C1D  00F3               	movwf	??_LCD_Init
 10099  0C1E                     u3587:	
 10100  0C1E  0BF3               	decfsz	??_LCD_Init,f
 10101  0C1F  2C1E               	goto	u3587
 10102  0C20  3200               	nop2	;nop
 10103                           
 10104                           ;lcd.c: 200: LCD_Cmd(0x0);
 10105  0C21  3000               	movlw	0
 10106  0C22  3197  2778  318B   	fcall	_LCD_Cmd
 10107                           
 10108                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10109  0C25  0875               	movf	LCD_Init@style,w
 10110  0C26  380C               	iorlw	12
 10111  0C27  3197  2778  318B   	fcall	_LCD_Cmd
 10112                           
 10113                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10114  0C2A  3009               	movlw	9
 10115  0C2B  00F3               	movwf	??_LCD_Init
 10116  0C2C                     u3597:	
 10117  0C2C  0BF3               	decfsz	??_LCD_Init,f
 10118  0C2D  2C2C               	goto	u3597
 10119  0C2E  3200               	nop2	;nop
 10120  0C2F  0008               	return
 10121  0C30                     __end_of_LCD_Init:	
 10122                           
 10123                           	psect	text26
 10124  1717                     __ptext26:	
 10125 ;; *************** function _LCD_Clear *****************
 10126 ;; Defined at:
 10127 ;;		line 75 in file "lcd.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;		None
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;		None
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0, pclath, cstack
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;Total ram usage:        0 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    2
 10148 ;; This function calls:
 10149 ;;		_LCD_Cmd
 10150 ;; This function is called by:
 10151 ;;		_SYSTEM_Initialize
 10152 ;;		_tempSetpoint
 10153 ;;		_readButtons
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _LCD_Clear
 10159  1717                     _LCD_Clear:	
 10160                           
 10161                           ;lcd.c: 77: LCD_Cmd(0);
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10165  1717  3000               	movlw	0
 10166  1718  3197  2778  3197   	fcall	_LCD_Cmd
 10167                           
 10168                           ;lcd.c: 78: LCD_Cmd(1);
 10169  171B  3001               	movlw	1
 10170  171C  3197  2778         	fcall	_LCD_Cmd
 10171  171E  0008               	return
 10172  171F                     __end_of_LCD_Clear:	
 10173                           
 10174                           	psect	text27
 10175  08D9                     __ptext27:	
 10176 ;; *************** function _Init_PID *****************
 10177 ;; Defined at:
 10178 ;;		line 11 in file "PID_Lib.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;		None
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, status,2
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;Total ram usage:        0 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_SYSTEM_Initialize
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           
 10206                           ;psect for function _Init_PID
 10207  08D9                     _Init_PID:	
 10208                           
 10209                           ;PID_Lib.c: 13: PID_Kp = 5;
 10210                           
 10211                           ;incstack = 0
 10212                           ; Regs used in _Init_PID: [wreg+status,2]
 10213  08D9  3000               	movlw	0
 10214  08DA  0021               	movlb	1	; select bank1
 10215  08DB  00D6               	movwf	_PID_Kp^(0+128)
 10216  08DC  30A0               	movlw	160
 10217  08DD  00D7               	movwf	(_PID_Kp+1)^(0+128)
 10218  08DE  3040               	movlw	64
 10219  08DF  00D8               	movwf	(_PID_Kp+2)^(0+128)
 10220                           
 10221                           ;PID_Lib.c: 14: PID_Ki = 15;
 10222  08E0  3000               	movlw	0
 10223  08E1  00D3               	movwf	_PID_Ki^(0+128)
 10224  08E2  3070               	movlw	112
 10225  08E3  00D4               	movwf	(_PID_Ki+1)^(0+128)
 10226  08E4  3041               	movlw	65
 10227  08E5  00D5               	movwf	(_PID_Ki+2)^(0+128)
 10228                           
 10229                           ;PID_Lib.c: 15: PID_Kd = 300;
 10230  08E6  3000               	movlw	0
 10231  08E7  00D0               	movwf	_PID_Kd^(0+128)
 10232  08E8  3096               	movlw	150
 10233  08E9  00D1               	movwf	(_PID_Kd+1)^(0+128)
 10234  08EA  3043               	movlw	67
 10235  08EB  00D2               	movwf	(_PID_Kd+2)^(0+128)
 10236                           
 10237                           ;PID_Lib.c: 16: PID_MinOutput = 0;
 10238  08EC  0020               	movlb	0	; select bank0
 10239  08ED  01E8               	clrf	_PID_MinOutput
 10240  08EE  01E9               	clrf	_PID_MinOutput+1
 10241                           
 10242                           ;PID_Lib.c: 17: PID_MaxOutput = 1023;
 10243  08EF  30FF               	movlw	255
 10244  08F0  00ED               	movwf	_PID_MaxOutput
 10245  08F1  3003               	movlw	3
 10246  08F2  00EE               	movwf	_PID_MaxOutput+1
 10247                           
 10248                           ;PID_Lib.c: 18: PID_Integrated = 0;
 10249  08F3  3000               	movlw	0
 10250  08F4  0021               	movlb	1	; select bank1
 10251  08F5  00CD               	movwf	_PID_Integrated^(0+128)
 10252  08F6  3000               	movlw	0
 10253  08F7  00CE               	movwf	(_PID_Integrated+1)^(0+128)
 10254  08F8  3000               	movlw	0
 10255  08F9  00CF               	movwf	(_PID_Integrated+2)^(0+128)
 10256                           
 10257                           ;PID_Lib.c: 19: PID_Prev_Input = 0;
 10258  08FA  3000               	movlw	0
 10259  08FB  00D9               	movwf	_PID_Prev_Input^(0+128)
 10260  08FC  3000               	movlw	0
 10261  08FD  00DA               	movwf	(_PID_Prev_Input+1)^(0+128)
 10262  08FE  3000               	movlw	0
 10263  08FF  00DB               	movwf	(_PID_Prev_Input+2)^(0+128)
 10264                           
 10265                           ;PID_Lib.c: 20: PID_First_Time = 1;
 10266  0900  01E7               	clrf	_PID_First_Time^(0+128)
 10267  0901  0AE7               	incf	_PID_First_Time^(0+128),f
 10268  0902  0008               	return
 10269  0903                     __end_of_Init_PID:	
 10270                           
 10271                           	psect	text28
 10272  0889                     __ptext28:	
 10273 ;; *************** function _InitCustomChars *****************
 10274 ;; Defined at:
 10275 ;;		line 29 in file "lcd.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;		None
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  i               1    6[COMMON] unsigned char 
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;Total ram usage:        2 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:    2
 10296 ;; This function calls:
 10297 ;;		_LCD_Cmd
 10298 ;;		_LCD_Write_Char
 10299 ;; This function is called by:
 10300 ;;		_SYSTEM_Initialize
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           
 10305                           ;psect for function _InitCustomChars
 10306  0889                     _InitCustomChars:	
 10307                           
 10308                           ;lcd.c: 31: uint8_t i;
 10309                           ;lcd.c: 32: LCD_Cmd(0x04);
 10310                           
 10311                           ;incstack = 0
 10312                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10313  0889  3004               	movlw	4
 10314  088A  3197  2778  3188   	fcall	_LCD_Cmd
 10315                           
 10316                           ;lcd.c: 33: LCD_Cmd(0x00);
 10317  088D  3000               	movlw	0
 10318  088E  3197  2778  3188   	fcall	_LCD_Cmd
 10319                           
 10320                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10321  0891  01F6               	clrf	InitCustomChars@i
 10322  0892  3018               	movlw	24
 10323  0893  0276               	subwf	InitCustomChars@i,w
 10324  0894  1803               	btfsc	3,0
 10325  0895  28A7               	goto	l2583
 10326  0896                     l2577:	
 10327                           
 10328                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10329  0896  0876               	movf	InitCustomChars@i,w
 10330  0897  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10331  0898  0086               	movwf	6
 10332  0899  3001               	movlw	1	; select bank2/3
 10333  089A  0087               	movwf	7
 10334  089B  0801               	movf	1,w
 10335  089C  3188  20AF  3188   	fcall	_LCD_Write_Char
 10336  089F  3001               	movlw	1
 10337  08A0  00F5               	movwf	??_InitCustomChars
 10338  08A1  0875               	movf	??_InitCustomChars,w
 10339  08A2  07F6               	addwf	InitCustomChars@i,f
 10340  08A3  3018               	movlw	24
 10341  08A4  0276               	subwf	InitCustomChars@i,w
 10342  08A5  1C03               	skipc
 10343  08A6  2896               	goto	l2577
 10344  08A7                     l2583:	
 10345                           
 10346                           ;lcd.c: 36: LCD_Cmd(0);
 10347  08A7  3000               	movlw	0
 10348  08A8  3197  2778  3188   	fcall	_LCD_Cmd
 10349                           
 10350                           ;lcd.c: 37: LCD_Cmd(2);
 10351  08AB  3002               	movlw	2
 10352  08AC  3197  2778         	fcall	_LCD_Cmd
 10353  08AE  0008               	return
 10354  08AF                     __end_of_InitCustomChars:	
 10355                           
 10356                           	psect	text29
 10357  08AF                     __ptext29:	
 10358 ;; *************** function _LCD_Write_Char *****************
 10359 ;; Defined at:
 10360 ;;		line 223 in file "lcd.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;  a               1    wreg     const unsigned char 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;  a               1    4[COMMON] const unsigned char 
 10365 ;;  y               1    3[COMMON] unsigned char 
 10366 ;;  temp            1    2[COMMON] unsigned char 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0, pclath, cstack
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;Total ram usage:        4 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:    1
 10383 ;; This function calls:
 10384 ;;		_LCD_Port
 10385 ;; This function is called by:
 10386 ;;		_InitCustomChars
 10387 ;;		_LCD_Write_String
 10388 ;;		_LCD_Write_Int
 10389 ;;		_tempSetpoint
 10390 ;;		_readButtons
 10391 ;;		_main
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           
 10396                           ;psect for function _LCD_Write_Char
 10397  08AF                     _LCD_Write_Char:	
 10398                           
 10399                           ;incstack = 0
 10400                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10401                           ;LCD_Write_Char@a stored from wreg
 10402  08AF  00F4               	movwf	LCD_Write_Char@a
 10403                           
 10404                           ;lcd.c: 225: char temp,y;
 10405                           ;lcd.c: 226: temp = a&0x0F;
 10406  08B0  0874               	movf	LCD_Write_Char@a,w
 10407  08B1  390F               	andlw	15
 10408  08B2  00F1               	movwf	??_LCD_Write_Char
 10409  08B3  0871               	movf	??_LCD_Write_Char,w
 10410  08B4  00F2               	movwf	LCD_Write_Char@temp
 10411                           
 10412                           ;lcd.c: 227: y = a&0xF0;
 10413  08B5  0874               	movf	LCD_Write_Char@a,w
 10414  08B6  39F0               	andlw	240
 10415  08B7  00F1               	movwf	??_LCD_Write_Char
 10416  08B8  0871               	movf	??_LCD_Write_Char,w
 10417  08B9  00F3               	movwf	LCD_Write_Char@y
 10418                           
 10419                           ;lcd.c: 228: RB0 = 1;
 10420  08BA  0020               	movlb	0	; select bank0
 10421  08BB  140D               	bsf	13,0	;volatile
 10422                           
 10423                           ;lcd.c: 229: LCD_Port(y>>4);
 10424  08BC  0873               	movf	LCD_Write_Char@y,w
 10425  08BD  00F1               	movwf	??_LCD_Write_Char
 10426  08BE  3004               	movlw	4
 10427  08BF                     u1765:	
 10428  08BF  36F1               	lsrf	??_LCD_Write_Char,f
 10429  08C0  0B89               	decfsz	9,f
 10430  08C1  28BF               	goto	u1765
 10431  08C2  0871               	movf	??_LCD_Write_Char,w
 10432  08C3  3197  279D  3188   	fcall	_LCD_Port
 10433                           
 10434                           ;lcd.c: 230: RB1 = 1;
 10435  08C6  0020               	movlb	0	; select bank0
 10436  08C7  148D               	bsf	13,1	;volatile
 10437                           
 10438                           ;lcd.c: 231: RB1 = 0;
 10439  08C8  108D               	bcf	13,1	;volatile
 10440                           
 10441                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10442  08C9  3003               	movlw	3
 10443  08CA  00F1               	movwf	??_LCD_Write_Char
 10444  08CB                     u3607:	
 10445  08CB  0BF1               	decfsz	??_LCD_Write_Char,f
 10446  08CC  28CB               	goto	u3607
 10447                           
 10448                           ;lcd.c: 233: LCD_Port(temp);
 10449  08CD  0872               	movf	LCD_Write_Char@temp,w
 10450  08CE  3197  279D  3188   	fcall	_LCD_Port
 10451                           
 10452                           ;lcd.c: 234: RB1 = 1;
 10453  08D1  0020               	movlb	0	; select bank0
 10454  08D2  148D               	bsf	13,1	;volatile
 10455                           
 10456                           ;lcd.c: 235: RB1 = 0;
 10457  08D3  108D               	bcf	13,1	;volatile
 10458                           
 10459                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10460  08D4  3003               	movlw	3
 10461  08D5  00F1               	movwf	??_LCD_Write_Char
 10462  08D6                     u3617:	
 10463  08D6  0BF1               	decfsz	??_LCD_Write_Char,f
 10464  08D7  28D6               	goto	u3617
 10465  08D8  0008               	return
 10466  08D9                     __end_of_LCD_Write_Char:	
 10467                           
 10468                           	psect	text30
 10469  1778                     __ptext30:	
 10470 ;; *************** function _LCD_Cmd *****************
 10471 ;; Defined at:
 10472 ;;		line 65 in file "lcd.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  a               1    wreg     unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  a               1    2[COMMON] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0, pclath, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;Total ram usage:        2 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    1
 10493 ;; This function calls:
 10494 ;;		_LCD_Port
 10495 ;; This function is called by:
 10496 ;;		_InitCustomChars
 10497 ;;		_LCD_Clear
 10498 ;;		_LCD_Set_Cursor
 10499 ;;		_LCD_Init
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           
 10504                           ;psect for function _LCD_Cmd
 10505  1778                     _LCD_Cmd:	
 10506                           
 10507                           ;incstack = 0
 10508                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10509                           ;LCD_Cmd@a stored from wreg
 10510  1778  00F2               	movwf	LCD_Cmd@a
 10511                           
 10512                           ;lcd.c: 67: RB0 = 0;
 10513  1779  0020               	movlb	0	; select bank0
 10514  177A  100D               	bcf	13,0	;volatile
 10515                           
 10516                           ;lcd.c: 68: LCD_Port(a);
 10517  177B  0872               	movf	LCD_Cmd@a,w
 10518  177C  3197  279D  3197   	fcall	_LCD_Port
 10519                           
 10520                           ;lcd.c: 69: RB1 = 1;
 10521  177F  0020               	movlb	0	; select bank0
 10522  1780  148D               	bsf	13,1	;volatile
 10523                           
 10524                           ;lcd.c: 70: RB1 = 0;
 10525  1781  108D               	bcf	13,1	;volatile
 10526                           
 10527                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10528  1782  30F9               	movlw	249
 10529  1783  00F1               	movwf	??_LCD_Cmd
 10530  1784                     u3627:	
 10531  1784  0000               	nop
 10532  1785  0BF1               	decfsz	??_LCD_Cmd,f
 10533  1786  2F84               	goto	u3627
 10534  1787  3200               	nop2	;nop
 10535  1788  0000               	nop
 10536  1789  0008               	return
 10537  178A                     __end_of_LCD_Cmd:	
 10538                           
 10539                           	psect	text31
 10540  179D                     __ptext31:	
 10541 ;; *************** function _LCD_Port *****************
 10542 ;; Defined at:
 10543 ;;		line 41 in file "lcd.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  a               1    wreg     unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  a               1    0[COMMON] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;Total ram usage:        1 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_LCD_Cmd
 10567 ;;		_LCD_Init
 10568 ;;		_LCD_Write_Char
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           
 10573                           ;psect for function _LCD_Port
 10574  179D                     _LCD_Port:	
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _LCD_Port: [wreg]
 10578                           ;LCD_Port@a stored from wreg
 10579  179D  00F0               	movwf	LCD_Port@a
 10580                           
 10581                           ;lcd.c: 43: if(a & 1)
 10582  179E  1C70               	btfss	LCD_Port@a,0
 10583  179F  2FA3               	goto	l107
 10584                           
 10585                           ;lcd.c: 44: RB2 = 1;
 10586  17A0  0020               	movlb	0	; select bank0
 10587  17A1  150D               	bsf	13,2	;volatile
 10588  17A2  2FA5               	goto	l2061
 10589  17A3                     l107:	
 10590                           
 10591                           ;lcd.c: 45: else
 10592                           ;lcd.c: 46: RB2 = 0;
 10593  17A3  0020               	movlb	0	; select bank0
 10594  17A4  110D               	bcf	13,2	;volatile
 10595  17A5                     l2061:	
 10596                           
 10597                           ;lcd.c: 48: if(a & 2)
 10598  17A5  1CF0               	btfss	LCD_Port@a,1
 10599  17A6  2FA9               	goto	l109
 10600                           
 10601                           ;lcd.c: 49: RB3 = 1;
 10602  17A7  158D               	bsf	13,3	;volatile
 10603  17A8  2FAA               	goto	l2065
 10604  17A9                     l109:	
 10605                           
 10606                           ;lcd.c: 50: else
 10607                           ;lcd.c: 51: RB3 = 0;
 10608  17A9  118D               	bcf	13,3	;volatile
 10609  17AA                     l2065:	
 10610                           
 10611                           ;lcd.c: 53: if(a & 4)
 10612  17AA  1D70               	btfss	LCD_Port@a,2
 10613  17AB  2FAE               	goto	l111
 10614                           
 10615                           ;lcd.c: 54: RB4 = 1;
 10616  17AC  160D               	bsf	13,4	;volatile
 10617  17AD  2FAF               	goto	l2069
 10618  17AE                     l111:	
 10619                           
 10620                           ;lcd.c: 55: else
 10621                           ;lcd.c: 56: RB4 = 0;
 10622  17AE  120D               	bcf	13,4	;volatile
 10623  17AF                     l2069:	
 10624                           
 10625                           ;lcd.c: 58: if(a & 8)
 10626  17AF  1DF0               	btfss	LCD_Port@a,3
 10627  17B0  2FB3               	goto	l113
 10628                           
 10629                           ;lcd.c: 59: RB5 = 1;
 10630  17B1  168D               	bsf	13,5	;volatile
 10631  17B2  0008               	return
 10632  17B3                     l113:	
 10633                           
 10634                           ;lcd.c: 60: else
 10635                           ;lcd.c: 61: RB5 = 0;
 10636  17B3  128D               	bcf	13,5	;volatile
 10637  17B4  0008               	return
 10638  17B5                     __end_of_LCD_Port:	
 10639                           
 10640                           	psect	text32
 10641  17CD                     __ptext32:	
 10642 ;; *************** function _ADCC_Initialize *****************
 10643 ;; Defined at:
 10644 ;;		line 5 in file "adcc.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg, status,2
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;Total ram usage:        0 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_SYSTEM_Initialize
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           
 10672                           ;psect for function _ADCC_Initialize
 10673  17CD                     _ADCC_Initialize:	
 10674                           
 10675                           ;adcc.c: 8: ADCON1 = 0x00;
 10676                           
 10677                           ;incstack = 0
 10678                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10679  17CD  0021               	movlb	1	; select bank1
 10680  17CE  0194               	clrf	20	;volatile
 10681                           
 10682                           ;adcc.c: 10: ADCON2 = 0x00;
 10683  17CF  0195               	clrf	21	;volatile
 10684                           
 10685                           ;adcc.c: 12: ADCON3 = 0x00;
 10686  17D0  0196               	clrf	22	;volatile
 10687                           
 10688                           ;adcc.c: 14: ADACT = 0x00;
 10689  17D1  0199               	clrf	25	;volatile
 10690                           
 10691                           ;adcc.c: 16: ADSTAT = 0x00;
 10692  17D2  0197               	clrf	23	;volatile
 10693                           
 10694                           ;adcc.c: 18: ADCLK = 0x0F;
 10695  17D3  300F               	movlw	15
 10696  17D4  0098               	movwf	24	;volatile
 10697                           
 10698                           ;adcc.c: 21: ADREF = 0x00;
 10699  17D5  019A               	clrf	26	;volatile
 10700                           
 10701                           ;adcc.c: 23: ADCAP = 0x00;
 10702  17D6  019B               	clrf	27	;volatile
 10703                           
 10704                           ;adcc.c: 25: ADPRE = 0x00;
 10705  17D7  019C               	clrf	28	;volatile
 10706                           
 10707                           ;adcc.c: 27: ADACQ = 0x00;
 10708  17D8  019D               	clrf	29	;volatile
 10709                           
 10710                           ;adcc.c: 29: ADPCH = 0x00;
 10711  17D9  019E               	clrf	30	;volatile
 10712                           
 10713                           ;adcc.c: 31: ADRPT = 0x00;
 10714  17DA  0022               	movlb	2	; select bank2
 10715  17DB  018D               	clrf	13	;volatile
 10716                           
 10717                           ;adcc.c: 33: ADLTHL = 0x00;
 10718  17DC  018E               	clrf	14	;volatile
 10719                           
 10720                           ;adcc.c: 35: ADLTHH = 0x00;
 10721  17DD  018F               	clrf	15	;volatile
 10722                           
 10723                           ;adcc.c: 37: ADUTHL = 0x00;
 10724  17DE  0190               	clrf	16	;volatile
 10725                           
 10726                           ;adcc.c: 39: ADUTHH = 0x00;
 10727  17DF  0191               	clrf	17	;volatile
 10728                           
 10729                           ;adcc.c: 41: ADSTPTL = 0x00;
 10730  17E0  0192               	clrf	18	;volatile
 10731                           
 10732                           ;adcc.c: 43: ADSTPTH = 0x00;
 10733  17E1  0193               	clrf	19	;volatile
 10734                           
 10735                           ;adcc.c: 46: ADCON0 = 0x84;
 10736  17E2  3084               	movlw	132
 10737  17E3  0021               	movlb	1	; select bank1
 10738  17E4  0093               	movwf	19	;volatile
 10739  17E5  0008               	return
 10740  17E6                     __end_of_ADCC_Initialize:	
 10741                           
 10742                           	psect	text33
 10743  0800                     __ptext33:	
 10744 ;; *************** function _PWM6_LoadDutyValue *****************
 10745 ;; Defined at:
 10746 ;;		line 15 in file "pwm6.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  dutyValue       2    0[COMMON] unsigned int 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        4 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_main
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           
 10774                           ;psect for function _PWM6_LoadDutyValue
 10775  0800                     _PWM6_LoadDutyValue:	
 10776                           
 10777                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10778                           
 10779                           ;incstack = 0
 10780                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10781  0800  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10782  0801  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10783  0802  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10784  0803  00F2               	movwf	??_PWM6_LoadDutyValue
 10785  0804  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10786  0805  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10787  0806  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10788  0807  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10789  0808  0872               	movf	??_PWM6_LoadDutyValue,w
 10790  0809  0027               	movlb	7	; select bank7
 10791  080A  008D               	movwf	13	;volatile
 10792                           
 10793                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10794  080B  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10795  080C  3903               	andlw	3
 10796  080D  00F2               	movwf	??_PWM6_LoadDutyValue
 10797  080E  3005               	movlw	5
 10798  080F                     u2805:	
 10799  080F  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10800  0810  3EFF               	addlw	-1
 10801  0811  1D03               	skipz
 10802  0812  280F               	goto	u2805
 10803  0813  3572               	lslf	??_PWM6_LoadDutyValue,w
 10804  0814  008C               	movwf	12	;volatile
 10805  0815  0008               	return
 10806  0816                     __end_of_PWM6_LoadDutyValue:	
 10807                           
 10808                           	psect	text34
 10809  024B                     __ptext34:	
 10810 ;; *************** function _PID_Calculate *****************
 10811 ;; Defined at:
 10812 ;;		line 24 in file "PID_Lib.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  setpoint        2   38[BANK0 ] const int 
 10815 ;;  temp            3   40[BANK0 ] float 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  Result          3   55[BANK0 ] float 
 10818 ;;  Err             3   52[BANK0 ] float 
 10819 ;;  ErrValue        3   49[BANK0 ] float 
 10820 ;;  DerivativeVa    3   43[BANK0 ] float 
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  3   38[BANK0 ] float 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0, pclath, cstack
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10830 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;Total ram usage:       20 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; Hardware stack levels required when called:    2
 10837 ;; This function calls:
 10838 ;;		___awtoft
 10839 ;;		___ftadd
 10840 ;;		___ftge
 10841 ;;		___ftmul
 10842 ;;		___ftneg
 10843 ;; This function is called by:
 10844 ;;		_main
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           
 10849                           ;psect for function _PID_Calculate
 10850  024B                     _PID_Calculate:	
 10851                           
 10852                           ;PID_Lib.c: 26: float Err, ErrValue, DerivativeValue, Result;
 10853                           ;PID_Lib.c: 28: Err = setpoint - temp;
 10854                           
 10855                           ;incstack = 0
 10856                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10857  024B  0020               	movlb	0	; select bank0
 10858  024C  0848               	movf	PID_Calculate@temp,w
 10859  024D  00F0               	movwf	___ftneg@f1
 10860  024E  0849               	movf	PID_Calculate@temp+1,w
 10861  024F  00F1               	movwf	___ftneg@f1+1
 10862  0250  084A               	movf	PID_Calculate@temp+2,w
 10863  0251  00F2               	movwf	___ftneg@f1+2
 10864  0252  3197  270F  3182   	fcall	___ftneg
 10865  0255  0870               	movf	?___ftneg,w
 10866  0256  0020               	movlb	0	; select bank0
 10867  0257  00B0               	movwf	___ftadd@f1
 10868  0258  0871               	movf	?___ftneg+1,w
 10869  0259  00B1               	movwf	___ftadd@f1+1
 10870  025A  0872               	movf	?___ftneg+2,w
 10871  025B  00B2               	movwf	___ftadd@f1+2
 10872  025C  0847               	movf	PID_Calculate@setpoint+1,w
 10873  025D  00F9               	movwf	___awtoft@c+1
 10874  025E  0846               	movf	PID_Calculate@setpoint,w
 10875  025F  00F8               	movwf	___awtoft@c
 10876  0260  3188  2069  3182   	fcall	___awtoft
 10877  0263  0878               	movf	?___awtoft,w
 10878  0264  0020               	movlb	0	; select bank0
 10879  0265  00B3               	movwf	___ftadd@f2
 10880  0266  0879               	movf	?___awtoft+1,w
 10881  0267  00B4               	movwf	___ftadd@f2+1
 10882  0268  087A               	movf	?___awtoft+2,w
 10883  0269  00B5               	movwf	___ftadd@f2+2
 10884  026A  3181  2155  3182   	fcall	___ftadd
 10885  026D  0020               	movlb	0	; select bank0
 10886  026E  0830               	movf	?___ftadd,w
 10887  026F  00D4               	movwf	PID_Calculate@Err
 10888  0270  0831               	movf	?___ftadd+1,w
 10889  0271  00D5               	movwf	PID_Calculate@Err+1
 10890  0272  0832               	movf	?___ftadd+2,w
 10891  0273  00D6               	movwf	PID_Calculate@Err+2
 10892                           
 10893                           ;PID_Lib.c: 30: ErrValue = Err * PID_Kp;
 10894  0274  0021               	movlb	1	; select bank1
 10895  0275  0856               	movf	_PID_Kp^(0+128),w
 10896  0276  0020               	movlb	0	; select bank0
 10897  0277  00A0               	movwf	___ftmul@f1
 10898  0278  0021               	movlb	1	; select bank1
 10899  0279  0857               	movf	(_PID_Kp+1)^(0+128),w
 10900  027A  0020               	movlb	0	; select bank0
 10901  027B  00A1               	movwf	___ftmul@f1+1
 10902  027C  0021               	movlb	1	; select bank1
 10903  027D  0858               	movf	(_PID_Kp+2)^(0+128),w
 10904  027E  0020               	movlb	0	; select bank0
 10905  027F  00A2               	movwf	___ftmul@f1+2
 10906  0280  0854               	movf	PID_Calculate@Err,w
 10907  0281  00A3               	movwf	___ftmul@f2
 10908  0282  0855               	movf	PID_Calculate@Err+1,w
 10909  0283  00A4               	movwf	___ftmul@f2+1
 10910  0284  0856               	movf	PID_Calculate@Err+2,w
 10911  0285  00A5               	movwf	___ftmul@f2+2
 10912  0286  318E  268E  3182   	fcall	___ftmul
 10913  0289  0020               	movlb	0	; select bank0
 10914  028A  0820               	movf	?___ftmul,w
 10915  028B  00D1               	movwf	PID_Calculate@ErrValue
 10916  028C  0821               	movf	?___ftmul+1,w
 10917  028D  00D2               	movwf	PID_Calculate@ErrValue+1
 10918  028E  0822               	movf	?___ftmul+2,w
 10919  028F  00D3               	movwf	PID_Calculate@ErrValue+2
 10920                           
 10921                           ;PID_Lib.c: 32: PID_Integrated = PID_Integrated + (Err * PID_Ki);
 10922  0290  0021               	movlb	1	; select bank1
 10923  0291  084D               	movf	_PID_Integrated^(0+128),w
 10924  0292  0020               	movlb	0	; select bank0
 10925  0293  00B0               	movwf	___ftadd@f1
 10926  0294  0021               	movlb	1	; select bank1
 10927  0295  084E               	movf	(_PID_Integrated+1)^(0+128),w
 10928  0296  0020               	movlb	0	; select bank0
 10929  0297  00B1               	movwf	___ftadd@f1+1
 10930  0298  0021               	movlb	1	; select bank1
 10931  0299  084F               	movf	(_PID_Integrated+2)^(0+128),w
 10932  029A  0020               	movlb	0	; select bank0
 10933  029B  00B2               	movwf	___ftadd@f1+2
 10934  029C  0021               	movlb	1	; select bank1
 10935  029D  0853               	movf	_PID_Ki^(0+128),w
 10936  029E  0020               	movlb	0	; select bank0
 10937  029F  00A0               	movwf	___ftmul@f1
 10938  02A0  0021               	movlb	1	; select bank1
 10939  02A1  0854               	movf	(_PID_Ki+1)^(0+128),w
 10940  02A2  0020               	movlb	0	; select bank0
 10941  02A3  00A1               	movwf	___ftmul@f1+1
 10942  02A4  0021               	movlb	1	; select bank1
 10943  02A5  0855               	movf	(_PID_Ki+2)^(0+128),w
 10944  02A6  0020               	movlb	0	; select bank0
 10945  02A7  00A2               	movwf	___ftmul@f1+2
 10946  02A8  0854               	movf	PID_Calculate@Err,w
 10947  02A9  00A3               	movwf	___ftmul@f2
 10948  02AA  0855               	movf	PID_Calculate@Err+1,w
 10949  02AB  00A4               	movwf	___ftmul@f2+1
 10950  02AC  0856               	movf	PID_Calculate@Err+2,w
 10951  02AD  00A5               	movwf	___ftmul@f2+2
 10952  02AE  318E  268E  3182   	fcall	___ftmul
 10953  02B1  0020               	movlb	0	; select bank0
 10954  02B2  0820               	movf	?___ftmul,w
 10955  02B3  00B3               	movwf	___ftadd@f2
 10956  02B4  0821               	movf	?___ftmul+1,w
 10957  02B5  00B4               	movwf	___ftadd@f2+1
 10958  02B6  0822               	movf	?___ftmul+2,w
 10959  02B7  00B5               	movwf	___ftadd@f2+2
 10960  02B8  3181  2155  3182   	fcall	___ftadd
 10961  02BB  0020               	movlb	0	; select bank0
 10962  02BC  0830               	movf	?___ftadd,w
 10963  02BD  0021               	movlb	1	; select bank1
 10964  02BE  00CD               	movwf	_PID_Integrated^(0+128)
 10965  02BF  0020               	movlb	0	; select bank0
 10966  02C0  0831               	movf	?___ftadd+1,w
 10967  02C1  0021               	movlb	1	; select bank1
 10968  02C2  00CE               	movwf	(_PID_Integrated+1)^(0+128)
 10969  02C3  0020               	movlb	0	; select bank0
 10970  02C4  0832               	movf	?___ftadd+2,w
 10971  02C5  0021               	movlb	1	; select bank1
 10972  02C6  00CF               	movwf	(_PID_Integrated+2)^(0+128)
 10973                           
 10974                           ;PID_Lib.c: 34: if (PID_Integrated < PID_MinOutput)
 10975  02C7  084D               	movf	_PID_Integrated^(0+128),w
 10976  02C8  0020               	movlb	0	; select bank0
 10977  02C9  00BD               	movwf	___ftge@ff1
 10978  02CA  0021               	movlb	1	; select bank1
 10979  02CB  084E               	movf	(_PID_Integrated+1)^(0+128),w
 10980  02CC  0020               	movlb	0	; select bank0
 10981  02CD  00BE               	movwf	___ftge@ff1+1
 10982  02CE  0021               	movlb	1	; select bank1
 10983  02CF  084F               	movf	(_PID_Integrated+2)^(0+128),w
 10984  02D0  0020               	movlb	0	; select bank0
 10985  02D1  00BF               	movwf	___ftge@ff1+2
 10986  02D2  0869               	movf	_PID_MinOutput+1,w
 10987  02D3  00F9               	movwf	___awtoft@c+1
 10988  02D4  0868               	movf	_PID_MinOutput,w
 10989  02D5  00F8               	movwf	___awtoft@c
 10990  02D6  3188  2069  3182   	fcall	___awtoft
 10991  02D9  0878               	movf	?___awtoft,w
 10992  02DA  0020               	movlb	0	; select bank0
 10993  02DB  00C0               	movwf	___ftge@ff2
 10994  02DC  0879               	movf	?___awtoft+1,w
 10995  02DD  00C1               	movwf	___ftge@ff2+1
 10996  02DE  087A               	movf	?___awtoft+2,w
 10997  02DF  00C2               	movwf	___ftge@ff2+2
 10998  02E0  3189  21A4  3182   	fcall	___ftge
 10999  02E3  1803               	btfsc	3,0
 11000  02E4  2AF4               	goto	l341
 11001                           
 11002                           ;PID_Lib.c: 35: {
 11003                           ;PID_Lib.c: 36: PID_Integrated = PID_MinOutput;
 11004  02E5  0020               	movlb	0	; select bank0
 11005  02E6  0869               	movf	_PID_MinOutput+1,w
 11006  02E7  00F9               	movwf	___awtoft@c+1
 11007  02E8  0868               	movf	_PID_MinOutput,w
 11008  02E9  00F8               	movwf	___awtoft@c
 11009  02EA  3188  2069  3182   	fcall	___awtoft
 11010  02ED  0878               	movf	?___awtoft,w
 11011  02EE  0021               	movlb	1	; select bank1
 11012  02EF  00CD               	movwf	_PID_Integrated^(0+128)
 11013  02F0  0879               	movf	?___awtoft+1,w
 11014  02F1  00CE               	movwf	(_PID_Integrated+1)^(0+128)
 11015  02F2  087A               	movf	?___awtoft+2,w
 11016  02F3  00CF               	movwf	(_PID_Integrated+2)^(0+128)
 11017  02F4                     l341:	
 11018                           
 11019                           ;PID_Lib.c: 37: }
 11020                           ;PID_Lib.c: 39: if (PID_Integrated > PID_MaxOutput)
 11021  02F4  0020               	movlb	0	; select bank0
 11022  02F5  086E               	movf	_PID_MaxOutput+1,w
 11023  02F6  00F9               	movwf	___awtoft@c+1
 11024  02F7  086D               	movf	_PID_MaxOutput,w
 11025  02F8  00F8               	movwf	___awtoft@c
 11026  02F9  3188  2069  3182   	fcall	___awtoft
 11027  02FC  0878               	movf	?___awtoft,w
 11028  02FD  0020               	movlb	0	; select bank0
 11029  02FE  00BD               	movwf	___ftge@ff1
 11030  02FF  0879               	movf	?___awtoft+1,w
 11031  0300  00BE               	movwf	___ftge@ff1+1
 11032  0301  087A               	movf	?___awtoft+2,w
 11033  0302  00BF               	movwf	___ftge@ff1+2
 11034  0303  0021               	movlb	1	; select bank1
 11035  0304  084D               	movf	_PID_Integrated^(0+128),w
 11036  0305  0020               	movlb	0	; select bank0
 11037  0306  00C0               	movwf	___ftge@ff2
 11038  0307  0021               	movlb	1	; select bank1
 11039  0308  084E               	movf	(_PID_Integrated+1)^(0+128),w
 11040  0309  0020               	movlb	0	; select bank0
 11041  030A  00C1               	movwf	___ftge@ff2+1
 11042  030B  0021               	movlb	1	; select bank1
 11043  030C  084F               	movf	(_PID_Integrated+2)^(0+128),w
 11044  030D  0020               	movlb	0	; select bank0
 11045  030E  00C2               	movwf	___ftge@ff2+2
 11046  030F  3189  21A4  3182   	fcall	___ftge
 11047  0312  1803               	btfsc	3,0
 11048  0313  2B23               	goto	l2839
 11049                           
 11050                           ;PID_Lib.c: 40: {
 11051                           ;PID_Lib.c: 41: PID_Integrated = PID_MaxOutput;
 11052  0314  0020               	movlb	0	; select bank0
 11053  0315  086E               	movf	_PID_MaxOutput+1,w
 11054  0316  00F9               	movwf	___awtoft@c+1
 11055  0317  086D               	movf	_PID_MaxOutput,w
 11056  0318  00F8               	movwf	___awtoft@c
 11057  0319  3188  2069  3182   	fcall	___awtoft
 11058  031C  0878               	movf	?___awtoft,w
 11059  031D  0021               	movlb	1	; select bank1
 11060  031E  00CD               	movwf	_PID_Integrated^(0+128)
 11061  031F  0879               	movf	?___awtoft+1,w
 11062  0320  00CE               	movwf	(_PID_Integrated+1)^(0+128)
 11063  0321  087A               	movf	?___awtoft+2,w
 11064  0322  00CF               	movwf	(_PID_Integrated+2)^(0+128)
 11065  0323                     l2839:	
 11066                           
 11067                           ;PID_Lib.c: 42: }
 11068                           ;PID_Lib.c: 45: if (PID_First_Time)
 11069  0323  0021               	movlb	1	; select bank1
 11070  0324  0867               	movf	_PID_First_Time^(0+128),w
 11071  0325  1903               	btfsc	3,2
 11072  0326  2B34               	goto	l2845
 11073                           
 11074                           ;PID_Lib.c: 46: {
 11075                           ;PID_Lib.c: 47: PID_First_Time = 0;
 11076  0327  01E7               	clrf	_PID_First_Time^(0+128)
 11077                           
 11078                           ;PID_Lib.c: 48: PID_Prev_Input = temp;
 11079  0328  0020               	movlb	0	; select bank0
 11080  0329  0848               	movf	PID_Calculate@temp,w
 11081  032A  0021               	movlb	1	; select bank1
 11082  032B  00D9               	movwf	_PID_Prev_Input^(0+128)
 11083  032C  0020               	movlb	0	; select bank0
 11084  032D  0849               	movf	PID_Calculate@temp+1,w
 11085  032E  0021               	movlb	1	; select bank1
 11086  032F  00DA               	movwf	(_PID_Prev_Input+1)^(0+128)
 11087  0330  0020               	movlb	0	; select bank0
 11088  0331  084A               	movf	PID_Calculate@temp+2,w
 11089  0332  0021               	movlb	1	; select bank1
 11090  0333  00DB               	movwf	(_PID_Prev_Input+2)^(0+128)
 11091  0334                     l2845:	
 11092                           
 11093                           ;PID_Lib.c: 49: }
 11094                           ;PID_Lib.c: 51: if(temp == PID_Prev_Input)
 11095  0334  085B               	movf	(_PID_Prev_Input+2)^(0+128),w
 11096  0335  0020               	movlb	0	; select bank0
 11097  0336  064A               	xorwf	PID_Calculate@temp+2,w
 11098  0337  1D03               	skipz
 11099  0338  2B43               	goto	u2905
 11100  0339  0021               	movlb	1	; select bank1
 11101  033A  085A               	movf	(_PID_Prev_Input+1)^(0+128),w
 11102  033B  0020               	movlb	0	; select bank0
 11103  033C  0649               	xorwf	PID_Calculate@temp+1,w
 11104  033D  1D03               	skipz
 11105  033E  2B43               	goto	u2905
 11106  033F  0021               	movlb	1	; select bank1
 11107  0340  0859               	movf	_PID_Prev_Input^(0+128),w
 11108  0341  0020               	movlb	0	; select bank0
 11109  0342  0648               	xorwf	PID_Calculate@temp,w
 11110  0343                     u2905:	
 11111  0343  1903               	btfsc	3,2
 11112  0344  2B87               	goto	l2853
 11113                           
 11114                           ;PID_Lib.c: 55: else
 11115                           ;PID_Lib.c: 56: {
 11116                           ;PID_Lib.c: 57: DerivativeValue = (temp - PID_Prev_Input) * PID_Kd;
 11117                           
 11118                           ;PID_Lib.c: 54: }
 11119  0345  0021               	movlb	1	; select bank1
 11120  0346  0850               	movf	_PID_Kd^(0+128),w
 11121  0347  0020               	movlb	0	; select bank0
 11122  0348  00A0               	movwf	___ftmul@f1
 11123  0349  0021               	movlb	1	; select bank1
 11124  034A  0851               	movf	(_PID_Kd+1)^(0+128),w
 11125  034B  0020               	movlb	0	; select bank0
 11126  034C  00A1               	movwf	___ftmul@f1+1
 11127  034D  0021               	movlb	1	; select bank1
 11128  034E  0852               	movf	(_PID_Kd+2)^(0+128),w
 11129  034F  0020               	movlb	0	; select bank0
 11130  0350  00A2               	movwf	___ftmul@f1+2
 11131  0351  0848               	movf	PID_Calculate@temp,w
 11132  0352  00B0               	movwf	___ftadd@f1
 11133  0353  0849               	movf	PID_Calculate@temp+1,w
 11134  0354  00B1               	movwf	___ftadd@f1+1
 11135  0355  084A               	movf	PID_Calculate@temp+2,w
 11136  0356  00B2               	movwf	___ftadd@f1+2
 11137  0357  0021               	movlb	1	; select bank1
 11138  0358  0859               	movf	_PID_Prev_Input^(0+128),w
 11139  0359  00F0               	movwf	___ftneg@f1
 11140  035A  085A               	movf	(_PID_Prev_Input+1)^(0+128),w
 11141  035B  00F1               	movwf	___ftneg@f1+1
 11142  035C  085B               	movf	(_PID_Prev_Input+2)^(0+128),w
 11143  035D  00F2               	movwf	___ftneg@f1+2
 11144  035E  3197  270F  3182   	fcall	___ftneg
 11145  0361  0870               	movf	?___ftneg,w
 11146  0362  0020               	movlb	0	; select bank0
 11147  0363  00B3               	movwf	___ftadd@f2
 11148  0364  0871               	movf	?___ftneg+1,w
 11149  0365  00B4               	movwf	___ftadd@f2+1
 11150  0366  0872               	movf	?___ftneg+2,w
 11151  0367  00B5               	movwf	___ftadd@f2+2
 11152  0368  3181  2155  3182   	fcall	___ftadd
 11153  036B  0020               	movlb	0	; select bank0
 11154  036C  0830               	movf	?___ftadd,w
 11155  036D  00A3               	movwf	___ftmul@f2
 11156  036E  0831               	movf	?___ftadd+1,w
 11157  036F  00A4               	movwf	___ftmul@f2+1
 11158  0370  0832               	movf	?___ftadd+2,w
 11159  0371  00A5               	movwf	___ftmul@f2+2
 11160  0372  318E  268E  3182   	fcall	___ftmul
 11161  0375  0020               	movlb	0	; select bank0
 11162  0376  0820               	movf	?___ftmul,w
 11163  0377  00CB               	movwf	PID_Calculate@DerivativeValue
 11164  0378  0821               	movf	?___ftmul+1,w
 11165  0379  00CC               	movwf	PID_Calculate@DerivativeValue+1
 11166  037A  0822               	movf	?___ftmul+2,w
 11167  037B  00CD               	movwf	PID_Calculate@DerivativeValue+2
 11168                           
 11169                           ;PID_Lib.c: 58: PID_Prev_Input = temp;
 11170  037C  0848               	movf	PID_Calculate@temp,w
 11171  037D  0021               	movlb	1	; select bank1
 11172  037E  00D9               	movwf	_PID_Prev_Input^(0+128)
 11173  037F  0020               	movlb	0	; select bank0
 11174  0380  0849               	movf	PID_Calculate@temp+1,w
 11175  0381  0021               	movlb	1	; select bank1
 11176  0382  00DA               	movwf	(_PID_Prev_Input+1)^(0+128)
 11177  0383  0020               	movlb	0	; select bank0
 11178  0384  084A               	movf	PID_Calculate@temp+2,w
 11179  0385  0021               	movlb	1	; select bank1
 11180  0386  00DB               	movwf	(_PID_Prev_Input+2)^(0+128)
 11181  0387                     l2853:	
 11182                           
 11183                           ;PID_Lib.c: 59: }
 11184                           ;PID_Lib.c: 61: if(temp>=setpoint)
 11185  0387  0020               	movlb	0	; select bank0
 11186  0388  0848               	movf	PID_Calculate@temp,w
 11187  0389  00BD               	movwf	___ftge@ff1
 11188  038A  0849               	movf	PID_Calculate@temp+1,w
 11189  038B  00BE               	movwf	___ftge@ff1+1
 11190  038C  084A               	movf	PID_Calculate@temp+2,w
 11191  038D  00BF               	movwf	___ftge@ff1+2
 11192  038E  0847               	movf	PID_Calculate@setpoint+1,w
 11193  038F  00F9               	movwf	___awtoft@c+1
 11194  0390  0846               	movf	PID_Calculate@setpoint,w
 11195  0391  00F8               	movwf	___awtoft@c
 11196  0392  3188  2069  3182   	fcall	___awtoft
 11197  0395  0878               	movf	?___awtoft,w
 11198  0396  0020               	movlb	0	; select bank0
 11199  0397  00C0               	movwf	___ftge@ff2
 11200  0398  0879               	movf	?___awtoft+1,w
 11201  0399  00C1               	movwf	___ftge@ff2+1
 11202  039A  087A               	movf	?___awtoft+2,w
 11203  039B  00C2               	movwf	___ftge@ff2+2
 11204  039C  3189  21A4  3182   	fcall	___ftge
 11205  039F  1C03               	btfss	3,0
 11206  03A0  2BAF               	goto	l2857
 11207                           
 11208                           ;PID_Lib.c: 62: {
 11209                           ;PID_Lib.c: 63: ErrValue = 0;
 11210  03A1  3000               	movlw	0
 11211  03A2  0020               	movlb	0	; select bank0
 11212  03A3  00D1               	movwf	PID_Calculate@ErrValue
 11213  03A4  3000               	movlw	0
 11214  03A5  00D2               	movwf	PID_Calculate@ErrValue+1
 11215  03A6  3000               	movlw	0
 11216  03A7  00D3               	movwf	PID_Calculate@ErrValue+2
 11217                           
 11218                           ;PID_Lib.c: 64: PID_Integrated = 0;
 11219  03A8  3000               	movlw	0
 11220  03A9  0021               	movlb	1	; select bank1
 11221  03AA  00CD               	movwf	_PID_Integrated^(0+128)
 11222  03AB  3000               	movlw	0
 11223  03AC  00CE               	movwf	(_PID_Integrated+1)^(0+128)
 11224  03AD  3000               	movlw	0
 11225  03AE  00CF               	movwf	(_PID_Integrated+2)^(0+128)
 11226  03AF                     l2857:	
 11227                           
 11228                           ;PID_Lib.c: 65: }
 11229                           ;PID_Lib.c: 67: Result = ErrValue + PID_Integrated - DerivativeValue;
 11230  03AF  0020               	movlb	0	; select bank0
 11231  03B0  0851               	movf	PID_Calculate@ErrValue,w
 11232  03B1  00B0               	movwf	___ftadd@f1
 11233  03B2  0852               	movf	PID_Calculate@ErrValue+1,w
 11234  03B3  00B1               	movwf	___ftadd@f1+1
 11235  03B4  0853               	movf	PID_Calculate@ErrValue+2,w
 11236  03B5  00B2               	movwf	___ftadd@f1+2
 11237  03B6  084B               	movf	PID_Calculate@DerivativeValue,w
 11238  03B7  00F0               	movwf	___ftneg@f1
 11239  03B8  084C               	movf	PID_Calculate@DerivativeValue+1,w
 11240  03B9  00F1               	movwf	___ftneg@f1+1
 11241  03BA  084D               	movf	PID_Calculate@DerivativeValue+2,w
 11242  03BB  00F2               	movwf	___ftneg@f1+2
 11243  03BC  3197  270F  3182   	fcall	___ftneg
 11244  03BF  0870               	movf	?___ftneg,w
 11245  03C0  0020               	movlb	0	; select bank0
 11246  03C1  00B3               	movwf	___ftadd@f2
 11247  03C2  0871               	movf	?___ftneg+1,w
 11248  03C3  00B4               	movwf	___ftadd@f2+1
 11249  03C4  0872               	movf	?___ftneg+2,w
 11250  03C5  00B5               	movwf	___ftadd@f2+2
 11251  03C6  3181  2155  3182   	fcall	___ftadd
 11252  03C9  0020               	movlb	0	; select bank0
 11253  03CA  0830               	movf	?___ftadd,w
 11254  03CB  00CE               	movwf	_PID_Calculate$1053
 11255  03CC  0831               	movf	?___ftadd+1,w
 11256  03CD  00CF               	movwf	_PID_Calculate$1053+1
 11257  03CE  0832               	movf	?___ftadd+2,w
 11258  03CF  00D0               	movwf	_PID_Calculate$1053+2
 11259                           
 11260                           ;PID_Lib.c: 65: }
 11261                           ;PID_Lib.c: 67: Result = ErrValue + PID_Integrated - DerivativeValue;
 11262  03D0  0021               	movlb	1	; select bank1
 11263  03D1  084D               	movf	_PID_Integrated^(0+128),w
 11264  03D2  0020               	movlb	0	; select bank0
 11265  03D3  00B0               	movwf	___ftadd@f1
 11266  03D4  0021               	movlb	1	; select bank1
 11267  03D5  084E               	movf	(_PID_Integrated+1)^(0+128),w
 11268  03D6  0020               	movlb	0	; select bank0
 11269  03D7  00B1               	movwf	___ftadd@f1+1
 11270  03D8  0021               	movlb	1	; select bank1
 11271  03D9  084F               	movf	(_PID_Integrated+2)^(0+128),w
 11272  03DA  0020               	movlb	0	; select bank0
 11273  03DB  00B2               	movwf	___ftadd@f1+2
 11274  03DC  084E               	movf	_PID_Calculate$1053,w
 11275  03DD  00B3               	movwf	___ftadd@f2
 11276  03DE  084F               	movf	_PID_Calculate$1053+1,w
 11277  03DF  00B4               	movwf	___ftadd@f2+1
 11278  03E0  0850               	movf	_PID_Calculate$1053+2,w
 11279  03E1  00B5               	movwf	___ftadd@f2+2
 11280  03E2  3181  2155  3182   	fcall	___ftadd
 11281  03E5  0020               	movlb	0	; select bank0
 11282  03E6  0830               	movf	?___ftadd,w
 11283  03E7  00D7               	movwf	PID_Calculate@Result
 11284  03E8  0831               	movf	?___ftadd+1,w
 11285  03E9  00D8               	movwf	PID_Calculate@Result+1
 11286  03EA  0832               	movf	?___ftadd+2,w
 11287  03EB  00D9               	movwf	PID_Calculate@Result+2
 11288                           
 11289                           ;PID_Lib.c: 69: if (Result < PID_MinOutput)
 11290  03EC  0857               	movf	PID_Calculate@Result,w
 11291  03ED  00BD               	movwf	___ftge@ff1
 11292  03EE  0858               	movf	PID_Calculate@Result+1,w
 11293  03EF  00BE               	movwf	___ftge@ff1+1
 11294  03F0  0859               	movf	PID_Calculate@Result+2,w
 11295  03F1  00BF               	movwf	___ftge@ff1+2
 11296  03F2  0869               	movf	_PID_MinOutput+1,w
 11297  03F3  00F9               	movwf	___awtoft@c+1
 11298  03F4  0868               	movf	_PID_MinOutput,w
 11299  03F5  00F8               	movwf	___awtoft@c
 11300  03F6  3188  2069  3182   	fcall	___awtoft
 11301  03F9  0878               	movf	?___awtoft,w
 11302  03FA  0020               	movlb	0	; select bank0
 11303  03FB  00C0               	movwf	___ftge@ff2
 11304  03FC  0879               	movf	?___awtoft+1,w
 11305  03FD  00C1               	movwf	___ftge@ff2+1
 11306  03FE  087A               	movf	?___awtoft+2,w
 11307  03FF  00C2               	movwf	___ftge@ff2+2
 11308  0400  3189  21A4  3182   	fcall	___ftge
 11309  0403  1803               	btfsc	3,0
 11310  0404  2C14               	goto	l347
 11311                           
 11312                           ;PID_Lib.c: 70: {
 11313                           ;PID_Lib.c: 71: Result = PID_MinOutput;
 11314  0405  0020               	movlb	0	; select bank0
 11315  0406  0869               	movf	_PID_MinOutput+1,w
 11316  0407  00F9               	movwf	___awtoft@c+1
 11317  0408  0868               	movf	_PID_MinOutput,w
 11318  0409  00F8               	movwf	___awtoft@c
 11319  040A  3188  2069  3182   	fcall	___awtoft
 11320  040D  0878               	movf	?___awtoft,w
 11321  040E  0020               	movlb	0	; select bank0
 11322  040F  00D7               	movwf	PID_Calculate@Result
 11323  0410  0879               	movf	?___awtoft+1,w
 11324  0411  00D8               	movwf	PID_Calculate@Result+1
 11325  0412  087A               	movf	?___awtoft+2,w
 11326  0413  00D9               	movwf	PID_Calculate@Result+2
 11327  0414                     l347:	
 11328                           
 11329                           ;PID_Lib.c: 72: }
 11330                           ;PID_Lib.c: 74: if (Result > PID_MaxOutput)
 11331  0414  0020               	movlb	0	; select bank0
 11332  0415  086E               	movf	_PID_MaxOutput+1,w
 11333  0416  00F9               	movwf	___awtoft@c+1
 11334  0417  086D               	movf	_PID_MaxOutput,w
 11335  0418  00F8               	movwf	___awtoft@c
 11336  0419  3188  2069  3182   	fcall	___awtoft
 11337  041C  0878               	movf	?___awtoft,w
 11338  041D  0020               	movlb	0	; select bank0
 11339  041E  00BD               	movwf	___ftge@ff1
 11340  041F  0879               	movf	?___awtoft+1,w
 11341  0420  00BE               	movwf	___ftge@ff1+1
 11342  0421  087A               	movf	?___awtoft+2,w
 11343  0422  00BF               	movwf	___ftge@ff1+2
 11344  0423  0857               	movf	PID_Calculate@Result,w
 11345  0424  00C0               	movwf	___ftge@ff2
 11346  0425  0858               	movf	PID_Calculate@Result+1,w
 11347  0426  00C1               	movwf	___ftge@ff2+1
 11348  0427  0859               	movf	PID_Calculate@Result+2,w
 11349  0428  00C2               	movwf	___ftge@ff2+2
 11350  0429  3189  21A4  3182   	fcall	___ftge
 11351  042C  1803               	btfsc	3,0
 11352  042D  2C3C               	goto	l2867
 11353                           
 11354                           ;PID_Lib.c: 75: {
 11355                           ;PID_Lib.c: 76: Result = PID_MaxOutput;
 11356  042E  0020               	movlb	0	; select bank0
 11357  042F  086E               	movf	_PID_MaxOutput+1,w
 11358  0430  00F9               	movwf	___awtoft@c+1
 11359  0431  086D               	movf	_PID_MaxOutput,w
 11360  0432  00F8               	movwf	___awtoft@c
 11361  0433  3188  2069         	fcall	___awtoft
 11362  0435  0878               	movf	?___awtoft,w
 11363  0436  0020               	movlb	0	; select bank0
 11364  0437  00D7               	movwf	PID_Calculate@Result
 11365  0438  0879               	movf	?___awtoft+1,w
 11366  0439  00D8               	movwf	PID_Calculate@Result+1
 11367  043A  087A               	movf	?___awtoft+2,w
 11368  043B  00D9               	movwf	PID_Calculate@Result+2
 11369  043C                     l2867:	
 11370                           
 11371                           ;PID_Lib.c: 77: }
 11372                           ;PID_Lib.c: 79: return (Result);
 11373  043C  0020               	movlb	0	; select bank0
 11374  043D  0857               	movf	PID_Calculate@Result,w
 11375  043E  00C6               	movwf	?_PID_Calculate
 11376  043F  0858               	movf	PID_Calculate@Result+1,w
 11377  0440  00C7               	movwf	?_PID_Calculate+1
 11378  0441  0859               	movf	PID_Calculate@Result+2,w
 11379  0442  00C8               	movwf	?_PID_Calculate+2
 11380  0443  0008               	return
 11381  0444                     __end_of_PID_Calculate:	
 11382                           
 11383                           	psect	text35
 11384  170F                     __ptext35:	
 11385 ;; *************** function ___ftneg *****************
 11386 ;; Defined at:
 11387 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  f1              3    0[COMMON] float 
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;		None
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  3    0[COMMON] float 
 11394 ;; Registers used:
 11395 ;;		wreg
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;Total ram usage:        3 bytes
 11406 ;; Hardware stack levels used:    1
 11407 ;; This function calls:
 11408 ;;		Nothing
 11409 ;; This function is called by:
 11410 ;;		_PID_Calculate
 11411 ;;		_main
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           
 11416                           ;psect for function ___ftneg
 11417  170F                     ___ftneg:	
 11418                           
 11419                           ;incstack = 0
 11420                           ; Regs used in ___ftneg: [wreg]
 11421  170F  0872               	movf	___ftneg@f1+2,w
 11422  1710  0471               	iorwf	___ftneg@f1+1,w
 11423  1711  0470               	iorwf	___ftneg@f1,w
 11424  1712  1903               	skipnz
 11425  1713  0008               	return
 11426  1714  3080               	movlw	128
 11427  1715  06F2               	xorwf	___ftneg@f1+2,f
 11428  1716  0008               	return
 11429  1717                     __end_of___ftneg:	
 11430                           
 11431                           	psect	text36
 11432  0E8E                     __ptext36:	
 11433 ;; *************** function ___ftmul *****************
 11434 ;; Defined at:
 11435 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  f1              3    0[BANK0 ] float 
 11438 ;;  f2              3    3[BANK0 ] float 
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 11441 ;;  sign            1   15[BANK0 ] unsigned char 
 11442 ;;  cntr            1   14[BANK0 ] unsigned char 
 11443 ;;  exp             1   10[BANK0 ] unsigned char 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  3    0[BANK0 ] float 
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0, pclath, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11453 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;Total ram usage:       16 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:    1
 11460 ;; This function calls:
 11461 ;;		___ftpack
 11462 ;; This function is called by:
 11463 ;;		_PID_Calculate
 11464 ;;		_main
 11465 ;;		_log
 11466 ;;		_eval_poly
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           
 11471                           ;psect for function ___ftmul
 11472  0E8E                     ___ftmul:	
 11473                           
 11474                           ;incstack = 0
 11475                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11476  0E8E  0020               	movlb	0	; select bank0
 11477  0E8F  0820               	movf	___ftmul@f1,w
 11478  0E90  00A6               	movwf	??___ftmul
 11479  0E91  0821               	movf	___ftmul@f1+1,w
 11480  0E92  00A7               	movwf	??___ftmul+1
 11481  0E93  0822               	movf	___ftmul@f1+2,w
 11482  0E94  00A8               	movwf	??___ftmul+2
 11483  0E95  1003               	clrc
 11484  0E96  0D27               	rlf	??___ftmul+1,w
 11485  0E97  0D28               	rlf	??___ftmul+2,w
 11486  0E98  00A9               	movwf	??___ftmul+3
 11487  0E99  0829               	movf	??___ftmul+3,w
 11488  0E9A  00AA               	movwf	___ftmul@exp
 11489  0E9B  082A               	movf	___ftmul@exp,w
 11490  0E9C  1D03               	btfss	3,2
 11491  0E9D  2EA5               	goto	l2387
 11492  0E9E  3000               	movlw	0
 11493  0E9F  00A0               	movwf	?___ftmul
 11494  0EA0  3000               	movlw	0
 11495  0EA1  00A1               	movwf	?___ftmul+1
 11496  0EA2  3000               	movlw	0
 11497  0EA3  00A2               	movwf	?___ftmul+2
 11498  0EA4  0008               	return
 11499  0EA5                     l2387:	
 11500  0EA5  0823               	movf	___ftmul@f2,w
 11501  0EA6  00A6               	movwf	??___ftmul
 11502  0EA7  0824               	movf	___ftmul@f2+1,w
 11503  0EA8  00A7               	movwf	??___ftmul+1
 11504  0EA9  0825               	movf	___ftmul@f2+2,w
 11505  0EAA  00A8               	movwf	??___ftmul+2
 11506  0EAB  1003               	clrc
 11507  0EAC  0D27               	rlf	??___ftmul+1,w
 11508  0EAD  0D28               	rlf	??___ftmul+2,w
 11509  0EAE  00A9               	movwf	??___ftmul+3
 11510  0EAF  0829               	movf	??___ftmul+3,w
 11511  0EB0  00AF               	movwf	___ftmul@sign
 11512  0EB1  082F               	movf	___ftmul@sign,w
 11513  0EB2  1D03               	btfss	3,2
 11514  0EB3  2EBB               	goto	l2393
 11515  0EB4  3000               	movlw	0
 11516  0EB5  00A0               	movwf	?___ftmul
 11517  0EB6  3000               	movlw	0
 11518  0EB7  00A1               	movwf	?___ftmul+1
 11519  0EB8  3000               	movlw	0
 11520  0EB9  00A2               	movwf	?___ftmul+2
 11521  0EBA  0008               	return
 11522  0EBB                     l2393:	
 11523  0EBB  082F               	movf	___ftmul@sign,w
 11524  0EBC  3E7B               	addlw	123
 11525  0EBD  00A6               	movwf	??___ftmul
 11526  0EBE  0826               	movf	??___ftmul,w
 11527  0EBF  07AA               	addwf	___ftmul@exp,f
 11528  0EC0  0820               	movf	___ftmul@f1,w
 11529  0EC1  00A6               	movwf	??___ftmul
 11530  0EC2  0821               	movf	___ftmul@f1+1,w
 11531  0EC3  00A7               	movwf	??___ftmul+1
 11532  0EC4  0822               	movf	___ftmul@f1+2,w
 11533  0EC5  00A8               	movwf	??___ftmul+2
 11534  0EC6  3010               	movlw	16
 11535  0EC7                     u2515:	
 11536  0EC7  36A8               	lsrf	??___ftmul+2,f
 11537  0EC8  0CA7               	rrf	??___ftmul+1,f
 11538  0EC9  0CA6               	rrf	??___ftmul,f
 11539  0ECA  0B89               	decfsz	9,f
 11540  0ECB  2EC7               	goto	u2515
 11541  0ECC  0826               	movf	??___ftmul,w
 11542  0ECD  00A9               	movwf	??___ftmul+3
 11543  0ECE  0829               	movf	??___ftmul+3,w
 11544  0ECF  00AF               	movwf	___ftmul@sign
 11545  0ED0  0823               	movf	___ftmul@f2,w
 11546  0ED1  00A6               	movwf	??___ftmul
 11547  0ED2  0824               	movf	___ftmul@f2+1,w
 11548  0ED3  00A7               	movwf	??___ftmul+1
 11549  0ED4  0825               	movf	___ftmul@f2+2,w
 11550  0ED5  00A8               	movwf	??___ftmul+2
 11551  0ED6  3010               	movlw	16
 11552  0ED7                     u2525:	
 11553  0ED7  36A8               	lsrf	??___ftmul+2,f
 11554  0ED8  0CA7               	rrf	??___ftmul+1,f
 11555  0ED9  0CA6               	rrf	??___ftmul,f
 11556  0EDA  0B89               	decfsz	9,f
 11557  0EDB  2ED7               	goto	u2525
 11558  0EDC  0826               	movf	??___ftmul,w
 11559  0EDD  00A9               	movwf	??___ftmul+3
 11560  0EDE  0829               	movf	??___ftmul+3,w
 11561  0EDF  06AF               	xorwf	___ftmul@sign,f
 11562  0EE0  3080               	movlw	128
 11563  0EE1  00A6               	movwf	??___ftmul
 11564  0EE2  0826               	movf	??___ftmul,w
 11565  0EE3  05AF               	andwf	___ftmul@sign,f
 11566  0EE4  17A1               	bsf	___ftmul@f1+1,7
 11567  0EE5  17A4               	bsf	___ftmul@f2+1,7
 11568  0EE6  30FF               	movlw	255
 11569  0EE7  05A3               	andwf	___ftmul@f2,f
 11570  0EE8  30FF               	movlw	255
 11571  0EE9  05A4               	andwf	___ftmul@f2+1,f
 11572  0EEA  3000               	movlw	0
 11573  0EEB  05A5               	andwf	___ftmul@f2+2,f
 11574  0EEC  3000               	movlw	0
 11575  0EED  00AB               	movwf	___ftmul@f3_as_product
 11576  0EEE  3000               	movlw	0
 11577  0EEF  00AC               	movwf	___ftmul@f3_as_product+1
 11578  0EF0  3000               	movlw	0
 11579  0EF1  00AD               	movwf	___ftmul@f3_as_product+2
 11580  0EF2  3007               	movlw	7
 11581  0EF3  00A6               	movwf	??___ftmul
 11582  0EF4  0826               	movf	??___ftmul,w
 11583  0EF5  00AE               	movwf	___ftmul@cntr
 11584  0EF6                     l2405:	
 11585  0EF6  1C20               	btfss	___ftmul@f1,0
 11586  0EF7  2EFE               	goto	l2409
 11587  0EF8  0823               	movf	___ftmul@f2,w
 11588  0EF9  07AB               	addwf	___ftmul@f3_as_product,f
 11589  0EFA  0824               	movf	___ftmul@f2+1,w
 11590  0EFB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11591  0EFC  0825               	movf	___ftmul@f2+2,w
 11592  0EFD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11593  0EFE                     l2409:	
 11594  0EFE  3001               	movlw	1
 11595  0EFF                     u2545:	
 11596  0EFF  36A2               	lsrf	___ftmul@f1+2,f
 11597  0F00  0CA1               	rrf	___ftmul@f1+1,f
 11598  0F01  0CA0               	rrf	___ftmul@f1,f
 11599  0F02  0B89               	decfsz	9,f
 11600  0F03  2EFF               	goto	u2545
 11601  0F04  3001               	movlw	1
 11602  0F05                     u2555:	
 11603  0F05  35A3               	lslf	___ftmul@f2,f
 11604  0F06  0DA4               	rlf	___ftmul@f2+1,f
 11605  0F07  0DA5               	rlf	___ftmul@f2+2,f
 11606  0F08  0B89               	decfsz	9,f
 11607  0F09  2F05               	goto	u2555
 11608  0F0A  3001               	movlw	1
 11609  0F0B  02AE               	subwf	___ftmul@cntr,f
 11610  0F0C  1D03               	btfss	3,2
 11611  0F0D  2EF6               	goto	l2405
 11612  0F0E  3009               	movlw	9
 11613  0F0F  00A6               	movwf	??___ftmul
 11614  0F10  0826               	movf	??___ftmul,w
 11615  0F11  00AE               	movwf	___ftmul@cntr
 11616  0F12                     l2417:	
 11617  0F12  1C20               	btfss	___ftmul@f1,0
 11618  0F13  2F1A               	goto	l2421
 11619  0F14  0823               	movf	___ftmul@f2,w
 11620  0F15  07AB               	addwf	___ftmul@f3_as_product,f
 11621  0F16  0824               	movf	___ftmul@f2+1,w
 11622  0F17  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11623  0F18  0825               	movf	___ftmul@f2+2,w
 11624  0F19  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11625  0F1A                     l2421:	
 11626  0F1A  3001               	movlw	1
 11627  0F1B                     u2585:	
 11628  0F1B  36A2               	lsrf	___ftmul@f1+2,f
 11629  0F1C  0CA1               	rrf	___ftmul@f1+1,f
 11630  0F1D  0CA0               	rrf	___ftmul@f1,f
 11631  0F1E  0B89               	decfsz	9,f
 11632  0F1F  2F1B               	goto	u2585
 11633  0F20  3001               	movlw	1
 11634  0F21                     u2595:	
 11635  0F21  36AD               	lsrf	___ftmul@f3_as_product+2,f
 11636  0F22  0CAC               	rrf	___ftmul@f3_as_product+1,f
 11637  0F23  0CAB               	rrf	___ftmul@f3_as_product,f
 11638  0F24  0B89               	decfsz	9,f
 11639  0F25  2F21               	goto	u2595
 11640  0F26  3001               	movlw	1
 11641  0F27  02AE               	subwf	___ftmul@cntr,f
 11642  0F28  1D03               	btfss	3,2
 11643  0F29  2F12               	goto	l2417
 11644  0F2A  082B               	movf	___ftmul@f3_as_product,w
 11645  0F2B  00F0               	movwf	___ftpack@arg
 11646  0F2C  082C               	movf	___ftmul@f3_as_product+1,w
 11647  0F2D  00F1               	movwf	___ftpack@arg+1
 11648  0F2E  082D               	movf	___ftmul@f3_as_product+2,w
 11649  0F2F  00F2               	movwf	___ftpack@arg+2
 11650  0F30  082A               	movf	___ftmul@exp,w
 11651  0F31  00A6               	movwf	??___ftmul
 11652  0F32  0826               	movf	??___ftmul,w
 11653  0F33  00F3               	movwf	___ftpack@exp
 11654  0F34  082F               	movf	___ftmul@sign,w
 11655  0F35  00A7               	movwf	??___ftmul+1
 11656  0F36  0827               	movf	??___ftmul+1,w
 11657  0F37  00F4               	movwf	___ftpack@sign
 11658  0F38  318B  2351         	fcall	___ftpack
 11659  0F3A  0870               	movf	?___ftpack,w
 11660  0F3B  0020               	movlb	0	; select bank0
 11661  0F3C  00A0               	movwf	?___ftmul
 11662  0F3D  0871               	movf	?___ftpack+1,w
 11663  0F3E  00A1               	movwf	?___ftmul+1
 11664  0F3F  0872               	movf	?___ftpack+2,w
 11665  0F40  00A2               	movwf	?___ftmul+2
 11666  0F41  0008               	return
 11667  0F42                     __end_of___ftmul:	
 11668                           
 11669                           	psect	text37
 11670  09A4                     __ptext37:	
 11671 ;; *************** function ___ftge *****************
 11672 ;; Defined at:
 11673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  ff1             3   29[BANK0 ] float 
 11676 ;;  ff2             3   32[BANK0 ] float 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;		None               void
 11681 ;; Registers used:
 11682 ;;		wreg, status,2, status,0
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        9 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_PID_Calculate
 11698 ;;		_main
 11699 ;;		_log
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function ___ftge
 11705  09A4                     ___ftge:	
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 11709  09A4  0020               	movlb	0	; select bank0
 11710  09A5  1FBF               	btfss	___ftge@ff1+2,7
 11711  09A6  29BB               	goto	l2671
 11712  09A7  093D               	comf	___ftge@ff1,w
 11713  09A8  00C3               	movwf	??___ftge
 11714  09A9  093E               	comf	___ftge@ff1+1,w
 11715  09AA  00C4               	movwf	??___ftge+1
 11716  09AB  093F               	comf	___ftge@ff1+2,w
 11717  09AC  00C5               	movwf	??___ftge+2
 11718  09AD  0AC3               	incf	??___ftge,f
 11719  09AE  1903               	skipnz
 11720  09AF  0AC4               	incf	??___ftge+1,f
 11721  09B0  1903               	skipnz
 11722  09B1  0AC5               	incf	??___ftge+2,f
 11723  09B2  3000               	movlw	0
 11724  09B3  0743               	addwf	??___ftge,w
 11725  09B4  00BD               	movwf	___ftge@ff1
 11726  09B5  3000               	movlw	0
 11727  09B6  3D44               	addwfc	??___ftge+1,w
 11728  09B7  00BE               	movwf	___ftge@ff1+1
 11729  09B8  3080               	movlw	128
 11730  09B9  3D45               	addwfc	??___ftge+2,w
 11731  09BA  00BF               	movwf	___ftge@ff1+2
 11732  09BB                     l2671:	
 11733  09BB  1FC2               	btfss	___ftge@ff2+2,7
 11734  09BC  29D1               	goto	l2675
 11735  09BD  0940               	comf	___ftge@ff2,w
 11736  09BE  00C3               	movwf	??___ftge
 11737  09BF  0941               	comf	___ftge@ff2+1,w
 11738  09C0  00C4               	movwf	??___ftge+1
 11739  09C1  0942               	comf	___ftge@ff2+2,w
 11740  09C2  00C5               	movwf	??___ftge+2
 11741  09C3  0AC3               	incf	??___ftge,f
 11742  09C4  1903               	skipnz
 11743  09C5  0AC4               	incf	??___ftge+1,f
 11744  09C6  1903               	skipnz
 11745  09C7  0AC5               	incf	??___ftge+2,f
 11746  09C8  3000               	movlw	0
 11747  09C9  0743               	addwf	??___ftge,w
 11748  09CA  00C0               	movwf	___ftge@ff2
 11749  09CB  3000               	movlw	0
 11750  09CC  3D44               	addwfc	??___ftge+1,w
 11751  09CD  00C1               	movwf	___ftge@ff2+1
 11752  09CE  3080               	movlw	128
 11753  09CF  3D45               	addwfc	??___ftge+2,w
 11754  09D0  00C2               	movwf	___ftge@ff2+2
 11755  09D1                     l2675:	
 11756  09D1  3080               	movlw	128
 11757  09D2  06BF               	xorwf	___ftge@ff1+2,f
 11758  09D3  3080               	movlw	128
 11759  09D4  06C2               	xorwf	___ftge@ff2+2,f
 11760  09D5  0842               	movf	___ftge@ff2+2,w
 11761  09D6  023F               	subwf	___ftge@ff1+2,w
 11762  09D7  1D03               	skipz
 11763  09D8  0008               	return
 11764  09D9  0841               	movf	___ftge@ff2+1,w
 11765  09DA  023E               	subwf	___ftge@ff1+1,w
 11766  09DB  1D03               	skipz
 11767  09DC  0008               	return
 11768  09DD  0840               	movf	___ftge@ff2,w
 11769  09DE  023D               	subwf	___ftge@ff1,w
 11770  09DF  0008               	return
 11771  09E0                     __end_of___ftge:	
 11772                           
 11773                           	psect	text38
 11774  0155                     __ptext38:	
 11775 ;; *************** function ___ftadd *****************
 11776 ;; Defined at:
 11777 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  f1              3   16[BANK0 ] float 
 11780 ;;  f2              3   19[BANK0 ] float 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;  exp1            1   28[BANK0 ] unsigned char 
 11783 ;;  exp2            1   27[BANK0 ] unsigned char 
 11784 ;;  sign            1   26[BANK0 ] unsigned char 
 11785 ;; Return value:  Size  Location     Type
 11786 ;;                  3   16[BANK0 ] float 
 11787 ;; Registers used:
 11788 ;;		wreg, status,2, status,0, pclath, cstack
 11789 ;; Tracked objects:
 11790 ;;		On entry : 0/0
 11791 ;;		On exit  : 0/0
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11794 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;Total ram usage:       13 bytes
 11799 ;; Hardware stack levels used:    1
 11800 ;; Hardware stack levels required when called:    1
 11801 ;; This function calls:
 11802 ;;		___ftpack
 11803 ;; This function is called by:
 11804 ;;		_PID_Calculate
 11805 ;;		_main
 11806 ;;		___ftsub
 11807 ;;		_log
 11808 ;;		_eval_poly
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           
 11813                           ;psect for function ___ftadd
 11814  0155                     ___ftadd:	
 11815                           
 11816                           ;incstack = 0
 11817                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11818  0155  0020               	movlb	0	; select bank0
 11819  0156  0830               	movf	___ftadd@f1,w
 11820  0157  00B6               	movwf	??___ftadd
 11821  0158  0831               	movf	___ftadd@f1+1,w
 11822  0159  00B7               	movwf	??___ftadd+1
 11823  015A  0832               	movf	___ftadd@f1+2,w
 11824  015B  00B8               	movwf	??___ftadd+2
 11825  015C  1003               	clrc
 11826  015D  0D37               	rlf	??___ftadd+1,w
 11827  015E  0D38               	rlf	??___ftadd+2,w
 11828  015F  00B9               	movwf	??___ftadd+3
 11829  0160  0839               	movf	??___ftadd+3,w
 11830  0161  00BC               	movwf	___ftadd@exp1
 11831  0162  0833               	movf	___ftadd@f2,w
 11832  0163  00B6               	movwf	??___ftadd
 11833  0164  0834               	movf	___ftadd@f2+1,w
 11834  0165  00B7               	movwf	??___ftadd+1
 11835  0166  0835               	movf	___ftadd@f2+2,w
 11836  0167  00B8               	movwf	??___ftadd+2
 11837  0168  1003               	clrc
 11838  0169  0D37               	rlf	??___ftadd+1,w
 11839  016A  0D38               	rlf	??___ftadd+2,w
 11840  016B  00B9               	movwf	??___ftadd+3
 11841  016C  0839               	movf	??___ftadd+3,w
 11842  016D  00BB               	movwf	___ftadd@exp2
 11843  016E  083C               	movf	___ftadd@exp1,w
 11844  016F  1903               	btfsc	3,2
 11845  0170  297D               	goto	l2317
 11846  0171  083B               	movf	___ftadd@exp2,w
 11847  0172  023C               	subwf	___ftadd@exp1,w
 11848  0173  1803               	skipnc
 11849  0174  2984               	goto	l2321
 11850  0175  033C               	decf	___ftadd@exp1,w
 11851  0176  3AFF               	xorlw	255
 11852  0177  073B               	addwf	___ftadd@exp2,w
 11853  0178  00B6               	movwf	??___ftadd
 11854  0179  3019               	movlw	25
 11855  017A  0236               	subwf	??___ftadd,w
 11856  017B  1C03               	skipc
 11857  017C  2984               	goto	l2321
 11858  017D                     l2317:	
 11859  017D  0833               	movf	___ftadd@f2,w
 11860  017E  00B0               	movwf	?___ftadd
 11861  017F  0834               	movf	___ftadd@f2+1,w
 11862  0180  00B1               	movwf	?___ftadd+1
 11863  0181  0835               	movf	___ftadd@f2+2,w
 11864  0182  00B2               	movwf	?___ftadd+2
 11865  0183  0008               	return
 11866  0184                     l2321:	
 11867  0184  083B               	movf	___ftadd@exp2,w
 11868  0185  1903               	btfsc	3,2
 11869  0186  0008               	return
 11870  0187  083C               	movf	___ftadd@exp1,w
 11871  0188  023B               	subwf	___ftadd@exp2,w
 11872  0189  1803               	skipnc
 11873  018A  2993               	goto	l2327
 11874  018B  033B               	decf	___ftadd@exp2,w
 11875  018C  3AFF               	xorlw	255
 11876  018D  073C               	addwf	___ftadd@exp1,w
 11877  018E  00B6               	movwf	??___ftadd
 11878  018F  3019               	movlw	25
 11879  0190  0236               	subwf	??___ftadd,w
 11880  0191  1803               	btfsc	3,0
 11881  0192  0008               	return
 11882  0193                     l2327:	
 11883  0193  3006               	movlw	6
 11884  0194  00B6               	movwf	??___ftadd
 11885  0195  0836               	movf	??___ftadd,w
 11886  0196  00BA               	movwf	___ftadd@sign
 11887  0197  1BB2               	btfsc	___ftadd@f1+2,7
 11888  0198  17BA               	bsf	___ftadd@sign,7
 11889  0199  1BB5               	btfsc	___ftadd@f2+2,7
 11890  019A  173A               	bsf	___ftadd@sign,6
 11891  019B  17B1               	bsf	___ftadd@f1+1,7
 11892  019C  30FF               	movlw	255
 11893  019D  05B0               	andwf	___ftadd@f1,f
 11894  019E  30FF               	movlw	255
 11895  019F  05B1               	andwf	___ftadd@f1+1,f
 11896  01A0  3000               	movlw	0
 11897  01A1  05B2               	andwf	___ftadd@f1+2,f
 11898  01A2  17B4               	bsf	___ftadd@f2+1,7
 11899  01A3  30FF               	movlw	255
 11900  01A4  05B3               	andwf	___ftadd@f2,f
 11901  01A5  30FF               	movlw	255
 11902  01A6  05B4               	andwf	___ftadd@f2+1,f
 11903  01A7  3000               	movlw	0
 11904  01A8  05B5               	andwf	___ftadd@f2+2,f
 11905  01A9  083B               	movf	___ftadd@exp2,w
 11906  01AA  023C               	subwf	___ftadd@exp1,w
 11907  01AB  1803               	skipnc
 11908  01AC  29CF               	goto	l2349
 11909  01AD                     l2339:	
 11910  01AD  3001               	movlw	1
 11911  01AE                     u2355:	
 11912  01AE  35B3               	lslf	___ftadd@f2,f
 11913  01AF  0DB4               	rlf	___ftadd@f2+1,f
 11914  01B0  0DB5               	rlf	___ftadd@f2+2,f
 11915  01B1  0B89               	decfsz	9,f
 11916  01B2  29AE               	goto	u2355
 11917  01B3  3001               	movlw	1
 11918  01B4  02BB               	subwf	___ftadd@exp2,f
 11919  01B5  083B               	movf	___ftadd@exp2,w
 11920  01B6  063C               	xorwf	___ftadd@exp1,w
 11921  01B7  1903               	skipnz
 11922  01B8  29CA               	goto	l2347
 11923  01B9  3001               	movlw	1
 11924  01BA  02BA               	subwf	___ftadd@sign,f
 11925  01BB  083A               	movf	___ftadd@sign,w
 11926  01BC  3907               	andlw	7
 11927  01BD  1903               	btfsc	3,2
 11928  01BE  29CA               	goto	l2347
 11929  01BF  29AD               	goto	l2339
 11930  01C0                     l2345:	
 11931  01C0  3001               	movlw	1
 11932  01C1                     u2385:	
 11933  01C1  36B2               	lsrf	___ftadd@f1+2,f
 11934  01C2  0CB1               	rrf	___ftadd@f1+1,f
 11935  01C3  0CB0               	rrf	___ftadd@f1,f
 11936  01C4  0B89               	decfsz	9,f
 11937  01C5  29C1               	goto	u2385
 11938  01C6  3001               	movlw	1
 11939  01C7  00B6               	movwf	??___ftadd
 11940  01C8  0836               	movf	??___ftadd,w
 11941  01C9  07BC               	addwf	___ftadd@exp1,f
 11942  01CA                     l2347:	
 11943  01CA  083C               	movf	___ftadd@exp1,w
 11944  01CB  063B               	xorwf	___ftadd@exp2,w
 11945  01CC  1903               	btfsc	3,2
 11946  01CD  29F4               	goto	l675
 11947  01CE  29C0               	goto	l2345
 11948  01CF                     l2349:	
 11949  01CF  083C               	movf	___ftadd@exp1,w
 11950  01D0  023B               	subwf	___ftadd@exp2,w
 11951  01D1  1803               	skipnc
 11952  01D2  29F4               	goto	l675
 11953  01D3                     l2351:	
 11954  01D3  3001               	movlw	1
 11955  01D4                     u2415:	
 11956  01D4  35B0               	lslf	___ftadd@f1,f
 11957  01D5  0DB1               	rlf	___ftadd@f1+1,f
 11958  01D6  0DB2               	rlf	___ftadd@f1+2,f
 11959  01D7  0B89               	decfsz	9,f
 11960  01D8  29D4               	goto	u2415
 11961  01D9  3001               	movlw	1
 11962  01DA  02BC               	subwf	___ftadd@exp1,f
 11963  01DB  083B               	movf	___ftadd@exp2,w
 11964  01DC  063C               	xorwf	___ftadd@exp1,w
 11965  01DD  1903               	skipnz
 11966  01DE  29F0               	goto	l2359
 11967  01DF  3001               	movlw	1
 11968  01E0  02BA               	subwf	___ftadd@sign,f
 11969  01E1  083A               	movf	___ftadd@sign,w
 11970  01E2  3907               	andlw	7
 11971  01E3  1903               	btfsc	3,2
 11972  01E4  29F0               	goto	l2359
 11973  01E5  29D3               	goto	l2351
 11974  01E6                     l2357:	
 11975  01E6  3001               	movlw	1
 11976  01E7                     u2445:	
 11977  01E7  36B5               	lsrf	___ftadd@f2+2,f
 11978  01E8  0CB4               	rrf	___ftadd@f2+1,f
 11979  01E9  0CB3               	rrf	___ftadd@f2,f
 11980  01EA  0B89               	decfsz	9,f
 11981  01EB  29E7               	goto	u2445
 11982  01EC  3001               	movlw	1
 11983  01ED  00B6               	movwf	??___ftadd
 11984  01EE  0836               	movf	??___ftadd,w
 11985  01EF  07BB               	addwf	___ftadd@exp2,f
 11986  01F0                     l2359:	
 11987  01F0  083C               	movf	___ftadd@exp1,w
 11988  01F1  063B               	xorwf	___ftadd@exp2,w
 11989  01F2  1D03               	skipz
 11990  01F3  29E6               	goto	l2357
 11991  01F4                     l675:	
 11992  01F4  1FBA               	btfss	___ftadd@sign,7
 11993  01F5  2A06               	goto	l2363
 11994  01F6  30FF               	movlw	255
 11995  01F7  06B0               	xorwf	___ftadd@f1,f
 11996  01F8  30FF               	movlw	255
 11997  01F9  06B1               	xorwf	___ftadd@f1+1,f
 11998  01FA  30FF               	movlw	255
 11999  01FB  06B2               	xorwf	___ftadd@f1+2,f
 12000  01FC  3001               	movlw	1
 12001  01FD  07B0               	addwf	___ftadd@f1,f
 12002  01FE  3000               	movlw	0
 12003  01FF  1803               	skipnc
 12004  0200  3001               	movlw	1
 12005  0201  07B1               	addwf	___ftadd@f1+1,f
 12006  0202  3000               	movlw	0
 12007  0203  1803               	skipnc
 12008  0204  3001               	movlw	1
 12009  0205  07B2               	addwf	___ftadd@f1+2,f
 12010  0206                     l2363:	
 12011  0206  1F3A               	btfss	___ftadd@sign,6
 12012  0207  2A18               	goto	l2367
 12013  0208  30FF               	movlw	255
 12014  0209  06B3               	xorwf	___ftadd@f2,f
 12015  020A  30FF               	movlw	255
 12016  020B  06B4               	xorwf	___ftadd@f2+1,f
 12017  020C  30FF               	movlw	255
 12018  020D  06B5               	xorwf	___ftadd@f2+2,f
 12019  020E  3001               	movlw	1
 12020  020F  07B3               	addwf	___ftadd@f2,f
 12021  0210  3000               	movlw	0
 12022  0211  1803               	skipnc
 12023  0212  3001               	movlw	1
 12024  0213  07B4               	addwf	___ftadd@f2+1,f
 12025  0214  3000               	movlw	0
 12026  0215  1803               	skipnc
 12027  0216  3001               	movlw	1
 12028  0217  07B5               	addwf	___ftadd@f2+2,f
 12029  0218                     l2367:	
 12030  0218  01BA               	clrf	___ftadd@sign
 12031  0219  0830               	movf	___ftadd@f1,w
 12032  021A  07B3               	addwf	___ftadd@f2,f
 12033  021B  0831               	movf	___ftadd@f1+1,w
 12034  021C  3DB4               	addwfc	___ftadd@f2+1,f
 12035  021D  0832               	movf	___ftadd@f1+2,w
 12036  021E  3DB5               	addwfc	___ftadd@f2+2,f
 12037  021F  1FB5               	btfss	___ftadd@f2+2,7
 12038  0220  2A33               	goto	l2377
 12039  0221  30FF               	movlw	255
 12040  0222  06B3               	xorwf	___ftadd@f2,f
 12041  0223  30FF               	movlw	255
 12042  0224  06B4               	xorwf	___ftadd@f2+1,f
 12043  0225  30FF               	movlw	255
 12044  0226  06B5               	xorwf	___ftadd@f2+2,f
 12045  0227  3001               	movlw	1
 12046  0228  07B3               	addwf	___ftadd@f2,f
 12047  0229  3000               	movlw	0
 12048  022A  1803               	skipnc
 12049  022B  3001               	movlw	1
 12050  022C  07B4               	addwf	___ftadd@f2+1,f
 12051  022D  3000               	movlw	0
 12052  022E  1803               	skipnc
 12053  022F  3001               	movlw	1
 12054  0230  07B5               	addwf	___ftadd@f2+2,f
 12055  0231  01BA               	clrf	___ftadd@sign
 12056  0232  0ABA               	incf	___ftadd@sign,f
 12057  0233                     l2377:	
 12058  0233  0833               	movf	___ftadd@f2,w
 12059  0234  00F0               	movwf	___ftpack@arg
 12060  0235  0834               	movf	___ftadd@f2+1,w
 12061  0236  00F1               	movwf	___ftpack@arg+1
 12062  0237  0835               	movf	___ftadd@f2+2,w
 12063  0238  00F2               	movwf	___ftpack@arg+2
 12064  0239  083C               	movf	___ftadd@exp1,w
 12065  023A  00B6               	movwf	??___ftadd
 12066  023B  0836               	movf	??___ftadd,w
 12067  023C  00F3               	movwf	___ftpack@exp
 12068  023D  083A               	movf	___ftadd@sign,w
 12069  023E  00B7               	movwf	??___ftadd+1
 12070  023F  0837               	movf	??___ftadd+1,w
 12071  0240  00F4               	movwf	___ftpack@sign
 12072  0241  318B  2351         	fcall	___ftpack
 12073  0243  0870               	movf	?___ftpack,w
 12074  0244  0020               	movlb	0	; select bank0
 12075  0245  00B0               	movwf	?___ftadd
 12076  0246  0871               	movf	?___ftpack+1,w
 12077  0247  00B1               	movwf	?___ftadd+1
 12078  0248  0872               	movf	?___ftpack+2,w
 12079  0249  00B2               	movwf	?___ftadd+2
 12080  024A  0008               	return
 12081  024B                     __end_of___ftadd:	
 12082                           
 12083                           	psect	text39
 12084  0869                     __ptext39:	
 12085 ;; *************** function ___awtoft *****************
 12086 ;; Defined at:
 12087 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;  c               2    8[COMMON] int 
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;  sign            1   13[COMMON] unsigned char 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  3    8[COMMON] float 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0, pclath, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;Total ram usage:        6 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; Hardware stack levels required when called:    1
 12108 ;; This function calls:
 12109 ;;		___ftpack
 12110 ;; This function is called by:
 12111 ;;		_PID_Calculate
 12112 ;;		_log
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           
 12117                           ;psect for function ___awtoft
 12118  0869                     ___awtoft:	
 12119                           
 12120                           ;incstack = 0
 12121                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 12122  0869  01FD               	clrf	___awtoft@sign
 12123  086A  1FF9               	btfss	___awtoft@c+1,7
 12124  086B  2873               	goto	l2663
 12125  086C  09F8               	comf	___awtoft@c,f
 12126  086D  09F9               	comf	___awtoft@c+1,f
 12127  086E  0AF8               	incf	___awtoft@c,f
 12128  086F  1903               	skipnz
 12129  0870  0AF9               	incf	___awtoft@c+1,f
 12130  0871  01FD               	clrf	___awtoft@sign
 12131  0872  0AFD               	incf	___awtoft@sign,f
 12132  0873                     l2663:	
 12133  0873  0878               	movf	___awtoft@c,w
 12134  0874  00F0               	movwf	___ftpack@arg
 12135  0875  0879               	movf	___awtoft@c+1,w
 12136  0876  00F1               	movwf	___ftpack@arg+1
 12137  0877  01F2               	clrf	___ftpack@arg+2
 12138  0878  308E               	movlw	142
 12139  0879  00FB               	movwf	??___awtoft
 12140  087A  087B               	movf	??___awtoft,w
 12141  087B  00F3               	movwf	___ftpack@exp
 12142  087C  087D               	movf	___awtoft@sign,w
 12143  087D  00FC               	movwf	??___awtoft+1
 12144  087E  087C               	movf	??___awtoft+1,w
 12145  087F  00F4               	movwf	___ftpack@sign
 12146  0880  318B  2351         	fcall	___ftpack
 12147  0882  0870               	movf	?___ftpack,w
 12148  0883  00F8               	movwf	?___awtoft
 12149  0884  0871               	movf	?___ftpack+1,w
 12150  0885  00F9               	movwf	?___awtoft+1
 12151  0886  0872               	movf	?___ftpack+2,w
 12152  0887  00FA               	movwf	?___awtoft+2
 12153  0888  0008               	return
 12154  0889                     __end_of___awtoft:	
 12155                           
 12156                           	psect	text40
 12157  0B51                     __ptext40:	
 12158 ;; *************** function ___ftpack *****************
 12159 ;; Defined at:
 12160 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  arg             3    0[COMMON] unsigned um
 12163 ;;  exp             1    3[COMMON] unsigned char 
 12164 ;;  sign            1    4[COMMON] unsigned char 
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  3    0[COMMON] float 
 12169 ;; Registers used:
 12170 ;;		wreg, status,2, status,0
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:        8 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		___awtoft
 12186 ;;		___ftadd
 12187 ;;		___ftdiv
 12188 ;;		___ftmul
 12189 ;;		___lbtoft
 12190 ;;		___lwtoft
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           
 12195                           ;psect for function ___ftpack
 12196  0B51                     ___ftpack:	
 12197                           
 12198                           ;incstack = 0
 12199                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12200  0B51  0873               	movf	___ftpack@exp,w
 12201  0B52  1903               	btfsc	3,2
 12202  0B53  2B59               	goto	l2107
 12203  0B54  0872               	movf	___ftpack@arg+2,w
 12204  0B55  0471               	iorwf	___ftpack@arg+1,w
 12205  0B56  0470               	iorwf	___ftpack@arg,w
 12206  0B57  1D03               	skipz
 12207  0B58  2B6A               	goto	l2113
 12208  0B59                     l2107:	
 12209  0B59  3000               	movlw	0
 12210  0B5A  00F0               	movwf	?___ftpack
 12211  0B5B  3000               	movlw	0
 12212  0B5C  00F1               	movwf	?___ftpack+1
 12213  0B5D  3000               	movlw	0
 12214  0B5E  00F2               	movwf	?___ftpack+2
 12215  0B5F  0008               	return
 12216  0B60                     l2111:	
 12217  0B60  3001               	movlw	1
 12218  0B61  00F5               	movwf	??___ftpack
 12219  0B62  0875               	movf	??___ftpack,w
 12220  0B63  07F3               	addwf	___ftpack@exp,f
 12221  0B64  3001               	movlw	1
 12222  0B65                     u1795:	
 12223  0B65  36F2               	lsrf	___ftpack@arg+2,f
 12224  0B66  0CF1               	rrf	___ftpack@arg+1,f
 12225  0B67  0CF0               	rrf	___ftpack@arg,f
 12226  0B68  0B89               	decfsz	9,f
 12227  0B69  2B65               	goto	u1795
 12228  0B6A                     l2113:	
 12229  0B6A  30FE               	movlw	254
 12230  0B6B  0572               	andwf	___ftpack@arg+2,w
 12231  0B6C  1903               	btfsc	3,2
 12232  0B6D  2B83               	goto	l644
 12233  0B6E  2B60               	goto	l2111
 12234  0B6F                     l2115:	
 12235  0B6F  3001               	movlw	1
 12236  0B70  00F5               	movwf	??___ftpack
 12237  0B71  0875               	movf	??___ftpack,w
 12238  0B72  07F3               	addwf	___ftpack@exp,f
 12239  0B73  3001               	movlw	1
 12240  0B74  07F0               	addwf	___ftpack@arg,f
 12241  0B75  3000               	movlw	0
 12242  0B76  1803               	skipnc
 12243  0B77  3001               	movlw	1
 12244  0B78  07F1               	addwf	___ftpack@arg+1,f
 12245  0B79  3000               	movlw	0
 12246  0B7A  1803               	skipnc
 12247  0B7B  3001               	movlw	1
 12248  0B7C  07F2               	addwf	___ftpack@arg+2,f
 12249  0B7D  3001               	movlw	1
 12250  0B7E                     u1815:	
 12251  0B7E  36F2               	lsrf	___ftpack@arg+2,f
 12252  0B7F  0CF1               	rrf	___ftpack@arg+1,f
 12253  0B80  0CF0               	rrf	___ftpack@arg,f
 12254  0B81  0B89               	decfsz	9,f
 12255  0B82  2B7E               	goto	u1815
 12256  0B83                     l644:	
 12257  0B83  30FF               	movlw	255
 12258  0B84  0572               	andwf	___ftpack@arg+2,w
 12259  0B85  1903               	btfsc	3,2
 12260  0B86  2B90               	goto	l2123
 12261  0B87  2B6F               	goto	l2115
 12262  0B88                     l2121:	
 12263  0B88  3001               	movlw	1
 12264  0B89  02F3               	subwf	___ftpack@exp,f
 12265  0B8A  3001               	movlw	1
 12266  0B8B                     u1835:	
 12267  0B8B  35F0               	lslf	___ftpack@arg,f
 12268  0B8C  0DF1               	rlf	___ftpack@arg+1,f
 12269  0B8D  0DF2               	rlf	___ftpack@arg+2,f
 12270  0B8E  0B89               	decfsz	9,f
 12271  0B8F  2B8B               	goto	u1835
 12272  0B90                     l2123:	
 12273  0B90  1BF1               	btfsc	___ftpack@arg+1,7
 12274  0B91  2B96               	goto	l651
 12275  0B92  3002               	movlw	2
 12276  0B93  0273               	subwf	___ftpack@exp,w
 12277  0B94  1803               	skipnc
 12278  0B95  2B88               	goto	l2121
 12279  0B96                     l651:	
 12280  0B96  1873               	btfsc	___ftpack@exp,0
 12281  0B97  2B9E               	goto	l652
 12282  0B98  30FF               	movlw	255
 12283  0B99  05F0               	andwf	___ftpack@arg,f
 12284  0B9A  307F               	movlw	127
 12285  0B9B  05F1               	andwf	___ftpack@arg+1,f
 12286  0B9C  30FF               	movlw	255
 12287  0B9D  05F2               	andwf	___ftpack@arg+2,f
 12288  0B9E                     l652:	
 12289  0B9E  1003               	clrc
 12290  0B9F  0CF3               	rrf	___ftpack@exp,f
 12291  0BA0  0873               	movf	___ftpack@exp,w
 12292  0BA1  00F5               	movwf	??___ftpack
 12293  0BA2  01F6               	clrf	??___ftpack+1
 12294  0BA3  01F7               	clrf	??___ftpack+2
 12295  0BA4  3010               	movlw	16
 12296  0BA5                     u1875:	
 12297  0BA5  35F5               	lslf	??___ftpack,f
 12298  0BA6  0DF6               	rlf	??___ftpack+1,f
 12299  0BA7  0DF7               	rlf	??___ftpack+2,f
 12300  0BA8  0B89               	decfsz	9,f
 12301  0BA9  2BA5               	goto	u1875
 12302  0BAA  0875               	movf	??___ftpack,w
 12303  0BAB  04F0               	iorwf	___ftpack@arg,f
 12304  0BAC  0876               	movf	??___ftpack+1,w
 12305  0BAD  04F1               	iorwf	___ftpack@arg+1,f
 12306  0BAE  0877               	movf	??___ftpack+2,w
 12307  0BAF  04F2               	iorwf	___ftpack@arg+2,f
 12308  0BB0  0874               	movf	___ftpack@sign,w
 12309  0BB1  1903               	btfsc	3,2
 12310  0BB2  0008               	return
 12311  0BB3  17F2               	bsf	___ftpack@arg+2,7
 12312  0BB4  0008               	return
 12313  0BB5                     __end_of___ftpack:	
 12314                           
 12315                           	psect	text41
 12316  174C                     __ptext41:	
 12317 ;; *************** function _ADCC_GetSingleConversion *****************
 12318 ;; Defined at:
 12319 ;;		line 52 in file "adcc.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  channel         1    wreg     enum E13559
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;  channel         1    3[COMMON] enum E13559
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  2    0[COMMON] unsigned int 
 12326 ;; Registers used:
 12327 ;;		wreg
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:        4 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_main
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346                           
 12347                           ;psect for function _ADCC_GetSingleConversion
 12348  174C                     _ADCC_GetSingleConversion:	
 12349                           
 12350                           ;incstack = 0
 12351                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12352                           ;ADCC_GetSingleConversion@channel stored from wreg
 12353  174C  00F3               	movwf	ADCC_GetSingleConversion@channel
 12354                           
 12355                           ;adcc.c: 55: ADPCH = channel;
 12356  174D  0873               	movf	ADCC_GetSingleConversion@channel,w
 12357  174E  0021               	movlb	1	; select bank1
 12358  174F  009E               	movwf	30	;volatile
 12359                           
 12360                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 12361  1750  1793               	bsf	19,7	;volatile
 12362                           
 12363                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 12364  1751  1313               	bcf	19,6	;volatile
 12365                           
 12366                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 12367  1752  1413               	bsf	19,0	;volatile
 12368  1753                     l224:	
 12369                           ;adcc.c: 68: {
 12370                           
 12371                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 12372                           
 12373  1753  1813               	btfsc	19,0	;volatile
 12374  1754  2F53               	goto	l224
 12375                           
 12376                           ;adcc.c: 69: }
 12377                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 12378  1755  080D               	movf	13,w	;volatile
 12379  1756  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12380  1757  080C               	movf	12,w	;volatile
 12381  1758  00F0               	movwf	?_ADCC_GetSingleConversion
 12382  1759  0008               	return
 12383  175A                     __end_of_ADCC_GetSingleConversion:	
 12384  007E                     btemp	set	126	;btemp
 12385  007E                     wtemp	set	126
 12386  007E                     wtemp0	set	126
 12387  0080                     wtemp1	set	128
 12388  0082                     wtemp2	set	130
 12389  0084                     wtemp3	set	132
 12390  0086                     wtemp4	set	134
 12391  0088                     wtemp5	set	136
 12392  007F                     wtemp6	set	127
 12393  007E                     ttemp	set	126
 12394  007E                     ttemp0	set	126
 12395  0081                     ttemp1	set	129
 12396  0084                     ttemp2	set	132
 12397  0087                     ttemp3	set	135
 12398  007F                     ttemp4	set	127
 12399  007E                     ltemp	set	126
 12400  007E                     ltemp0	set	126
 12401  0082                     ltemp1	set	130
 12402  0086                     ltemp2	set	134
 12403  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    27
    Data        33
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     40      72
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   68663
                                              0 BANK1     40    40      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8710
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4331
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     427
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     857
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18730
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7683
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             58 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4176
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       20    15      5   11275
                                             38 BANK0     20    15      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     350
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1064
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4003
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2459
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Sep 09 16:27:53 2017

                                _x 006C                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                     _PID_Prev_Input 00D9  
              ___wmul@multiplicand 0072        __size_of_PWM6_LoadDutyValue 0016  
                     ___ftadd@exp1 003C                       ___ftadd@exp2 003B  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 003A  
                              l111 17AE                                l113 17B3  
                              l107 17A3                                l109 17A9  
                              l224 1753                                l341 02F4  
                              l347 0414                                l390 051F  
                              l391 052B                                l538 0C41  
                              l651 0B96                                l483 0838  
                              l652 0B9E                                l644 0B83  
                              l735 0072                                l675 01F4  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RA3 0063  
                              _RB2 006A                                _RA4 0064  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _log 0DDE                       ___awmod@sign 0076  
                  _TMR2_Initialize 1769                       __CFG_BORV$LO 0000  
                              wreg 0009                    __end_of_LCD_Cmd 178A  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 002A  
                   _LCD_Set_Cursor 0A1C                       ___ftdiv@sign 002F  
                             l2111 0B60                               l2121 0B88  
                             l2113 0B6A                               l2201 0A7E  
                             l2123 0B90                               l2115 0B6F  
                             l2107 0B59                               l2061 17A5  
                             l3021 0083                               l2213 0A9B  
                             l2205 0A8A                               l3015 0069  
                             l3007 004E                               l2143 0AAA  
                             l3103 0513                               l2321 0184  
                             l2065 17AA                               l3017 0075  
                             l3009 005C                               l3041 0949  
                             l2161 0AC9                               l2209 0A93  
                             l3051 0964                               l2171 0AE4  
                             l3115 0591                               l2317 017D  
                             l2421 0F1A                               l2405 0EF6  
                             l2069 17AF                               l2229 0A3C  
                             l2149 0AB5                               l2245 0818  
                             l2351 01D3                               l2327 0193  
                             l3047 095B                               l3039 093D  
                             l2175 0AEC                               l2167 0ADB  
                             l2159 0ABD                               l2191 0A6C  
                             l2271 00E1                               l3151 0718  
                             l3119 059E                               l2345 01C0  
                             l2417 0F12                               l2409 0EFE  
                             l2281 0104                               l2363 0206  
                             l2347 01CA                               l2339 01AD  
                             l2187 0A65                               l2275 00E5  
                             l2259 00AD                               l3091 04EA  
                             l2357 01E6                               l2349 01CF  
                             l2293 0141                               l2277 00EA  
                             l2269 00B4                               l3173 0766  
                             l2367 0218                               l2359 01F0  
                             l2703 097B                               l2199 0A72  
                             l2287 0108                               l2279 00F3  
                             l3079 0461                               l2377 0233  
                             l2393 0EBB                               l2721 0B4A  
                             l2289 0134                               l2387 0EA5  
                             l2299 0832                               l2643 0D23  
                             l2635 0D13                               l2803 0FA4  
                             l3187 07B4                               l3179 0775  
                             l2653 0D33                               l2645 0D24  
                             l2663 0873                               l2671 09BB  
                             l2583 08A7                               l2911 0C62  
                             l2903 0C52                               l2823 0FE4  
                             l2577 0896                               l2921 0C90  
                             l2913 0C70                               l2675 09D1  
                             l2853 0387                               l2845 0334  
                             l2925 0C9B                               l2839 0323  
                             l2775 0F5A                               l2857 03AF  
                             l2929 0CA9                               l2945 0D62  
                             l2867 043C                               l2939 0D4C  
                             l2883 0E10                               l2795 0F49  
                             l2877 0DFD                               l2797 0F99  
                             l2967 0DBC                               l2959 0DA3  
                             l2979 0853                               l2989 001E  
                             ?_log 0047                               STR_1 101B  
                             STR_2 101B                               STR_3 101B  
                             u2025 0A75                               u2130 0097  
                             u2115 0A47                               u2045 0A84  
                             _LATA 0016                               _LATB 0017  
                             u3015 0C71                               u2055 0A8B  
                             _LATC 0018                               u3025 0C85  
                             u3105 0DA4                               u3035 0C91  
                             u3115 0DB3                               u2235 0839  
                             u3125 0DBD                               u2245 083E  
                             u2415 01D4                               u2095 0A28  
                             u3225 006A                               u3305 095C  
                             u2610 0933                               _T2PR 028D  
                             u2355 01AE                               u2515 0EC7  
                             u2195 0122                               u2445 01E7  
                             u2525 0ED7                               u3085 0D74  
                             u3165 0025                               u1815 0B7E  
                             u3095 0D84                               u2385 01C1  
                             u2545 0EFF                               u3265 0940  
                      main@counter 00B5                               u1835 0B8B  
                             u2555 0F05                               u3507 0BBE  
                             u3195 004F                               u3355 0519  
                             u2805 080F                               u1765 08BF  
                             u3517 0BCB                               u3285 094A  
                             u1925 0AC0                               u3437 0F90  
                             u3365 0525                               u3607 08CB  
                             u3527 0BD6                               u3295 0954  
                             u3447 0FDC                               u2585 0F1B  
                             u2905 0343                               u3617 08D6  
                             u3537 0BDF                               u1945 0ACA  
                             u3457 0FF6                               u1875 0BA5  
                             u1795 0B65                               u2595 0F21  
                             u3627 1784                               u3547 0BE8  
                             u1955 0AD4                               u3467 0D07  
                             u3557 0BF5                               u3477 09FC  
                             u1965 0ADC                               u3567 0C02  
                             u3487 0A08                               u3577 0C0F  
                             u3497 0A14                               u3587 0C1E  
                             u3597 0C2C                               u2995 0C65  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                ?_LCD_Write_String 0075                        main@minutes 00AA  
                      main@seconds 00B2                               _main 0444  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                 ??_LCD_Write_String 0077  
                             ttemp 007E                               wtemp 007E  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 008C  
                     ___ftmul@sign 002F                       ___fttol@exp1 0067  
                     ___fttol@lval 0063                              ??_log 004A  
          __end_of_TMR0_Initialize 1769                   __end_of_LCD_Init 0C30  
                 __end_of_LCD_Port 17B5                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 1727  
                  __end_of___aldiv 0CB2                              _ADACQ 009D  
                            _ADCAP 009B                              _ADACT 0099  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0AF1                              _ADPRE 009C  
                  __end_of___ftadd 024B                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0AA0                              _ADRPT 010D  
                  __end_of___ftdiv 0DDE                    __end_of___ftneg 1717  
                  __end_of___ftmul 0F42                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0869                    __end_of___fttol 008C  
                            _T2CON 028E                main@readTemperature 00C3  
                            _T2HLT 028F                    __end_of___lwdiv 0969  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 173F  
           __end_of_LCD_Set_Cursor 0A5B                      ___awtoft@sign 007D  
                            _frexp 0969                              _errno 00DC  
                    ___ftpack@sign 0074                              main@R 00AC  
                   __CFG_BOREN$OFF 0000                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0076                     ?_LCD_Write_Int 0079  
                   _LCD_Write_Char 08AF                    __initialization 07BB  
                      log@exponent 004B                       __end_of_main 07BB  
                 __end_of_Init_PID 0903            __end_of_TMR2_Initialize 1778  
                           ??_main 00A0                      ___fttol@sign1 0062  
                __end_of_LCD_Clear 171F                          ??_LCD_Cmd 0071  
                  ?_LCD_Set_Cursor 0073                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             ?_frexp 0070  
                           _ADLTHH 010F                             _ADLTHL 010E  
                           _ADRESH 008D                             _ADRESL 008C  
                           _ADSTAT 0097                             _ADUTHH 0111  
                 ___awdiv@dividend 0072                             _ADUTHL 0110  
                 __end_of___awtoft 0889                             _ANSELA 0F38  
                           _ANSELB 0F43                             _ANSELC 0F4E  
                 __end_of___ftpack 0BB5                   __end_of___lbtoft 1800  
               __CFG_RSTOSC$HFINT1 0000                             _T0CON0 001E  
                           _T0CON1 001F                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 179D                             _PID_Kd 00D0  
                           _PID_Ki 00D3                             _PID_Kp 00D6  
                           _OSCFRQ 0893                             _TMR0IF 3865  
           __end_of_LCD_Write_Char 08D9                     __CFG_PWRTE$OFF 0000  
                     _CCPTMRS1bits 021F                             ___ftge 09A4  
           LCD_Write_Int@numPlaces 007C                          ??___aldiv 0078  
                           ___wmul 0830                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0026  
                        ??___ftneg 0073                          ??___ftmul 0026  
                        ??___ftsub 007E                          ??___fttol 005E  
                        ??___lwdiv 007A                   ?_TMR0_Initialize 0070  
          __end_of_PWM6_Initialize 174C                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
            ___ftmul@f3_as_product 002B                    _ADCC_Initialize 17CD  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                 LCD_Write_Int@str 0025                      main@steinhart 00C5  
                  _InitCustomChars 0889                    LCD_Set_Cursor@w 0078  
                  LCD_Set_Cursor@x 0076                    LCD_Set_Cursor@y 0073  
                  LCD_Set_Cursor@z 0077                  _SYSTEM_Initialize 09E0  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005A  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK0 1706                       __pidataBANK1 1709  
                     __pidataBANK2 17B5                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 09A4                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0083  
            PID_Calculate@ErrValue 0051                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0A1C                         __pbssBANK0 0068  
                       __pbssBANK1 00C8                 __size_of_eval_poly 0060  
                        ?_Init_PID 0070                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070             __size_of_PID_Calculate 01F9  
              PID_Calculate@Result 0057                         __pmaintext 0444  
                          ?___ftge 003D                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 17E6  
       __end_of_PWM6_LoadDutyValue 0816          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 08AF  
                          _LCD_Cmd 1778                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                       ??_Init_PID 0070              PID_Calculate@setpoint 0046  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0C30                            ___cgram 0120  
                  __size_of___ftge 003C                            ___awdiv 0AA0  
                          ___ftadd 0155                            ___awmod 0A5B  
                          ___ftdiv 0D35                            ___ftneg 170F  
                  __size_of___wmul 001B                            ___ftmul 0E8E  
                          ___ftsub 084B                            ___fttol 0005  
                          ___lwdiv 0935                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0B51                   ??_LCD_Set_Cursor 0074  
                          __ptext1 0F42                            __ptext2 0CB2  
                          __ptext3 0816                            __ptext4 008C  
                          __ptext5 0A5B                            __ptext6 0AA0  
                          __ptext7 0A1C                            __ptext8 0DDE  
                          __ptext9 0969                         ??___lwtoft 007B  
                    _PID_Calculate 024B              _OSCILLATOR_Initialize 171F  
                        _T2CONbits 028E                       __size_of_log 00B0  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _upCount 006B  
                          _samples 238C                          _LCD_Clear 1717  
                          _presets 00E2         __size_of_SYSTEM_Initialize 003C  
                          clrloop0 1728               end_of_initialization 07FD  
                          init_ram 1733                            initloop 1734  
                   ??_tempSetpoint 0031                      _PID_MaxOutput 006D  
                 ___aldiv@quotient 0022                  LCD_Write_Int@sign 007D  
                    _PID_MinOutput 0068                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 175A              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0046                 _PID_Calculate$1053 004E  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 007B  
                       main@toggle 00BA                  __size_of_LCD_Port 0018  
                       main@totals 00BB                        ___ftmul@exp 002A  
                   __end_of___ftge 09E0                     __end_of___wmul 084B  
                 _LCD_Write_String 0816             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07BB                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 0E8E                         frexp@value 0070  
         LCD_Write_Int@fieldLength 007B                  __size_of_Init_PID 002A  
            __end_of_LCD_Write_Int 0155                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 0074  
                      __pdataBANK0 006D                        __pdataBANK1 00E2  
                      __pdataBANK2 0120                    ??_PID_Calculate 007E  
                    ??_readButtons 002E                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 174C  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 1000                 _PWM6_LoadDutyValue 0800  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070                          _main$1054 00AF  
                 ___lwdiv@dividend 0078             _PIN_MANAGER_Initialize 0903  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 005A  
                         ?___lwdiv 0076                    main@displayTemp 00C1  
             ??_PWM6_LoadDutyValue 0072                          _downCount 006A  
                        _eval_poly 0AF1                __end_of_readButtons 0D35  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
           main@readTemperatureOld 00BF                    ___aldiv@divisor 0070  
                ??_TMR0_Initialize 0070                    ___aldiv@counter 0020  
                         _LCD_Init 0BB5                     ___wmul@product 0074  
                         _LCD_Port 179D                          clear_ram0 1727  
                         _PIE0bits 0716                           _PIR0bits 070C  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0070       PID_Calculate@DerivativeValue 004B  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 0830                           _Init_PID 08D9  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
             main@firstTimeThrough 00B4            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 002C                     LCD_Write_Int@j 002A  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0008  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0087                   __size_of___lwdiv 0034  
                      _readButtons 0CB2                           ___awtoft 0869  
                         ___ftpack 0B51                           ___lbtoft 17E6  
            __size_of_tempSetpoint 00BE                           ___lwtoft 178A  
                       _T0CON0bits 001E           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 00DE                    ___lwdiv@divisor 0076  
                      _oldSetpoint 00E0                    ___lwdiv@counter 007D  
                PID_Calculate@temp 0048                           __ptext10 0AF1  
                         __ptext11 0830                           __ptext20 1769  
                         __ptext12 178A                           __ptext21 175A  
                         __ptext13 0935                           __ptext30 1778  
                         __ptext22 173F                           __ptext14 17E6  
                         __ptext31 179D                           __ptext23 0903  
                         __ptext15 0005                           __ptext40 0B51  
                         __ptext32 17CD                           __ptext24 171F  
                         __ptext16 084B                           __ptext41 174C  
                         __ptext33 0800                           __ptext25 0BB5  
                         __ptext17 0D35                           __ptext34 024B  
                         __ptext26 1717                           __ptext18 0C30  
                         __ptext35 170F                           __ptext27 08D9  
                         __ptext19 09E0                           __ptext36 0E8E  
                         __ptext28 0889                           __ptext37 09A4  
                         __ptext29 08AF                           __ptext38 0155  
                         __ptext39 0869            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0026                LCD_Write_Int@F13695 00C8  
                ??_PWM6_Initialize 0070                      __size_of_main 0377  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 0F42  
       ??_ADCC_GetSingleConversion 0073                           _setpoint 006F  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
                 PID_Calculate@Err 0054            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
                   _PID_First_Time 00E7            __size_of_LCD_Write_Char 002A  
                 main@startupTimer 00B7                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 0444  
                  _TMR0_Initialize 175A                     _PID_Integrated 00CD  
                     ___aldiv@sign 0021             __size_of_LCD_Write_Int 00C9  
      PWM6_LoadDutyValue@dutyValue 0070     __end_of_PIN_MANAGER_Initialize 0935  
                ??_ADCC_Initialize 0070                     main@PWM_Output 00B8  
                      _toggleCount 00E1                  ??_InitCustomChars 0075  
