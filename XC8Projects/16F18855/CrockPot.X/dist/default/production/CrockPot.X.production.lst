

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Sep 07 15:22:41 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5BC,52
    57                           	dabs	1,0x238C,0,_samples
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  001C                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0119                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011C                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0198                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  020F                     	;# 
   168  020F                     	;# 
   169  0210                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0218                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028D                     	;# 
   197  028E                     	;# 
   198  028F                     	;# 
   199  0290                     	;# 
   200  0290                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0296                     	;# 
   210  0297                     	;# 
   211  0298                     	;# 
   212  0298                     	;# 
   213  0299                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029C                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  030C                     	;# 
   221  030C                     	;# 
   222  030D                     	;# 
   223  030E                     	;# 
   224  030F                     	;# 
   225  0310                     	;# 
   226  0310                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0314                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  040C                     	;# 
   252  040D                     	;# 
   253  040E                     	;# 
   254  040F                     	;# 
   255  0410                     	;# 
   256  0411                     	;# 
   257  0416                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  0418                     	;# 
   262  0419                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  048C                     	;# 
   272  048C                     	;# 
   273  048D                     	;# 
   274  048E                     	;# 
   275  048F                     	;# 
   276  048F                     	;# 
   277  0490                     	;# 
   278  0491                     	;# 
   279  0492                     	;# 
   280  0492                     	;# 
   281  0493                     	;# 
   282  0494                     	;# 
   283  0495                     	;# 
   284  0495                     	;# 
   285  0496                     	;# 
   286  0497                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  050C                     	;# 
   294  050C                     	;# 
   295  050D                     	;# 
   296  050E                     	;# 
   297  050F                     	;# 
   298  050F                     	;# 
   299  0510                     	;# 
   300  0511                     	;# 
   301  0512                     	;# 
   302  0512                     	;# 
   303  0513                     	;# 
   304  0514                     	;# 
   305  0515                     	;# 
   306  0515                     	;# 
   307  0516                     	;# 
   308  0517                     	;# 
   309  0518                     	;# 
   310  0519                     	;# 
   311  051A                     	;# 
   312  051B                     	;# 
   313  051C                     	;# 
   314  051D                     	;# 
   315  058C                     	;# 
   316  058C                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0591                     	;# 
   323  0592                     	;# 
   324  0593                     	;# 
   325  060C                     	;# 
   326  060D                     	;# 
   327  060E                     	;# 
   328  060F                     	;# 
   329  0610                     	;# 
   330  0611                     	;# 
   331  0612                     	;# 
   332  0613                     	;# 
   333  0614                     	;# 
   334  0616                     	;# 
   335  0617                     	;# 
   336  0618                     	;# 
   337  0619                     	;# 
   338  061A                     	;# 
   339  061B                     	;# 
   340  061C                     	;# 
   341  061D                     	;# 
   342  061E                     	;# 
   343  068C                     	;# 
   344  068D                     	;# 
   345  068E                     	;# 
   346  068F                     	;# 
   347  0690                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  070C                     	;# 
   353  070D                     	;# 
   354  070E                     	;# 
   355  070F                     	;# 
   356  0710                     	;# 
   357  0711                     	;# 
   358  0712                     	;# 
   359  0713                     	;# 
   360  0714                     	;# 
   361  0716                     	;# 
   362  0717                     	;# 
   363  0718                     	;# 
   364  0719                     	;# 
   365  071A                     	;# 
   366  071B                     	;# 
   367  071C                     	;# 
   368  071D                     	;# 
   369  071E                     	;# 
   370  0796                     	;# 
   371  0797                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  079A                     	;# 
   375  079B                     	;# 
   376  080C                     	;# 
   377  080D                     	;# 
   378  080E                     	;# 
   379  080F                     	;# 
   380  0810                     	;# 
   381  0811                     	;# 
   382  0812                     	;# 
   383  0813                     	;# 
   384  0814                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  081E                     	;# 
   390  081F                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  089A                     	;# 
   405  089B                     	;# 
   406  090C                     	;# 
   407  090E                     	;# 
   408  090F                     	;# 
   409  091F                     	;# 
   410  091F                     	;# 
   411  098F                     	;# 
   412  098F                     	;# 
   413  0990                     	;# 
   414  0991                     	;# 
   415  0992                     	;# 
   416  0993                     	;# 
   417  0994                     	;# 
   418  0995                     	;# 
   419  0996                     	;# 
   420  0997                     	;# 
   421  0E0F                     	;# 
   422  0E10                     	;# 
   423  0E11                     	;# 
   424  0E12                     	;# 
   425  0E13                     	;# 
   426  0E14                     	;# 
   427  0E15                     	;# 
   428  0E16                     	;# 
   429  0E17                     	;# 
   430  0E18                     	;# 
   431  0E19                     	;# 
   432  0E1A                     	;# 
   433  0E1B                     	;# 
   434  0E1C                     	;# 
   435  0E1D                     	;# 
   436  0E1E                     	;# 
   437  0E1F                     	;# 
   438  0E20                     	;# 
   439  0E21                     	;# 
   440  0E22                     	;# 
   441  0E23                     	;# 
   442  0E24                     	;# 
   443  0E25                     	;# 
   444  0E26                     	;# 
   445  0E27                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E2C                     	;# 
   451  0E2D                     	;# 
   452  0E2E                     	;# 
   453  0E2F                     	;# 
   454  0E30                     	;# 
   455  0E31                     	;# 
   456  0E32                     	;# 
   457  0E33                     	;# 
   458  0E34                     	;# 
   459  0E35                     	;# 
   460  0E36                     	;# 
   461  0E37                     	;# 
   462  0E8F                     	;# 
   463  0E90                     	;# 
   464  0E91                     	;# 
   465  0E92                     	;# 
   466  0E93                     	;# 
   467  0E94                     	;# 
   468  0E95                     	;# 
   469  0E96                     	;# 
   470  0E97                     	;# 
   471  0E9C                     	;# 
   472  0E9D                     	;# 
   473  0E9E                     	;# 
   474  0EA1                     	;# 
   475  0EA2                     	;# 
   476  0EA3                     	;# 
   477  0EA4                     	;# 
   478  0EA5                     	;# 
   479  0EA9                     	;# 
   480  0EAA                     	;# 
   481  0EAB                     	;# 
   482  0EAC                     	;# 
   483  0EB1                     	;# 
   484  0EB2                     	;# 
   485  0EB3                     	;# 
   486  0EB8                     	;# 
   487  0EB9                     	;# 
   488  0EBA                     	;# 
   489  0EBB                     	;# 
   490  0EBC                     	;# 
   491  0EBD                     	;# 
   492  0EBE                     	;# 
   493  0EC3                     	;# 
   494  0EC5                     	;# 
   495  0EC6                     	;# 
   496  0EC7                     	;# 
   497  0EC8                     	;# 
   498  0EC9                     	;# 
   499  0ECA                     	;# 
   500  0ECB                     	;# 
   501  0ECC                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F38                     	;# 
   527  0F39                     	;# 
   528  0F3A                     	;# 
   529  0F3B                     	;# 
   530  0F3C                     	;# 
   531  0F3D                     	;# 
   532  0F3E                     	;# 
   533  0F3F                     	;# 
   534  0F40                     	;# 
   535  0F41                     	;# 
   536  0F43                     	;# 
   537  0F44                     	;# 
   538  0F45                     	;# 
   539  0F46                     	;# 
   540  0F47                     	;# 
   541  0F48                     	;# 
   542  0F49                     	;# 
   543  0F4A                     	;# 
   544  0F4B                     	;# 
   545  0F4C                     	;# 
   546  0F4E                     	;# 
   547  0F4F                     	;# 
   548  0F50                     	;# 
   549  0F51                     	;# 
   550  0F52                     	;# 
   551  0F53                     	;# 
   552  0F54                     	;# 
   553  0F55                     	;# 
   554  0F56                     	;# 
   555  0F57                     	;# 
   556  0F65                     	;# 
   557  0F68                     	;# 
   558  0F69                     	;# 
   559  0F6A                     	;# 
   560  0F6B                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  001C                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0110                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0114                     	;# 
   634  0115                     	;# 
   635  0116                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0119                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011C                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011D                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011E                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  018F                     	;# 
   667  0190                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0196                     	;# 
   671  0197                     	;# 
   672  0198                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  020C                     	;# 
   678  020D                     	;# 
   679  020E                     	;# 
   680  020F                     	;# 
   681  020F                     	;# 
   682  0210                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  0218                     	;# 
   696  0219                     	;# 
   697  021A                     	;# 
   698  021B                     	;# 
   699  021B                     	;# 
   700  021C                     	;# 
   701  021C                     	;# 
   702  021D                     	;# 
   703  021D                     	;# 
   704  021E                     	;# 
   705  021F                     	;# 
   706  028C                     	;# 
   707  028C                     	;# 
   708  028D                     	;# 
   709  028D                     	;# 
   710  028E                     	;# 
   711  028F                     	;# 
   712  0290                     	;# 
   713  0290                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0292                     	;# 
   717  0293                     	;# 
   718  0293                     	;# 
   719  0294                     	;# 
   720  0295                     	;# 
   721  0296                     	;# 
   722  0296                     	;# 
   723  0297                     	;# 
   724  0298                     	;# 
   725  0298                     	;# 
   726  0299                     	;# 
   727  0299                     	;# 
   728  029A                     	;# 
   729  029B                     	;# 
   730  029C                     	;# 
   731  029C                     	;# 
   732  029D                     	;# 
   733  030C                     	;# 
   734  030C                     	;# 
   735  030D                     	;# 
   736  030E                     	;# 
   737  030F                     	;# 
   738  0310                     	;# 
   739  0310                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0314                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0317                     	;# 
   748  0318                     	;# 
   749  0318                     	;# 
   750  0319                     	;# 
   751  031A                     	;# 
   752  031B                     	;# 
   753  031C                     	;# 
   754  031C                     	;# 
   755  031D                     	;# 
   756  031E                     	;# 
   757  031F                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  040C                     	;# 
   765  040D                     	;# 
   766  040E                     	;# 
   767  040F                     	;# 
   768  0410                     	;# 
   769  0411                     	;# 
   770  0416                     	;# 
   771  0416                     	;# 
   772  0417                     	;# 
   773  0418                     	;# 
   774  0418                     	;# 
   775  0419                     	;# 
   776  041A                     	;# 
   777  041A                     	;# 
   778  041B                     	;# 
   779  041C                     	;# 
   780  041C                     	;# 
   781  041D                     	;# 
   782  041E                     	;# 
   783  041F                     	;# 
   784  048C                     	;# 
   785  048C                     	;# 
   786  048D                     	;# 
   787  048E                     	;# 
   788  048F                     	;# 
   789  048F                     	;# 
   790  0490                     	;# 
   791  0491                     	;# 
   792  0492                     	;# 
   793  0492                     	;# 
   794  0493                     	;# 
   795  0494                     	;# 
   796  0495                     	;# 
   797  0495                     	;# 
   798  0496                     	;# 
   799  0497                     	;# 
   800  0498                     	;# 
   801  0499                     	;# 
   802  049A                     	;# 
   803  049B                     	;# 
   804  049C                     	;# 
   805  049D                     	;# 
   806  050C                     	;# 
   807  050C                     	;# 
   808  050D                     	;# 
   809  050E                     	;# 
   810  050F                     	;# 
   811  050F                     	;# 
   812  0510                     	;# 
   813  0511                     	;# 
   814  0512                     	;# 
   815  0512                     	;# 
   816  0513                     	;# 
   817  0514                     	;# 
   818  0515                     	;# 
   819  0515                     	;# 
   820  0516                     	;# 
   821  0517                     	;# 
   822  0518                     	;# 
   823  0519                     	;# 
   824  051A                     	;# 
   825  051B                     	;# 
   826  051C                     	;# 
   827  051D                     	;# 
   828  058C                     	;# 
   829  058C                     	;# 
   830  058D                     	;# 
   831  058E                     	;# 
   832  058F                     	;# 
   833  058F                     	;# 
   834  0590                     	;# 
   835  0591                     	;# 
   836  0592                     	;# 
   837  0593                     	;# 
   838  060C                     	;# 
   839  060D                     	;# 
   840  060E                     	;# 
   841  060F                     	;# 
   842  0610                     	;# 
   843  0611                     	;# 
   844  0612                     	;# 
   845  0613                     	;# 
   846  0614                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061D                     	;# 
   855  061E                     	;# 
   856  068C                     	;# 
   857  068D                     	;# 
   858  068E                     	;# 
   859  068F                     	;# 
   860  0690                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  070C                     	;# 
   866  070D                     	;# 
   867  070E                     	;# 
   868  070F                     	;# 
   869  0710                     	;# 
   870  0711                     	;# 
   871  0712                     	;# 
   872  0713                     	;# 
   873  0714                     	;# 
   874  0716                     	;# 
   875  0717                     	;# 
   876  0718                     	;# 
   877  0719                     	;# 
   878  071A                     	;# 
   879  071B                     	;# 
   880  071C                     	;# 
   881  071D                     	;# 
   882  071E                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081B                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  091F                     	;# 
   924  098F                     	;# 
   925  098F                     	;# 
   926  0990                     	;# 
   927  0991                     	;# 
   928  0992                     	;# 
   929  0993                     	;# 
   930  0994                     	;# 
   931  0995                     	;# 
   932  0996                     	;# 
   933  0997                     	;# 
   934  0E0F                     	;# 
   935  0E10                     	;# 
   936  0E11                     	;# 
   937  0E12                     	;# 
   938  0E13                     	;# 
   939  0E14                     	;# 
   940  0E15                     	;# 
   941  0E16                     	;# 
   942  0E17                     	;# 
   943  0E18                     	;# 
   944  0E19                     	;# 
   945  0E1A                     	;# 
   946  0E1B                     	;# 
   947  0E1C                     	;# 
   948  0E1D                     	;# 
   949  0E1E                     	;# 
   950  0E1F                     	;# 
   951  0E20                     	;# 
   952  0E21                     	;# 
   953  0E22                     	;# 
   954  0E23                     	;# 
   955  0E24                     	;# 
   956  0E25                     	;# 
   957  0E26                     	;# 
   958  0E27                     	;# 
   959  0E28                     	;# 
   960  0E29                     	;# 
   961  0E2A                     	;# 
   962  0E2B                     	;# 
   963  0E2C                     	;# 
   964  0E2D                     	;# 
   965  0E2E                     	;# 
   966  0E2F                     	;# 
   967  0E30                     	;# 
   968  0E31                     	;# 
   969  0E32                     	;# 
   970  0E33                     	;# 
   971  0E34                     	;# 
   972  0E35                     	;# 
   973  0E36                     	;# 
   974  0E37                     	;# 
   975  0E8F                     	;# 
   976  0E90                     	;# 
   977  0E91                     	;# 
   978  0E92                     	;# 
   979  0E93                     	;# 
   980  0E94                     	;# 
   981  0E95                     	;# 
   982  0E96                     	;# 
   983  0E97                     	;# 
   984  0E9C                     	;# 
   985  0E9D                     	;# 
   986  0E9E                     	;# 
   987  0EA1                     	;# 
   988  0EA2                     	;# 
   989  0EA3                     	;# 
   990  0EA4                     	;# 
   991  0EA5                     	;# 
   992  0EA9                     	;# 
   993  0EAA                     	;# 
   994  0EAB                     	;# 
   995  0EAC                     	;# 
   996  0EB1                     	;# 
   997  0EB2                     	;# 
   998  0EB3                     	;# 
   999  0EB8                     	;# 
  1000  0EB9                     	;# 
  1001  0EBA                     	;# 
  1002  0EBB                     	;# 
  1003  0EBC                     	;# 
  1004  0EBD                     	;# 
  1005  0EBE                     	;# 
  1006  0EC3                     	;# 
  1007  0EC5                     	;# 
  1008  0EC6                     	;# 
  1009  0EC7                     	;# 
  1010  0EC8                     	;# 
  1011  0EC9                     	;# 
  1012  0ECA                     	;# 
  1013  0ECB                     	;# 
  1014  0ECC                     	;# 
  1015  0F10                     	;# 
  1016  0F11                     	;# 
  1017  0F12                     	;# 
  1018  0F13                     	;# 
  1019  0F14                     	;# 
  1020  0F15                     	;# 
  1021  0F16                     	;# 
  1022  0F17                     	;# 
  1023  0F18                     	;# 
  1024  0F19                     	;# 
  1025  0F1A                     	;# 
  1026  0F1B                     	;# 
  1027  0F1C                     	;# 
  1028  0F1D                     	;# 
  1029  0F1E                     	;# 
  1030  0F1F                     	;# 
  1031  0F20                     	;# 
  1032  0F21                     	;# 
  1033  0F22                     	;# 
  1034  0F23                     	;# 
  1035  0F24                     	;# 
  1036  0F25                     	;# 
  1037  0F26                     	;# 
  1038  0F27                     	;# 
  1039  0F38                     	;# 
  1040  0F39                     	;# 
  1041  0F3A                     	;# 
  1042  0F3B                     	;# 
  1043  0F3C                     	;# 
  1044  0F3D                     	;# 
  1045  0F3E                     	;# 
  1046  0F3F                     	;# 
  1047  0F40                     	;# 
  1048  0F41                     	;# 
  1049  0F43                     	;# 
  1050  0F44                     	;# 
  1051  0F45                     	;# 
  1052  0F46                     	;# 
  1053  0F47                     	;# 
  1054  0F48                     	;# 
  1055  0F49                     	;# 
  1056  0F4A                     	;# 
  1057  0F4B                     	;# 
  1058  0F4C                     	;# 
  1059  0F4E                     	;# 
  1060  0F4F                     	;# 
  1061  0F50                     	;# 
  1062  0F51                     	;# 
  1063  0F52                     	;# 
  1064  0F53                     	;# 
  1065  0F54                     	;# 
  1066  0F55                     	;# 
  1067  0F56                     	;# 
  1068  0F57                     	;# 
  1069  0F65                     	;# 
  1070  0F68                     	;# 
  1071  0F69                     	;# 
  1072  0F6A                     	;# 
  1073  0F6B                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0010                     	;# 
  1101  0011                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  001C                     	;# 
  1108  001C                     	;# 
  1109  001D                     	;# 
  1110  001D                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008C                     	;# 
  1115  008D                     	;# 
  1116  008E                     	;# 
  1117  008E                     	;# 
  1118  008F                     	;# 
  1119  0090                     	;# 
  1120  0090                     	;# 
  1121  0091                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  010E                     	;# 
  1138  010F                     	;# 
  1139  0110                     	;# 
  1140  0110                     	;# 
  1141  0111                     	;# 
  1142  0112                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0119                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011C                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011D                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011E                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178  018E                     	;# 
  1179  018F                     	;# 
  1180  0190                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0198                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019C                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020F                     	;# 
  1194  020F                     	;# 
  1195  0210                     	;# 
  1196  0210                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0213                     	;# 
  1201  0214                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0216                     	;# 
  1205  0216                     	;# 
  1206  0217                     	;# 
  1207  0217                     	;# 
  1208  0218                     	;# 
  1209  0219                     	;# 
  1210  021A                     	;# 
  1211  021B                     	;# 
  1212  021B                     	;# 
  1213  021C                     	;# 
  1214  021C                     	;# 
  1215  021D                     	;# 
  1216  021D                     	;# 
  1217  021E                     	;# 
  1218  021F                     	;# 
  1219  028C                     	;# 
  1220  028C                     	;# 
  1221  028D                     	;# 
  1222  028D                     	;# 
  1223  028E                     	;# 
  1224  028F                     	;# 
  1225  0290                     	;# 
  1226  0290                     	;# 
  1227  0291                     	;# 
  1228  0292                     	;# 
  1229  0292                     	;# 
  1230  0293                     	;# 
  1231  0293                     	;# 
  1232  0294                     	;# 
  1233  0295                     	;# 
  1234  0296                     	;# 
  1235  0296                     	;# 
  1236  0297                     	;# 
  1237  0298                     	;# 
  1238  0298                     	;# 
  1239  0299                     	;# 
  1240  0299                     	;# 
  1241  029A                     	;# 
  1242  029B                     	;# 
  1243  029C                     	;# 
  1244  029C                     	;# 
  1245  029D                     	;# 
  1246  030C                     	;# 
  1247  030C                     	;# 
  1248  030D                     	;# 
  1249  030E                     	;# 
  1250  030F                     	;# 
  1251  0310                     	;# 
  1252  0310                     	;# 
  1253  0311                     	;# 
  1254  0312                     	;# 
  1255  0313                     	;# 
  1256  0314                     	;# 
  1257  0314                     	;# 
  1258  0315                     	;# 
  1259  0316                     	;# 
  1260  0317                     	;# 
  1261  0318                     	;# 
  1262  0318                     	;# 
  1263  0319                     	;# 
  1264  031A                     	;# 
  1265  031B                     	;# 
  1266  031C                     	;# 
  1267  031C                     	;# 
  1268  031D                     	;# 
  1269  031E                     	;# 
  1270  031F                     	;# 
  1271  038C                     	;# 
  1272  038D                     	;# 
  1273  038E                     	;# 
  1274  0390                     	;# 
  1275  0391                     	;# 
  1276  0392                     	;# 
  1277  040C                     	;# 
  1278  040D                     	;# 
  1279  040E                     	;# 
  1280  040F                     	;# 
  1281  0410                     	;# 
  1282  0411                     	;# 
  1283  0416                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  0418                     	;# 
  1287  0418                     	;# 
  1288  0419                     	;# 
  1289  041A                     	;# 
  1290  041A                     	;# 
  1291  041B                     	;# 
  1292  041C                     	;# 
  1293  041C                     	;# 
  1294  041D                     	;# 
  1295  041E                     	;# 
  1296  041F                     	;# 
  1297  048C                     	;# 
  1298  048C                     	;# 
  1299  048D                     	;# 
  1300  048E                     	;# 
  1301  048F                     	;# 
  1302  048F                     	;# 
  1303  0490                     	;# 
  1304  0491                     	;# 
  1305  0492                     	;# 
  1306  0492                     	;# 
  1307  0493                     	;# 
  1308  0494                     	;# 
  1309  0495                     	;# 
  1310  0495                     	;# 
  1311  0496                     	;# 
  1312  0497                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  050C                     	;# 
  1320  050C                     	;# 
  1321  050D                     	;# 
  1322  050E                     	;# 
  1323  050F                     	;# 
  1324  050F                     	;# 
  1325  0510                     	;# 
  1326  0511                     	;# 
  1327  0512                     	;# 
  1328  0512                     	;# 
  1329  0513                     	;# 
  1330  0514                     	;# 
  1331  0515                     	;# 
  1332  0515                     	;# 
  1333  0516                     	;# 
  1334  0517                     	;# 
  1335  0518                     	;# 
  1336  0519                     	;# 
  1337  051A                     	;# 
  1338  051B                     	;# 
  1339  051C                     	;# 
  1340  051D                     	;# 
  1341  058C                     	;# 
  1342  058C                     	;# 
  1343  058D                     	;# 
  1344  058E                     	;# 
  1345  058F                     	;# 
  1346  058F                     	;# 
  1347  0590                     	;# 
  1348  0591                     	;# 
  1349  0592                     	;# 
  1350  0593                     	;# 
  1351  060C                     	;# 
  1352  060D                     	;# 
  1353  060E                     	;# 
  1354  060F                     	;# 
  1355  0610                     	;# 
  1356  0611                     	;# 
  1357  0612                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  061A                     	;# 
  1365  061B                     	;# 
  1366  061C                     	;# 
  1367  061D                     	;# 
  1368  061E                     	;# 
  1369  068C                     	;# 
  1370  068D                     	;# 
  1371  068E                     	;# 
  1372  068F                     	;# 
  1373  0690                     	;# 
  1374  0691                     	;# 
  1375  0692                     	;# 
  1376  0693                     	;# 
  1377  0694                     	;# 
  1378  070C                     	;# 
  1379  070D                     	;# 
  1380  070E                     	;# 
  1381  070F                     	;# 
  1382  0710                     	;# 
  1383  0711                     	;# 
  1384  0712                     	;# 
  1385  0713                     	;# 
  1386  0714                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  071A                     	;# 
  1392  071B                     	;# 
  1393  071C                     	;# 
  1394  071D                     	;# 
  1395  071E                     	;# 
  1396  0796                     	;# 
  1397  0797                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  080C                     	;# 
  1403  080D                     	;# 
  1404  080E                     	;# 
  1405  080F                     	;# 
  1406  0810                     	;# 
  1407  0811                     	;# 
  1408  0812                     	;# 
  1409  0813                     	;# 
  1410  0814                     	;# 
  1411  081A                     	;# 
  1412  081B                     	;# 
  1413  081C                     	;# 
  1414  081D                     	;# 
  1415  081E                     	;# 
  1416  081F                     	;# 
  1417  088C                     	;# 
  1418  088D                     	;# 
  1419  088E                     	;# 
  1420  088F                     	;# 
  1421  0890                     	;# 
  1422  0891                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0897                     	;# 
  1428  0898                     	;# 
  1429  0899                     	;# 
  1430  089A                     	;# 
  1431  089B                     	;# 
  1432  090C                     	;# 
  1433  090E                     	;# 
  1434  090F                     	;# 
  1435  091F                     	;# 
  1436  091F                     	;# 
  1437  098F                     	;# 
  1438  098F                     	;# 
  1439  0990                     	;# 
  1440  0991                     	;# 
  1441  0992                     	;# 
  1442  0993                     	;# 
  1443  0994                     	;# 
  1444  0995                     	;# 
  1445  0996                     	;# 
  1446  0997                     	;# 
  1447  0E0F                     	;# 
  1448  0E10                     	;# 
  1449  0E11                     	;# 
  1450  0E12                     	;# 
  1451  0E13                     	;# 
  1452  0E14                     	;# 
  1453  0E15                     	;# 
  1454  0E16                     	;# 
  1455  0E17                     	;# 
  1456  0E18                     	;# 
  1457  0E19                     	;# 
  1458  0E1A                     	;# 
  1459  0E1B                     	;# 
  1460  0E1C                     	;# 
  1461  0E1D                     	;# 
  1462  0E1E                     	;# 
  1463  0E1F                     	;# 
  1464  0E20                     	;# 
  1465  0E21                     	;# 
  1466  0E22                     	;# 
  1467  0E23                     	;# 
  1468  0E24                     	;# 
  1469  0E25                     	;# 
  1470  0E26                     	;# 
  1471  0E27                     	;# 
  1472  0E28                     	;# 
  1473  0E29                     	;# 
  1474  0E2A                     	;# 
  1475  0E2B                     	;# 
  1476  0E2C                     	;# 
  1477  0E2D                     	;# 
  1478  0E2E                     	;# 
  1479  0E2F                     	;# 
  1480  0E30                     	;# 
  1481  0E31                     	;# 
  1482  0E32                     	;# 
  1483  0E33                     	;# 
  1484  0E34                     	;# 
  1485  0E35                     	;# 
  1486  0E36                     	;# 
  1487  0E37                     	;# 
  1488  0E8F                     	;# 
  1489  0E90                     	;# 
  1490  0E91                     	;# 
  1491  0E92                     	;# 
  1492  0E93                     	;# 
  1493  0E94                     	;# 
  1494  0E95                     	;# 
  1495  0E96                     	;# 
  1496  0E97                     	;# 
  1497  0E9C                     	;# 
  1498  0E9D                     	;# 
  1499  0E9E                     	;# 
  1500  0EA1                     	;# 
  1501  0EA2                     	;# 
  1502  0EA3                     	;# 
  1503  0EA4                     	;# 
  1504  0EA5                     	;# 
  1505  0EA9                     	;# 
  1506  0EAA                     	;# 
  1507  0EAB                     	;# 
  1508  0EAC                     	;# 
  1509  0EB1                     	;# 
  1510  0EB2                     	;# 
  1511  0EB3                     	;# 
  1512  0EB8                     	;# 
  1513  0EB9                     	;# 
  1514  0EBA                     	;# 
  1515  0EBB                     	;# 
  1516  0EBC                     	;# 
  1517  0EBD                     	;# 
  1518  0EBE                     	;# 
  1519  0EC3                     	;# 
  1520  0EC5                     	;# 
  1521  0EC6                     	;# 
  1522  0EC7                     	;# 
  1523  0EC8                     	;# 
  1524  0EC9                     	;# 
  1525  0ECA                     	;# 
  1526  0ECB                     	;# 
  1527  0ECC                     	;# 
  1528  0F10                     	;# 
  1529  0F11                     	;# 
  1530  0F12                     	;# 
  1531  0F13                     	;# 
  1532  0F14                     	;# 
  1533  0F15                     	;# 
  1534  0F16                     	;# 
  1535  0F17                     	;# 
  1536  0F18                     	;# 
  1537  0F19                     	;# 
  1538  0F1A                     	;# 
  1539  0F1B                     	;# 
  1540  0F1C                     	;# 
  1541  0F1D                     	;# 
  1542  0F1E                     	;# 
  1543  0F1F                     	;# 
  1544  0F20                     	;# 
  1545  0F21                     	;# 
  1546  0F22                     	;# 
  1547  0F23                     	;# 
  1548  0F24                     	;# 
  1549  0F25                     	;# 
  1550  0F26                     	;# 
  1551  0F27                     	;# 
  1552  0F38                     	;# 
  1553  0F39                     	;# 
  1554  0F3A                     	;# 
  1555  0F3B                     	;# 
  1556  0F3C                     	;# 
  1557  0F3D                     	;# 
  1558  0F3E                     	;# 
  1559  0F3F                     	;# 
  1560  0F40                     	;# 
  1561  0F41                     	;# 
  1562  0F43                     	;# 
  1563  0F44                     	;# 
  1564  0F45                     	;# 
  1565  0F46                     	;# 
  1566  0F47                     	;# 
  1567  0F48                     	;# 
  1568  0F49                     	;# 
  1569  0F4A                     	;# 
  1570  0F4B                     	;# 
  1571  0F4C                     	;# 
  1572  0F4E                     	;# 
  1573  0F4F                     	;# 
  1574  0F50                     	;# 
  1575  0F51                     	;# 
  1576  0F52                     	;# 
  1577  0F53                     	;# 
  1578  0F54                     	;# 
  1579  0F55                     	;# 
  1580  0F56                     	;# 
  1581  0F57                     	;# 
  1582  0F65                     	;# 
  1583  0F68                     	;# 
  1584  0F69                     	;# 
  1585  0F6A                     	;# 
  1586  0F6B                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598  0000                     	;# 
  1599  0001                     	;# 
  1600  0002                     	;# 
  1601  0003                     	;# 
  1602  0004                     	;# 
  1603  0005                     	;# 
  1604  0006                     	;# 
  1605  0007                     	;# 
  1606  0008                     	;# 
  1607  0009                     	;# 
  1608  000A                     	;# 
  1609  000B                     	;# 
  1610  000C                     	;# 
  1611  000D                     	;# 
  1612  000E                     	;# 
  1613  0010                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0013                     	;# 
  1617  0016                     	;# 
  1618  0017                     	;# 
  1619  0018                     	;# 
  1620  001C                     	;# 
  1621  001C                     	;# 
  1622  001D                     	;# 
  1623  001D                     	;# 
  1624  001E                     	;# 
  1625  001F                     	;# 
  1626  008C                     	;# 
  1627  008C                     	;# 
  1628  008D                     	;# 
  1629  008E                     	;# 
  1630  008E                     	;# 
  1631  008F                     	;# 
  1632  0090                     	;# 
  1633  0090                     	;# 
  1634  0091                     	;# 
  1635  0093                     	;# 
  1636  0094                     	;# 
  1637  0095                     	;# 
  1638  0096                     	;# 
  1639  0097                     	;# 
  1640  0098                     	;# 
  1641  0099                     	;# 
  1642  009A                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  010E                     	;# 
  1651  010F                     	;# 
  1652  0110                     	;# 
  1653  0110                     	;# 
  1654  0111                     	;# 
  1655  0112                     	;# 
  1656  0112                     	;# 
  1657  0113                     	;# 
  1658  0114                     	;# 
  1659  0114                     	;# 
  1660  0115                     	;# 
  1661  0116                     	;# 
  1662  0116                     	;# 
  1663  0117                     	;# 
  1664  0119                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  011A                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011C                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011E                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  018C                     	;# 
  1690  018D                     	;# 
  1691  018E                     	;# 
  1692  018F                     	;# 
  1693  0190                     	;# 
  1694  0191                     	;# 
  1695  0192                     	;# 
  1696  0196                     	;# 
  1697  0197                     	;# 
  1698  0198                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  020C                     	;# 
  1704  020D                     	;# 
  1705  020E                     	;# 
  1706  020F                     	;# 
  1707  020F                     	;# 
  1708  0210                     	;# 
  1709  0210                     	;# 
  1710  0211                     	;# 
  1711  0211                     	;# 
  1712  0212                     	;# 
  1713  0213                     	;# 
  1714  0214                     	;# 
  1715  0215                     	;# 
  1716  0215                     	;# 
  1717  0216                     	;# 
  1718  0216                     	;# 
  1719  0217                     	;# 
  1720  0217                     	;# 
  1721  0218                     	;# 
  1722  0219                     	;# 
  1723  021A                     	;# 
  1724  021B                     	;# 
  1725  021B                     	;# 
  1726  021C                     	;# 
  1727  021C                     	;# 
  1728  021D                     	;# 
  1729  021D                     	;# 
  1730  021E                     	;# 
  1731  021F                     	;# 
  1732  028C                     	;# 
  1733  028C                     	;# 
  1734  028D                     	;# 
  1735  028D                     	;# 
  1736  028E                     	;# 
  1737  028F                     	;# 
  1738  0290                     	;# 
  1739  0290                     	;# 
  1740  0291                     	;# 
  1741  0292                     	;# 
  1742  0292                     	;# 
  1743  0293                     	;# 
  1744  0293                     	;# 
  1745  0294                     	;# 
  1746  0295                     	;# 
  1747  0296                     	;# 
  1748  0296                     	;# 
  1749  0297                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  0299                     	;# 
  1754  029A                     	;# 
  1755  029B                     	;# 
  1756  029C                     	;# 
  1757  029C                     	;# 
  1758  029D                     	;# 
  1759  030C                     	;# 
  1760  030C                     	;# 
  1761  030D                     	;# 
  1762  030E                     	;# 
  1763  030F                     	;# 
  1764  0310                     	;# 
  1765  0310                     	;# 
  1766  0311                     	;# 
  1767  0312                     	;# 
  1768  0313                     	;# 
  1769  0314                     	;# 
  1770  0314                     	;# 
  1771  0315                     	;# 
  1772  0316                     	;# 
  1773  0317                     	;# 
  1774  0318                     	;# 
  1775  0318                     	;# 
  1776  0319                     	;# 
  1777  031A                     	;# 
  1778  031B                     	;# 
  1779  031C                     	;# 
  1780  031C                     	;# 
  1781  031D                     	;# 
  1782  031E                     	;# 
  1783  031F                     	;# 
  1784  038C                     	;# 
  1785  038D                     	;# 
  1786  038E                     	;# 
  1787  0390                     	;# 
  1788  0391                     	;# 
  1789  0392                     	;# 
  1790  040C                     	;# 
  1791  040D                     	;# 
  1792  040E                     	;# 
  1793  040F                     	;# 
  1794  0410                     	;# 
  1795  0411                     	;# 
  1796  0416                     	;# 
  1797  0416                     	;# 
  1798  0417                     	;# 
  1799  0418                     	;# 
  1800  0418                     	;# 
  1801  0419                     	;# 
  1802  041A                     	;# 
  1803  041A                     	;# 
  1804  041B                     	;# 
  1805  041C                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  041F                     	;# 
  1810  048C                     	;# 
  1811  048C                     	;# 
  1812  048D                     	;# 
  1813  048E                     	;# 
  1814  048F                     	;# 
  1815  048F                     	;# 
  1816  0490                     	;# 
  1817  0491                     	;# 
  1818  0492                     	;# 
  1819  0492                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0495                     	;# 
  1823  0495                     	;# 
  1824  0496                     	;# 
  1825  0497                     	;# 
  1826  0498                     	;# 
  1827  0499                     	;# 
  1828  049A                     	;# 
  1829  049B                     	;# 
  1830  049C                     	;# 
  1831  049D                     	;# 
  1832  050C                     	;# 
  1833  050C                     	;# 
  1834  050D                     	;# 
  1835  050E                     	;# 
  1836  050F                     	;# 
  1837  050F                     	;# 
  1838  0510                     	;# 
  1839  0511                     	;# 
  1840  0512                     	;# 
  1841  0512                     	;# 
  1842  0513                     	;# 
  1843  0514                     	;# 
  1844  0515                     	;# 
  1845  0515                     	;# 
  1846  0516                     	;# 
  1847  0517                     	;# 
  1848  0518                     	;# 
  1849  0519                     	;# 
  1850  051A                     	;# 
  1851  051B                     	;# 
  1852  051C                     	;# 
  1853  051D                     	;# 
  1854  058C                     	;# 
  1855  058C                     	;# 
  1856  058D                     	;# 
  1857  058E                     	;# 
  1858  058F                     	;# 
  1859  058F                     	;# 
  1860  0590                     	;# 
  1861  0591                     	;# 
  1862  0592                     	;# 
  1863  0593                     	;# 
  1864  060C                     	;# 
  1865  060D                     	;# 
  1866  060E                     	;# 
  1867  060F                     	;# 
  1868  0610                     	;# 
  1869  0611                     	;# 
  1870  0612                     	;# 
  1871  0613                     	;# 
  1872  0614                     	;# 
  1873  0616                     	;# 
  1874  0617                     	;# 
  1875  0618                     	;# 
  1876  0619                     	;# 
  1877  061A                     	;# 
  1878  061B                     	;# 
  1879  061C                     	;# 
  1880  061D                     	;# 
  1881  061E                     	;# 
  1882  068C                     	;# 
  1883  068D                     	;# 
  1884  068E                     	;# 
  1885  068F                     	;# 
  1886  0690                     	;# 
  1887  0691                     	;# 
  1888  0692                     	;# 
  1889  0693                     	;# 
  1890  0694                     	;# 
  1891  070C                     	;# 
  1892  070D                     	;# 
  1893  070E                     	;# 
  1894  070F                     	;# 
  1895  0710                     	;# 
  1896  0711                     	;# 
  1897  0712                     	;# 
  1898  0713                     	;# 
  1899  0714                     	;# 
  1900  0716                     	;# 
  1901  0717                     	;# 
  1902  0718                     	;# 
  1903  0719                     	;# 
  1904  071A                     	;# 
  1905  071B                     	;# 
  1906  071C                     	;# 
  1907  071D                     	;# 
  1908  071E                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081B                     	;# 
  1926  081C                     	;# 
  1927  081D                     	;# 
  1928  081E                     	;# 
  1929  081F                     	;# 
  1930  088C                     	;# 
  1931  088D                     	;# 
  1932  088E                     	;# 
  1933  088F                     	;# 
  1934  0890                     	;# 
  1935  0891                     	;# 
  1936  0892                     	;# 
  1937  0893                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0897                     	;# 
  1941  0898                     	;# 
  1942  0899                     	;# 
  1943  089A                     	;# 
  1944  089B                     	;# 
  1945  090C                     	;# 
  1946  090E                     	;# 
  1947  090F                     	;# 
  1948  091F                     	;# 
  1949  091F                     	;# 
  1950  098F                     	;# 
  1951  098F                     	;# 
  1952  0990                     	;# 
  1953  0991                     	;# 
  1954  0992                     	;# 
  1955  0993                     	;# 
  1956  0994                     	;# 
  1957  0995                     	;# 
  1958  0996                     	;# 
  1959  0997                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E23                     	;# 
  1981  0E24                     	;# 
  1982  0E25                     	;# 
  1983  0E26                     	;# 
  1984  0E27                     	;# 
  1985  0E28                     	;# 
  1986  0E29                     	;# 
  1987  0E2A                     	;# 
  1988  0E2B                     	;# 
  1989  0E2C                     	;# 
  1990  0E2D                     	;# 
  1991  0E2E                     	;# 
  1992  0E2F                     	;# 
  1993  0E30                     	;# 
  1994  0E31                     	;# 
  1995  0E32                     	;# 
  1996  0E33                     	;# 
  1997  0E34                     	;# 
  1998  0E35                     	;# 
  1999  0E36                     	;# 
  2000  0E37                     	;# 
  2001  0E8F                     	;# 
  2002  0E90                     	;# 
  2003  0E91                     	;# 
  2004  0E92                     	;# 
  2005  0E93                     	;# 
  2006  0E94                     	;# 
  2007  0E95                     	;# 
  2008  0E96                     	;# 
  2009  0E97                     	;# 
  2010  0E9C                     	;# 
  2011  0E9D                     	;# 
  2012  0E9E                     	;# 
  2013  0EA1                     	;# 
  2014  0EA2                     	;# 
  2015  0EA3                     	;# 
  2016  0EA4                     	;# 
  2017  0EA5                     	;# 
  2018  0EA9                     	;# 
  2019  0EAA                     	;# 
  2020  0EAB                     	;# 
  2021  0EAC                     	;# 
  2022  0EB1                     	;# 
  2023  0EB2                     	;# 
  2024  0EB3                     	;# 
  2025  0EB8                     	;# 
  2026  0EB9                     	;# 
  2027  0EBA                     	;# 
  2028  0EBB                     	;# 
  2029  0EBC                     	;# 
  2030  0EBD                     	;# 
  2031  0EBE                     	;# 
  2032  0EC3                     	;# 
  2033  0EC5                     	;# 
  2034  0EC6                     	;# 
  2035  0EC7                     	;# 
  2036  0EC8                     	;# 
  2037  0EC9                     	;# 
  2038  0ECA                     	;# 
  2039  0ECB                     	;# 
  2040  0ECC                     	;# 
  2041  0F10                     	;# 
  2042  0F11                     	;# 
  2043  0F12                     	;# 
  2044  0F13                     	;# 
  2045  0F14                     	;# 
  2046  0F15                     	;# 
  2047  0F16                     	;# 
  2048  0F17                     	;# 
  2049  0F18                     	;# 
  2050  0F19                     	;# 
  2051  0F1A                     	;# 
  2052  0F1B                     	;# 
  2053  0F1C                     	;# 
  2054  0F1D                     	;# 
  2055  0F1E                     	;# 
  2056  0F1F                     	;# 
  2057  0F20                     	;# 
  2058  0F21                     	;# 
  2059  0F22                     	;# 
  2060  0F23                     	;# 
  2061  0F24                     	;# 
  2062  0F25                     	;# 
  2063  0F26                     	;# 
  2064  0F27                     	;# 
  2065  0F38                     	;# 
  2066  0F39                     	;# 
  2067  0F3A                     	;# 
  2068  0F3B                     	;# 
  2069  0F3C                     	;# 
  2070  0F3D                     	;# 
  2071  0F3E                     	;# 
  2072  0F3F                     	;# 
  2073  0F40                     	;# 
  2074  0F41                     	;# 
  2075  0F43                     	;# 
  2076  0F44                     	;# 
  2077  0F45                     	;# 
  2078  0F46                     	;# 
  2079  0F47                     	;# 
  2080  0F48                     	;# 
  2081  0F49                     	;# 
  2082  0F4A                     	;# 
  2083  0F4B                     	;# 
  2084  0F4C                     	;# 
  2085  0F4E                     	;# 
  2086  0F4F                     	;# 
  2087  0F50                     	;# 
  2088  0F51                     	;# 
  2089  0F52                     	;# 
  2090  0F53                     	;# 
  2091  0F54                     	;# 
  2092  0F55                     	;# 
  2093  0F56                     	;# 
  2094  0F57                     	;# 
  2095  0F65                     	;# 
  2096  0F68                     	;# 
  2097  0F69                     	;# 
  2098  0F6A                     	;# 
  2099  0F6B                     	;# 
  2100  0FE4                     	;# 
  2101  0FE5                     	;# 
  2102  0FE6                     	;# 
  2103  0FE7                     	;# 
  2104  0FE8                     	;# 
  2105  0FE9                     	;# 
  2106  0FEA                     	;# 
  2107  0FEB                     	;# 
  2108  0FED                     	;# 
  2109  0FEE                     	;# 
  2110  0FEF                     	;# 
  2111  0000                     	;# 
  2112  0001                     	;# 
  2113  0002                     	;# 
  2114  0003                     	;# 
  2115  0004                     	;# 
  2116  0005                     	;# 
  2117  0006                     	;# 
  2118  0007                     	;# 
  2119  0008                     	;# 
  2120  0009                     	;# 
  2121  000A                     	;# 
  2122  000B                     	;# 
  2123  000C                     	;# 
  2124  000D                     	;# 
  2125  000E                     	;# 
  2126  0010                     	;# 
  2127  0011                     	;# 
  2128  0012                     	;# 
  2129  0013                     	;# 
  2130  0016                     	;# 
  2131  0017                     	;# 
  2132  0018                     	;# 
  2133  001C                     	;# 
  2134  001C                     	;# 
  2135  001D                     	;# 
  2136  001D                     	;# 
  2137  001E                     	;# 
  2138  001F                     	;# 
  2139  008C                     	;# 
  2140  008C                     	;# 
  2141  008D                     	;# 
  2142  008E                     	;# 
  2143  008E                     	;# 
  2144  008F                     	;# 
  2145  0090                     	;# 
  2146  0090                     	;# 
  2147  0091                     	;# 
  2148  0093                     	;# 
  2149  0094                     	;# 
  2150  0095                     	;# 
  2151  0096                     	;# 
  2152  0097                     	;# 
  2153  0098                     	;# 
  2154  0099                     	;# 
  2155  009A                     	;# 
  2156  009B                     	;# 
  2157  009C                     	;# 
  2158  009D                     	;# 
  2159  009E                     	;# 
  2160  010C                     	;# 
  2161  010D                     	;# 
  2162  010E                     	;# 
  2163  010E                     	;# 
  2164  010F                     	;# 
  2165  0110                     	;# 
  2166  0110                     	;# 
  2167  0111                     	;# 
  2168  0112                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0114                     	;# 
  2173  0115                     	;# 
  2174  0116                     	;# 
  2175  0116                     	;# 
  2176  0117                     	;# 
  2177  0119                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  011A                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011C                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011D                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011E                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  018C                     	;# 
  2203  018D                     	;# 
  2204  018E                     	;# 
  2205  018F                     	;# 
  2206  0190                     	;# 
  2207  0191                     	;# 
  2208  0192                     	;# 
  2209  0196                     	;# 
  2210  0197                     	;# 
  2211  0198                     	;# 
  2212  0199                     	;# 
  2213  019A                     	;# 
  2214  019B                     	;# 
  2215  019C                     	;# 
  2216  020C                     	;# 
  2217  020D                     	;# 
  2218  020E                     	;# 
  2219  020F                     	;# 
  2220  020F                     	;# 
  2221  0210                     	;# 
  2222  0210                     	;# 
  2223  0211                     	;# 
  2224  0211                     	;# 
  2225  0212                     	;# 
  2226  0213                     	;# 
  2227  0214                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0218                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021B                     	;# 
  2239  021C                     	;# 
  2240  021C                     	;# 
  2241  021D                     	;# 
  2242  021D                     	;# 
  2243  021E                     	;# 
  2244  021F                     	;# 
  2245  028C                     	;# 
  2246  028C                     	;# 
  2247  028D                     	;# 
  2248  028D                     	;# 
  2249  028E                     	;# 
  2250  028F                     	;# 
  2251  0290                     	;# 
  2252  0290                     	;# 
  2253  0291                     	;# 
  2254  0292                     	;# 
  2255  0292                     	;# 
  2256  0293                     	;# 
  2257  0293                     	;# 
  2258  0294                     	;# 
  2259  0295                     	;# 
  2260  0296                     	;# 
  2261  0296                     	;# 
  2262  0297                     	;# 
  2263  0298                     	;# 
  2264  0298                     	;# 
  2265  0299                     	;# 
  2266  0299                     	;# 
  2267  029A                     	;# 
  2268  029B                     	;# 
  2269  029C                     	;# 
  2270  029C                     	;# 
  2271  029D                     	;# 
  2272  030C                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0310                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  0314                     	;# 
  2283  0314                     	;# 
  2284  0315                     	;# 
  2285  0316                     	;# 
  2286  0317                     	;# 
  2287  0318                     	;# 
  2288  0318                     	;# 
  2289  0319                     	;# 
  2290  031A                     	;# 
  2291  031B                     	;# 
  2292  031C                     	;# 
  2293  031C                     	;# 
  2294  031D                     	;# 
  2295  031E                     	;# 
  2296  031F                     	;# 
  2297  038C                     	;# 
  2298  038D                     	;# 
  2299  038E                     	;# 
  2300  0390                     	;# 
  2301  0391                     	;# 
  2302  0392                     	;# 
  2303  040C                     	;# 
  2304  040D                     	;# 
  2305  040E                     	;# 
  2306  040F                     	;# 
  2307  0410                     	;# 
  2308  0411                     	;# 
  2309  0416                     	;# 
  2310  0416                     	;# 
  2311  0417                     	;# 
  2312  0418                     	;# 
  2313  0418                     	;# 
  2314  0419                     	;# 
  2315  041A                     	;# 
  2316  041A                     	;# 
  2317  041B                     	;# 
  2318  041C                     	;# 
  2319  041C                     	;# 
  2320  041D                     	;# 
  2321  041E                     	;# 
  2322  041F                     	;# 
  2323  048C                     	;# 
  2324  048C                     	;# 
  2325  048D                     	;# 
  2326  048E                     	;# 
  2327  048F                     	;# 
  2328  048F                     	;# 
  2329  0490                     	;# 
  2330  0491                     	;# 
  2331  0492                     	;# 
  2332  0492                     	;# 
  2333  0493                     	;# 
  2334  0494                     	;# 
  2335  0495                     	;# 
  2336  0495                     	;# 
  2337  0496                     	;# 
  2338  0497                     	;# 
  2339  0498                     	;# 
  2340  0499                     	;# 
  2341  049A                     	;# 
  2342  049B                     	;# 
  2343  049C                     	;# 
  2344  049D                     	;# 
  2345  050C                     	;# 
  2346  050C                     	;# 
  2347  050D                     	;# 
  2348  050E                     	;# 
  2349  050F                     	;# 
  2350  050F                     	;# 
  2351  0510                     	;# 
  2352  0511                     	;# 
  2353  0512                     	;# 
  2354  0512                     	;# 
  2355  0513                     	;# 
  2356  0514                     	;# 
  2357  0515                     	;# 
  2358  0515                     	;# 
  2359  0516                     	;# 
  2360  0517                     	;# 
  2361  0518                     	;# 
  2362  0519                     	;# 
  2363  051A                     	;# 
  2364  051B                     	;# 
  2365  051C                     	;# 
  2366  051D                     	;# 
  2367  058C                     	;# 
  2368  058C                     	;# 
  2369  058D                     	;# 
  2370  058E                     	;# 
  2371  058F                     	;# 
  2372  058F                     	;# 
  2373  0590                     	;# 
  2374  0591                     	;# 
  2375  0592                     	;# 
  2376  0593                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  0616                     	;# 
  2387  0617                     	;# 
  2388  0618                     	;# 
  2389  0619                     	;# 
  2390  061A                     	;# 
  2391  061B                     	;# 
  2392  061C                     	;# 
  2393  061D                     	;# 
  2394  061E                     	;# 
  2395  068C                     	;# 
  2396  068D                     	;# 
  2397  068E                     	;# 
  2398  068F                     	;# 
  2399  0690                     	;# 
  2400  0691                     	;# 
  2401  0692                     	;# 
  2402  0693                     	;# 
  2403  0694                     	;# 
  2404  070C                     	;# 
  2405  070D                     	;# 
  2406  070E                     	;# 
  2407  070F                     	;# 
  2408  0710                     	;# 
  2409  0711                     	;# 
  2410  0712                     	;# 
  2411  0713                     	;# 
  2412  0714                     	;# 
  2413  0716                     	;# 
  2414  0717                     	;# 
  2415  0718                     	;# 
  2416  0719                     	;# 
  2417  071A                     	;# 
  2418  071B                     	;# 
  2419  071C                     	;# 
  2420  071D                     	;# 
  2421  071E                     	;# 
  2422  0796                     	;# 
  2423  0797                     	;# 
  2424  0798                     	;# 
  2425  0799                     	;# 
  2426  079A                     	;# 
  2427  079B                     	;# 
  2428  080C                     	;# 
  2429  080D                     	;# 
  2430  080E                     	;# 
  2431  080F                     	;# 
  2432  0810                     	;# 
  2433  0811                     	;# 
  2434  0812                     	;# 
  2435  0813                     	;# 
  2436  0814                     	;# 
  2437  081A                     	;# 
  2438  081B                     	;# 
  2439  081C                     	;# 
  2440  081D                     	;# 
  2441  081E                     	;# 
  2442  081F                     	;# 
  2443  088C                     	;# 
  2444  088D                     	;# 
  2445  088E                     	;# 
  2446  088F                     	;# 
  2447  0890                     	;# 
  2448  0891                     	;# 
  2449  0892                     	;# 
  2450  0893                     	;# 
  2451  0895                     	;# 
  2452  0896                     	;# 
  2453  0897                     	;# 
  2454  0898                     	;# 
  2455  0899                     	;# 
  2456  089A                     	;# 
  2457  089B                     	;# 
  2458  090C                     	;# 
  2459  090E                     	;# 
  2460  090F                     	;# 
  2461  091F                     	;# 
  2462  091F                     	;# 
  2463  098F                     	;# 
  2464  098F                     	;# 
  2465  0990                     	;# 
  2466  0991                     	;# 
  2467  0992                     	;# 
  2468  0993                     	;# 
  2469  0994                     	;# 
  2470  0995                     	;# 
  2471  0996                     	;# 
  2472  0997                     	;# 
  2473  0E0F                     	;# 
  2474  0E10                     	;# 
  2475  0E11                     	;# 
  2476  0E12                     	;# 
  2477  0E13                     	;# 
  2478  0E14                     	;# 
  2479  0E15                     	;# 
  2480  0E16                     	;# 
  2481  0E17                     	;# 
  2482  0E18                     	;# 
  2483  0E19                     	;# 
  2484  0E1A                     	;# 
  2485  0E1B                     	;# 
  2486  0E1C                     	;# 
  2487  0E1D                     	;# 
  2488  0E1E                     	;# 
  2489  0E1F                     	;# 
  2490  0E20                     	;# 
  2491  0E21                     	;# 
  2492  0E22                     	;# 
  2493  0E23                     	;# 
  2494  0E24                     	;# 
  2495  0E25                     	;# 
  2496  0E26                     	;# 
  2497  0E27                     	;# 
  2498  0E28                     	;# 
  2499  0E29                     	;# 
  2500  0E2A                     	;# 
  2501  0E2B                     	;# 
  2502  0E2C                     	;# 
  2503  0E2D                     	;# 
  2504  0E2E                     	;# 
  2505  0E2F                     	;# 
  2506  0E30                     	;# 
  2507  0E31                     	;# 
  2508  0E32                     	;# 
  2509  0E33                     	;# 
  2510  0E34                     	;# 
  2511  0E35                     	;# 
  2512  0E36                     	;# 
  2513  0E37                     	;# 
  2514  0E8F                     	;# 
  2515  0E90                     	;# 
  2516  0E91                     	;# 
  2517  0E92                     	;# 
  2518  0E93                     	;# 
  2519  0E94                     	;# 
  2520  0E95                     	;# 
  2521  0E96                     	;# 
  2522  0E97                     	;# 
  2523  0E9C                     	;# 
  2524  0E9D                     	;# 
  2525  0E9E                     	;# 
  2526  0EA1                     	;# 
  2527  0EA2                     	;# 
  2528  0EA3                     	;# 
  2529  0EA4                     	;# 
  2530  0EA5                     	;# 
  2531  0EA9                     	;# 
  2532  0EAA                     	;# 
  2533  0EAB                     	;# 
  2534  0EAC                     	;# 
  2535  0EB1                     	;# 
  2536  0EB2                     	;# 
  2537  0EB3                     	;# 
  2538  0EB8                     	;# 
  2539  0EB9                     	;# 
  2540  0EBA                     	;# 
  2541  0EBB                     	;# 
  2542  0EBC                     	;# 
  2543  0EBD                     	;# 
  2544  0EBE                     	;# 
  2545  0EC3                     	;# 
  2546  0EC5                     	;# 
  2547  0EC6                     	;# 
  2548  0EC7                     	;# 
  2549  0EC8                     	;# 
  2550  0EC9                     	;# 
  2551  0ECA                     	;# 
  2552  0ECB                     	;# 
  2553  0ECC                     	;# 
  2554  0F10                     	;# 
  2555  0F11                     	;# 
  2556  0F12                     	;# 
  2557  0F13                     	;# 
  2558  0F14                     	;# 
  2559  0F15                     	;# 
  2560  0F16                     	;# 
  2561  0F17                     	;# 
  2562  0F18                     	;# 
  2563  0F19                     	;# 
  2564  0F1A                     	;# 
  2565  0F1B                     	;# 
  2566  0F1C                     	;# 
  2567  0F1D                     	;# 
  2568  0F1E                     	;# 
  2569  0F1F                     	;# 
  2570  0F20                     	;# 
  2571  0F21                     	;# 
  2572  0F22                     	;# 
  2573  0F23                     	;# 
  2574  0F24                     	;# 
  2575  0F25                     	;# 
  2576  0F26                     	;# 
  2577  0F27                     	;# 
  2578  0F38                     	;# 
  2579  0F39                     	;# 
  2580  0F3A                     	;# 
  2581  0F3B                     	;# 
  2582  0F3C                     	;# 
  2583  0F3D                     	;# 
  2584  0F3E                     	;# 
  2585  0F3F                     	;# 
  2586  0F40                     	;# 
  2587  0F41                     	;# 
  2588  0F43                     	;# 
  2589  0F44                     	;# 
  2590  0F45                     	;# 
  2591  0F46                     	;# 
  2592  0F47                     	;# 
  2593  0F48                     	;# 
  2594  0F49                     	;# 
  2595  0F4A                     	;# 
  2596  0F4B                     	;# 
  2597  0F4C                     	;# 
  2598  0F4E                     	;# 
  2599  0F4F                     	;# 
  2600  0F50                     	;# 
  2601  0F51                     	;# 
  2602  0F52                     	;# 
  2603  0F53                     	;# 
  2604  0F54                     	;# 
  2605  0F55                     	;# 
  2606  0F56                     	;# 
  2607  0F57                     	;# 
  2608  0F65                     	;# 
  2609  0F68                     	;# 
  2610  0F69                     	;# 
  2611  0F6A                     	;# 
  2612  0F6B                     	;# 
  2613  0FE4                     	;# 
  2614  0FE5                     	;# 
  2615  0FE6                     	;# 
  2616  0FE7                     	;# 
  2617  0FE8                     	;# 
  2618  0FE9                     	;# 
  2619  0FEA                     	;# 
  2620  0FEB                     	;# 
  2621  0FED                     	;# 
  2622  0FEE                     	;# 
  2623  0FEF                     	;# 
  2624  0000                     	;# 
  2625  0001                     	;# 
  2626  0002                     	;# 
  2627  0003                     	;# 
  2628  0004                     	;# 
  2629  0005                     	;# 
  2630  0006                     	;# 
  2631  0007                     	;# 
  2632  0008                     	;# 
  2633  0009                     	;# 
  2634  000A                     	;# 
  2635  000B                     	;# 
  2636  000C                     	;# 
  2637  000D                     	;# 
  2638  000E                     	;# 
  2639  0010                     	;# 
  2640  0011                     	;# 
  2641  0012                     	;# 
  2642  0013                     	;# 
  2643  0016                     	;# 
  2644  0017                     	;# 
  2645  0018                     	;# 
  2646  001C                     	;# 
  2647  001C                     	;# 
  2648  001D                     	;# 
  2649  001D                     	;# 
  2650  001E                     	;# 
  2651  001F                     	;# 
  2652  008C                     	;# 
  2653  008C                     	;# 
  2654  008D                     	;# 
  2655  008E                     	;# 
  2656  008E                     	;# 
  2657  008F                     	;# 
  2658  0090                     	;# 
  2659  0090                     	;# 
  2660  0091                     	;# 
  2661  0093                     	;# 
  2662  0094                     	;# 
  2663  0095                     	;# 
  2664  0096                     	;# 
  2665  0097                     	;# 
  2666  0098                     	;# 
  2667  0099                     	;# 
  2668  009A                     	;# 
  2669  009B                     	;# 
  2670  009C                     	;# 
  2671  009D                     	;# 
  2672  009E                     	;# 
  2673  010C                     	;# 
  2674  010D                     	;# 
  2675  010E                     	;# 
  2676  010E                     	;# 
  2677  010F                     	;# 
  2678  0110                     	;# 
  2679  0110                     	;# 
  2680  0111                     	;# 
  2681  0112                     	;# 
  2682  0112                     	;# 
  2683  0113                     	;# 
  2684  0114                     	;# 
  2685  0114                     	;# 
  2686  0115                     	;# 
  2687  0116                     	;# 
  2688  0116                     	;# 
  2689  0117                     	;# 
  2690  0119                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  011A                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011C                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011D                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011E                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  018C                     	;# 
  2716  018D                     	;# 
  2717  018E                     	;# 
  2718  018F                     	;# 
  2719  0190                     	;# 
  2720  0191                     	;# 
  2721  0192                     	;# 
  2722  0196                     	;# 
  2723  0197                     	;# 
  2724  0198                     	;# 
  2725  0199                     	;# 
  2726  019A                     	;# 
  2727  019B                     	;# 
  2728  019C                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  020E                     	;# 
  2732  020F                     	;# 
  2733  020F                     	;# 
  2734  0210                     	;# 
  2735  0210                     	;# 
  2736  0211                     	;# 
  2737  0211                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0214                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0216                     	;# 
  2744  0216                     	;# 
  2745  0217                     	;# 
  2746  0217                     	;# 
  2747  0218                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021B                     	;# 
  2752  021C                     	;# 
  2753  021C                     	;# 
  2754  021D                     	;# 
  2755  021D                     	;# 
  2756  021E                     	;# 
  2757  021F                     	;# 
  2758  028C                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028D                     	;# 
  2762  028E                     	;# 
  2763  028F                     	;# 
  2764  0290                     	;# 
  2765  0290                     	;# 
  2766  0291                     	;# 
  2767  0292                     	;# 
  2768  0292                     	;# 
  2769  0293                     	;# 
  2770  0293                     	;# 
  2771  0294                     	;# 
  2772  0295                     	;# 
  2773  0296                     	;# 
  2774  0296                     	;# 
  2775  0297                     	;# 
  2776  0298                     	;# 
  2777  0298                     	;# 
  2778  0299                     	;# 
  2779  0299                     	;# 
  2780  029A                     	;# 
  2781  029B                     	;# 
  2782  029C                     	;# 
  2783  029C                     	;# 
  2784  029D                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0317                     	;# 
  2800  0318                     	;# 
  2801  0318                     	;# 
  2802  0319                     	;# 
  2803  031A                     	;# 
  2804  031B                     	;# 
  2805  031C                     	;# 
  2806  031C                     	;# 
  2807  031D                     	;# 
  2808  031E                     	;# 
  2809  031F                     	;# 
  2810  038C                     	;# 
  2811  038D                     	;# 
  2812  038E                     	;# 
  2813  0390                     	;# 
  2814  0391                     	;# 
  2815  0392                     	;# 
  2816  040C                     	;# 
  2817  040D                     	;# 
  2818  040E                     	;# 
  2819  040F                     	;# 
  2820  0410                     	;# 
  2821  0411                     	;# 
  2822  0416                     	;# 
  2823  0416                     	;# 
  2824  0417                     	;# 
  2825  0418                     	;# 
  2826  0418                     	;# 
  2827  0419                     	;# 
  2828  041A                     	;# 
  2829  041A                     	;# 
  2830  041B                     	;# 
  2831  041C                     	;# 
  2832  041C                     	;# 
  2833  041D                     	;# 
  2834  041E                     	;# 
  2835  041F                     	;# 
  2836  048C                     	;# 
  2837  048C                     	;# 
  2838  048D                     	;# 
  2839  048E                     	;# 
  2840  048F                     	;# 
  2841  048F                     	;# 
  2842  0490                     	;# 
  2843  0491                     	;# 
  2844  0492                     	;# 
  2845  0492                     	;# 
  2846  0493                     	;# 
  2847  0494                     	;# 
  2848  0495                     	;# 
  2849  0495                     	;# 
  2850  0496                     	;# 
  2851  0497                     	;# 
  2852  0498                     	;# 
  2853  0499                     	;# 
  2854  049A                     	;# 
  2855  049B                     	;# 
  2856  049C                     	;# 
  2857  049D                     	;# 
  2858  050C                     	;# 
  2859  050C                     	;# 
  2860  050D                     	;# 
  2861  050E                     	;# 
  2862  050F                     	;# 
  2863  050F                     	;# 
  2864  0510                     	;# 
  2865  0511                     	;# 
  2866  0512                     	;# 
  2867  0512                     	;# 
  2868  0513                     	;# 
  2869  0514                     	;# 
  2870  0515                     	;# 
  2871  0515                     	;# 
  2872  0516                     	;# 
  2873  0517                     	;# 
  2874  0518                     	;# 
  2875  0519                     	;# 
  2876  051A                     	;# 
  2877  051B                     	;# 
  2878  051C                     	;# 
  2879  051D                     	;# 
  2880  058C                     	;# 
  2881  058C                     	;# 
  2882  058D                     	;# 
  2883  058E                     	;# 
  2884  058F                     	;# 
  2885  058F                     	;# 
  2886  0590                     	;# 
  2887  0591                     	;# 
  2888  0592                     	;# 
  2889  0593                     	;# 
  2890  060C                     	;# 
  2891  060D                     	;# 
  2892  060E                     	;# 
  2893  060F                     	;# 
  2894  0610                     	;# 
  2895  0611                     	;# 
  2896  0612                     	;# 
  2897  0613                     	;# 
  2898  0614                     	;# 
  2899  0616                     	;# 
  2900  0617                     	;# 
  2901  0618                     	;# 
  2902  0619                     	;# 
  2903  061A                     	;# 
  2904  061B                     	;# 
  2905  061C                     	;# 
  2906  061D                     	;# 
  2907  061E                     	;# 
  2908  068C                     	;# 
  2909  068D                     	;# 
  2910  068E                     	;# 
  2911  068F                     	;# 
  2912  0690                     	;# 
  2913  0691                     	;# 
  2914  0692                     	;# 
  2915  0693                     	;# 
  2916  0694                     	;# 
  2917  070C                     	;# 
  2918  070D                     	;# 
  2919  070E                     	;# 
  2920  070F                     	;# 
  2921  0710                     	;# 
  2922  0711                     	;# 
  2923  0712                     	;# 
  2924  0713                     	;# 
  2925  0714                     	;# 
  2926  0716                     	;# 
  2927  0717                     	;# 
  2928  0718                     	;# 
  2929  0719                     	;# 
  2930  071A                     	;# 
  2931  071B                     	;# 
  2932  071C                     	;# 
  2933  071D                     	;# 
  2934  071E                     	;# 
  2935  0796                     	;# 
  2936  0797                     	;# 
  2937  0798                     	;# 
  2938  0799                     	;# 
  2939  079A                     	;# 
  2940  079B                     	;# 
  2941  080C                     	;# 
  2942  080D                     	;# 
  2943  080E                     	;# 
  2944  080F                     	;# 
  2945  0810                     	;# 
  2946  0811                     	;# 
  2947  0812                     	;# 
  2948  0813                     	;# 
  2949  0814                     	;# 
  2950  081A                     	;# 
  2951  081B                     	;# 
  2952  081C                     	;# 
  2953  081D                     	;# 
  2954  081E                     	;# 
  2955  081F                     	;# 
  2956  088C                     	;# 
  2957  088D                     	;# 
  2958  088E                     	;# 
  2959  088F                     	;# 
  2960  0890                     	;# 
  2961  0891                     	;# 
  2962  0892                     	;# 
  2963  0893                     	;# 
  2964  0895                     	;# 
  2965  0896                     	;# 
  2966  0897                     	;# 
  2967  0898                     	;# 
  2968  0899                     	;# 
  2969  089A                     	;# 
  2970  089B                     	;# 
  2971  090C                     	;# 
  2972  090E                     	;# 
  2973  090F                     	;# 
  2974  091F                     	;# 
  2975  091F                     	;# 
  2976  098F                     	;# 
  2977  098F                     	;# 
  2978  0990                     	;# 
  2979  0991                     	;# 
  2980  0992                     	;# 
  2981  0993                     	;# 
  2982  0994                     	;# 
  2983  0995                     	;# 
  2984  0996                     	;# 
  2985  0997                     	;# 
  2986  0E0F                     	;# 
  2987  0E10                     	;# 
  2988  0E11                     	;# 
  2989  0E12                     	;# 
  2990  0E13                     	;# 
  2991  0E14                     	;# 
  2992  0E15                     	;# 
  2993  0E16                     	;# 
  2994  0E17                     	;# 
  2995  0E18                     	;# 
  2996  0E19                     	;# 
  2997  0E1A                     	;# 
  2998  0E1B                     	;# 
  2999  0E1C                     	;# 
  3000  0E1D                     	;# 
  3001  0E1E                     	;# 
  3002  0E1F                     	;# 
  3003  0E20                     	;# 
  3004  0E21                     	;# 
  3005  0E22                     	;# 
  3006  0E23                     	;# 
  3007  0E24                     	;# 
  3008  0E25                     	;# 
  3009  0E26                     	;# 
  3010  0E27                     	;# 
  3011  0E28                     	;# 
  3012  0E29                     	;# 
  3013  0E2A                     	;# 
  3014  0E2B                     	;# 
  3015  0E2C                     	;# 
  3016  0E2D                     	;# 
  3017  0E2E                     	;# 
  3018  0E2F                     	;# 
  3019  0E30                     	;# 
  3020  0E31                     	;# 
  3021  0E32                     	;# 
  3022  0E33                     	;# 
  3023  0E34                     	;# 
  3024  0E35                     	;# 
  3025  0E36                     	;# 
  3026  0E37                     	;# 
  3027  0E8F                     	;# 
  3028  0E90                     	;# 
  3029  0E91                     	;# 
  3030  0E92                     	;# 
  3031  0E93                     	;# 
  3032  0E94                     	;# 
  3033  0E95                     	;# 
  3034  0E96                     	;# 
  3035  0E97                     	;# 
  3036  0E9C                     	;# 
  3037  0E9D                     	;# 
  3038  0E9E                     	;# 
  3039  0EA1                     	;# 
  3040  0EA2                     	;# 
  3041  0EA3                     	;# 
  3042  0EA4                     	;# 
  3043  0EA5                     	;# 
  3044  0EA9                     	;# 
  3045  0EAA                     	;# 
  3046  0EAB                     	;# 
  3047  0EAC                     	;# 
  3048  0EB1                     	;# 
  3049  0EB2                     	;# 
  3050  0EB3                     	;# 
  3051  0EB8                     	;# 
  3052  0EB9                     	;# 
  3053  0EBA                     	;# 
  3054  0EBB                     	;# 
  3055  0EBC                     	;# 
  3056  0EBD                     	;# 
  3057  0EBE                     	;# 
  3058  0EC3                     	;# 
  3059  0EC5                     	;# 
  3060  0EC6                     	;# 
  3061  0EC7                     	;# 
  3062  0EC8                     	;# 
  3063  0EC9                     	;# 
  3064  0ECA                     	;# 
  3065  0ECB                     	;# 
  3066  0ECC                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F38                     	;# 
  3092  0F39                     	;# 
  3093  0F3A                     	;# 
  3094  0F3B                     	;# 
  3095  0F3C                     	;# 
  3096  0F3D                     	;# 
  3097  0F3E                     	;# 
  3098  0F3F                     	;# 
  3099  0F40                     	;# 
  3100  0F41                     	;# 
  3101  0F43                     	;# 
  3102  0F44                     	;# 
  3103  0F45                     	;# 
  3104  0F46                     	;# 
  3105  0F47                     	;# 
  3106  0F48                     	;# 
  3107  0F49                     	;# 
  3108  0F4A                     	;# 
  3109  0F4B                     	;# 
  3110  0F4C                     	;# 
  3111  0F4E                     	;# 
  3112  0F4F                     	;# 
  3113  0F50                     	;# 
  3114  0F51                     	;# 
  3115  0F52                     	;# 
  3116  0F53                     	;# 
  3117  0F54                     	;# 
  3118  0F55                     	;# 
  3119  0F56                     	;# 
  3120  0F57                     	;# 
  3121  0F65                     	;# 
  3122  0F68                     	;# 
  3123  0F69                     	;# 
  3124  0F6A                     	;# 
  3125  0F6B                     	;# 
  3126  0FE4                     	;# 
  3127  0FE5                     	;# 
  3128  0FE6                     	;# 
  3129  0FE7                     	;# 
  3130  0FE8                     	;# 
  3131  0FE9                     	;# 
  3132  0FEA                     	;# 
  3133  0FEB                     	;# 
  3134  0FED                     	;# 
  3135  0FEE                     	;# 
  3136  0FEF                     	;# 
  3137  0000                     	;# 
  3138  0001                     	;# 
  3139  0002                     	;# 
  3140  0003                     	;# 
  3141  0004                     	;# 
  3142  0005                     	;# 
  3143  0006                     	;# 
  3144  0007                     	;# 
  3145  0008                     	;# 
  3146  0009                     	;# 
  3147  000A                     	;# 
  3148  000B                     	;# 
  3149  000C                     	;# 
  3150  000D                     	;# 
  3151  000E                     	;# 
  3152  0010                     	;# 
  3153  0011                     	;# 
  3154  0012                     	;# 
  3155  0013                     	;# 
  3156  0016                     	;# 
  3157  0017                     	;# 
  3158  0018                     	;# 
  3159  001C                     	;# 
  3160  001C                     	;# 
  3161  001D                     	;# 
  3162  001D                     	;# 
  3163  001E                     	;# 
  3164  001F                     	;# 
  3165  008C                     	;# 
  3166  008C                     	;# 
  3167  008D                     	;# 
  3168  008E                     	;# 
  3169  008E                     	;# 
  3170  008F                     	;# 
  3171  0090                     	;# 
  3172  0090                     	;# 
  3173  0091                     	;# 
  3174  0093                     	;# 
  3175  0094                     	;# 
  3176  0095                     	;# 
  3177  0096                     	;# 
  3178  0097                     	;# 
  3179  0098                     	;# 
  3180  0099                     	;# 
  3181  009A                     	;# 
  3182  009B                     	;# 
  3183  009C                     	;# 
  3184  009D                     	;# 
  3185  009E                     	;# 
  3186  010C                     	;# 
  3187  010D                     	;# 
  3188  010E                     	;# 
  3189  010E                     	;# 
  3190  010F                     	;# 
  3191  0110                     	;# 
  3192  0110                     	;# 
  3193  0111                     	;# 
  3194  0112                     	;# 
  3195  0112                     	;# 
  3196  0113                     	;# 
  3197  0114                     	;# 
  3198  0114                     	;# 
  3199  0115                     	;# 
  3200  0116                     	;# 
  3201  0116                     	;# 
  3202  0117                     	;# 
  3203  0119                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  011A                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011C                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011D                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011E                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  018C                     	;# 
  3229  018D                     	;# 
  3230  018E                     	;# 
  3231  018F                     	;# 
  3232  0190                     	;# 
  3233  0191                     	;# 
  3234  0192                     	;# 
  3235  0196                     	;# 
  3236  0197                     	;# 
  3237  0198                     	;# 
  3238  0199                     	;# 
  3239  019A                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  020C                     	;# 
  3243  020D                     	;# 
  3244  020E                     	;# 
  3245  020F                     	;# 
  3246  020F                     	;# 
  3247  0210                     	;# 
  3248  0210                     	;# 
  3249  0211                     	;# 
  3250  0211                     	;# 
  3251  0212                     	;# 
  3252  0213                     	;# 
  3253  0214                     	;# 
  3254  0215                     	;# 
  3255  0215                     	;# 
  3256  0216                     	;# 
  3257  0216                     	;# 
  3258  0217                     	;# 
  3259  0217                     	;# 
  3260  0218                     	;# 
  3261  0219                     	;# 
  3262  021A                     	;# 
  3263  021B                     	;# 
  3264  021B                     	;# 
  3265  021C                     	;# 
  3266  021C                     	;# 
  3267  021D                     	;# 
  3268  021D                     	;# 
  3269  021E                     	;# 
  3270  021F                     	;# 
  3271  028C                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028D                     	;# 
  3275  028E                     	;# 
  3276  028F                     	;# 
  3277  0290                     	;# 
  3278  0290                     	;# 
  3279  0291                     	;# 
  3280  0292                     	;# 
  3281  0292                     	;# 
  3282  0293                     	;# 
  3283  0293                     	;# 
  3284  0294                     	;# 
  3285  0295                     	;# 
  3286  0296                     	;# 
  3287  0296                     	;# 
  3288  0297                     	;# 
  3289  0298                     	;# 
  3290  0298                     	;# 
  3291  0299                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029C                     	;# 
  3296  029C                     	;# 
  3297  029D                     	;# 
  3298  030C                     	;# 
  3299  030C                     	;# 
  3300  030D                     	;# 
  3301  030E                     	;# 
  3302  030F                     	;# 
  3303  0310                     	;# 
  3304  0310                     	;# 
  3305  0311                     	;# 
  3306  0312                     	;# 
  3307  0313                     	;# 
  3308  0314                     	;# 
  3309  0314                     	;# 
  3310  0315                     	;# 
  3311  0316                     	;# 
  3312  0317                     	;# 
  3313  0318                     	;# 
  3314  0318                     	;# 
  3315  0319                     	;# 
  3316  031A                     	;# 
  3317  031B                     	;# 
  3318  031C                     	;# 
  3319  031C                     	;# 
  3320  031D                     	;# 
  3321  031E                     	;# 
  3322  031F                     	;# 
  3323  038C                     	;# 
  3324  038D                     	;# 
  3325  038E                     	;# 
  3326  0390                     	;# 
  3327  0391                     	;# 
  3328  0392                     	;# 
  3329  040C                     	;# 
  3330  040D                     	;# 
  3331  040E                     	;# 
  3332  040F                     	;# 
  3333  0410                     	;# 
  3334  0411                     	;# 
  3335  0416                     	;# 
  3336  0416                     	;# 
  3337  0417                     	;# 
  3338  0418                     	;# 
  3339  0418                     	;# 
  3340  0419                     	;# 
  3341  041A                     	;# 
  3342  041A                     	;# 
  3343  041B                     	;# 
  3344  041C                     	;# 
  3345  041C                     	;# 
  3346  041D                     	;# 
  3347  041E                     	;# 
  3348  041F                     	;# 
  3349  048C                     	;# 
  3350  048C                     	;# 
  3351  048D                     	;# 
  3352  048E                     	;# 
  3353  048F                     	;# 
  3354  048F                     	;# 
  3355  0490                     	;# 
  3356  0491                     	;# 
  3357  0492                     	;# 
  3358  0492                     	;# 
  3359  0493                     	;# 
  3360  0494                     	;# 
  3361  0495                     	;# 
  3362  0495                     	;# 
  3363  0496                     	;# 
  3364  0497                     	;# 
  3365  0498                     	;# 
  3366  0499                     	;# 
  3367  049A                     	;# 
  3368  049B                     	;# 
  3369  049C                     	;# 
  3370  049D                     	;# 
  3371  050C                     	;# 
  3372  050C                     	;# 
  3373  050D                     	;# 
  3374  050E                     	;# 
  3375  050F                     	;# 
  3376  050F                     	;# 
  3377  0510                     	;# 
  3378  0511                     	;# 
  3379  0512                     	;# 
  3380  0512                     	;# 
  3381  0513                     	;# 
  3382  0514                     	;# 
  3383  0515                     	;# 
  3384  0515                     	;# 
  3385  0516                     	;# 
  3386  0517                     	;# 
  3387  0518                     	;# 
  3388  0519                     	;# 
  3389  051A                     	;# 
  3390  051B                     	;# 
  3391  051C                     	;# 
  3392  051D                     	;# 
  3393  058C                     	;# 
  3394  058C                     	;# 
  3395  058D                     	;# 
  3396  058E                     	;# 
  3397  058F                     	;# 
  3398  058F                     	;# 
  3399  0590                     	;# 
  3400  0591                     	;# 
  3401  0592                     	;# 
  3402  0593                     	;# 
  3403  060C                     	;# 
  3404  060D                     	;# 
  3405  060E                     	;# 
  3406  060F                     	;# 
  3407  0610                     	;# 
  3408  0611                     	;# 
  3409  0612                     	;# 
  3410  0613                     	;# 
  3411  0614                     	;# 
  3412  0616                     	;# 
  3413  0617                     	;# 
  3414  0618                     	;# 
  3415  0619                     	;# 
  3416  061A                     	;# 
  3417  061B                     	;# 
  3418  061C                     	;# 
  3419  061D                     	;# 
  3420  061E                     	;# 
  3421  068C                     	;# 
  3422  068D                     	;# 
  3423  068E                     	;# 
  3424  068F                     	;# 
  3425  0690                     	;# 
  3426  0691                     	;# 
  3427  0692                     	;# 
  3428  0693                     	;# 
  3429  0694                     	;# 
  3430  070C                     	;# 
  3431  070D                     	;# 
  3432  070E                     	;# 
  3433  070F                     	;# 
  3434  0710                     	;# 
  3435  0711                     	;# 
  3436  0712                     	;# 
  3437  0713                     	;# 
  3438  0714                     	;# 
  3439  0716                     	;# 
  3440  0717                     	;# 
  3441  0718                     	;# 
  3442  0719                     	;# 
  3443  071A                     	;# 
  3444  071B                     	;# 
  3445  071C                     	;# 
  3446  071D                     	;# 
  3447  071E                     	;# 
  3448  0796                     	;# 
  3449  0797                     	;# 
  3450  0798                     	;# 
  3451  0799                     	;# 
  3452  079A                     	;# 
  3453  079B                     	;# 
  3454  080C                     	;# 
  3455  080D                     	;# 
  3456  080E                     	;# 
  3457  080F                     	;# 
  3458  0810                     	;# 
  3459  0811                     	;# 
  3460  0812                     	;# 
  3461  0813                     	;# 
  3462  0814                     	;# 
  3463  081A                     	;# 
  3464  081B                     	;# 
  3465  081C                     	;# 
  3466  081D                     	;# 
  3467  081E                     	;# 
  3468  081F                     	;# 
  3469  088C                     	;# 
  3470  088D                     	;# 
  3471  088E                     	;# 
  3472  088F                     	;# 
  3473  0890                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0893                     	;# 
  3477  0895                     	;# 
  3478  0896                     	;# 
  3479  0897                     	;# 
  3480  0898                     	;# 
  3481  0899                     	;# 
  3482  089A                     	;# 
  3483  089B                     	;# 
  3484  090C                     	;# 
  3485  090E                     	;# 
  3486  090F                     	;# 
  3487  091F                     	;# 
  3488  091F                     	;# 
  3489  098F                     	;# 
  3490  098F                     	;# 
  3491  0990                     	;# 
  3492  0991                     	;# 
  3493  0992                     	;# 
  3494  0993                     	;# 
  3495  0994                     	;# 
  3496  0995                     	;# 
  3497  0996                     	;# 
  3498  0997                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E2F                     	;# 
  3532  0E30                     	;# 
  3533  0E31                     	;# 
  3534  0E32                     	;# 
  3535  0E33                     	;# 
  3536  0E34                     	;# 
  3537  0E35                     	;# 
  3538  0E36                     	;# 
  3539  0E37                     	;# 
  3540  0E8F                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E93                     	;# 
  3545  0E94                     	;# 
  3546  0E95                     	;# 
  3547  0E96                     	;# 
  3548  0E97                     	;# 
  3549  0E9C                     	;# 
  3550  0E9D                     	;# 
  3551  0E9E                     	;# 
  3552  0EA1                     	;# 
  3553  0EA2                     	;# 
  3554  0EA3                     	;# 
  3555  0EA4                     	;# 
  3556  0EA5                     	;# 
  3557  0EA9                     	;# 
  3558  0EAA                     	;# 
  3559  0EAB                     	;# 
  3560  0EAC                     	;# 
  3561  0EB1                     	;# 
  3562  0EB2                     	;# 
  3563  0EB3                     	;# 
  3564  0EB8                     	;# 
  3565  0EB9                     	;# 
  3566  0EBA                     	;# 
  3567  0EBB                     	;# 
  3568  0EBC                     	;# 
  3569  0EBD                     	;# 
  3570  0EBE                     	;# 
  3571  0EC3                     	;# 
  3572  0EC5                     	;# 
  3573  0EC6                     	;# 
  3574  0EC7                     	;# 
  3575  0EC8                     	;# 
  3576  0EC9                     	;# 
  3577  0ECA                     	;# 
  3578  0ECB                     	;# 
  3579  0ECC                     	;# 
  3580  0F10                     	;# 
  3581  0F11                     	;# 
  3582  0F12                     	;# 
  3583  0F13                     	;# 
  3584  0F14                     	;# 
  3585  0F15                     	;# 
  3586  0F16                     	;# 
  3587  0F17                     	;# 
  3588  0F18                     	;# 
  3589  0F19                     	;# 
  3590  0F1A                     	;# 
  3591  0F1B                     	;# 
  3592  0F1C                     	;# 
  3593  0F1D                     	;# 
  3594  0F1E                     	;# 
  3595  0F1F                     	;# 
  3596  0F20                     	;# 
  3597  0F21                     	;# 
  3598  0F22                     	;# 
  3599  0F23                     	;# 
  3600  0F24                     	;# 
  3601  0F25                     	;# 
  3602  0F26                     	;# 
  3603  0F27                     	;# 
  3604  0F38                     	;# 
  3605  0F39                     	;# 
  3606  0F3A                     	;# 
  3607  0F3B                     	;# 
  3608  0F3C                     	;# 
  3609  0F3D                     	;# 
  3610  0F3E                     	;# 
  3611  0F3F                     	;# 
  3612  0F40                     	;# 
  3613  0F41                     	;# 
  3614  0F43                     	;# 
  3615  0F44                     	;# 
  3616  0F45                     	;# 
  3617  0F46                     	;# 
  3618  0F47                     	;# 
  3619  0F48                     	;# 
  3620  0F49                     	;# 
  3621  0F4A                     	;# 
  3622  0F4B                     	;# 
  3623  0F4C                     	;# 
  3624  0F4E                     	;# 
  3625  0F4F                     	;# 
  3626  0F50                     	;# 
  3627  0F51                     	;# 
  3628  0F52                     	;# 
  3629  0F53                     	;# 
  3630  0F54                     	;# 
  3631  0F55                     	;# 
  3632  0F56                     	;# 
  3633  0F57                     	;# 
  3634  0F65                     	;# 
  3635  0F68                     	;# 
  3636  0F69                     	;# 
  3637  0F6A                     	;# 
  3638  0F6B                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0016                     	;# 
  3670  0017                     	;# 
  3671  0018                     	;# 
  3672  001C                     	;# 
  3673  001C                     	;# 
  3674  001D                     	;# 
  3675  001D                     	;# 
  3676  001E                     	;# 
  3677  001F                     	;# 
  3678  008C                     	;# 
  3679  008C                     	;# 
  3680  008D                     	;# 
  3681  008E                     	;# 
  3682  008E                     	;# 
  3683  008F                     	;# 
  3684  0090                     	;# 
  3685  0090                     	;# 
  3686  0091                     	;# 
  3687  0093                     	;# 
  3688  0094                     	;# 
  3689  0095                     	;# 
  3690  0096                     	;# 
  3691  0097                     	;# 
  3692  0098                     	;# 
  3693  0099                     	;# 
  3694  009A                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  010E                     	;# 
  3703  010F                     	;# 
  3704  0110                     	;# 
  3705  0110                     	;# 
  3706  0111                     	;# 
  3707  0112                     	;# 
  3708  0112                     	;# 
  3709  0113                     	;# 
  3710  0114                     	;# 
  3711  0114                     	;# 
  3712  0115                     	;# 
  3713  0116                     	;# 
  3714  0116                     	;# 
  3715  0117                     	;# 
  3716  0119                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  011A                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011C                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011D                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011E                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  018C                     	;# 
  3742  018D                     	;# 
  3743  018E                     	;# 
  3744  018F                     	;# 
  3745  0190                     	;# 
  3746  0191                     	;# 
  3747  0192                     	;# 
  3748  0196                     	;# 
  3749  0197                     	;# 
  3750  0198                     	;# 
  3751  0199                     	;# 
  3752  019A                     	;# 
  3753  019B                     	;# 
  3754  019C                     	;# 
  3755  020C                     	;# 
  3756  020D                     	;# 
  3757  020E                     	;# 
  3758  020F                     	;# 
  3759  020F                     	;# 
  3760  0210                     	;# 
  3761  0210                     	;# 
  3762  0211                     	;# 
  3763  0211                     	;# 
  3764  0212                     	;# 
  3765  0213                     	;# 
  3766  0214                     	;# 
  3767  0215                     	;# 
  3768  0215                     	;# 
  3769  0216                     	;# 
  3770  0216                     	;# 
  3771  0217                     	;# 
  3772  0217                     	;# 
  3773  0218                     	;# 
  3774  0219                     	;# 
  3775  021A                     	;# 
  3776  021B                     	;# 
  3777  021B                     	;# 
  3778  021C                     	;# 
  3779  021C                     	;# 
  3780  021D                     	;# 
  3781  021D                     	;# 
  3782  021E                     	;# 
  3783  021F                     	;# 
  3784  028C                     	;# 
  3785  028C                     	;# 
  3786  028D                     	;# 
  3787  028D                     	;# 
  3788  028E                     	;# 
  3789  028F                     	;# 
  3790  0290                     	;# 
  3791  0290                     	;# 
  3792  0291                     	;# 
  3793  0292                     	;# 
  3794  0292                     	;# 
  3795  0293                     	;# 
  3796  0293                     	;# 
  3797  0294                     	;# 
  3798  0295                     	;# 
  3799  0296                     	;# 
  3800  0296                     	;# 
  3801  0297                     	;# 
  3802  0298                     	;# 
  3803  0298                     	;# 
  3804  0299                     	;# 
  3805  0299                     	;# 
  3806  029A                     	;# 
  3807  029B                     	;# 
  3808  029C                     	;# 
  3809  029C                     	;# 
  3810  029D                     	;# 
  3811  030C                     	;# 
  3812  030C                     	;# 
  3813  030D                     	;# 
  3814  030E                     	;# 
  3815  030F                     	;# 
  3816  0310                     	;# 
  3817  0310                     	;# 
  3818  0311                     	;# 
  3819  0312                     	;# 
  3820  0313                     	;# 
  3821  0314                     	;# 
  3822  0314                     	;# 
  3823  0315                     	;# 
  3824  0316                     	;# 
  3825  0317                     	;# 
  3826  0318                     	;# 
  3827  0318                     	;# 
  3828  0319                     	;# 
  3829  031A                     	;# 
  3830  031B                     	;# 
  3831  031C                     	;# 
  3832  031C                     	;# 
  3833  031D                     	;# 
  3834  031E                     	;# 
  3835  031F                     	;# 
  3836  038C                     	;# 
  3837  038D                     	;# 
  3838  038E                     	;# 
  3839  0390                     	;# 
  3840  0391                     	;# 
  3841  0392                     	;# 
  3842  040C                     	;# 
  3843  040D                     	;# 
  3844  040E                     	;# 
  3845  040F                     	;# 
  3846  0410                     	;# 
  3847  0411                     	;# 
  3848  0416                     	;# 
  3849  0416                     	;# 
  3850  0417                     	;# 
  3851  0418                     	;# 
  3852  0418                     	;# 
  3853  0419                     	;# 
  3854  041A                     	;# 
  3855  041A                     	;# 
  3856  041B                     	;# 
  3857  041C                     	;# 
  3858  041C                     	;# 
  3859  041D                     	;# 
  3860  041E                     	;# 
  3861  041F                     	;# 
  3862  048C                     	;# 
  3863  048C                     	;# 
  3864  048D                     	;# 
  3865  048E                     	;# 
  3866  048F                     	;# 
  3867  048F                     	;# 
  3868  0490                     	;# 
  3869  0491                     	;# 
  3870  0492                     	;# 
  3871  0492                     	;# 
  3872  0493                     	;# 
  3873  0494                     	;# 
  3874  0495                     	;# 
  3875  0495                     	;# 
  3876  0496                     	;# 
  3877  0497                     	;# 
  3878  0498                     	;# 
  3879  0499                     	;# 
  3880  049A                     	;# 
  3881  049B                     	;# 
  3882  049C                     	;# 
  3883  049D                     	;# 
  3884  050C                     	;# 
  3885  050C                     	;# 
  3886  050D                     	;# 
  3887  050E                     	;# 
  3888  050F                     	;# 
  3889  050F                     	;# 
  3890  0510                     	;# 
  3891  0511                     	;# 
  3892  0512                     	;# 
  3893  0512                     	;# 
  3894  0513                     	;# 
  3895  0514                     	;# 
  3896  0515                     	;# 
  3897  0515                     	;# 
  3898  0516                     	;# 
  3899  0517                     	;# 
  3900  0518                     	;# 
  3901  0519                     	;# 
  3902  051A                     	;# 
  3903  051B                     	;# 
  3904  051C                     	;# 
  3905  051D                     	;# 
  3906  058C                     	;# 
  3907  058C                     	;# 
  3908  058D                     	;# 
  3909  058E                     	;# 
  3910  058F                     	;# 
  3911  058F                     	;# 
  3912  0590                     	;# 
  3913  0591                     	;# 
  3914  0592                     	;# 
  3915  0593                     	;# 
  3916  060C                     	;# 
  3917  060D                     	;# 
  3918  060E                     	;# 
  3919  060F                     	;# 
  3920  0610                     	;# 
  3921  0611                     	;# 
  3922  0612                     	;# 
  3923  0613                     	;# 
  3924  0614                     	;# 
  3925  0616                     	;# 
  3926  0617                     	;# 
  3927  0618                     	;# 
  3928  0619                     	;# 
  3929  061A                     	;# 
  3930  061B                     	;# 
  3931  061C                     	;# 
  3932  061D                     	;# 
  3933  061E                     	;# 
  3934  068C                     	;# 
  3935  068D                     	;# 
  3936  068E                     	;# 
  3937  068F                     	;# 
  3938  0690                     	;# 
  3939  0691                     	;# 
  3940  0692                     	;# 
  3941  0693                     	;# 
  3942  0694                     	;# 
  3943  070C                     	;# 
  3944  070D                     	;# 
  3945  070E                     	;# 
  3946  070F                     	;# 
  3947  0710                     	;# 
  3948  0711                     	;# 
  3949  0712                     	;# 
  3950  0713                     	;# 
  3951  0714                     	;# 
  3952  0716                     	;# 
  3953  0717                     	;# 
  3954  0718                     	;# 
  3955  0719                     	;# 
  3956  071A                     	;# 
  3957  071B                     	;# 
  3958  071C                     	;# 
  3959  071D                     	;# 
  3960  071E                     	;# 
  3961  0796                     	;# 
  3962  0797                     	;# 
  3963  0798                     	;# 
  3964  0799                     	;# 
  3965  079A                     	;# 
  3966  079B                     	;# 
  3967  080C                     	;# 
  3968  080D                     	;# 
  3969  080E                     	;# 
  3970  080F                     	;# 
  3971  0810                     	;# 
  3972  0811                     	;# 
  3973  0812                     	;# 
  3974  0813                     	;# 
  3975  0814                     	;# 
  3976  081A                     	;# 
  3977  081B                     	;# 
  3978  081C                     	;# 
  3979  081D                     	;# 
  3980  081E                     	;# 
  3981  081F                     	;# 
  3982  088C                     	;# 
  3983  088D                     	;# 
  3984  088E                     	;# 
  3985  088F                     	;# 
  3986  0890                     	;# 
  3987  0891                     	;# 
  3988  0892                     	;# 
  3989  0893                     	;# 
  3990  0895                     	;# 
  3991  0896                     	;# 
  3992  0897                     	;# 
  3993  0898                     	;# 
  3994  0899                     	;# 
  3995  089A                     	;# 
  3996  089B                     	;# 
  3997  090C                     	;# 
  3998  090E                     	;# 
  3999  090F                     	;# 
  4000  091F                     	;# 
  4001  091F                     	;# 
  4002  098F                     	;# 
  4003  098F                     	;# 
  4004  0990                     	;# 
  4005  0991                     	;# 
  4006  0992                     	;# 
  4007  0993                     	;# 
  4008  0994                     	;# 
  4009  0995                     	;# 
  4010  0996                     	;# 
  4011  0997                     	;# 
  4012  0E0F                     	;# 
  4013  0E10                     	;# 
  4014  0E11                     	;# 
  4015  0E12                     	;# 
  4016  0E13                     	;# 
  4017  0E14                     	;# 
  4018  0E15                     	;# 
  4019  0E16                     	;# 
  4020  0E17                     	;# 
  4021  0E18                     	;# 
  4022  0E19                     	;# 
  4023  0E1A                     	;# 
  4024  0E1B                     	;# 
  4025  0E1C                     	;# 
  4026  0E1D                     	;# 
  4027  0E1E                     	;# 
  4028  0E1F                     	;# 
  4029  0E20                     	;# 
  4030  0E21                     	;# 
  4031  0E22                     	;# 
  4032  0E23                     	;# 
  4033  0E24                     	;# 
  4034  0E25                     	;# 
  4035  0E26                     	;# 
  4036  0E27                     	;# 
  4037  0E28                     	;# 
  4038  0E29                     	;# 
  4039  0E2A                     	;# 
  4040  0E2B                     	;# 
  4041  0E2C                     	;# 
  4042  0E2D                     	;# 
  4043  0E2E                     	;# 
  4044  0E2F                     	;# 
  4045  0E30                     	;# 
  4046  0E31                     	;# 
  4047  0E32                     	;# 
  4048  0E33                     	;# 
  4049  0E34                     	;# 
  4050  0E35                     	;# 
  4051  0E36                     	;# 
  4052  0E37                     	;# 
  4053  0E8F                     	;# 
  4054  0E90                     	;# 
  4055  0E91                     	;# 
  4056  0E92                     	;# 
  4057  0E93                     	;# 
  4058  0E94                     	;# 
  4059  0E95                     	;# 
  4060  0E96                     	;# 
  4061  0E97                     	;# 
  4062  0E9C                     	;# 
  4063  0E9D                     	;# 
  4064  0E9E                     	;# 
  4065  0EA1                     	;# 
  4066  0EA2                     	;# 
  4067  0EA3                     	;# 
  4068  0EA4                     	;# 
  4069  0EA5                     	;# 
  4070  0EA9                     	;# 
  4071  0EAA                     	;# 
  4072  0EAB                     	;# 
  4073  0EAC                     	;# 
  4074  0EB1                     	;# 
  4075  0EB2                     	;# 
  4076  0EB3                     	;# 
  4077  0EB8                     	;# 
  4078  0EB9                     	;# 
  4079  0EBA                     	;# 
  4080  0EBB                     	;# 
  4081  0EBC                     	;# 
  4082  0EBD                     	;# 
  4083  0EBE                     	;# 
  4084  0EC3                     	;# 
  4085  0EC5                     	;# 
  4086  0EC6                     	;# 
  4087  0EC7                     	;# 
  4088  0EC8                     	;# 
  4089  0EC9                     	;# 
  4090  0ECA                     	;# 
  4091  0ECB                     	;# 
  4092  0ECC                     	;# 
  4093  0F10                     	;# 
  4094  0F11                     	;# 
  4095  0F12                     	;# 
  4096  0F13                     	;# 
  4097  0F14                     	;# 
  4098  0F15                     	;# 
  4099  0F16                     	;# 
  4100  0F17                     	;# 
  4101  0F18                     	;# 
  4102  0F19                     	;# 
  4103  0F1A                     	;# 
  4104  0F1B                     	;# 
  4105  0F1C                     	;# 
  4106  0F1D                     	;# 
  4107  0F1E                     	;# 
  4108  0F1F                     	;# 
  4109  0F20                     	;# 
  4110  0F21                     	;# 
  4111  0F22                     	;# 
  4112  0F23                     	;# 
  4113  0F24                     	;# 
  4114  0F25                     	;# 
  4115  0F26                     	;# 
  4116  0F27                     	;# 
  4117  0F38                     	;# 
  4118  0F39                     	;# 
  4119  0F3A                     	;# 
  4120  0F3B                     	;# 
  4121  0F3C                     	;# 
  4122  0F3D                     	;# 
  4123  0F3E                     	;# 
  4124  0F3F                     	;# 
  4125  0F40                     	;# 
  4126  0F41                     	;# 
  4127  0F43                     	;# 
  4128  0F44                     	;# 
  4129  0F45                     	;# 
  4130  0F46                     	;# 
  4131  0F47                     	;# 
  4132  0F48                     	;# 
  4133  0F49                     	;# 
  4134  0F4A                     	;# 
  4135  0F4B                     	;# 
  4136  0F4C                     	;# 
  4137  0F4E                     	;# 
  4138  0F4F                     	;# 
  4139  0F50                     	;# 
  4140  0F51                     	;# 
  4141  0F52                     	;# 
  4142  0F53                     	;# 
  4143  0F54                     	;# 
  4144  0F55                     	;# 
  4145  0F56                     	;# 
  4146  0F57                     	;# 
  4147  0F65                     	;# 
  4148  0F68                     	;# 
  4149  0F69                     	;# 
  4150  0F6A                     	;# 
  4151  0F6B                     	;# 
  4152  0FE4                     	;# 
  4153  0FE5                     	;# 
  4154  0FE6                     	;# 
  4155  0FE7                     	;# 
  4156  0FE8                     	;# 
  4157  0FE9                     	;# 
  4158  0FEA                     	;# 
  4159  0FEB                     	;# 
  4160  0FED                     	;# 
  4161  0FEE                     	;# 
  4162  0FEF                     	;_samples
  4163                           
  4164                           	psect	idataBANK0
  4165  0A39                     __pidataBANK0:	
  4166                           
  4167                           ;initializer for _setpoint
  4168  0A39  3446               	retlw	70
  4169                           
  4170                           	psect	idataBANK1
  4171  0AD4                     __pidataBANK1:	
  4172                           
  4173                           ;initializer for ___cgram
  4174  0AD4  340C               	retlw	12
  4175  0AD5  3412               	retlw	18
  4176  0AD6  3412               	retlw	18
  4177  0AD7  340C               	retlw	12
  4178  0AD8  3400               	retlw	0
  4179  0AD9  3400               	retlw	0
  4180  0ADA  3400               	retlw	0
  4181  0ADB  3400               	retlw	0
  4182  0ADC  340A               	retlw	10
  4183  0ADD  3415               	retlw	21
  4184  0ADE  3411               	retlw	17
  4185  0ADF  340A               	retlw	10
  4186  0AE0  3404               	retlw	4
  4187  0AE1  3400               	retlw	0
  4188  0AE2  3400               	retlw	0
  4189  0AE3  3400               	retlw	0
  4190  0AE4  340A               	retlw	10
  4191  0AE5  341F               	retlw	31
  4192  0AE6  341F               	retlw	31
  4193  0AE7  340E               	retlw	14
  4194  0AE8  3404               	retlw	4
  4195  0AE9  3400               	retlw	0
  4196  0AEA  3400               	retlw	0
  4197  0AEB  3400               	retlw	0
  4198                           
  4199                           	psect	stringtext
  4200  1000                     __pstringtext:	
  4201  1000                     log@coeff:	
  4202  1000  3400               	retlw	0
  4203  1001  3400               	retlw	0
  4204  1002  3400               	retlw	0
  4205  1003  3400               	retlw	0
  4206  1004  3480               	retlw	128
  4207  1005  343F               	retlw	63
  4208  1006  34F0               	retlw	240
  4209  1007  34FF               	retlw	255
  4210  1008  34BE               	retlw	190
  4211  1009  34E2               	retlw	226
  4212  100A  34A9               	retlw	169
  4213  100B  343E               	retlw	62
  4214  100C  3483               	retlw	131
  4215  100D  3476               	retlw	118
  4216  100E  34BE               	retlw	190
  4217  100F  34AE               	retlw	174
  4218  1010  342B               	retlw	43
  4219  1011  343E               	retlw	62
  4220  1012  343C               	retlw	60
  4221  1013  34C3               	retlw	195
  4222  1014  34BD               	retlw	189
  4223  1015  34D2               	retlw	210
  4224  1016  3413               	retlw	19
  4225  1017  343D               	retlw	61
  4226  1018  3478               	retlw	120
  4227  1019  34D3               	retlw	211
  4228  101A  34BB               	retlw	187
  4229  101B                     __end_oflog@coeff:	
  4230  0016                     _LATA	set	22
  4231  0017                     _LATB	set	23
  4232  0018                     _LATC	set	24
  4233  0011                     _TRISA	set	17
  4234  0012                     _TRISB	set	18
  4235  0013                     _TRISC	set	19
  4236  005F                     _GIE	set	95
  4237  0063                     _RA3	set	99
  4238  0064                     _RA4	set	100
  4239  0068                     _RB0	set	104
  4240  0069                     _RB1	set	105
  4241  006A                     _RB2	set	106
  4242  006B                     _RB3	set	107
  4243  006C                     _RB4	set	108
  4244  006D                     _RB5	set	109
  4245  009D                     _ADACQ	set	157
  4246  0099                     _ADACT	set	153
  4247  009B                     _ADCAP	set	155
  4248  0098                     _ADCLK	set	152
  4249  0093                     _ADCON0	set	147
  4250  0093                     _ADCON0bits	set	147
  4251  0094                     _ADCON1	set	148
  4252  0095                     _ADCON2	set	149
  4253  0096                     _ADCON3	set	150
  4254  009E                     _ADPCH	set	158
  4255  009C                     _ADPRE	set	156
  4256  009A                     _ADREF	set	154
  4257  008D                     _ADRESH	set	141
  4258  008C                     _ADRESL	set	140
  4259  0097                     _ADSTAT	set	151
  4260  010F                     _ADLTHH	set	271
  4261  010E                     _ADLTHL	set	270
  4262  010D                     _ADRPT	set	269
  4263  0113                     _ADSTPTH	set	275
  4264  0112                     _ADSTPTL	set	274
  4265  0111                     _ADUTHH	set	273
  4266  0110                     _ADUTHL	set	272
  4267  021F                     _CCPTMRS1bits	set	543
  4268  0290                     _T2CLKCON	set	656
  4269  028E                     _T2CON	set	654
  4270  028E                     _T2CONbits	set	654
  4271  028F                     _T2HLT	set	655
  4272  028D                     _T2PR	set	653
  4273  0291                     _T2RST	set	657
  4274  028C                     _T2TMR	set	652
  4275  038E                     _PWM6CON	set	910
  4276  038D                     _PWM6DCH	set	909
  4277  038C                     _PWM6DCL	set	908
  4278  0716                     _PIE0bits	set	1814
  4279  0710                     _PIR4bits	set	1808
  4280  088D                     _OSCCON1	set	2189
  4281  088F                     _OSCCON3	set	2191
  4282  0891                     _OSCEN	set	2193
  4283  0893                     _OSCFRQ	set	2195
  4284  0892                     _OSCTUNE	set	2194
  4285  090C                     _FVRCON	set	2316
  4286  0E8F                     _PPSLOCK	set	3727
  4287  0E8F                     _PPSLOCKbits	set	3727
  4288  0F38                     _ANSELA	set	3896
  4289  0F43                     _ANSELB	set	3907
  4290  0F4E                     _ANSELC	set	3918
  4291  0F11                     _RA1PPS	set	3857
  4292  0F39                     _WPUA	set	3897
  4293  0F44                     _WPUB	set	3908
  4294  0F4F                     _WPUC	set	3919
  4295  0F65                     _WPUE	set	3941
  4296  101B                     STR_1:	
  4297  101B  3453               	retlw	83	;'S'
  4298  101C  3465               	retlw	101	;'e'
  4299  101D  3474               	retlw	116	;'t'
  4300  101E  3470               	retlw	112	;'p'
  4301  101F  346F               	retlw	111	;'o'
  4302  1020  3469               	retlw	105	;'i'
  4303  1021  346E               	retlw	110	;'n'
  4304  1022  3474               	retlw	116	;'t'
  4305  1023  343F               	retlw	63	;'?'
  4306  1024  3400               	retlw	0
  4307  1025                     STR_3:	
  4308  1025  3454               	retlw	84	;'T'
  4309  1026  3469               	retlw	105	;'i'
  4310  1027  346D               	retlw	109	;'m'
  4311  1028  3465               	retlw	101	;'e'
  4312  1029  343A               	retlw	58	;':'
  4313  102A  3400               	retlw	0
  4314  101B                     
  4315                           ; #config settings
  4316  0000                     
  4317                           	psect	cinit
  4318  07D3                     start_initialization:	
  4319  07D3                     __initialization:		;BIGRAM
  4320                           
  4321                           ; Initialize objects allocated to BANK0
  4322  07D3  318A  2239  3187   	fcall	__pidataBANK0	;fetch initializer
  4323  07D6  00E1               	movwf	__pdataBANK0& (0+127)
  4324                           
  4325                           ; Initialize objects allocated to BANK1
  4326  07D7  30D4               	movlw	low __pidataBANK1
  4327  07D8  0084               	movwf	4
  4328  07D9  308A               	movlw	(high __pidataBANK1)| (0+128)
  4329  07DA  0085               	movwf	5
  4330  07DB  30BB               	movlw	low __pdataBANK1
  4331  07DC  0086               	movwf	6
  4332  07DD  3000               	movlw	high __pdataBANK1
  4333  07DE  0087               	movwf	7
  4334  07DF  3000               	movlw	0
  4335  07E0  00FF               	movwf	btemp+1
  4336  07E1  3018               	movlw	24
  4337  07E2  318A  225E  3187   	fcall	init_ram
  4338                           
  4339                           ; Clear objects allocated to BIGRAM
  4340  07E5  308C               	movlw	low (0+9100)
  4341  07E6  0084               	movwf	4
  4342  07E7  3023               	movlw	high (0+9100)
  4343  07E8  0085               	movwf	5
  4344  07E9  3064               	movlw	100
  4345  07EA  00FE               	movwf	btemp
  4346  07EB  3000               	movlw	0
  4347  07EC  00FF               	movwf	btemp+1
  4348  07ED  318A  2252  3187   	fcall	clear_ram0
  4349                           
  4350                           ; Clear objects allocated to BANK0
  4351  07F0  3057               	movlw	low __pbssBANK0
  4352  07F1  0084               	movwf	4
  4353  07F2  3000               	movlw	high __pbssBANK0
  4354  07F3  0085               	movwf	5
  4355  07F4  300A               	movlw	10
  4356  07F5  00FE               	movwf	btemp
  4357  07F6  3000               	movlw	0
  4358  07F7  00FF               	movwf	btemp+1
  4359  07F8  318A  2252         	fcall	clear_ram0
  4360                           
  4361                           ; Clear objects allocated to BANK1
  4362  07FA  0021               	movlb	1	; select bank1
  4363  07FB  01D3               	clrf	__pbssBANK1& (0+127)
  4364  07FC  01D4               	clrf	(__pbssBANK1+1)& (0+127)
  4365  07FD                     end_of_initialization:	
  4366                           ;End of C runtime variable initialization code
  4367                           
  4368  07FD                     __end_of__initialization:	
  4369  07FD  0020               	movlb	0
  4370  07FE  3184  2C9A         	ljmp	_main	;jump to C main() function
  4371                           
  4372                           	psect	bssBANK0
  4373  0057                     __pbssBANK0:	
  4374  0057                     LCD_Write_Int@F13684:	
  4375  0057                     	ds	5
  4376  005C                     _errno:	
  4377  005C                     	ds	2
  4378  005E                     _downCount:	
  4379  005E                     	ds	1
  4380  005F                     _oldSetpoint:	
  4381  005F                     	ds	1
  4382  0060                     _upCount:	
  4383  0060                     	ds	1
  4384                           
  4385                           	psect	dataBANK0
  4386  0061                     __pdataBANK0:	
  4387  0061                     _setpoint:	
  4388  0061                     	ds	1
  4389                           
  4390                           	psect	bssBANK1
  4391  00D3                     __pbssBANK1:	
  4392  00D3                     main@sampleIndex:	
  4393  00D3                     	ds	2
  4394                           
  4395                           	psect	dataBANK1
  4396  00BB                     __pdataBANK1:	
  4397  00BB                     ___cgram:	
  4398  00BB                     	ds	24
  4399                           
  4400                           	psect	inittext
  4401  0A5E                     init_ram:	
  4402  0A5E  00FE               	movwf	126
  4403  0A5F                     initloop:	
  4404  0A5F  0012               	moviw fsr0++
  4405  0A60  001E               	movwi fsr1++
  4406  0A61  3001               	movlw	1
  4407  0A62  02FE               	subwf	126,f
  4408  0A63  3000               	movlw	0
  4409  0A64  3BFF               	subwfb	127,f
  4410  0A65  087F               	movf	127,w
  4411  0A66  047E               	iorwf	126,w
  4412  0A67  1903               	btfsc	3,2
  4413  0A68  3400               	retlw	0
  4414  0A69  2A5F               	goto	initloop
  4415                           
  4416                           	psect	clrtext
  4417  0A52                     clear_ram0:	
  4418                           ;	Called with FSR0 containing the base address, and
  4419                           ;	btemp/btemp+1 has the size to clear
  4420                           
  4421  0A52  0064               	clrwdt	;clear the watchdog before getting into this loop
  4422  0A53                     clrloop0:	
  4423  0A53  0180               	clrf	0	;clear RAM location pointed to by FSR
  4424  0A54  3101               	addfsr 0,1
  4425  0A55  3001               	movlw	1
  4426  0A56  02FE               	subwf	126,f
  4427  0A57  3000               	movlw	0
  4428  0A58  3BFF               	subwfb	127,f
  4429  0A59  087F               	movf	127,w
  4430  0A5A  047E               	iorwf	126,w
  4431  0A5B  1903               	btfsc	3,2
  4432  0A5C  3400               	retlw	0	;all done for this memory range, return
  4433  0A5D  2A53               	goto	clrloop0	;have we reached the end yet?
  4434                           
  4435                           	psect	cstackBANK1
  4436  00A0                     __pcstackBANK1:	
  4437  00A0                     main@R:	
  4438                           
  4439                           ; 3 bytes @ 0x0
  4440  00A0                     	ds	3
  4441  00A3                     _main$957:	
  4442                           
  4443                           ; 3 bytes @ 0x3
  4444  00A3                     	ds	3
  4445  00A6                     main@displayTemp:	
  4446                           
  4447                           ; 2 bytes @ 0x6
  4448  00A6                     	ds	2
  4449  00A8                     main@minute:	
  4450                           
  4451                           ; 2 bytes @ 0x8
  4452  00A8                     	ds	2
  4453  00AA                     main@counter:	
  4454                           
  4455                           ; 2 bytes @ 0xA
  4456  00AA                     	ds	2
  4457  00AC                     main@firstTimeThrough:	
  4458                           
  4459                           ; 1 bytes @ 0xC
  4460  00AC                     	ds	1
  4461  00AD                     main@startupTimer:	
  4462                           
  4463                           ; 1 bytes @ 0xD
  4464  00AD                     	ds	1
  4465  00AE                     main@totals:	
  4466                           
  4467                           ; 4 bytes @ 0xE
  4468  00AE                     	ds	4
  4469  00B2                     main@readTemperatureOld:	
  4470                           
  4471                           ; 2 bytes @ 0x12
  4472  00B2                     	ds	2
  4473  00B4                     main@outCurrent:	
  4474                           
  4475                           ; 2 bytes @ 0x14
  4476  00B4                     	ds	2
  4477  00B6                     main@readTemperature:	
  4478                           
  4479                           ; 2 bytes @ 0x16
  4480  00B6                     	ds	2
  4481  00B8                     main@steinhart:	
  4482                           
  4483                           ; 3 bytes @ 0x18
  4484  00B8                     	ds	3
  4485                           
  4486                           	psect	cstackCOMMON
  4487  0070                     __pcstackCOMMON:	
  4488  0070                     ?_LCD_Cmd:	
  4489  0070                     ?_LCD_Write_Char:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ?_OSCILLATOR_Initialize:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ??_OSCILLATOR_Initialize:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ?_ADCC_Initialize:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ??_ADCC_Initialize:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ?_PWM6_Initialize:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ??_PWM6_Initialize:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ?_TMR2_Initialize:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ??_TMR2_Initialize:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ?_readButtons:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ??_readButtons:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ?_InitCustomChars:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?_LCD_Port:	
  4526                           ; 1 bytes @ 0x0
  4527                           
  4528  0070                     ??_LCD_Port:	
  4529                           ; 1 bytes @ 0x0
  4530                           
  4531  0070                     ?_LCD_Clear:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534  0070                     ?_LCD_Init:	
  4535                           ; 1 bytes @ 0x0
  4536                           
  4537  0070                     ?_PIN_MANAGER_Initialize:	
  4538                           ; 1 bytes @ 0x0
  4539                           
  4540  0070                     ??_PIN_MANAGER_Initialize:	
  4541                           ; 1 bytes @ 0x0
  4542                           
  4543  0070                     ?_SYSTEM_Initialize:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0070                     ?_PWM6_LoadDutyValue:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     ?_tempSetpoint:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ?_main:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0070                     ?_ADCC_GetSingleConversion:	
  4556                           ; 1 bytes @ 0x0
  4557                           
  4558  0070                     ?___awdiv:	
  4559                           ; 2 bytes @ 0x0
  4560                           
  4561  0070                     ?___awmod:	
  4562                           ; 2 bytes @ 0x0
  4563                           
  4564  0070                     ?___ftpack:	
  4565                           ; 2 bytes @ 0x0
  4566                           
  4567  0070                     ?_frexp:	
  4568                           ; 3 bytes @ 0x0
  4569                           
  4570  0070                     ?___ftneg:	
  4571                           ; 3 bytes @ 0x0
  4572                           
  4573  0070                     ?___aldiv:	
  4574                           ; 3 bytes @ 0x0
  4575                           
  4576  0070                     ?___fttol:	
  4577                           ; 4 bytes @ 0x0
  4578                           
  4579  0070                     LCD_Port@a:	
  4580                           ; 4 bytes @ 0x0
  4581                           
  4582  0070                     PIN_MANAGER_Initialize@state:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0070                     PWM6_LoadDutyValue@dutyValue:	
  4586                           ; 1 bytes @ 0x0
  4587                           
  4588  0070                     ___awdiv@divisor:	
  4589                           ; 2 bytes @ 0x0
  4590                           
  4591  0070                     ___awmod@divisor:	
  4592                           ; 2 bytes @ 0x0
  4593                           
  4594  0070                     ___ftpack@arg:	
  4595                           ; 2 bytes @ 0x0
  4596                           
  4597  0070                     ___ftneg@f1:	
  4598                           ; 3 bytes @ 0x0
  4599                           
  4600  0070                     ___fttol@f1:	
  4601                           ; 3 bytes @ 0x0
  4602                           
  4603  0070                     frexp@value:	
  4604                           ; 3 bytes @ 0x0
  4605                           
  4606  0070                     ___aldiv@divisor:	
  4607                           ; 3 bytes @ 0x0
  4608                           
  4609                           
  4610                           ; 4 bytes @ 0x0
  4611  0070                     	ds	1
  4612  0071                     ??_LCD_Cmd:	
  4613  0071                     ??_LCD_Write_Char:	
  4614                           ; 1 bytes @ 0x1
  4615                           
  4616                           
  4617                           ; 1 bytes @ 0x1
  4618  0071                     	ds	1
  4619  0072                     ??_PWM6_LoadDutyValue:	
  4620  0072                     LCD_Cmd@a:	
  4621                           ; 1 bytes @ 0x2
  4622                           
  4623  0072                     LCD_Write_Char@temp:	
  4624                           ; 1 bytes @ 0x2
  4625                           
  4626  0072                     ___awdiv@dividend:	
  4627                           ; 1 bytes @ 0x2
  4628                           
  4629  0072                     ___awmod@dividend:	
  4630                           ; 2 bytes @ 0x2
  4631                           
  4632                           
  4633                           ; 2 bytes @ 0x2
  4634  0072                     	ds	1
  4635  0073                     ??_LCD_Clear:	
  4636  0073                     ?_LCD_Set_Cursor:	
  4637                           ; 1 bytes @ 0x3
  4638                           
  4639  0073                     ??_LCD_Init:	
  4640                           ; 1 bytes @ 0x3
  4641                           
  4642  0073                     ??_ADCC_GetSingleConversion:	
  4643                           ; 1 bytes @ 0x3
  4644                           
  4645  0073                     ??___ftneg:	
  4646                           ; 1 bytes @ 0x3
  4647                           
  4648  0073                     LCD_Set_Cursor@y:	
  4649                           ; 1 bytes @ 0x3
  4650                           
  4651  0073                     LCD_Write_Char@y:	
  4652                           ; 1 bytes @ 0x3
  4653                           
  4654  0073                     ADCC_GetSingleConversion@channel:	
  4655                           ; 1 bytes @ 0x3
  4656                           
  4657  0073                     ___ftpack@exp:	
  4658                           ; 1 bytes @ 0x3
  4659                           
  4660  0073                     frexp@eptr:	
  4661                           ; 1 bytes @ 0x3
  4662                           
  4663                           
  4664                           ; 1 bytes @ 0x3
  4665  0073                     	ds	1
  4666  0074                     ??_frexp:	
  4667  0074                     ??_LCD_Set_Cursor:	
  4668                           ; 1 bytes @ 0x4
  4669                           
  4670  0074                     ??___awdiv:	
  4671                           ; 1 bytes @ 0x4
  4672                           
  4673  0074                     ??___awmod:	
  4674                           ; 1 bytes @ 0x4
  4675                           
  4676  0074                     ??___fttol:	
  4677                           ; 1 bytes @ 0x4
  4678                           
  4679  0074                     LCD_Write_Char@a:	
  4680                           ; 1 bytes @ 0x4
  4681                           
  4682  0074                     ___ftpack@sign:	
  4683                           ; 1 bytes @ 0x4
  4684                           
  4685  0074                     ___aldiv@dividend:	
  4686                           ; 1 bytes @ 0x4
  4687                           
  4688                           
  4689                           ; 4 bytes @ 0x4
  4690  0074                     	ds	1
  4691  0075                     ??___ftpack:	
  4692  0075                     ??_InitCustomChars:	
  4693                           ; 1 bytes @ 0x5
  4694                           
  4695  0075                     ?_LCD_Write_String:	
  4696                           ; 1 bytes @ 0x5
  4697                           
  4698  0075                     LCD_Init@style:	
  4699                           ; 1 bytes @ 0x5
  4700                           
  4701  0075                     ___awdiv@counter:	
  4702                           ; 1 bytes @ 0x5
  4703                           
  4704  0075                     ___awmod@counter:	
  4705                           ; 1 bytes @ 0x5
  4706                           
  4707  0075                     LCD_Write_String@a:	
  4708                           ; 1 bytes @ 0x5
  4709                           
  4710                           
  4711                           ; 2 bytes @ 0x5
  4712  0075                     	ds	1
  4713  0076                     InitCustomChars@i:	
  4714  0076                     LCD_Set_Cursor@x:	
  4715                           ; 1 bytes @ 0x6
  4716                           
  4717  0076                     ___awdiv@sign:	
  4718                           ; 1 bytes @ 0x6
  4719                           
  4720  0076                     ___awmod@sign:	
  4721                           ; 1 bytes @ 0x6
  4722                           
  4723                           
  4724                           ; 1 bytes @ 0x6
  4725  0076                     	ds	1
  4726  0077                     ??_LCD_Write_String:	
  4727  0077                     ??_SYSTEM_Initialize:	
  4728                           ; 1 bytes @ 0x7
  4729                           
  4730  0077                     LCD_Set_Cursor@z:	
  4731                           ; 1 bytes @ 0x7
  4732                           
  4733  0077                     ___awdiv@quotient:	
  4734                           ; 1 bytes @ 0x7
  4735                           
  4736                           
  4737                           ; 2 bytes @ 0x7
  4738  0077                     	ds	1
  4739  0078                     ??___aldiv:	
  4740  0078                     ?___awtoft:	
  4741                           ; 1 bytes @ 0x8
  4742                           
  4743  0078                     ?___lbtoft:	
  4744                           ; 3 bytes @ 0x8
  4745                           
  4746  0078                     ?___lwtoft:	
  4747                           ; 3 bytes @ 0x8
  4748                           
  4749  0078                     LCD_Set_Cursor@w:	
  4750                           ; 3 bytes @ 0x8
  4751                           
  4752  0078                     ___fttol@sign1:	
  4753                           ; 1 bytes @ 0x8
  4754                           
  4755  0078                     LCD_Write_String@i:	
  4756                           ; 1 bytes @ 0x8
  4757                           
  4758  0078                     ___awtoft@c:	
  4759                           ; 2 bytes @ 0x8
  4760                           
  4761  0078                     ___lwtoft@c:	
  4762                           ; 2 bytes @ 0x8
  4763                           
  4764                           
  4765                           ; 2 bytes @ 0x8
  4766  0078                     	ds	1
  4767  0079                     ?_LCD_Write_Int:	
  4768  0079                     LCD_Set_Cursor@temp:	
  4769                           ; 1 bytes @ 0x9
  4770                           
  4771  0079                     LCD_Write_Int@value:	
  4772                           ; 1 bytes @ 0x9
  4773                           
  4774  0079                     ___fttol@lval:	
  4775                           ; 2 bytes @ 0x9
  4776                           
  4777                           
  4778                           ; 4 bytes @ 0x9
  4779  0079                     	ds	2
  4780  007B                     ??___awtoft:	
  4781  007B                     ??___lwtoft:	
  4782                           ; 1 bytes @ 0xB
  4783                           
  4784  007B                     LCD_Write_Int@fieldLength:	
  4785                           ; 1 bytes @ 0xB
  4786                           
  4787  007B                     ___lbtoft@c:	
  4788                           ; 1 bytes @ 0xB
  4789                           
  4790                           
  4791                           ; 1 bytes @ 0xB
  4792  007B                     	ds	1
  4793  007C                     LCD_Write_Int@numPlaces:	
  4794                           
  4795                           ; 1 bytes @ 0xC
  4796  007C                     	ds	1
  4797  007D                     LCD_Write_Int@sign:	
  4798  007D                     ___awtoft@sign:	
  4799                           ; 1 bytes @ 0xD
  4800                           
  4801  007D                     ___fttol@exp1:	
  4802                           ; 1 bytes @ 0xD
  4803                           
  4804                           
  4805                           ; 1 bytes @ 0xD
  4806  007D                     	ds	1
  4807  007E                     ??_eval_poly:	
  4808  007E                     ??___wmul:	
  4809                           ; 1 bytes @ 0xE
  4810                           
  4811  007E                     ??___ftsub:	
  4812                           ; 1 bytes @ 0xE
  4813                           
  4814                           
  4815                           	psect	cstackBANK0
  4816  0020                     __pcstackBANK0:	
  4817                           ; 1 bytes @ 0xE
  4818                           
  4819  0020                     ??_LCD_Write_Int:	
  4820  0020                     ??___lbtoft:	
  4821                           ; 1 bytes @ 0x0
  4822                           
  4823  0020                     ?___wmul:	
  4824                           ; 1 bytes @ 0x0
  4825                           
  4826  0020                     ?___ftdiv:	
  4827                           ; 2 bytes @ 0x0
  4828                           
  4829  0020                     ?___ftmul:	
  4830                           ; 3 bytes @ 0x0
  4831                           
  4832  0020                     ___aldiv@counter:	
  4833                           ; 3 bytes @ 0x0
  4834                           
  4835  0020                     ___wmul@multiplier:	
  4836                           ; 1 bytes @ 0x0
  4837                           
  4838  0020                     ___ftdiv@f2:	
  4839                           ; 2 bytes @ 0x0
  4840                           
  4841  0020                     ___ftmul@f1:	
  4842                           ; 3 bytes @ 0x0
  4843                           
  4844                           
  4845                           ; 3 bytes @ 0x0
  4846  0020                     	ds	1
  4847  0021                     ___aldiv@sign:	
  4848                           
  4849                           ; 1 bytes @ 0x1
  4850  0021                     	ds	1
  4851  0022                     ___wmul@multiplicand:	
  4852  0022                     ___aldiv@quotient:	
  4853                           ; 2 bytes @ 0x2
  4854                           
  4855                           
  4856                           ; 4 bytes @ 0x2
  4857  0022                     	ds	1
  4858  0023                     ___ftdiv@f1:	
  4859  0023                     ___ftmul@f2:	
  4860                           ; 3 bytes @ 0x3
  4861                           
  4862                           
  4863                           ; 3 bytes @ 0x3
  4864  0023                     	ds	1
  4865  0024                     ___wmul@product:	
  4866                           
  4867                           ; 2 bytes @ 0x4
  4868  0024                     	ds	1
  4869  0025                     LCD_Write_Int@str:	
  4870                           
  4871                           ; 5 bytes @ 0x5
  4872  0025                     	ds	1
  4873  0026                     ??___ftdiv:	
  4874  0026                     ??___ftmul:	
  4875                           ; 1 bytes @ 0x6
  4876                           
  4877                           
  4878                           ; 1 bytes @ 0x6
  4879  0026                     	ds	4
  4880  002A                     ___ftdiv@cntr:	
  4881  002A                     ___ftmul@exp:	
  4882                           ; 1 bytes @ 0xA
  4883                           
  4884  002A                     LCD_Write_Int@j:	
  4885                           ; 1 bytes @ 0xA
  4886                           
  4887                           
  4888                           ; 2 bytes @ 0xA
  4889  002A                     	ds	1
  4890  002B                     ___ftdiv@f3:	
  4891  002B                     ___ftmul@f3_as_product:	
  4892                           ; 3 bytes @ 0xB
  4893                           
  4894                           
  4895                           ; 3 bytes @ 0xB
  4896  002B                     	ds	1
  4897  002C                     LCD_Write_Int@i:	
  4898                           
  4899                           ; 2 bytes @ 0xC
  4900  002C                     	ds	2
  4901  002E                     ??_tempSetpoint:	
  4902  002E                     ___ftdiv@exp:	
  4903                           ; 1 bytes @ 0xE
  4904                           
  4905  002E                     ___ftmul@cntr:	
  4906                           ; 1 bytes @ 0xE
  4907                           
  4908                           
  4909                           ; 1 bytes @ 0xE
  4910  002E                     	ds	1
  4911  002F                     ___ftdiv@sign:	
  4912  002F                     ___ftmul@sign:	
  4913                           ; 1 bytes @ 0xF
  4914                           
  4915                           
  4916                           ; 1 bytes @ 0xF
  4917  002F                     	ds	1
  4918  0030                     ?___ftadd:	
  4919  0030                     ___ftadd@f1:	
  4920                           ; 3 bytes @ 0x10
  4921                           
  4922                           
  4923                           ; 3 bytes @ 0x10
  4924  0030                     	ds	1
  4925  0031                     tempSetpoint@counter:	
  4926                           
  4927                           ; 1 bytes @ 0x11
  4928  0031                     	ds	2
  4929  0033                     ___ftadd@f2:	
  4930                           
  4931                           ; 3 bytes @ 0x13
  4932  0033                     	ds	3
  4933  0036                     ??___ftadd:	
  4934                           
  4935                           ; 1 bytes @ 0x16
  4936  0036                     	ds	4
  4937  003A                     ___ftadd@sign:	
  4938                           
  4939                           ; 1 bytes @ 0x1A
  4940  003A                     	ds	1
  4941  003B                     ___ftadd@exp2:	
  4942                           
  4943                           ; 1 bytes @ 0x1B
  4944  003B                     	ds	1
  4945  003C                     ___ftadd@exp1:	
  4946                           
  4947                           ; 1 bytes @ 0x1C
  4948  003C                     	ds	1
  4949  003D                     ?___ftge:	
  4950  003D                     ?_eval_poly:	
  4951                           ; 1 bit 
  4952                           
  4953  003D                     ?___ftsub:	
  4954                           ; 3 bytes @ 0x1D
  4955                           
  4956  003D                     ___ftge@ff1:	
  4957                           ; 3 bytes @ 0x1D
  4958                           
  4959  003D                     ___ftsub@f2:	
  4960                           ; 3 bytes @ 0x1D
  4961                           
  4962  003D                     eval_poly@x:	
  4963                           ; 3 bytes @ 0x1D
  4964                           
  4965                           
  4966                           ; 3 bytes @ 0x1D
  4967  003D                     	ds	3
  4968  0040                     eval_poly@d:	
  4969  0040                     ___ftge@ff2:	
  4970                           ; 2 bytes @ 0x20
  4971                           
  4972  0040                     ___ftsub@f1:	
  4973                           ; 3 bytes @ 0x20
  4974                           
  4975                           
  4976                           ; 3 bytes @ 0x20
  4977  0040                     	ds	2
  4978  0042                     eval_poly@n:	
  4979                           
  4980                           ; 2 bytes @ 0x22
  4981  0042                     	ds	1
  4982  0043                     ??___ftge:	
  4983                           
  4984                           ; 1 bytes @ 0x23
  4985  0043                     	ds	1
  4986  0044                     eval_poly@res:	
  4987                           
  4988                           ; 3 bytes @ 0x24
  4989  0044                     	ds	3
  4990  0047                     ?_log:	
  4991  0047                     log@x:	
  4992                           ; 3 bytes @ 0x27
  4993                           
  4994                           
  4995                           ; 3 bytes @ 0x27
  4996  0047                     	ds	3
  4997  004A                     ??_log:	
  4998                           
  4999                           ; 1 bytes @ 0x2A
  5000  004A                     	ds	1
  5001  004B                     log@exponent:	
  5002                           
  5003                           ; 2 bytes @ 0x2B
  5004  004B                     	ds	2
  5005  004D                     ??_main:	
  5006                           
  5007                           ; 1 bytes @ 0x2D
  5008  004D                     	ds	10
  5009                           
  5010                           	psect	maintext
  5011  049A                     __pmaintext:	
  5012 ;;
  5013 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5014 ;;
  5015 ;; *************** function _main *****************
  5016 ;; Defined at:
  5017 ;;		line 14 in file "main.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  totals          4   14[BANK1 ] long 
  5022 ;;  steinhart       3   24[BANK1 ] float 
  5023 ;;  R               3    0[BANK1 ] float 
  5024 ;;  readTemperat    2   22[BANK1 ] unsigned int 
  5025 ;;  outCurrent      2   20[BANK1 ] unsigned int 
  5026 ;;  readTemperat    2   18[BANK1 ] unsigned int 
  5027 ;;  counter         2   10[BANK1 ] unsigned int 
  5028 ;;  minute          2    8[BANK1 ] unsigned int 
  5029 ;;  displayTemp     2    6[BANK1 ] unsigned int 
  5030 ;;  startupTimer    1   13[BANK1 ] unsigned char 
  5031 ;;  firstTimeThr    1   12[BANK1 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : B1F/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:       37 bytes
  5046 ;; Hardware stack levels required when called:    4
  5047 ;; This function calls:
  5048 ;;		_ADCC_GetSingleConversion
  5049 ;;		_LCD_Set_Cursor
  5050 ;;		_LCD_Write_Char
  5051 ;;		_LCD_Write_Int
  5052 ;;		_LCD_Write_String
  5053 ;;		_PWM6_LoadDutyValue
  5054 ;;		_SYSTEM_Initialize
  5055 ;;		___aldiv
  5056 ;;		___ftadd
  5057 ;;		___ftdiv
  5058 ;;		___ftge
  5059 ;;		___ftneg
  5060 ;;		___ftsub
  5061 ;;		___fttol
  5062 ;;		___lbtoft
  5063 ;;		___lwtoft
  5064 ;;		___wmul
  5065 ;;		_log
  5066 ;;		_readButtons
  5067 ;;		_tempSetpoint
  5068 ;; This function is called by:
  5069 ;;		Startup code after reset
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _main
  5075  049A                     _main:	
  5076                           
  5077                           ;main.c: 16: SYSTEM_Initialize();
  5078                           
  5079                           ;incstack = 0
  5080                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5081  049A  318C  2436  3184   	fcall	_SYSTEM_Initialize
  5082                           
  5083                           ;main.c: 18: uint16_t readTemperature, outCurrent = 1023, readTemperatureOld, displayTem
      +                          p = 70, counter = 0, minute = 0;
  5084  049D  30FF               	movlw	255
  5085  049E  0021               	movlb	1	; select bank1
  5086  049F  00B4               	movwf	main@outCurrent^(0+128)
  5087  04A0  3003               	movlw	3
  5088  04A1  00B5               	movwf	(main@outCurrent^(0+128)+1)
  5089  04A2  3046               	movlw	70
  5090  04A3  00A6               	movwf	main@displayTemp^(0+128)
  5091  04A4  3000               	movlw	0
  5092  04A5  00A7               	movwf	(main@displayTemp^(0+128)+1)
  5093  04A6  01AA               	clrf	main@counter^(0+128)
  5094  04A7  01AB               	clrf	(main@counter+1)^(0+128)
  5095  04A8  01A8               	clrf	main@minute^(0+128)
  5096  04A9  01A9               	clrf	(main@minute+1)^(0+128)
  5097                           
  5098                           ;main.c: 20: unsigned char startupTimer = 0, firstTimeThrough = 0;
  5099  04AA  01AD               	clrf	main@startupTimer^(0+128)
  5100  04AB  01AC               	clrf	main@firstTimeThrough^(0+128)
  5101                           
  5102                           ;main.c: 22: float R, steinhart;
  5103                           ;main.c: 24: static uint16_t sampleIndex = 0;
  5104                           ;main.c: 26: int32_t totals = 0;
  5105  04AC  3000               	movlw	0
  5106  04AD  00B1               	movwf	(main@totals+3)^(0+128)
  5107  04AE  3000               	movlw	0
  5108  04AF  00B0               	movwf	(main@totals+2)^(0+128)
  5109  04B0  3000               	movlw	0
  5110  04B1  00AF               	movwf	(main@totals+1)^(0+128)
  5111  04B2  3000               	movlw	0
  5112  04B3  00AE               	movwf	main@totals^(0+128)
  5113  04B4                     l2738:	
  5114                           ;main.c: 30: while (1)
  5115                           
  5116                           
  5117                           ;main.c: 31: {
  5118                           ;main.c: 32: readTemperature = ADCC_GetSingleConversion(2);
  5119  04B4  3002               	movlw	2
  5120  04B5  318A  2277  3184   	fcall	_ADCC_GetSingleConversion
  5121  04B8  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5122  04B9  0021               	movlb	1	; select bank1
  5123  04BA  00B7               	movwf	(main@readTemperature+1)^(0+128)
  5124  04BB  0870               	movf	?_ADCC_GetSingleConversion,w
  5125  04BC  00B6               	movwf	main@readTemperature^(0+128)
  5126                           
  5127                           ;main.c: 34: totals = totals - samples[sampleIndex];
  5128  04BD  082E               	movf	main@totals^(0+128),w
  5129  04BE  0020               	movlb	0	; select bank0
  5130  04BF  00CD               	movwf	??_main
  5131  04C0  0021               	movlb	1	; select bank1
  5132  04C1  082F               	movf	(main@totals+1)^(0+128),w
  5133  04C2  0020               	movlb	0	; select bank0
  5134  04C3  00CE               	movwf	??_main+1
  5135  04C4  0021               	movlb	1	; select bank1
  5136  04C5  0830               	movf	(main@totals+2)^(0+128),w
  5137  04C6  0020               	movlb	0	; select bank0
  5138  04C7  00CF               	movwf	??_main+2
  5139  04C8  0021               	movlb	1	; select bank1
  5140  04C9  0831               	movf	(main@totals+3)^(0+128),w
  5141  04CA  0020               	movlb	0	; select bank0
  5142  04CB  00D0               	movwf	??_main+3
  5143  04CC  0021               	movlb	1	; select bank1
  5144  04CD  0854               	movf	(main@sampleIndex+1)^(0+128),w
  5145  04CE  0020               	movlb	0	; select bank0
  5146  04CF  00D2               	movwf	??_main+5
  5147  04D0  0021               	movlb	1	; select bank1
  5148  04D1  0853               	movf	main@sampleIndex^(0+128),w
  5149  04D2  0020               	movlb	0	; select bank0
  5150  04D3  00D1               	movwf	??_main+4
  5151  04D4  35D1               	lslf	??_main+4,f
  5152  04D5  0DD2               	rlf	??_main+5,f
  5153  04D6  308C               	movlw	140
  5154  04D7  0751               	addwf	??_main+4,w
  5155  04D8  0084               	movwf	4
  5156  04D9  3023               	movlw	35
  5157  04DA  3D52               	addwfc	??_main+5,w
  5158  04DB  0085               	movwf	5
  5159  04DC  3F00               	moviw [0]fsr0
  5160  04DD  00D3               	movwf	??_main+6
  5161  04DE  3F01               	moviw [1]fsr0
  5162  04DF  00D4               	movwf	??_main+7
  5163  04E0  01D5               	clrf	??_main+8
  5164  04E1  01D6               	clrf	??_main+9
  5165  04E2  09D3               	comf	??_main+6,f
  5166  04E3  09D4               	comf	??_main+7,f
  5167  04E4  09D5               	comf	??_main+8,f
  5168  04E5  09D6               	comf	??_main+9,f
  5169  04E6  0AD3               	incf	??_main+6,f
  5170  04E7  1903               	skipnz
  5171  04E8  0AD4               	incf	??_main+7,f
  5172  04E9  1903               	skipnz
  5173  04EA  0AD5               	incf	??_main+8,f
  5174  04EB  1903               	skipnz
  5175  04EC  0AD6               	incf	??_main+9,f
  5176  04ED  0853               	movf	??_main+6,w
  5177  04EE  07CD               	addwf	??_main,f
  5178  04EF  0854               	movf	??_main+7,w
  5179  04F0  3DCE               	addwfc	??_main+1,f
  5180  04F1  0855               	movf	??_main+8,w
  5181  04F2  3DCF               	addwfc	??_main+2,f
  5182  04F3  0856               	movf	??_main+9,w
  5183  04F4  3DD0               	addwfc	??_main+3,f
  5184  04F5  0850               	movf	??_main+3,w
  5185  04F6  0021               	movlb	1	; select bank1
  5186  04F7  00B1               	movwf	(main@totals+3)^(0+128)
  5187  04F8  0020               	movlb	0	; select bank0
  5188  04F9  084F               	movf	??_main+2,w
  5189  04FA  0021               	movlb	1	; select bank1
  5190  04FB  00B0               	movwf	(main@totals+2)^(0+128)
  5191  04FC  0020               	movlb	0	; select bank0
  5192  04FD  084E               	movf	??_main+1,w
  5193  04FE  0021               	movlb	1	; select bank1
  5194  04FF  00AF               	movwf	(main@totals+1)^(0+128)
  5195  0500  0020               	movlb	0	; select bank0
  5196  0501  084D               	movf	??_main,w
  5197  0502  0021               	movlb	1	; select bank1
  5198  0503  00AE               	movwf	main@totals^(0+128)
  5199                           
  5200                           ;main.c: 36: samples[sampleIndex] = readTemperature;
  5201  0504  0854               	movf	(main@sampleIndex+1)^(0+128),w
  5202  0505  0020               	movlb	0	; select bank0
  5203  0506  00CE               	movwf	??_main+1
  5204  0507  0021               	movlb	1	; select bank1
  5205  0508  0853               	movf	main@sampleIndex^(0+128),w
  5206  0509  0020               	movlb	0	; select bank0
  5207  050A  00CD               	movwf	??_main
  5208  050B  35CD               	lslf	??_main,f
  5209  050C  0DCE               	rlf	??_main+1,f
  5210  050D  308C               	movlw	140
  5211  050E  00CF               	movwf	??_main+2
  5212  050F  3023               	movlw	35
  5213  0510  00D0               	movwf	??_main+3
  5214  0511  084D               	movf	??_main,w
  5215  0512  074F               	addwf	??_main+2,w
  5216  0513  0086               	movwf	6
  5217  0514  084E               	movf	??_main+1,w
  5218  0515  3D50               	addwfc	??_main+3,w
  5219  0516  0087               	movwf	7
  5220  0517  0021               	movlb	1	; select bank1
  5221  0518  0836               	movf	main@readTemperature^(0+128),w
  5222  0519  3FC0               	movwi [0]fsr1
  5223  051A  0837               	movf	(main@readTemperature+1)^(0+128),w
  5224  051B  3FC1               	movwi [1]fsr1
  5225                           
  5226                           ;main.c: 38: totals = totals + samples[sampleIndex];
  5227  051C  082E               	movf	main@totals^(0+128),w
  5228  051D  0020               	movlb	0	; select bank0
  5229  051E  00CD               	movwf	??_main
  5230  051F  0021               	movlb	1	; select bank1
  5231  0520  082F               	movf	(main@totals+1)^(0+128),w
  5232  0521  0020               	movlb	0	; select bank0
  5233  0522  00CE               	movwf	??_main+1
  5234  0523  0021               	movlb	1	; select bank1
  5235  0524  0830               	movf	(main@totals+2)^(0+128),w
  5236  0525  0020               	movlb	0	; select bank0
  5237  0526  00CF               	movwf	??_main+2
  5238  0527  0021               	movlb	1	; select bank1
  5239  0528  0831               	movf	(main@totals+3)^(0+128),w
  5240  0529  0020               	movlb	0	; select bank0
  5241  052A  00D0               	movwf	??_main+3
  5242  052B  0021               	movlb	1	; select bank1
  5243  052C  0854               	movf	(main@sampleIndex+1)^(0+128),w
  5244  052D  0020               	movlb	0	; select bank0
  5245  052E  00D2               	movwf	??_main+5
  5246  052F  0021               	movlb	1	; select bank1
  5247  0530  0853               	movf	main@sampleIndex^(0+128),w
  5248  0531  0020               	movlb	0	; select bank0
  5249  0532  00D1               	movwf	??_main+4
  5250  0533  35D1               	lslf	??_main+4,f
  5251  0534  0DD2               	rlf	??_main+5,f
  5252  0535  308C               	movlw	140
  5253  0536  0751               	addwf	??_main+4,w
  5254  0537  0084               	movwf	4
  5255  0538  3023               	movlw	35
  5256  0539  3D52               	addwfc	??_main+5,w
  5257  053A  0085               	movwf	5
  5258  053B  3F00               	moviw [0]fsr0
  5259  053C  00D3               	movwf	??_main+6
  5260  053D  3F01               	moviw [1]fsr0
  5261  053E  00D4               	movwf	??_main+7
  5262  053F  01D5               	clrf	??_main+8
  5263  0540  01D6               	clrf	??_main+9
  5264  0541  0853               	movf	??_main+6,w
  5265  0542  07CD               	addwf	??_main,f
  5266  0543  0854               	movf	??_main+7,w
  5267  0544  3DCE               	addwfc	??_main+1,f
  5268  0545  0855               	movf	??_main+8,w
  5269  0546  3DCF               	addwfc	??_main+2,f
  5270  0547  0856               	movf	??_main+9,w
  5271  0548  3DD0               	addwfc	??_main+3,f
  5272  0549  0850               	movf	??_main+3,w
  5273  054A  0021               	movlb	1	; select bank1
  5274  054B  00B1               	movwf	(main@totals+3)^(0+128)
  5275  054C  0020               	movlb	0	; select bank0
  5276  054D  084F               	movf	??_main+2,w
  5277  054E  0021               	movlb	1	; select bank1
  5278  054F  00B0               	movwf	(main@totals+2)^(0+128)
  5279  0550  0020               	movlb	0	; select bank0
  5280  0551  084E               	movf	??_main+1,w
  5281  0552  0021               	movlb	1	; select bank1
  5282  0553  00AF               	movwf	(main@totals+1)^(0+128)
  5283  0554  0020               	movlb	0	; select bank0
  5284  0555  084D               	movf	??_main,w
  5285  0556  0021               	movlb	1	; select bank1
  5286  0557  00AE               	movwf	main@totals^(0+128)
  5287                           
  5288                           ;main.c: 40: sampleIndex += 1;
  5289  0558  3001               	movlw	1
  5290  0559  07D3               	addwf	main@sampleIndex^(0+128),f
  5291  055A  3000               	movlw	0
  5292  055B  3DD4               	addwfc	(main@sampleIndex+1)^(0+128),f
  5293                           
  5294                           ;main.c: 42: if(sampleIndex >= 50)
  5295  055C  3000               	movlw	0
  5296  055D  0254               	subwf	(main@sampleIndex+1)^(0+128),w
  5297  055E  3032               	movlw	50
  5298  055F  1903               	skipnz
  5299  0560  0253               	subwf	main@sampleIndex^(0+128),w
  5300  0561  1C03               	skipc
  5301  0562  2D65               	goto	l2750
  5302                           
  5303                           ;main.c: 43: {
  5304                           ;main.c: 44: sampleIndex = 0;
  5305  0563  01D3               	clrf	main@sampleIndex^(0+128)
  5306  0564  01D4               	clrf	(main@sampleIndex+1)^(0+128)
  5307  0565                     l2750:	
  5308                           
  5309                           ;main.c: 45: }
  5310                           ;main.c: 47: readTemperature = totals / 50;
  5311  0565  3000               	movlw	0
  5312  0566  00F3               	movwf	___aldiv@divisor+3
  5313  0567  3000               	movlw	0
  5314  0568  00F2               	movwf	___aldiv@divisor+2
  5315  0569  3000               	movlw	0
  5316  056A  00F1               	movwf	___aldiv@divisor+1
  5317  056B  3032               	movlw	50
  5318  056C  00F0               	movwf	___aldiv@divisor
  5319  056D  0831               	movf	(main@totals+3)^(0+128),w
  5320  056E  00F7               	movwf	___aldiv@dividend+3
  5321  056F  0830               	movf	(main@totals+2)^(0+128),w
  5322  0570  00F6               	movwf	___aldiv@dividend+2
  5323  0571  082F               	movf	(main@totals+1)^(0+128),w
  5324  0572  00F5               	movwf	___aldiv@dividend+1
  5325  0573  082E               	movf	main@totals^(0+128),w
  5326  0574  00F4               	movwf	___aldiv@dividend
  5327  0575  318E  26F8  3184   	fcall	___aldiv
  5328  0578  0871               	movf	?___aldiv+1,w
  5329  0579  0021               	movlb	1	; select bank1
  5330  057A  00B7               	movwf	(main@readTemperature+1)^(0+128)
  5331  057B  0870               	movf	?___aldiv,w
  5332  057C  00B6               	movwf	main@readTemperature^(0+128)
  5333                           
  5334                           ;main.c: 49: if(startupTimer >= 250)
  5335  057D  30FA               	movlw	250
  5336  057E  022D               	subwf	main@startupTimer^(0+128),w
  5337  057F  1C03               	skipc
  5338  0580  2DB0               	goto	l2766
  5339                           
  5340                           ;main.c: 50: {
  5341                           ;main.c: 51: if(firstTimeThrough == 0)
  5342  0581  082C               	movf	main@firstTimeThrough^(0+128),w
  5343  0582  1D03               	btfss	3,2
  5344  0583  2D8E               	goto	l2760
  5345                           
  5346                           ;main.c: 52: {
  5347                           ;main.c: 53: readTemperatureOld = readTemperature;
  5348  0584  0837               	movf	(main@readTemperature+1)^(0+128),w
  5349  0585  00B3               	movwf	(main@readTemperatureOld+1)^(0+128)
  5350  0586  0836               	movf	main@readTemperature^(0+128),w
  5351  0587  00B2               	movwf	main@readTemperatureOld^(0+128)
  5352                           
  5353                           ;main.c: 54: firstTimeThrough +=1;
  5354  0588  3001               	movlw	1
  5355  0589  0020               	movlb	0	; select bank0
  5356  058A  00CD               	movwf	??_main
  5357  058B  084D               	movf	??_main,w
  5358  058C  0021               	movlb	1	; select bank1
  5359  058D  07AC               	addwf	main@firstTimeThrough^(0+128),f
  5360  058E                     l2760:	
  5361                           
  5362                           ;main.c: 55: }
  5363                           ;main.c: 57: if(readTemperature > readTemperatureOld)
  5364  058E  0837               	movf	(main@readTemperature+1)^(0+128),w
  5365  058F  0233               	subwf	(main@readTemperatureOld+1)^(0+128),w
  5366  0590  1D03               	skipz
  5367  0591  2D94               	goto	u2995
  5368  0592  0836               	movf	main@readTemperature^(0+128),w
  5369  0593  0232               	subwf	main@readTemperatureOld^(0+128),w
  5370  0594                     u2995:	
  5371  0594  1803               	skipnc
  5372  0595  2D9A               	goto	l322
  5373                           
  5374                           ;main.c: 58: {
  5375                           ;main.c: 59: readTemperatureOld += 1;
  5376  0596  3001               	movlw	1
  5377  0597  07B2               	addwf	main@readTemperatureOld^(0+128),f
  5378  0598  3000               	movlw	0
  5379  0599  3DB3               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  5380  059A                     l322:	
  5381                           
  5382                           ;main.c: 60: }
  5383                           ;main.c: 62: if(readTemperature < readTemperatureOld)
  5384  059A  0833               	movf	(main@readTemperatureOld+1)^(0+128),w
  5385  059B  0237               	subwf	(main@readTemperature+1)^(0+128),w
  5386  059C  1D03               	skipz
  5387  059D  2DA0               	goto	u3005
  5388  059E  0832               	movf	main@readTemperatureOld^(0+128),w
  5389  059F  0236               	subwf	main@readTemperature^(0+128),w
  5390  05A0                     u3005:	
  5391  05A0  1803               	skipnc
  5392  05A1  2DA6               	goto	l323
  5393                           
  5394                           ;main.c: 63: {
  5395                           ;main.c: 64: readTemperatureOld -= 1;
  5396  05A2  3001               	movlw	1
  5397  05A3  02B2               	subwf	main@readTemperatureOld^(0+128),f
  5398  05A4  3000               	movlw	0
  5399  05A5  3BB3               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  5400  05A6                     l323:	
  5401                           
  5402                           ;main.c: 65: }
  5403                           ;main.c: 67: readTemperature = readTemperatureOld;
  5404  05A6  0833               	movf	(main@readTemperatureOld+1)^(0+128),w
  5405  05A7  00B7               	movwf	(main@readTemperature+1)^(0+128)
  5406  05A8  0832               	movf	main@readTemperatureOld^(0+128),w
  5407  05A9  00B6               	movwf	main@readTemperature^(0+128)
  5408                           
  5409                           ;main.c: 69: startupTimer = 249;
  5410  05AA  30F9               	movlw	249
  5411  05AB  0020               	movlb	0	; select bank0
  5412  05AC  00CD               	movwf	??_main
  5413  05AD  084D               	movf	??_main,w
  5414  05AE  0021               	movlb	1	; select bank1
  5415  05AF  00AD               	movwf	main@startupTimer^(0+128)
  5416  05B0                     l2766:	
  5417                           
  5418                           ;main.c: 70: }
  5419                           ;main.c: 74: if(setpoint > steinhart)
  5420  05B0  0838               	movf	main@steinhart^(0+128),w
  5421  05B1  0020               	movlb	0	; select bank0
  5422  05B2  00BD               	movwf	___ftge@ff1
  5423  05B3  0021               	movlb	1	; select bank1
  5424  05B4  0839               	movf	(main@steinhart+1)^(0+128),w
  5425  05B5  0020               	movlb	0	; select bank0
  5426  05B6  00BE               	movwf	___ftge@ff1+1
  5427  05B7  0021               	movlb	1	; select bank1
  5428  05B8  083A               	movf	(main@steinhart+2)^(0+128),w
  5429  05B9  0020               	movlb	0	; select bank0
  5430  05BA  00BF               	movwf	___ftge@ff1+2
  5431  05BB  0861               	movf	_setpoint,w
  5432  05BC  318B  2305  3184   	fcall	___lbtoft
  5433  05BF  0878               	movf	?___lbtoft,w
  5434  05C0  0020               	movlb	0	; select bank0
  5435  05C1  00C0               	movwf	___ftge@ff2
  5436  05C2  0879               	movf	?___lbtoft+1,w
  5437  05C3  00C1               	movwf	___ftge@ff2+1
  5438  05C4  087A               	movf	?___lbtoft+2,w
  5439  05C5  00C2               	movwf	___ftge@ff2+2
  5440  05C6  318C  24A8  3184   	fcall	___ftge
  5441  05C9  1803               	btfsc	3,0
  5442  05CA  2DDC               	goto	l2774
  5443                           
  5444                           ;main.c: 75: {
  5445                           ;main.c: 76: if(outCurrent < 1022)
  5446  05CB  3003               	movlw	3
  5447  05CC  0021               	movlb	1	; select bank1
  5448  05CD  0235               	subwf	(main@outCurrent+1)^(0+128),w
  5449  05CE  30FE               	movlw	254
  5450  05CF  1903               	skipnz
  5451  05D0  0234               	subwf	main@outCurrent^(0+128),w
  5452  05D1  1803               	skipnc
  5453  05D2  2DD8               	goto	l2772
  5454                           
  5455                           ;main.c: 77: {
  5456                           ;main.c: 78: outCurrent++;
  5457  05D3  3001               	movlw	1
  5458  05D4  07B4               	addwf	main@outCurrent^(0+128),f
  5459  05D5  3000               	movlw	0
  5460  05D6  3DB5               	addwfc	(main@outCurrent+1)^(0+128),f
  5461                           
  5462                           ;main.c: 79: }
  5463  05D7  2DDC               	goto	l2774
  5464  05D8                     l2772:	
  5465                           
  5466                           ;main.c: 80: else
  5467                           ;main.c: 81: {
  5468                           ;main.c: 82: outCurrent = 1023;
  5469  05D8  30FF               	movlw	255
  5470  05D9  00B4               	movwf	main@outCurrent^(0+128)
  5471  05DA  3003               	movlw	3
  5472  05DB  00B5               	movwf	(main@outCurrent^(0+128)+1)
  5473  05DC                     l2774:	
  5474                           
  5475                           ;main.c: 83: }
  5476                           ;main.c: 84: }
  5477                           ;main.c: 86: if(setpoint < steinhart)
  5478  05DC  0020               	movlb	0	; select bank0
  5479  05DD  0861               	movf	_setpoint,w
  5480  05DE  318B  2305  3184   	fcall	___lbtoft
  5481  05E1  0878               	movf	?___lbtoft,w
  5482  05E2  0020               	movlb	0	; select bank0
  5483  05E3  00BD               	movwf	___ftge@ff1
  5484  05E4  0879               	movf	?___lbtoft+1,w
  5485  05E5  00BE               	movwf	___ftge@ff1+1
  5486  05E6  087A               	movf	?___lbtoft+2,w
  5487  05E7  00BF               	movwf	___ftge@ff1+2
  5488  05E8  0021               	movlb	1	; select bank1
  5489  05E9  0838               	movf	main@steinhart^(0+128),w
  5490  05EA  0020               	movlb	0	; select bank0
  5491  05EB  00C0               	movwf	___ftge@ff2
  5492  05EC  0021               	movlb	1	; select bank1
  5493  05ED  0839               	movf	(main@steinhart+1)^(0+128),w
  5494  05EE  0020               	movlb	0	; select bank0
  5495  05EF  00C1               	movwf	___ftge@ff2+1
  5496  05F0  0021               	movlb	1	; select bank1
  5497  05F1  083A               	movf	(main@steinhart+2)^(0+128),w
  5498  05F2  0020               	movlb	0	; select bank0
  5499  05F3  00C2               	movwf	___ftge@ff2+2
  5500  05F4  318C  24A8  3184   	fcall	___ftge
  5501  05F7  1803               	btfsc	3,0
  5502  05F8  2E08               	goto	l2782
  5503                           
  5504                           ;main.c: 87: {
  5505                           ;main.c: 88: if(outCurrent > 1)
  5506  05F9  3000               	movlw	0
  5507  05FA  0021               	movlb	1	; select bank1
  5508  05FB  0235               	subwf	(main@outCurrent+1)^(0+128),w
  5509  05FC  3002               	movlw	2
  5510  05FD  1903               	skipnz
  5511  05FE  0234               	subwf	main@outCurrent^(0+128),w
  5512  05FF  1C03               	skipc
  5513  0600  2E06               	goto	l2780
  5514                           
  5515                           ;main.c: 89: {
  5516                           ;main.c: 90: outCurrent-=1;
  5517  0601  3001               	movlw	1
  5518  0602  02B4               	subwf	main@outCurrent^(0+128),f
  5519  0603  3000               	movlw	0
  5520  0604  3BB5               	subwfb	(main@outCurrent+1)^(0+128),f
  5521                           
  5522                           ;main.c: 91: }
  5523  0605  2E08               	goto	l2782
  5524  0606                     l2780:	
  5525                           
  5526                           ;main.c: 92: else
  5527                           ;main.c: 93: {
  5528                           ;main.c: 94: outCurrent = 0;
  5529  0606  01B4               	clrf	main@outCurrent^(0+128)
  5530  0607  01B5               	clrf	(main@outCurrent+1)^(0+128)
  5531  0608                     l2782:	
  5532                           
  5533                           ;main.c: 95: }
  5534                           ;main.c: 96: }
  5535                           ;main.c: 98: PWM6_LoadDutyValue(outCurrent);
  5536  0608  0021               	movlb	1	; select bank1
  5537  0609  0835               	movf	(main@outCurrent+1)^(0+128),w
  5538  060A  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5539  060B  0834               	movf	main@outCurrent^(0+128),w
  5540  060C  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5541  060D  318A  22A6  3184   	fcall	_PWM6_LoadDutyValue
  5542                           
  5543                           ;main.c: 100: R = 10200/(1023/(float)readTemperature - 1);
  5544  0610  3000               	movlw	0
  5545  0611  0020               	movlb	0	; select bank0
  5546  0612  00B0               	movwf	___ftadd@f1
  5547  0613  3080               	movlw	128
  5548  0614  00B1               	movwf	___ftadd@f1+1
  5549  0615  30BF               	movlw	191
  5550  0616  00B2               	movwf	___ftadd@f1+2
  5551  0617  0021               	movlb	1	; select bank1
  5552  0618  0837               	movf	(main@readTemperature+1)^(0+128),w
  5553  0619  00F9               	movwf	___lwtoft@c+1
  5554  061A  0836               	movf	main@readTemperature^(0+128),w
  5555  061B  00F8               	movwf	___lwtoft@c
  5556  061C  3180  2004  3184   	fcall	___lwtoft
  5557  061F  0878               	movf	?___lwtoft,w
  5558  0620  0020               	movlb	0	; select bank0
  5559  0621  00A0               	movwf	___ftdiv@f2
  5560  0622  0879               	movf	?___lwtoft+1,w
  5561  0623  00A1               	movwf	___ftdiv@f2+1
  5562  0624  087A               	movf	?___lwtoft+2,w
  5563  0625  00A2               	movwf	___ftdiv@f2+2
  5564  0626  30C0               	movlw	192
  5565  0627  00A3               	movwf	___ftdiv@f1
  5566  0628  307F               	movlw	127
  5567  0629  00A4               	movwf	___ftdiv@f1+1
  5568  062A  3044               	movlw	68
  5569  062B  00A5               	movwf	___ftdiv@f1+2
  5570  062C  3180  2017  3184   	fcall	___ftdiv
  5571  062F  0020               	movlb	0	; select bank0
  5572  0630  0820               	movf	?___ftdiv,w
  5573  0631  00B3               	movwf	___ftadd@f2
  5574  0632  0821               	movf	?___ftdiv+1,w
  5575  0633  00B4               	movwf	___ftadd@f2+1
  5576  0634  0822               	movf	?___ftdiv+2,w
  5577  0635  00B5               	movwf	___ftadd@f2+2
  5578  0636  3183  23A4  3184   	fcall	___ftadd
  5579  0639  0020               	movlb	0	; select bank0
  5580  063A  0830               	movf	?___ftadd,w
  5581  063B  0021               	movlb	1	; select bank1
  5582  063C  00A3               	movwf	_main$957^(0+128)
  5583  063D  0020               	movlb	0	; select bank0
  5584  063E  0831               	movf	?___ftadd+1,w
  5585  063F  0021               	movlb	1	; select bank1
  5586  0640  00A4               	movwf	(_main$957+1)^(0+128)
  5587  0641  0020               	movlb	0	; select bank0
  5588  0642  0832               	movf	?___ftadd+2,w
  5589  0643  0021               	movlb	1	; select bank1
  5590  0644  00A5               	movwf	(_main$957+2)^(0+128)
  5591                           
  5592                           ;main.c: 100: R = 10200/(1023/(float)readTemperature - 1);
  5593  0645  0823               	movf	_main$957^(0+128),w
  5594  0646  0020               	movlb	0	; select bank0
  5595  0647  00A0               	movwf	___ftdiv@f2
  5596  0648  0021               	movlb	1	; select bank1
  5597  0649  0824               	movf	(_main$957+1)^(0+128),w
  5598  064A  0020               	movlb	0	; select bank0
  5599  064B  00A1               	movwf	___ftdiv@f2+1
  5600  064C  0021               	movlb	1	; select bank1
  5601  064D  0825               	movf	(_main$957+2)^(0+128),w
  5602  064E  0020               	movlb	0	; select bank0
  5603  064F  00A2               	movwf	___ftdiv@f2+2
  5604  0650  3060               	movlw	96
  5605  0651  00A3               	movwf	___ftdiv@f1
  5606  0652  301F               	movlw	31
  5607  0653  00A4               	movwf	___ftdiv@f1+1
  5608  0654  3046               	movlw	70
  5609  0655  00A5               	movwf	___ftdiv@f1+2
  5610  0656  3180  2017  3184   	fcall	___ftdiv
  5611  0659  0020               	movlb	0	; select bank0
  5612  065A  0820               	movf	?___ftdiv,w
  5613  065B  0021               	movlb	1	; select bank1
  5614  065C  00A0               	movwf	main@R^(0+128)
  5615  065D  0020               	movlb	0	; select bank0
  5616  065E  0821               	movf	?___ftdiv+1,w
  5617  065F  0021               	movlb	1	; select bank1
  5618  0660  00A1               	movwf	(main@R+1)^(0+128)
  5619  0661  0020               	movlb	0	; select bank0
  5620  0662  0822               	movf	?___ftdiv+2,w
  5621  0663  0021               	movlb	1	; select bank1
  5622  0664  00A2               	movwf	(main@R+2)^(0+128)
  5623                           
  5624                           ;main.c: 102: steinhart = R /10061;
  5625  0665  3034               	movlw	52
  5626  0666  0020               	movlb	0	; select bank0
  5627  0667  00A0               	movwf	___ftdiv@f2
  5628  0668  301D               	movlw	29
  5629  0669  00A1               	movwf	___ftdiv@f2+1
  5630  066A  3046               	movlw	70
  5631  066B  00A2               	movwf	___ftdiv@f2+2
  5632  066C  0021               	movlb	1	; select bank1
  5633  066D  0820               	movf	main@R^(0+128),w
  5634  066E  0020               	movlb	0	; select bank0
  5635  066F  00A3               	movwf	___ftdiv@f1
  5636  0670  0021               	movlb	1	; select bank1
  5637  0671  0821               	movf	(main@R+1)^(0+128),w
  5638  0672  0020               	movlb	0	; select bank0
  5639  0673  00A4               	movwf	___ftdiv@f1+1
  5640  0674  0021               	movlb	1	; select bank1
  5641  0675  0822               	movf	(main@R+2)^(0+128),w
  5642  0676  0020               	movlb	0	; select bank0
  5643  0677  00A5               	movwf	___ftdiv@f1+2
  5644  0678  3180  2017  3184   	fcall	___ftdiv
  5645  067B  0020               	movlb	0	; select bank0
  5646  067C  0820               	movf	?___ftdiv,w
  5647  067D  0021               	movlb	1	; select bank1
  5648  067E  00B8               	movwf	main@steinhart^(0+128)
  5649  067F  0020               	movlb	0	; select bank0
  5650  0680  0821               	movf	?___ftdiv+1,w
  5651  0681  0021               	movlb	1	; select bank1
  5652  0682  00B9               	movwf	(main@steinhart+1)^(0+128)
  5653  0683  0020               	movlb	0	; select bank0
  5654  0684  0822               	movf	?___ftdiv+2,w
  5655  0685  0021               	movlb	1	; select bank1
  5656  0686  00BA               	movwf	(main@steinhart+2)^(0+128)
  5657                           
  5658                           ;main.c: 103: steinhart = log(steinhart);
  5659  0687  0838               	movf	main@steinhart^(0+128),w
  5660  0688  0020               	movlb	0	; select bank0
  5661  0689  00C7               	movwf	log@x
  5662  068A  0021               	movlb	1	; select bank1
  5663  068B  0839               	movf	(main@steinhart+1)^(0+128),w
  5664  068C  0020               	movlb	0	; select bank0
  5665  068D  00C8               	movwf	log@x+1
  5666  068E  0021               	movlb	1	; select bank1
  5667  068F  083A               	movf	(main@steinhart+2)^(0+128),w
  5668  0690  0020               	movlb	0	; select bank0
  5669  0691  00C9               	movwf	log@x+2
  5670  0692  3180  20C0  3184   	fcall	_log
  5671  0695  0020               	movlb	0	; select bank0
  5672  0696  0847               	movf	?_log,w
  5673  0697  0021               	movlb	1	; select bank1
  5674  0698  00B8               	movwf	main@steinhart^(0+128)
  5675  0699  0020               	movlb	0	; select bank0
  5676  069A  0848               	movf	?_log+1,w
  5677  069B  0021               	movlb	1	; select bank1
  5678  069C  00B9               	movwf	(main@steinhart+1)^(0+128)
  5679  069D  0020               	movlb	0	; select bank0
  5680  069E  0849               	movf	?_log+2,w
  5681  069F  0021               	movlb	1	; select bank1
  5682  06A0  00BA               	movwf	(main@steinhart+2)^(0+128)
  5683                           
  5684                           ;main.c: 104: steinhart /= 3995;
  5685  06A1  30B0               	movlw	176
  5686  06A2  0020               	movlb	0	; select bank0
  5687  06A3  00A0               	movwf	___ftdiv@f2
  5688  06A4  3079               	movlw	121
  5689  06A5  00A1               	movwf	___ftdiv@f2+1
  5690  06A6  3045               	movlw	69
  5691  06A7  00A2               	movwf	___ftdiv@f2+2
  5692  06A8  0021               	movlb	1	; select bank1
  5693  06A9  0838               	movf	main@steinhart^(0+128),w
  5694  06AA  0020               	movlb	0	; select bank0
  5695  06AB  00A3               	movwf	___ftdiv@f1
  5696  06AC  0021               	movlb	1	; select bank1
  5697  06AD  0839               	movf	(main@steinhart+1)^(0+128),w
  5698  06AE  0020               	movlb	0	; select bank0
  5699  06AF  00A4               	movwf	___ftdiv@f1+1
  5700  06B0  0021               	movlb	1	; select bank1
  5701  06B1  083A               	movf	(main@steinhart+2)^(0+128),w
  5702  06B2  0020               	movlb	0	; select bank0
  5703  06B3  00A5               	movwf	___ftdiv@f1+2
  5704  06B4  3180  2017  3184   	fcall	___ftdiv
  5705  06B7  0020               	movlb	0	; select bank0
  5706  06B8  0820               	movf	?___ftdiv,w
  5707  06B9  0021               	movlb	1	; select bank1
  5708  06BA  00B8               	movwf	main@steinhart^(0+128)
  5709  06BB  0020               	movlb	0	; select bank0
  5710  06BC  0821               	movf	?___ftdiv+1,w
  5711  06BD  0021               	movlb	1	; select bank1
  5712  06BE  00B9               	movwf	(main@steinhart+1)^(0+128)
  5713  06BF  0020               	movlb	0	; select bank0
  5714  06C0  0822               	movf	?___ftdiv+2,w
  5715  06C1  0021               	movlb	1	; select bank1
  5716  06C2  00BA               	movwf	(main@steinhart+2)^(0+128)
  5717                           
  5718                           ;main.c: 105: steinhart += 1.0 / (25 + 273.15);
  5719  06C3  30CF               	movlw	207
  5720  06C4  0020               	movlb	0	; select bank0
  5721  06C5  00B0               	movwf	___ftadd@f1
  5722  06C6  305B               	movlw	91
  5723  06C7  00B1               	movwf	___ftadd@f1+1
  5724  06C8  303B               	movlw	59
  5725  06C9  00B2               	movwf	___ftadd@f1+2
  5726  06CA  0021               	movlb	1	; select bank1
  5727  06CB  0838               	movf	main@steinhart^(0+128),w
  5728  06CC  0020               	movlb	0	; select bank0
  5729  06CD  00B3               	movwf	___ftadd@f2
  5730  06CE  0021               	movlb	1	; select bank1
  5731  06CF  0839               	movf	(main@steinhart+1)^(0+128),w
  5732  06D0  0020               	movlb	0	; select bank0
  5733  06D1  00B4               	movwf	___ftadd@f2+1
  5734  06D2  0021               	movlb	1	; select bank1
  5735  06D3  083A               	movf	(main@steinhart+2)^(0+128),w
  5736  06D4  0020               	movlb	0	; select bank0
  5737  06D5  00B5               	movwf	___ftadd@f2+2
  5738  06D6  3183  23A4  3184   	fcall	___ftadd
  5739  06D9  0020               	movlb	0	; select bank0
  5740  06DA  0830               	movf	?___ftadd,w
  5741  06DB  0021               	movlb	1	; select bank1
  5742  06DC  00B8               	movwf	main@steinhart^(0+128)
  5743  06DD  0020               	movlb	0	; select bank0
  5744  06DE  0831               	movf	?___ftadd+1,w
  5745  06DF  0021               	movlb	1	; select bank1
  5746  06E0  00B9               	movwf	(main@steinhart+1)^(0+128)
  5747  06E1  0020               	movlb	0	; select bank0
  5748  06E2  0832               	movf	?___ftadd+2,w
  5749  06E3  0021               	movlb	1	; select bank1
  5750  06E4  00BA               	movwf	(main@steinhart+2)^(0+128)
  5751                           
  5752                           ;main.c: 106: steinhart = 1.0 / steinhart;
  5753  06E5  0838               	movf	main@steinhart^(0+128),w
  5754  06E6  0020               	movlb	0	; select bank0
  5755  06E7  00A0               	movwf	___ftdiv@f2
  5756  06E8  0021               	movlb	1	; select bank1
  5757  06E9  0839               	movf	(main@steinhart+1)^(0+128),w
  5758  06EA  0020               	movlb	0	; select bank0
  5759  06EB  00A1               	movwf	___ftdiv@f2+1
  5760  06EC  0021               	movlb	1	; select bank1
  5761  06ED  083A               	movf	(main@steinhart+2)^(0+128),w
  5762  06EE  0020               	movlb	0	; select bank0
  5763  06EF  00A2               	movwf	___ftdiv@f2+2
  5764  06F0  3000               	movlw	0
  5765  06F1  00A3               	movwf	___ftdiv@f1
  5766  06F2  3080               	movlw	128
  5767  06F3  00A4               	movwf	___ftdiv@f1+1
  5768  06F4  303F               	movlw	63
  5769  06F5  00A5               	movwf	___ftdiv@f1+2
  5770  06F6  3180  2017  3184   	fcall	___ftdiv
  5771  06F9  0020               	movlb	0	; select bank0
  5772  06FA  0820               	movf	?___ftdiv,w
  5773  06FB  0021               	movlb	1	; select bank1
  5774  06FC  00B8               	movwf	main@steinhart^(0+128)
  5775  06FD  0020               	movlb	0	; select bank0
  5776  06FE  0821               	movf	?___ftdiv+1,w
  5777  06FF  0021               	movlb	1	; select bank1
  5778  0700  00B9               	movwf	(main@steinhart+1)^(0+128)
  5779  0701  0020               	movlb	0	; select bank0
  5780  0702  0822               	movf	?___ftdiv+2,w
  5781  0703  0021               	movlb	1	; select bank1
  5782  0704  00BA               	movwf	(main@steinhart+2)^(0+128)
  5783                           
  5784                           ;main.c: 107: steinhart -= 273.15;
  5785  0705  3093               	movlw	147
  5786  0706  0020               	movlb	0	; select bank0
  5787  0707  00BD               	movwf	___ftsub@f2
  5788  0708  3088               	movlw	136
  5789  0709  00BE               	movwf	___ftsub@f2+1
  5790  070A  3043               	movlw	67
  5791  070B  00BF               	movwf	___ftsub@f2+2
  5792  070C  0021               	movlb	1	; select bank1
  5793  070D  0838               	movf	main@steinhart^(0+128),w
  5794  070E  0020               	movlb	0	; select bank0
  5795  070F  00C0               	movwf	___ftsub@f1
  5796  0710  0021               	movlb	1	; select bank1
  5797  0711  0839               	movf	(main@steinhart+1)^(0+128),w
  5798  0712  0020               	movlb	0	; select bank0
  5799  0713  00C1               	movwf	___ftsub@f1+1
  5800  0714  0021               	movlb	1	; select bank1
  5801  0715  083A               	movf	(main@steinhart+2)^(0+128),w
  5802  0716  0020               	movlb	0	; select bank0
  5803  0717  00C2               	movwf	___ftsub@f1+2
  5804  0718  318B  2355  3184   	fcall	___ftsub
  5805  071B  0020               	movlb	0	; select bank0
  5806  071C  083D               	movf	?___ftsub,w
  5807  071D  0021               	movlb	1	; select bank1
  5808  071E  00B8               	movwf	main@steinhart^(0+128)
  5809  071F  0020               	movlb	0	; select bank0
  5810  0720  083E               	movf	?___ftsub+1,w
  5811  0721  0021               	movlb	1	; select bank1
  5812  0722  00B9               	movwf	(main@steinhart+1)^(0+128)
  5813  0723  0020               	movlb	0	; select bank0
  5814  0724  083F               	movf	?___ftsub+2,w
  5815  0725  0021               	movlb	1	; select bank1
  5816  0726  00BA               	movwf	(main@steinhart+2)^(0+128)
  5817                           
  5818                           ;main.c: 125: displayTemp = (uint16_t)steinhart * 10;
  5819  0727  0838               	movf	main@steinhart^(0+128),w
  5820  0728  00F0               	movwf	___fttol@f1
  5821  0729  0839               	movf	(main@steinhart+1)^(0+128),w
  5822  072A  00F1               	movwf	___fttol@f1+1
  5823  072B  083A               	movf	(main@steinhart+2)^(0+128),w
  5824  072C  00F2               	movwf	___fttol@f1+2
  5825  072D  318F  277A  3184   	fcall	___fttol
  5826  0730  0871               	movf	?___fttol+1,w
  5827  0731  0020               	movlb	0	; select bank0
  5828  0732  00A1               	movwf	___wmul@multiplier+1
  5829  0733  0870               	movf	?___fttol,w
  5830  0734  00A0               	movwf	___wmul@multiplier
  5831  0735  300A               	movlw	10
  5832  0736  00A2               	movwf	___wmul@multiplicand
  5833  0737  3000               	movlw	0
  5834  0738  00A3               	movwf	___wmul@multiplicand+1
  5835  0739  318B  2339  3184   	fcall	___wmul
  5836  073C  0020               	movlb	0	; select bank0
  5837  073D  0821               	movf	?___wmul+1,w
  5838  073E  0021               	movlb	1	; select bank1
  5839  073F  00A7               	movwf	(main@displayTemp+1)^(0+128)
  5840  0740  0020               	movlb	0	; select bank0
  5841  0741  0820               	movf	?___wmul,w
  5842  0742  0021               	movlb	1	; select bank1
  5843  0743  00A6               	movwf	main@displayTemp^(0+128)
  5844                           
  5845                           ;main.c: 128: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5846  0744  01F3               	clrf	LCD_Set_Cursor@y
  5847  0745  0AF3               	incf	LCD_Set_Cursor@y,f
  5848  0746  3000               	movlw	0
  5849  0747  318C  24E4  3184   	fcall	_LCD_Set_Cursor
  5850  074A  0021               	movlb	1	; select bank1
  5851  074B  0827               	movf	(main@displayTemp+1)^(0+128),w
  5852  074C  00FA               	movwf	LCD_Write_Int@value+1
  5853  074D  0826               	movf	main@displayTemp^(0+128),w
  5854  074E  00F9               	movwf	LCD_Write_Int@value
  5855  074F  01FB               	clrf	LCD_Write_Int@fieldLength
  5856  0750  03FB               	decf	LCD_Write_Int@fieldLength,f
  5857  0751  01FC               	clrf	LCD_Write_Int@numPlaces
  5858  0752  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5859  0753  01FD               	clrf	LCD_Write_Int@sign
  5860  0754  3182  22DB  3184   	fcall	_LCD_Write_Int
  5861                           
  5862                           ;main.c: 132: LCD_Write_Char(0);
  5863  0757  3000               	movlw	0
  5864  0758  318B  23DA  3184   	fcall	_LCD_Write_Char
  5865                           
  5866                           ;main.c: 133: LCD_Write_Char('C');
  5867  075B  3043               	movlw	67
  5868  075C  318B  23DA  3184   	fcall	_LCD_Write_Char
  5869                           
  5870                           ;main.c: 134: LCD_Write_Char(' ');
  5871  075F  3020               	movlw	32
  5872  0760  318B  23DA  3184   	fcall	_LCD_Write_Char
  5873                           
  5874                           ;main.c: 136: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5875  0763  01F3               	clrf	LCD_Set_Cursor@y
  5876  0764  3001               	movlw	1
  5877  0765  318C  24E4  3184   	fcall	_LCD_Set_Cursor
  5878  0768  3025               	movlw	low (STR_3| (0+32768))
  5879  0769  00F5               	movwf	LCD_Write_String@a
  5880  076A  3090               	movlw	high (STR_3| (0+32768))
  5881  076B  00F6               	movwf	LCD_Write_String@a+1
  5882  076C  318B  231F  3184   	fcall	_LCD_Write_String
  5883                           
  5884                           ;main.c: 137: { LCD_Set_Cursor(1,5); LCD_Write_Int(minute,-1, 0, 0);};
  5885  076F  3005               	movlw	5
  5886  0770  0020               	movlb	0	; select bank0
  5887  0771  00CD               	movwf	??_main
  5888  0772  084D               	movf	??_main,w
  5889  0773  00F3               	movwf	LCD_Set_Cursor@y
  5890  0774  3001               	movlw	1
  5891  0775  318C  24E4  3184   	fcall	_LCD_Set_Cursor
  5892  0778  0021               	movlb	1	; select bank1
  5893  0779  0829               	movf	(main@minute+1)^(0+128),w
  5894  077A  00FA               	movwf	LCD_Write_Int@value+1
  5895  077B  0828               	movf	main@minute^(0+128),w
  5896  077C  00F9               	movwf	LCD_Write_Int@value
  5897  077D  01FB               	clrf	LCD_Write_Int@fieldLength
  5898  077E  03FB               	decf	LCD_Write_Int@fieldLength,f
  5899  077F  01FC               	clrf	LCD_Write_Int@numPlaces
  5900  0780  01FD               	clrf	LCD_Write_Int@sign
  5901  0781  3182  22DB  3184   	fcall	_LCD_Write_Int
  5902                           
  5903                           ;main.c: 143: startupTimer +=1;
  5904  0784  3001               	movlw	1
  5905  0785  0020               	movlb	0	; select bank0
  5906  0786  00CD               	movwf	??_main
  5907  0787  084D               	movf	??_main,w
  5908  0788  0021               	movlb	1	; select bank1
  5909  0789  07AD               	addwf	main@startupTimer^(0+128),f
  5910                           
  5911                           ;main.c: 144: counter+=1;
  5912  078A  3001               	movlw	1
  5913  078B  07AA               	addwf	main@counter^(0+128),f
  5914  078C  3000               	movlw	0
  5915  078D  3DAB               	addwfc	(main@counter+1)^(0+128),f
  5916                           
  5917                           ;main.c: 146: if(setpoint - steinhart < 2)
  5918  078E  0838               	movf	main@steinhart^(0+128),w
  5919  078F  00F0               	movwf	___ftneg@f1
  5920  0790  0839               	movf	(main@steinhart+1)^(0+128),w
  5921  0791  00F1               	movwf	___ftneg@f1+1
  5922  0792  083A               	movf	(main@steinhart+2)^(0+128),w
  5923  0793  00F2               	movwf	___ftneg@f1+2
  5924  0794  318A  224A  3184   	fcall	___ftneg
  5925  0797  0870               	movf	?___ftneg,w
  5926  0798  0020               	movlb	0	; select bank0
  5927  0799  00B0               	movwf	___ftadd@f1
  5928  079A  0871               	movf	?___ftneg+1,w
  5929  079B  00B1               	movwf	___ftadd@f1+1
  5930  079C  0872               	movf	?___ftneg+2,w
  5931  079D  00B2               	movwf	___ftadd@f1+2
  5932  079E  0861               	movf	_setpoint,w
  5933  079F  318B  2305  3184   	fcall	___lbtoft
  5934  07A2  0878               	movf	?___lbtoft,w
  5935  07A3  0020               	movlb	0	; select bank0
  5936  07A4  00B3               	movwf	___ftadd@f2
  5937  07A5  0879               	movf	?___lbtoft+1,w
  5938  07A6  00B4               	movwf	___ftadd@f2+1
  5939  07A7  087A               	movf	?___lbtoft+2,w
  5940  07A8  00B5               	movwf	___ftadd@f2+2
  5941  07A9  3183  23A4  3184   	fcall	___ftadd
  5942  07AC  0020               	movlb	0	; select bank0
  5943  07AD  0830               	movf	?___ftadd,w
  5944  07AE  00BD               	movwf	___ftge@ff1
  5945  07AF  0831               	movf	?___ftadd+1,w
  5946  07B0  00BE               	movwf	___ftge@ff1+1
  5947  07B1  0832               	movf	?___ftadd+2,w
  5948  07B2  00BF               	movwf	___ftge@ff1+2
  5949  07B3  3000               	movlw	0
  5950  07B4  00C0               	movwf	___ftge@ff2
  5951  07B5  3000               	movlw	0
  5952  07B6  00C1               	movwf	___ftge@ff2+1
  5953  07B7  3040               	movlw	64
  5954  07B8  00C2               	movwf	___ftge@ff2+2
  5955  07B9  318C  24A8  3184   	fcall	___ftge
  5956  07BC  1803               	btfsc	3,0
  5957  07BD  2FCC               	goto	l2832
  5958                           
  5959                           ;main.c: 147: {
  5960                           ;main.c: 148: if(counter>=314)
  5961  07BE  3001               	movlw	1
  5962  07BF  0021               	movlb	1	; select bank1
  5963  07C0  022B               	subwf	(main@counter+1)^(0+128),w
  5964  07C1  303A               	movlw	58
  5965  07C2  1903               	skipnz
  5966  07C3  022A               	subwf	main@counter^(0+128),w
  5967  07C4  1C03               	skipc
  5968  07C5  2FCC               	goto	l2832
  5969                           
  5970                           ;main.c: 149: {
  5971                           ;main.c: 150: minute+=1;
  5972  07C6  3001               	movlw	1
  5973  07C7  07A8               	addwf	main@minute^(0+128),f
  5974  07C8  3000               	movlw	0
  5975  07C9  3DA9               	addwfc	(main@minute+1)^(0+128),f
  5976                           
  5977                           ;main.c: 151: counter = 0;
  5978  07CA  01AA               	clrf	main@counter^(0+128)
  5979  07CB  01AB               	clrf	(main@counter+1)^(0+128)
  5980  07CC                     l2832:	
  5981                           
  5982                           ;main.c: 152: }
  5983                           ;main.c: 153: }
  5984                           ;main.c: 154: readButtons();
  5985  07CC  318B  2393  3184   	fcall	_readButtons
  5986                           
  5987                           ;main.c: 155: tempSetpoint();
  5988  07CF  3182  2221  3184   	fcall	_tempSetpoint
  5989  07D2  2CB4               	goto	l2738
  5990  07D3                     __end_of_main:	
  5991                           
  5992                           	psect	text1
  5993  0221                     __ptext1:	
  5994 ;; *************** function _tempSetpoint *****************
  5995 ;; Defined at:
  5996 ;;		line 11 in file "user.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  counter         1   17[BANK0 ] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;Total ram usage:        4 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    3
  6017 ;; This function calls:
  6018 ;;		_LCD_Clear
  6019 ;;		_LCD_Set_Cursor
  6020 ;;		_LCD_Write_Char
  6021 ;;		_LCD_Write_Int
  6022 ;;		_LCD_Write_String
  6023 ;;		_readButtons
  6024 ;; This function is called by:
  6025 ;;		_main
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           
  6030                           ;psect for function _tempSetpoint
  6031  0221                     _tempSetpoint:	
  6032                           
  6033                           ;user.c: 13: uint8_t counter = 0;
  6034                           
  6035                           ;incstack = 0
  6036                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6037  0221  0020               	movlb	0	; select bank0
  6038  0222  01B1               	clrf	tempSetpoint@counter
  6039                           
  6040                           ;user.c: 15: oldSetpoint = setpoint;
  6041  0223  0861               	movf	_setpoint,w
  6042  0224  00AE               	movwf	??_tempSetpoint
  6043  0225  082E               	movf	??_tempSetpoint,w
  6044  0226  00DF               	movwf	_oldSetpoint
  6045  0227                     l2514:	
  6046                           ;user.c: 17: while(downCount >= 5)
  6047                           
  6048  0227  3005               	movlw	5
  6049  0228  0020               	movlb	0	; select bank0
  6050  0229  025E               	subwf	_downCount,w
  6051  022A  1C03               	btfss	3,0
  6052  022B  2AC1               	goto	l2542
  6053                           
  6054                           ;user.c: 18: {
  6055                           ;user.c: 19: counter+=1;
  6056  022C  3001               	movlw	1
  6057  022D  00AE               	movwf	??_tempSetpoint
  6058  022E  082E               	movf	??_tempSetpoint,w
  6059  022F  07B1               	addwf	tempSetpoint@counter,f
  6060                           
  6061                           ;user.c: 20: if(counter<=1)
  6062  0230  3002               	movlw	2
  6063  0231  0231               	subwf	tempSetpoint@counter,w
  6064  0232  1803               	skipnc
  6065  0233  2A37               	goto	l2494
  6066                           
  6067                           ;user.c: 21: {
  6068                           ;user.c: 22: LCD_Clear();
  6069  0234  318A  223A  3182   	fcall	_LCD_Clear
  6070  0237                     l2494:	
  6071                           
  6072                           ;user.c: 23: }
  6073                           ;user.c: 24: setpoint-=1;
  6074  0237  3001               	movlw	1
  6075  0238  0020               	movlb	0	; select bank0
  6076  0239  02E1               	subwf	_setpoint,f
  6077                           
  6078                           ;user.c: 25: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6079  023A  01F3               	clrf	LCD_Set_Cursor@y
  6080  023B  3000               	movlw	0
  6081  023C  318C  24E4  3182   	fcall	_LCD_Set_Cursor
  6082  023F  301B               	movlw	low (STR_1| (0+32768))
  6083  0240  00F5               	movwf	LCD_Write_String@a
  6084  0241  3090               	movlw	high (STR_1| (0+32768))
  6085  0242  00F6               	movwf	LCD_Write_String@a+1
  6086  0243  318B  231F  3182   	fcall	_LCD_Write_String
  6087                           
  6088                           ;user.c: 26: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6089  0246  01F3               	clrf	LCD_Set_Cursor@y
  6090  0247  3001               	movlw	1
  6091  0248  318C  24E4  3182   	fcall	_LCD_Set_Cursor
  6092  024B  0020               	movlb	0	; select bank0
  6093  024C  0861               	movf	_setpoint,w
  6094  024D  00AE               	movwf	??_tempSetpoint
  6095  024E  01AF               	clrf	??_tempSetpoint+1
  6096  024F  082E               	movf	??_tempSetpoint,w
  6097  0250  00F9               	movwf	LCD_Write_Int@value
  6098  0251  082F               	movf	??_tempSetpoint+1,w
  6099  0252  00FA               	movwf	LCD_Write_Int@value+1
  6100  0253  3003               	movlw	3
  6101  0254  00B0               	movwf	??_tempSetpoint+2
  6102  0255  0830               	movf	??_tempSetpoint+2,w
  6103  0256  00FB               	movwf	LCD_Write_Int@fieldLength
  6104  0257  01FC               	clrf	LCD_Write_Int@numPlaces
  6105  0258  01FD               	clrf	LCD_Write_Int@sign
  6106  0259  3182  22DB  3182   	fcall	_LCD_Write_Int
  6107                           
  6108                           ;user.c: 27: LCD_Write_Char(0);
  6109  025C  3000               	movlw	0
  6110  025D  318B  23DA  3182   	fcall	_LCD_Write_Char
  6111                           
  6112                           ;user.c: 28: LCD_Write_Char('C');
  6113  0260  3043               	movlw	67
  6114  0261  318B  23DA  3182   	fcall	_LCD_Write_Char
  6115                           
  6116                           ;user.c: 29: LCD_Write_Char(' ');
  6117  0264  3020               	movlw	32
  6118  0265  318B  23DA  3182   	fcall	_LCD_Write_Char
  6119                           
  6120                           ;user.c: 30: _delay((unsigned long)((350)*(1000000/4000.0)));
  6121  0268  3072               	movlw	114
  6122  0269  0020               	movlb	0	; select bank0
  6123  026A  00AF               	movwf	??_tempSetpoint+1
  6124  026B  30A1               	movlw	161
  6125  026C  00AE               	movwf	??_tempSetpoint
  6126  026D                     u3077:	
  6127  026D  0BAE               	decfsz	??_tempSetpoint,f
  6128  026E  2A6D               	goto	u3077
  6129  026F  0BAF               	decfsz	??_tempSetpoint+1,f
  6130  0270  2A6D               	goto	u3077
  6131  0271  3200               	nop2
  6132                           
  6133                           ;user.c: 31: readButtons();
  6134  0272  318B  2393  3182   	fcall	_readButtons
  6135  0275  2A27               	goto	l2514
  6136  0276                     l2516:	
  6137                           ;user.c: 33: }
  6138                           ;user.c: 35: while(upCount >= 5)
  6139                           
  6140                           
  6141                           ;user.c: 36: {
  6142                           ;user.c: 37: counter+=1;
  6143  0276  3001               	movlw	1
  6144  0277  00AE               	movwf	??_tempSetpoint
  6145  0278  082E               	movf	??_tempSetpoint,w
  6146  0279  07B1               	addwf	tempSetpoint@counter,f
  6147                           
  6148                           ;user.c: 38: if(counter<=1)
  6149  027A  3002               	movlw	2
  6150  027B  0231               	subwf	tempSetpoint@counter,w
  6151  027C  1803               	skipnc
  6152  027D  2A81               	goto	l2522
  6153                           
  6154                           ;user.c: 39: {
  6155                           ;user.c: 40: LCD_Clear();
  6156  027E  318A  223A  3182   	fcall	_LCD_Clear
  6157  0281                     l2522:	
  6158                           
  6159                           ;user.c: 41: }
  6160                           ;user.c: 42: setpoint+=1;
  6161  0281  3001               	movlw	1
  6162  0282  0020               	movlb	0	; select bank0
  6163  0283  00AE               	movwf	??_tempSetpoint
  6164  0284  082E               	movf	??_tempSetpoint,w
  6165  0285  07E1               	addwf	_setpoint,f
  6166                           
  6167                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6168  0286  01F3               	clrf	LCD_Set_Cursor@y
  6169  0287  3000               	movlw	0
  6170  0288  318C  24E4  3182   	fcall	_LCD_Set_Cursor
  6171  028B  301B               	movlw	low (STR_1| (0+32768))
  6172  028C  00F5               	movwf	LCD_Write_String@a
  6173  028D  3090               	movlw	high (STR_1| (0+32768))
  6174  028E  00F6               	movwf	LCD_Write_String@a+1
  6175  028F  318B  231F  3182   	fcall	_LCD_Write_String
  6176                           
  6177                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6178  0292  01F3               	clrf	LCD_Set_Cursor@y
  6179  0293  3001               	movlw	1
  6180  0294  318C  24E4  3182   	fcall	_LCD_Set_Cursor
  6181  0297  0020               	movlb	0	; select bank0
  6182  0298  0861               	movf	_setpoint,w
  6183  0299  00AE               	movwf	??_tempSetpoint
  6184  029A  01AF               	clrf	??_tempSetpoint+1
  6185  029B  082E               	movf	??_tempSetpoint,w
  6186  029C  00F9               	movwf	LCD_Write_Int@value
  6187  029D  082F               	movf	??_tempSetpoint+1,w
  6188  029E  00FA               	movwf	LCD_Write_Int@value+1
  6189  029F  3003               	movlw	3
  6190  02A0  00B0               	movwf	??_tempSetpoint+2
  6191  02A1  0830               	movf	??_tempSetpoint+2,w
  6192  02A2  00FB               	movwf	LCD_Write_Int@fieldLength
  6193  02A3  01FC               	clrf	LCD_Write_Int@numPlaces
  6194  02A4  01FD               	clrf	LCD_Write_Int@sign
  6195  02A5  3182  22DB  3182   	fcall	_LCD_Write_Int
  6196                           
  6197                           ;user.c: 45: LCD_Write_Char(0);
  6198  02A8  3000               	movlw	0
  6199  02A9  318B  23DA  3182   	fcall	_LCD_Write_Char
  6200                           
  6201                           ;user.c: 46: LCD_Write_Char('C');
  6202  02AC  3043               	movlw	67
  6203  02AD  318B  23DA  3182   	fcall	_LCD_Write_Char
  6204                           
  6205                           ;user.c: 47: LCD_Write_Char(' ');
  6206  02B0  3020               	movlw	32
  6207  02B1  318B  23DA  3182   	fcall	_LCD_Write_Char
  6208                           
  6209                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6210  02B4  3072               	movlw	114
  6211  02B5  0020               	movlb	0	; select bank0
  6212  02B6  00AF               	movwf	??_tempSetpoint+1
  6213  02B7  30A1               	movlw	161
  6214  02B8  00AE               	movwf	??_tempSetpoint
  6215  02B9                     u3087:	
  6216  02B9  0BAE               	decfsz	??_tempSetpoint,f
  6217  02BA  2AB9               	goto	u3087
  6218  02BB  0BAF               	decfsz	??_tempSetpoint+1,f
  6219  02BC  2AB9               	goto	u3087
  6220  02BD  3200               	nop2
  6221                           
  6222                           ;user.c: 49: readButtons();
  6223  02BE  318B  2393  3182   	fcall	_readButtons
  6224  02C1                     l2542:	
  6225  02C1  3005               	movlw	5
  6226  02C2  0020               	movlb	0	; select bank0
  6227  02C3  0260               	subwf	_upCount,w
  6228  02C4  1803               	skipnc
  6229  02C5  2A76               	goto	l2516
  6230                           
  6231                           ;user.c: 51: }
  6232                           ;user.c: 53: counter = 0;
  6233  02C6  01B1               	clrf	tempSetpoint@counter
  6234                           
  6235                           ;user.c: 55: if(oldSetpoint!=setpoint)
  6236  02C7  085F               	movf	_oldSetpoint,w
  6237  02C8  0661               	xorwf	_setpoint,w
  6238  02C9  1903               	skipnz
  6239  02CA  0008               	return
  6240                           
  6241                           ;user.c: 56: {
  6242                           ;user.c: 57: _delay((unsigned long)((3000)*(1000000/4000.0)));
  6243  02CB  3004               	movlw	4
  6244  02CC  00B0               	movwf	??_tempSetpoint+2
  6245  02CD  30CF               	movlw	207
  6246  02CE  00AF               	movwf	??_tempSetpoint+1
  6247  02CF  3003               	movlw	3
  6248  02D0  00AE               	movwf	??_tempSetpoint
  6249  02D1                     u3097:	
  6250  02D1  0BAE               	decfsz	??_tempSetpoint,f
  6251  02D2  2AD1               	goto	u3097
  6252  02D3  0BAF               	decfsz	??_tempSetpoint+1,f
  6253  02D4  2AD1               	goto	u3097
  6254  02D5  0BB0               	decfsz	??_tempSetpoint+2,f
  6255  02D6  2AD1               	goto	u3097
  6256  02D7  3200               	nop2
  6257                           
  6258                           ;user.c: 58: LCD_Clear();
  6259  02D8  318A  223A         	fcall	_LCD_Clear
  6260  02DA  0008               	return
  6261  02DB                     __end_of_tempSetpoint:	
  6262                           
  6263                           	psect	text2
  6264  0B93                     __ptext2:	
  6265 ;; *************** function _readButtons *****************
  6266 ;; Defined at:
  6267 ;;		line 63 in file "user.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;Total ram usage:        1 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_tempSetpoint
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _readButtons
  6297  0B93                     _readButtons:	
  6298                           
  6299                           ;user.c: 65: if(RA3 == 0)
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in _readButtons: [wreg+status,2+status,0]
  6303  0B93  0020               	movlb	0	; select bank0
  6304  0B94  198C               	btfsc	12,3	;volatile
  6305  0B95  2BA3               	goto	l2374
  6306                           
  6307                           ;user.c: 66: {
  6308                           ;user.c: 67: downCount +=1;
  6309  0B96  3001               	movlw	1
  6310  0B97  00F0               	movwf	??_readButtons
  6311  0B98  0870               	movf	??_readButtons,w
  6312  0B99  07DE               	addwf	_downCount,f
  6313                           
  6314                           ;user.c: 68: if(downCount>5)
  6315  0B9A  3006               	movlw	6
  6316  0B9B  025E               	subwf	_downCount,w
  6317  0B9C  1C03               	skipc
  6318  0B9D  2BA4               	goto	l2376
  6319                           
  6320                           ;user.c: 69: {
  6321                           ;user.c: 70: downCount = 5;
  6322  0B9E  3005               	movlw	5
  6323  0B9F  00F0               	movwf	??_readButtons
  6324  0BA0  0870               	movf	??_readButtons,w
  6325  0BA1  00DE               	movwf	_downCount
  6326                           
  6327                           ;user.c: 71: }
  6328                           ;user.c: 72: }
  6329  0BA2  2BA4               	goto	l2376
  6330  0BA3                     l2374:	
  6331                           
  6332                           ;user.c: 73: else
  6333                           ;user.c: 74: {
  6334                           ;user.c: 75: downCount = 0;
  6335  0BA3  01DE               	clrf	_downCount
  6336  0BA4                     l2376:	
  6337                           
  6338                           ;user.c: 76: }
  6339                           ;user.c: 78: if(RA4 == 0)
  6340  0BA4  1A0C               	btfsc	12,4	;volatile
  6341  0BA5  2BB3               	goto	l2384
  6342                           
  6343                           ;user.c: 79: {
  6344                           ;user.c: 80: upCount +=1;
  6345  0BA6  3001               	movlw	1
  6346  0BA7  00F0               	movwf	??_readButtons
  6347  0BA8  0870               	movf	??_readButtons,w
  6348  0BA9  07E0               	addwf	_upCount,f
  6349                           
  6350                           ;user.c: 81: if(upCount>5)
  6351  0BAA  3006               	movlw	6
  6352  0BAB  0260               	subwf	_upCount,w
  6353  0BAC  1C03               	skipc
  6354  0BAD  0008               	return
  6355                           
  6356                           ;user.c: 82: {
  6357                           ;user.c: 83: upCount = 5;
  6358  0BAE  3005               	movlw	5
  6359  0BAF  00F0               	movwf	??_readButtons
  6360  0BB0  0870               	movf	??_readButtons,w
  6361  0BB1  00E0               	movwf	_upCount
  6362                           
  6363                           ;user.c: 84: }
  6364                           ;user.c: 85: }
  6365  0BB2  0008               	return
  6366  0BB3                     l2384:	
  6367                           
  6368                           ;user.c: 86: else
  6369                           ;user.c: 87: {
  6370                           ;user.c: 88: upCount = 0;
  6371  0BB3  01E0               	clrf	_upCount
  6372  0BB4  0008               	return
  6373  0BB5                     __end_of_readButtons:	
  6374                           
  6375                           	psect	text3
  6376  0B1F                     __ptext3:	
  6377 ;; *************** function _LCD_Write_String *****************
  6378 ;; Defined at:
  6379 ;;		line 239 in file "lcd.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  a               2    5[COMMON] PTR unsigned char 
  6382 ;;		 -> STR_3(6), STR_2(10), STR_1(10), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  i               2    8[COMMON] int 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;Total ram usage:        5 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    2
  6401 ;; This function calls:
  6402 ;;		_LCD_Write_Char
  6403 ;; This function is called by:
  6404 ;;		_tempSetpoint
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _LCD_Write_String
  6411  0B1F                     _LCD_Write_String:	
  6412                           
  6413                           ;lcd.c: 241: int i;
  6414                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6418  0B1F  01F8               	clrf	LCD_Write_String@i
  6419  0B20  01F9               	clrf	LCD_Write_String@i+1
  6420  0B21                     l2218:	
  6421  0B21  0875               	movf	LCD_Write_String@a,w
  6422  0B22  0778               	addwf	LCD_Write_String@i,w
  6423  0B23  0084               	movwf	4
  6424  0B24  0876               	movf	LCD_Write_String@a+1,w
  6425  0B25  3D79               	addwfc	LCD_Write_String@i+1,w
  6426  0B26  0085               	movwf	5
  6427  0B27  0012               	moviw fsr0++
  6428  0B28  1903               	btfsc	3,2
  6429  0B29  0008               	return
  6430                           
  6431                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6432  0B2A  0875               	movf	LCD_Write_String@a,w
  6433  0B2B  0778               	addwf	LCD_Write_String@i,w
  6434  0B2C  0084               	movwf	4
  6435  0B2D  0876               	movf	LCD_Write_String@a+1,w
  6436  0B2E  3D79               	addwfc	LCD_Write_String@i+1,w
  6437  0B2F  0085               	movwf	5
  6438  0B30  0800               	movf	0,w	;code access
  6439  0B31  318B  23DA  318B   	fcall	_LCD_Write_Char
  6440  0B34  3001               	movlw	1
  6441  0B35  07F8               	addwf	LCD_Write_String@i,f
  6442  0B36  3000               	movlw	0
  6443  0B37  3DF9               	addwfc	LCD_Write_String@i+1,f
  6444  0B38  2B21               	goto	l2218
  6445  0B39                     __end_of_LCD_Write_String:	
  6446                           
  6447                           	psect	text4
  6448  02DB                     __ptext4:	
  6449 ;; *************** function _LCD_Write_Int *****************
  6450 ;; Defined at:
  6451 ;;		line 246 in file "lcd.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  value           2    9[COMMON] int 
  6454 ;;  fieldLength     1   11[COMMON] char 
  6455 ;;  numPlaces       1   12[COMMON] char 
  6456 ;;  sign            1   13[COMMON] char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  str             5    5[BANK0 ] unsigned char [5]
  6459 ;;  i               2   12[BANK0 ] int 
  6460 ;;  j               2   10[BANK0 ] int 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:       19 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    2
  6477 ;; This function calls:
  6478 ;;		_LCD_Write_Char
  6479 ;;		___awdiv
  6480 ;;		___awmod
  6481 ;; This function is called by:
  6482 ;;		_tempSetpoint
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _LCD_Write_Int
  6489  02DB                     _LCD_Write_Int:	
  6490                           
  6491                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6495  02DB  3057               	movlw	low LCD_Write_Int@F13684
  6496  02DC  0086               	movwf	6
  6497  02DD  3000               	movlw	high LCD_Write_Int@F13684
  6498  02DE  0087               	movwf	7
  6499  02DF  3025               	movlw	low LCD_Write_Int@str
  6500  02E0  0084               	movwf	4
  6501  02E1  3000               	movlw	high LCD_Write_Int@str
  6502  02E2  0085               	movwf	5
  6503  02E3  3005               	movlw	5
  6504  02E4  0020               	movlb	0	; select bank0
  6505  02E5  00A0               	movwf	??_LCD_Write_Int
  6506  02E6                     u2360:	
  6507  02E6  0016               	moviw fsr1++
  6508  02E7  001A               	movwi fsr0++
  6509  02E8  0BA0               	decfsz	??_LCD_Write_Int,f
  6510  02E9  2AE6               	goto	u2360
  6511                           
  6512                           ;lcd.c: 249: int i=4,j=0;
  6513  02EA  3004               	movlw	4
  6514  02EB  00AC               	movwf	LCD_Write_Int@i
  6515  02EC  3000               	movlw	0
  6516  02ED  00AD               	movwf	LCD_Write_Int@i+1
  6517  02EE  01AA               	clrf	LCD_Write_Int@j
  6518  02EF  01AB               	clrf	LCD_Write_Int@j+1
  6519                           
  6520                           ;lcd.c: 251: if(value<0)
  6521  02F0  1FFA               	btfss	LCD_Write_Int@value+1,7
  6522  02F1  2AFC               	goto	l2232
  6523                           
  6524                           ;lcd.c: 252: {
  6525                           ;lcd.c: 253: LCD_Write_Char('-');
  6526  02F2  302D               	movlw	45
  6527  02F3  318B  23DA  3182   	fcall	_LCD_Write_Char
  6528                           
  6529                           ;lcd.c: 254: value=value*-1;
  6530  02F6  09F9               	comf	LCD_Write_Int@value,f
  6531  02F7  09FA               	comf	LCD_Write_Int@value+1,f
  6532  02F8  0AF9               	incf	LCD_Write_Int@value,f
  6533  02F9  1903               	skipnz
  6534  02FA  0AFA               	incf	LCD_Write_Int@value+1,f
  6535                           
  6536                           ;lcd.c: 255: }
  6537  02FB  2B03               	goto	l2242
  6538  02FC                     l2232:	
  6539                           
  6540                           ;lcd.c: 257: else
  6541                           ;lcd.c: 258: {
  6542                           ;lcd.c: 259: if(sign == 1)
  6543  02FC  037D               	decf	LCD_Write_Int@sign,w
  6544  02FD  1D03               	btfss	3,2
  6545  02FE  2B03               	goto	l2242
  6546                           
  6547                           ;lcd.c: 260: {
  6548                           ;lcd.c: 261: LCD_Write_Char('+');
  6549  02FF  302B               	movlw	43
  6550  0300  318B  23DA  3182   	fcall	_LCD_Write_Char
  6551  0303                     l2242:	
  6552                           ;lcd.c: 262: }
  6553                           ;lcd.c: 263: }
  6554                           ;lcd.c: 265: while(value)
  6555                           
  6556  0303  0879               	movf	LCD_Write_Int@value,w
  6557  0304  047A               	iorwf	LCD_Write_Int@value+1,w
  6558  0305  1903               	btfsc	3,2
  6559  0306  2B30               	goto	l2244
  6560                           
  6561                           ;lcd.c: 266: {
  6562                           ;lcd.c: 267: str[i]=value%10;
  6563  0307  300A               	movlw	10
  6564  0308  00F0               	movwf	___awmod@divisor
  6565  0309  3000               	movlw	0
  6566  030A  00F1               	movwf	___awmod@divisor+1
  6567  030B  087A               	movf	LCD_Write_Int@value+1,w
  6568  030C  00F3               	movwf	___awmod@dividend+1
  6569  030D  0879               	movf	LCD_Write_Int@value,w
  6570  030E  00F2               	movwf	___awmod@dividend
  6571  030F  318D  2523  3182   	fcall	___awmod
  6572  0312  0870               	movf	?___awmod,w
  6573  0313  0020               	movlb	0	; select bank0
  6574  0314  00A0               	movwf	??_LCD_Write_Int
  6575  0315  082C               	movf	LCD_Write_Int@i,w
  6576  0316  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6577  0317  0086               	movwf	6
  6578  0318  0187               	clrf	7
  6579  0319  0820               	movf	??_LCD_Write_Int,w
  6580  031A  0081               	movwf	1
  6581                           
  6582                           ;lcd.c: 268: value=value/10;
  6583  031B  300A               	movlw	10
  6584  031C  00F0               	movwf	___awdiv@divisor
  6585  031D  3000               	movlw	0
  6586  031E  00F1               	movwf	___awdiv@divisor+1
  6587  031F  087A               	movf	LCD_Write_Int@value+1,w
  6588  0320  00F3               	movwf	___awdiv@dividend+1
  6589  0321  0879               	movf	LCD_Write_Int@value,w
  6590  0322  00F2               	movwf	___awdiv@dividend
  6591  0323  318D  2568  3182   	fcall	___awdiv
  6592  0326  0871               	movf	?___awdiv+1,w
  6593  0327  00FA               	movwf	LCD_Write_Int@value+1
  6594  0328  0870               	movf	?___awdiv,w
  6595  0329  00F9               	movwf	LCD_Write_Int@value
  6596                           
  6597                           ;lcd.c: 269: i--;
  6598  032A  30FF               	movlw	255
  6599  032B  0020               	movlb	0	; select bank0
  6600  032C  07AC               	addwf	LCD_Write_Int@i,f
  6601  032D  30FF               	movlw	255
  6602  032E  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6603  032F  2B03               	goto	l2242
  6604  0330                     l2244:	
  6605                           
  6606                           ;lcd.c: 270: }
  6607                           ;lcd.c: 271: if(fieldLength==-1)
  6608  0330  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6609  0331  1903               	btfsc	3,2
  6610  0332  2B39               	goto	l2250
  6611  0333  2B42               	goto	l2252
  6612  0334                     l2248:	
  6613                           ;lcd.c: 272: {
  6614                           ;lcd.c: 273: while(str[j]==0)
  6615                           
  6616                           
  6617                           ;lcd.c: 274: {
  6618                           ;lcd.c: 275: j++;
  6619  0334  3001               	movlw	1
  6620  0335  0020               	movlb	0	; select bank0
  6621  0336  07AA               	addwf	LCD_Write_Int@j,f
  6622  0337  3000               	movlw	0
  6623  0338  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6624  0339                     l2250:	
  6625  0339  0020               	movlb	0	; select bank0
  6626  033A  082A               	movf	LCD_Write_Int@j,w
  6627  033B  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6628  033C  0086               	movwf	6
  6629  033D  0187               	clrf	7
  6630  033E  0801               	movf	1,w
  6631  033F  1D03               	btfss	3,2
  6632  0340  2B53               	goto	l2254
  6633  0341  2B34               	goto	l2248
  6634  0342                     l2252:	
  6635                           ;lcd.c: 276: }
  6636                           ;lcd.c: 277: }
  6637                           
  6638                           
  6639                           ;lcd.c: 278: else
  6640                           ;lcd.c: 279: {
  6641                           ;lcd.c: 280: j=5-fieldLength;
  6642  0342  087B               	movf	LCD_Write_Int@fieldLength,w
  6643  0343  0020               	movlb	0	; select bank0
  6644  0344  00A0               	movwf	??_LCD_Write_Int
  6645  0345  01A1               	clrf	??_LCD_Write_Int+1
  6646  0346  1BA0               	btfsc	??_LCD_Write_Int,7
  6647  0347  03A1               	decf	??_LCD_Write_Int+1,f
  6648  0348  09A0               	comf	??_LCD_Write_Int,f
  6649  0349  09A1               	comf	??_LCD_Write_Int+1,f
  6650  034A  0AA0               	incf	??_LCD_Write_Int,f
  6651  034B  1903               	skipnz
  6652  034C  0AA1               	incf	??_LCD_Write_Int+1,f
  6653  034D  0820               	movf	??_LCD_Write_Int,w
  6654  034E  3E05               	addlw	5
  6655  034F  00AA               	movwf	LCD_Write_Int@j
  6656  0350  3000               	movlw	0
  6657  0351  3D21               	addwfc	??_LCD_Write_Int+1,w
  6658  0352  00AB               	movwf	LCD_Write_Int@j+1
  6659  0353                     l2254:	
  6660                           
  6661                           ;lcd.c: 281: }
  6662                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6663  0353  082B               	movf	LCD_Write_Int@j+1,w
  6664  0354  00AD               	movwf	LCD_Write_Int@i+1
  6665  0355  082A               	movf	LCD_Write_Int@j,w
  6666  0356  00AC               	movwf	LCD_Write_Int@i
  6667  0357                     l2260:	
  6668  0357  087C               	movf	LCD_Write_Int@numPlaces,w
  6669  0358  00A0               	movwf	??_LCD_Write_Int
  6670  0359  01A1               	clrf	??_LCD_Write_Int+1
  6671  035A  1BA0               	btfsc	??_LCD_Write_Int,7
  6672  035B  03A1               	decf	??_LCD_Write_Int+1,f
  6673  035C  09A0               	comf	??_LCD_Write_Int,f
  6674  035D  09A1               	comf	??_LCD_Write_Int+1,f
  6675  035E  0AA0               	incf	??_LCD_Write_Int,f
  6676  035F  1903               	skipnz
  6677  0360  0AA1               	incf	??_LCD_Write_Int+1,f
  6678  0361  0820               	movf	??_LCD_Write_Int,w
  6679  0362  3E05               	addlw	5
  6680  0363  00A2               	movwf	??_LCD_Write_Int+2
  6681  0364  3000               	movlw	0
  6682  0365  3D21               	addwfc	??_LCD_Write_Int+1,w
  6683  0366  00A3               	movwf	??_LCD_Write_Int+3
  6684  0367  082D               	movf	LCD_Write_Int@i+1,w
  6685  0368  3A80               	xorlw	128
  6686  0369  00A4               	movwf	??_LCD_Write_Int+4
  6687  036A  0823               	movf	??_LCD_Write_Int+3,w
  6688  036B  3A80               	xorlw	128
  6689  036C  0224               	subwf	??_LCD_Write_Int+4,w
  6690  036D  1D03               	skipz
  6691  036E  2B71               	goto	u2425
  6692  036F  0822               	movf	??_LCD_Write_Int+2,w
  6693  0370  022C               	subwf	LCD_Write_Int@i,w
  6694  0371                     u2425:	
  6695  0371  1803               	btfsc	3,0
  6696  0372  2B83               	goto	l2262
  6697                           
  6698                           ;lcd.c: 284: {
  6699                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6700  0373  0020               	movlb	0	; select bank0
  6701  0374  082C               	movf	LCD_Write_Int@i,w
  6702  0375  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6703  0376  0086               	movwf	6
  6704  0377  0187               	clrf	7
  6705  0378  0801               	movf	1,w
  6706  0379  3E30               	addlw	48
  6707  037A  318B  23DA  3182   	fcall	_LCD_Write_Char
  6708  037D  3001               	movlw	1
  6709  037E  0020               	movlb	0	; select bank0
  6710  037F  07AC               	addwf	LCD_Write_Int@i,f
  6711  0380  3000               	movlw	0
  6712  0381  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6713  0382  2B57               	goto	l2260
  6714  0383                     l2262:	
  6715                           
  6716                           ;lcd.c: 286: }
  6717                           ;lcd.c: 288: if(numPlaces == 1)
  6718  0383  037C               	decf	LCD_Write_Int@numPlaces,w
  6719  0384  1D03               	btfss	3,2
  6720  0385  2B90               	goto	l2266
  6721                           
  6722                           ;lcd.c: 289: {
  6723                           ;lcd.c: 290: LCD_Write_Char(46);
  6724  0386  302E               	movlw	46
  6725  0387  318B  23DA  3182   	fcall	_LCD_Write_Char
  6726                           
  6727                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6728  038A  0020               	movlb	0	; select bank0
  6729  038B  0829               	movf	LCD_Write_Int@str+4,w
  6730  038C  3E30               	addlw	48
  6731  038D  318B  23DA  3182   	fcall	_LCD_Write_Char
  6732  0390                     l2266:	
  6733                           
  6734                           ;lcd.c: 292: }
  6735                           ;lcd.c: 294: if(numPlaces == 2)
  6736  0390  3002               	movlw	2
  6737  0391  067C               	xorwf	LCD_Write_Int@numPlaces,w
  6738  0392  1D03               	btfss	3,2
  6739  0393  0008               	return
  6740                           
  6741                           ;lcd.c: 295: {
  6742                           ;lcd.c: 296: LCD_Write_Char(46);
  6743  0394  302E               	movlw	46
  6744  0395  318B  23DA  3182   	fcall	_LCD_Write_Char
  6745                           
  6746                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  6747  0398  0020               	movlb	0	; select bank0
  6748  0399  0828               	movf	LCD_Write_Int@str+3,w
  6749  039A  3E30               	addlw	48
  6750  039B  318B  23DA  3182   	fcall	_LCD_Write_Char
  6751                           
  6752                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  6753  039E  0020               	movlb	0	; select bank0
  6754  039F  0829               	movf	LCD_Write_Int@str+4,w
  6755  03A0  3E30               	addlw	48
  6756  03A1  318B  23DA         	fcall	_LCD_Write_Char
  6757  03A3  0008               	return
  6758  03A4                     __end_of_LCD_Write_Int:	
  6759                           
  6760                           	psect	text5
  6761  0D23                     __ptext5:	
  6762 ;; *************** function ___awmod *****************
  6763 ;; Defined at:
  6764 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  divisor         2    0[COMMON] int 
  6767 ;;  dividend        2    2[COMMON] int 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  sign            1    6[COMMON] unsigned char 
  6770 ;;  counter         1    5[COMMON] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    0[COMMON] int 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;Total ram usage:        7 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_LCD_Write_Int
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           
  6794                           ;psect for function ___awmod
  6795  0D23                     ___awmod:	
  6796                           
  6797                           ;incstack = 0
  6798                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6799  0D23  01F6               	clrf	___awmod@sign
  6800  0D24  1FF3               	btfss	___awmod@dividend+1,7
  6801  0D25  2D2D               	goto	l1990
  6802  0D26  09F2               	comf	___awmod@dividend,f
  6803  0D27  09F3               	comf	___awmod@dividend+1,f
  6804  0D28  0AF2               	incf	___awmod@dividend,f
  6805  0D29  1903               	skipnz
  6806  0D2A  0AF3               	incf	___awmod@dividend+1,f
  6807  0D2B  01F6               	clrf	___awmod@sign
  6808  0D2C  0AF6               	incf	___awmod@sign,f
  6809  0D2D                     l1990:	
  6810  0D2D  1FF1               	btfss	___awmod@divisor+1,7
  6811  0D2E  2D34               	goto	l1994
  6812  0D2F  09F0               	comf	___awmod@divisor,f
  6813  0D30  09F1               	comf	___awmod@divisor+1,f
  6814  0D31  0AF0               	incf	___awmod@divisor,f
  6815  0D32  1903               	skipnz
  6816  0D33  0AF1               	incf	___awmod@divisor+1,f
  6817  0D34                     l1994:	
  6818  0D34  0870               	movf	___awmod@divisor,w
  6819  0D35  0471               	iorwf	___awmod@divisor+1,w
  6820  0D36  1903               	btfsc	3,2
  6821  0D37  2D5B               	goto	l2012
  6822  0D38  01F5               	clrf	___awmod@counter
  6823  0D39  0AF5               	incf	___awmod@counter,f
  6824  0D3A                     l2002:	
  6825  0D3A  1BF1               	btfsc	___awmod@divisor+1,7
  6826  0D3B  2D46               	goto	l2004
  6827  0D3C  3001               	movlw	1
  6828  0D3D                     u1885:	
  6829  0D3D  35F0               	lslf	___awmod@divisor,f
  6830  0D3E  0DF1               	rlf	___awmod@divisor+1,f
  6831  0D3F  0B89               	decfsz	9,f
  6832  0D40  2D3D               	goto	u1885
  6833  0D41  3001               	movlw	1
  6834  0D42  00F4               	movwf	??___awmod
  6835  0D43  0874               	movf	??___awmod,w
  6836  0D44  07F5               	addwf	___awmod@counter,f
  6837  0D45  2D3A               	goto	l2002
  6838  0D46                     l2004:	
  6839  0D46  0871               	movf	___awmod@divisor+1,w
  6840  0D47  0273               	subwf	___awmod@dividend+1,w
  6841  0D48  1D03               	skipz
  6842  0D49  2D4C               	goto	u1905
  6843  0D4A  0870               	movf	___awmod@divisor,w
  6844  0D4B  0272               	subwf	___awmod@dividend,w
  6845  0D4C                     u1905:	
  6846  0D4C  1C03               	skipc
  6847  0D4D  2D52               	goto	l2008
  6848  0D4E  0870               	movf	___awmod@divisor,w
  6849  0D4F  02F2               	subwf	___awmod@dividend,f
  6850  0D50  0871               	movf	___awmod@divisor+1,w
  6851  0D51  3BF3               	subwfb	___awmod@dividend+1,f
  6852  0D52                     l2008:	
  6853  0D52  3001               	movlw	1
  6854  0D53                     u1915:	
  6855  0D53  36F1               	lsrf	___awmod@divisor+1,f
  6856  0D54  0CF0               	rrf	___awmod@divisor,f
  6857  0D55  0B89               	decfsz	9,f
  6858  0D56  2D53               	goto	u1915
  6859  0D57  3001               	movlw	1
  6860  0D58  02F5               	subwf	___awmod@counter,f
  6861  0D59  1D03               	btfss	3,2
  6862  0D5A  2D46               	goto	l2004
  6863  0D5B                     l2012:	
  6864  0D5B  0876               	movf	___awmod@sign,w
  6865  0D5C  1903               	btfsc	3,2
  6866  0D5D  2D63               	goto	l2016
  6867  0D5E  09F2               	comf	___awmod@dividend,f
  6868  0D5F  09F3               	comf	___awmod@dividend+1,f
  6869  0D60  0AF2               	incf	___awmod@dividend,f
  6870  0D61  1903               	skipnz
  6871  0D62  0AF3               	incf	___awmod@dividend+1,f
  6872  0D63                     l2016:	
  6873  0D63  0873               	movf	___awmod@dividend+1,w
  6874  0D64  00F1               	movwf	?___awmod+1
  6875  0D65  0872               	movf	___awmod@dividend,w
  6876  0D66  00F0               	movwf	?___awmod
  6877  0D67  0008               	return
  6878  0D68                     __end_of___awmod:	
  6879                           
  6880                           	psect	text6
  6881  0D68                     __ptext6:	
  6882 ;; *************** function ___awdiv *****************
  6883 ;; Defined at:
  6884 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  divisor         2    0[COMMON] int 
  6887 ;;  dividend        2    2[COMMON] int 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  quotient        2    7[COMMON] int 
  6890 ;;  sign            1    6[COMMON] unsigned char 
  6891 ;;  counter         1    5[COMMON] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2    0[COMMON] int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;Total ram usage:        9 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; This function calls:
  6908 ;;		Nothing
  6909 ;; This function is called by:
  6910 ;;		_LCD_Write_Int
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           
  6915                           ;psect for function ___awdiv
  6916  0D68                     ___awdiv:	
  6917                           
  6918                           ;incstack = 0
  6919                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6920  0D68  01F6               	clrf	___awdiv@sign
  6921  0D69  1FF1               	btfss	___awdiv@divisor+1,7
  6922  0D6A  2D72               	goto	l1946
  6923  0D6B  09F0               	comf	___awdiv@divisor,f
  6924  0D6C  09F1               	comf	___awdiv@divisor+1,f
  6925  0D6D  0AF0               	incf	___awdiv@divisor,f
  6926  0D6E  1903               	skipnz
  6927  0D6F  0AF1               	incf	___awdiv@divisor+1,f
  6928  0D70  01F6               	clrf	___awdiv@sign
  6929  0D71  0AF6               	incf	___awdiv@sign,f
  6930  0D72                     l1946:	
  6931  0D72  1FF3               	btfss	___awdiv@dividend+1,7
  6932  0D73  2D7D               	goto	l1952
  6933  0D74  09F2               	comf	___awdiv@dividend,f
  6934  0D75  09F3               	comf	___awdiv@dividend+1,f
  6935  0D76  0AF2               	incf	___awdiv@dividend,f
  6936  0D77  1903               	skipnz
  6937  0D78  0AF3               	incf	___awdiv@dividend+1,f
  6938  0D79  3001               	movlw	1
  6939  0D7A  00F4               	movwf	??___awdiv
  6940  0D7B  0874               	movf	??___awdiv,w
  6941  0D7C  06F6               	xorwf	___awdiv@sign,f
  6942  0D7D                     l1952:	
  6943  0D7D  01F7               	clrf	___awdiv@quotient
  6944  0D7E  01F8               	clrf	___awdiv@quotient+1
  6945  0D7F  0870               	movf	___awdiv@divisor,w
  6946  0D80  0471               	iorwf	___awdiv@divisor+1,w
  6947  0D81  1903               	btfsc	3,2
  6948  0D82  2DAC               	goto	l1974
  6949  0D83  01F5               	clrf	___awdiv@counter
  6950  0D84  0AF5               	incf	___awdiv@counter,f
  6951  0D85                     l1962:	
  6952  0D85  1BF1               	btfsc	___awdiv@divisor+1,7
  6953  0D86  2D91               	goto	l1964
  6954  0D87  3001               	movlw	1
  6955  0D88                     u1785:	
  6956  0D88  35F0               	lslf	___awdiv@divisor,f
  6957  0D89  0DF1               	rlf	___awdiv@divisor+1,f
  6958  0D8A  0B89               	decfsz	9,f
  6959  0D8B  2D88               	goto	u1785
  6960  0D8C  3001               	movlw	1
  6961  0D8D  00F4               	movwf	??___awdiv
  6962  0D8E  0874               	movf	??___awdiv,w
  6963  0D8F  07F5               	addwf	___awdiv@counter,f
  6964  0D90  2D85               	goto	l1962
  6965  0D91                     l1964:	
  6966  0D91  3001               	movlw	1
  6967  0D92                     u1805:	
  6968  0D92  35F7               	lslf	___awdiv@quotient,f
  6969  0D93  0DF8               	rlf	___awdiv@quotient+1,f
  6970  0D94  0B89               	decfsz	9,f
  6971  0D95  2D92               	goto	u1805
  6972  0D96  0871               	movf	___awdiv@divisor+1,w
  6973  0D97  0273               	subwf	___awdiv@dividend+1,w
  6974  0D98  1D03               	skipz
  6975  0D99  2D9C               	goto	u1815
  6976  0D9A  0870               	movf	___awdiv@divisor,w
  6977  0D9B  0272               	subwf	___awdiv@dividend,w
  6978  0D9C                     u1815:	
  6979  0D9C  1C03               	skipc
  6980  0D9D  2DA3               	goto	l1970
  6981  0D9E  0870               	movf	___awdiv@divisor,w
  6982  0D9F  02F2               	subwf	___awdiv@dividend,f
  6983  0DA0  0871               	movf	___awdiv@divisor+1,w
  6984  0DA1  3BF3               	subwfb	___awdiv@dividend+1,f
  6985  0DA2  1477               	bsf	___awdiv@quotient,0
  6986  0DA3                     l1970:	
  6987  0DA3  3001               	movlw	1
  6988  0DA4                     u1825:	
  6989  0DA4  36F1               	lsrf	___awdiv@divisor+1,f
  6990  0DA5  0CF0               	rrf	___awdiv@divisor,f
  6991  0DA6  0B89               	decfsz	9,f
  6992  0DA7  2DA4               	goto	u1825
  6993  0DA8  3001               	movlw	1
  6994  0DA9  02F5               	subwf	___awdiv@counter,f
  6995  0DAA  1D03               	btfss	3,2
  6996  0DAB  2D91               	goto	l1964
  6997  0DAC                     l1974:	
  6998  0DAC  0876               	movf	___awdiv@sign,w
  6999  0DAD  1903               	btfsc	3,2
  7000  0DAE  2DB4               	goto	l1978
  7001  0DAF  09F7               	comf	___awdiv@quotient,f
  7002  0DB0  09F8               	comf	___awdiv@quotient+1,f
  7003  0DB1  0AF7               	incf	___awdiv@quotient,f
  7004  0DB2  1903               	skipnz
  7005  0DB3  0AF8               	incf	___awdiv@quotient+1,f
  7006  0DB4                     l1978:	
  7007  0DB4  0878               	movf	___awdiv@quotient+1,w
  7008  0DB5  00F1               	movwf	?___awdiv+1
  7009  0DB6  0877               	movf	___awdiv@quotient,w
  7010  0DB7  00F0               	movwf	?___awdiv
  7011  0DB8  0008               	return
  7012  0DB9                     __end_of___awdiv:	
  7013                           
  7014                           	psect	text7
  7015  0CE4                     __ptext7:	
  7016 ;; *************** function _LCD_Set_Cursor *****************
  7017 ;; Defined at:
  7018 ;;		line 82 in file "lcd.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  x               1    wreg     unsigned char 
  7021 ;;  y               1    3[COMMON] unsigned char 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  x               1    6[COMMON] unsigned char 
  7024 ;;  temp            1    9[COMMON] unsigned char 
  7025 ;;  w               1    8[COMMON] unsigned char 
  7026 ;;  z               1    7[COMMON] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0, pclath, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7036 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;Total ram usage:        7 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    2
  7043 ;; This function calls:
  7044 ;;		_LCD_Cmd
  7045 ;; This function is called by:
  7046 ;;		_tempSetpoint
  7047 ;;		_main
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function _LCD_Set_Cursor
  7053  0CE4                     _LCD_Set_Cursor:	
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7057                           ;LCD_Set_Cursor@x stored from wreg
  7058  0CE4  00F6               	movwf	LCD_Set_Cursor@x
  7059                           
  7060                           ;lcd.c: 86: char temp,z,w;
  7061                           ;lcd.c: 88: if(x == 0)
  7062  0CE5  0876               	movf	LCD_Set_Cursor@x,w
  7063  0CE6  1D03               	btfss	3,2
  7064  0CE7  2D04               	goto	l2168
  7065                           
  7066                           ;lcd.c: 89: {
  7067                           ;lcd.c: 90: temp = 0x80 + y;
  7068  0CE8  0873               	movf	LCD_Set_Cursor@y,w
  7069  0CE9  3E80               	addlw	128
  7070  0CEA  00F4               	movwf	??_LCD_Set_Cursor
  7071  0CEB  0874               	movf	??_LCD_Set_Cursor,w
  7072  0CEC  00F9               	movwf	LCD_Set_Cursor@temp
  7073                           
  7074                           ;lcd.c: 91: z = temp>>4;
  7075  0CED  0879               	movf	LCD_Set_Cursor@temp,w
  7076  0CEE  00F4               	movwf	??_LCD_Set_Cursor
  7077  0CEF  3004               	movlw	4
  7078  0CF0                     u2325:	
  7079  0CF0  36F4               	lsrf	??_LCD_Set_Cursor,f
  7080  0CF1  0B89               	decfsz	9,f
  7081  0CF2  2CF0               	goto	u2325
  7082  0CF3  0874               	movf	??_LCD_Set_Cursor,w
  7083  0CF4  00F5               	movwf	??_LCD_Set_Cursor+1
  7084  0CF5  0875               	movf	??_LCD_Set_Cursor+1,w
  7085  0CF6  00F7               	movwf	LCD_Set_Cursor@z
  7086                           
  7087                           ;lcd.c: 92: w = temp & 0x0F;
  7088  0CF7  0879               	movf	LCD_Set_Cursor@temp,w
  7089  0CF8  390F               	andlw	15
  7090  0CF9  00F4               	movwf	??_LCD_Set_Cursor
  7091  0CFA  0874               	movf	??_LCD_Set_Cursor,w
  7092  0CFB  00F8               	movwf	LCD_Set_Cursor@w
  7093                           
  7094                           ;lcd.c: 93: LCD_Cmd(z);
  7095  0CFC  0877               	movf	LCD_Set_Cursor@z,w
  7096  0CFD  318A  2294  318C   	fcall	_LCD_Cmd
  7097                           
  7098                           ;lcd.c: 94: LCD_Cmd(w);
  7099  0D00  0878               	movf	LCD_Set_Cursor@w,w
  7100  0D01  318A  2294         	fcall	_LCD_Cmd
  7101                           
  7102                           ;lcd.c: 95: }
  7103  0D03  0008               	return
  7104  0D04                     l2168:	
  7105                           
  7106                           ;lcd.c: 97: else if(x == 1)
  7107  0D04  0376               	decf	LCD_Set_Cursor@x,w
  7108  0D05  1D03               	btfss	3,2
  7109  0D06  0008               	return
  7110                           
  7111                           ;lcd.c: 98: {
  7112                           ;lcd.c: 99: temp = 0xC0 + y;
  7113  0D07  0873               	movf	LCD_Set_Cursor@y,w
  7114  0D08  3EC0               	addlw	192
  7115  0D09  00F4               	movwf	??_LCD_Set_Cursor
  7116  0D0A  0874               	movf	??_LCD_Set_Cursor,w
  7117  0D0B  00F9               	movwf	LCD_Set_Cursor@temp
  7118                           
  7119                           ;lcd.c: 100: z = temp>>4;
  7120  0D0C  0879               	movf	LCD_Set_Cursor@temp,w
  7121  0D0D  00F4               	movwf	??_LCD_Set_Cursor
  7122  0D0E  3004               	movlw	4
  7123  0D0F                     u2345:	
  7124  0D0F  36F4               	lsrf	??_LCD_Set_Cursor,f
  7125  0D10  0B89               	decfsz	9,f
  7126  0D11  2D0F               	goto	u2345
  7127  0D12  0874               	movf	??_LCD_Set_Cursor,w
  7128  0D13  00F5               	movwf	??_LCD_Set_Cursor+1
  7129  0D14  0875               	movf	??_LCD_Set_Cursor+1,w
  7130  0D15  00F7               	movwf	LCD_Set_Cursor@z
  7131                           
  7132                           ;lcd.c: 101: w = temp & 0x0F;
  7133  0D16  0879               	movf	LCD_Set_Cursor@temp,w
  7134  0D17  390F               	andlw	15
  7135  0D18  00F4               	movwf	??_LCD_Set_Cursor
  7136  0D19  0874               	movf	??_LCD_Set_Cursor,w
  7137  0D1A  00F8               	movwf	LCD_Set_Cursor@w
  7138                           
  7139                           ;lcd.c: 102: LCD_Cmd(z);
  7140  0D1B  0877               	movf	LCD_Set_Cursor@z,w
  7141  0D1C  318A  2294  318C   	fcall	_LCD_Cmd
  7142                           
  7143                           ;lcd.c: 103: LCD_Cmd(w);
  7144  0D1F  0878               	movf	LCD_Set_Cursor@w,w
  7145  0D20  318A  2294         	fcall	_LCD_Cmd
  7146  0D22  0008               	return
  7147  0D23                     __end_of_LCD_Set_Cursor:	
  7148                           
  7149                           	psect	text8
  7150  00C0                     __ptext8:	
  7151 ;; *************** function _log *****************
  7152 ;; Defined at:
  7153 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  x               3   39[BANK0 ] void 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  exponent        2   43[BANK0 ] int 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  3   39[BANK0 ] int 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7167 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;Total ram usage:        6 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    3
  7174 ;; This function calls:
  7175 ;;		___awtoft
  7176 ;;		___ftadd
  7177 ;;		___ftge
  7178 ;;		___ftmul
  7179 ;;		_eval_poly
  7180 ;;		_frexp
  7181 ;; This function is called by:
  7182 ;;		_main
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function _log
  7188  00C0                     _log:	
  7189                           
  7190                           ;incstack = 0
  7191                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7192  00C0  0020               	movlb	0	; select bank0
  7193  00C1  0847               	movf	log@x,w
  7194  00C2  00BD               	movwf	___ftge@ff1
  7195  00C3  0848               	movf	log@x+1,w
  7196  00C4  00BE               	movwf	___ftge@ff1+1
  7197  00C5  0849               	movf	log@x+2,w
  7198  00C6  00BF               	movwf	___ftge@ff1+2
  7199  00C7  3000               	movlw	0
  7200  00C8  00C0               	movwf	___ftge@ff2
  7201  00C9  3000               	movlw	0
  7202  00CA  00C1               	movwf	___ftge@ff2+1
  7203  00CB  3000               	movlw	0
  7204  00CC  00C2               	movwf	___ftge@ff2+2
  7205  00CD  318C  24A8  3180   	fcall	___ftge
  7206  00D0  1803               	btfsc	3,0
  7207  00D1  28DE               	goto	l2558
  7208  00D2  3021               	movlw	33
  7209  00D3  0020               	movlb	0	; select bank0
  7210  00D4  00DC               	movwf	_errno
  7211  00D5  3000               	movlw	0
  7212  00D6  00DD               	movwf	_errno+1
  7213  00D7  3000               	movlw	0
  7214  00D8  00C7               	movwf	?_log
  7215  00D9  3000               	movlw	0
  7216  00DA  00C8               	movwf	?_log+1
  7217  00DB  3000               	movlw	0
  7218  00DC  00C9               	movwf	?_log+2
  7219  00DD  0008               	return
  7220  00DE                     l2558:	
  7221  00DE  0020               	movlb	0	; select bank0
  7222  00DF  0849               	movf	log@x+2,w
  7223  00E0  0448               	iorwf	log@x+1,w
  7224  00E1  0447               	iorwf	log@x,w
  7225  00E2  1D03               	skipz
  7226  00E3  28EF               	goto	l2564
  7227  00E4  3022               	movlw	34
  7228  00E5  00DC               	movwf	_errno
  7229  00E6  3000               	movlw	0
  7230  00E7  00DD               	movwf	_errno+1
  7231  00E8  3000               	movlw	0
  7232  00E9  00C7               	movwf	?_log
  7233  00EA  3000               	movlw	0
  7234  00EB  00C8               	movwf	?_log+1
  7235  00EC  3000               	movlw	0
  7236  00ED  00C9               	movwf	?_log+2
  7237  00EE  0008               	return
  7238  00EF                     l2564:	
  7239  00EF  3000               	movlw	0
  7240  00F0  00B0               	movwf	___ftadd@f1
  7241  00F1  3080               	movlw	128
  7242  00F2  00B1               	movwf	___ftadd@f1+1
  7243  00F3  30BF               	movlw	191
  7244  00F4  00B2               	movwf	___ftadd@f1+2
  7245  00F5  3000               	movlw	0
  7246  00F6  00A0               	movwf	___ftmul@f1
  7247  00F7  3000               	movlw	0
  7248  00F8  00A1               	movwf	___ftmul@f1+1
  7249  00F9  3040               	movlw	64
  7250  00FA  00A2               	movwf	___ftmul@f1+2
  7251  00FB  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7252  00FC  00CA               	movwf	??_log
  7253  00FD  084A               	movf	??_log,w
  7254  00FE  00F3               	movwf	frexp@eptr
  7255  00FF  0847               	movf	log@x,w
  7256  0100  00F0               	movwf	frexp@value
  7257  0101  0848               	movf	log@x+1,w
  7258  0102  00F1               	movwf	frexp@value+1
  7259  0103  0849               	movf	log@x+2,w
  7260  0104  00F2               	movwf	frexp@value+2
  7261  0105  318C  246D  3180   	fcall	_frexp
  7262  0108  0870               	movf	?_frexp,w
  7263  0109  0020               	movlb	0	; select bank0
  7264  010A  00A3               	movwf	___ftmul@f2
  7265  010B  0871               	movf	?_frexp+1,w
  7266  010C  00A4               	movwf	___ftmul@f2+1
  7267  010D  0872               	movf	?_frexp+2,w
  7268  010E  00A5               	movwf	___ftmul@f2+2
  7269  010F  3181  216D  3180   	fcall	___ftmul
  7270  0112  0020               	movlb	0	; select bank0
  7271  0113  0820               	movf	?___ftmul,w
  7272  0114  00B3               	movwf	___ftadd@f2
  7273  0115  0821               	movf	?___ftmul+1,w
  7274  0116  00B4               	movwf	___ftadd@f2+1
  7275  0117  0822               	movf	?___ftmul+2,w
  7276  0118  00B5               	movwf	___ftadd@f2+2
  7277  0119  3183  23A4  3180   	fcall	___ftadd
  7278  011C  0020               	movlb	0	; select bank0
  7279  011D  0830               	movf	?___ftadd,w
  7280  011E  00C7               	movwf	log@x
  7281  011F  0831               	movf	?___ftadd+1,w
  7282  0120  00C8               	movwf	log@x+1
  7283  0121  0832               	movf	?___ftadd+2,w
  7284  0122  00C9               	movwf	log@x+2
  7285  0123  30FF               	movlw	255
  7286  0124  07CB               	addwf	log@exponent,f
  7287  0125  30FF               	movlw	255
  7288  0126  3DCC               	addwfc	log@exponent+1,f
  7289  0127  0847               	movf	log@x,w
  7290  0128  00BD               	movwf	eval_poly@x
  7291  0129  0848               	movf	log@x+1,w
  7292  012A  00BE               	movwf	eval_poly@x+1
  7293  012B  0849               	movf	log@x+2,w
  7294  012C  00BF               	movwf	eval_poly@x+2
  7295  012D  3000               	movlw	low (log@coeff| (0+32768))
  7296  012E  00C0               	movwf	eval_poly@d
  7297  012F  3090               	movlw	high (log@coeff| (0+32768))
  7298  0130  00C1               	movwf	eval_poly@d+1
  7299  0131  3008               	movlw	8
  7300  0132  00C2               	movwf	eval_poly@n
  7301  0133  3000               	movlw	0
  7302  0134  00C3               	movwf	eval_poly@n+1
  7303  0135  318D  25B9  3180   	fcall	_eval_poly
  7304  0138  0020               	movlb	0	; select bank0
  7305  0139  083D               	movf	?_eval_poly,w
  7306  013A  00C7               	movwf	log@x
  7307  013B  083E               	movf	?_eval_poly+1,w
  7308  013C  00C8               	movwf	log@x+1
  7309  013D  083F               	movf	?_eval_poly+2,w
  7310  013E  00C9               	movwf	log@x+2
  7311  013F  0847               	movf	log@x,w
  7312  0140  00B0               	movwf	___ftadd@f1
  7313  0141  0848               	movf	log@x+1,w
  7314  0142  00B1               	movwf	___ftadd@f1+1
  7315  0143  0849               	movf	log@x+2,w
  7316  0144  00B2               	movwf	___ftadd@f1+2
  7317  0145  3072               	movlw	114
  7318  0146  00A0               	movwf	___ftmul@f1
  7319  0147  3031               	movlw	49
  7320  0148  00A1               	movwf	___ftmul@f1+1
  7321  0149  303F               	movlw	63
  7322  014A  00A2               	movwf	___ftmul@f1+2
  7323  014B  084C               	movf	log@exponent+1,w
  7324  014C  00F9               	movwf	___awtoft@c+1
  7325  014D  084B               	movf	log@exponent,w
  7326  014E  00F8               	movwf	___awtoft@c
  7327  014F  318B  2373  3180   	fcall	___awtoft
  7328  0152  0878               	movf	?___awtoft,w
  7329  0153  0020               	movlb	0	; select bank0
  7330  0154  00A3               	movwf	___ftmul@f2
  7331  0155  0879               	movf	?___awtoft+1,w
  7332  0156  00A4               	movwf	___ftmul@f2+1
  7333  0157  087A               	movf	?___awtoft+2,w
  7334  0158  00A5               	movwf	___ftmul@f2+2
  7335  0159  3181  216D  3180   	fcall	___ftmul
  7336  015C  0020               	movlb	0	; select bank0
  7337  015D  0820               	movf	?___ftmul,w
  7338  015E  00B3               	movwf	___ftadd@f2
  7339  015F  0821               	movf	?___ftmul+1,w
  7340  0160  00B4               	movwf	___ftadd@f2+1
  7341  0161  0822               	movf	?___ftmul+2,w
  7342  0162  00B5               	movwf	___ftadd@f2+2
  7343  0163  3183  23A4         	fcall	___ftadd
  7344  0165  0020               	movlb	0	; select bank0
  7345  0166  0830               	movf	?___ftadd,w
  7346  0167  00C7               	movwf	?_log
  7347  0168  0831               	movf	?___ftadd+1,w
  7348  0169  00C8               	movwf	?_log+1
  7349  016A  0832               	movf	?___ftadd+2,w
  7350  016B  00C9               	movwf	?_log+2
  7351  016C  0008               	return
  7352  016D                     __end_of_log:	
  7353                           
  7354                           	psect	text9
  7355  0C6D                     __ptext9:	
  7356 ;; *************** function _frexp *****************
  7357 ;; Defined at:
  7358 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  value           3    0[COMMON] int 
  7361 ;;  eptr            1    3[COMMON] PTR int 
  7362 ;;		 -> log@exponent(2), 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  3    0[COMMON] PTR int 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;Total ram usage:        6 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_log
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _frexp
  7389  0C6D                     _frexp:	
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7393  0C6D  0872               	movf	frexp@value+2,w
  7394  0C6E  0471               	iorwf	frexp@value+1,w
  7395  0C6F  0470               	iorwf	frexp@value,w
  7396  0C70  1D03               	skipz
  7397  0C71  2C7F               	goto	l2426
  7398  0C72  0873               	movf	frexp@eptr,w
  7399  0C73  0086               	movwf	6
  7400  0C74  0187               	clrf	7
  7401  0C75  3000               	movlw	0
  7402  0C76  3FC0               	movwi [0]fsr1
  7403  0C77  3FC1               	movwi [1]fsr1
  7404  0C78  3000               	movlw	0
  7405  0C79  00F0               	movwf	?_frexp
  7406  0C7A  3000               	movlw	0
  7407  0C7B  00F1               	movwf	?_frexp+1
  7408  0C7C  3000               	movlw	0
  7409  0C7D  00F2               	movwf	?_frexp+2
  7410  0C7E  0008               	return
  7411  0C7F                     l2426:	
  7412  0C7F  0872               	movf	frexp@value+2,w
  7413  0C80  397F               	andlw	127
  7414  0C81  00F4               	movwf	??_frexp
  7415  0C82  01F5               	clrf	??_frexp+1
  7416  0C83  35F4               	lslf	??_frexp,f
  7417  0C84  0DF5               	rlf	??_frexp+1,f
  7418  0C85  0873               	movf	frexp@eptr,w
  7419  0C86  0086               	movwf	6
  7420  0C87  0187               	clrf	7
  7421  0C88  0874               	movf	??_frexp,w
  7422  0C89  3FC0               	movwi [0]fsr1
  7423  0C8A  0875               	movf	??_frexp+1,w
  7424  0C8B  3FC1               	movwi [1]fsr1
  7425  0C8C  0D71               	rlf	frexp@value+1,w
  7426  0C8D  0D71               	rlf	frexp@value+1,w
  7427  0C8E  3901               	andlw	1
  7428  0C8F  00F4               	movwf	??_frexp
  7429  0C90  01F5               	clrf	??_frexp+1
  7430  0C91  0873               	movf	frexp@eptr,w
  7431  0C92  0086               	movwf	6
  7432  0C93  0187               	clrf	7
  7433  0C94  0874               	movf	??_frexp,w
  7434  0C95  0481               	iorwf	1,f
  7435  0C96  3141               	addfsr 1,1
  7436  0C97  0875               	movf	??_frexp+1,w
  7437  0C98  0481               	iorwf	1,f
  7438  0C99  0873               	movf	frexp@eptr,w
  7439  0C9A  0086               	movwf	6
  7440  0C9B  0187               	clrf	7
  7441  0C9C  3082               	movlw	130
  7442  0C9D  0781               	addwf	1,f
  7443  0C9E  3141               	addfsr 1,1
  7444  0C9F  30FF               	movlw	255
  7445  0CA0  3D81               	addwfc	1,f
  7446  0CA1  317F               	addfsr 1,-1
  7447  0CA2  0872               	movf	frexp@value+2,w
  7448  0CA3  3980               	andlw	-128
  7449  0CA4  383F               	iorlw	63
  7450  0CA5  00F2               	movwf	frexp@value+2
  7451  0CA6  13F1               	bcf	frexp@value+1,7
  7452  0CA7  0008               	return
  7453  0CA8                     __end_of_frexp:	
  7454                           
  7455                           	psect	text10
  7456  0DB9                     __ptext10:	
  7457 ;; *************** function _eval_poly *****************
  7458 ;; Defined at:
  7459 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  x               3   29[BANK0 ] PTR int 
  7462 ;;  d               2   32[BANK0 ] PTR const 
  7463 ;;		 -> log@coeff(27), 
  7464 ;;  n               2   34[BANK0 ] int 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  res             3   36[BANK0 ] int 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  3   29[BANK0 ] int 
  7469 ;; Registers used:
  7470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7476 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;Total ram usage:       10 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    2
  7483 ;; This function calls:
  7484 ;;		___ftadd
  7485 ;;		___ftmul
  7486 ;;		___wmul
  7487 ;; This function is called by:
  7488 ;;		_log
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _eval_poly
  7494  0DB9                     _eval_poly:	
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7498  0DB9  0020               	movlb	0	; select bank0
  7499  0DBA  0843               	movf	eval_poly@n+1,w
  7500  0DBB  00A1               	movwf	___wmul@multiplier+1
  7501  0DBC  0842               	movf	eval_poly@n,w
  7502  0DBD  00A0               	movwf	___wmul@multiplier
  7503  0DBE  3003               	movlw	3
  7504  0DBF  00A2               	movwf	___wmul@multiplicand
  7505  0DC0  3000               	movlw	0
  7506  0DC1  00A3               	movwf	___wmul@multiplicand+1
  7507  0DC2  318B  2339  318D   	fcall	___wmul
  7508  0DC5  0020               	movlb	0	; select bank0
  7509  0DC6  0840               	movf	eval_poly@d,w
  7510  0DC7  0720               	addwf	?___wmul,w
  7511  0DC8  0084               	movwf	4
  7512  0DC9  0841               	movf	eval_poly@d+1,w
  7513  0DCA  3D21               	addwfc	?___wmul+1,w
  7514  0DCB  0085               	movwf	5
  7515  0DCC  3F00               	moviw [0]fsr0
  7516  0DCD  00C4               	movwf	eval_poly@res
  7517  0DCE  3F01               	moviw [1]fsr0
  7518  0DCF  00C5               	movwf	eval_poly@res+1
  7519  0DD0  3F02               	moviw [2]fsr0
  7520  0DD1                     L1:	
  7521  0DD1  00C6               	movwf	eval_poly@res+2
  7522  0DD2  0842               	movf	eval_poly@n,w
  7523  0DD3  0443               	iorwf	eval_poly@n+1,w
  7524  0DD4  1903               	btfsc	3,2
  7525  0DD5  2E12               	goto	l2444
  7526  0DD6  30FF               	movlw	255
  7527  0DD7  07C2               	addwf	eval_poly@n,f
  7528  0DD8  30FF               	movlw	255
  7529  0DD9  3DC3               	addwfc	eval_poly@n+1,f
  7530  0DDA  0843               	movf	eval_poly@n+1,w
  7531  0DDB  00A1               	movwf	___wmul@multiplier+1
  7532  0DDC  0842               	movf	eval_poly@n,w
  7533  0DDD  00A0               	movwf	___wmul@multiplier
  7534  0DDE  3003               	movlw	3
  7535  0DDF  00A2               	movwf	___wmul@multiplicand
  7536  0DE0  3000               	movlw	0
  7537  0DE1  00A3               	movwf	___wmul@multiplicand+1
  7538  0DE2  318B  2339  318D   	fcall	___wmul
  7539  0DE5  0020               	movlb	0	; select bank0
  7540  0DE6  0840               	movf	eval_poly@d,w
  7541  0DE7  0720               	addwf	?___wmul,w
  7542  0DE8  0084               	movwf	4
  7543  0DE9  0841               	movf	eval_poly@d+1,w
  7544  0DEA  3D21               	addwfc	?___wmul+1,w
  7545  0DEB  0085               	movwf	5
  7546  0DEC  3F00               	moviw [0]fsr0
  7547  0DED  00B0               	movwf	___ftadd@f1
  7548  0DEE  3F01               	moviw [1]fsr0
  7549  0DEF  00B1               	movwf	___ftadd@f1+1
  7550  0DF0  3F02               	moviw [2]fsr0
  7551  0DF1  00B2               	movwf	___ftadd@f1+2
  7552  0DF2  0844               	movf	eval_poly@res,w
  7553  0DF3  00A0               	movwf	___ftmul@f1
  7554  0DF4  0845               	movf	eval_poly@res+1,w
  7555  0DF5  00A1               	movwf	___ftmul@f1+1
  7556  0DF6  0846               	movf	eval_poly@res+2,w
  7557  0DF7  00A2               	movwf	___ftmul@f1+2
  7558  0DF8  083D               	movf	eval_poly@x,w
  7559  0DF9  00A3               	movwf	___ftmul@f2
  7560  0DFA  083E               	movf	eval_poly@x+1,w
  7561  0DFB  00A4               	movwf	___ftmul@f2+1
  7562  0DFC  083F               	movf	eval_poly@x+2,w
  7563  0DFD  00A5               	movwf	___ftmul@f2+2
  7564  0DFE  3181  216D  318D   	fcall	___ftmul
  7565  0E01  0020               	movlb	0	; select bank0
  7566  0E02  0820               	movf	?___ftmul,w
  7567  0E03  00B3               	movwf	___ftadd@f2
  7568  0E04  0821               	movf	?___ftmul+1,w
  7569  0E05  00B4               	movwf	___ftadd@f2+1
  7570  0E06  0822               	movf	?___ftmul+2,w
  7571  0E07  00B5               	movwf	___ftadd@f2+2
  7572  0E08  3183  23A4  318D   	fcall	___ftadd
  7573  0E0B  0020               	movlb	0	; select bank0
  7574  0E0C  0830               	movf	?___ftadd,w
  7575  0E0D  00C4               	movwf	eval_poly@res
  7576  0E0E  0831               	movf	?___ftadd+1,w
  7577  0E0F  00C5               	movwf	eval_poly@res+1
  7578  0E10  0832               	movf	?___ftadd+2,w
  7579  0E11  2DD1               	goto	L1
  7580  0E12                     l2444:	
  7581  0E12  0844               	movf	eval_poly@res,w
  7582  0E13  00BD               	movwf	?_eval_poly
  7583  0E14  0845               	movf	eval_poly@res+1,w
  7584  0E15  00BE               	movwf	?_eval_poly+1
  7585  0E16  0846               	movf	eval_poly@res+2,w
  7586  0E17  00BF               	movwf	?_eval_poly+2
  7587  0E18  0008               	return
  7588  0E19                     __end_of_eval_poly:	
  7589                           
  7590                           	psect	text11
  7591  0B39                     __ptext11:	
  7592 ;; *************** function ___wmul *****************
  7593 ;; Defined at:
  7594 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7597 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  product         2    4[BANK0 ] unsigned int 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  2    0[BANK0 ] unsigned int 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        6 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_main
  7619 ;;		_eval_poly
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function ___wmul
  7625  0B39                     ___wmul:	
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7629  0B39  0020               	movlb	0	; select bank0
  7630  0B3A  01A4               	clrf	___wmul@product
  7631  0B3B  01A5               	clrf	___wmul@product+1
  7632  0B3C                     l1926:	
  7633  0B3C  1C20               	btfss	___wmul@multiplier,0
  7634  0B3D  2B42               	goto	l416
  7635  0B3E  0822               	movf	___wmul@multiplicand,w
  7636  0B3F  07A4               	addwf	___wmul@product,f
  7637  0B40  0823               	movf	___wmul@multiplicand+1,w
  7638  0B41  3DA5               	addwfc	___wmul@product+1,f
  7639  0B42                     l416:	
  7640  0B42  3001               	movlw	1
  7641  0B43                     u1725:	
  7642  0B43  35A2               	lslf	___wmul@multiplicand,f
  7643  0B44  0DA3               	rlf	___wmul@multiplicand+1,f
  7644  0B45  0B89               	decfsz	9,f
  7645  0B46  2B43               	goto	u1725
  7646  0B47  3001               	movlw	1
  7647  0B48                     u1735:	
  7648  0B48  36A1               	lsrf	___wmul@multiplier+1,f
  7649  0B49  0CA0               	rrf	___wmul@multiplier,f
  7650  0B4A  0B89               	decfsz	9,f
  7651  0B4B  2B48               	goto	u1735
  7652  0B4C  0820               	movf	___wmul@multiplier,w
  7653  0B4D  0421               	iorwf	___wmul@multiplier+1,w
  7654  0B4E  1D03               	btfss	3,2
  7655  0B4F  2B3C               	goto	l1926
  7656  0B50  0825               	movf	___wmul@product+1,w
  7657  0B51  00A1               	movwf	?___wmul+1
  7658  0B52  0824               	movf	___wmul@product,w
  7659  0B53  00A0               	movwf	?___wmul
  7660  0B54  0008               	return
  7661  0B55                     __end_of___wmul:	
  7662                           
  7663                           	psect	text12
  7664  016D                     __ptext12:	
  7665 ;; *************** function ___ftmul *****************
  7666 ;; Defined at:
  7667 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  f1              3    0[BANK0 ] float 
  7670 ;;  f2              3    3[BANK0 ] float 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7673 ;;  sign            1   15[BANK0 ] unsigned char 
  7674 ;;  cntr            1   14[BANK0 ] unsigned char 
  7675 ;;  exp             1   10[BANK0 ] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  3    0[BANK0 ] float 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0, pclath, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;Total ram usage:       16 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    1
  7692 ;; This function calls:
  7693 ;;		___ftpack
  7694 ;; This function is called by:
  7695 ;;		_log
  7696 ;;		_eval_poly
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function ___ftmul
  7702  016D                     ___ftmul:	
  7703                           
  7704                           ;incstack = 0
  7705                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7706  016D  0020               	movlb	0	; select bank0
  7707  016E  0820               	movf	___ftmul@f1,w
  7708  016F  00A6               	movwf	??___ftmul
  7709  0170  0821               	movf	___ftmul@f1+1,w
  7710  0171  00A7               	movwf	??___ftmul+1
  7711  0172  0822               	movf	___ftmul@f1+2,w
  7712  0173  00A8               	movwf	??___ftmul+2
  7713  0174  1003               	clrc
  7714  0175  0D27               	rlf	??___ftmul+1,w
  7715  0176  0D28               	rlf	??___ftmul+2,w
  7716  0177  00A9               	movwf	??___ftmul+3
  7717  0178  0829               	movf	??___ftmul+3,w
  7718  0179  00AA               	movwf	___ftmul@exp
  7719  017A  082A               	movf	___ftmul@exp,w
  7720  017B  1D03               	btfss	3,2
  7721  017C  2984               	goto	l2096
  7722  017D  3000               	movlw	0
  7723  017E  00A0               	movwf	?___ftmul
  7724  017F  3000               	movlw	0
  7725  0180  00A1               	movwf	?___ftmul+1
  7726  0181  3000               	movlw	0
  7727  0182  00A2               	movwf	?___ftmul+2
  7728  0183  0008               	return
  7729  0184                     l2096:	
  7730  0184  0823               	movf	___ftmul@f2,w
  7731  0185  00A6               	movwf	??___ftmul
  7732  0186  0824               	movf	___ftmul@f2+1,w
  7733  0187  00A7               	movwf	??___ftmul+1
  7734  0188  0825               	movf	___ftmul@f2+2,w
  7735  0189  00A8               	movwf	??___ftmul+2
  7736  018A  1003               	clrc
  7737  018B  0D27               	rlf	??___ftmul+1,w
  7738  018C  0D28               	rlf	??___ftmul+2,w
  7739  018D  00A9               	movwf	??___ftmul+3
  7740  018E  0829               	movf	??___ftmul+3,w
  7741  018F  00AF               	movwf	___ftmul@sign
  7742  0190  082F               	movf	___ftmul@sign,w
  7743  0191  1D03               	btfss	3,2
  7744  0192  299A               	goto	l2102
  7745  0193  3000               	movlw	0
  7746  0194  00A0               	movwf	?___ftmul
  7747  0195  3000               	movlw	0
  7748  0196  00A1               	movwf	?___ftmul+1
  7749  0197  3000               	movlw	0
  7750  0198  00A2               	movwf	?___ftmul+2
  7751  0199  0008               	return
  7752  019A                     l2102:	
  7753  019A  082F               	movf	___ftmul@sign,w
  7754  019B  3E7B               	addlw	123
  7755  019C  00A6               	movwf	??___ftmul
  7756  019D  0826               	movf	??___ftmul,w
  7757  019E  07AA               	addwf	___ftmul@exp,f
  7758  019F  0820               	movf	___ftmul@f1,w
  7759  01A0  00A6               	movwf	??___ftmul
  7760  01A1  0821               	movf	___ftmul@f1+1,w
  7761  01A2  00A7               	movwf	??___ftmul+1
  7762  01A3  0822               	movf	___ftmul@f1+2,w
  7763  01A4  00A8               	movwf	??___ftmul+2
  7764  01A5  3010               	movlw	16
  7765  01A6                     u2195:	
  7766  01A6  36A8               	lsrf	??___ftmul+2,f
  7767  01A7  0CA7               	rrf	??___ftmul+1,f
  7768  01A8  0CA6               	rrf	??___ftmul,f
  7769  01A9  0B89               	decfsz	9,f
  7770  01AA  29A6               	goto	u2195
  7771  01AB  0826               	movf	??___ftmul,w
  7772  01AC  00A9               	movwf	??___ftmul+3
  7773  01AD  0829               	movf	??___ftmul+3,w
  7774  01AE  00AF               	movwf	___ftmul@sign
  7775  01AF  0823               	movf	___ftmul@f2,w
  7776  01B0  00A6               	movwf	??___ftmul
  7777  01B1  0824               	movf	___ftmul@f2+1,w
  7778  01B2  00A7               	movwf	??___ftmul+1
  7779  01B3  0825               	movf	___ftmul@f2+2,w
  7780  01B4  00A8               	movwf	??___ftmul+2
  7781  01B5  3010               	movlw	16
  7782  01B6                     u2205:	
  7783  01B6  36A8               	lsrf	??___ftmul+2,f
  7784  01B7  0CA7               	rrf	??___ftmul+1,f
  7785  01B8  0CA6               	rrf	??___ftmul,f
  7786  01B9  0B89               	decfsz	9,f
  7787  01BA  29B6               	goto	u2205
  7788  01BB  0826               	movf	??___ftmul,w
  7789  01BC  00A9               	movwf	??___ftmul+3
  7790  01BD  0829               	movf	??___ftmul+3,w
  7791  01BE  06AF               	xorwf	___ftmul@sign,f
  7792  01BF  3080               	movlw	128
  7793  01C0  00A6               	movwf	??___ftmul
  7794  01C1  0826               	movf	??___ftmul,w
  7795  01C2  05AF               	andwf	___ftmul@sign,f
  7796  01C3  17A1               	bsf	___ftmul@f1+1,7
  7797  01C4  17A4               	bsf	___ftmul@f2+1,7
  7798  01C5  30FF               	movlw	255
  7799  01C6  05A3               	andwf	___ftmul@f2,f
  7800  01C7  30FF               	movlw	255
  7801  01C8  05A4               	andwf	___ftmul@f2+1,f
  7802  01C9  3000               	movlw	0
  7803  01CA  05A5               	andwf	___ftmul@f2+2,f
  7804  01CB  3000               	movlw	0
  7805  01CC  00AB               	movwf	___ftmul@f3_as_product
  7806  01CD  3000               	movlw	0
  7807  01CE  00AC               	movwf	___ftmul@f3_as_product+1
  7808  01CF  3000               	movlw	0
  7809  01D0  00AD               	movwf	___ftmul@f3_as_product+2
  7810  01D1  3007               	movlw	7
  7811  01D2  00A6               	movwf	??___ftmul
  7812  01D3  0826               	movf	??___ftmul,w
  7813  01D4  00AE               	movwf	___ftmul@cntr
  7814  01D5                     l2114:	
  7815  01D5  1C20               	btfss	___ftmul@f1,0
  7816  01D6  29DD               	goto	l2118
  7817  01D7  0823               	movf	___ftmul@f2,w
  7818  01D8  07AB               	addwf	___ftmul@f3_as_product,f
  7819  01D9  0824               	movf	___ftmul@f2+1,w
  7820  01DA  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7821  01DB  0825               	movf	___ftmul@f2+2,w
  7822  01DC  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7823  01DD                     l2118:	
  7824  01DD  3001               	movlw	1
  7825  01DE                     u2225:	
  7826  01DE  36A2               	lsrf	___ftmul@f1+2,f
  7827  01DF  0CA1               	rrf	___ftmul@f1+1,f
  7828  01E0  0CA0               	rrf	___ftmul@f1,f
  7829  01E1  0B89               	decfsz	9,f
  7830  01E2  29DE               	goto	u2225
  7831  01E3  3001               	movlw	1
  7832  01E4                     u2235:	
  7833  01E4  35A3               	lslf	___ftmul@f2,f
  7834  01E5  0DA4               	rlf	___ftmul@f2+1,f
  7835  01E6  0DA5               	rlf	___ftmul@f2+2,f
  7836  01E7  0B89               	decfsz	9,f
  7837  01E8  29E4               	goto	u2235
  7838  01E9  3001               	movlw	1
  7839  01EA  02AE               	subwf	___ftmul@cntr,f
  7840  01EB  1D03               	btfss	3,2
  7841  01EC  29D5               	goto	l2114
  7842  01ED  3009               	movlw	9
  7843  01EE  00A6               	movwf	??___ftmul
  7844  01EF  0826               	movf	??___ftmul,w
  7845  01F0  00AE               	movwf	___ftmul@cntr
  7846  01F1                     l2126:	
  7847  01F1  1C20               	btfss	___ftmul@f1,0
  7848  01F2  29F9               	goto	l2130
  7849  01F3  0823               	movf	___ftmul@f2,w
  7850  01F4  07AB               	addwf	___ftmul@f3_as_product,f
  7851  01F5  0824               	movf	___ftmul@f2+1,w
  7852  01F6  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7853  01F7  0825               	movf	___ftmul@f2+2,w
  7854  01F8  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7855  01F9                     l2130:	
  7856  01F9  3001               	movlw	1
  7857  01FA                     u2265:	
  7858  01FA  36A2               	lsrf	___ftmul@f1+2,f
  7859  01FB  0CA1               	rrf	___ftmul@f1+1,f
  7860  01FC  0CA0               	rrf	___ftmul@f1,f
  7861  01FD  0B89               	decfsz	9,f
  7862  01FE  29FA               	goto	u2265
  7863  01FF  3001               	movlw	1
  7864  0200                     u2275:	
  7865  0200  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7866  0201  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7867  0202  0CAB               	rrf	___ftmul@f3_as_product,f
  7868  0203  0B89               	decfsz	9,f
  7869  0204  2A00               	goto	u2275
  7870  0205  3001               	movlw	1
  7871  0206  02AE               	subwf	___ftmul@cntr,f
  7872  0207  1D03               	btfss	3,2
  7873  0208  29F1               	goto	l2126
  7874  0209  082B               	movf	___ftmul@f3_as_product,w
  7875  020A  00F0               	movwf	___ftpack@arg
  7876  020B  082C               	movf	___ftmul@f3_as_product+1,w
  7877  020C  00F1               	movwf	___ftpack@arg+1
  7878  020D  082D               	movf	___ftmul@f3_as_product+2,w
  7879  020E  00F2               	movwf	___ftpack@arg+2
  7880  020F  082A               	movf	___ftmul@exp,w
  7881  0210  00A6               	movwf	??___ftmul
  7882  0211  0826               	movf	??___ftmul,w
  7883  0212  00F3               	movwf	___ftpack@exp
  7884  0213  082F               	movf	___ftmul@sign,w
  7885  0214  00A7               	movwf	??___ftmul+1
  7886  0215  0827               	movf	??___ftmul+1,w
  7887  0216  00F4               	movwf	___ftpack@sign
  7888  0217  318E  2619         	fcall	___ftpack
  7889  0219  0870               	movf	?___ftpack,w
  7890  021A  0020               	movlb	0	; select bank0
  7891  021B  00A0               	movwf	?___ftmul
  7892  021C  0871               	movf	?___ftpack+1,w
  7893  021D  00A1               	movwf	?___ftmul+1
  7894  021E  0872               	movf	?___ftpack+2,w
  7895  021F  00A2               	movwf	?___ftmul+2
  7896  0220  0008               	return
  7897  0221                     __end_of___ftmul:	
  7898                           
  7899                           	psect	text13
  7900  0CA8                     __ptext13:	
  7901 ;; *************** function ___ftge *****************
  7902 ;; Defined at:
  7903 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  ff1             3   29[BANK0 ] float 
  7906 ;;  ff2             3   32[BANK0 ] float 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;		None               void
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        9 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;;		_log
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function ___ftge
  7934  0CA8                     ___ftge:	
  7935                           
  7936                           ;incstack = 0
  7937                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7938  0CA8  0020               	movlb	0	; select bank0
  7939  0CA9  1FBF               	btfss	___ftge@ff1+2,7
  7940  0CAA  2CBF               	goto	l2402
  7941  0CAB  093D               	comf	___ftge@ff1,w
  7942  0CAC  00C3               	movwf	??___ftge
  7943  0CAD  093E               	comf	___ftge@ff1+1,w
  7944  0CAE  00C4               	movwf	??___ftge+1
  7945  0CAF  093F               	comf	___ftge@ff1+2,w
  7946  0CB0  00C5               	movwf	??___ftge+2
  7947  0CB1  0AC3               	incf	??___ftge,f
  7948  0CB2  1903               	skipnz
  7949  0CB3  0AC4               	incf	??___ftge+1,f
  7950  0CB4  1903               	skipnz
  7951  0CB5  0AC5               	incf	??___ftge+2,f
  7952  0CB6  3000               	movlw	0
  7953  0CB7  0743               	addwf	??___ftge,w
  7954  0CB8  00BD               	movwf	___ftge@ff1
  7955  0CB9  3000               	movlw	0
  7956  0CBA  3D44               	addwfc	??___ftge+1,w
  7957  0CBB  00BE               	movwf	___ftge@ff1+1
  7958  0CBC  3080               	movlw	128
  7959  0CBD  3D45               	addwfc	??___ftge+2,w
  7960  0CBE  00BF               	movwf	___ftge@ff1+2
  7961  0CBF                     l2402:	
  7962  0CBF  1FC2               	btfss	___ftge@ff2+2,7
  7963  0CC0  2CD5               	goto	l2406
  7964  0CC1  0940               	comf	___ftge@ff2,w
  7965  0CC2  00C3               	movwf	??___ftge
  7966  0CC3  0941               	comf	___ftge@ff2+1,w
  7967  0CC4  00C4               	movwf	??___ftge+1
  7968  0CC5  0942               	comf	___ftge@ff2+2,w
  7969  0CC6  00C5               	movwf	??___ftge+2
  7970  0CC7  0AC3               	incf	??___ftge,f
  7971  0CC8  1903               	skipnz
  7972  0CC9  0AC4               	incf	??___ftge+1,f
  7973  0CCA  1903               	skipnz
  7974  0CCB  0AC5               	incf	??___ftge+2,f
  7975  0CCC  3000               	movlw	0
  7976  0CCD  0743               	addwf	??___ftge,w
  7977  0CCE  00C0               	movwf	___ftge@ff2
  7978  0CCF  3000               	movlw	0
  7979  0CD0  3D44               	addwfc	??___ftge+1,w
  7980  0CD1  00C1               	movwf	___ftge@ff2+1
  7981  0CD2  3080               	movlw	128
  7982  0CD3  3D45               	addwfc	??___ftge+2,w
  7983  0CD4  00C2               	movwf	___ftge@ff2+2
  7984  0CD5                     l2406:	
  7985  0CD5  3080               	movlw	128
  7986  0CD6  06BF               	xorwf	___ftge@ff1+2,f
  7987  0CD7  3080               	movlw	128
  7988  0CD8  06C2               	xorwf	___ftge@ff2+2,f
  7989  0CD9  0842               	movf	___ftge@ff2+2,w
  7990  0CDA  023F               	subwf	___ftge@ff1+2,w
  7991  0CDB  1D03               	skipz
  7992  0CDC  0008               	return
  7993  0CDD  0841               	movf	___ftge@ff2+1,w
  7994  0CDE  023E               	subwf	___ftge@ff1+1,w
  7995  0CDF  1D03               	skipz
  7996  0CE0  0008               	return
  7997  0CE1  0840               	movf	___ftge@ff2,w
  7998  0CE2  023D               	subwf	___ftge@ff1,w
  7999  0CE3  0008               	return
  8000  0CE4                     __end_of___ftge:	
  8001                           
  8002                           	psect	text14
  8003  0B73                     __ptext14:	
  8004 ;; *************** function ___awtoft *****************
  8005 ;; Defined at:
  8006 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  c               2    8[COMMON] int 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  sign            1   13[COMMON] unsigned char 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  3    8[COMMON] float 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0, pclath, cstack
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;Total ram usage:        6 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    1
  8027 ;; This function calls:
  8028 ;;		___ftpack
  8029 ;; This function is called by:
  8030 ;;		_log
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           
  8035                           ;psect for function ___awtoft
  8036  0B73                     ___awtoft:	
  8037                           
  8038                           ;incstack = 0
  8039                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8040  0B73  01FD               	clrf	___awtoft@sign
  8041  0B74  1FF9               	btfss	___awtoft@c+1,7
  8042  0B75  2B7D               	goto	l2394
  8043  0B76  09F8               	comf	___awtoft@c,f
  8044  0B77  09F9               	comf	___awtoft@c+1,f
  8045  0B78  0AF8               	incf	___awtoft@c,f
  8046  0B79  1903               	skipnz
  8047  0B7A  0AF9               	incf	___awtoft@c+1,f
  8048  0B7B  01FD               	clrf	___awtoft@sign
  8049  0B7C  0AFD               	incf	___awtoft@sign,f
  8050  0B7D                     l2394:	
  8051  0B7D  0878               	movf	___awtoft@c,w
  8052  0B7E  00F0               	movwf	___ftpack@arg
  8053  0B7F  0879               	movf	___awtoft@c+1,w
  8054  0B80  00F1               	movwf	___ftpack@arg+1
  8055  0B81  01F2               	clrf	___ftpack@arg+2
  8056  0B82  308E               	movlw	142
  8057  0B83  00FB               	movwf	??___awtoft
  8058  0B84  087B               	movf	??___awtoft,w
  8059  0B85  00F3               	movwf	___ftpack@exp
  8060  0B86  087D               	movf	___awtoft@sign,w
  8061  0B87  00FC               	movwf	??___awtoft+1
  8062  0B88  087C               	movf	??___awtoft+1,w
  8063  0B89  00F4               	movwf	___ftpack@sign
  8064  0B8A  318E  2619         	fcall	___ftpack
  8065  0B8C  0870               	movf	?___ftpack,w
  8066  0B8D  00F8               	movwf	?___awtoft
  8067  0B8E  0871               	movf	?___ftpack+1,w
  8068  0B8F  00F9               	movwf	?___awtoft+1
  8069  0B90  0872               	movf	?___ftpack+2,w
  8070  0B91  00FA               	movwf	?___awtoft+2
  8071  0B92  0008               	return
  8072  0B93                     __end_of___awtoft:	
  8073                           
  8074                           	psect	text15
  8075  0004                     __ptext15:	
  8076 ;; *************** function ___lwtoft *****************
  8077 ;; Defined at:
  8078 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  c               2    8[COMMON] unsigned int 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  3    8[COMMON] float 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0, pclath, cstack
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;Total ram usage:        4 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    1
  8099 ;; This function calls:
  8100 ;;		___ftpack
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           
  8107                           ;psect for function ___lwtoft
  8108  0004                     ___lwtoft:	
  8109                           
  8110                           ;incstack = 0
  8111                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8112  0004  0878               	movf	___lwtoft@c,w
  8113  0005  00F0               	movwf	___ftpack@arg
  8114  0006  0879               	movf	___lwtoft@c+1,w
  8115  0007  00F1               	movwf	___ftpack@arg+1
  8116  0008  01F2               	clrf	___ftpack@arg+2
  8117  0009  308E               	movlw	142
  8118  000A  00FB               	movwf	??___lwtoft
  8119  000B  087B               	movf	??___lwtoft,w
  8120  000C  00F3               	movwf	___ftpack@exp
  8121  000D  01F4               	clrf	___ftpack@sign
  8122  000E  318E  2619         	fcall	___ftpack
  8123  0010  0870               	movf	?___ftpack,w
  8124  0011  00F8               	movwf	?___lwtoft
  8125  0012  0871               	movf	?___ftpack+1,w
  8126  0013  00F9               	movwf	?___lwtoft+1
  8127  0014  0872               	movf	?___ftpack+2,w
  8128  0015  00FA               	movwf	?___lwtoft+2
  8129  0016  0008               	return
  8130  0017                     __end_of___lwtoft:	
  8131                           
  8132                           	psect	text16
  8133  0B05                     __ptext16:	
  8134 ;; *************** function ___lbtoft *****************
  8135 ;; Defined at:
  8136 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  c               1    wreg     unsigned char 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  c               1   11[COMMON] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  3    8[COMMON] float 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, pclath, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8150 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;Total ram usage:        8 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    1
  8157 ;; This function calls:
  8158 ;;		___ftpack
  8159 ;; This function is called by:
  8160 ;;		_main
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           
  8165                           ;psect for function ___lbtoft
  8166  0B05                     ___lbtoft:	
  8167                           
  8168                           ;incstack = 0
  8169                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8170                           ;___lbtoft@c stored from wreg
  8171  0B05  00FB               	movwf	___lbtoft@c
  8172  0B06  087B               	movf	___lbtoft@c,w
  8173  0B07  0020               	movlb	0	; select bank0
  8174  0B08  00A0               	movwf	??___lbtoft
  8175  0B09  01A1               	clrf	??___lbtoft+1
  8176  0B0A  01A2               	clrf	??___lbtoft+2
  8177  0B0B  0820               	movf	??___lbtoft,w
  8178  0B0C  00F0               	movwf	___ftpack@arg
  8179  0B0D  0821               	movf	??___lbtoft+1,w
  8180  0B0E  00F1               	movwf	___ftpack@arg+1
  8181  0B0F  0822               	movf	??___lbtoft+2,w
  8182  0B10  00F2               	movwf	___ftpack@arg+2
  8183  0B11  308E               	movlw	142
  8184  0B12  00A3               	movwf	??___lbtoft+3
  8185  0B13  0823               	movf	??___lbtoft+3,w
  8186  0B14  00F3               	movwf	___ftpack@exp
  8187  0B15  01F4               	clrf	___ftpack@sign
  8188  0B16  318E  2619         	fcall	___ftpack
  8189  0B18  0870               	movf	?___ftpack,w
  8190  0B19  00F8               	movwf	?___lbtoft
  8191  0B1A  0871               	movf	?___ftpack+1,w
  8192  0B1B  00F9               	movwf	?___lbtoft+1
  8193  0B1C  0872               	movf	?___ftpack+2,w
  8194  0B1D  00FA               	movwf	?___lbtoft+2
  8195  0B1E  0008               	return
  8196  0B1F                     __end_of___lbtoft:	
  8197                           
  8198                           	psect	text17
  8199  0F7A                     __ptext17:	
  8200 ;; *************** function ___fttol *****************
  8201 ;; Defined at:
  8202 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  f1              3    0[COMMON] float 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  lval            4    9[COMMON] unsigned long 
  8207 ;;  exp1            1   13[COMMON] unsigned char 
  8208 ;;  sign1           1    8[COMMON] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  4    0[COMMON] long 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;Total ram usage:       14 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_main
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           
  8232                           ;psect for function ___fttol
  8233  0F7A                     ___fttol:	
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8237  0F7A  0870               	movf	___fttol@f1,w
  8238  0F7B  00F4               	movwf	??___fttol
  8239  0F7C  0871               	movf	___fttol@f1+1,w
  8240  0F7D  00F5               	movwf	??___fttol+1
  8241  0F7E  0872               	movf	___fttol@f1+2,w
  8242  0F7F  00F6               	movwf	??___fttol+2
  8243  0F80  1003               	clrc
  8244  0F81  0D75               	rlf	??___fttol+1,w
  8245  0F82  0D76               	rlf	??___fttol+2,w
  8246  0F83  00F7               	movwf	??___fttol+3
  8247  0F84  0877               	movf	??___fttol+3,w
  8248  0F85  00FD               	movwf	___fttol@exp1
  8249  0F86  087D               	movf	___fttol@exp1,w
  8250  0F87  1D03               	btfss	3,2
  8251  0F88  2F92               	goto	l2678
  8252  0F89  3000               	movlw	0
  8253  0F8A  00F3               	movwf	?___fttol+3
  8254  0F8B  3000               	movlw	0
  8255  0F8C  00F2               	movwf	?___fttol+2
  8256  0F8D  3000               	movlw	0
  8257  0F8E  00F1               	movwf	?___fttol+1
  8258  0F8F  3000               	movlw	0
  8259  0F90  00F0               	movwf	?___fttol
  8260  0F91  0008               	return
  8261  0F92                     l2678:	
  8262  0F92  0870               	movf	___fttol@f1,w
  8263  0F93  00F4               	movwf	??___fttol
  8264  0F94  0871               	movf	___fttol@f1+1,w
  8265  0F95  00F5               	movwf	??___fttol+1
  8266  0F96  0872               	movf	___fttol@f1+2,w
  8267  0F97  00F6               	movwf	??___fttol+2
  8268  0F98  3017               	movlw	23
  8269  0F99                     u2875:	
  8270  0F99  36F6               	lsrf	??___fttol+2,f
  8271  0F9A  0CF5               	rrf	??___fttol+1,f
  8272  0F9B  0CF4               	rrf	??___fttol,f
  8273  0F9C  0B89               	decfsz	9,f
  8274  0F9D  2F99               	goto	u2875
  8275  0F9E  0874               	movf	??___fttol,w
  8276  0F9F  00F7               	movwf	??___fttol+3
  8277  0FA0  0877               	movf	??___fttol+3,w
  8278  0FA1  00F8               	movwf	___fttol@sign1
  8279  0FA2  17F1               	bsf	___fttol@f1+1,7
  8280  0FA3  30FF               	movlw	255
  8281  0FA4  05F0               	andwf	___fttol@f1,f
  8282  0FA5  30FF               	movlw	255
  8283  0FA6  05F1               	andwf	___fttol@f1+1,f
  8284  0FA7  3000               	movlw	0
  8285  0FA8  05F2               	andwf	___fttol@f1+2,f
  8286  0FA9  0870               	movf	___fttol@f1,w
  8287  0FAA  00F9               	movwf	___fttol@lval
  8288  0FAB  0871               	movf	___fttol@f1+1,w
  8289  0FAC  00FA               	movwf	___fttol@lval+1
  8290  0FAD  0872               	movf	___fttol@f1+2,w
  8291  0FAE  00FB               	movwf	___fttol@lval+2
  8292  0FAF  01FC               	clrf	___fttol@lval+3
  8293  0FB0  308E               	movlw	142
  8294  0FB1  02FD               	subwf	___fttol@exp1,f
  8295  0FB2  1FFD               	btfss	___fttol@exp1,7
  8296  0FB3  2FD0               	goto	l2698
  8297  0FB4  087D               	movf	___fttol@exp1,w
  8298  0FB5  3A80               	xorlw	128
  8299  0FB6  3E8F               	addlw	143
  8300  0FB7  1803               	skipnc
  8301  0FB8  2FC2               	goto	l2696
  8302  0FB9  3000               	movlw	0
  8303  0FBA  00F3               	movwf	?___fttol+3
  8304  0FBB  3000               	movlw	0
  8305  0FBC  00F2               	movwf	?___fttol+2
  8306  0FBD  3000               	movlw	0
  8307  0FBE  00F1               	movwf	?___fttol+1
  8308  0FBF  3000               	movlw	0
  8309  0FC0  00F0               	movwf	?___fttol
  8310  0FC1  0008               	return
  8311  0FC2                     l2696:	
  8312  0FC2  3001               	movlw	1
  8313  0FC3                     u2905:	
  8314  0FC3  36FC               	lsrf	___fttol@lval+3,f
  8315  0FC4  0CFB               	rrf	___fttol@lval+2,f
  8316  0FC5  0CFA               	rrf	___fttol@lval+1,f
  8317  0FC6  0CF9               	rrf	___fttol@lval,f
  8318  0FC7  0B89               	decfsz	9,f
  8319  0FC8  2FC3               	goto	u2905
  8320  0FC9  3001               	movlw	1
  8321  0FCA  00F4               	movwf	??___fttol
  8322  0FCB  0874               	movf	??___fttol,w
  8323  0FCC  07FD               	addwf	___fttol@exp1,f
  8324  0FCD  1903               	btfsc	3,2
  8325  0FCE  2FE9               	goto	l2706
  8326  0FCF  2FC2               	goto	l2696
  8327  0FD0                     l2698:	
  8328  0FD0  3018               	movlw	24
  8329  0FD1  027D               	subwf	___fttol@exp1,w
  8330  0FD2  1C03               	skipc
  8331  0FD3  2FE6               	goto	l668
  8332  0FD4  3000               	movlw	0
  8333  0FD5  00F3               	movwf	?___fttol+3
  8334  0FD6  3000               	movlw	0
  8335  0FD7  00F2               	movwf	?___fttol+2
  8336  0FD8  3000               	movlw	0
  8337  0FD9  00F1               	movwf	?___fttol+1
  8338  0FDA  3000               	movlw	0
  8339  0FDB  00F0               	movwf	?___fttol
  8340  0FDC  0008               	return
  8341  0FDD                     l2704:	
  8342  0FDD  3001               	movlw	1
  8343  0FDE                     u2935:	
  8344  0FDE  35F9               	lslf	___fttol@lval,f
  8345  0FDF  0DFA               	rlf	___fttol@lval+1,f
  8346  0FE0  0DFB               	rlf	___fttol@lval+2,f
  8347  0FE1  0DFC               	rlf	___fttol@lval+3,f
  8348  0FE2  0B89               	decfsz	9,f
  8349  0FE3  2FDE               	goto	u2935
  8350  0FE4  3001               	movlw	1
  8351  0FE5  02FD               	subwf	___fttol@exp1,f
  8352  0FE6                     l668:	
  8353  0FE6  087D               	movf	___fttol@exp1,w
  8354  0FE7  1D03               	btfss	3,2
  8355  0FE8  2FDD               	goto	l2704
  8356  0FE9                     l2706:	
  8357  0FE9  0878               	movf	___fttol@sign1,w
  8358  0FEA  1903               	btfsc	3,2
  8359  0FEB  2FF7               	goto	l2710
  8360  0FEC  09F9               	comf	___fttol@lval,f
  8361  0FED  09FA               	comf	___fttol@lval+1,f
  8362  0FEE  09FB               	comf	___fttol@lval+2,f
  8363  0FEF  09FC               	comf	___fttol@lval+3,f
  8364  0FF0  0AF9               	incf	___fttol@lval,f
  8365  0FF1  1903               	skipnz
  8366  0FF2  0AFA               	incf	___fttol@lval+1,f
  8367  0FF3  1903               	skipnz
  8368  0FF4  0AFB               	incf	___fttol@lval+2,f
  8369  0FF5  1903               	skipnz
  8370  0FF6  0AFC               	incf	___fttol@lval+3,f
  8371  0FF7                     l2710:	
  8372  0FF7  087C               	movf	___fttol@lval+3,w
  8373  0FF8  00F3               	movwf	?___fttol+3
  8374  0FF9  087B               	movf	___fttol@lval+2,w
  8375  0FFA  00F2               	movwf	?___fttol+2
  8376  0FFB  087A               	movf	___fttol@lval+1,w
  8377  0FFC  00F1               	movwf	?___fttol+1
  8378  0FFD  0879               	movf	___fttol@lval,w
  8379  0FFE  00F0               	movwf	?___fttol
  8380  0FFF  0008               	return
  8381  1000                     __end_of___fttol:	
  8382                           
  8383                           	psect	text18
  8384  0B55                     __ptext18:	
  8385 ;; *************** function ___ftsub *****************
  8386 ;; Defined at:
  8387 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  f2              3   29[BANK0 ] float 
  8390 ;;  f1              3   32[BANK0 ] float 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  3   29[BANK0 ] float 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, pclath, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;Total ram usage:        6 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    2
  8409 ;; This function calls:
  8410 ;;		___ftadd
  8411 ;; This function is called by:
  8412 ;;		_main
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___ftsub
  8418  0B55                     ___ftsub:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8422  0B55  0020               	movlb	0	; select bank0
  8423  0B56  083F               	movf	___ftsub@f2+2,w
  8424  0B57  043E               	iorwf	___ftsub@f2+1,w
  8425  0B58  043D               	iorwf	___ftsub@f2,w
  8426  0B59  1903               	skipnz
  8427  0B5A  2B5D               	goto	l2668
  8428  0B5B  3080               	movlw	128
  8429  0B5C  06BF               	xorwf	___ftsub@f2+2,f
  8430  0B5D                     l2668:	
  8431  0B5D  0840               	movf	___ftsub@f1,w
  8432  0B5E  00B0               	movwf	___ftadd@f1
  8433  0B5F  0841               	movf	___ftsub@f1+1,w
  8434  0B60  00B1               	movwf	___ftadd@f1+1
  8435  0B61  0842               	movf	___ftsub@f1+2,w
  8436  0B62  00B2               	movwf	___ftadd@f1+2
  8437  0B63  083D               	movf	___ftsub@f2,w
  8438  0B64  00B3               	movwf	___ftadd@f2
  8439  0B65  083E               	movf	___ftsub@f2+1,w
  8440  0B66  00B4               	movwf	___ftadd@f2+1
  8441  0B67  083F               	movf	___ftsub@f2+2,w
  8442  0B68  00B5               	movwf	___ftadd@f2+2
  8443  0B69  3183  23A4         	fcall	___ftadd
  8444  0B6B  0020               	movlb	0	; select bank0
  8445  0B6C  0830               	movf	?___ftadd,w
  8446  0B6D  00BD               	movwf	?___ftsub
  8447  0B6E  0831               	movf	?___ftadd+1,w
  8448  0B6F  00BE               	movwf	?___ftsub+1
  8449  0B70  0832               	movf	?___ftadd+2,w
  8450  0B71  00BF               	movwf	?___ftsub+2
  8451  0B72  0008               	return
  8452  0B73                     __end_of___ftsub:	
  8453                           
  8454                           	psect	text19
  8455  03A4                     __ptext19:	
  8456 ;; *************** function ___ftadd *****************
  8457 ;; Defined at:
  8458 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  f1              3   16[BANK0 ] float 
  8461 ;;  f2              3   19[BANK0 ] float 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  exp1            1   28[BANK0 ] unsigned char 
  8464 ;;  exp2            1   27[BANK0 ] unsigned char 
  8465 ;;  sign            1   26[BANK0 ] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  3   16[BANK0 ] float 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0, pclath, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8475 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;Total ram usage:       13 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    1
  8482 ;; This function calls:
  8483 ;;		___ftpack
  8484 ;; This function is called by:
  8485 ;;		_main
  8486 ;;		___ftsub
  8487 ;;		_log
  8488 ;;		_eval_poly
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           
  8493                           ;psect for function ___ftadd
  8494  03A4                     ___ftadd:	
  8495                           
  8496                           ;incstack = 0
  8497                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8498  03A4  0020               	movlb	0	; select bank0
  8499  03A5  0830               	movf	___ftadd@f1,w
  8500  03A6  00B6               	movwf	??___ftadd
  8501  03A7  0831               	movf	___ftadd@f1+1,w
  8502  03A8  00B7               	movwf	??___ftadd+1
  8503  03A9  0832               	movf	___ftadd@f1+2,w
  8504  03AA  00B8               	movwf	??___ftadd+2
  8505  03AB  1003               	clrc
  8506  03AC  0D37               	rlf	??___ftadd+1,w
  8507  03AD  0D38               	rlf	??___ftadd+2,w
  8508  03AE  00B9               	movwf	??___ftadd+3
  8509  03AF  0839               	movf	??___ftadd+3,w
  8510  03B0  00BC               	movwf	___ftadd@exp1
  8511  03B1  0833               	movf	___ftadd@f2,w
  8512  03B2  00B6               	movwf	??___ftadd
  8513  03B3  0834               	movf	___ftadd@f2+1,w
  8514  03B4  00B7               	movwf	??___ftadd+1
  8515  03B5  0835               	movf	___ftadd@f2+2,w
  8516  03B6  00B8               	movwf	??___ftadd+2
  8517  03B7  1003               	clrc
  8518  03B8  0D37               	rlf	??___ftadd+1,w
  8519  03B9  0D38               	rlf	??___ftadd+2,w
  8520  03BA  00B9               	movwf	??___ftadd+3
  8521  03BB  0839               	movf	??___ftadd+3,w
  8522  03BC  00BB               	movwf	___ftadd@exp2
  8523  03BD  083C               	movf	___ftadd@exp1,w
  8524  03BE  1903               	btfsc	3,2
  8525  03BF  2BCC               	goto	l2026
  8526  03C0  083B               	movf	___ftadd@exp2,w
  8527  03C1  023C               	subwf	___ftadd@exp1,w
  8528  03C2  1803               	skipnc
  8529  03C3  2BD3               	goto	l2030
  8530  03C4  033C               	decf	___ftadd@exp1,w
  8531  03C5  3AFF               	xorlw	255
  8532  03C6  073B               	addwf	___ftadd@exp2,w
  8533  03C7  00B6               	movwf	??___ftadd
  8534  03C8  3019               	movlw	25
  8535  03C9  0236               	subwf	??___ftadd,w
  8536  03CA  1C03               	skipc
  8537  03CB  2BD3               	goto	l2030
  8538  03CC                     l2026:	
  8539  03CC  0833               	movf	___ftadd@f2,w
  8540  03CD  00B0               	movwf	?___ftadd
  8541  03CE  0834               	movf	___ftadd@f2+1,w
  8542  03CF  00B1               	movwf	?___ftadd+1
  8543  03D0  0835               	movf	___ftadd@f2+2,w
  8544  03D1  00B2               	movwf	?___ftadd+2
  8545  03D2  0008               	return
  8546  03D3                     l2030:	
  8547  03D3  083B               	movf	___ftadd@exp2,w
  8548  03D4  1903               	btfsc	3,2
  8549  03D5  0008               	return
  8550  03D6  083C               	movf	___ftadd@exp1,w
  8551  03D7  023B               	subwf	___ftadd@exp2,w
  8552  03D8  1803               	skipnc
  8553  03D9  2BE2               	goto	l2036
  8554  03DA  033B               	decf	___ftadd@exp2,w
  8555  03DB  3AFF               	xorlw	255
  8556  03DC  073C               	addwf	___ftadd@exp1,w
  8557  03DD  00B6               	movwf	??___ftadd
  8558  03DE  3019               	movlw	25
  8559  03DF  0236               	subwf	??___ftadd,w
  8560  03E0  1803               	btfsc	3,0
  8561  03E1  0008               	return
  8562  03E2                     l2036:	
  8563  03E2  3006               	movlw	6
  8564  03E3  00B6               	movwf	??___ftadd
  8565  03E4  0836               	movf	??___ftadd,w
  8566  03E5  00BA               	movwf	___ftadd@sign
  8567  03E6  1BB2               	btfsc	___ftadd@f1+2,7
  8568  03E7  17BA               	bsf	___ftadd@sign,7
  8569  03E8  1BB5               	btfsc	___ftadd@f2+2,7
  8570  03E9  173A               	bsf	___ftadd@sign,6
  8571  03EA  17B1               	bsf	___ftadd@f1+1,7
  8572  03EB  30FF               	movlw	255
  8573  03EC  05B0               	andwf	___ftadd@f1,f
  8574  03ED  30FF               	movlw	255
  8575  03EE  05B1               	andwf	___ftadd@f1+1,f
  8576  03EF  3000               	movlw	0
  8577  03F0  05B2               	andwf	___ftadd@f1+2,f
  8578  03F1  17B4               	bsf	___ftadd@f2+1,7
  8579  03F2  30FF               	movlw	255
  8580  03F3  05B3               	andwf	___ftadd@f2,f
  8581  03F4  30FF               	movlw	255
  8582  03F5  05B4               	andwf	___ftadd@f2+1,f
  8583  03F6  3000               	movlw	0
  8584  03F7  05B5               	andwf	___ftadd@f2+2,f
  8585  03F8  083B               	movf	___ftadd@exp2,w
  8586  03F9  023C               	subwf	___ftadd@exp1,w
  8587  03FA  1803               	skipnc
  8588  03FB  2C1E               	goto	l2058
  8589  03FC                     l2048:	
  8590  03FC  3001               	movlw	1
  8591  03FD                     u2035:	
  8592  03FD  35B3               	lslf	___ftadd@f2,f
  8593  03FE  0DB4               	rlf	___ftadd@f2+1,f
  8594  03FF  0DB5               	rlf	___ftadd@f2+2,f
  8595  0400  0B89               	decfsz	9,f
  8596  0401  2BFD               	goto	u2035
  8597  0402  3001               	movlw	1
  8598  0403  02BB               	subwf	___ftadd@exp2,f
  8599  0404  083B               	movf	___ftadd@exp2,w
  8600  0405  063C               	xorwf	___ftadd@exp1,w
  8601  0406  1903               	skipnz
  8602  0407  2C19               	goto	l2056
  8603  0408  3001               	movlw	1
  8604  0409  02BA               	subwf	___ftadd@sign,f
  8605  040A  083A               	movf	___ftadd@sign,w
  8606  040B  3907               	andlw	7
  8607  040C  1903               	btfsc	3,2
  8608  040D  2C19               	goto	l2056
  8609  040E  2BFC               	goto	l2048
  8610  040F                     l2054:	
  8611  040F  3001               	movlw	1
  8612  0410                     u2065:	
  8613  0410  36B2               	lsrf	___ftadd@f1+2,f
  8614  0411  0CB1               	rrf	___ftadd@f1+1,f
  8615  0412  0CB0               	rrf	___ftadd@f1,f
  8616  0413  0B89               	decfsz	9,f
  8617  0414  2C10               	goto	u2065
  8618  0415  3001               	movlw	1
  8619  0416  00B6               	movwf	??___ftadd
  8620  0417  0836               	movf	??___ftadd,w
  8621  0418  07BC               	addwf	___ftadd@exp1,f
  8622  0419                     l2056:	
  8623  0419  083C               	movf	___ftadd@exp1,w
  8624  041A  063B               	xorwf	___ftadd@exp2,w
  8625  041B  1903               	btfsc	3,2
  8626  041C  2C43               	goto	l608
  8627  041D  2C0F               	goto	l2054
  8628  041E                     l2058:	
  8629  041E  083C               	movf	___ftadd@exp1,w
  8630  041F  023B               	subwf	___ftadd@exp2,w
  8631  0420  1803               	skipnc
  8632  0421  2C43               	goto	l608
  8633  0422                     l2060:	
  8634  0422  3001               	movlw	1
  8635  0423                     u2095:	
  8636  0423  35B0               	lslf	___ftadd@f1,f
  8637  0424  0DB1               	rlf	___ftadd@f1+1,f
  8638  0425  0DB2               	rlf	___ftadd@f1+2,f
  8639  0426  0B89               	decfsz	9,f
  8640  0427  2C23               	goto	u2095
  8641  0428  3001               	movlw	1
  8642  0429  02BC               	subwf	___ftadd@exp1,f
  8643  042A  083B               	movf	___ftadd@exp2,w
  8644  042B  063C               	xorwf	___ftadd@exp1,w
  8645  042C  1903               	skipnz
  8646  042D  2C3F               	goto	l2068
  8647  042E  3001               	movlw	1
  8648  042F  02BA               	subwf	___ftadd@sign,f
  8649  0430  083A               	movf	___ftadd@sign,w
  8650  0431  3907               	andlw	7
  8651  0432  1903               	btfsc	3,2
  8652  0433  2C3F               	goto	l2068
  8653  0434  2C22               	goto	l2060
  8654  0435                     l2066:	
  8655  0435  3001               	movlw	1
  8656  0436                     u2125:	
  8657  0436  36B5               	lsrf	___ftadd@f2+2,f
  8658  0437  0CB4               	rrf	___ftadd@f2+1,f
  8659  0438  0CB3               	rrf	___ftadd@f2,f
  8660  0439  0B89               	decfsz	9,f
  8661  043A  2C36               	goto	u2125
  8662  043B  3001               	movlw	1
  8663  043C  00B6               	movwf	??___ftadd
  8664  043D  0836               	movf	??___ftadd,w
  8665  043E  07BB               	addwf	___ftadd@exp2,f
  8666  043F                     l2068:	
  8667  043F  083C               	movf	___ftadd@exp1,w
  8668  0440  063B               	xorwf	___ftadd@exp2,w
  8669  0441  1D03               	skipz
  8670  0442  2C35               	goto	l2066
  8671  0443                     l608:	
  8672  0443  1FBA               	btfss	___ftadd@sign,7
  8673  0444  2C55               	goto	l2072
  8674  0445  30FF               	movlw	255
  8675  0446  06B0               	xorwf	___ftadd@f1,f
  8676  0447  30FF               	movlw	255
  8677  0448  06B1               	xorwf	___ftadd@f1+1,f
  8678  0449  30FF               	movlw	255
  8679  044A  06B2               	xorwf	___ftadd@f1+2,f
  8680  044B  3001               	movlw	1
  8681  044C  07B0               	addwf	___ftadd@f1,f
  8682  044D  3000               	movlw	0
  8683  044E  1803               	skipnc
  8684  044F  3001               	movlw	1
  8685  0450  07B1               	addwf	___ftadd@f1+1,f
  8686  0451  3000               	movlw	0
  8687  0452  1803               	skipnc
  8688  0453  3001               	movlw	1
  8689  0454  07B2               	addwf	___ftadd@f1+2,f
  8690  0455                     l2072:	
  8691  0455  1F3A               	btfss	___ftadd@sign,6
  8692  0456  2C67               	goto	l2076
  8693  0457  30FF               	movlw	255
  8694  0458  06B3               	xorwf	___ftadd@f2,f
  8695  0459  30FF               	movlw	255
  8696  045A  06B4               	xorwf	___ftadd@f2+1,f
  8697  045B  30FF               	movlw	255
  8698  045C  06B5               	xorwf	___ftadd@f2+2,f
  8699  045D  3001               	movlw	1
  8700  045E  07B3               	addwf	___ftadd@f2,f
  8701  045F  3000               	movlw	0
  8702  0460  1803               	skipnc
  8703  0461  3001               	movlw	1
  8704  0462  07B4               	addwf	___ftadd@f2+1,f
  8705  0463  3000               	movlw	0
  8706  0464  1803               	skipnc
  8707  0465  3001               	movlw	1
  8708  0466  07B5               	addwf	___ftadd@f2+2,f
  8709  0467                     l2076:	
  8710  0467  01BA               	clrf	___ftadd@sign
  8711  0468  0830               	movf	___ftadd@f1,w
  8712  0469  07B3               	addwf	___ftadd@f2,f
  8713  046A  0831               	movf	___ftadd@f1+1,w
  8714  046B  3DB4               	addwfc	___ftadd@f2+1,f
  8715  046C  0832               	movf	___ftadd@f1+2,w
  8716  046D  3DB5               	addwfc	___ftadd@f2+2,f
  8717  046E  1FB5               	btfss	___ftadd@f2+2,7
  8718  046F  2C82               	goto	l2086
  8719  0470  30FF               	movlw	255
  8720  0471  06B3               	xorwf	___ftadd@f2,f
  8721  0472  30FF               	movlw	255
  8722  0473  06B4               	xorwf	___ftadd@f2+1,f
  8723  0474  30FF               	movlw	255
  8724  0475  06B5               	xorwf	___ftadd@f2+2,f
  8725  0476  3001               	movlw	1
  8726  0477  07B3               	addwf	___ftadd@f2,f
  8727  0478  3000               	movlw	0
  8728  0479  1803               	skipnc
  8729  047A  3001               	movlw	1
  8730  047B  07B4               	addwf	___ftadd@f2+1,f
  8731  047C  3000               	movlw	0
  8732  047D  1803               	skipnc
  8733  047E  3001               	movlw	1
  8734  047F  07B5               	addwf	___ftadd@f2+2,f
  8735  0480  01BA               	clrf	___ftadd@sign
  8736  0481  0ABA               	incf	___ftadd@sign,f
  8737  0482                     l2086:	
  8738  0482  0833               	movf	___ftadd@f2,w
  8739  0483  00F0               	movwf	___ftpack@arg
  8740  0484  0834               	movf	___ftadd@f2+1,w
  8741  0485  00F1               	movwf	___ftpack@arg+1
  8742  0486  0835               	movf	___ftadd@f2+2,w
  8743  0487  00F2               	movwf	___ftpack@arg+2
  8744  0488  083C               	movf	___ftadd@exp1,w
  8745  0489  00B6               	movwf	??___ftadd
  8746  048A  0836               	movf	??___ftadd,w
  8747  048B  00F3               	movwf	___ftpack@exp
  8748  048C  083A               	movf	___ftadd@sign,w
  8749  048D  00B7               	movwf	??___ftadd+1
  8750  048E  0837               	movf	??___ftadd+1,w
  8751  048F  00F4               	movwf	___ftpack@sign
  8752  0490  318E  2619         	fcall	___ftpack
  8753  0492  0870               	movf	?___ftpack,w
  8754  0493  0020               	movlb	0	; select bank0
  8755  0494  00B0               	movwf	?___ftadd
  8756  0495  0871               	movf	?___ftpack+1,w
  8757  0496  00B1               	movwf	?___ftadd+1
  8758  0497  0872               	movf	?___ftpack+2,w
  8759  0498  00B2               	movwf	?___ftadd+2
  8760  0499  0008               	return
  8761  049A                     __end_of___ftadd:	
  8762                           
  8763                           	psect	text20
  8764  0A4A                     __ptext20:	
  8765 ;; *************** function ___ftneg *****************
  8766 ;; Defined at:
  8767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  f1              3    0[COMMON] float 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  3    0[COMMON] float 
  8774 ;; Registers used:
  8775 ;;		wreg
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8781 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;Total ram usage:        3 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_main
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function ___ftneg
  8796  0A4A                     ___ftneg:	
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in ___ftneg: [wreg]
  8800  0A4A  0872               	movf	___ftneg@f1+2,w
  8801  0A4B  0471               	iorwf	___ftneg@f1+1,w
  8802  0A4C  0470               	iorwf	___ftneg@f1,w
  8803  0A4D  1903               	skipnz
  8804  0A4E  0008               	return
  8805  0A4F  3080               	movlw	128
  8806  0A50  06F2               	xorwf	___ftneg@f1+2,f
  8807  0A51  0008               	return
  8808  0A52                     __end_of___ftneg:	
  8809                           
  8810                           	psect	text21
  8811  0017                     __ptext21:	
  8812 ;; *************** function ___ftdiv *****************
  8813 ;; Defined at:
  8814 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  f2              3    0[BANK0 ] float 
  8817 ;;  f1              3    3[BANK0 ] float 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  f3              3   11[BANK0 ] float 
  8820 ;;  sign            1   15[BANK0 ] unsigned char 
  8821 ;;  exp             1   14[BANK0 ] unsigned char 
  8822 ;;  cntr            1   10[BANK0 ] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  3    0[BANK0 ] float 
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0, pclath, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8832 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;Total ram usage:       16 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:    1
  8839 ;; This function calls:
  8840 ;;		___ftpack
  8841 ;; This function is called by:
  8842 ;;		_main
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           
  8847                           ;psect for function ___ftdiv
  8848  0017                     ___ftdiv:	
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8852  0017  0020               	movlb	0	; select bank0
  8853  0018  0823               	movf	___ftdiv@f1,w
  8854  0019  00A6               	movwf	??___ftdiv
  8855  001A  0824               	movf	___ftdiv@f1+1,w
  8856  001B  00A7               	movwf	??___ftdiv+1
  8857  001C  0825               	movf	___ftdiv@f1+2,w
  8858  001D  00A8               	movwf	??___ftdiv+2
  8859  001E  1003               	clrc
  8860  001F  0D27               	rlf	??___ftdiv+1,w
  8861  0020  0D28               	rlf	??___ftdiv+2,w
  8862  0021  00A9               	movwf	??___ftdiv+3
  8863  0022  0829               	movf	??___ftdiv+3,w
  8864  0023  00AE               	movwf	___ftdiv@exp
  8865  0024  082E               	movf	___ftdiv@exp,w
  8866  0025  1D03               	btfss	3,2
  8867  0026  282E               	goto	l2620
  8868  0027  3000               	movlw	0
  8869  0028  00A0               	movwf	?___ftdiv
  8870  0029  3000               	movlw	0
  8871  002A  00A1               	movwf	?___ftdiv+1
  8872  002B  3000               	movlw	0
  8873  002C  00A2               	movwf	?___ftdiv+2
  8874  002D  0008               	return
  8875  002E                     l2620:	
  8876  002E  0820               	movf	___ftdiv@f2,w
  8877  002F  00A6               	movwf	??___ftdiv
  8878  0030  0821               	movf	___ftdiv@f2+1,w
  8879  0031  00A7               	movwf	??___ftdiv+1
  8880  0032  0822               	movf	___ftdiv@f2+2,w
  8881  0033  00A8               	movwf	??___ftdiv+2
  8882  0034  1003               	clrc
  8883  0035  0D27               	rlf	??___ftdiv+1,w
  8884  0036  0D28               	rlf	??___ftdiv+2,w
  8885  0037  00A9               	movwf	??___ftdiv+3
  8886  0038  0829               	movf	??___ftdiv+3,w
  8887  0039  00AF               	movwf	___ftdiv@sign
  8888  003A  082F               	movf	___ftdiv@sign,w
  8889  003B  1D03               	btfss	3,2
  8890  003C  2844               	goto	l2626
  8891  003D  3000               	movlw	0
  8892  003E  00A0               	movwf	?___ftdiv
  8893  003F  3000               	movlw	0
  8894  0040  00A1               	movwf	?___ftdiv+1
  8895  0041  3000               	movlw	0
  8896  0042  00A2               	movwf	?___ftdiv+2
  8897  0043  0008               	return
  8898  0044                     l2626:	
  8899  0044  3000               	movlw	0
  8900  0045  00AB               	movwf	___ftdiv@f3
  8901  0046  3000               	movlw	0
  8902  0047  00AC               	movwf	___ftdiv@f3+1
  8903  0048  3000               	movlw	0
  8904  0049  00AD               	movwf	___ftdiv@f3+2
  8905  004A  3089               	movlw	137
  8906  004B  072F               	addwf	___ftdiv@sign,w
  8907  004C  00A6               	movwf	??___ftdiv
  8908  004D  0826               	movf	??___ftdiv,w
  8909  004E  02AE               	subwf	___ftdiv@exp,f
  8910  004F  0823               	movf	___ftdiv@f1,w
  8911  0050  00A6               	movwf	??___ftdiv
  8912  0051  0824               	movf	___ftdiv@f1+1,w
  8913  0052  00A7               	movwf	??___ftdiv+1
  8914  0053  0825               	movf	___ftdiv@f1+2,w
  8915  0054  00A8               	movwf	??___ftdiv+2
  8916  0055  3010               	movlw	16
  8917  0056                     u2785:	
  8918  0056  36A8               	lsrf	??___ftdiv+2,f
  8919  0057  0CA7               	rrf	??___ftdiv+1,f
  8920  0058  0CA6               	rrf	??___ftdiv,f
  8921  0059  0B89               	decfsz	9,f
  8922  005A  2856               	goto	u2785
  8923  005B  0826               	movf	??___ftdiv,w
  8924  005C  00A9               	movwf	??___ftdiv+3
  8925  005D  0829               	movf	??___ftdiv+3,w
  8926  005E  00AF               	movwf	___ftdiv@sign
  8927  005F  0820               	movf	___ftdiv@f2,w
  8928  0060  00A6               	movwf	??___ftdiv
  8929  0061  0821               	movf	___ftdiv@f2+1,w
  8930  0062  00A7               	movwf	??___ftdiv+1
  8931  0063  0822               	movf	___ftdiv@f2+2,w
  8932  0064  00A8               	movwf	??___ftdiv+2
  8933  0065  3010               	movlw	16
  8934  0066                     u2795:	
  8935  0066  36A8               	lsrf	??___ftdiv+2,f
  8936  0067  0CA7               	rrf	??___ftdiv+1,f
  8937  0068  0CA6               	rrf	??___ftdiv,f
  8938  0069  0B89               	decfsz	9,f
  8939  006A  2866               	goto	u2795
  8940  006B  0826               	movf	??___ftdiv,w
  8941  006C  00A9               	movwf	??___ftdiv+3
  8942  006D  0829               	movf	??___ftdiv+3,w
  8943  006E  06AF               	xorwf	___ftdiv@sign,f
  8944  006F  3080               	movlw	128
  8945  0070  00A6               	movwf	??___ftdiv
  8946  0071  0826               	movf	??___ftdiv,w
  8947  0072  05AF               	andwf	___ftdiv@sign,f
  8948  0073  17A4               	bsf	___ftdiv@f1+1,7
  8949  0074  30FF               	movlw	255
  8950  0075  05A3               	andwf	___ftdiv@f1,f
  8951  0076  30FF               	movlw	255
  8952  0077  05A4               	andwf	___ftdiv@f1+1,f
  8953  0078  3000               	movlw	0
  8954  0079  05A5               	andwf	___ftdiv@f1+2,f
  8955  007A  17A1               	bsf	___ftdiv@f2+1,7
  8956  007B  30FF               	movlw	255
  8957  007C  05A0               	andwf	___ftdiv@f2,f
  8958  007D  30FF               	movlw	255
  8959  007E  05A1               	andwf	___ftdiv@f2+1,f
  8960  007F  3000               	movlw	0
  8961  0080  05A2               	andwf	___ftdiv@f2+2,f
  8962  0081  3018               	movlw	24
  8963  0082  00A6               	movwf	??___ftdiv
  8964  0083  0826               	movf	??___ftdiv,w
  8965  0084  00AA               	movwf	___ftdiv@cntr
  8966  0085                     l2640:	
  8967  0085  3001               	movlw	1
  8968  0086                     u2805:	
  8969  0086  35AB               	lslf	___ftdiv@f3,f
  8970  0087  0DAC               	rlf	___ftdiv@f3+1,f
  8971  0088  0DAD               	rlf	___ftdiv@f3+2,f
  8972  0089  0B89               	decfsz	9,f
  8973  008A  2886               	goto	u2805
  8974  008B  0822               	movf	___ftdiv@f2+2,w
  8975  008C  0225               	subwf	___ftdiv@f1+2,w
  8976  008D  1D03               	skipz
  8977  008E  2895               	goto	u2815
  8978  008F  0821               	movf	___ftdiv@f2+1,w
  8979  0090  0224               	subwf	___ftdiv@f1+1,w
  8980  0091  1D03               	skipz
  8981  0092  2895               	goto	u2815
  8982  0093  0820               	movf	___ftdiv@f2,w
  8983  0094  0223               	subwf	___ftdiv@f1,w
  8984  0095                     u2815:	
  8985  0095  1C03               	skipc
  8986  0096  289E               	goto	l2648
  8987  0097  0820               	movf	___ftdiv@f2,w
  8988  0098  02A3               	subwf	___ftdiv@f1,f
  8989  0099  0821               	movf	___ftdiv@f2+1,w
  8990  009A  3BA4               	subwfb	___ftdiv@f1+1,f
  8991  009B  0822               	movf	___ftdiv@f2+2,w
  8992  009C  3BA5               	subwfb	___ftdiv@f1+2,f
  8993  009D  142B               	bsf	___ftdiv@f3,0
  8994  009E                     l2648:	
  8995  009E  3001               	movlw	1
  8996  009F                     u2825:	
  8997  009F  35A3               	lslf	___ftdiv@f1,f
  8998  00A0  0DA4               	rlf	___ftdiv@f1+1,f
  8999  00A1  0DA5               	rlf	___ftdiv@f1+2,f
  9000  00A2  0B89               	decfsz	9,f
  9001  00A3  289F               	goto	u2825
  9002  00A4  3001               	movlw	1
  9003  00A5  02AA               	subwf	___ftdiv@cntr,f
  9004  00A6  1D03               	btfss	3,2
  9005  00A7  2885               	goto	l2640
  9006  00A8  082B               	movf	___ftdiv@f3,w
  9007  00A9  00F0               	movwf	___ftpack@arg
  9008  00AA  082C               	movf	___ftdiv@f3+1,w
  9009  00AB  00F1               	movwf	___ftpack@arg+1
  9010  00AC  082D               	movf	___ftdiv@f3+2,w
  9011  00AD  00F2               	movwf	___ftpack@arg+2
  9012  00AE  082E               	movf	___ftdiv@exp,w
  9013  00AF  00A6               	movwf	??___ftdiv
  9014  00B0  0826               	movf	??___ftdiv,w
  9015  00B1  00F3               	movwf	___ftpack@exp
  9016  00B2  082F               	movf	___ftdiv@sign,w
  9017  00B3  00A7               	movwf	??___ftdiv+1
  9018  00B4  0827               	movf	??___ftdiv+1,w
  9019  00B5  00F4               	movwf	___ftpack@sign
  9020  00B6  318E  2619         	fcall	___ftpack
  9021  00B8  0870               	movf	?___ftpack,w
  9022  00B9  0020               	movlb	0	; select bank0
  9023  00BA  00A0               	movwf	?___ftdiv
  9024  00BB  0871               	movf	?___ftpack+1,w
  9025  00BC  00A1               	movwf	?___ftdiv+1
  9026  00BD  0872               	movf	?___ftpack+2,w
  9027  00BE  00A2               	movwf	?___ftdiv+2
  9028  00BF  0008               	return
  9029  00C0                     __end_of___ftdiv:	
  9030                           
  9031                           	psect	text22
  9032  0E19                     __ptext22:	
  9033 ;; *************** function ___ftpack *****************
  9034 ;; Defined at:
  9035 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  arg             3    0[COMMON] unsigned um
  9038 ;;  exp             1    3[COMMON] unsigned char 
  9039 ;;  sign            1    4[COMMON] unsigned char 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  3    0[COMMON] float 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9051 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;Total ram usage:        8 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		___awtoft
  9061 ;;		___ftadd
  9062 ;;		___ftdiv
  9063 ;;		___ftmul
  9064 ;;		___lbtoft
  9065 ;;		___lwtoft
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function ___ftpack
  9071  0E19                     ___ftpack:	
  9072                           
  9073                           ;incstack = 0
  9074                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9075  0E19  0873               	movf	___ftpack@exp,w
  9076  0E1A  1903               	btfsc	3,2
  9077  0E1B  2E21               	goto	l1866
  9078  0E1C  0872               	movf	___ftpack@arg+2,w
  9079  0E1D  0471               	iorwf	___ftpack@arg+1,w
  9080  0E1E  0470               	iorwf	___ftpack@arg,w
  9081  0E1F  1D03               	skipz
  9082  0E20  2E32               	goto	l1872
  9083  0E21                     l1866:	
  9084  0E21  3000               	movlw	0
  9085  0E22  00F0               	movwf	?___ftpack
  9086  0E23  3000               	movlw	0
  9087  0E24  00F1               	movwf	?___ftpack+1
  9088  0E25  3000               	movlw	0
  9089  0E26  00F2               	movwf	?___ftpack+2
  9090  0E27  0008               	return
  9091  0E28                     l1870:	
  9092  0E28  3001               	movlw	1
  9093  0E29  00F5               	movwf	??___ftpack
  9094  0E2A  0875               	movf	??___ftpack,w
  9095  0E2B  07F3               	addwf	___ftpack@exp,f
  9096  0E2C  3001               	movlw	1
  9097  0E2D                     u1605:	
  9098  0E2D  36F2               	lsrf	___ftpack@arg+2,f
  9099  0E2E  0CF1               	rrf	___ftpack@arg+1,f
  9100  0E2F  0CF0               	rrf	___ftpack@arg,f
  9101  0E30  0B89               	decfsz	9,f
  9102  0E31  2E2D               	goto	u1605
  9103  0E32                     l1872:	
  9104  0E32  30FE               	movlw	254
  9105  0E33  0572               	andwf	___ftpack@arg+2,w
  9106  0E34  1903               	btfsc	3,2
  9107  0E35  2E4B               	goto	l577
  9108  0E36  2E28               	goto	l1870
  9109  0E37                     l1874:	
  9110  0E37  3001               	movlw	1
  9111  0E38  00F5               	movwf	??___ftpack
  9112  0E39  0875               	movf	??___ftpack,w
  9113  0E3A  07F3               	addwf	___ftpack@exp,f
  9114  0E3B  3001               	movlw	1
  9115  0E3C  07F0               	addwf	___ftpack@arg,f
  9116  0E3D  3000               	movlw	0
  9117  0E3E  1803               	skipnc
  9118  0E3F  3001               	movlw	1
  9119  0E40  07F1               	addwf	___ftpack@arg+1,f
  9120  0E41  3000               	movlw	0
  9121  0E42  1803               	skipnc
  9122  0E43  3001               	movlw	1
  9123  0E44  07F2               	addwf	___ftpack@arg+2,f
  9124  0E45  3001               	movlw	1
  9125  0E46                     u1625:	
  9126  0E46  36F2               	lsrf	___ftpack@arg+2,f
  9127  0E47  0CF1               	rrf	___ftpack@arg+1,f
  9128  0E48  0CF0               	rrf	___ftpack@arg,f
  9129  0E49  0B89               	decfsz	9,f
  9130  0E4A  2E46               	goto	u1625
  9131  0E4B                     l577:	
  9132  0E4B  30FF               	movlw	255
  9133  0E4C  0572               	andwf	___ftpack@arg+2,w
  9134  0E4D  1903               	btfsc	3,2
  9135  0E4E  2E58               	goto	l1882
  9136  0E4F  2E37               	goto	l1874
  9137  0E50                     l1880:	
  9138  0E50  3001               	movlw	1
  9139  0E51  02F3               	subwf	___ftpack@exp,f
  9140  0E52  3001               	movlw	1
  9141  0E53                     u1645:	
  9142  0E53  35F0               	lslf	___ftpack@arg,f
  9143  0E54  0DF1               	rlf	___ftpack@arg+1,f
  9144  0E55  0DF2               	rlf	___ftpack@arg+2,f
  9145  0E56  0B89               	decfsz	9,f
  9146  0E57  2E53               	goto	u1645
  9147  0E58                     l1882:	
  9148  0E58  1BF1               	btfsc	___ftpack@arg+1,7
  9149  0E59  2E5E               	goto	l584
  9150  0E5A  3002               	movlw	2
  9151  0E5B  0273               	subwf	___ftpack@exp,w
  9152  0E5C  1803               	skipnc
  9153  0E5D  2E50               	goto	l1880
  9154  0E5E                     l584:	
  9155  0E5E  1873               	btfsc	___ftpack@exp,0
  9156  0E5F  2E66               	goto	l585
  9157  0E60  30FF               	movlw	255
  9158  0E61  05F0               	andwf	___ftpack@arg,f
  9159  0E62  307F               	movlw	127
  9160  0E63  05F1               	andwf	___ftpack@arg+1,f
  9161  0E64  30FF               	movlw	255
  9162  0E65  05F2               	andwf	___ftpack@arg+2,f
  9163  0E66                     l585:	
  9164  0E66  1003               	clrc
  9165  0E67  0CF3               	rrf	___ftpack@exp,f
  9166  0E68  0873               	movf	___ftpack@exp,w
  9167  0E69  00F5               	movwf	??___ftpack
  9168  0E6A  01F6               	clrf	??___ftpack+1
  9169  0E6B  01F7               	clrf	??___ftpack+2
  9170  0E6C  3010               	movlw	16
  9171  0E6D                     u1685:	
  9172  0E6D  35F5               	lslf	??___ftpack,f
  9173  0E6E  0DF6               	rlf	??___ftpack+1,f
  9174  0E6F  0DF7               	rlf	??___ftpack+2,f
  9175  0E70  0B89               	decfsz	9,f
  9176  0E71  2E6D               	goto	u1685
  9177  0E72  0875               	movf	??___ftpack,w
  9178  0E73  04F0               	iorwf	___ftpack@arg,f
  9179  0E74  0876               	movf	??___ftpack+1,w
  9180  0E75  04F1               	iorwf	___ftpack@arg+1,f
  9181  0E76  0877               	movf	??___ftpack+2,w
  9182  0E77  04F2               	iorwf	___ftpack@arg+2,f
  9183  0E78  0874               	movf	___ftpack@sign,w
  9184  0E79  1903               	btfsc	3,2
  9185  0E7A  0008               	return
  9186  0E7B  17F2               	bsf	___ftpack@arg+2,7
  9187  0E7C  0008               	return
  9188  0E7D                     __end_of___ftpack:	
  9189                           
  9190                           	psect	text23
  9191  0EF8                     __ptext23:	
  9192 ;; *************** function ___aldiv *****************
  9193 ;; Defined at:
  9194 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  divisor         4    0[COMMON] long 
  9197 ;;  dividend        4    4[COMMON] long 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  quotient        4    2[BANK0 ] long 
  9200 ;;  sign            1    1[BANK0 ] unsigned char 
  9201 ;;  counter         1    0[BANK0 ] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  4    0[COMMON] long 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9211 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;Total ram usage:       15 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_main
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function ___aldiv
  9226  0EF8                     ___aldiv:	
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9230  0EF8  0020               	movlb	0	; select bank0
  9231  0EF9  01A1               	clrf	___aldiv@sign
  9232  0EFA  1FF3               	btfss	___aldiv@divisor+3,7
  9233  0EFB  2F09               	goto	l471
  9234  0EFC  09F0               	comf	___aldiv@divisor,f
  9235  0EFD  09F1               	comf	___aldiv@divisor+1,f
  9236  0EFE  09F2               	comf	___aldiv@divisor+2,f
  9237  0EFF  09F3               	comf	___aldiv@divisor+3,f
  9238  0F00  0AF0               	incf	___aldiv@divisor,f
  9239  0F01  1903               	skipnz
  9240  0F02  0AF1               	incf	___aldiv@divisor+1,f
  9241  0F03  1903               	skipnz
  9242  0F04  0AF2               	incf	___aldiv@divisor+2,f
  9243  0F05  1903               	skipnz
  9244  0F06  0AF3               	incf	___aldiv@divisor+3,f
  9245  0F07  01A1               	clrf	___aldiv@sign
  9246  0F08  0AA1               	incf	___aldiv@sign,f
  9247  0F09                     l471:	
  9248  0F09  1FF7               	btfss	___aldiv@dividend+3,7
  9249  0F0A  2F1A               	goto	l2584
  9250  0F0B  09F4               	comf	___aldiv@dividend,f
  9251  0F0C  09F5               	comf	___aldiv@dividend+1,f
  9252  0F0D  09F6               	comf	___aldiv@dividend+2,f
  9253  0F0E  09F7               	comf	___aldiv@dividend+3,f
  9254  0F0F  0AF4               	incf	___aldiv@dividend,f
  9255  0F10  1903               	skipnz
  9256  0F11  0AF5               	incf	___aldiv@dividend+1,f
  9257  0F12  1903               	skipnz
  9258  0F13  0AF6               	incf	___aldiv@dividend+2,f
  9259  0F14  1903               	skipnz
  9260  0F15  0AF7               	incf	___aldiv@dividend+3,f
  9261  0F16  3001               	movlw	1
  9262  0F17  00F8               	movwf	??___aldiv
  9263  0F18  0878               	movf	??___aldiv,w
  9264  0F19  06A1               	xorwf	___aldiv@sign,f
  9265  0F1A                     l2584:	
  9266  0F1A  3000               	movlw	0
  9267  0F1B  00A5               	movwf	___aldiv@quotient+3
  9268  0F1C  3000               	movlw	0
  9269  0F1D  00A4               	movwf	___aldiv@quotient+2
  9270  0F1E  3000               	movlw	0
  9271  0F1F  00A3               	movwf	___aldiv@quotient+1
  9272  0F20  3000               	movlw	0
  9273  0F21  00A2               	movwf	___aldiv@quotient
  9274  0F22  0873               	movf	___aldiv@divisor+3,w
  9275  0F23  0472               	iorwf	___aldiv@divisor+2,w
  9276  0F24  0471               	iorwf	___aldiv@divisor+1,w
  9277  0F25  0470               	iorwf	___aldiv@divisor,w
  9278  0F26  1903               	skipnz
  9279  0F27  2F63               	goto	l2606
  9280  0F28  01A0               	clrf	___aldiv@counter
  9281  0F29  0AA0               	incf	___aldiv@counter,f
  9282  0F2A                     l2592:	
  9283  0F2A  1BF3               	btfsc	___aldiv@divisor+3,7
  9284  0F2B  2F38               	goto	l2594
  9285  0F2C  3001               	movlw	1
  9286  0F2D                     u2695:	
  9287  0F2D  35F0               	lslf	___aldiv@divisor,f
  9288  0F2E  0DF1               	rlf	___aldiv@divisor+1,f
  9289  0F2F  0DF2               	rlf	___aldiv@divisor+2,f
  9290  0F30  0DF3               	rlf	___aldiv@divisor+3,f
  9291  0F31  0B89               	decfsz	9,f
  9292  0F32  2F2D               	goto	u2695
  9293  0F33  3001               	movlw	1
  9294  0F34  00F8               	movwf	??___aldiv
  9295  0F35  0878               	movf	??___aldiv,w
  9296  0F36  07A0               	addwf	___aldiv@counter,f
  9297  0F37  2F2A               	goto	l2592
  9298  0F38                     l2594:	
  9299  0F38  3001               	movlw	1
  9300  0F39                     u2715:	
  9301  0F39  35A2               	lslf	___aldiv@quotient,f
  9302  0F3A  0DA3               	rlf	___aldiv@quotient+1,f
  9303  0F3B  0DA4               	rlf	___aldiv@quotient+2,f
  9304  0F3C  0DA5               	rlf	___aldiv@quotient+3,f
  9305  0F3D  0B89               	decfsz	9,f
  9306  0F3E  2F39               	goto	u2715
  9307  0F3F  0873               	movf	___aldiv@divisor+3,w
  9308  0F40  0277               	subwf	___aldiv@dividend+3,w
  9309  0F41  1D03               	skipz
  9310  0F42  2F4D               	goto	u2725
  9311  0F43  0872               	movf	___aldiv@divisor+2,w
  9312  0F44  0276               	subwf	___aldiv@dividend+2,w
  9313  0F45  1D03               	skipz
  9314  0F46  2F4D               	goto	u2725
  9315  0F47  0871               	movf	___aldiv@divisor+1,w
  9316  0F48  0275               	subwf	___aldiv@dividend+1,w
  9317  0F49  1D03               	skipz
  9318  0F4A  2F4D               	goto	u2725
  9319  0F4B  0870               	movf	___aldiv@divisor,w
  9320  0F4C  0274               	subwf	___aldiv@dividend,w
  9321  0F4D                     u2725:	
  9322  0F4D  1C03               	skipc
  9323  0F4E  2F58               	goto	l2602
  9324  0F4F  0870               	movf	___aldiv@divisor,w
  9325  0F50  02F4               	subwf	___aldiv@dividend,f
  9326  0F51  0871               	movf	___aldiv@divisor+1,w
  9327  0F52  3BF5               	subwfb	___aldiv@dividend+1,f
  9328  0F53  0872               	movf	___aldiv@divisor+2,w
  9329  0F54  3BF6               	subwfb	___aldiv@dividend+2,f
  9330  0F55  0873               	movf	___aldiv@divisor+3,w
  9331  0F56  3BF7               	subwfb	___aldiv@dividend+3,f
  9332  0F57  1422               	bsf	___aldiv@quotient,0
  9333  0F58                     l2602:	
  9334  0F58  3001               	movlw	1
  9335  0F59                     u2735:	
  9336  0F59  36F3               	lsrf	___aldiv@divisor+3,f
  9337  0F5A  0CF2               	rrf	___aldiv@divisor+2,f
  9338  0F5B  0CF1               	rrf	___aldiv@divisor+1,f
  9339  0F5C  0CF0               	rrf	___aldiv@divisor,f
  9340  0F5D  0B89               	decfsz	9,f
  9341  0F5E  2F59               	goto	u2735
  9342  0F5F  3001               	movlw	1
  9343  0F60  02A0               	subwf	___aldiv@counter,f
  9344  0F61  1D03               	btfss	3,2
  9345  0F62  2F38               	goto	l2594
  9346  0F63                     l2606:	
  9347  0F63  0821               	movf	___aldiv@sign,w
  9348  0F64  1903               	btfsc	3,2
  9349  0F65  2F71               	goto	l2610
  9350  0F66  09A2               	comf	___aldiv@quotient,f
  9351  0F67  09A3               	comf	___aldiv@quotient+1,f
  9352  0F68  09A4               	comf	___aldiv@quotient+2,f
  9353  0F69  09A5               	comf	___aldiv@quotient+3,f
  9354  0F6A  0AA2               	incf	___aldiv@quotient,f
  9355  0F6B  1903               	skipnz
  9356  0F6C  0AA3               	incf	___aldiv@quotient+1,f
  9357  0F6D  1903               	skipnz
  9358  0F6E  0AA4               	incf	___aldiv@quotient+2,f
  9359  0F6F  1903               	skipnz
  9360  0F70  0AA5               	incf	___aldiv@quotient+3,f
  9361  0F71                     l2610:	
  9362  0F71  0825               	movf	___aldiv@quotient+3,w
  9363  0F72  00F3               	movwf	?___aldiv+3
  9364  0F73  0824               	movf	___aldiv@quotient+2,w
  9365  0F74  00F2               	movwf	?___aldiv+2
  9366  0F75  0823               	movf	___aldiv@quotient+1,w
  9367  0F76  00F1               	movwf	?___aldiv+1
  9368  0F77  0822               	movf	___aldiv@quotient,w
  9369  0F78  00F0               	movwf	?___aldiv
  9370  0F79  0008               	return
  9371  0F7A                     __end_of___aldiv:	
  9372                           
  9373                           	psect	text24
  9374  0C36                     __ptext24:	
  9375 ;; *************** function _SYSTEM_Initialize *****************
  9376 ;; Defined at:
  9377 ;;		line 37 in file "system.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;Total ram usage:        2 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:    3
  9398 ;; This function calls:
  9399 ;;		_ADCC_Initialize
  9400 ;;		_InitCustomChars
  9401 ;;		_LCD_Clear
  9402 ;;		_LCD_Init
  9403 ;;		_OSCILLATOR_Initialize
  9404 ;;		_PIN_MANAGER_Initialize
  9405 ;;		_PWM6_Initialize
  9406 ;;		_TMR2_Initialize
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           
  9413                           ;psect for function _SYSTEM_Initialize
  9414  0C36                     _SYSTEM_Initialize:	
  9415                           
  9416                           ;system.c: 40: PIN_MANAGER_Initialize();
  9417                           
  9418                           ;incstack = 0
  9419                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9420  0C36  318C  2404  318C   	fcall	_PIN_MANAGER_Initialize
  9421                           
  9422                           ;system.c: 41: OSCILLATOR_Initialize();
  9423  0C39  318A  2242  318C   	fcall	_OSCILLATOR_Initialize
  9424                           
  9425                           ;system.c: 42: FVRCON = 0x00;
  9426  0C3C  0032               	movlb	18	; select bank18
  9427  0C3D  018C               	clrf	12	;volatile
  9428                           
  9429                           ;system.c: 43: ADCC_Initialize();
  9430  0C3E  318A  22EC  318C   	fcall	_ADCC_Initialize
  9431                           
  9432                           ;system.c: 44: PWM6_Initialize();
  9433  0C41  318A  226A  318C   	fcall	_PWM6_Initialize
  9434                           
  9435                           ;system.c: 45: TMR2_Initialize();
  9436  0C44  318A  2285  318C   	fcall	_TMR2_Initialize
  9437                           
  9438                           ;system.c: 46: LCD_Init(0X00);
  9439  0C47  3000               	movlw	0
  9440  0C48  318E  267D  318C   	fcall	_LCD_Init
  9441                           
  9442                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  9443  0C4B  3041               	movlw	65
  9444  0C4C  00F8               	movwf	??_SYSTEM_Initialize+1
  9445  0C4D  30EE               	movlw	238
  9446  0C4E  00F7               	movwf	??_SYSTEM_Initialize
  9447  0C4F                     u3107:	
  9448  0C4F  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9449  0C50  2C4F               	goto	u3107
  9450  0C51  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9451  0C52  2C4F               	goto	u3107
  9452  0C53  0000               	nop
  9453                           
  9454                           ;system.c: 48: LCD_Clear();
  9455  0C54  318A  223A  318C   	fcall	_LCD_Clear
  9456                           
  9457                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  9458  0C57  3021               	movlw	33
  9459  0C58  00F8               	movwf	??_SYSTEM_Initialize+1
  9460  0C59  3076               	movlw	118
  9461  0C5A  00F7               	movwf	??_SYSTEM_Initialize
  9462  0C5B                     u3117:	
  9463  0C5B  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9464  0C5C  2C5B               	goto	u3117
  9465  0C5D  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9466  0C5E  2C5B               	goto	u3117
  9467  0C5F  0000               	nop
  9468                           
  9469                           ;system.c: 50: InitCustomChars();
  9470  0C60  318B  23B5  318C   	fcall	_InitCustomChars
  9471                           
  9472                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  9473  0C63  3041               	movlw	65
  9474  0C64  00F8               	movwf	??_SYSTEM_Initialize+1
  9475  0C65  30EE               	movlw	238
  9476  0C66  00F7               	movwf	??_SYSTEM_Initialize
  9477  0C67                     u3127:	
  9478  0C67  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9479  0C68  2C67               	goto	u3127
  9480  0C69  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9481  0C6A  2C67               	goto	u3127
  9482  0C6B  0000               	nop
  9483  0C6C  0008               	return
  9484  0C6D                     __end_of_SYSTEM_Initialize:	
  9485                           
  9486                           	psect	text25
  9487  0A85                     __ptext25:	
  9488 ;; *************** function _TMR2_Initialize *****************
  9489 ;; Defined at:
  9490 ;;		line 4 in file "tmr2.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_SYSTEM_Initialize
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _TMR2_Initialize
  9519  0A85                     _TMR2_Initialize:	
  9520                           
  9521                           ;tmr2.c: 7: T2CON = 0x7F;
  9522                           
  9523                           ;incstack = 0
  9524                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9525  0A85  307F               	movlw	127
  9526  0A86  0025               	movlb	5	; select bank5
  9527  0A87  008E               	movwf	14	;volatile
  9528                           
  9529                           ;tmr2.c: 9: T2CLKCON = 0x01;
  9530  0A88  3001               	movlw	1
  9531  0A89  0090               	movwf	16	;volatile
  9532                           
  9533                           ;tmr2.c: 11: T2HLT = 0x00;
  9534  0A8A  018F               	clrf	15	;volatile
  9535                           
  9536                           ;tmr2.c: 13: T2RST = 0x00;
  9537  0A8B  0191               	clrf	17	;volatile
  9538                           
  9539                           ;tmr2.c: 15: T2PR = 0xFF;
  9540  0A8C  30FF               	movlw	255
  9541  0A8D  008D               	movwf	13	;volatile
  9542                           
  9543                           ;tmr2.c: 17: T2TMR = 0x00;
  9544  0A8E  018C               	clrf	12	;volatile
  9545                           
  9546                           ;tmr2.c: 19: PIR4bits.TMR2IF = 0;
  9547  0A8F  002E               	movlb	14	; select bank14
  9548  0A90  1090               	bcf	16,1	;volatile
  9549                           
  9550                           ;tmr2.c: 21: T2CONbits.TMR2ON = 1;
  9551  0A91  0025               	movlb	5	; select bank5
  9552  0A92  178E               	bsf	14,7	;volatile
  9553  0A93  0008               	return
  9554  0A94                     __end_of_TMR2_Initialize:	
  9555                           
  9556                           	psect	text26
  9557  0A6A                     __ptext26:	
  9558 ;; *************** function _PWM6_Initialize *****************
  9559 ;; Defined at:
  9560 ;;		line 4 in file "pwm6.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2, status,0
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_SYSTEM_Initialize
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           
  9588                           ;psect for function _PWM6_Initialize
  9589  0A6A                     _PWM6_Initialize:	
  9590                           
  9591                           ;pwm6.c: 6: PWM6CON = 0x80;
  9592                           
  9593                           ;incstack = 0
  9594                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9595  0A6A  3080               	movlw	128
  9596  0A6B  0027               	movlb	7	; select bank7
  9597  0A6C  008E               	movwf	14	;volatile
  9598                           
  9599                           ;pwm6.c: 8: PWM6DCH = 0x3C;
  9600  0A6D  303C               	movlw	60
  9601  0A6E  008D               	movwf	13	;volatile
  9602                           
  9603                           ;pwm6.c: 10: PWM6DCL = 0x40;
  9604  0A6F  3040               	movlw	64
  9605  0A70  008C               	movwf	12	;volatile
  9606                           
  9607                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9608  0A71  0024               	movlb	4	; select bank4
  9609  0A72  081F               	movf	31,w	;volatile
  9610  0A73  39F3               	andlw	-13
  9611  0A74  3804               	iorlw	4
  9612  0A75  009F               	movwf	31	;volatile
  9613  0A76  0008               	return
  9614  0A77                     __end_of_PWM6_Initialize:	
  9615                           
  9616                           	psect	text27
  9617  0C04                     __ptext27:	
  9618 ;; *************** function _PIN_MANAGER_Initialize *****************
  9619 ;; Defined at:
  9620 ;;		line 5 in file "pin_manager.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  state           1    0[COMMON] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;Total ram usage:        1 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_SYSTEM_Initialize
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _PIN_MANAGER_Initialize
  9649  0C04                     _PIN_MANAGER_Initialize:	
  9650                           
  9651                           ;pin_manager.c: 7: LATA = 0x00;
  9652                           
  9653                           ;incstack = 0
  9654                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9655  0C04  0020               	movlb	0	; select bank0
  9656  0C05  0196               	clrf	22	;volatile
  9657                           
  9658                           ;pin_manager.c: 8: LATB = 0x0;
  9659  0C06  0197               	clrf	23	;volatile
  9660                           
  9661                           ;pin_manager.c: 9: LATC = 0x0;
  9662  0C07  0198               	clrf	24	;volatile
  9663                           
  9664                           ;pin_manager.c: 11: WPUA = 0x18;
  9665  0C08  3018               	movlw	24
  9666  0C09  003E               	movlb	30	; select bank30
  9667  0C0A  00B9               	movwf	57	;volatile
  9668                           
  9669                           ;pin_manager.c: 12: WPUB = 0x00;
  9670  0C0B  01C4               	clrf	68	;volatile
  9671                           
  9672                           ;pin_manager.c: 13: WPUC = 0x00;
  9673  0C0C  01CF               	clrf	79	;volatile
  9674                           
  9675                           ;pin_manager.c: 14: WPUE = 0x8;
  9676  0C0D  3008               	movlw	8
  9677  0C0E  00E5               	movwf	101	;volatile
  9678                           
  9679                           ;pin_manager.c: 16: TRISA = 0x1C;
  9680  0C0F  301C               	movlw	28
  9681  0C10  0020               	movlb	0	; select bank0
  9682  0C11  0091               	movwf	17	;volatile
  9683                           
  9684                           ;pin_manager.c: 17: TRISB = 0x00;
  9685  0C12  0192               	clrf	18	;volatile
  9686                           
  9687                           ;pin_manager.c: 18: TRISC = 0x10;
  9688  0C13  3010               	movlw	16
  9689  0C14  0093               	movwf	19	;volatile
  9690                           
  9691                           ;pin_manager.c: 20: ANSELA = 0x04;
  9692  0C15  3004               	movlw	4
  9693  0C16  003E               	movlb	30	; select bank30
  9694  0C17  00B8               	movwf	56	;volatile
  9695                           
  9696                           ;pin_manager.c: 21: ANSELB = 0x00;
  9697  0C18  01C3               	clrf	67	;volatile
  9698                           
  9699                           ;pin_manager.c: 22: ANSELC = 0x00;
  9700  0C19  01CE               	clrf	78	;volatile
  9701                           
  9702                           ;pin_manager.c: 26: PIE0bits.IOCIE = 0;
  9703  0C1A  002E               	movlb	14	; select bank14
  9704  0C1B  1216               	bcf	22,4	;volatile
  9705                           
  9706                           ;pin_manager.c: 27: bool state = GIE;
  9707  0C1C  3000               	movlw	0
  9708  0C1D  1B8B               	btfsc	11,7	;volatile
  9709  0C1E  3001               	movlw	1
  9710  0C1F  00F0               	movwf	PIN_MANAGER_Initialize@state
  9711                           
  9712                           ;pin_manager.c: 28: GIE = 0;
  9713  0C20  138B               	bcf	11,7	;volatile
  9714                           
  9715                           ;pin_manager.c: 29: PPSLOCK = 0x55;
  9716  0C21  3055               	movlw	85
  9717  0C22  003D               	movlb	29	; select bank29
  9718  0C23  008F               	movwf	15	;volatile
  9719                           
  9720                           ;pin_manager.c: 30: PPSLOCK = 0xAA;
  9721  0C24  30AA               	movlw	170
  9722  0C25  008F               	movwf	15	;volatile
  9723                           
  9724                           ;pin_manager.c: 31: PPSLOCKbits.PPSLOCKED = 0x00;
  9725  0C26  100F               	bcf	15,0	;volatile
  9726                           
  9727                           ;pin_manager.c: 34: RA1PPS = 0x000E;
  9728  0C27  300E               	movlw	14
  9729  0C28  003E               	movlb	30	; select bank30
  9730  0C29  0091               	movwf	17	;volatile
  9731                           
  9732                           ;pin_manager.c: 38: PPSLOCK = 0x55;
  9733  0C2A  3055               	movlw	85
  9734  0C2B  003D               	movlb	29	; select bank29
  9735  0C2C  008F               	movwf	15	;volatile
  9736                           
  9737                           ;pin_manager.c: 39: PPSLOCK = 0xAA;
  9738  0C2D  30AA               	movlw	170
  9739  0C2E  008F               	movwf	15	;volatile
  9740                           
  9741                           ;pin_manager.c: 40: PPSLOCKbits.PPSLOCKED = 0x01;
  9742  0C2F  140F               	bsf	15,0	;volatile
  9743                           
  9744                           ;pin_manager.c: 41: GIE = state;
  9745  0C30  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9746  0C31  2C34               	goto	u2450
  9747  0C32  178B               	bsf	11,7	;volatile
  9748  0C33  0008               	return
  9749  0C34                     u2450:	
  9750  0C34  138B               	bcf	11,7	;volatile
  9751  0C35  0008               	return
  9752  0C36                     __end_of_PIN_MANAGER_Initialize:	
  9753                           
  9754                           	psect	text28
  9755  0A42                     __ptext28:	
  9756 ;; *************** function _OSCILLATOR_Initialize *****************
  9757 ;; Defined at:
  9758 ;;		line 54 in file "system.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;		None
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;Total ram usage:        0 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_SYSTEM_Initialize
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function _OSCILLATOR_Initialize
  9787  0A42                     _OSCILLATOR_Initialize:	
  9788                           
  9789                           ;system.c: 80: OSCCON1 = 0x60;
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9793  0A42  3060               	movlw	96
  9794  0A43  0031               	movlb	17	; select bank17
  9795  0A44  008D               	movwf	13	;volatile
  9796                           
  9797                           ;system.c: 82: OSCCON3 = 0x00;
  9798  0A45  018F               	clrf	15	;volatile
  9799                           
  9800                           ;system.c: 84: OSCEN = 0x00;
  9801  0A46  0191               	clrf	17	;volatile
  9802                           
  9803                           ;system.c: 86: OSCFRQ = 0x00;
  9804  0A47  0193               	clrf	19	;volatile
  9805                           
  9806                           ;system.c: 88: OSCTUNE = 0x00;
  9807  0A48  0192               	clrf	18	;volatile
  9808  0A49  0008               	return
  9809  0A4A                     __end_of_OSCILLATOR_Initialize:	
  9810                           
  9811                           	psect	text29
  9812  0E7D                     __ptext29:	
  9813 ;; *************** function _LCD_Init *****************
  9814 ;; Defined at:
  9815 ;;		line 154 in file "lcd.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  style           1    wreg     unsigned char 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  style           1    5[COMMON] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0, pclath, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;Total ram usage:        3 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    2
  9836 ;; This function calls:
  9837 ;;		_LCD_Cmd
  9838 ;;		_LCD_Port
  9839 ;; This function is called by:
  9840 ;;		_SYSTEM_Initialize
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           
  9845                           ;psect for function _LCD_Init
  9846  0E7D                     _LCD_Init:	
  9847                           
  9848                           ;incstack = 0
  9849                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9850                           ;LCD_Init@style stored from wreg
  9851  0E7D  00F5               	movwf	LCD_Init@style
  9852                           
  9853                           ;lcd.c: 156: LCD_Port(0x00);
  9854  0E7E  3000               	movlw	0
  9855  0E7F  318A  22BC  318E   	fcall	_LCD_Port
  9856                           
  9857                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9858  0E82  3021               	movlw	33
  9859  0E83  00F4               	movwf	??_LCD_Init+1
  9860  0E84  3076               	movlw	118
  9861  0E85  00F3               	movwf	??_LCD_Init
  9862  0E86                     u3137:	
  9863  0E86  0BF3               	decfsz	??_LCD_Init,f
  9864  0E87  2E86               	goto	u3137
  9865  0E88  0BF4               	decfsz	??_LCD_Init+1,f
  9866  0E89  2E86               	goto	u3137
  9867  0E8A  0000               	nop
  9868                           
  9869                           ;lcd.c: 160: LCD_Cmd(0x03);
  9870  0E8B  3003               	movlw	3
  9871  0E8C  318A  2294  318E   	fcall	_LCD_Cmd
  9872                           
  9873                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9874  0E8F  3004               	movlw	4
  9875  0E90  00F4               	movwf	??_LCD_Init+1
  9876  0E91  303D               	movlw	61
  9877  0E92  00F3               	movwf	??_LCD_Init
  9878  0E93                     u3147:	
  9879  0E93  0BF3               	decfsz	??_LCD_Init,f
  9880  0E94  2E93               	goto	u3147
  9881  0E95  0BF4               	decfsz	??_LCD_Init+1,f
  9882  0E96  2E93               	goto	u3147
  9883  0E97  3200               	nop2
  9884                           
  9885                           ;lcd.c: 164: LCD_Cmd(0x03);
  9886  0E98  3003               	movlw	3
  9887  0E99  318A  2294  318E   	fcall	_LCD_Cmd
  9888                           
  9889                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9890  0E9C  3009               	movlw	9
  9891  0E9D  00F3               	movwf	??_LCD_Init
  9892  0E9E                     u3157:	
  9893  0E9E  0BF3               	decfsz	??_LCD_Init,f
  9894  0E9F  2E9E               	goto	u3157
  9895  0EA0  3200               	nop2	;nop
  9896                           
  9897                           ;lcd.c: 168: LCD_Cmd(0x03);
  9898  0EA1  3003               	movlw	3
  9899  0EA2  318A  2294  318E   	fcall	_LCD_Cmd
  9900                           
  9901                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9902  0EA5  3009               	movlw	9
  9903  0EA6  00F3               	movwf	??_LCD_Init
  9904  0EA7                     u3167:	
  9905  0EA7  0BF3               	decfsz	??_LCD_Init,f
  9906  0EA8  2EA7               	goto	u3167
  9907  0EA9  3200               	nop2	;nop
  9908                           
  9909                           ;lcd.c: 172: LCD_Cmd(0x02);
  9910  0EAA  3002               	movlw	2
  9911  0EAB  318A  2294  318E   	fcall	_LCD_Cmd
  9912                           
  9913                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9914  0EAE  3009               	movlw	9
  9915  0EAF  00F3               	movwf	??_LCD_Init
  9916  0EB0                     u3177:	
  9917  0EB0  0BF3               	decfsz	??_LCD_Init,f
  9918  0EB1  2EB0               	goto	u3177
  9919  0EB2  3200               	nop2	;nop
  9920                           
  9921                           ;lcd.c: 176: LCD_Cmd(0x2);
  9922  0EB3  3002               	movlw	2
  9923  0EB4  318A  2294  318E   	fcall	_LCD_Cmd
  9924                           
  9925                           ;lcd.c: 178: LCD_Cmd(0x8);
  9926  0EB7  3008               	movlw	8
  9927  0EB8  318A  2294  318E   	fcall	_LCD_Cmd
  9928                           
  9929                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9930  0EBB  3009               	movlw	9
  9931  0EBC  00F3               	movwf	??_LCD_Init
  9932  0EBD                     u3187:	
  9933  0EBD  0BF3               	decfsz	??_LCD_Init,f
  9934  0EBE  2EBD               	goto	u3187
  9935  0EBF  3200               	nop2	;nop
  9936                           
  9937                           ;lcd.c: 182: LCD_Cmd(0x0);
  9938  0EC0  3000               	movlw	0
  9939  0EC1  318A  2294  318E   	fcall	_LCD_Cmd
  9940                           
  9941                           ;lcd.c: 184: LCD_Cmd(0x8);
  9942  0EC4  3008               	movlw	8
  9943  0EC5  318A  2294  318E   	fcall	_LCD_Cmd
  9944                           
  9945                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9946  0EC8  3009               	movlw	9
  9947  0EC9  00F3               	movwf	??_LCD_Init
  9948  0ECA                     u3197:	
  9949  0ECA  0BF3               	decfsz	??_LCD_Init,f
  9950  0ECB  2ECA               	goto	u3197
  9951  0ECC  3200               	nop2	;nop
  9952                           
  9953                           ;lcd.c: 188: LCD_Cmd(0x0);
  9954  0ECD  3000               	movlw	0
  9955  0ECE  318A  2294  318E   	fcall	_LCD_Cmd
  9956                           
  9957                           ;lcd.c: 190: LCD_Cmd(0x1);
  9958  0ED1  3001               	movlw	1
  9959  0ED2  318A  2294  318E   	fcall	_LCD_Cmd
  9960                           
  9961                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9962  0ED5  30F9               	movlw	249
  9963  0ED6  00F3               	movwf	??_LCD_Init
  9964  0ED7                     u3207:	
  9965  0ED7  3200               	nop2
  9966  0ED8  0BF3               	decfsz	??_LCD_Init,f
  9967  0ED9  2ED7               	goto	u3207
  9968  0EDA  3200               	nop2	;nop
  9969  0EDB  3200               	nop2	;nop
  9970                           
  9971                           ;lcd.c: 194: LCD_Cmd(0x0);
  9972  0EDC  3000               	movlw	0
  9973  0EDD  318A  2294  318E   	fcall	_LCD_Cmd
  9974                           
  9975                           ;lcd.c: 196: LCD_Cmd(0x6);
  9976  0EE0  3006               	movlw	6
  9977  0EE1  318A  2294  318E   	fcall	_LCD_Cmd
  9978                           
  9979                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9980  0EE4  3009               	movlw	9
  9981  0EE5  00F3               	movwf	??_LCD_Init
  9982  0EE6                     u3217:	
  9983  0EE6  0BF3               	decfsz	??_LCD_Init,f
  9984  0EE7  2EE6               	goto	u3217
  9985  0EE8  3200               	nop2	;nop
  9986                           
  9987                           ;lcd.c: 200: LCD_Cmd(0x0);
  9988  0EE9  3000               	movlw	0
  9989  0EEA  318A  2294  318E   	fcall	_LCD_Cmd
  9990                           
  9991                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9992  0EED  0875               	movf	LCD_Init@style,w
  9993  0EEE  380C               	iorlw	12
  9994  0EEF  318A  2294  318E   	fcall	_LCD_Cmd
  9995                           
  9996                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9997  0EF2  3009               	movlw	9
  9998  0EF3  00F3               	movwf	??_LCD_Init
  9999  0EF4                     u3227:	
 10000  0EF4  0BF3               	decfsz	??_LCD_Init,f
 10001  0EF5  2EF4               	goto	u3227
 10002  0EF6  3200               	nop2	;nop
 10003  0EF7  0008               	return
 10004  0EF8                     __end_of_LCD_Init:	
 10005                           
 10006                           	psect	text30
 10007  0A3A                     __ptext30:	
 10008 ;; *************** function _LCD_Clear *****************
 10009 ;; Defined at:
 10010 ;;		line 75 in file "lcd.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        0 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    2
 10031 ;; This function calls:
 10032 ;;		_LCD_Cmd
 10033 ;; This function is called by:
 10034 ;;		_SYSTEM_Initialize
 10035 ;;		_tempSetpoint
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           
 10040                           ;psect for function _LCD_Clear
 10041  0A3A                     _LCD_Clear:	
 10042                           
 10043                           ;lcd.c: 77: LCD_Cmd(0);
 10044                           
 10045                           ;incstack = 0
 10046                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10047  0A3A  3000               	movlw	0
 10048  0A3B  318A  2294  318A   	fcall	_LCD_Cmd
 10049                           
 10050                           ;lcd.c: 78: LCD_Cmd(1);
 10051  0A3E  3001               	movlw	1
 10052  0A3F  318A  2294         	fcall	_LCD_Cmd
 10053  0A41  0008               	return
 10054  0A42                     __end_of_LCD_Clear:	
 10055                           
 10056                           	psect	text31
 10057  0BB5                     __ptext31:	
 10058 ;; *************** function _InitCustomChars *****************
 10059 ;; Defined at:
 10060 ;;		line 29 in file "lcd.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;		None
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;  i               1    6[COMMON] unsigned char 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;Total ram usage:        2 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:    2
 10081 ;; This function calls:
 10082 ;;		_LCD_Cmd
 10083 ;;		_LCD_Write_Char
 10084 ;; This function is called by:
 10085 ;;		_SYSTEM_Initialize
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           
 10090                           ;psect for function _InitCustomChars
 10091  0BB5                     _InitCustomChars:	
 10092                           
 10093                           ;lcd.c: 31: uint8_t i;
 10094                           ;lcd.c: 32: LCD_Cmd(0x04);
 10095                           
 10096                           ;incstack = 0
 10097                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10098  0BB5  3004               	movlw	4
 10099  0BB6  318A  2294  318B   	fcall	_LCD_Cmd
 10100                           
 10101                           ;lcd.c: 33: LCD_Cmd(0x00);
 10102  0BB9  3000               	movlw	0
 10103  0BBA  318A  2294  318B   	fcall	_LCD_Cmd
 10104                           
 10105                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10106  0BBD  01F6               	clrf	InitCustomChars@i
 10107  0BBE  3018               	movlw	24
 10108  0BBF  0276               	subwf	InitCustomChars@i,w
 10109  0BC0  1803               	btfsc	3,0
 10110  0BC1  2BD2               	goto	l2154
 10111  0BC2                     l2148:	
 10112                           
 10113                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10114  0BC2  0876               	movf	InitCustomChars@i,w
 10115  0BC3  3EBB               	addlw	(low (___cgram| 0))& (0+255)
 10116  0BC4  0086               	movwf	6
 10117  0BC5  0187               	clrf	7
 10118  0BC6  0801               	movf	1,w
 10119  0BC7  318B  23DA  318B   	fcall	_LCD_Write_Char
 10120  0BCA  3001               	movlw	1
 10121  0BCB  00F5               	movwf	??_InitCustomChars
 10122  0BCC  0875               	movf	??_InitCustomChars,w
 10123  0BCD  07F6               	addwf	InitCustomChars@i,f
 10124  0BCE  3018               	movlw	24
 10125  0BCF  0276               	subwf	InitCustomChars@i,w
 10126  0BD0  1C03               	skipc
 10127  0BD1  2BC2               	goto	l2148
 10128  0BD2                     l2154:	
 10129                           
 10130                           ;lcd.c: 36: LCD_Cmd(0);
 10131  0BD2  3000               	movlw	0
 10132  0BD3  318A  2294  318B   	fcall	_LCD_Cmd
 10133                           
 10134                           ;lcd.c: 37: LCD_Cmd(2);
 10135  0BD6  3002               	movlw	2
 10136  0BD7  318A  2294         	fcall	_LCD_Cmd
 10137  0BD9  0008               	return
 10138  0BDA                     __end_of_InitCustomChars:	
 10139                           
 10140                           	psect	text32
 10141  0BDA                     __ptext32:	
 10142 ;; *************** function _LCD_Write_Char *****************
 10143 ;; Defined at:
 10144 ;;		line 223 in file "lcd.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  a               1    wreg     unsigned char 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  a               1    4[COMMON] unsigned char 
 10149 ;;  y               1    3[COMMON] unsigned char 
 10150 ;;  temp            1    2[COMMON] unsigned char 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;Total ram usage:        4 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:    1
 10167 ;; This function calls:
 10168 ;;		_LCD_Port
 10169 ;; This function is called by:
 10170 ;;		_InitCustomChars
 10171 ;;		_LCD_Write_String
 10172 ;;		_LCD_Write_Int
 10173 ;;		_tempSetpoint
 10174 ;;		_main
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _LCD_Write_Char
 10180  0BDA                     _LCD_Write_Char:	
 10181                           
 10182                           ;incstack = 0
 10183                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10184                           ;LCD_Write_Char@a stored from wreg
 10185  0BDA  00F4               	movwf	LCD_Write_Char@a
 10186                           
 10187                           ;lcd.c: 225: char temp,y;
 10188                           ;lcd.c: 226: temp = a&0x0F;
 10189  0BDB  0874               	movf	LCD_Write_Char@a,w
 10190  0BDC  390F               	andlw	15
 10191  0BDD  00F1               	movwf	??_LCD_Write_Char
 10192  0BDE  0871               	movf	??_LCD_Write_Char,w
 10193  0BDF  00F2               	movwf	LCD_Write_Char@temp
 10194                           
 10195                           ;lcd.c: 227: y = a&0xF0;
 10196  0BE0  0874               	movf	LCD_Write_Char@a,w
 10197  0BE1  39F0               	andlw	240
 10198  0BE2  00F1               	movwf	??_LCD_Write_Char
 10199  0BE3  0871               	movf	??_LCD_Write_Char,w
 10200  0BE4  00F3               	movwf	LCD_Write_Char@y
 10201                           
 10202                           ;lcd.c: 228: RB0 = 1;
 10203  0BE5  0020               	movlb	0	; select bank0
 10204  0BE6  140D               	bsf	13,0	;volatile
 10205                           
 10206                           ;lcd.c: 229: LCD_Port(y>>4);
 10207  0BE7  0873               	movf	LCD_Write_Char@y,w
 10208  0BE8  00F1               	movwf	??_LCD_Write_Char
 10209  0BE9  3004               	movlw	4
 10210  0BEA                     u1705:	
 10211  0BEA  36F1               	lsrf	??_LCD_Write_Char,f
 10212  0BEB  0B89               	decfsz	9,f
 10213  0BEC  2BEA               	goto	u1705
 10214  0BED  0871               	movf	??_LCD_Write_Char,w
 10215  0BEE  318A  22BC  318B   	fcall	_LCD_Port
 10216                           
 10217                           ;lcd.c: 230: RB1 = 1;
 10218  0BF1  0020               	movlb	0	; select bank0
 10219  0BF2  148D               	bsf	13,1	;volatile
 10220                           
 10221                           ;lcd.c: 231: RB1 = 0;
 10222  0BF3  108D               	bcf	13,1	;volatile
 10223                           
 10224                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10225  0BF4  3003               	movlw	3
 10226  0BF5  00F1               	movwf	??_LCD_Write_Char
 10227  0BF6                     u3237:	
 10228  0BF6  0BF1               	decfsz	??_LCD_Write_Char,f
 10229  0BF7  2BF6               	goto	u3237
 10230                           
 10231                           ;lcd.c: 233: LCD_Port(temp);
 10232  0BF8  0872               	movf	LCD_Write_Char@temp,w
 10233  0BF9  318A  22BC  318B   	fcall	_LCD_Port
 10234                           
 10235                           ;lcd.c: 234: RB1 = 1;
 10236  0BFC  0020               	movlb	0	; select bank0
 10237  0BFD  148D               	bsf	13,1	;volatile
 10238                           
 10239                           ;lcd.c: 235: RB1 = 0;
 10240  0BFE  108D               	bcf	13,1	;volatile
 10241                           
 10242                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10243  0BFF  3003               	movlw	3
 10244  0C00  00F1               	movwf	??_LCD_Write_Char
 10245  0C01                     u3247:	
 10246  0C01  0BF1               	decfsz	??_LCD_Write_Char,f
 10247  0C02  2C01               	goto	u3247
 10248  0C03  0008               	return
 10249  0C04                     __end_of_LCD_Write_Char:	
 10250                           
 10251                           	psect	text33
 10252  0A94                     __ptext33:	
 10253 ;; *************** function _LCD_Cmd *****************
 10254 ;; Defined at:
 10255 ;;		line 65 in file "lcd.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  a               1    wreg     unsigned char 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  a               1    2[COMMON] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1    wreg      void 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0, pclath, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;Total ram usage:        2 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    1
 10276 ;; This function calls:
 10277 ;;		_LCD_Port
 10278 ;; This function is called by:
 10279 ;;		_InitCustomChars
 10280 ;;		_LCD_Clear
 10281 ;;		_LCD_Set_Cursor
 10282 ;;		_LCD_Init
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           
 10287                           ;psect for function _LCD_Cmd
 10288  0A94                     _LCD_Cmd:	
 10289                           
 10290                           ;incstack = 0
 10291                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10292                           ;LCD_Cmd@a stored from wreg
 10293  0A94  00F2               	movwf	LCD_Cmd@a
 10294                           
 10295                           ;lcd.c: 67: RB0 = 0;
 10296  0A95  0020               	movlb	0	; select bank0
 10297  0A96  100D               	bcf	13,0	;volatile
 10298                           
 10299                           ;lcd.c: 68: LCD_Port(a);
 10300  0A97  0872               	movf	LCD_Cmd@a,w
 10301  0A98  318A  22BC  318A   	fcall	_LCD_Port
 10302                           
 10303                           ;lcd.c: 69: RB1 = 1;
 10304  0A9B  0020               	movlb	0	; select bank0
 10305  0A9C  148D               	bsf	13,1	;volatile
 10306                           
 10307                           ;lcd.c: 70: RB1 = 0;
 10308  0A9D  108D               	bcf	13,1	;volatile
 10309                           
 10310                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10311  0A9E  30F9               	movlw	249
 10312  0A9F  00F1               	movwf	??_LCD_Cmd
 10313  0AA0                     u3257:	
 10314  0AA0  0000               	nop
 10315  0AA1  0BF1               	decfsz	??_LCD_Cmd,f
 10316  0AA2  2AA0               	goto	u3257
 10317  0AA3  3200               	nop2	;nop
 10318  0AA4  0000               	nop
 10319  0AA5  0008               	return
 10320  0AA6                     __end_of_LCD_Cmd:	
 10321                           
 10322                           	psect	text34
 10323  0ABC                     __ptext34:	
 10324 ;; *************** function _LCD_Port *****************
 10325 ;; Defined at:
 10326 ;;		line 41 in file "lcd.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  a               1    wreg     unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  a               1    0[COMMON] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;Total ram usage:        1 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_LCD_Cmd
 10350 ;;		_LCD_Init
 10351 ;;		_LCD_Write_Char
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           
 10356                           ;psect for function _LCD_Port
 10357  0ABC                     _LCD_Port:	
 10358                           
 10359                           ;incstack = 0
 10360                           ; Regs used in _LCD_Port: [wreg]
 10361                           ;LCD_Port@a stored from wreg
 10362  0ABC  00F0               	movwf	LCD_Port@a
 10363                           
 10364                           ;lcd.c: 43: if(a & 1)
 10365  0ABD  1C70               	btfss	LCD_Port@a,0
 10366  0ABE  2AC2               	goto	l28
 10367                           
 10368                           ;lcd.c: 44: RB2 = 1;
 10369  0ABF  0020               	movlb	0	; select bank0
 10370  0AC0  150D               	bsf	13,2	;volatile
 10371  0AC1  2AC4               	goto	l1850
 10372  0AC2                     l28:	
 10373                           
 10374                           ;lcd.c: 45: else
 10375                           ;lcd.c: 46: RB2 = 0;
 10376  0AC2  0020               	movlb	0	; select bank0
 10377  0AC3  110D               	bcf	13,2	;volatile
 10378  0AC4                     l1850:	
 10379                           
 10380                           ;lcd.c: 48: if(a & 2)
 10381  0AC4  1CF0               	btfss	LCD_Port@a,1
 10382  0AC5  2AC8               	goto	l30
 10383                           
 10384                           ;lcd.c: 49: RB3 = 1;
 10385  0AC6  158D               	bsf	13,3	;volatile
 10386  0AC7  2AC9               	goto	l1854
 10387  0AC8                     l30:	
 10388                           
 10389                           ;lcd.c: 50: else
 10390                           ;lcd.c: 51: RB3 = 0;
 10391  0AC8  118D               	bcf	13,3	;volatile
 10392  0AC9                     l1854:	
 10393                           
 10394                           ;lcd.c: 53: if(a & 4)
 10395  0AC9  1D70               	btfss	LCD_Port@a,2
 10396  0ACA  2ACD               	goto	l32
 10397                           
 10398                           ;lcd.c: 54: RB4 = 1;
 10399  0ACB  160D               	bsf	13,4	;volatile
 10400  0ACC  2ACE               	goto	l1858
 10401  0ACD                     l32:	
 10402                           
 10403                           ;lcd.c: 55: else
 10404                           ;lcd.c: 56: RB4 = 0;
 10405  0ACD  120D               	bcf	13,4	;volatile
 10406  0ACE                     l1858:	
 10407                           
 10408                           ;lcd.c: 58: if(a & 8)
 10409  0ACE  1DF0               	btfss	LCD_Port@a,3
 10410  0ACF  2AD2               	goto	l34
 10411                           
 10412                           ;lcd.c: 59: RB5 = 1;
 10413  0AD0  168D               	bsf	13,5	;volatile
 10414  0AD1  0008               	return
 10415  0AD2                     l34:	
 10416                           
 10417                           ;lcd.c: 60: else
 10418                           ;lcd.c: 61: RB5 = 0;
 10419  0AD2  128D               	bcf	13,5	;volatile
 10420  0AD3  0008               	return
 10421  0AD4                     __end_of_LCD_Port:	
 10422                           
 10423                           	psect	text35
 10424  0AEC                     __ptext35:	
 10425 ;; *************** function _ADCC_Initialize *****************
 10426 ;; Defined at:
 10427 ;;		line 5 in file "adcc.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;		None
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;Total ram usage:        0 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_SYSTEM_Initialize
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           
 10455                           ;psect for function _ADCC_Initialize
 10456  0AEC                     _ADCC_Initialize:	
 10457                           
 10458                           ;adcc.c: 9: ADCON1 = 0x00;
 10459                           
 10460                           ;incstack = 0
 10461                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10462  0AEC  0021               	movlb	1	; select bank1
 10463  0AED  0194               	clrf	20	;volatile
 10464                           
 10465                           ;adcc.c: 11: ADCON2 = 0x00;
 10466  0AEE  0195               	clrf	21	;volatile
 10467                           
 10468                           ;adcc.c: 13: ADCON3 = 0x00;
 10469  0AEF  0196               	clrf	22	;volatile
 10470                           
 10471                           ;adcc.c: 15: ADACT = 0x00;
 10472  0AF0  0199               	clrf	25	;volatile
 10473                           
 10474                           ;adcc.c: 17: ADSTAT = 0x00;
 10475  0AF1  0197               	clrf	23	;volatile
 10476                           
 10477                           ;adcc.c: 19: ADCLK = 0x0F;
 10478  0AF2  300F               	movlw	15
 10479  0AF3  0098               	movwf	24	;volatile
 10480                           
 10481                           ;adcc.c: 22: ADREF = 0x00;
 10482  0AF4  019A               	clrf	26	;volatile
 10483                           
 10484                           ;adcc.c: 24: ADCAP = 0x00;
 10485  0AF5  019B               	clrf	27	;volatile
 10486                           
 10487                           ;adcc.c: 26: ADPRE = 0x00;
 10488  0AF6  019C               	clrf	28	;volatile
 10489                           
 10490                           ;adcc.c: 28: ADACQ = 0x00;
 10491  0AF7  019D               	clrf	29	;volatile
 10492                           
 10493                           ;adcc.c: 30: ADPCH = 0x00;
 10494  0AF8  019E               	clrf	30	;volatile
 10495                           
 10496                           ;adcc.c: 32: ADRPT = 0x00;
 10497  0AF9  0022               	movlb	2	; select bank2
 10498  0AFA  018D               	clrf	13	;volatile
 10499                           
 10500                           ;adcc.c: 34: ADLTHL = 0x00;
 10501  0AFB  018E               	clrf	14	;volatile
 10502                           
 10503                           ;adcc.c: 36: ADLTHH = 0x00;
 10504  0AFC  018F               	clrf	15	;volatile
 10505                           
 10506                           ;adcc.c: 38: ADUTHL = 0x00;
 10507  0AFD  0190               	clrf	16	;volatile
 10508                           
 10509                           ;adcc.c: 40: ADUTHH = 0x00;
 10510  0AFE  0191               	clrf	17	;volatile
 10511                           
 10512                           ;adcc.c: 42: ADSTPTL = 0x00;
 10513  0AFF  0192               	clrf	18	;volatile
 10514                           
 10515                           ;adcc.c: 44: ADSTPTH = 0x00;
 10516  0B00  0193               	clrf	19	;volatile
 10517                           
 10518                           ;adcc.c: 47: ADCON0 = 0x84;
 10519  0B01  3084               	movlw	132
 10520  0B02  0021               	movlb	1	; select bank1
 10521  0B03  0093               	movwf	19	;volatile
 10522  0B04  0008               	return
 10523  0B05                     __end_of_ADCC_Initialize:	
 10524                           
 10525                           	psect	text36
 10526  0AA6                     __ptext36:	
 10527 ;; *************** function _PWM6_LoadDutyValue *****************
 10528 ;; Defined at:
 10529 ;;		line 15 in file "pwm6.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  dutyValue       2    0[COMMON] unsigned int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      void 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;Total ram usage:        4 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_main
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556                           
 10557                           ;psect for function _PWM6_LoadDutyValue
 10558  0AA6                     _PWM6_LoadDutyValue:	
 10559                           
 10560                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10561                           
 10562                           ;incstack = 0
 10563                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10564  0AA6  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10565  0AA7  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10566  0AA8  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10567  0AA9  00F2               	movwf	??_PWM6_LoadDutyValue
 10568  0AAA  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10569  0AAB  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10570  0AAC  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10571  0AAD  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10572  0AAE  0872               	movf	??_PWM6_LoadDutyValue,w
 10573  0AAF  0027               	movlb	7	; select bank7
 10574  0AB0  008D               	movwf	13	;volatile
 10575                           
 10576                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10577  0AB1  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10578  0AB2  3903               	andlw	3
 10579  0AB3  00F2               	movwf	??_PWM6_LoadDutyValue
 10580  0AB4  3005               	movlw	5
 10581  0AB5                     u2585:	
 10582  0AB5  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10583  0AB6  3EFF               	addlw	-1
 10584  0AB7  1D03               	skipz
 10585  0AB8  2AB5               	goto	u2585
 10586  0AB9  3572               	lslf	??_PWM6_LoadDutyValue,w
 10587  0ABA  008C               	movwf	12	;volatile
 10588  0ABB  0008               	return
 10589  0ABC                     __end_of_PWM6_LoadDutyValue:	
 10590                           
 10591                           	psect	text37
 10592  0A77                     __ptext37:	
 10593 ;; *************** function _ADCC_GetSingleConversion *****************
 10594 ;; Defined at:
 10595 ;;		line 53 in file "adcc.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  channel         1    wreg     enum E13559
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  channel         1    3[COMMON] enum E13559
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  2    0[COMMON] unsigned int 
 10602 ;; Registers used:
 10603 ;;		wreg
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;Total ram usage:        4 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_main
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           
 10623                           ;psect for function _ADCC_GetSingleConversion
 10624  0A77                     _ADCC_GetSingleConversion:	
 10625                           
 10626                           ;incstack = 0
 10627                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 10628                           ;ADCC_GetSingleConversion@channel stored from wreg
 10629  0A77  00F3               	movwf	ADCC_GetSingleConversion@channel
 10630                           
 10631                           ;adcc.c: 56: ADPCH = channel;
 10632  0A78  0873               	movf	ADCC_GetSingleConversion@channel,w
 10633  0A79  0021               	movlb	1	; select bank1
 10634  0A7A  009E               	movwf	30	;volatile
 10635                           
 10636                           ;adcc.c: 59: ADCON0bits.ADON = 1;
 10637  0A7B  1793               	bsf	19,7	;volatile
 10638                           
 10639                           ;adcc.c: 62: ADCON0bits.ADCONT = 0;
 10640  0A7C  1313               	bcf	19,6	;volatile
 10641                           
 10642                           ;adcc.c: 65: ADCON0bits.ADGO = 1;
 10643  0A7D  1413               	bsf	19,0	;volatile
 10644  0A7E                     l225:	
 10645                           ;adcc.c: 69: {
 10646                           
 10647                           ;adcc.c: 68: while (ADCON0bits.ADGO)
 10648                           
 10649  0A7E  1813               	btfsc	19,0	;volatile
 10650  0A7F  2A7E               	goto	l225
 10651                           
 10652                           ;adcc.c: 70: }
 10653                           ;adcc.c: 73: return ((ADRESH << 8) + ADRESL);
 10654  0A80  080D               	movf	13,w	;volatile
 10655  0A81  00F1               	movwf	?_ADCC_GetSingleConversion+1
 10656  0A82  080C               	movf	12,w	;volatile
 10657  0A83  00F0               	movwf	?_ADCC_GetSingleConversion
 10658  0A84  0008               	return
 10659  0A85                     __end_of_ADCC_GetSingleConversion:	
 10660  007E                     btemp	set	126	;btemp
 10661  007E                     wtemp	set	126
 10662  007E                     wtemp0	set	126
 10663  0080                     wtemp1	set	128
 10664  0082                     wtemp2	set	130
 10665  0084                     wtemp3	set	132
 10666  0086                     wtemp4	set	134
 10667  0088                     wtemp5	set	136
 10668  007F                     wtemp6	set	127
 10669  007E                     ttemp	set	126
 10670  007E                     ttemp0	set	126
 10671  0081                     ttemp1	set	129
 10672  0084                     ttemp2	set	132
 10673  0087                     ttemp3	set	135
 10674  007F                     ttemp4	set	127
 10675  007E                     ltemp	set	126
 10676  007E                     ltemp0	set	126
 10677  0082                     ltemp1	set	130
 10678  0086                     ltemp2	set	134
 10679  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        25
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      66
    BANK1            80     27      53
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___fttol
    _tempSetpoint->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___wmul->___fttol
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _tempSetpoint->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftge->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   39786
                                             45 BANK0     10    10      0
                                              0 BANK1     27    27      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    3849
                                             14 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     427
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1     751
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15656
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6623
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2509
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     640
                                             29 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3540
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3367
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     138
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___fttol (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
   ___fttol
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   ___wmul
     ___fttol (ARG)
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
         ___fttol (ARG)
     _frexp
   _readButtons
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1B      35       7       66.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      85      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      85      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Sep 07 15:22:41 2017

                      __CFG_CP$OFF 0000                                 l30 0AC8  
                               l32 0ACD                                 l34 0AD2  
                               l28 0AC2                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0022        __size_of_PWM6_LoadDutyValue 0016  
                     ___ftadd@exp1 003C                       ___ftadd@exp2 003B  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 003A  
                              l225 0A7E                                l322 059A  
                              l323 05A6                                l416 0B42  
                              l471 0F09                                l608 0443  
                              l584 0E5E                                l585 0E66  
                              l577 0E4B                                l668 0FE6  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RA3 0063  
                              _RB2 006A                                _RA4 0064  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _log 00C0                       ___awmod@sign 0076  
                  _TMR2_Initialize 0A85                       __CFG_BORV$LO 0000  
                              wreg 0009                    __end_of_LCD_Cmd 0AA6  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 002A  
                   _LCD_Set_Cursor 0CE4                       ___ftdiv@sign 002F  
                             l2002 0D3A                               l2004 0D46  
                             l2012 0D5B                               l2030 03D3  
                             l2102 019A                               l2016 0D63  
                             l2008 0D52                               l2026 03CC  
                             l2130 01F9                               l2114 01D5  
                             l2060 0422                               l2036 03E2  
                             l2054 040F                               l2126 01F1  
                             l2118 01DD                               l2072 0455  
                             l2056 0419                               l2048 03FC  
                             l2232 02FC                               l2154 0BD2  
                             l2066 0435                               l2058 041E  
                             l2402 0CBF                               l2250 0339  
                             l2242 0303                               l2218 0B21  
                             l2148 0BC2                               l2076 0467  
                             l2068 043F                               l2260 0357  
                             l2252 0342                               l2244 0330  
                             l2086 0482                               l2406 0CD5  
                             l2262 0383                               l2254 0353  
                             l2096 0184                               l2168 0D04  
                             l2248 0334                               l2610 0F71  
                             l2602 0F58                               l2426 0C7F  
                             l2266 0390                               l2522 0281  
                             l2514 0227                               l2620 002E  
                             l2444 0E12                               l2516 0276  
                             l2606 0F63                               l2710 0FF7  
                             l2374 0BA3                               l2542 02C1  
                             l2640 0085                               l2704 0FDD  
                             l2384 0BB3                               l2376 0BA4  
                             l1850 0AC4                               l2626 0044  
                             l2706 0FE9                               l2394 0B7D  
                             l2564 00EF                               l1854 0AC9  
                             l1870 0E28                               l1926 0B3C  
                             l2558 00DE                               l2494 0237  
                             l2750 0565                               l2592 0F2A  
                             l2584 0F1A                               l1880 0E50  
                             l1872 0E32                               l2648 009E  
                             l1952 0D7D                               l2832 07CC  
                             l2760 058E                               l1858 0ACE  
                             l2594 0F38                               l1882 0E58  
                             l1874 0E37                               l1866 0E21  
                             l1970 0DA3                               l1962 0D85  
                             l1946 0D72                               l2738 04B4  
                             l2668 0B5D                               l1964 0D91  
                             l2780 0606                               l2772 05D8  
                             l2678 0F92                               l1974 0DAC  
                             l1990 0D2D                               l2782 0608  
                             l2774 05DC                               l2766 05B0  
                             l2696 0FC2                               l2698 0FD0  
                             l1978 0DB4                               l1994 0D34  
                             ?_log 0047                               STR_1 101B  
                             STR_2 101B                               STR_3 1025  
                             u2035 03FD                               u2125 0436  
                             u2205 01B6                               u3005 05A0  
                             _LATA 0016                               _LATB 0017  
                             _LATC 0018                               u2065 0410  
                             u2225 01DE                               u3107 0C4F  
                             u2235 01E4                               u3117 0C5B  
                             u1605 0E2D                               u2325 0CF0  
                             u3207 0ED7                               u3127 0C67  
                             u2095 0423                               u2360 02E6  
                             u1705 0BEA                               u3217 0EE6  
                             u3137 0E86                               u1625 0E46  
                             u2265 01FA                               u2345 0D0F  
                             u2425 0371                               u2450 0C34  
                             _T2PR 028D                               u3227 0EF4  
                             u3147 0E93                               u2275 0200  
                             u2195 01A6                               u3237 0BF6  
                             u3157 0E9E                               u1645 0E53  
                             u1725 0B43                               u1805 0D92  
                             u3077 026D                               u3247 0C01  
                             u3167 0EA7                               u1735 0B48  
                             u1815 0D9C                               u3087 02B9  
                             u3257 0AA0                               u3177 0EB0  
                             u1825 0DA4                               u1905 0D4C  
                             u3097 02D1                        main@counter 00AA  
                             u3187 0EBD                               u2715 0F39  
                             u1915 0D53                               u3197 0ECA  
                             u2725 0F4D                               u1685 0E6D  
                             u2805 0086                               u2735 0F59  
                             u2815 0095                               u2585 0AB5  
                             u2825 009F                               u2905 0FC3  
                             u1785 0D88                               u1885 0D3D  
                             u2695 0F2D                               u2935 0FDE  
                             u2785 0056                               u2795 0066  
                             u2875 0F99                               u2995 0594  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                ?_LCD_Write_String 0075                               _main 049A  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                 ??_LCD_Write_String 0077  
                             ttemp 007E                               wtemp 007E  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 02DB  
                     ___ftmul@sign 002F                       ___fttol@exp1 007D  
                            ??_log 004A                       ___fttol@lval 0079  
                 __end_of_LCD_Init 0EF8                   __end_of_LCD_Port 0AD4  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 0A4A                    __end_of___aldiv 0F7A  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0DB9  
                            _ADPRE 009C                    __end_of___ftadd 049A  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0D68  
                            _ADRPT 010D                    __end_of___ftdiv 00C0  
                  __end_of___ftneg 0A52                    __end_of___ftmul 0221  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0B73  
                  __end_of___fttol 1000                              _T2CON 028E  
              main@readTemperature 00B6                              _T2HLT 028F  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0A6A  
           __end_of_LCD_Set_Cursor 0D23                      ___awtoft@sign 007D  
                            _frexp 0C6D                              _errno 005C  
                    ___ftpack@sign 0074                              main@R 00A0  
                   __CFG_BOREN$OFF 0000                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0076                     ?_LCD_Write_Int 0079  
                   _LCD_Write_Char 0BDA                    __initialization 07D3  
                      log@exponent 004B                       __end_of_main 07D3  
          __end_of_TMR2_Initialize 0A94                             ??_main 004D  
                    ___fttol@sign1 0078                  __end_of_LCD_Clear 0A42  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0B93  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0E7D  
                 __end_of___lbtoft 0B1F                 __CFG_RSTOSC$HFINT1 0000  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0017  
                           _OSCFRQ 0893             __end_of_LCD_Write_Char 0C04  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0CA8             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 0B39  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074            __end_of_PWM6_Initialize 0A77  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 0AEC  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00B8                    _InitCustomChars 0BB5  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                _SYSTEM_Initialize 0C36                   __end_oflog@coeff 101B  
          __end_of__initialization 07FD                          ?_LCD_Init 0070  
                        ?_LCD_Port 0070                         ___ftadd@f1 0030  
                       ___ftadd@f2 0033                         ___ftge@ff1 003D  
                       ___ftge@ff2 0040                    ??_LCD_Write_Int 0020  
               ?_SYSTEM_Initialize 0070                       eval_poly@res 0044  
                       ___ftdiv@f1 0023                         ___ftdiv@f2 0020  
                       ___ftdiv@f3 002B                    ?_LCD_Write_Char 0070  
                       ___ftneg@f1 0070                      LCD_Init@style 0075  
                       ___awtoft@c 0078                         ___lbtoft@c 007B  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
                       ___ftsub@f1 0040                         ___ftsub@f2 003D  
                       ___fttol@f1 0070                     __pcstackCOMMON 0070  
                        LCD_Port@a 0070                       __pidataBANK0 0A39  
                     __pidataBANK1 0AD4                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0CA8                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0022  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0C6D  
                       __pbssBANK0 0057                         __pbssBANK1 00D3  
               __size_of_eval_poly 0060                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070                         __pmaintext 049A  
                          ?___ftge 003D                            ?___wmul 0020  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 0B05  
       __end_of_PWM6_LoadDutyValue 0ABC          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0BDA  
                          _LCD_Cmd 0A94                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0EF8                            ___cgram 00BB  
                  __size_of___ftge 003C                            ___awdiv 0D68  
                          ___ftadd 03A4                            ___awmod 0D23  
                          ___ftdiv 0017                            ___ftneg 0A4A  
                  __size_of___wmul 001C                            ___ftmul 016D  
                          ___ftsub 0B55                            ___fttol 0F7A  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 0020                  __end_of_eval_poly 0E19  
                 ??_LCD_Set_Cursor 0074                            __ptext1 0221  
                          __ptext2 0B93                            __ptext3 0B1F  
                          __ptext4 02DB                            __ptext5 0D23  
                          __ptext6 0D68                            __ptext7 0CE4  
                          __ptext8 00C0                            __ptext9 0C6D  
                       ??___lwtoft 007B              _OSCILLATOR_Initialize 0A42  
                        _T2CONbits 028E                       __size_of_log 00AD  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _upCount 0060  
                          _samples 238C                          _LCD_Clear 0A3A  
       __size_of_SYSTEM_Initialize 0037                            clrloop0 0A53  
             end_of_initialization 07FD                     main@outCurrent 00B4  
                          init_ram 0A5E                            initloop 0A5F  
                   ??_tempSetpoint 002E                   ___aldiv@quotient 0022  
                LCD_Write_Int@sign 007D                tempSetpoint@counter 0031  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0A85              __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                         main@minute 00A8  
                __size_of_LCD_Init 007B                  __size_of_LCD_Port 0018  
                       main@totals 00AE                        ___ftmul@exp 002A  
                   __end_of___ftge 0CE4                     __end_of___wmul 0B55  
                 _LCD_Write_String 0B1F             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07D3                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 016D  
                       frexp@value 0070           LCD_Write_Int@fieldLength 007B  
            __end_of_LCD_Write_Int 03A4                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 007E  
                      __pdataBANK0 0061                        __pdataBANK1 00BB  
                    ??_readButtons 0070                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0A77  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 02DB                 _PWM6_LoadDutyValue 0AA6  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070             _PIN_MANAGER_Initialize 0C04  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 0070  
                  main@displayTemp 00A6               ??_PWM6_LoadDutyValue 0072  
                        _downCount 005E                          _eval_poly 0DB9  
              __end_of_readButtons 0BB5           __size_of_PWM6_Initialize 000D  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
           main@readTemperatureOld 00B2                    ___aldiv@divisor 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0E7D  
                   ___wmul@product 0024                           _LCD_Port 0ABC  
                        clear_ram0 0A52                           _PIE0bits 0716  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0020                         ?_eval_poly 003D  
                 __size_of_LCD_Cmd 0012           __end_of_LCD_Write_String 0B39  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
             main@firstTimeThrough 00AC            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 002C                     LCD_Write_Int@j 002A  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0008  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0086                        _readButtons 0B93  
                         ___awtoft 0B73                           ___ftpack 0E19  
                         ___lbtoft 0B05              __size_of_tempSetpoint 00BA  
                         ___lwtoft 0004           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 00D3                           _main$957 00A3  
                      _oldSetpoint 005F                           __ptext10 0DB9  
                         __ptext11 0B39                           __ptext20 0A4A  
                         __ptext12 016D                           __ptext21 0017  
                         __ptext13 0CA8                           __ptext30 0A3A  
                         __ptext22 0E19                           __ptext14 0B73  
                         __ptext31 0BB5                           __ptext23 0EF8  
                         __ptext15 0004                           __ptext32 0BDA  
                         __ptext24 0C36                           __ptext16 0B05  
                         __ptext33 0A94                           __ptext25 0A85  
                         __ptext17 0F7A                           __ptext34 0ABC  
                         __ptext26 0A6A                           __ptext18 0B55  
                         __ptext35 0AEC                           __ptext27 0C04  
                         __ptext19 03A4                           __ptext36 0AA6  
                         __ptext28 0A42                           __ptext37 0A77  
                         __ptext29 0E7D            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13684 0057  
                ??_PWM6_Initialize 0070                      __size_of_main 0339  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 0221  
       ??_ADCC_GetSingleConversion 0073                           _setpoint 0061  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
                 main@startupTimer 00AD                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0C36                  ??_ADCC_Initialize 0070  
                ??_InitCustomChars 0075  
