

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Sep 07 20:15:02 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5BC,52
    59                           	dabs	1,0x238C,0,_samples
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  020F                     	;# 
   170  020F                     	;# 
   171  0210                     	;# 
   172  0210                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0218                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028D                     	;# 
   199  028E                     	;# 
   200  028F                     	;# 
   201  0290                     	;# 
   202  0290                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0296                     	;# 
   212  0297                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031C                     	;# 
   244  031D                     	;# 
   245  031E                     	;# 
   246  031F                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0390                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  040C                     	;# 
   254  040D                     	;# 
   255  040E                     	;# 
   256  040F                     	;# 
   257  0410                     	;# 
   258  0411                     	;# 
   259  0416                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041A                     	;# 
   267  041B                     	;# 
   268  041C                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  048C                     	;# 
   274  048C                     	;# 
   275  048D                     	;# 
   276  048E                     	;# 
   277  048F                     	;# 
   278  048F                     	;# 
   279  0490                     	;# 
   280  0491                     	;# 
   281  0492                     	;# 
   282  0492                     	;# 
   283  0493                     	;# 
   284  0494                     	;# 
   285  0495                     	;# 
   286  0495                     	;# 
   287  0496                     	;# 
   288  0497                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  050C                     	;# 
   296  050C                     	;# 
   297  050D                     	;# 
   298  050E                     	;# 
   299  050F                     	;# 
   300  050F                     	;# 
   301  0510                     	;# 
   302  0511                     	;# 
   303  0512                     	;# 
   304  0512                     	;# 
   305  0513                     	;# 
   306  0514                     	;# 
   307  0515                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  051B                     	;# 
   315  051C                     	;# 
   316  051D                     	;# 
   317  058C                     	;# 
   318  058C                     	;# 
   319  058D                     	;# 
   320  058E                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0593                     	;# 
   327  060C                     	;# 
   328  060D                     	;# 
   329  060E                     	;# 
   330  060F                     	;# 
   331  0610                     	;# 
   332  0611                     	;# 
   333  0612                     	;# 
   334  0613                     	;# 
   335  0614                     	;# 
   336  0616                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  061A                     	;# 
   341  061B                     	;# 
   342  061C                     	;# 
   343  061D                     	;# 
   344  061E                     	;# 
   345  068C                     	;# 
   346  068D                     	;# 
   347  068E                     	;# 
   348  068F                     	;# 
   349  0690                     	;# 
   350  0691                     	;# 
   351  0692                     	;# 
   352  0693                     	;# 
   353  0694                     	;# 
   354  070C                     	;# 
   355  070D                     	;# 
   356  070E                     	;# 
   357  070F                     	;# 
   358  0710                     	;# 
   359  0711                     	;# 
   360  0712                     	;# 
   361  0713                     	;# 
   362  0714                     	;# 
   363  0716                     	;# 
   364  0717                     	;# 
   365  0718                     	;# 
   366  0719                     	;# 
   367  071A                     	;# 
   368  071B                     	;# 
   369  071C                     	;# 
   370  071D                     	;# 
   371  071E                     	;# 
   372  0796                     	;# 
   373  0797                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  079B                     	;# 
   378  080C                     	;# 
   379  080D                     	;# 
   380  080E                     	;# 
   381  080F                     	;# 
   382  0810                     	;# 
   383  0811                     	;# 
   384  0812                     	;# 
   385  0813                     	;# 
   386  0814                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081D                     	;# 
   391  081E                     	;# 
   392  081F                     	;# 
   393  088C                     	;# 
   394  088D                     	;# 
   395  088E                     	;# 
   396  088F                     	;# 
   397  0890                     	;# 
   398  0891                     	;# 
   399  0892                     	;# 
   400  0893                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  089A                     	;# 
   407  089B                     	;# 
   408  090C                     	;# 
   409  090E                     	;# 
   410  090F                     	;# 
   411  091F                     	;# 
   412  091F                     	;# 
   413  098F                     	;# 
   414  098F                     	;# 
   415  0990                     	;# 
   416  0991                     	;# 
   417  0992                     	;# 
   418  0993                     	;# 
   419  0994                     	;# 
   420  0995                     	;# 
   421  0996                     	;# 
   422  0997                     	;# 
   423  0E0F                     	;# 
   424  0E10                     	;# 
   425  0E11                     	;# 
   426  0E12                     	;# 
   427  0E13                     	;# 
   428  0E14                     	;# 
   429  0E15                     	;# 
   430  0E16                     	;# 
   431  0E17                     	;# 
   432  0E18                     	;# 
   433  0E19                     	;# 
   434  0E1A                     	;# 
   435  0E1B                     	;# 
   436  0E1C                     	;# 
   437  0E1D                     	;# 
   438  0E1E                     	;# 
   439  0E1F                     	;# 
   440  0E20                     	;# 
   441  0E21                     	;# 
   442  0E22                     	;# 
   443  0E23                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E26                     	;# 
   447  0E27                     	;# 
   448  0E28                     	;# 
   449  0E29                     	;# 
   450  0E2A                     	;# 
   451  0E2B                     	;# 
   452  0E2C                     	;# 
   453  0E2D                     	;# 
   454  0E2E                     	;# 
   455  0E2F                     	;# 
   456  0E30                     	;# 
   457  0E31                     	;# 
   458  0E32                     	;# 
   459  0E33                     	;# 
   460  0E34                     	;# 
   461  0E35                     	;# 
   462  0E36                     	;# 
   463  0E37                     	;# 
   464  0E8F                     	;# 
   465  0E90                     	;# 
   466  0E91                     	;# 
   467  0E92                     	;# 
   468  0E93                     	;# 
   469  0E94                     	;# 
   470  0E95                     	;# 
   471  0E96                     	;# 
   472  0E97                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0EA1                     	;# 
   477  0EA2                     	;# 
   478  0EA3                     	;# 
   479  0EA4                     	;# 
   480  0EA5                     	;# 
   481  0EA9                     	;# 
   482  0EAA                     	;# 
   483  0EAB                     	;# 
   484  0EAC                     	;# 
   485  0EB1                     	;# 
   486  0EB2                     	;# 
   487  0EB3                     	;# 
   488  0EB8                     	;# 
   489  0EB9                     	;# 
   490  0EBA                     	;# 
   491  0EBB                     	;# 
   492  0EBC                     	;# 
   493  0EBD                     	;# 
   494  0EBE                     	;# 
   495  0EC3                     	;# 
   496  0EC5                     	;# 
   497  0EC6                     	;# 
   498  0EC7                     	;# 
   499  0EC8                     	;# 
   500  0EC9                     	;# 
   501  0ECA                     	;# 
   502  0ECB                     	;# 
   503  0ECC                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F38                     	;# 
   529  0F39                     	;# 
   530  0F3A                     	;# 
   531  0F3B                     	;# 
   532  0F3C                     	;# 
   533  0F3D                     	;# 
   534  0F3E                     	;# 
   535  0F3F                     	;# 
   536  0F40                     	;# 
   537  0F41                     	;# 
   538  0F43                     	;# 
   539  0F44                     	;# 
   540  0F45                     	;# 
   541  0F46                     	;# 
   542  0F47                     	;# 
   543  0F48                     	;# 
   544  0F49                     	;# 
   545  0F4A                     	;# 
   546  0F4B                     	;# 
   547  0F4C                     	;# 
   548  0F4E                     	;# 
   549  0F4F                     	;# 
   550  0F50                     	;# 
   551  0F51                     	;# 
   552  0F52                     	;# 
   553  0F53                     	;# 
   554  0F54                     	;# 
   555  0F55                     	;# 
   556  0F56                     	;# 
   557  0F57                     	;# 
   558  0F65                     	;# 
   559  0F68                     	;# 
   560  0F69                     	;# 
   561  0F6A                     	;# 
   562  0F6B                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  001C                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001D                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010E                     	;# 
   627  010F                     	;# 
   628  0110                     	;# 
   629  0110                     	;# 
   630  0111                     	;# 
   631  0112                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  018E                     	;# 
   668  018F                     	;# 
   669  0190                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0196                     	;# 
   673  0197                     	;# 
   674  0198                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0218                     	;# 
   698  0219                     	;# 
   699  021A                     	;# 
   700  021B                     	;# 
   701  021B                     	;# 
   702  021C                     	;# 
   703  021C                     	;# 
   704  021D                     	;# 
   705  021D                     	;# 
   706  021E                     	;# 
   707  021F                     	;# 
   708  028C                     	;# 
   709  028C                     	;# 
   710  028D                     	;# 
   711  028D                     	;# 
   712  028E                     	;# 
   713  028F                     	;# 
   714  0290                     	;# 
   715  0290                     	;# 
   716  0291                     	;# 
   717  0292                     	;# 
   718  0292                     	;# 
   719  0293                     	;# 
   720  0293                     	;# 
   721  0294                     	;# 
   722  0295                     	;# 
   723  0296                     	;# 
   724  0296                     	;# 
   725  0297                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  030C                     	;# 
   736  030C                     	;# 
   737  030D                     	;# 
   738  030E                     	;# 
   739  030F                     	;# 
   740  0310                     	;# 
   741  0310                     	;# 
   742  0311                     	;# 
   743  0312                     	;# 
   744  0313                     	;# 
   745  0314                     	;# 
   746  0314                     	;# 
   747  0315                     	;# 
   748  0316                     	;# 
   749  0317                     	;# 
   750  0318                     	;# 
   751  0318                     	;# 
   752  0319                     	;# 
   753  031A                     	;# 
   754  031B                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  031F                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0390                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  040C                     	;# 
   767  040D                     	;# 
   768  040E                     	;# 
   769  040F                     	;# 
   770  0410                     	;# 
   771  0411                     	;# 
   772  0416                     	;# 
   773  0416                     	;# 
   774  0417                     	;# 
   775  0418                     	;# 
   776  0418                     	;# 
   777  0419                     	;# 
   778  041A                     	;# 
   779  041A                     	;# 
   780  041B                     	;# 
   781  041C                     	;# 
   782  041C                     	;# 
   783  041D                     	;# 
   784  041E                     	;# 
   785  041F                     	;# 
   786  048C                     	;# 
   787  048C                     	;# 
   788  048D                     	;# 
   789  048E                     	;# 
   790  048F                     	;# 
   791  048F                     	;# 
   792  0490                     	;# 
   793  0491                     	;# 
   794  0492                     	;# 
   795  0492                     	;# 
   796  0493                     	;# 
   797  0494                     	;# 
   798  0495                     	;# 
   799  0495                     	;# 
   800  0496                     	;# 
   801  0497                     	;# 
   802  0498                     	;# 
   803  0499                     	;# 
   804  049A                     	;# 
   805  049B                     	;# 
   806  049C                     	;# 
   807  049D                     	;# 
   808  050C                     	;# 
   809  050C                     	;# 
   810  050D                     	;# 
   811  050E                     	;# 
   812  050F                     	;# 
   813  050F                     	;# 
   814  0510                     	;# 
   815  0511                     	;# 
   816  0512                     	;# 
   817  0512                     	;# 
   818  0513                     	;# 
   819  0514                     	;# 
   820  0515                     	;# 
   821  0515                     	;# 
   822  0516                     	;# 
   823  0517                     	;# 
   824  0518                     	;# 
   825  0519                     	;# 
   826  051A                     	;# 
   827  051B                     	;# 
   828  051C                     	;# 
   829  051D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060E                     	;# 
   843  060F                     	;# 
   844  0610                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0614                     	;# 
   849  0616                     	;# 
   850  0617                     	;# 
   851  0618                     	;# 
   852  0619                     	;# 
   853  061A                     	;# 
   854  061B                     	;# 
   855  061C                     	;# 
   856  061D                     	;# 
   857  061E                     	;# 
   858  068C                     	;# 
   859  068D                     	;# 
   860  068E                     	;# 
   861  068F                     	;# 
   862  0690                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0714                     	;# 
   876  0716                     	;# 
   877  0717                     	;# 
   878  0718                     	;# 
   879  0719                     	;# 
   880  071A                     	;# 
   881  071B                     	;# 
   882  071C                     	;# 
   883  071D                     	;# 
   884  071E                     	;# 
   885  0796                     	;# 
   886  0797                     	;# 
   887  0798                     	;# 
   888  0799                     	;# 
   889  079A                     	;# 
   890  079B                     	;# 
   891  080C                     	;# 
   892  080D                     	;# 
   893  080E                     	;# 
   894  080F                     	;# 
   895  0810                     	;# 
   896  0811                     	;# 
   897  0812                     	;# 
   898  0813                     	;# 
   899  0814                     	;# 
   900  081A                     	;# 
   901  081B                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  0897                     	;# 
   917  0898                     	;# 
   918  0899                     	;# 
   919  089A                     	;# 
   920  089B                     	;# 
   921  090C                     	;# 
   922  090E                     	;# 
   923  090F                     	;# 
   924  091F                     	;# 
   925  091F                     	;# 
   926  098F                     	;# 
   927  098F                     	;# 
   928  0990                     	;# 
   929  0991                     	;# 
   930  0992                     	;# 
   931  0993                     	;# 
   932  0994                     	;# 
   933  0995                     	;# 
   934  0996                     	;# 
   935  0997                     	;# 
   936  0E0F                     	;# 
   937  0E10                     	;# 
   938  0E11                     	;# 
   939  0E12                     	;# 
   940  0E13                     	;# 
   941  0E14                     	;# 
   942  0E15                     	;# 
   943  0E16                     	;# 
   944  0E17                     	;# 
   945  0E18                     	;# 
   946  0E19                     	;# 
   947  0E1A                     	;# 
   948  0E1B                     	;# 
   949  0E1C                     	;# 
   950  0E1D                     	;# 
   951  0E1E                     	;# 
   952  0E1F                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E23                     	;# 
   957  0E24                     	;# 
   958  0E25                     	;# 
   959  0E26                     	;# 
   960  0E27                     	;# 
   961  0E28                     	;# 
   962  0E29                     	;# 
   963  0E2A                     	;# 
   964  0E2B                     	;# 
   965  0E2C                     	;# 
   966  0E2D                     	;# 
   967  0E2E                     	;# 
   968  0E2F                     	;# 
   969  0E30                     	;# 
   970  0E31                     	;# 
   971  0E32                     	;# 
   972  0E33                     	;# 
   973  0E34                     	;# 
   974  0E35                     	;# 
   975  0E36                     	;# 
   976  0E37                     	;# 
   977  0E8F                     	;# 
   978  0E90                     	;# 
   979  0E91                     	;# 
   980  0E92                     	;# 
   981  0E93                     	;# 
   982  0E94                     	;# 
   983  0E95                     	;# 
   984  0E96                     	;# 
   985  0E97                     	;# 
   986  0E9C                     	;# 
   987  0E9D                     	;# 
   988  0E9E                     	;# 
   989  0EA1                     	;# 
   990  0EA2                     	;# 
   991  0EA3                     	;# 
   992  0EA4                     	;# 
   993  0EA5                     	;# 
   994  0EA9                     	;# 
   995  0EAA                     	;# 
   996  0EAB                     	;# 
   997  0EAC                     	;# 
   998  0EB1                     	;# 
   999  0EB2                     	;# 
  1000  0EB3                     	;# 
  1001  0EB8                     	;# 
  1002  0EB9                     	;# 
  1003  0EBA                     	;# 
  1004  0EBB                     	;# 
  1005  0EBC                     	;# 
  1006  0EBD                     	;# 
  1007  0EBE                     	;# 
  1008  0EC3                     	;# 
  1009  0EC5                     	;# 
  1010  0EC6                     	;# 
  1011  0EC7                     	;# 
  1012  0EC8                     	;# 
  1013  0EC9                     	;# 
  1014  0ECA                     	;# 
  1015  0ECB                     	;# 
  1016  0ECC                     	;# 
  1017  0F10                     	;# 
  1018  0F11                     	;# 
  1019  0F12                     	;# 
  1020  0F13                     	;# 
  1021  0F14                     	;# 
  1022  0F15                     	;# 
  1023  0F16                     	;# 
  1024  0F17                     	;# 
  1025  0F18                     	;# 
  1026  0F19                     	;# 
  1027  0F1A                     	;# 
  1028  0F1B                     	;# 
  1029  0F1C                     	;# 
  1030  0F1D                     	;# 
  1031  0F1E                     	;# 
  1032  0F1F                     	;# 
  1033  0F20                     	;# 
  1034  0F21                     	;# 
  1035  0F22                     	;# 
  1036  0F23                     	;# 
  1037  0F24                     	;# 
  1038  0F25                     	;# 
  1039  0F26                     	;# 
  1040  0F27                     	;# 
  1041  0F38                     	;# 
  1042  0F39                     	;# 
  1043  0F3A                     	;# 
  1044  0F3B                     	;# 
  1045  0F3C                     	;# 
  1046  0F3D                     	;# 
  1047  0F3E                     	;# 
  1048  0F3F                     	;# 
  1049  0F40                     	;# 
  1050  0F41                     	;# 
  1051  0F43                     	;# 
  1052  0F44                     	;# 
  1053  0F45                     	;# 
  1054  0F46                     	;# 
  1055  0F47                     	;# 
  1056  0F48                     	;# 
  1057  0F49                     	;# 
  1058  0F4A                     	;# 
  1059  0F4B                     	;# 
  1060  0F4C                     	;# 
  1061  0F4E                     	;# 
  1062  0F4F                     	;# 
  1063  0F50                     	;# 
  1064  0F51                     	;# 
  1065  0F52                     	;# 
  1066  0F53                     	;# 
  1067  0F54                     	;# 
  1068  0F55                     	;# 
  1069  0F56                     	;# 
  1070  0F57                     	;# 
  1071  0F65                     	;# 
  1072  0F68                     	;# 
  1073  0F69                     	;# 
  1074  0F6A                     	;# 
  1075  0F6B                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0010                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0016                     	;# 
  1107  0017                     	;# 
  1108  0018                     	;# 
  1109  001C                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001D                     	;# 
  1113  001E                     	;# 
  1114  001F                     	;# 
  1115  008C                     	;# 
  1116  008C                     	;# 
  1117  008D                     	;# 
  1118  008E                     	;# 
  1119  008E                     	;# 
  1120  008F                     	;# 
  1121  0090                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0093                     	;# 
  1125  0094                     	;# 
  1126  0095                     	;# 
  1127  0096                     	;# 
  1128  0097                     	;# 
  1129  0098                     	;# 
  1130  0099                     	;# 
  1131  009A                     	;# 
  1132  009B                     	;# 
  1133  009C                     	;# 
  1134  009D                     	;# 
  1135  009E                     	;# 
  1136  010C                     	;# 
  1137  010D                     	;# 
  1138  010E                     	;# 
  1139  010E                     	;# 
  1140  010F                     	;# 
  1141  0110                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0192                     	;# 
  1185  0196                     	;# 
  1186  0197                     	;# 
  1187  0198                     	;# 
  1188  0199                     	;# 
  1189  019A                     	;# 
  1190  019B                     	;# 
  1191  019C                     	;# 
  1192  020C                     	;# 
  1193  020D                     	;# 
  1194  020E                     	;# 
  1195  020F                     	;# 
  1196  020F                     	;# 
  1197  0210                     	;# 
  1198  0210                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0216                     	;# 
  1207  0216                     	;# 
  1208  0217                     	;# 
  1209  0217                     	;# 
  1210  0218                     	;# 
  1211  0219                     	;# 
  1212  021A                     	;# 
  1213  021B                     	;# 
  1214  021B                     	;# 
  1215  021C                     	;# 
  1216  021C                     	;# 
  1217  021D                     	;# 
  1218  021D                     	;# 
  1219  021E                     	;# 
  1220  021F                     	;# 
  1221  028C                     	;# 
  1222  028C                     	;# 
  1223  028D                     	;# 
  1224  028D                     	;# 
  1225  028E                     	;# 
  1226  028F                     	;# 
  1227  0290                     	;# 
  1228  0290                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0292                     	;# 
  1232  0293                     	;# 
  1233  0293                     	;# 
  1234  0294                     	;# 
  1235  0295                     	;# 
  1236  0296                     	;# 
  1237  0296                     	;# 
  1238  0297                     	;# 
  1239  0298                     	;# 
  1240  0298                     	;# 
  1241  0299                     	;# 
  1242  0299                     	;# 
  1243  029A                     	;# 
  1244  029B                     	;# 
  1245  029C                     	;# 
  1246  029C                     	;# 
  1247  029D                     	;# 
  1248  030C                     	;# 
  1249  030C                     	;# 
  1250  030D                     	;# 
  1251  030E                     	;# 
  1252  030F                     	;# 
  1253  0310                     	;# 
  1254  0310                     	;# 
  1255  0311                     	;# 
  1256  0312                     	;# 
  1257  0313                     	;# 
  1258  0314                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0316                     	;# 
  1262  0317                     	;# 
  1263  0318                     	;# 
  1264  0318                     	;# 
  1265  0319                     	;# 
  1266  031A                     	;# 
  1267  031B                     	;# 
  1268  031C                     	;# 
  1269  031C                     	;# 
  1270  031D                     	;# 
  1271  031E                     	;# 
  1272  031F                     	;# 
  1273  038C                     	;# 
  1274  038D                     	;# 
  1275  038E                     	;# 
  1276  0390                     	;# 
  1277  0391                     	;# 
  1278  0392                     	;# 
  1279  040C                     	;# 
  1280  040D                     	;# 
  1281  040E                     	;# 
  1282  040F                     	;# 
  1283  0410                     	;# 
  1284  0411                     	;# 
  1285  0416                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  0418                     	;# 
  1289  0418                     	;# 
  1290  0419                     	;# 
  1291  041A                     	;# 
  1292  041A                     	;# 
  1293  041B                     	;# 
  1294  041C                     	;# 
  1295  041C                     	;# 
  1296  041D                     	;# 
  1297  041E                     	;# 
  1298  041F                     	;# 
  1299  048C                     	;# 
  1300  048C                     	;# 
  1301  048D                     	;# 
  1302  048E                     	;# 
  1303  048F                     	;# 
  1304  048F                     	;# 
  1305  0490                     	;# 
  1306  0491                     	;# 
  1307  0492                     	;# 
  1308  0492                     	;# 
  1309  0493                     	;# 
  1310  0494                     	;# 
  1311  0495                     	;# 
  1312  0495                     	;# 
  1313  0496                     	;# 
  1314  0497                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049C                     	;# 
  1320  049D                     	;# 
  1321  050C                     	;# 
  1322  050C                     	;# 
  1323  050D                     	;# 
  1324  050E                     	;# 
  1325  050F                     	;# 
  1326  050F                     	;# 
  1327  0510                     	;# 
  1328  0511                     	;# 
  1329  0512                     	;# 
  1330  0512                     	;# 
  1331  0513                     	;# 
  1332  0514                     	;# 
  1333  0515                     	;# 
  1334  0515                     	;# 
  1335  0516                     	;# 
  1336  0517                     	;# 
  1337  0518                     	;# 
  1338  0519                     	;# 
  1339  051A                     	;# 
  1340  051B                     	;# 
  1341  051C                     	;# 
  1342  051D                     	;# 
  1343  058C                     	;# 
  1344  058C                     	;# 
  1345  058D                     	;# 
  1346  058E                     	;# 
  1347  058F                     	;# 
  1348  058F                     	;# 
  1349  0590                     	;# 
  1350  0591                     	;# 
  1351  0592                     	;# 
  1352  0593                     	;# 
  1353  060C                     	;# 
  1354  060D                     	;# 
  1355  060E                     	;# 
  1356  060F                     	;# 
  1357  0610                     	;# 
  1358  0611                     	;# 
  1359  0612                     	;# 
  1360  0613                     	;# 
  1361  0614                     	;# 
  1362  0616                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061D                     	;# 
  1370  061E                     	;# 
  1371  068C                     	;# 
  1372  068D                     	;# 
  1373  068E                     	;# 
  1374  068F                     	;# 
  1375  0690                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  070C                     	;# 
  1381  070D                     	;# 
  1382  070E                     	;# 
  1383  070F                     	;# 
  1384  0710                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  071A                     	;# 
  1394  071B                     	;# 
  1395  071C                     	;# 
  1396  071D                     	;# 
  1397  071E                     	;# 
  1398  0796                     	;# 
  1399  0797                     	;# 
  1400  0798                     	;# 
  1401  0799                     	;# 
  1402  079A                     	;# 
  1403  079B                     	;# 
  1404  080C                     	;# 
  1405  080D                     	;# 
  1406  080E                     	;# 
  1407  080F                     	;# 
  1408  0810                     	;# 
  1409  0811                     	;# 
  1410  0812                     	;# 
  1411  0813                     	;# 
  1412  0814                     	;# 
  1413  081A                     	;# 
  1414  081B                     	;# 
  1415  081C                     	;# 
  1416  081D                     	;# 
  1417  081E                     	;# 
  1418  081F                     	;# 
  1419  088C                     	;# 
  1420  088D                     	;# 
  1421  088E                     	;# 
  1422  088F                     	;# 
  1423  0890                     	;# 
  1424  0891                     	;# 
  1425  0892                     	;# 
  1426  0893                     	;# 
  1427  0895                     	;# 
  1428  0896                     	;# 
  1429  0897                     	;# 
  1430  0898                     	;# 
  1431  0899                     	;# 
  1432  089A                     	;# 
  1433  089B                     	;# 
  1434  090C                     	;# 
  1435  090E                     	;# 
  1436  090F                     	;# 
  1437  091F                     	;# 
  1438  091F                     	;# 
  1439  098F                     	;# 
  1440  098F                     	;# 
  1441  0990                     	;# 
  1442  0991                     	;# 
  1443  0992                     	;# 
  1444  0993                     	;# 
  1445  0994                     	;# 
  1446  0995                     	;# 
  1447  0996                     	;# 
  1448  0997                     	;# 
  1449  0E0F                     	;# 
  1450  0E10                     	;# 
  1451  0E11                     	;# 
  1452  0E12                     	;# 
  1453  0E13                     	;# 
  1454  0E14                     	;# 
  1455  0E15                     	;# 
  1456  0E16                     	;# 
  1457  0E17                     	;# 
  1458  0E18                     	;# 
  1459  0E19                     	;# 
  1460  0E1A                     	;# 
  1461  0E1B                     	;# 
  1462  0E1C                     	;# 
  1463  0E1D                     	;# 
  1464  0E1E                     	;# 
  1465  0E1F                     	;# 
  1466  0E20                     	;# 
  1467  0E21                     	;# 
  1468  0E22                     	;# 
  1469  0E23                     	;# 
  1470  0E24                     	;# 
  1471  0E25                     	;# 
  1472  0E26                     	;# 
  1473  0E27                     	;# 
  1474  0E28                     	;# 
  1475  0E29                     	;# 
  1476  0E2A                     	;# 
  1477  0E2B                     	;# 
  1478  0E2C                     	;# 
  1479  0E2D                     	;# 
  1480  0E2E                     	;# 
  1481  0E2F                     	;# 
  1482  0E30                     	;# 
  1483  0E31                     	;# 
  1484  0E32                     	;# 
  1485  0E33                     	;# 
  1486  0E34                     	;# 
  1487  0E35                     	;# 
  1488  0E36                     	;# 
  1489  0E37                     	;# 
  1490  0E8F                     	;# 
  1491  0E90                     	;# 
  1492  0E91                     	;# 
  1493  0E92                     	;# 
  1494  0E93                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0E96                     	;# 
  1498  0E97                     	;# 
  1499  0E9C                     	;# 
  1500  0E9D                     	;# 
  1501  0E9E                     	;# 
  1502  0EA1                     	;# 
  1503  0EA2                     	;# 
  1504  0EA3                     	;# 
  1505  0EA4                     	;# 
  1506  0EA5                     	;# 
  1507  0EA9                     	;# 
  1508  0EAA                     	;# 
  1509  0EAB                     	;# 
  1510  0EAC                     	;# 
  1511  0EB1                     	;# 
  1512  0EB2                     	;# 
  1513  0EB3                     	;# 
  1514  0EB8                     	;# 
  1515  0EB9                     	;# 
  1516  0EBA                     	;# 
  1517  0EBB                     	;# 
  1518  0EBC                     	;# 
  1519  0EBD                     	;# 
  1520  0EBE                     	;# 
  1521  0EC3                     	;# 
  1522  0EC5                     	;# 
  1523  0EC6                     	;# 
  1524  0EC7                     	;# 
  1525  0EC8                     	;# 
  1526  0EC9                     	;# 
  1527  0ECA                     	;# 
  1528  0ECB                     	;# 
  1529  0ECC                     	;# 
  1530  0F10                     	;# 
  1531  0F11                     	;# 
  1532  0F12                     	;# 
  1533  0F13                     	;# 
  1534  0F14                     	;# 
  1535  0F15                     	;# 
  1536  0F16                     	;# 
  1537  0F17                     	;# 
  1538  0F18                     	;# 
  1539  0F19                     	;# 
  1540  0F1A                     	;# 
  1541  0F1B                     	;# 
  1542  0F1C                     	;# 
  1543  0F1D                     	;# 
  1544  0F1E                     	;# 
  1545  0F1F                     	;# 
  1546  0F20                     	;# 
  1547  0F21                     	;# 
  1548  0F22                     	;# 
  1549  0F23                     	;# 
  1550  0F24                     	;# 
  1551  0F25                     	;# 
  1552  0F26                     	;# 
  1553  0F27                     	;# 
  1554  0F38                     	;# 
  1555  0F39                     	;# 
  1556  0F3A                     	;# 
  1557  0F3B                     	;# 
  1558  0F3C                     	;# 
  1559  0F3D                     	;# 
  1560  0F3E                     	;# 
  1561  0F3F                     	;# 
  1562  0F40                     	;# 
  1563  0F41                     	;# 
  1564  0F43                     	;# 
  1565  0F44                     	;# 
  1566  0F45                     	;# 
  1567  0F46                     	;# 
  1568  0F47                     	;# 
  1569  0F48                     	;# 
  1570  0F49                     	;# 
  1571  0F4A                     	;# 
  1572  0F4B                     	;# 
  1573  0F4C                     	;# 
  1574  0F4E                     	;# 
  1575  0F4F                     	;# 
  1576  0F50                     	;# 
  1577  0F51                     	;# 
  1578  0F52                     	;# 
  1579  0F53                     	;# 
  1580  0F54                     	;# 
  1581  0F55                     	;# 
  1582  0F56                     	;# 
  1583  0F57                     	;# 
  1584  0F65                     	;# 
  1585  0F68                     	;# 
  1586  0F69                     	;# 
  1587  0F6A                     	;# 
  1588  0F6B                     	;# 
  1589  0FE4                     	;# 
  1590  0FE5                     	;# 
  1591  0FE6                     	;# 
  1592  0FE7                     	;# 
  1593  0FE8                     	;# 
  1594  0FE9                     	;# 
  1595  0FEA                     	;# 
  1596  0FEB                     	;# 
  1597  0FED                     	;# 
  1598  0FEE                     	;# 
  1599  0FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000D                     	;# 
  1614  000E                     	;# 
  1615  0010                     	;# 
  1616  0011                     	;# 
  1617  0012                     	;# 
  1618  0013                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  001C                     	;# 
  1623  001C                     	;# 
  1624  001D                     	;# 
  1625  001D                     	;# 
  1626  001E                     	;# 
  1627  001F                     	;# 
  1628  008C                     	;# 
  1629  008C                     	;# 
  1630  008D                     	;# 
  1631  008E                     	;# 
  1632  008E                     	;# 
  1633  008F                     	;# 
  1634  0090                     	;# 
  1635  0090                     	;# 
  1636  0091                     	;# 
  1637  0093                     	;# 
  1638  0094                     	;# 
  1639  0095                     	;# 
  1640  0096                     	;# 
  1641  0097                     	;# 
  1642  0098                     	;# 
  1643  0099                     	;# 
  1644  009A                     	;# 
  1645  009B                     	;# 
  1646  009C                     	;# 
  1647  009D                     	;# 
  1648  009E                     	;# 
  1649  010C                     	;# 
  1650  010D                     	;# 
  1651  010E                     	;# 
  1652  010E                     	;# 
  1653  010F                     	;# 
  1654  0110                     	;# 
  1655  0110                     	;# 
  1656  0111                     	;# 
  1657  0112                     	;# 
  1658  0112                     	;# 
  1659  0113                     	;# 
  1660  0114                     	;# 
  1661  0114                     	;# 
  1662  0115                     	;# 
  1663  0116                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  018C                     	;# 
  1692  018D                     	;# 
  1693  018E                     	;# 
  1694  018F                     	;# 
  1695  0190                     	;# 
  1696  0191                     	;# 
  1697  0192                     	;# 
  1698  0196                     	;# 
  1699  0197                     	;# 
  1700  0198                     	;# 
  1701  0199                     	;# 
  1702  019A                     	;# 
  1703  019B                     	;# 
  1704  019C                     	;# 
  1705  020C                     	;# 
  1706  020D                     	;# 
  1707  020E                     	;# 
  1708  020F                     	;# 
  1709  020F                     	;# 
  1710  0210                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0213                     	;# 
  1716  0214                     	;# 
  1717  0215                     	;# 
  1718  0215                     	;# 
  1719  0216                     	;# 
  1720  0216                     	;# 
  1721  0217                     	;# 
  1722  0217                     	;# 
  1723  0218                     	;# 
  1724  0219                     	;# 
  1725  021A                     	;# 
  1726  021B                     	;# 
  1727  021B                     	;# 
  1728  021C                     	;# 
  1729  021C                     	;# 
  1730  021D                     	;# 
  1731  021D                     	;# 
  1732  021E                     	;# 
  1733  021F                     	;# 
  1734  028C                     	;# 
  1735  028C                     	;# 
  1736  028D                     	;# 
  1737  028D                     	;# 
  1738  028E                     	;# 
  1739  028F                     	;# 
  1740  0290                     	;# 
  1741  0290                     	;# 
  1742  0291                     	;# 
  1743  0292                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0293                     	;# 
  1747  0294                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0296                     	;# 
  1751  0297                     	;# 
  1752  0298                     	;# 
  1753  0298                     	;# 
  1754  0299                     	;# 
  1755  0299                     	;# 
  1756  029A                     	;# 
  1757  029B                     	;# 
  1758  029C                     	;# 
  1759  029C                     	;# 
  1760  029D                     	;# 
  1761  030C                     	;# 
  1762  030C                     	;# 
  1763  030D                     	;# 
  1764  030E                     	;# 
  1765  030F                     	;# 
  1766  0310                     	;# 
  1767  0310                     	;# 
  1768  0311                     	;# 
  1769  0312                     	;# 
  1770  0313                     	;# 
  1771  0314                     	;# 
  1772  0314                     	;# 
  1773  0315                     	;# 
  1774  0316                     	;# 
  1775  0317                     	;# 
  1776  0318                     	;# 
  1777  0318                     	;# 
  1778  0319                     	;# 
  1779  031A                     	;# 
  1780  031B                     	;# 
  1781  031C                     	;# 
  1782  031C                     	;# 
  1783  031D                     	;# 
  1784  031E                     	;# 
  1785  031F                     	;# 
  1786  038C                     	;# 
  1787  038D                     	;# 
  1788  038E                     	;# 
  1789  0390                     	;# 
  1790  0391                     	;# 
  1791  0392                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  040E                     	;# 
  1795  040F                     	;# 
  1796  0410                     	;# 
  1797  0411                     	;# 
  1798  0416                     	;# 
  1799  0416                     	;# 
  1800  0417                     	;# 
  1801  0418                     	;# 
  1802  0418                     	;# 
  1803  0419                     	;# 
  1804  041A                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  041F                     	;# 
  1812  048C                     	;# 
  1813  048C                     	;# 
  1814  048D                     	;# 
  1815  048E                     	;# 
  1816  048F                     	;# 
  1817  048F                     	;# 
  1818  0490                     	;# 
  1819  0491                     	;# 
  1820  0492                     	;# 
  1821  0492                     	;# 
  1822  0493                     	;# 
  1823  0494                     	;# 
  1824  0495                     	;# 
  1825  0495                     	;# 
  1826  0496                     	;# 
  1827  0497                     	;# 
  1828  0498                     	;# 
  1829  0499                     	;# 
  1830  049A                     	;# 
  1831  049B                     	;# 
  1832  049C                     	;# 
  1833  049D                     	;# 
  1834  050C                     	;# 
  1835  050C                     	;# 
  1836  050D                     	;# 
  1837  050E                     	;# 
  1838  050F                     	;# 
  1839  050F                     	;# 
  1840  0510                     	;# 
  1841  0511                     	;# 
  1842  0512                     	;# 
  1843  0512                     	;# 
  1844  0513                     	;# 
  1845  0514                     	;# 
  1846  0515                     	;# 
  1847  0515                     	;# 
  1848  0516                     	;# 
  1849  0517                     	;# 
  1850  0518                     	;# 
  1851  0519                     	;# 
  1852  051A                     	;# 
  1853  051B                     	;# 
  1854  051C                     	;# 
  1855  051D                     	;# 
  1856  058C                     	;# 
  1857  058C                     	;# 
  1858  058D                     	;# 
  1859  058E                     	;# 
  1860  058F                     	;# 
  1861  058F                     	;# 
  1862  0590                     	;# 
  1863  0591                     	;# 
  1864  0592                     	;# 
  1865  0593                     	;# 
  1866  060C                     	;# 
  1867  060D                     	;# 
  1868  060E                     	;# 
  1869  060F                     	;# 
  1870  0610                     	;# 
  1871  0611                     	;# 
  1872  0612                     	;# 
  1873  0613                     	;# 
  1874  0614                     	;# 
  1875  0616                     	;# 
  1876  0617                     	;# 
  1877  0618                     	;# 
  1878  0619                     	;# 
  1879  061A                     	;# 
  1880  061B                     	;# 
  1881  061C                     	;# 
  1882  061D                     	;# 
  1883  061E                     	;# 
  1884  068C                     	;# 
  1885  068D                     	;# 
  1886  068E                     	;# 
  1887  068F                     	;# 
  1888  0690                     	;# 
  1889  0691                     	;# 
  1890  0692                     	;# 
  1891  0693                     	;# 
  1892  0694                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0714                     	;# 
  1902  0716                     	;# 
  1903  0717                     	;# 
  1904  0718                     	;# 
  1905  0719                     	;# 
  1906  071A                     	;# 
  1907  071B                     	;# 
  1908  071C                     	;# 
  1909  071D                     	;# 
  1910  071E                     	;# 
  1911  0796                     	;# 
  1912  0797                     	;# 
  1913  0798                     	;# 
  1914  0799                     	;# 
  1915  079A                     	;# 
  1916  079B                     	;# 
  1917  080C                     	;# 
  1918  080D                     	;# 
  1919  080E                     	;# 
  1920  080F                     	;# 
  1921  0810                     	;# 
  1922  0811                     	;# 
  1923  0812                     	;# 
  1924  0813                     	;# 
  1925  0814                     	;# 
  1926  081A                     	;# 
  1927  081B                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  0897                     	;# 
  1943  0898                     	;# 
  1944  0899                     	;# 
  1945  089A                     	;# 
  1946  089B                     	;# 
  1947  090C                     	;# 
  1948  090E                     	;# 
  1949  090F                     	;# 
  1950  091F                     	;# 
  1951  091F                     	;# 
  1952  098F                     	;# 
  1953  098F                     	;# 
  1954  0990                     	;# 
  1955  0991                     	;# 
  1956  0992                     	;# 
  1957  0993                     	;# 
  1958  0994                     	;# 
  1959  0995                     	;# 
  1960  0996                     	;# 
  1961  0997                     	;# 
  1962  0E0F                     	;# 
  1963  0E10                     	;# 
  1964  0E11                     	;# 
  1965  0E12                     	;# 
  1966  0E13                     	;# 
  1967  0E14                     	;# 
  1968  0E15                     	;# 
  1969  0E16                     	;# 
  1970  0E17                     	;# 
  1971  0E18                     	;# 
  1972  0E19                     	;# 
  1973  0E1A                     	;# 
  1974  0E1B                     	;# 
  1975  0E1C                     	;# 
  1976  0E1D                     	;# 
  1977  0E1E                     	;# 
  1978  0E1F                     	;# 
  1979  0E20                     	;# 
  1980  0E21                     	;# 
  1981  0E22                     	;# 
  1982  0E23                     	;# 
  1983  0E24                     	;# 
  1984  0E25                     	;# 
  1985  0E26                     	;# 
  1986  0E27                     	;# 
  1987  0E28                     	;# 
  1988  0E29                     	;# 
  1989  0E2A                     	;# 
  1990  0E2B                     	;# 
  1991  0E2C                     	;# 
  1992  0E2D                     	;# 
  1993  0E2E                     	;# 
  1994  0E2F                     	;# 
  1995  0E30                     	;# 
  1996  0E31                     	;# 
  1997  0E32                     	;# 
  1998  0E33                     	;# 
  1999  0E34                     	;# 
  2000  0E35                     	;# 
  2001  0E36                     	;# 
  2002  0E37                     	;# 
  2003  0E8F                     	;# 
  2004  0E90                     	;# 
  2005  0E91                     	;# 
  2006  0E92                     	;# 
  2007  0E93                     	;# 
  2008  0E94                     	;# 
  2009  0E95                     	;# 
  2010  0E96                     	;# 
  2011  0E97                     	;# 
  2012  0E9C                     	;# 
  2013  0E9D                     	;# 
  2014  0E9E                     	;# 
  2015  0EA1                     	;# 
  2016  0EA2                     	;# 
  2017  0EA3                     	;# 
  2018  0EA4                     	;# 
  2019  0EA5                     	;# 
  2020  0EA9                     	;# 
  2021  0EAA                     	;# 
  2022  0EAB                     	;# 
  2023  0EAC                     	;# 
  2024  0EB1                     	;# 
  2025  0EB2                     	;# 
  2026  0EB3                     	;# 
  2027  0EB8                     	;# 
  2028  0EB9                     	;# 
  2029  0EBA                     	;# 
  2030  0EBB                     	;# 
  2031  0EBC                     	;# 
  2032  0EBD                     	;# 
  2033  0EBE                     	;# 
  2034  0EC3                     	;# 
  2035  0EC5                     	;# 
  2036  0EC6                     	;# 
  2037  0EC7                     	;# 
  2038  0EC8                     	;# 
  2039  0EC9                     	;# 
  2040  0ECA                     	;# 
  2041  0ECB                     	;# 
  2042  0ECC                     	;# 
  2043  0F10                     	;# 
  2044  0F11                     	;# 
  2045  0F12                     	;# 
  2046  0F13                     	;# 
  2047  0F14                     	;# 
  2048  0F15                     	;# 
  2049  0F16                     	;# 
  2050  0F17                     	;# 
  2051  0F18                     	;# 
  2052  0F19                     	;# 
  2053  0F1A                     	;# 
  2054  0F1B                     	;# 
  2055  0F1C                     	;# 
  2056  0F1D                     	;# 
  2057  0F1E                     	;# 
  2058  0F1F                     	;# 
  2059  0F20                     	;# 
  2060  0F21                     	;# 
  2061  0F22                     	;# 
  2062  0F23                     	;# 
  2063  0F24                     	;# 
  2064  0F25                     	;# 
  2065  0F26                     	;# 
  2066  0F27                     	;# 
  2067  0F38                     	;# 
  2068  0F39                     	;# 
  2069  0F3A                     	;# 
  2070  0F3B                     	;# 
  2071  0F3C                     	;# 
  2072  0F3D                     	;# 
  2073  0F3E                     	;# 
  2074  0F3F                     	;# 
  2075  0F40                     	;# 
  2076  0F41                     	;# 
  2077  0F43                     	;# 
  2078  0F44                     	;# 
  2079  0F45                     	;# 
  2080  0F46                     	;# 
  2081  0F47                     	;# 
  2082  0F48                     	;# 
  2083  0F49                     	;# 
  2084  0F4A                     	;# 
  2085  0F4B                     	;# 
  2086  0F4C                     	;# 
  2087  0F4E                     	;# 
  2088  0F4F                     	;# 
  2089  0F50                     	;# 
  2090  0F51                     	;# 
  2091  0F52                     	;# 
  2092  0F53                     	;# 
  2093  0F54                     	;# 
  2094  0F55                     	;# 
  2095  0F56                     	;# 
  2096  0F57                     	;# 
  2097  0F65                     	;# 
  2098  0F68                     	;# 
  2099  0F69                     	;# 
  2100  0F6A                     	;# 
  2101  0F6B                     	;# 
  2102  0FE4                     	;# 
  2103  0FE5                     	;# 
  2104  0FE6                     	;# 
  2105  0FE7                     	;# 
  2106  0FE8                     	;# 
  2107  0FE9                     	;# 
  2108  0FEA                     	;# 
  2109  0FEB                     	;# 
  2110  0FED                     	;# 
  2111  0FEE                     	;# 
  2112  0FEF                     	;# 
  2113  0000                     	;# 
  2114  0001                     	;# 
  2115  0002                     	;# 
  2116  0003                     	;# 
  2117  0004                     	;# 
  2118  0005                     	;# 
  2119  0006                     	;# 
  2120  0007                     	;# 
  2121  0008                     	;# 
  2122  0009                     	;# 
  2123  000A                     	;# 
  2124  000B                     	;# 
  2125  000C                     	;# 
  2126  000D                     	;# 
  2127  000E                     	;# 
  2128  0010                     	;# 
  2129  0011                     	;# 
  2130  0012                     	;# 
  2131  0013                     	;# 
  2132  0016                     	;# 
  2133  0017                     	;# 
  2134  0018                     	;# 
  2135  001C                     	;# 
  2136  001C                     	;# 
  2137  001D                     	;# 
  2138  001D                     	;# 
  2139  001E                     	;# 
  2140  001F                     	;# 
  2141  008C                     	;# 
  2142  008C                     	;# 
  2143  008D                     	;# 
  2144  008E                     	;# 
  2145  008E                     	;# 
  2146  008F                     	;# 
  2147  0090                     	;# 
  2148  0090                     	;# 
  2149  0091                     	;# 
  2150  0093                     	;# 
  2151  0094                     	;# 
  2152  0095                     	;# 
  2153  0096                     	;# 
  2154  0097                     	;# 
  2155  0098                     	;# 
  2156  0099                     	;# 
  2157  009A                     	;# 
  2158  009B                     	;# 
  2159  009C                     	;# 
  2160  009D                     	;# 
  2161  009E                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  010E                     	;# 
  2166  010F                     	;# 
  2167  0110                     	;# 
  2168  0110                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0112                     	;# 
  2172  0113                     	;# 
  2173  0114                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  018C                     	;# 
  2205  018D                     	;# 
  2206  018E                     	;# 
  2207  018F                     	;# 
  2208  0190                     	;# 
  2209  0191                     	;# 
  2210  0192                     	;# 
  2211  0196                     	;# 
  2212  0197                     	;# 
  2213  0198                     	;# 
  2214  0199                     	;# 
  2215  019A                     	;# 
  2216  019B                     	;# 
  2217  019C                     	;# 
  2218  020C                     	;# 
  2219  020D                     	;# 
  2220  020E                     	;# 
  2221  020F                     	;# 
  2222  020F                     	;# 
  2223  0210                     	;# 
  2224  0210                     	;# 
  2225  0211                     	;# 
  2226  0211                     	;# 
  2227  0212                     	;# 
  2228  0213                     	;# 
  2229  0214                     	;# 
  2230  0215                     	;# 
  2231  0215                     	;# 
  2232  0216                     	;# 
  2233  0216                     	;# 
  2234  0217                     	;# 
  2235  0217                     	;# 
  2236  0218                     	;# 
  2237  0219                     	;# 
  2238  021A                     	;# 
  2239  021B                     	;# 
  2240  021B                     	;# 
  2241  021C                     	;# 
  2242  021C                     	;# 
  2243  021D                     	;# 
  2244  021D                     	;# 
  2245  021E                     	;# 
  2246  021F                     	;# 
  2247  028C                     	;# 
  2248  028C                     	;# 
  2249  028D                     	;# 
  2250  028D                     	;# 
  2251  028E                     	;# 
  2252  028F                     	;# 
  2253  0290                     	;# 
  2254  0290                     	;# 
  2255  0291                     	;# 
  2256  0292                     	;# 
  2257  0292                     	;# 
  2258  0293                     	;# 
  2259  0293                     	;# 
  2260  0294                     	;# 
  2261  0295                     	;# 
  2262  0296                     	;# 
  2263  0296                     	;# 
  2264  0297                     	;# 
  2265  0298                     	;# 
  2266  0298                     	;# 
  2267  0299                     	;# 
  2268  0299                     	;# 
  2269  029A                     	;# 
  2270  029B                     	;# 
  2271  029C                     	;# 
  2272  029C                     	;# 
  2273  029D                     	;# 
  2274  030C                     	;# 
  2275  030C                     	;# 
  2276  030D                     	;# 
  2277  030E                     	;# 
  2278  030F                     	;# 
  2279  0310                     	;# 
  2280  0310                     	;# 
  2281  0311                     	;# 
  2282  0312                     	;# 
  2283  0313                     	;# 
  2284  0314                     	;# 
  2285  0314                     	;# 
  2286  0315                     	;# 
  2287  0316                     	;# 
  2288  0317                     	;# 
  2289  0318                     	;# 
  2290  0318                     	;# 
  2291  0319                     	;# 
  2292  031A                     	;# 
  2293  031B                     	;# 
  2294  031C                     	;# 
  2295  031C                     	;# 
  2296  031D                     	;# 
  2297  031E                     	;# 
  2298  031F                     	;# 
  2299  038C                     	;# 
  2300  038D                     	;# 
  2301  038E                     	;# 
  2302  0390                     	;# 
  2303  0391                     	;# 
  2304  0392                     	;# 
  2305  040C                     	;# 
  2306  040D                     	;# 
  2307  040E                     	;# 
  2308  040F                     	;# 
  2309  0410                     	;# 
  2310  0411                     	;# 
  2311  0416                     	;# 
  2312  0416                     	;# 
  2313  0417                     	;# 
  2314  0418                     	;# 
  2315  0418                     	;# 
  2316  0419                     	;# 
  2317  041A                     	;# 
  2318  041A                     	;# 
  2319  041B                     	;# 
  2320  041C                     	;# 
  2321  041C                     	;# 
  2322  041D                     	;# 
  2323  041E                     	;# 
  2324  041F                     	;# 
  2325  048C                     	;# 
  2326  048C                     	;# 
  2327  048D                     	;# 
  2328  048E                     	;# 
  2329  048F                     	;# 
  2330  048F                     	;# 
  2331  0490                     	;# 
  2332  0491                     	;# 
  2333  0492                     	;# 
  2334  0492                     	;# 
  2335  0493                     	;# 
  2336  0494                     	;# 
  2337  0495                     	;# 
  2338  0495                     	;# 
  2339  0496                     	;# 
  2340  0497                     	;# 
  2341  0498                     	;# 
  2342  0499                     	;# 
  2343  049A                     	;# 
  2344  049B                     	;# 
  2345  049C                     	;# 
  2346  049D                     	;# 
  2347  050C                     	;# 
  2348  050C                     	;# 
  2349  050D                     	;# 
  2350  050E                     	;# 
  2351  050F                     	;# 
  2352  050F                     	;# 
  2353  0510                     	;# 
  2354  0511                     	;# 
  2355  0512                     	;# 
  2356  0512                     	;# 
  2357  0513                     	;# 
  2358  0514                     	;# 
  2359  0515                     	;# 
  2360  0515                     	;# 
  2361  0516                     	;# 
  2362  0517                     	;# 
  2363  0518                     	;# 
  2364  0519                     	;# 
  2365  051A                     	;# 
  2366  051B                     	;# 
  2367  051C                     	;# 
  2368  051D                     	;# 
  2369  058C                     	;# 
  2370  058C                     	;# 
  2371  058D                     	;# 
  2372  058E                     	;# 
  2373  058F                     	;# 
  2374  058F                     	;# 
  2375  0590                     	;# 
  2376  0591                     	;# 
  2377  0592                     	;# 
  2378  0593                     	;# 
  2379  060C                     	;# 
  2380  060D                     	;# 
  2381  060E                     	;# 
  2382  060F                     	;# 
  2383  0610                     	;# 
  2384  0611                     	;# 
  2385  0612                     	;# 
  2386  0613                     	;# 
  2387  0614                     	;# 
  2388  0616                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  061A                     	;# 
  2393  061B                     	;# 
  2394  061C                     	;# 
  2395  061D                     	;# 
  2396  061E                     	;# 
  2397  068C                     	;# 
  2398  068D                     	;# 
  2399  068E                     	;# 
  2400  068F                     	;# 
  2401  0690                     	;# 
  2402  0691                     	;# 
  2403  0692                     	;# 
  2404  0693                     	;# 
  2405  0694                     	;# 
  2406  070C                     	;# 
  2407  070D                     	;# 
  2408  070E                     	;# 
  2409  070F                     	;# 
  2410  0710                     	;# 
  2411  0711                     	;# 
  2412  0712                     	;# 
  2413  0713                     	;# 
  2414  0714                     	;# 
  2415  0716                     	;# 
  2416  0717                     	;# 
  2417  0718                     	;# 
  2418  0719                     	;# 
  2419  071A                     	;# 
  2420  071B                     	;# 
  2421  071C                     	;# 
  2422  071D                     	;# 
  2423  071E                     	;# 
  2424  0796                     	;# 
  2425  0797                     	;# 
  2426  0798                     	;# 
  2427  0799                     	;# 
  2428  079A                     	;# 
  2429  079B                     	;# 
  2430  080C                     	;# 
  2431  080D                     	;# 
  2432  080E                     	;# 
  2433  080F                     	;# 
  2434  0810                     	;# 
  2435  0811                     	;# 
  2436  0812                     	;# 
  2437  0813                     	;# 
  2438  0814                     	;# 
  2439  081A                     	;# 
  2440  081B                     	;# 
  2441  081C                     	;# 
  2442  081D                     	;# 
  2443  081E                     	;# 
  2444  081F                     	;# 
  2445  088C                     	;# 
  2446  088D                     	;# 
  2447  088E                     	;# 
  2448  088F                     	;# 
  2449  0890                     	;# 
  2450  0891                     	;# 
  2451  0892                     	;# 
  2452  0893                     	;# 
  2453  0895                     	;# 
  2454  0896                     	;# 
  2455  0897                     	;# 
  2456  0898                     	;# 
  2457  0899                     	;# 
  2458  089A                     	;# 
  2459  089B                     	;# 
  2460  090C                     	;# 
  2461  090E                     	;# 
  2462  090F                     	;# 
  2463  091F                     	;# 
  2464  091F                     	;# 
  2465  098F                     	;# 
  2466  098F                     	;# 
  2467  0990                     	;# 
  2468  0991                     	;# 
  2469  0992                     	;# 
  2470  0993                     	;# 
  2471  0994                     	;# 
  2472  0995                     	;# 
  2473  0996                     	;# 
  2474  0997                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E23                     	;# 
  2496  0E24                     	;# 
  2497  0E25                     	;# 
  2498  0E26                     	;# 
  2499  0E27                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E30                     	;# 
  2509  0E31                     	;# 
  2510  0E32                     	;# 
  2511  0E33                     	;# 
  2512  0E34                     	;# 
  2513  0E35                     	;# 
  2514  0E36                     	;# 
  2515  0E37                     	;# 
  2516  0E8F                     	;# 
  2517  0E90                     	;# 
  2518  0E91                     	;# 
  2519  0E92                     	;# 
  2520  0E93                     	;# 
  2521  0E94                     	;# 
  2522  0E95                     	;# 
  2523  0E96                     	;# 
  2524  0E97                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0EA1                     	;# 
  2529  0EA2                     	;# 
  2530  0EA3                     	;# 
  2531  0EA4                     	;# 
  2532  0EA5                     	;# 
  2533  0EA9                     	;# 
  2534  0EAA                     	;# 
  2535  0EAB                     	;# 
  2536  0EAC                     	;# 
  2537  0EB1                     	;# 
  2538  0EB2                     	;# 
  2539  0EB3                     	;# 
  2540  0EB8                     	;# 
  2541  0EB9                     	;# 
  2542  0EBA                     	;# 
  2543  0EBB                     	;# 
  2544  0EBC                     	;# 
  2545  0EBD                     	;# 
  2546  0EBE                     	;# 
  2547  0EC3                     	;# 
  2548  0EC5                     	;# 
  2549  0EC6                     	;# 
  2550  0EC7                     	;# 
  2551  0EC8                     	;# 
  2552  0EC9                     	;# 
  2553  0ECA                     	;# 
  2554  0ECB                     	;# 
  2555  0ECC                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F38                     	;# 
  2581  0F39                     	;# 
  2582  0F3A                     	;# 
  2583  0F3B                     	;# 
  2584  0F3C                     	;# 
  2585  0F3D                     	;# 
  2586  0F3E                     	;# 
  2587  0F3F                     	;# 
  2588  0F40                     	;# 
  2589  0F41                     	;# 
  2590  0F43                     	;# 
  2591  0F44                     	;# 
  2592  0F45                     	;# 
  2593  0F46                     	;# 
  2594  0F47                     	;# 
  2595  0F48                     	;# 
  2596  0F49                     	;# 
  2597  0F4A                     	;# 
  2598  0F4B                     	;# 
  2599  0F4C                     	;# 
  2600  0F4E                     	;# 
  2601  0F4F                     	;# 
  2602  0F50                     	;# 
  2603  0F51                     	;# 
  2604  0F52                     	;# 
  2605  0F53                     	;# 
  2606  0F54                     	;# 
  2607  0F55                     	;# 
  2608  0F56                     	;# 
  2609  0F57                     	;# 
  2610  0F65                     	;# 
  2611  0F68                     	;# 
  2612  0F69                     	;# 
  2613  0F6A                     	;# 
  2614  0F6B                     	;# 
  2615  0FE4                     	;# 
  2616  0FE5                     	;# 
  2617  0FE6                     	;# 
  2618  0FE7                     	;# 
  2619  0FE8                     	;# 
  2620  0FE9                     	;# 
  2621  0FEA                     	;# 
  2622  0FEB                     	;# 
  2623  0FED                     	;# 
  2624  0FEE                     	;# 
  2625  0FEF                     	;# 
  2626  0000                     	;# 
  2627  0001                     	;# 
  2628  0002                     	;# 
  2629  0003                     	;# 
  2630  0004                     	;# 
  2631  0005                     	;# 
  2632  0006                     	;# 
  2633  0007                     	;# 
  2634  0008                     	;# 
  2635  0009                     	;# 
  2636  000A                     	;# 
  2637  000B                     	;# 
  2638  000C                     	;# 
  2639  000D                     	;# 
  2640  000E                     	;# 
  2641  0010                     	;# 
  2642  0011                     	;# 
  2643  0012                     	;# 
  2644  0013                     	;# 
  2645  0016                     	;# 
  2646  0017                     	;# 
  2647  0018                     	;# 
  2648  001C                     	;# 
  2649  001C                     	;# 
  2650  001D                     	;# 
  2651  001D                     	;# 
  2652  001E                     	;# 
  2653  001F                     	;# 
  2654  008C                     	;# 
  2655  008C                     	;# 
  2656  008D                     	;# 
  2657  008E                     	;# 
  2658  008E                     	;# 
  2659  008F                     	;# 
  2660  0090                     	;# 
  2661  0090                     	;# 
  2662  0091                     	;# 
  2663  0093                     	;# 
  2664  0094                     	;# 
  2665  0095                     	;# 
  2666  0096                     	;# 
  2667  0097                     	;# 
  2668  0098                     	;# 
  2669  0099                     	;# 
  2670  009A                     	;# 
  2671  009B                     	;# 
  2672  009C                     	;# 
  2673  009D                     	;# 
  2674  009E                     	;# 
  2675  010C                     	;# 
  2676  010D                     	;# 
  2677  010E                     	;# 
  2678  010E                     	;# 
  2679  010F                     	;# 
  2680  0110                     	;# 
  2681  0110                     	;# 
  2682  0111                     	;# 
  2683  0112                     	;# 
  2684  0112                     	;# 
  2685  0113                     	;# 
  2686  0114                     	;# 
  2687  0114                     	;# 
  2688  0115                     	;# 
  2689  0116                     	;# 
  2690  0116                     	;# 
  2691  0117                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  018C                     	;# 
  2718  018D                     	;# 
  2719  018E                     	;# 
  2720  018F                     	;# 
  2721  0190                     	;# 
  2722  0191                     	;# 
  2723  0192                     	;# 
  2724  0196                     	;# 
  2725  0197                     	;# 
  2726  0198                     	;# 
  2727  0199                     	;# 
  2728  019A                     	;# 
  2729  019B                     	;# 
  2730  019C                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  020E                     	;# 
  2734  020F                     	;# 
  2735  020F                     	;# 
  2736  0210                     	;# 
  2737  0210                     	;# 
  2738  0211                     	;# 
  2739  0211                     	;# 
  2740  0212                     	;# 
  2741  0213                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0216                     	;# 
  2746  0216                     	;# 
  2747  0217                     	;# 
  2748  0217                     	;# 
  2749  0218                     	;# 
  2750  0219                     	;# 
  2751  021A                     	;# 
  2752  021B                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021C                     	;# 
  2756  021D                     	;# 
  2757  021D                     	;# 
  2758  021E                     	;# 
  2759  021F                     	;# 
  2760  028C                     	;# 
  2761  028C                     	;# 
  2762  028D                     	;# 
  2763  028D                     	;# 
  2764  028E                     	;# 
  2765  028F                     	;# 
  2766  0290                     	;# 
  2767  0290                     	;# 
  2768  0291                     	;# 
  2769  0292                     	;# 
  2770  0292                     	;# 
  2771  0293                     	;# 
  2772  0293                     	;# 
  2773  0294                     	;# 
  2774  0295                     	;# 
  2775  0296                     	;# 
  2776  0296                     	;# 
  2777  0297                     	;# 
  2778  0298                     	;# 
  2779  0298                     	;# 
  2780  0299                     	;# 
  2781  0299                     	;# 
  2782  029A                     	;# 
  2783  029B                     	;# 
  2784  029C                     	;# 
  2785  029C                     	;# 
  2786  029D                     	;# 
  2787  030C                     	;# 
  2788  030C                     	;# 
  2789  030D                     	;# 
  2790  030E                     	;# 
  2791  030F                     	;# 
  2792  0310                     	;# 
  2793  0310                     	;# 
  2794  0311                     	;# 
  2795  0312                     	;# 
  2796  0313                     	;# 
  2797  0314                     	;# 
  2798  0314                     	;# 
  2799  0315                     	;# 
  2800  0316                     	;# 
  2801  0317                     	;# 
  2802  0318                     	;# 
  2803  0318                     	;# 
  2804  0319                     	;# 
  2805  031A                     	;# 
  2806  031B                     	;# 
  2807  031C                     	;# 
  2808  031C                     	;# 
  2809  031D                     	;# 
  2810  031E                     	;# 
  2811  031F                     	;# 
  2812  038C                     	;# 
  2813  038D                     	;# 
  2814  038E                     	;# 
  2815  0390                     	;# 
  2816  0391                     	;# 
  2817  0392                     	;# 
  2818  040C                     	;# 
  2819  040D                     	;# 
  2820  040E                     	;# 
  2821  040F                     	;# 
  2822  0410                     	;# 
  2823  0411                     	;# 
  2824  0416                     	;# 
  2825  0416                     	;# 
  2826  0417                     	;# 
  2827  0418                     	;# 
  2828  0418                     	;# 
  2829  0419                     	;# 
  2830  041A                     	;# 
  2831  041A                     	;# 
  2832  041B                     	;# 
  2833  041C                     	;# 
  2834  041C                     	;# 
  2835  041D                     	;# 
  2836  041E                     	;# 
  2837  041F                     	;# 
  2838  048C                     	;# 
  2839  048C                     	;# 
  2840  048D                     	;# 
  2841  048E                     	;# 
  2842  048F                     	;# 
  2843  048F                     	;# 
  2844  0490                     	;# 
  2845  0491                     	;# 
  2846  0492                     	;# 
  2847  0492                     	;# 
  2848  0493                     	;# 
  2849  0494                     	;# 
  2850  0495                     	;# 
  2851  0495                     	;# 
  2852  0496                     	;# 
  2853  0497                     	;# 
  2854  0498                     	;# 
  2855  0499                     	;# 
  2856  049A                     	;# 
  2857  049B                     	;# 
  2858  049C                     	;# 
  2859  049D                     	;# 
  2860  050C                     	;# 
  2861  050C                     	;# 
  2862  050D                     	;# 
  2863  050E                     	;# 
  2864  050F                     	;# 
  2865  050F                     	;# 
  2866  0510                     	;# 
  2867  0511                     	;# 
  2868  0512                     	;# 
  2869  0512                     	;# 
  2870  0513                     	;# 
  2871  0514                     	;# 
  2872  0515                     	;# 
  2873  0515                     	;# 
  2874  0516                     	;# 
  2875  0517                     	;# 
  2876  0518                     	;# 
  2877  0519                     	;# 
  2878  051A                     	;# 
  2879  051B                     	;# 
  2880  051C                     	;# 
  2881  051D                     	;# 
  2882  058C                     	;# 
  2883  058C                     	;# 
  2884  058D                     	;# 
  2885  058E                     	;# 
  2886  058F                     	;# 
  2887  058F                     	;# 
  2888  0590                     	;# 
  2889  0591                     	;# 
  2890  0592                     	;# 
  2891  0593                     	;# 
  2892  060C                     	;# 
  2893  060D                     	;# 
  2894  060E                     	;# 
  2895  060F                     	;# 
  2896  0610                     	;# 
  2897  0611                     	;# 
  2898  0612                     	;# 
  2899  0613                     	;# 
  2900  0614                     	;# 
  2901  0616                     	;# 
  2902  0617                     	;# 
  2903  0618                     	;# 
  2904  0619                     	;# 
  2905  061A                     	;# 
  2906  061B                     	;# 
  2907  061C                     	;# 
  2908  061D                     	;# 
  2909  061E                     	;# 
  2910  068C                     	;# 
  2911  068D                     	;# 
  2912  068E                     	;# 
  2913  068F                     	;# 
  2914  0690                     	;# 
  2915  0691                     	;# 
  2916  0692                     	;# 
  2917  0693                     	;# 
  2918  0694                     	;# 
  2919  070C                     	;# 
  2920  070D                     	;# 
  2921  070E                     	;# 
  2922  070F                     	;# 
  2923  0710                     	;# 
  2924  0711                     	;# 
  2925  0712                     	;# 
  2926  0713                     	;# 
  2927  0714                     	;# 
  2928  0716                     	;# 
  2929  0717                     	;# 
  2930  0718                     	;# 
  2931  0719                     	;# 
  2932  071A                     	;# 
  2933  071B                     	;# 
  2934  071C                     	;# 
  2935  071D                     	;# 
  2936  071E                     	;# 
  2937  0796                     	;# 
  2938  0797                     	;# 
  2939  0798                     	;# 
  2940  0799                     	;# 
  2941  079A                     	;# 
  2942  079B                     	;# 
  2943  080C                     	;# 
  2944  080D                     	;# 
  2945  080E                     	;# 
  2946  080F                     	;# 
  2947  0810                     	;# 
  2948  0811                     	;# 
  2949  0812                     	;# 
  2950  0813                     	;# 
  2951  0814                     	;# 
  2952  081A                     	;# 
  2953  081B                     	;# 
  2954  081C                     	;# 
  2955  081D                     	;# 
  2956  081E                     	;# 
  2957  081F                     	;# 
  2958  088C                     	;# 
  2959  088D                     	;# 
  2960  088E                     	;# 
  2961  088F                     	;# 
  2962  0890                     	;# 
  2963  0891                     	;# 
  2964  0892                     	;# 
  2965  0893                     	;# 
  2966  0895                     	;# 
  2967  0896                     	;# 
  2968  0897                     	;# 
  2969  0898                     	;# 
  2970  0899                     	;# 
  2971  089A                     	;# 
  2972  089B                     	;# 
  2973  090C                     	;# 
  2974  090E                     	;# 
  2975  090F                     	;# 
  2976  091F                     	;# 
  2977  091F                     	;# 
  2978  098F                     	;# 
  2979  098F                     	;# 
  2980  0990                     	;# 
  2981  0991                     	;# 
  2982  0992                     	;# 
  2983  0993                     	;# 
  2984  0994                     	;# 
  2985  0995                     	;# 
  2986  0996                     	;# 
  2987  0997                     	;# 
  2988  0E0F                     	;# 
  2989  0E10                     	;# 
  2990  0E11                     	;# 
  2991  0E12                     	;# 
  2992  0E13                     	;# 
  2993  0E14                     	;# 
  2994  0E15                     	;# 
  2995  0E16                     	;# 
  2996  0E17                     	;# 
  2997  0E18                     	;# 
  2998  0E19                     	;# 
  2999  0E1A                     	;# 
  3000  0E1B                     	;# 
  3001  0E1C                     	;# 
  3002  0E1D                     	;# 
  3003  0E1E                     	;# 
  3004  0E1F                     	;# 
  3005  0E20                     	;# 
  3006  0E21                     	;# 
  3007  0E22                     	;# 
  3008  0E23                     	;# 
  3009  0E24                     	;# 
  3010  0E25                     	;# 
  3011  0E26                     	;# 
  3012  0E27                     	;# 
  3013  0E28                     	;# 
  3014  0E29                     	;# 
  3015  0E2A                     	;# 
  3016  0E2B                     	;# 
  3017  0E2C                     	;# 
  3018  0E2D                     	;# 
  3019  0E2E                     	;# 
  3020  0E2F                     	;# 
  3021  0E30                     	;# 
  3022  0E31                     	;# 
  3023  0E32                     	;# 
  3024  0E33                     	;# 
  3025  0E34                     	;# 
  3026  0E35                     	;# 
  3027  0E36                     	;# 
  3028  0E37                     	;# 
  3029  0E8F                     	;# 
  3030  0E90                     	;# 
  3031  0E91                     	;# 
  3032  0E92                     	;# 
  3033  0E93                     	;# 
  3034  0E94                     	;# 
  3035  0E95                     	;# 
  3036  0E96                     	;# 
  3037  0E97                     	;# 
  3038  0E9C                     	;# 
  3039  0E9D                     	;# 
  3040  0E9E                     	;# 
  3041  0EA1                     	;# 
  3042  0EA2                     	;# 
  3043  0EA3                     	;# 
  3044  0EA4                     	;# 
  3045  0EA5                     	;# 
  3046  0EA9                     	;# 
  3047  0EAA                     	;# 
  3048  0EAB                     	;# 
  3049  0EAC                     	;# 
  3050  0EB1                     	;# 
  3051  0EB2                     	;# 
  3052  0EB3                     	;# 
  3053  0EB8                     	;# 
  3054  0EB9                     	;# 
  3055  0EBA                     	;# 
  3056  0EBB                     	;# 
  3057  0EBC                     	;# 
  3058  0EBD                     	;# 
  3059  0EBE                     	;# 
  3060  0EC3                     	;# 
  3061  0EC5                     	;# 
  3062  0EC6                     	;# 
  3063  0EC7                     	;# 
  3064  0EC8                     	;# 
  3065  0EC9                     	;# 
  3066  0ECA                     	;# 
  3067  0ECB                     	;# 
  3068  0ECC                     	;# 
  3069  0F10                     	;# 
  3070  0F11                     	;# 
  3071  0F12                     	;# 
  3072  0F13                     	;# 
  3073  0F14                     	;# 
  3074  0F15                     	;# 
  3075  0F16                     	;# 
  3076  0F17                     	;# 
  3077  0F18                     	;# 
  3078  0F19                     	;# 
  3079  0F1A                     	;# 
  3080  0F1B                     	;# 
  3081  0F1C                     	;# 
  3082  0F1D                     	;# 
  3083  0F1E                     	;# 
  3084  0F1F                     	;# 
  3085  0F20                     	;# 
  3086  0F21                     	;# 
  3087  0F22                     	;# 
  3088  0F23                     	;# 
  3089  0F24                     	;# 
  3090  0F25                     	;# 
  3091  0F26                     	;# 
  3092  0F27                     	;# 
  3093  0F38                     	;# 
  3094  0F39                     	;# 
  3095  0F3A                     	;# 
  3096  0F3B                     	;# 
  3097  0F3C                     	;# 
  3098  0F3D                     	;# 
  3099  0F3E                     	;# 
  3100  0F3F                     	;# 
  3101  0F40                     	;# 
  3102  0F41                     	;# 
  3103  0F43                     	;# 
  3104  0F44                     	;# 
  3105  0F45                     	;# 
  3106  0F46                     	;# 
  3107  0F47                     	;# 
  3108  0F48                     	;# 
  3109  0F49                     	;# 
  3110  0F4A                     	;# 
  3111  0F4B                     	;# 
  3112  0F4C                     	;# 
  3113  0F4E                     	;# 
  3114  0F4F                     	;# 
  3115  0F50                     	;# 
  3116  0F51                     	;# 
  3117  0F52                     	;# 
  3118  0F53                     	;# 
  3119  0F54                     	;# 
  3120  0F55                     	;# 
  3121  0F56                     	;# 
  3122  0F57                     	;# 
  3123  0F65                     	;# 
  3124  0F68                     	;# 
  3125  0F69                     	;# 
  3126  0F6A                     	;# 
  3127  0F6B                     	;# 
  3128  0FE4                     	;# 
  3129  0FE5                     	;# 
  3130  0FE6                     	;# 
  3131  0FE7                     	;# 
  3132  0FE8                     	;# 
  3133  0FE9                     	;# 
  3134  0FEA                     	;# 
  3135  0FEB                     	;# 
  3136  0FED                     	;# 
  3137  0FEE                     	;# 
  3138  0FEF                     	;# 
  3139  0000                     	;# 
  3140  0001                     	;# 
  3141  0002                     	;# 
  3142  0003                     	;# 
  3143  0004                     	;# 
  3144  0005                     	;# 
  3145  0006                     	;# 
  3146  0007                     	;# 
  3147  0008                     	;# 
  3148  0009                     	;# 
  3149  000A                     	;# 
  3150  000B                     	;# 
  3151  000C                     	;# 
  3152  000D                     	;# 
  3153  000E                     	;# 
  3154  0010                     	;# 
  3155  0011                     	;# 
  3156  0012                     	;# 
  3157  0013                     	;# 
  3158  0016                     	;# 
  3159  0017                     	;# 
  3160  0018                     	;# 
  3161  001C                     	;# 
  3162  001C                     	;# 
  3163  001D                     	;# 
  3164  001D                     	;# 
  3165  001E                     	;# 
  3166  001F                     	;# 
  3167  008C                     	;# 
  3168  008C                     	;# 
  3169  008D                     	;# 
  3170  008E                     	;# 
  3171  008E                     	;# 
  3172  008F                     	;# 
  3173  0090                     	;# 
  3174  0090                     	;# 
  3175  0091                     	;# 
  3176  0093                     	;# 
  3177  0094                     	;# 
  3178  0095                     	;# 
  3179  0096                     	;# 
  3180  0097                     	;# 
  3181  0098                     	;# 
  3182  0099                     	;# 
  3183  009A                     	;# 
  3184  009B                     	;# 
  3185  009C                     	;# 
  3186  009D                     	;# 
  3187  009E                     	;# 
  3188  010C                     	;# 
  3189  010D                     	;# 
  3190  010E                     	;# 
  3191  010E                     	;# 
  3192  010F                     	;# 
  3193  0110                     	;# 
  3194  0110                     	;# 
  3195  0111                     	;# 
  3196  0112                     	;# 
  3197  0112                     	;# 
  3198  0113                     	;# 
  3199  0114                     	;# 
  3200  0114                     	;# 
  3201  0115                     	;# 
  3202  0116                     	;# 
  3203  0116                     	;# 
  3204  0117                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  018C                     	;# 
  3231  018D                     	;# 
  3232  018E                     	;# 
  3233  018F                     	;# 
  3234  0190                     	;# 
  3235  0191                     	;# 
  3236  0192                     	;# 
  3237  0196                     	;# 
  3238  0197                     	;# 
  3239  0198                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019B                     	;# 
  3243  019C                     	;# 
  3244  020C                     	;# 
  3245  020D                     	;# 
  3246  020E                     	;# 
  3247  020F                     	;# 
  3248  020F                     	;# 
  3249  0210                     	;# 
  3250  0210                     	;# 
  3251  0211                     	;# 
  3252  0211                     	;# 
  3253  0212                     	;# 
  3254  0213                     	;# 
  3255  0214                     	;# 
  3256  0215                     	;# 
  3257  0215                     	;# 
  3258  0216                     	;# 
  3259  0216                     	;# 
  3260  0217                     	;# 
  3261  0217                     	;# 
  3262  0218                     	;# 
  3263  0219                     	;# 
  3264  021A                     	;# 
  3265  021B                     	;# 
  3266  021B                     	;# 
  3267  021C                     	;# 
  3268  021C                     	;# 
  3269  021D                     	;# 
  3270  021D                     	;# 
  3271  021E                     	;# 
  3272  021F                     	;# 
  3273  028C                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028D                     	;# 
  3277  028E                     	;# 
  3278  028F                     	;# 
  3279  0290                     	;# 
  3280  0290                     	;# 
  3281  0291                     	;# 
  3282  0292                     	;# 
  3283  0292                     	;# 
  3284  0293                     	;# 
  3285  0293                     	;# 
  3286  0294                     	;# 
  3287  0295                     	;# 
  3288  0296                     	;# 
  3289  0296                     	;# 
  3290  0297                     	;# 
  3291  0298                     	;# 
  3292  0298                     	;# 
  3293  0299                     	;# 
  3294  0299                     	;# 
  3295  029A                     	;# 
  3296  029B                     	;# 
  3297  029C                     	;# 
  3298  029C                     	;# 
  3299  029D                     	;# 
  3300  030C                     	;# 
  3301  030C                     	;# 
  3302  030D                     	;# 
  3303  030E                     	;# 
  3304  030F                     	;# 
  3305  0310                     	;# 
  3306  0310                     	;# 
  3307  0311                     	;# 
  3308  0312                     	;# 
  3309  0313                     	;# 
  3310  0314                     	;# 
  3311  0314                     	;# 
  3312  0315                     	;# 
  3313  0316                     	;# 
  3314  0317                     	;# 
  3315  0318                     	;# 
  3316  0318                     	;# 
  3317  0319                     	;# 
  3318  031A                     	;# 
  3319  031B                     	;# 
  3320  031C                     	;# 
  3321  031C                     	;# 
  3322  031D                     	;# 
  3323  031E                     	;# 
  3324  031F                     	;# 
  3325  038C                     	;# 
  3326  038D                     	;# 
  3327  038E                     	;# 
  3328  0390                     	;# 
  3329  0391                     	;# 
  3330  0392                     	;# 
  3331  040C                     	;# 
  3332  040D                     	;# 
  3333  040E                     	;# 
  3334  040F                     	;# 
  3335  0410                     	;# 
  3336  0411                     	;# 
  3337  0416                     	;# 
  3338  0416                     	;# 
  3339  0417                     	;# 
  3340  0418                     	;# 
  3341  0418                     	;# 
  3342  0419                     	;# 
  3343  041A                     	;# 
  3344  041A                     	;# 
  3345  041B                     	;# 
  3346  041C                     	;# 
  3347  041C                     	;# 
  3348  041D                     	;# 
  3349  041E                     	;# 
  3350  041F                     	;# 
  3351  048C                     	;# 
  3352  048C                     	;# 
  3353  048D                     	;# 
  3354  048E                     	;# 
  3355  048F                     	;# 
  3356  048F                     	;# 
  3357  0490                     	;# 
  3358  0491                     	;# 
  3359  0492                     	;# 
  3360  0492                     	;# 
  3361  0493                     	;# 
  3362  0494                     	;# 
  3363  0495                     	;# 
  3364  0495                     	;# 
  3365  0496                     	;# 
  3366  0497                     	;# 
  3367  0498                     	;# 
  3368  0499                     	;# 
  3369  049A                     	;# 
  3370  049B                     	;# 
  3371  049C                     	;# 
  3372  049D                     	;# 
  3373  050C                     	;# 
  3374  050C                     	;# 
  3375  050D                     	;# 
  3376  050E                     	;# 
  3377  050F                     	;# 
  3378  050F                     	;# 
  3379  0510                     	;# 
  3380  0511                     	;# 
  3381  0512                     	;# 
  3382  0512                     	;# 
  3383  0513                     	;# 
  3384  0514                     	;# 
  3385  0515                     	;# 
  3386  0515                     	;# 
  3387  0516                     	;# 
  3388  0517                     	;# 
  3389  0518                     	;# 
  3390  0519                     	;# 
  3391  051A                     	;# 
  3392  051B                     	;# 
  3393  051C                     	;# 
  3394  051D                     	;# 
  3395  058C                     	;# 
  3396  058C                     	;# 
  3397  058D                     	;# 
  3398  058E                     	;# 
  3399  058F                     	;# 
  3400  058F                     	;# 
  3401  0590                     	;# 
  3402  0591                     	;# 
  3403  0592                     	;# 
  3404  0593                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  0616                     	;# 
  3415  0617                     	;# 
  3416  0618                     	;# 
  3417  0619                     	;# 
  3418  061A                     	;# 
  3419  061B                     	;# 
  3420  061C                     	;# 
  3421  061D                     	;# 
  3422  061E                     	;# 
  3423  068C                     	;# 
  3424  068D                     	;# 
  3425  068E                     	;# 
  3426  068F                     	;# 
  3427  0690                     	;# 
  3428  0691                     	;# 
  3429  0692                     	;# 
  3430  0693                     	;# 
  3431  0694                     	;# 
  3432  070C                     	;# 
  3433  070D                     	;# 
  3434  070E                     	;# 
  3435  070F                     	;# 
  3436  0710                     	;# 
  3437  0711                     	;# 
  3438  0712                     	;# 
  3439  0713                     	;# 
  3440  0714                     	;# 
  3441  0716                     	;# 
  3442  0717                     	;# 
  3443  0718                     	;# 
  3444  0719                     	;# 
  3445  071A                     	;# 
  3446  071B                     	;# 
  3447  071C                     	;# 
  3448  071D                     	;# 
  3449  071E                     	;# 
  3450  0796                     	;# 
  3451  0797                     	;# 
  3452  0798                     	;# 
  3453  0799                     	;# 
  3454  079A                     	;# 
  3455  079B                     	;# 
  3456  080C                     	;# 
  3457  080D                     	;# 
  3458  080E                     	;# 
  3459  080F                     	;# 
  3460  0810                     	;# 
  3461  0811                     	;# 
  3462  0812                     	;# 
  3463  0813                     	;# 
  3464  0814                     	;# 
  3465  081A                     	;# 
  3466  081B                     	;# 
  3467  081C                     	;# 
  3468  081D                     	;# 
  3469  081E                     	;# 
  3470  081F                     	;# 
  3471  088C                     	;# 
  3472  088D                     	;# 
  3473  088E                     	;# 
  3474  088F                     	;# 
  3475  0890                     	;# 
  3476  0891                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0895                     	;# 
  3480  0896                     	;# 
  3481  0897                     	;# 
  3482  0898                     	;# 
  3483  0899                     	;# 
  3484  089A                     	;# 
  3485  089B                     	;# 
  3486  090C                     	;# 
  3487  090E                     	;# 
  3488  090F                     	;# 
  3489  091F                     	;# 
  3490  091F                     	;# 
  3491  098F                     	;# 
  3492  098F                     	;# 
  3493  0990                     	;# 
  3494  0991                     	;# 
  3495  0992                     	;# 
  3496  0993                     	;# 
  3497  0994                     	;# 
  3498  0995                     	;# 
  3499  0996                     	;# 
  3500  0997                     	;# 
  3501  0E0F                     	;# 
  3502  0E10                     	;# 
  3503  0E11                     	;# 
  3504  0E12                     	;# 
  3505  0E13                     	;# 
  3506  0E14                     	;# 
  3507  0E15                     	;# 
  3508  0E16                     	;# 
  3509  0E17                     	;# 
  3510  0E18                     	;# 
  3511  0E19                     	;# 
  3512  0E1A                     	;# 
  3513  0E1B                     	;# 
  3514  0E1C                     	;# 
  3515  0E1D                     	;# 
  3516  0E1E                     	;# 
  3517  0E1F                     	;# 
  3518  0E20                     	;# 
  3519  0E21                     	;# 
  3520  0E22                     	;# 
  3521  0E23                     	;# 
  3522  0E24                     	;# 
  3523  0E25                     	;# 
  3524  0E26                     	;# 
  3525  0E27                     	;# 
  3526  0E28                     	;# 
  3527  0E29                     	;# 
  3528  0E2A                     	;# 
  3529  0E2B                     	;# 
  3530  0E2C                     	;# 
  3531  0E2D                     	;# 
  3532  0E2E                     	;# 
  3533  0E2F                     	;# 
  3534  0E30                     	;# 
  3535  0E31                     	;# 
  3536  0E32                     	;# 
  3537  0E33                     	;# 
  3538  0E34                     	;# 
  3539  0E35                     	;# 
  3540  0E36                     	;# 
  3541  0E37                     	;# 
  3542  0E8F                     	;# 
  3543  0E90                     	;# 
  3544  0E91                     	;# 
  3545  0E92                     	;# 
  3546  0E93                     	;# 
  3547  0E94                     	;# 
  3548  0E95                     	;# 
  3549  0E96                     	;# 
  3550  0E97                     	;# 
  3551  0E9C                     	;# 
  3552  0E9D                     	;# 
  3553  0E9E                     	;# 
  3554  0EA1                     	;# 
  3555  0EA2                     	;# 
  3556  0EA3                     	;# 
  3557  0EA4                     	;# 
  3558  0EA5                     	;# 
  3559  0EA9                     	;# 
  3560  0EAA                     	;# 
  3561  0EAB                     	;# 
  3562  0EAC                     	;# 
  3563  0EB1                     	;# 
  3564  0EB2                     	;# 
  3565  0EB3                     	;# 
  3566  0EB8                     	;# 
  3567  0EB9                     	;# 
  3568  0EBA                     	;# 
  3569  0EBB                     	;# 
  3570  0EBC                     	;# 
  3571  0EBD                     	;# 
  3572  0EBE                     	;# 
  3573  0EC3                     	;# 
  3574  0EC5                     	;# 
  3575  0EC6                     	;# 
  3576  0EC7                     	;# 
  3577  0EC8                     	;# 
  3578  0EC9                     	;# 
  3579  0ECA                     	;# 
  3580  0ECB                     	;# 
  3581  0ECC                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F38                     	;# 
  3607  0F39                     	;# 
  3608  0F3A                     	;# 
  3609  0F3B                     	;# 
  3610  0F3C                     	;# 
  3611  0F3D                     	;# 
  3612  0F3E                     	;# 
  3613  0F3F                     	;# 
  3614  0F40                     	;# 
  3615  0F41                     	;# 
  3616  0F43                     	;# 
  3617  0F44                     	;# 
  3618  0F45                     	;# 
  3619  0F46                     	;# 
  3620  0F47                     	;# 
  3621  0F48                     	;# 
  3622  0F49                     	;# 
  3623  0F4A                     	;# 
  3624  0F4B                     	;# 
  3625  0F4C                     	;# 
  3626  0F4E                     	;# 
  3627  0F4F                     	;# 
  3628  0F50                     	;# 
  3629  0F51                     	;# 
  3630  0F52                     	;# 
  3631  0F53                     	;# 
  3632  0F54                     	;# 
  3633  0F55                     	;# 
  3634  0F56                     	;# 
  3635  0F57                     	;# 
  3636  0F65                     	;# 
  3637  0F68                     	;# 
  3638  0F69                     	;# 
  3639  0F6A                     	;# 
  3640  0F6B                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEF                     	;# 
  3652  0000                     	;# 
  3653  0001                     	;# 
  3654  0002                     	;# 
  3655  0003                     	;# 
  3656  0004                     	;# 
  3657  0005                     	;# 
  3658  0006                     	;# 
  3659  0007                     	;# 
  3660  0008                     	;# 
  3661  0009                     	;# 
  3662  000A                     	;# 
  3663  000B                     	;# 
  3664  000C                     	;# 
  3665  000D                     	;# 
  3666  000E                     	;# 
  3667  0010                     	;# 
  3668  0011                     	;# 
  3669  0012                     	;# 
  3670  0013                     	;# 
  3671  0016                     	;# 
  3672  0017                     	;# 
  3673  0018                     	;# 
  3674  001C                     	;# 
  3675  001C                     	;# 
  3676  001D                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  008E                     	;# 
  3685  008F                     	;# 
  3686  0090                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0095                     	;# 
  3692  0096                     	;# 
  3693  0097                     	;# 
  3694  0098                     	;# 
  3695  0099                     	;# 
  3696  009A                     	;# 
  3697  009B                     	;# 
  3698  009C                     	;# 
  3699  009D                     	;# 
  3700  009E                     	;# 
  3701  010C                     	;# 
  3702  010D                     	;# 
  3703  010E                     	;# 
  3704  010E                     	;# 
  3705  010F                     	;# 
  3706  0110                     	;# 
  3707  0110                     	;# 
  3708  0111                     	;# 
  3709  0112                     	;# 
  3710  0112                     	;# 
  3711  0113                     	;# 
  3712  0114                     	;# 
  3713  0114                     	;# 
  3714  0115                     	;# 
  3715  0116                     	;# 
  3716  0116                     	;# 
  3717  0117                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  018C                     	;# 
  3744  018D                     	;# 
  3745  018E                     	;# 
  3746  018F                     	;# 
  3747  0190                     	;# 
  3748  0191                     	;# 
  3749  0192                     	;# 
  3750  0196                     	;# 
  3751  0197                     	;# 
  3752  0198                     	;# 
  3753  0199                     	;# 
  3754  019A                     	;# 
  3755  019B                     	;# 
  3756  019C                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  020F                     	;# 
  3761  020F                     	;# 
  3762  0210                     	;# 
  3763  0210                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0214                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0216                     	;# 
  3772  0216                     	;# 
  3773  0217                     	;# 
  3774  0217                     	;# 
  3775  0218                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021B                     	;# 
  3780  021C                     	;# 
  3781  021C                     	;# 
  3782  021D                     	;# 
  3783  021D                     	;# 
  3784  021E                     	;# 
  3785  021F                     	;# 
  3786  028C                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  028F                     	;# 
  3792  0290                     	;# 
  3793  0290                     	;# 
  3794  0291                     	;# 
  3795  0292                     	;# 
  3796  0292                     	;# 
  3797  0293                     	;# 
  3798  0293                     	;# 
  3799  0294                     	;# 
  3800  0295                     	;# 
  3801  0296                     	;# 
  3802  0296                     	;# 
  3803  0297                     	;# 
  3804  0298                     	;# 
  3805  0298                     	;# 
  3806  0299                     	;# 
  3807  0299                     	;# 
  3808  029A                     	;# 
  3809  029B                     	;# 
  3810  029C                     	;# 
  3811  029C                     	;# 
  3812  029D                     	;# 
  3813  030C                     	;# 
  3814  030C                     	;# 
  3815  030D                     	;# 
  3816  030E                     	;# 
  3817  030F                     	;# 
  3818  0310                     	;# 
  3819  0310                     	;# 
  3820  0311                     	;# 
  3821  0312                     	;# 
  3822  0313                     	;# 
  3823  0314                     	;# 
  3824  0314                     	;# 
  3825  0315                     	;# 
  3826  0316                     	;# 
  3827  0317                     	;# 
  3828  0318                     	;# 
  3829  0318                     	;# 
  3830  0319                     	;# 
  3831  031A                     	;# 
  3832  031B                     	;# 
  3833  031C                     	;# 
  3834  031C                     	;# 
  3835  031D                     	;# 
  3836  031E                     	;# 
  3837  031F                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0390                     	;# 
  3842  0391                     	;# 
  3843  0392                     	;# 
  3844  040C                     	;# 
  3845  040D                     	;# 
  3846  040E                     	;# 
  3847  040F                     	;# 
  3848  0410                     	;# 
  3849  0411                     	;# 
  3850  0416                     	;# 
  3851  0416                     	;# 
  3852  0417                     	;# 
  3853  0418                     	;# 
  3854  0418                     	;# 
  3855  0419                     	;# 
  3856  041A                     	;# 
  3857  041A                     	;# 
  3858  041B                     	;# 
  3859  041C                     	;# 
  3860  041C                     	;# 
  3861  041D                     	;# 
  3862  041E                     	;# 
  3863  041F                     	;# 
  3864  048C                     	;# 
  3865  048C                     	;# 
  3866  048D                     	;# 
  3867  048E                     	;# 
  3868  048F                     	;# 
  3869  048F                     	;# 
  3870  0490                     	;# 
  3871  0491                     	;# 
  3872  0492                     	;# 
  3873  0492                     	;# 
  3874  0493                     	;# 
  3875  0494                     	;# 
  3876  0495                     	;# 
  3877  0495                     	;# 
  3878  0496                     	;# 
  3879  0497                     	;# 
  3880  0498                     	;# 
  3881  0499                     	;# 
  3882  049A                     	;# 
  3883  049B                     	;# 
  3884  049C                     	;# 
  3885  049D                     	;# 
  3886  050C                     	;# 
  3887  050C                     	;# 
  3888  050D                     	;# 
  3889  050E                     	;# 
  3890  050F                     	;# 
  3891  050F                     	;# 
  3892  0510                     	;# 
  3893  0511                     	;# 
  3894  0512                     	;# 
  3895  0512                     	;# 
  3896  0513                     	;# 
  3897  0514                     	;# 
  3898  0515                     	;# 
  3899  0515                     	;# 
  3900  0516                     	;# 
  3901  0517                     	;# 
  3902  0518                     	;# 
  3903  0519                     	;# 
  3904  051A                     	;# 
  3905  051B                     	;# 
  3906  051C                     	;# 
  3907  051D                     	;# 
  3908  058C                     	;# 
  3909  058C                     	;# 
  3910  058D                     	;# 
  3911  058E                     	;# 
  3912  058F                     	;# 
  3913  058F                     	;# 
  3914  0590                     	;# 
  3915  0591                     	;# 
  3916  0592                     	;# 
  3917  0593                     	;# 
  3918  060C                     	;# 
  3919  060D                     	;# 
  3920  060E                     	;# 
  3921  060F                     	;# 
  3922  0610                     	;# 
  3923  0611                     	;# 
  3924  0612                     	;# 
  3925  0613                     	;# 
  3926  0614                     	;# 
  3927  0616                     	;# 
  3928  0617                     	;# 
  3929  0618                     	;# 
  3930  0619                     	;# 
  3931  061A                     	;# 
  3932  061B                     	;# 
  3933  061C                     	;# 
  3934  061D                     	;# 
  3935  061E                     	;# 
  3936  068C                     	;# 
  3937  068D                     	;# 
  3938  068E                     	;# 
  3939  068F                     	;# 
  3940  0690                     	;# 
  3941  0691                     	;# 
  3942  0692                     	;# 
  3943  0693                     	;# 
  3944  0694                     	;# 
  3945  070C                     	;# 
  3946  070D                     	;# 
  3947  070E                     	;# 
  3948  070F                     	;# 
  3949  0710                     	;# 
  3950  0711                     	;# 
  3951  0712                     	;# 
  3952  0713                     	;# 
  3953  0714                     	;# 
  3954  0716                     	;# 
  3955  0717                     	;# 
  3956  0718                     	;# 
  3957  0719                     	;# 
  3958  071A                     	;# 
  3959  071B                     	;# 
  3960  071C                     	;# 
  3961  071D                     	;# 
  3962  071E                     	;# 
  3963  0796                     	;# 
  3964  0797                     	;# 
  3965  0798                     	;# 
  3966  0799                     	;# 
  3967  079A                     	;# 
  3968  079B                     	;# 
  3969  080C                     	;# 
  3970  080D                     	;# 
  3971  080E                     	;# 
  3972  080F                     	;# 
  3973  0810                     	;# 
  3974  0811                     	;# 
  3975  0812                     	;# 
  3976  0813                     	;# 
  3977  0814                     	;# 
  3978  081A                     	;# 
  3979  081B                     	;# 
  3980  081C                     	;# 
  3981  081D                     	;# 
  3982  081E                     	;# 
  3983  081F                     	;# 
  3984  088C                     	;# 
  3985  088D                     	;# 
  3986  088E                     	;# 
  3987  088F                     	;# 
  3988  0890                     	;# 
  3989  0891                     	;# 
  3990  0892                     	;# 
  3991  0893                     	;# 
  3992  0895                     	;# 
  3993  0896                     	;# 
  3994  0897                     	;# 
  3995  0898                     	;# 
  3996  0899                     	;# 
  3997  089A                     	;# 
  3998  089B                     	;# 
  3999  090C                     	;# 
  4000  090E                     	;# 
  4001  090F                     	;# 
  4002  091F                     	;# 
  4003  091F                     	;# 
  4004  098F                     	;# 
  4005  098F                     	;# 
  4006  0990                     	;# 
  4007  0991                     	;# 
  4008  0992                     	;# 
  4009  0993                     	;# 
  4010  0994                     	;# 
  4011  0995                     	;# 
  4012  0996                     	;# 
  4013  0997                     	;# 
  4014  0E0F                     	;# 
  4015  0E10                     	;# 
  4016  0E11                     	;# 
  4017  0E12                     	;# 
  4018  0E13                     	;# 
  4019  0E14                     	;# 
  4020  0E15                     	;# 
  4021  0E16                     	;# 
  4022  0E17                     	;# 
  4023  0E18                     	;# 
  4024  0E19                     	;# 
  4025  0E1A                     	;# 
  4026  0E1B                     	;# 
  4027  0E1C                     	;# 
  4028  0E1D                     	;# 
  4029  0E1E                     	;# 
  4030  0E1F                     	;# 
  4031  0E20                     	;# 
  4032  0E21                     	;# 
  4033  0E22                     	;# 
  4034  0E23                     	;# 
  4035  0E24                     	;# 
  4036  0E25                     	;# 
  4037  0E26                     	;# 
  4038  0E27                     	;# 
  4039  0E28                     	;# 
  4040  0E29                     	;# 
  4041  0E2A                     	;# 
  4042  0E2B                     	;# 
  4043  0E2C                     	;# 
  4044  0E2D                     	;# 
  4045  0E2E                     	;# 
  4046  0E2F                     	;# 
  4047  0E30                     	;# 
  4048  0E31                     	;# 
  4049  0E32                     	;# 
  4050  0E33                     	;# 
  4051  0E34                     	;# 
  4052  0E35                     	;# 
  4053  0E36                     	;# 
  4054  0E37                     	;# 
  4055  0E8F                     	;# 
  4056  0E90                     	;# 
  4057  0E91                     	;# 
  4058  0E92                     	;# 
  4059  0E93                     	;# 
  4060  0E94                     	;# 
  4061  0E95                     	;# 
  4062  0E96                     	;# 
  4063  0E97                     	;# 
  4064  0E9C                     	;# 
  4065  0E9D                     	;# 
  4066  0E9E                     	;# 
  4067  0EA1                     	;# 
  4068  0EA2                     	;# 
  4069  0EA3                     	;# 
  4070  0EA4                     	;# 
  4071  0EA5                     	;# 
  4072  0EA9                     	;# 
  4073  0EAA                     	;# 
  4074  0EAB                     	;# 
  4075  0EAC                     	;# 
  4076  0EB1                     	;# 
  4077  0EB2                     	;# 
  4078  0EB3                     	;# 
  4079  0EB8                     	;# 
  4080  0EB9                     	;# 
  4081  0EBA                     	;# 
  4082  0EBB                     	;# 
  4083  0EBC                     	;# 
  4084  0EBD                     	;# 
  4085  0EBE                     	;# 
  4086  0EC3                     	;# 
  4087  0EC5                     	;# 
  4088  0EC6                     	;# 
  4089  0EC7                     	;# 
  4090  0EC8                     	;# 
  4091  0EC9                     	;# 
  4092  0ECA                     	;# 
  4093  0ECB                     	;# 
  4094  0ECC                     	;# 
  4095  0F10                     	;# 
  4096  0F11                     	;# 
  4097  0F12                     	;# 
  4098  0F13                     	;# 
  4099  0F14                     	;# 
  4100  0F15                     	;# 
  4101  0F16                     	;# 
  4102  0F17                     	;# 
  4103  0F18                     	;# 
  4104  0F19                     	;# 
  4105  0F1A                     	;# 
  4106  0F1B                     	;# 
  4107  0F1C                     	;# 
  4108  0F1D                     	;# 
  4109  0F1E                     	;# 
  4110  0F1F                     	;# 
  4111  0F20                     	;# 
  4112  0F21                     	;# 
  4113  0F22                     	;# 
  4114  0F23                     	;# 
  4115  0F24                     	;# 
  4116  0F25                     	;# 
  4117  0F26                     	;# 
  4118  0F27                     	;# 
  4119  0F38                     	;# 
  4120  0F39                     	;# 
  4121  0F3A                     	;# 
  4122  0F3B                     	;# 
  4123  0F3C                     	;# 
  4124  0F3D                     	;# 
  4125  0F3E                     	;# 
  4126  0F3F                     	;# 
  4127  0F40                     	;# 
  4128  0F41                     	;# 
  4129  0F43                     	;# 
  4130  0F44                     	;# 
  4131  0F45                     	;# 
  4132  0F46                     	;# 
  4133  0F47                     	;# 
  4134  0F48                     	;# 
  4135  0F49                     	;# 
  4136  0F4A                     	;# 
  4137  0F4B                     	;# 
  4138  0F4C                     	;# 
  4139  0F4E                     	;# 
  4140  0F4F                     	;# 
  4141  0F50                     	;# 
  4142  0F51                     	;# 
  4143  0F52                     	;# 
  4144  0F53                     	;# 
  4145  0F54                     	;# 
  4146  0F55                     	;# 
  4147  0F56                     	;# 
  4148  0F57                     	;# 
  4149  0F65                     	;# 
  4150  0F68                     	;# 
  4151  0F69                     	;# 
  4152  0F6A                     	;# 
  4153  0F6B                     	;# 
  4154  0FE4                     	;# 
  4155  0FE5                     	;# 
  4156  0FE6                     	;# 
  4157  0FE7                     	;# 
  4158  0FE8                     	;# 
  4159  0FE9                     	;# 
  4160  0FEA                     	;# 
  4161  0FEB                     	;# 
  4162  0FED                     	;# 
  4163  0FEE                     	;# 
  4164  0FEF                     	;_samples
  4165                           
  4166                           	psect	idataBANK0
  4167  092F                     __pidataBANK0:	
  4168                           
  4169                           ;initializer for _presets
  4170  092F  3400               	retlw	0
  4171  0930  3446               	retlw	70
  4172  0931  345F               	retlw	95
  4173  0932  3469               	retlw	105
  4174  0933  3478               	retlw	120
  4175                           
  4176                           ;initializer for _setpoint
  4177  0934  3446               	retlw	70
  4178                           
  4179                           	psect	idataBANK1
  4180  09E5                     __pidataBANK1:	
  4181                           
  4182                           ;initializer for ___cgram
  4183  09E5  340C               	retlw	12
  4184  09E6  3412               	retlw	18
  4185  09E7  3412               	retlw	18
  4186  09E8  340C               	retlw	12
  4187  09E9  3400               	retlw	0
  4188  09EA  3400               	retlw	0
  4189  09EB  3400               	retlw	0
  4190  09EC  3400               	retlw	0
  4191  09ED  340A               	retlw	10
  4192  09EE  3415               	retlw	21
  4193  09EF  3411               	retlw	17
  4194  09F0  340A               	retlw	10
  4195  09F1  3404               	retlw	4
  4196  09F2  3400               	retlw	0
  4197  09F3  3400               	retlw	0
  4198  09F4  3400               	retlw	0
  4199  09F5  340A               	retlw	10
  4200  09F6  341F               	retlw	31
  4201  09F7  341F               	retlw	31
  4202  09F8  340E               	retlw	14
  4203  09F9  3404               	retlw	4
  4204  09FA  3400               	retlw	0
  4205  09FB  3400               	retlw	0
  4206  09FC  3400               	retlw	0
  4207                           
  4208                           	psect	stringtext
  4209  1000                     __pstringtext:	
  4210  1000                     log@coeff:	
  4211  1000  3400               	retlw	0
  4212  1001  3400               	retlw	0
  4213  1002  3400               	retlw	0
  4214  1003  3400               	retlw	0
  4215  1004  3480               	retlw	128
  4216  1005  343F               	retlw	63
  4217  1006  34F0               	retlw	240
  4218  1007  34FF               	retlw	255
  4219  1008  34BE               	retlw	190
  4220  1009  34E2               	retlw	226
  4221  100A  34A9               	retlw	169
  4222  100B  343E               	retlw	62
  4223  100C  3483               	retlw	131
  4224  100D  3476               	retlw	118
  4225  100E  34BE               	retlw	190
  4226  100F  34AE               	retlw	174
  4227  1010  342B               	retlw	43
  4228  1011  343E               	retlw	62
  4229  1012  343C               	retlw	60
  4230  1013  34C3               	retlw	195
  4231  1014  34BD               	retlw	189
  4232  1015  34D2               	retlw	210
  4233  1016  3413               	retlw	19
  4234  1017  343D               	retlw	61
  4235  1018  3478               	retlw	120
  4236  1019  34D3               	retlw	211
  4237  101A  34BB               	retlw	187
  4238  101B                     __end_oflog@coeff:	
  4239  0016                     _LATA	set	22
  4240  0017                     _LATB	set	23
  4241  0018                     _LATC	set	24
  4242  001E                     _T0CON0	set	30
  4243  001E                     _T0CON0bits	set	30
  4244  001F                     _T0CON1	set	31
  4245  001D                     _TMR0H	set	29
  4246  001C                     _TMR0L	set	28
  4247  0011                     _TRISA	set	17
  4248  0012                     _TRISB	set	18
  4249  0013                     _TRISC	set	19
  4250  005F                     _GIE	set	95
  4251  0063                     _RA3	set	99
  4252  0064                     _RA4	set	100
  4253  0068                     _RB0	set	104
  4254  0069                     _RB1	set	105
  4255  006A                     _RB2	set	106
  4256  006B                     _RB3	set	107
  4257  006C                     _RB4	set	108
  4258  006D                     _RB5	set	109
  4259  009D                     _ADACQ	set	157
  4260  0099                     _ADACT	set	153
  4261  009B                     _ADCAP	set	155
  4262  0098                     _ADCLK	set	152
  4263  0093                     _ADCON0	set	147
  4264  0093                     _ADCON0bits	set	147
  4265  0094                     _ADCON1	set	148
  4266  0095                     _ADCON2	set	149
  4267  0096                     _ADCON3	set	150
  4268  009E                     _ADPCH	set	158
  4269  009C                     _ADPRE	set	156
  4270  009A                     _ADREF	set	154
  4271  008D                     _ADRESH	set	141
  4272  008C                     _ADRESL	set	140
  4273  0097                     _ADSTAT	set	151
  4274  010F                     _ADLTHH	set	271
  4275  010E                     _ADLTHL	set	270
  4276  010D                     _ADRPT	set	269
  4277  0113                     _ADSTPTH	set	275
  4278  0112                     _ADSTPTL	set	274
  4279  0111                     _ADUTHH	set	273
  4280  0110                     _ADUTHL	set	272
  4281  021F                     _CCPTMRS1bits	set	543
  4282  0290                     _T2CLKCON	set	656
  4283  028E                     _T2CON	set	654
  4284  028E                     _T2CONbits	set	654
  4285  028F                     _T2HLT	set	655
  4286  028D                     _T2PR	set	653
  4287  0291                     _T2RST	set	657
  4288  028C                     _T2TMR	set	652
  4289  038E                     _PWM6CON	set	910
  4290  038D                     _PWM6DCH	set	909
  4291  038C                     _PWM6DCL	set	908
  4292  0716                     _PIE0bits	set	1814
  4293  070C                     _PIR0bits	set	1804
  4294  0710                     _PIR4bits	set	1808
  4295  3865                     _TMR0IF	set	14437
  4296  088D                     _OSCCON1	set	2189
  4297  088F                     _OSCCON3	set	2191
  4298  0891                     _OSCEN	set	2193
  4299  0893                     _OSCFRQ	set	2195
  4300  0892                     _OSCTUNE	set	2194
  4301  090C                     _FVRCON	set	2316
  4302  0E8F                     _PPSLOCK	set	3727
  4303  0E8F                     _PPSLOCKbits	set	3727
  4304  0F38                     _ANSELA	set	3896
  4305  0F43                     _ANSELB	set	3907
  4306  0F4E                     _ANSELC	set	3918
  4307  0F11                     _RA1PPS	set	3857
  4308  0F39                     _WPUA	set	3897
  4309  0F44                     _WPUB	set	3908
  4310  0F4F                     _WPUC	set	3919
  4311  0F65                     _WPUE	set	3941
  4312  101B                     STR_1:	
  4313  101B  3453               	retlw	83	;'S'
  4314  101C  3465               	retlw	101	;'e'
  4315  101D  3474               	retlw	116	;'t'
  4316  101E  3470               	retlw	112	;'p'
  4317  101F  346F               	retlw	111	;'o'
  4318  1020  3469               	retlw	105	;'i'
  4319  1021  346E               	retlw	110	;'n'
  4320  1022  3474               	retlw	116	;'t'
  4321  1023  343F               	retlw	63	;'?'
  4322  1024  3400               	retlw	0
  4323  101B                     
  4324                           ; #config settings
  4325  0000                     
  4326                           	psect	cinit
  4327  07C9                     start_initialization:	
  4328  07C9                     __initialization:		;BIGRAM
  4329                           
  4330                           ; Initialize objects allocated to BANK0
  4331  07C9  302F               	movlw	low __pidataBANK0
  4332  07CA  0084               	movwf	4
  4333  07CB  3089               	movlw	(high __pidataBANK0)| (0+128)
  4334  07CC  0085               	movwf	5
  4335  07CD  3063               	movlw	low __pdataBANK0
  4336  07CE  0086               	movwf	6
  4337  07CF  3000               	movlw	high __pdataBANK0
  4338  07D0  0087               	movwf	7
  4339  07D1  3000               	movlw	0
  4340  07D2  00FF               	movwf	btemp+1
  4341  07D3  3006               	movlw	6
  4342  07D4  3180  2004  3187   	fcall	init_ram
  4343                           
  4344                           ; Initialize objects allocated to BANK1
  4345  07D7  30E5               	movlw	low __pidataBANK1
  4346  07D8  0084               	movwf	4
  4347  07D9  3089               	movlw	(high __pidataBANK1)| (0+128)
  4348  07DA  0085               	movwf	5
  4349  07DB  30BE               	movlw	low __pdataBANK1
  4350  07DC  0086               	movwf	6
  4351  07DD  3000               	movlw	high __pdataBANK1
  4352  07DE  0087               	movwf	7
  4353  07DF  3000               	movlw	0
  4354  07E0  00FF               	movwf	btemp+1
  4355  07E1  3018               	movlw	24
  4356  07E2  3180  2004  3187   	fcall	init_ram
  4357                           
  4358                           ; Clear objects allocated to BIGRAM
  4359  07E5  308C               	movlw	low (0+9100)
  4360  07E6  0084               	movwf	4
  4361  07E7  3023               	movlw	high (0+9100)
  4362  07E8  0085               	movwf	5
  4363  07E9  3064               	movlw	100
  4364  07EA  00FE               	movwf	btemp
  4365  07EB  3000               	movlw	0
  4366  07EC  00FF               	movwf	btemp+1
  4367  07ED  3189  214D  3187   	fcall	clear_ram0
  4368                           
  4369                           ; Clear objects allocated to BANK0
  4370  07F0  3057               	movlw	low __pbssBANK0
  4371  07F1  0084               	movwf	4
  4372  07F2  3000               	movlw	high __pbssBANK0
  4373  07F3  0085               	movwf	5
  4374  07F4  300C               	movlw	12
  4375  07F5  00FE               	movwf	btemp
  4376  07F6  3000               	movlw	0
  4377  07F7  00FF               	movwf	btemp+1
  4378  07F8  3189  214D         	fcall	clear_ram0
  4379                           
  4380                           ; Clear objects allocated to BANK1
  4381  07FA  0021               	movlb	1	; select bank1
  4382  07FB  01D6               	clrf	__pbssBANK1& (0+127)
  4383  07FC  01D7               	clrf	(__pbssBANK1+1)& (0+127)
  4384  07FD                     end_of_initialization:	
  4385                           ;End of C runtime variable initialization code
  4386                           
  4387  07FD                     __end_of__initialization:	
  4388  07FD  0020               	movlb	0
  4389  07FE  3184  2C3B         	ljmp	_main	;jump to C main() function
  4390                           
  4391                           	psect	bssBANK0
  4392  0057                     __pbssBANK0:	
  4393  0057                     LCD_Write_Int@F13686:	
  4394  0057                     	ds	5
  4395  005C                     _errno:	
  4396  005C                     	ds	2
  4397  005E                     _downCount:	
  4398  005E                     	ds	1
  4399  005F                     _oldSetpoint:	
  4400  005F                     	ds	1
  4401  0060                     _toggleCount:	
  4402  0060                     	ds	1
  4403  0061                     _upCount:	
  4404  0061                     	ds	1
  4405  0062                     _x:	
  4406  0062                     	ds	1
  4407                           
  4408                           	psect	dataBANK0
  4409  0063                     __pdataBANK0:	
  4410  0063                     _presets:	
  4411  0063                     	ds	5
  4412  0068                     _setpoint:	
  4413  0068                     	ds	1
  4414                           
  4415                           	psect	bssBANK1
  4416  00D6                     __pbssBANK1:	
  4417  00D6                     main@sampleIndex:	
  4418  00D6                     	ds	2
  4419                           
  4420                           	psect	dataBANK1
  4421  00BE                     __pdataBANK1:	
  4422  00BE                     ___cgram:	
  4423  00BE                     	ds	24
  4424                           
  4425                           	psect	inittext
  4426  0004                     init_ram:	
  4427  0004  00FE               	movwf	126
  4428  0005                     initloop:	
  4429  0005  0012               	moviw fsr0++
  4430  0006  001E               	movwi fsr1++
  4431  0007  3001               	movlw	1
  4432  0008  02FE               	subwf	126,f
  4433  0009  3000               	movlw	0
  4434  000A  3BFF               	subwfb	127,f
  4435  000B  087F               	movf	127,w
  4436  000C  047E               	iorwf	126,w
  4437  000D  1903               	btfsc	3,2
  4438  000E  3400               	retlw	0
  4439  000F  2805               	goto	initloop
  4440                           
  4441                           	psect	clrtext
  4442  094D                     clear_ram0:	
  4443                           ;	Called with FSR0 containing the base address, and
  4444                           ;	btemp/btemp+1 has the size to clear
  4445                           
  4446  094D  0064               	clrwdt	;clear the watchdog before getting into this loop
  4447  094E                     clrloop0:	
  4448  094E  0180               	clrf	0	;clear RAM location pointed to by FSR
  4449  094F  3101               	addfsr 0,1
  4450  0950  3001               	movlw	1
  4451  0951  02FE               	subwf	126,f
  4452  0952  3000               	movlw	0
  4453  0953  3BFF               	subwfb	127,f
  4454  0954  087F               	movf	127,w
  4455  0955  047E               	iorwf	126,w
  4456  0956  1903               	btfsc	3,2
  4457  0957  3400               	retlw	0	;all done for this memory range, return
  4458  0958  294E               	goto	clrloop0	;have we reached the end yet?
  4459                           
  4460                           	psect	cstackBANK1
  4461  00A0                     __pcstackBANK1:	
  4462  00A0                     main@minute:	
  4463                           
  4464                           ; 2 bytes @ 0x0
  4465  00A0                     	ds	2
  4466  00A2                     main@R:	
  4467                           
  4468                           ; 3 bytes @ 0x2
  4469  00A2                     	ds	3
  4470  00A5                     _main$1030:	
  4471                           
  4472                           ; 3 bytes @ 0x5
  4473  00A5                     	ds	3
  4474  00A8                     main@counter2:	
  4475                           
  4476                           ; 2 bytes @ 0x8
  4477  00A8                     	ds	2
  4478  00AA                     main@firstTimeThrough:	
  4479                           
  4480                           ; 1 bytes @ 0xA
  4481  00AA                     	ds	1
  4482  00AB                     main@startupTimer:	
  4483                           
  4484                           ; 1 bytes @ 0xB
  4485  00AB                     	ds	1
  4486  00AC                     main@counter:	
  4487                           
  4488                           ; 2 bytes @ 0xC
  4489  00AC                     	ds	2
  4490  00AE                     main@toggle:	
  4491                           
  4492                           ; 1 bytes @ 0xE
  4493  00AE                     	ds	1
  4494  00AF                     main@totals:	
  4495                           
  4496                           ; 4 bytes @ 0xF
  4497  00AF                     	ds	4
  4498  00B3                     main@readTemperatureOld:	
  4499                           
  4500                           ; 2 bytes @ 0x13
  4501  00B3                     	ds	2
  4502  00B5                     main@displayTemp:	
  4503                           
  4504                           ; 2 bytes @ 0x15
  4505  00B5                     	ds	2
  4506  00B7                     main@outCurrent:	
  4507                           
  4508                           ; 2 bytes @ 0x17
  4509  00B7                     	ds	2
  4510  00B9                     main@readTemperature:	
  4511                           
  4512                           ; 2 bytes @ 0x19
  4513  00B9                     	ds	2
  4514  00BB                     main@steinhart:	
  4515                           
  4516                           ; 3 bytes @ 0x1B
  4517  00BB                     	ds	3
  4518                           
  4519                           	psect	cstackCOMMON
  4520  0070                     __pcstackCOMMON:	
  4521  0070                     ?_LCD_Cmd:	
  4522  0070                     ?_LCD_Write_Char:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?_OSCILLATOR_Initialize:	
  4526                           ; 1 bytes @ 0x0
  4527                           
  4528  0070                     ??_OSCILLATOR_Initialize:	
  4529                           ; 1 bytes @ 0x0
  4530                           
  4531  0070                     ?_ADCC_Initialize:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534  0070                     ??_ADCC_Initialize:	
  4535                           ; 1 bytes @ 0x0
  4536                           
  4537  0070                     ?_PWM6_Initialize:	
  4538                           ; 1 bytes @ 0x0
  4539                           
  4540  0070                     ??_PWM6_Initialize:	
  4541                           ; 1 bytes @ 0x0
  4542                           
  4543  0070                     ?_TMR0_Initialize:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0070                     ??_TMR0_Initialize:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     ?_TMR2_Initialize:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ??_TMR2_Initialize:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0070                     ?_readButtons:	
  4556                           ; 1 bytes @ 0x0
  4557                           
  4558  0070                     ?_InitCustomChars:	
  4559                           ; 1 bytes @ 0x0
  4560                           
  4561  0070                     ?_LCD_Port:	
  4562                           ; 1 bytes @ 0x0
  4563                           
  4564  0070                     ??_LCD_Port:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0070                     ?_LCD_Clear:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0070                     ?_LCD_Init:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0070                     ?_PIN_MANAGER_Initialize:	
  4574                           ; 1 bytes @ 0x0
  4575                           
  4576  0070                     ??_PIN_MANAGER_Initialize:	
  4577                           ; 1 bytes @ 0x0
  4578                           
  4579  0070                     ?_SYSTEM_Initialize:	
  4580                           ; 1 bytes @ 0x0
  4581                           
  4582  0070                     ?_PWM6_LoadDutyValue:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0070                     ?_tempSetpoint:	
  4586                           ; 1 bytes @ 0x0
  4587                           
  4588  0070                     ?_main:	
  4589                           ; 1 bytes @ 0x0
  4590                           
  4591  0070                     ?_ADCC_GetSingleConversion:	
  4592                           ; 1 bytes @ 0x0
  4593                           
  4594  0070                     ?___awdiv:	
  4595                           ; 2 bytes @ 0x0
  4596                           
  4597  0070                     ?___awmod:	
  4598                           ; 2 bytes @ 0x0
  4599                           
  4600  0070                     ?___ftpack:	
  4601                           ; 2 bytes @ 0x0
  4602                           
  4603  0070                     ?_frexp:	
  4604                           ; 3 bytes @ 0x0
  4605                           
  4606  0070                     ?___ftneg:	
  4607                           ; 3 bytes @ 0x0
  4608                           
  4609  0070                     ?___aldiv:	
  4610                           ; 3 bytes @ 0x0
  4611                           
  4612  0070                     ?___fttol:	
  4613                           ; 4 bytes @ 0x0
  4614                           
  4615  0070                     LCD_Port@a:	
  4616                           ; 4 bytes @ 0x0
  4617                           
  4618  0070                     PIN_MANAGER_Initialize@state:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621  0070                     PWM6_LoadDutyValue@dutyValue:	
  4622                           ; 1 bytes @ 0x0
  4623                           
  4624  0070                     ___awdiv@divisor:	
  4625                           ; 2 bytes @ 0x0
  4626                           
  4627  0070                     ___awmod@divisor:	
  4628                           ; 2 bytes @ 0x0
  4629                           
  4630  0070                     ___ftpack@arg:	
  4631                           ; 2 bytes @ 0x0
  4632                           
  4633  0070                     ___ftneg@f1:	
  4634                           ; 3 bytes @ 0x0
  4635                           
  4636  0070                     ___fttol@f1:	
  4637                           ; 3 bytes @ 0x0
  4638                           
  4639  0070                     frexp@value:	
  4640                           ; 3 bytes @ 0x0
  4641                           
  4642  0070                     ___aldiv@divisor:	
  4643                           ; 3 bytes @ 0x0
  4644                           
  4645                           
  4646                           ; 4 bytes @ 0x0
  4647  0070                     	ds	1
  4648  0071                     ??_LCD_Cmd:	
  4649  0071                     ??_LCD_Write_Char:	
  4650                           ; 1 bytes @ 0x1
  4651                           
  4652                           
  4653                           ; 1 bytes @ 0x1
  4654  0071                     	ds	1
  4655  0072                     ??_PWM6_LoadDutyValue:	
  4656  0072                     LCD_Cmd@a:	
  4657                           ; 1 bytes @ 0x2
  4658                           
  4659  0072                     LCD_Write_Char@temp:	
  4660                           ; 1 bytes @ 0x2
  4661                           
  4662  0072                     ___awdiv@dividend:	
  4663                           ; 1 bytes @ 0x2
  4664                           
  4665  0072                     ___awmod@dividend:	
  4666                           ; 2 bytes @ 0x2
  4667                           
  4668                           
  4669                           ; 2 bytes @ 0x2
  4670  0072                     	ds	1
  4671  0073                     ??_LCD_Clear:	
  4672  0073                     ?_LCD_Set_Cursor:	
  4673                           ; 1 bytes @ 0x3
  4674                           
  4675  0073                     ??_LCD_Init:	
  4676                           ; 1 bytes @ 0x3
  4677                           
  4678  0073                     ??_ADCC_GetSingleConversion:	
  4679                           ; 1 bytes @ 0x3
  4680                           
  4681  0073                     ??___ftneg:	
  4682                           ; 1 bytes @ 0x3
  4683                           
  4684  0073                     LCD_Set_Cursor@y:	
  4685                           ; 1 bytes @ 0x3
  4686                           
  4687  0073                     LCD_Write_Char@y:	
  4688                           ; 1 bytes @ 0x3
  4689                           
  4690  0073                     ADCC_GetSingleConversion@channel:	
  4691                           ; 1 bytes @ 0x3
  4692                           
  4693  0073                     ___ftpack@exp:	
  4694                           ; 1 bytes @ 0x3
  4695                           
  4696  0073                     frexp@eptr:	
  4697                           ; 1 bytes @ 0x3
  4698                           
  4699                           
  4700                           ; 1 bytes @ 0x3
  4701  0073                     	ds	1
  4702  0074                     ??_frexp:	
  4703  0074                     ??_LCD_Set_Cursor:	
  4704                           ; 1 bytes @ 0x4
  4705                           
  4706  0074                     ??___awdiv:	
  4707                           ; 1 bytes @ 0x4
  4708                           
  4709  0074                     ??___awmod:	
  4710                           ; 1 bytes @ 0x4
  4711                           
  4712  0074                     ??___fttol:	
  4713                           ; 1 bytes @ 0x4
  4714                           
  4715  0074                     LCD_Write_Char@a:	
  4716                           ; 1 bytes @ 0x4
  4717                           
  4718  0074                     ___ftpack@sign:	
  4719                           ; 1 bytes @ 0x4
  4720                           
  4721  0074                     ___aldiv@dividend:	
  4722                           ; 1 bytes @ 0x4
  4723                           
  4724                           
  4725                           ; 4 bytes @ 0x4
  4726  0074                     	ds	1
  4727  0075                     ??___ftpack:	
  4728  0075                     ??_InitCustomChars:	
  4729                           ; 1 bytes @ 0x5
  4730                           
  4731  0075                     ?_LCD_Write_String:	
  4732                           ; 1 bytes @ 0x5
  4733                           
  4734  0075                     LCD_Init@style:	
  4735                           ; 1 bytes @ 0x5
  4736                           
  4737  0075                     ___awdiv@counter:	
  4738                           ; 1 bytes @ 0x5
  4739                           
  4740  0075                     ___awmod@counter:	
  4741                           ; 1 bytes @ 0x5
  4742                           
  4743  0075                     LCD_Write_String@a:	
  4744                           ; 1 bytes @ 0x5
  4745                           
  4746                           
  4747                           ; 2 bytes @ 0x5
  4748  0075                     	ds	1
  4749  0076                     InitCustomChars@i:	
  4750  0076                     LCD_Set_Cursor@x:	
  4751                           ; 1 bytes @ 0x6
  4752                           
  4753  0076                     ___awdiv@sign:	
  4754                           ; 1 bytes @ 0x6
  4755                           
  4756  0076                     ___awmod@sign:	
  4757                           ; 1 bytes @ 0x6
  4758                           
  4759                           
  4760                           ; 1 bytes @ 0x6
  4761  0076                     	ds	1
  4762  0077                     ??_LCD_Write_String:	
  4763  0077                     ??_SYSTEM_Initialize:	
  4764                           ; 1 bytes @ 0x7
  4765                           
  4766  0077                     LCD_Set_Cursor@z:	
  4767                           ; 1 bytes @ 0x7
  4768                           
  4769  0077                     ___awdiv@quotient:	
  4770                           ; 1 bytes @ 0x7
  4771                           
  4772                           
  4773                           ; 2 bytes @ 0x7
  4774  0077                     	ds	1
  4775  0078                     ??___aldiv:	
  4776  0078                     ?___awtoft:	
  4777                           ; 1 bytes @ 0x8
  4778                           
  4779  0078                     ?___lbtoft:	
  4780                           ; 3 bytes @ 0x8
  4781                           
  4782  0078                     ?___lwtoft:	
  4783                           ; 3 bytes @ 0x8
  4784                           
  4785  0078                     LCD_Set_Cursor@w:	
  4786                           ; 3 bytes @ 0x8
  4787                           
  4788  0078                     ___fttol@sign1:	
  4789                           ; 1 bytes @ 0x8
  4790                           
  4791  0078                     LCD_Write_String@i:	
  4792                           ; 1 bytes @ 0x8
  4793                           
  4794  0078                     ___awtoft@c:	
  4795                           ; 2 bytes @ 0x8
  4796                           
  4797  0078                     ___lwtoft@c:	
  4798                           ; 2 bytes @ 0x8
  4799                           
  4800                           
  4801                           ; 2 bytes @ 0x8
  4802  0078                     	ds	1
  4803  0079                     ?_LCD_Write_Int:	
  4804  0079                     LCD_Set_Cursor@temp:	
  4805                           ; 1 bytes @ 0x9
  4806                           
  4807  0079                     LCD_Write_Int@value:	
  4808                           ; 1 bytes @ 0x9
  4809                           
  4810  0079                     ___fttol@lval:	
  4811                           ; 2 bytes @ 0x9
  4812                           
  4813                           
  4814                           ; 4 bytes @ 0x9
  4815  0079                     	ds	2
  4816  007B                     ??___awtoft:	
  4817  007B                     ??___lwtoft:	
  4818                           ; 1 bytes @ 0xB
  4819                           
  4820  007B                     LCD_Write_Int@fieldLength:	
  4821                           ; 1 bytes @ 0xB
  4822                           
  4823  007B                     ___lbtoft@c:	
  4824                           ; 1 bytes @ 0xB
  4825                           
  4826                           
  4827                           ; 1 bytes @ 0xB
  4828  007B                     	ds	1
  4829  007C                     LCD_Write_Int@numPlaces:	
  4830                           
  4831                           ; 1 bytes @ 0xC
  4832  007C                     	ds	1
  4833  007D                     LCD_Write_Int@sign:	
  4834  007D                     ___awtoft@sign:	
  4835                           ; 1 bytes @ 0xD
  4836                           
  4837  007D                     ___fttol@exp1:	
  4838                           ; 1 bytes @ 0xD
  4839                           
  4840                           
  4841                           ; 1 bytes @ 0xD
  4842  007D                     	ds	1
  4843  007E                     ??_eval_poly:	
  4844  007E                     ??___wmul:	
  4845                           ; 1 bytes @ 0xE
  4846                           
  4847  007E                     ??___ftsub:	
  4848                           ; 1 bytes @ 0xE
  4849                           
  4850                           
  4851                           	psect	cstackBANK0
  4852  0020                     __pcstackBANK0:	
  4853                           ; 1 bytes @ 0xE
  4854                           
  4855  0020                     ??_LCD_Write_Int:	
  4856  0020                     ??___lbtoft:	
  4857                           ; 1 bytes @ 0x0
  4858                           
  4859  0020                     ?___wmul:	
  4860                           ; 1 bytes @ 0x0
  4861                           
  4862  0020                     ?___ftdiv:	
  4863                           ; 2 bytes @ 0x0
  4864                           
  4865  0020                     ?___ftmul:	
  4866                           ; 3 bytes @ 0x0
  4867                           
  4868  0020                     ___aldiv@counter:	
  4869                           ; 3 bytes @ 0x0
  4870                           
  4871  0020                     ___wmul@multiplier:	
  4872                           ; 1 bytes @ 0x0
  4873                           
  4874  0020                     ___ftdiv@f2:	
  4875                           ; 2 bytes @ 0x0
  4876                           
  4877  0020                     ___ftmul@f1:	
  4878                           ; 3 bytes @ 0x0
  4879                           
  4880                           
  4881                           ; 3 bytes @ 0x0
  4882  0020                     	ds	1
  4883  0021                     ___aldiv@sign:	
  4884                           
  4885                           ; 1 bytes @ 0x1
  4886  0021                     	ds	1
  4887  0022                     ___wmul@multiplicand:	
  4888  0022                     ___aldiv@quotient:	
  4889                           ; 2 bytes @ 0x2
  4890                           
  4891                           
  4892                           ; 4 bytes @ 0x2
  4893  0022                     	ds	1
  4894  0023                     ___ftdiv@f1:	
  4895  0023                     ___ftmul@f2:	
  4896                           ; 3 bytes @ 0x3
  4897                           
  4898                           
  4899                           ; 3 bytes @ 0x3
  4900  0023                     	ds	1
  4901  0024                     ___wmul@product:	
  4902                           
  4903                           ; 2 bytes @ 0x4
  4904  0024                     	ds	1
  4905  0025                     LCD_Write_Int@str:	
  4906                           
  4907                           ; 5 bytes @ 0x5
  4908  0025                     	ds	1
  4909  0026                     ??___ftdiv:	
  4910  0026                     ??___ftmul:	
  4911                           ; 1 bytes @ 0x6
  4912                           
  4913  0026                     ?___lwdiv:	
  4914                           ; 1 bytes @ 0x6
  4915                           
  4916  0026                     ___lwdiv@divisor:	
  4917                           ; 2 bytes @ 0x6
  4918                           
  4919                           
  4920                           ; 2 bytes @ 0x6
  4921  0026                     	ds	2
  4922  0028                     ___lwdiv@dividend:	
  4923                           
  4924                           ; 2 bytes @ 0x8
  4925  0028                     	ds	2
  4926  002A                     ??___lwdiv:	
  4927  002A                     ___ftdiv@cntr:	
  4928                           ; 1 bytes @ 0xA
  4929                           
  4930  002A                     ___ftmul@exp:	
  4931                           ; 1 bytes @ 0xA
  4932                           
  4933  002A                     LCD_Write_Int@j:	
  4934                           ; 1 bytes @ 0xA
  4935                           
  4936                           
  4937                           ; 2 bytes @ 0xA
  4938  002A                     	ds	1
  4939  002B                     ___lwdiv@quotient:	
  4940  002B                     ___ftdiv@f3:	
  4941                           ; 2 bytes @ 0xB
  4942                           
  4943  002B                     ___ftmul@f3_as_product:	
  4944                           ; 3 bytes @ 0xB
  4945                           
  4946                           
  4947                           ; 3 bytes @ 0xB
  4948  002B                     	ds	1
  4949  002C                     LCD_Write_Int@i:	
  4950                           
  4951                           ; 2 bytes @ 0xC
  4952  002C                     	ds	1
  4953  002D                     ___lwdiv@counter:	
  4954                           
  4955                           ; 1 bytes @ 0xD
  4956  002D                     	ds	1
  4957  002E                     ??_readButtons:	
  4958  002E                     ___ftdiv@exp:	
  4959                           ; 1 bytes @ 0xE
  4960                           
  4961  002E                     ___ftmul@cntr:	
  4962                           ; 1 bytes @ 0xE
  4963                           
  4964                           
  4965                           ; 1 bytes @ 0xE
  4966  002E                     	ds	1
  4967  002F                     ___ftdiv@sign:	
  4968  002F                     ___ftmul@sign:	
  4969                           ; 1 bytes @ 0xF
  4970                           
  4971                           
  4972                           ; 1 bytes @ 0xF
  4973  002F                     	ds	1
  4974  0030                     ?___ftadd:	
  4975  0030                     ___ftadd@f1:	
  4976                           ; 3 bytes @ 0x10
  4977                           
  4978                           
  4979                           ; 3 bytes @ 0x10
  4980  0030                     	ds	1
  4981  0031                     ??_tempSetpoint:	
  4982                           
  4983                           ; 1 bytes @ 0x11
  4984  0031                     	ds	2
  4985  0033                     ___ftadd@f2:	
  4986                           
  4987                           ; 3 bytes @ 0x13
  4988  0033                     	ds	1
  4989  0034                     tempSetpoint@counter:	
  4990                           
  4991                           ; 1 bytes @ 0x14
  4992  0034                     	ds	2
  4993  0036                     ??___ftadd:	
  4994                           
  4995                           ; 1 bytes @ 0x16
  4996  0036                     	ds	4
  4997  003A                     ___ftadd@sign:	
  4998                           
  4999                           ; 1 bytes @ 0x1A
  5000  003A                     	ds	1
  5001  003B                     ___ftadd@exp2:	
  5002                           
  5003                           ; 1 bytes @ 0x1B
  5004  003B                     	ds	1
  5005  003C                     ___ftadd@exp1:	
  5006                           
  5007                           ; 1 bytes @ 0x1C
  5008  003C                     	ds	1
  5009  003D                     ?___ftge:	
  5010  003D                     ?_eval_poly:	
  5011                           ; 1 bit 
  5012                           
  5013  003D                     ?___ftsub:	
  5014                           ; 3 bytes @ 0x1D
  5015                           
  5016  003D                     ___ftge@ff1:	
  5017                           ; 3 bytes @ 0x1D
  5018                           
  5019  003D                     ___ftsub@f2:	
  5020                           ; 3 bytes @ 0x1D
  5021                           
  5022  003D                     eval_poly@x:	
  5023                           ; 3 bytes @ 0x1D
  5024                           
  5025                           
  5026                           ; 3 bytes @ 0x1D
  5027  003D                     	ds	3
  5028  0040                     eval_poly@d:	
  5029  0040                     ___ftge@ff2:	
  5030                           ; 2 bytes @ 0x20
  5031                           
  5032  0040                     ___ftsub@f1:	
  5033                           ; 3 bytes @ 0x20
  5034                           
  5035                           
  5036                           ; 3 bytes @ 0x20
  5037  0040                     	ds	2
  5038  0042                     eval_poly@n:	
  5039                           
  5040                           ; 2 bytes @ 0x22
  5041  0042                     	ds	1
  5042  0043                     ??___ftge:	
  5043                           
  5044                           ; 1 bytes @ 0x23
  5045  0043                     	ds	1
  5046  0044                     eval_poly@res:	
  5047                           
  5048                           ; 3 bytes @ 0x24
  5049  0044                     	ds	3
  5050  0047                     ?_log:	
  5051  0047                     log@x:	
  5052                           ; 3 bytes @ 0x27
  5053                           
  5054                           
  5055                           ; 3 bytes @ 0x27
  5056  0047                     	ds	3
  5057  004A                     ??_log:	
  5058                           
  5059                           ; 1 bytes @ 0x2A
  5060  004A                     	ds	1
  5061  004B                     log@exponent:	
  5062                           
  5063                           ; 2 bytes @ 0x2B
  5064  004B                     	ds	2
  5065  004D                     ??_main:	
  5066                           
  5067                           ; 1 bytes @ 0x2D
  5068  004D                     	ds	10
  5069                           
  5070                           	psect	maintext
  5071  043B                     __pmaintext:	
  5072 ;;
  5073 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5074 ;;
  5075 ;; *************** function _main *****************
  5076 ;; Defined at:
  5077 ;;		line 14 in file "main.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  totals          4   15[BANK1 ] long 
  5082 ;;  steinhart       3   27[BANK1 ] float 
  5083 ;;  R               3    2[BANK1 ] float 
  5084 ;;  readTemperat    2   25[BANK1 ] unsigned int 
  5085 ;;  outCurrent      2   23[BANK1 ] unsigned int 
  5086 ;;  displayTemp     2   21[BANK1 ] unsigned int 
  5087 ;;  readTemperat    2   19[BANK1 ] unsigned int 
  5088 ;;  counter         2   12[BANK1 ] unsigned int 
  5089 ;;  counter2        2    8[BANK1 ] unsigned int 
  5090 ;;  minute          2    0[BANK1 ] unsigned int 
  5091 ;;  toggle          1   14[BANK1 ] unsigned char 
  5092 ;;  startupTimer    1   11[BANK1 ] unsigned char 
  5093 ;;  firstTimeThr    1   10[BANK1 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : B1F/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Totals:         0      10      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;Total ram usage:       40 bytes
  5108 ;; Hardware stack levels required when called:    5
  5109 ;; This function calls:
  5110 ;;		_ADCC_GetSingleConversion
  5111 ;;		_LCD_Set_Cursor
  5112 ;;		_LCD_Write_Char
  5113 ;;		_LCD_Write_Int
  5114 ;;		_PWM6_LoadDutyValue
  5115 ;;		_SYSTEM_Initialize
  5116 ;;		___aldiv
  5117 ;;		___ftadd
  5118 ;;		___ftdiv
  5119 ;;		___ftge
  5120 ;;		___ftneg
  5121 ;;		___ftsub
  5122 ;;		___fttol
  5123 ;;		___lbtoft
  5124 ;;		___lwdiv
  5125 ;;		___lwtoft
  5126 ;;		___wmul
  5127 ;;		_log
  5128 ;;		_readButtons
  5129 ;;		_tempSetpoint
  5130 ;; This function is called by:
  5131 ;;		Startup code after reset
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _main
  5137  043B                     _main:	
  5138                           
  5139                           ;main.c: 16: SYSTEM_Initialize();
  5140                           
  5141                           ;incstack = 0
  5142                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5143  043B  318B  235A  3184   	fcall	_SYSTEM_Initialize
  5144                           
  5145                           ;main.c: 18: uint16_t readTemperature, outCurrent = 1023, readTemperatureOld, displayTem
      +                          p = 70, counter = 0, counter2 = 0, minute = 0;
  5146  043E  30FF               	movlw	255
  5147  043F  0021               	movlb	1	; select bank1
  5148  0440  00B7               	movwf	main@outCurrent^(0+128)
  5149  0441  3003               	movlw	3
  5150  0442  00B8               	movwf	(main@outCurrent^(0+128)+1)
  5151  0443  3046               	movlw	70
  5152  0444  00B5               	movwf	main@displayTemp^(0+128)
  5153  0445  3000               	movlw	0
  5154  0446  00B6               	movwf	(main@displayTemp^(0+128)+1)
  5155  0447  01AC               	clrf	main@counter^(0+128)
  5156  0448  01AD               	clrf	(main@counter+1)^(0+128)
  5157  0449  01A8               	clrf	main@counter2^(0+128)
  5158  044A  01A9               	clrf	(main@counter2+1)^(0+128)
  5159  044B  01A0               	clrf	main@minute^(0+128)
  5160  044C  01A1               	clrf	(main@minute+1)^(0+128)
  5161                           
  5162                           ;main.c: 20: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5163  044D  01AB               	clrf	main@startupTimer^(0+128)
  5164  044E  01AA               	clrf	main@firstTimeThrough^(0+128)
  5165  044F  01AE               	clrf	main@toggle^(0+128)
  5166                           
  5167                           ;main.c: 22: float R, steinhart;
  5168                           ;main.c: 24: static uint16_t sampleIndex = 0;
  5169                           ;main.c: 26: int32_t totals = 0;
  5170  0450  3000               	movlw	0
  5171  0451  00B2               	movwf	(main@totals+3)^(0+128)
  5172  0452  3000               	movlw	0
  5173  0453  00B1               	movwf	(main@totals+2)^(0+128)
  5174  0454  3000               	movlw	0
  5175  0455  00B0               	movwf	(main@totals+1)^(0+128)
  5176  0456  3000               	movlw	0
  5177  0457  00AF               	movwf	main@totals^(0+128)
  5178  0458                     l2950:	
  5179                           ;main.c: 30: while (1)
  5180                           
  5181                           
  5182                           ;main.c: 31: {
  5183                           ;main.c: 32: readTemperature = ADCC_GetSingleConversion(2);
  5184  0458  3002               	movlw	2
  5185  0459  3189  2166  3184   	fcall	_ADCC_GetSingleConversion
  5186  045C  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5187  045D  0021               	movlb	1	; select bank1
  5188  045E  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5189  045F  0870               	movf	?_ADCC_GetSingleConversion,w
  5190  0460  00B9               	movwf	main@readTemperature^(0+128)
  5191                           
  5192                           ;main.c: 34: totals = totals - samples[sampleIndex];
  5193  0461  082F               	movf	main@totals^(0+128),w
  5194  0462  0020               	movlb	0	; select bank0
  5195  0463  00CD               	movwf	??_main
  5196  0464  0021               	movlb	1	; select bank1
  5197  0465  0830               	movf	(main@totals+1)^(0+128),w
  5198  0466  0020               	movlb	0	; select bank0
  5199  0467  00CE               	movwf	??_main+1
  5200  0468  0021               	movlb	1	; select bank1
  5201  0469  0831               	movf	(main@totals+2)^(0+128),w
  5202  046A  0020               	movlb	0	; select bank0
  5203  046B  00CF               	movwf	??_main+2
  5204  046C  0021               	movlb	1	; select bank1
  5205  046D  0832               	movf	(main@totals+3)^(0+128),w
  5206  046E  0020               	movlb	0	; select bank0
  5207  046F  00D0               	movwf	??_main+3
  5208  0470  0021               	movlb	1	; select bank1
  5209  0471  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5210  0472  0020               	movlb	0	; select bank0
  5211  0473  00D2               	movwf	??_main+5
  5212  0474  0021               	movlb	1	; select bank1
  5213  0475  0856               	movf	main@sampleIndex^(0+128),w
  5214  0476  0020               	movlb	0	; select bank0
  5215  0477  00D1               	movwf	??_main+4
  5216  0478  35D1               	lslf	??_main+4,f
  5217  0479  0DD2               	rlf	??_main+5,f
  5218  047A  308C               	movlw	140
  5219  047B  0751               	addwf	??_main+4,w
  5220  047C  0084               	movwf	4
  5221  047D  3023               	movlw	35
  5222  047E  3D52               	addwfc	??_main+5,w
  5223  047F  0085               	movwf	5
  5224  0480  3F00               	moviw [0]fsr0
  5225  0481  00D3               	movwf	??_main+6
  5226  0482  3F01               	moviw [1]fsr0
  5227  0483  00D4               	movwf	??_main+7
  5228  0484  01D5               	clrf	??_main+8
  5229  0485  01D6               	clrf	??_main+9
  5230  0486  09D3               	comf	??_main+6,f
  5231  0487  09D4               	comf	??_main+7,f
  5232  0488  09D5               	comf	??_main+8,f
  5233  0489  09D6               	comf	??_main+9,f
  5234  048A  0AD3               	incf	??_main+6,f
  5235  048B  1903               	skipnz
  5236  048C  0AD4               	incf	??_main+7,f
  5237  048D  1903               	skipnz
  5238  048E  0AD5               	incf	??_main+8,f
  5239  048F  1903               	skipnz
  5240  0490  0AD6               	incf	??_main+9,f
  5241  0491  0853               	movf	??_main+6,w
  5242  0492  07CD               	addwf	??_main,f
  5243  0493  0854               	movf	??_main+7,w
  5244  0494  3DCE               	addwfc	??_main+1,f
  5245  0495  0855               	movf	??_main+8,w
  5246  0496  3DCF               	addwfc	??_main+2,f
  5247  0497  0856               	movf	??_main+9,w
  5248  0498  3DD0               	addwfc	??_main+3,f
  5249  0499  0850               	movf	??_main+3,w
  5250  049A  0021               	movlb	1	; select bank1
  5251  049B  00B2               	movwf	(main@totals+3)^(0+128)
  5252  049C  0020               	movlb	0	; select bank0
  5253  049D  084F               	movf	??_main+2,w
  5254  049E  0021               	movlb	1	; select bank1
  5255  049F  00B1               	movwf	(main@totals+2)^(0+128)
  5256  04A0  0020               	movlb	0	; select bank0
  5257  04A1  084E               	movf	??_main+1,w
  5258  04A2  0021               	movlb	1	; select bank1
  5259  04A3  00B0               	movwf	(main@totals+1)^(0+128)
  5260  04A4  0020               	movlb	0	; select bank0
  5261  04A5  084D               	movf	??_main,w
  5262  04A6  0021               	movlb	1	; select bank1
  5263  04A7  00AF               	movwf	main@totals^(0+128)
  5264                           
  5265                           ;main.c: 36: samples[sampleIndex] = readTemperature;
  5266  04A8  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5267  04A9  0020               	movlb	0	; select bank0
  5268  04AA  00CE               	movwf	??_main+1
  5269  04AB  0021               	movlb	1	; select bank1
  5270  04AC  0856               	movf	main@sampleIndex^(0+128),w
  5271  04AD  0020               	movlb	0	; select bank0
  5272  04AE  00CD               	movwf	??_main
  5273  04AF  35CD               	lslf	??_main,f
  5274  04B0  0DCE               	rlf	??_main+1,f
  5275  04B1  308C               	movlw	140
  5276  04B2  00CF               	movwf	??_main+2
  5277  04B3  3023               	movlw	35
  5278  04B4  00D0               	movwf	??_main+3
  5279  04B5  084D               	movf	??_main,w
  5280  04B6  074F               	addwf	??_main+2,w
  5281  04B7  0086               	movwf	6
  5282  04B8  084E               	movf	??_main+1,w
  5283  04B9  3D50               	addwfc	??_main+3,w
  5284  04BA  0087               	movwf	7
  5285  04BB  0021               	movlb	1	; select bank1
  5286  04BC  0839               	movf	main@readTemperature^(0+128),w
  5287  04BD  3FC0               	movwi [0]fsr1
  5288  04BE  083A               	movf	(main@readTemperature+1)^(0+128),w
  5289  04BF  3FC1               	movwi [1]fsr1
  5290                           
  5291                           ;main.c: 38: totals = totals + samples[sampleIndex];
  5292  04C0  082F               	movf	main@totals^(0+128),w
  5293  04C1  0020               	movlb	0	; select bank0
  5294  04C2  00CD               	movwf	??_main
  5295  04C3  0021               	movlb	1	; select bank1
  5296  04C4  0830               	movf	(main@totals+1)^(0+128),w
  5297  04C5  0020               	movlb	0	; select bank0
  5298  04C6  00CE               	movwf	??_main+1
  5299  04C7  0021               	movlb	1	; select bank1
  5300  04C8  0831               	movf	(main@totals+2)^(0+128),w
  5301  04C9  0020               	movlb	0	; select bank0
  5302  04CA  00CF               	movwf	??_main+2
  5303  04CB  0021               	movlb	1	; select bank1
  5304  04CC  0832               	movf	(main@totals+3)^(0+128),w
  5305  04CD  0020               	movlb	0	; select bank0
  5306  04CE  00D0               	movwf	??_main+3
  5307  04CF  0021               	movlb	1	; select bank1
  5308  04D0  0857               	movf	(main@sampleIndex+1)^(0+128),w
  5309  04D1  0020               	movlb	0	; select bank0
  5310  04D2  00D2               	movwf	??_main+5
  5311  04D3  0021               	movlb	1	; select bank1
  5312  04D4  0856               	movf	main@sampleIndex^(0+128),w
  5313  04D5  0020               	movlb	0	; select bank0
  5314  04D6  00D1               	movwf	??_main+4
  5315  04D7  35D1               	lslf	??_main+4,f
  5316  04D8  0DD2               	rlf	??_main+5,f
  5317  04D9  308C               	movlw	140
  5318  04DA  0751               	addwf	??_main+4,w
  5319  04DB  0084               	movwf	4
  5320  04DC  3023               	movlw	35
  5321  04DD  3D52               	addwfc	??_main+5,w
  5322  04DE  0085               	movwf	5
  5323  04DF  3F00               	moviw [0]fsr0
  5324  04E0  00D3               	movwf	??_main+6
  5325  04E1  3F01               	moviw [1]fsr0
  5326  04E2  00D4               	movwf	??_main+7
  5327  04E3  01D5               	clrf	??_main+8
  5328  04E4  01D6               	clrf	??_main+9
  5329  04E5  0853               	movf	??_main+6,w
  5330  04E6  07CD               	addwf	??_main,f
  5331  04E7  0854               	movf	??_main+7,w
  5332  04E8  3DCE               	addwfc	??_main+1,f
  5333  04E9  0855               	movf	??_main+8,w
  5334  04EA  3DCF               	addwfc	??_main+2,f
  5335  04EB  0856               	movf	??_main+9,w
  5336  04EC  3DD0               	addwfc	??_main+3,f
  5337  04ED  0850               	movf	??_main+3,w
  5338  04EE  0021               	movlb	1	; select bank1
  5339  04EF  00B2               	movwf	(main@totals+3)^(0+128)
  5340  04F0  0020               	movlb	0	; select bank0
  5341  04F1  084F               	movf	??_main+2,w
  5342  04F2  0021               	movlb	1	; select bank1
  5343  04F3  00B1               	movwf	(main@totals+2)^(0+128)
  5344  04F4  0020               	movlb	0	; select bank0
  5345  04F5  084E               	movf	??_main+1,w
  5346  04F6  0021               	movlb	1	; select bank1
  5347  04F7  00B0               	movwf	(main@totals+1)^(0+128)
  5348  04F8  0020               	movlb	0	; select bank0
  5349  04F9  084D               	movf	??_main,w
  5350  04FA  0021               	movlb	1	; select bank1
  5351  04FB  00AF               	movwf	main@totals^(0+128)
  5352                           
  5353                           ;main.c: 40: sampleIndex += 1;
  5354  04FC  3001               	movlw	1
  5355  04FD  07D6               	addwf	main@sampleIndex^(0+128),f
  5356  04FE  3000               	movlw	0
  5357  04FF  3DD7               	addwfc	(main@sampleIndex+1)^(0+128),f
  5358                           
  5359                           ;main.c: 42: if(sampleIndex >= 50)
  5360  0500  3000               	movlw	0
  5361  0501  0257               	subwf	(main@sampleIndex+1)^(0+128),w
  5362  0502  3032               	movlw	50
  5363  0503  1903               	skipnz
  5364  0504  0256               	subwf	main@sampleIndex^(0+128),w
  5365  0505  1C03               	skipc
  5366  0506  2D09               	goto	l2962
  5367                           
  5368                           ;main.c: 43: {
  5369                           ;main.c: 44: sampleIndex = 0;
  5370  0507  01D6               	clrf	main@sampleIndex^(0+128)
  5371  0508  01D7               	clrf	(main@sampleIndex+1)^(0+128)
  5372  0509                     l2962:	
  5373                           
  5374                           ;main.c: 45: }
  5375                           ;main.c: 47: readTemperature = totals / 50;
  5376  0509  3000               	movlw	0
  5377  050A  00F3               	movwf	___aldiv@divisor+3
  5378  050B  3000               	movlw	0
  5379  050C  00F2               	movwf	___aldiv@divisor+2
  5380  050D  3000               	movlw	0
  5381  050E  00F1               	movwf	___aldiv@divisor+1
  5382  050F  3032               	movlw	50
  5383  0510  00F0               	movwf	___aldiv@divisor
  5384  0511  0832               	movf	(main@totals+3)^(0+128),w
  5385  0512  00F7               	movwf	___aldiv@dividend+3
  5386  0513  0831               	movf	(main@totals+2)^(0+128),w
  5387  0514  00F6               	movwf	___aldiv@dividend+2
  5388  0515  0830               	movf	(main@totals+1)^(0+128),w
  5389  0516  00F5               	movwf	___aldiv@dividend+1
  5390  0517  082F               	movf	main@totals^(0+128),w
  5391  0518  00F4               	movwf	___aldiv@dividend
  5392  0519  318E  264F  3184   	fcall	___aldiv
  5393  051C  0871               	movf	?___aldiv+1,w
  5394  051D  0021               	movlb	1	; select bank1
  5395  051E  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5396  051F  0870               	movf	?___aldiv,w
  5397  0520  00B9               	movwf	main@readTemperature^(0+128)
  5398                           
  5399                           ;main.c: 49: if(startupTimer >= 70)
  5400  0521  3046               	movlw	70
  5401  0522  022B               	subwf	main@startupTimer^(0+128),w
  5402  0523  1C03               	skipc
  5403  0524  2DB1               	goto	l2998
  5404                           
  5405                           ;main.c: 50: {
  5406                           ;main.c: 51: if(firstTimeThrough == 0)
  5407  0525  082A               	movf	main@firstTimeThrough^(0+128),w
  5408  0526  1D03               	btfss	3,2
  5409  0527  2D32               	goto	l2972
  5410                           
  5411                           ;main.c: 52: {
  5412                           ;main.c: 53: readTemperatureOld = readTemperature;
  5413  0528  083A               	movf	(main@readTemperature+1)^(0+128),w
  5414  0529  00B4               	movwf	(main@readTemperatureOld+1)^(0+128)
  5415  052A  0839               	movf	main@readTemperature^(0+128),w
  5416  052B  00B3               	movwf	main@readTemperatureOld^(0+128)
  5417                           
  5418                           ;main.c: 54: firstTimeThrough +=1;
  5419  052C  3001               	movlw	1
  5420  052D  0020               	movlb	0	; select bank0
  5421  052E  00CD               	movwf	??_main
  5422  052F  084D               	movf	??_main,w
  5423  0530  0021               	movlb	1	; select bank1
  5424  0531  07AA               	addwf	main@firstTimeThrough^(0+128),f
  5425  0532                     l2972:	
  5426                           
  5427                           ;main.c: 55: }
  5428                           ;main.c: 57: if(readTemperature > readTemperatureOld)
  5429  0532  083A               	movf	(main@readTemperature+1)^(0+128),w
  5430  0533  0234               	subwf	(main@readTemperatureOld+1)^(0+128),w
  5431  0534  1D03               	skipz
  5432  0535  2D38               	goto	u3245
  5433  0536  0839               	movf	main@readTemperature^(0+128),w
  5434  0537  0233               	subwf	main@readTemperatureOld^(0+128),w
  5435  0538                     u3245:	
  5436  0538  1803               	skipnc
  5437  0539  2D3E               	goto	l320
  5438                           
  5439                           ;main.c: 58: {
  5440                           ;main.c: 59: readTemperatureOld += 1;
  5441  053A  3001               	movlw	1
  5442  053B  07B3               	addwf	main@readTemperatureOld^(0+128),f
  5443  053C  3000               	movlw	0
  5444  053D  3DB4               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  5445  053E                     l320:	
  5446                           
  5447                           ;main.c: 60: }
  5448                           ;main.c: 62: if(readTemperature < readTemperatureOld)
  5449  053E  0834               	movf	(main@readTemperatureOld+1)^(0+128),w
  5450  053F  023A               	subwf	(main@readTemperature+1)^(0+128),w
  5451  0540  1D03               	skipz
  5452  0541  2D44               	goto	u3255
  5453  0542  0833               	movf	main@readTemperatureOld^(0+128),w
  5454  0543  0239               	subwf	main@readTemperature^(0+128),w
  5455  0544                     u3255:	
  5456  0544  1803               	skipnc
  5457  0545  2D4A               	goto	l321
  5458                           
  5459                           ;main.c: 63: {
  5460                           ;main.c: 64: readTemperatureOld -= 1;
  5461  0546  3001               	movlw	1
  5462  0547  02B3               	subwf	main@readTemperatureOld^(0+128),f
  5463  0548  3000               	movlw	0
  5464  0549  3BB4               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  5465  054A                     l321:	
  5466                           
  5467                           ;main.c: 65: }
  5468                           ;main.c: 67: readTemperature = readTemperatureOld;
  5469  054A  0834               	movf	(main@readTemperatureOld+1)^(0+128),w
  5470  054B  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5471  054C  0833               	movf	main@readTemperatureOld^(0+128),w
  5472  054D  00B9               	movwf	main@readTemperature^(0+128)
  5473                           
  5474                           ;main.c: 69: if(setpoint > steinhart)
  5475  054E  083B               	movf	main@steinhart^(0+128),w
  5476  054F  0020               	movlb	0	; select bank0
  5477  0550  00BD               	movwf	___ftge@ff1
  5478  0551  0021               	movlb	1	; select bank1
  5479  0552  083C               	movf	(main@steinhart+1)^(0+128),w
  5480  0553  0020               	movlb	0	; select bank0
  5481  0554  00BE               	movwf	___ftge@ff1+1
  5482  0555  0021               	movlb	1	; select bank1
  5483  0556  083D               	movf	(main@steinhart+2)^(0+128),w
  5484  0557  0020               	movlb	0	; select bank0
  5485  0558  00BF               	movwf	___ftge@ff1+2
  5486  0559  0868               	movf	_setpoint,w
  5487  055A  318A  2216  3184   	fcall	___lbtoft
  5488  055D  0878               	movf	?___lbtoft,w
  5489  055E  0020               	movlb	0	; select bank0
  5490  055F  00C0               	movwf	___ftge@ff2
  5491  0560  0879               	movf	?___lbtoft+1,w
  5492  0561  00C1               	movwf	___ftge@ff2+1
  5493  0562  087A               	movf	?___lbtoft+2,w
  5494  0563  00C2               	movwf	___ftge@ff2+2
  5495  0564  318B  23CF  3184   	fcall	___ftge
  5496  0567  1803               	btfsc	3,0
  5497  0568  2D7A               	goto	l2986
  5498                           
  5499                           ;main.c: 70: {
  5500                           ;main.c: 71: if(outCurrent < 1023)
  5501  0569  3003               	movlw	3
  5502  056A  0021               	movlb	1	; select bank1
  5503  056B  0238               	subwf	(main@outCurrent+1)^(0+128),w
  5504  056C  30FF               	movlw	255
  5505  056D  1903               	skipnz
  5506  056E  0237               	subwf	main@outCurrent^(0+128),w
  5507  056F  1803               	skipnc
  5508  0570  2D76               	goto	l2984
  5509                           
  5510                           ;main.c: 72: {
  5511                           ;main.c: 73: outCurrent++;
  5512  0571  3001               	movlw	1
  5513  0572  07B7               	addwf	main@outCurrent^(0+128),f
  5514  0573  3000               	movlw	0
  5515  0574  3DB8               	addwfc	(main@outCurrent+1)^(0+128),f
  5516                           
  5517                           ;main.c: 74: }
  5518  0575  2D7A               	goto	l2986
  5519  0576                     l2984:	
  5520                           
  5521                           ;main.c: 75: else
  5522                           ;main.c: 76: {
  5523                           ;main.c: 77: outCurrent = 1023;
  5524  0576  30FF               	movlw	255
  5525  0577  00B7               	movwf	main@outCurrent^(0+128)
  5526  0578  3003               	movlw	3
  5527  0579  00B8               	movwf	(main@outCurrent^(0+128)+1)
  5528  057A                     l2986:	
  5529                           
  5530                           ;main.c: 78: }
  5531                           ;main.c: 79: }
  5532                           ;main.c: 81: if(setpoint < steinhart)
  5533  057A  0020               	movlb	0	; select bank0
  5534  057B  0868               	movf	_setpoint,w
  5535  057C  318A  2216  3184   	fcall	___lbtoft
  5536  057F  0878               	movf	?___lbtoft,w
  5537  0580  0020               	movlb	0	; select bank0
  5538  0581  00BD               	movwf	___ftge@ff1
  5539  0582  0879               	movf	?___lbtoft+1,w
  5540  0583  00BE               	movwf	___ftge@ff1+1
  5541  0584  087A               	movf	?___lbtoft+2,w
  5542  0585  00BF               	movwf	___ftge@ff1+2
  5543  0586  0021               	movlb	1	; select bank1
  5544  0587  083B               	movf	main@steinhart^(0+128),w
  5545  0588  0020               	movlb	0	; select bank0
  5546  0589  00C0               	movwf	___ftge@ff2
  5547  058A  0021               	movlb	1	; select bank1
  5548  058B  083C               	movf	(main@steinhart+1)^(0+128),w
  5549  058C  0020               	movlb	0	; select bank0
  5550  058D  00C1               	movwf	___ftge@ff2+1
  5551  058E  0021               	movlb	1	; select bank1
  5552  058F  083D               	movf	(main@steinhart+2)^(0+128),w
  5553  0590  0020               	movlb	0	; select bank0
  5554  0591  00C2               	movwf	___ftge@ff2+2
  5555  0592  318B  23CF  3184   	fcall	___ftge
  5556  0595  1803               	btfsc	3,0
  5557  0596  2DA3               	goto	l2994
  5558                           
  5559                           ;main.c: 82: {
  5560                           ;main.c: 83: if(outCurrent > 0)
  5561  0597  0021               	movlb	1	; select bank1
  5562  0598  0837               	movf	main@outCurrent^(0+128),w
  5563  0599  0438               	iorwf	(main@outCurrent+1)^(0+128),w
  5564  059A  1903               	btfsc	3,2
  5565  059B  2DA1               	goto	l2992
  5566                           
  5567                           ;main.c: 84: {
  5568                           ;main.c: 85: outCurrent-=1;
  5569  059C  3001               	movlw	1
  5570  059D  02B7               	subwf	main@outCurrent^(0+128),f
  5571  059E  3000               	movlw	0
  5572  059F  3BB8               	subwfb	(main@outCurrent+1)^(0+128),f
  5573                           
  5574                           ;main.c: 86: }
  5575  05A0  2DA3               	goto	l2994
  5576  05A1                     l2992:	
  5577                           
  5578                           ;main.c: 87: else
  5579                           ;main.c: 88: {
  5580                           ;main.c: 89: outCurrent = 0;
  5581  05A1  01B7               	clrf	main@outCurrent^(0+128)
  5582  05A2  01B8               	clrf	(main@outCurrent+1)^(0+128)
  5583  05A3                     l2994:	
  5584                           
  5585                           ;main.c: 90: }
  5586                           ;main.c: 91: }
  5587                           ;main.c: 93: PWM6_LoadDutyValue(outCurrent);
  5588  05A3  0021               	movlb	1	; select bank1
  5589  05A4  0838               	movf	(main@outCurrent+1)^(0+128),w
  5590  05A5  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5591  05A6  0837               	movf	main@outCurrent^(0+128),w
  5592  05A7  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5593  05A8  3189  21B7  3184   	fcall	_PWM6_LoadDutyValue
  5594                           
  5595                           ;main.c: 95: startupTimer = 69;
  5596  05AB  3045               	movlw	69
  5597  05AC  0020               	movlb	0	; select bank0
  5598  05AD  00CD               	movwf	??_main
  5599  05AE  084D               	movf	??_main,w
  5600  05AF  0021               	movlb	1	; select bank1
  5601  05B0  00AB               	movwf	main@startupTimer^(0+128)
  5602  05B1                     l2998:	
  5603                           
  5604                           ;main.c: 96: }
  5605                           ;main.c: 101: R = 10200/(1023/(float)readTemperature - 1);
  5606  05B1  3000               	movlw	0
  5607  05B2  0020               	movlb	0	; select bank0
  5608  05B3  00B0               	movwf	___ftadd@f1
  5609  05B4  3080               	movlw	128
  5610  05B5  00B1               	movwf	___ftadd@f1+1
  5611  05B6  30BF               	movlw	191
  5612  05B7  00B2               	movwf	___ftadd@f1+2
  5613  05B8  0021               	movlb	1	; select bank1
  5614  05B9  083A               	movf	(main@readTemperature+1)^(0+128),w
  5615  05BA  00F9               	movwf	___lwtoft@c+1
  5616  05BB  0839               	movf	main@readTemperature^(0+128),w
  5617  05BC  00F8               	movwf	___lwtoft@c
  5618  05BD  3189  21A4  3184   	fcall	___lwtoft
  5619  05C0  0878               	movf	?___lwtoft,w
  5620  05C1  0020               	movlb	0	; select bank0
  5621  05C2  00A0               	movwf	___ftdiv@f2
  5622  05C3  0879               	movf	?___lwtoft+1,w
  5623  05C4  00A1               	movwf	___ftdiv@f2+1
  5624  05C5  087A               	movf	?___lwtoft+2,w
  5625  05C6  00A2               	movwf	___ftdiv@f2+2
  5626  05C7  30C0               	movlw	192
  5627  05C8  00A3               	movwf	___ftdiv@f1
  5628  05C9  307F               	movlw	127
  5629  05CA  00A4               	movwf	___ftdiv@f1+1
  5630  05CB  3044               	movlw	68
  5631  05CC  00A5               	movwf	___ftdiv@f1+2
  5632  05CD  318F  2757  3184   	fcall	___ftdiv
  5633  05D0  0020               	movlb	0	; select bank0
  5634  05D1  0820               	movf	?___ftdiv,w
  5635  05D2  00B3               	movwf	___ftadd@f2
  5636  05D3  0821               	movf	?___ftdiv+1,w
  5637  05D4  00B4               	movwf	___ftadd@f2+1
  5638  05D5  0822               	movf	?___ftdiv+2,w
  5639  05D6  00B5               	movwf	___ftadd@f2+2
  5640  05D7  3183  2345  3184   	fcall	___ftadd
  5641  05DA  0020               	movlb	0	; select bank0
  5642  05DB  0830               	movf	?___ftadd,w
  5643  05DC  0021               	movlb	1	; select bank1
  5644  05DD  00A5               	movwf	_main$1030^(0+128)
  5645  05DE  0020               	movlb	0	; select bank0
  5646  05DF  0831               	movf	?___ftadd+1,w
  5647  05E0  0021               	movlb	1	; select bank1
  5648  05E1  00A6               	movwf	(_main$1030+1)^(0+128)
  5649  05E2  0020               	movlb	0	; select bank0
  5650  05E3  0832               	movf	?___ftadd+2,w
  5651  05E4  0021               	movlb	1	; select bank1
  5652  05E5  00A7               	movwf	(_main$1030+2)^(0+128)
  5653                           
  5654                           ;main.c: 96: }
  5655                           ;main.c: 101: R = 10200/(1023/(float)readTemperature - 1);
  5656  05E6  0825               	movf	_main$1030^(0+128),w
  5657  05E7  0020               	movlb	0	; select bank0
  5658  05E8  00A0               	movwf	___ftdiv@f2
  5659  05E9  0021               	movlb	1	; select bank1
  5660  05EA  0826               	movf	(_main$1030+1)^(0+128),w
  5661  05EB  0020               	movlb	0	; select bank0
  5662  05EC  00A1               	movwf	___ftdiv@f2+1
  5663  05ED  0021               	movlb	1	; select bank1
  5664  05EE  0827               	movf	(_main$1030+2)^(0+128),w
  5665  05EF  0020               	movlb	0	; select bank0
  5666  05F0  00A2               	movwf	___ftdiv@f2+2
  5667  05F1  3060               	movlw	96
  5668  05F2  00A3               	movwf	___ftdiv@f1
  5669  05F3  301F               	movlw	31
  5670  05F4  00A4               	movwf	___ftdiv@f1+1
  5671  05F5  3046               	movlw	70
  5672  05F6  00A5               	movwf	___ftdiv@f1+2
  5673  05F7  318F  2757  3184   	fcall	___ftdiv
  5674  05FA  0020               	movlb	0	; select bank0
  5675  05FB  0820               	movf	?___ftdiv,w
  5676  05FC  0021               	movlb	1	; select bank1
  5677  05FD  00A2               	movwf	main@R^(0+128)
  5678  05FE  0020               	movlb	0	; select bank0
  5679  05FF  0821               	movf	?___ftdiv+1,w
  5680  0600  0021               	movlb	1	; select bank1
  5681  0601  00A3               	movwf	(main@R+1)^(0+128)
  5682  0602  0020               	movlb	0	; select bank0
  5683  0603  0822               	movf	?___ftdiv+2,w
  5684  0604  0021               	movlb	1	; select bank1
  5685  0605  00A4               	movwf	(main@R+2)^(0+128)
  5686                           
  5687                           ;main.c: 103: steinhart = R /10061;
  5688  0606  3034               	movlw	52
  5689  0607  0020               	movlb	0	; select bank0
  5690  0608  00A0               	movwf	___ftdiv@f2
  5691  0609  301D               	movlw	29
  5692  060A  00A1               	movwf	___ftdiv@f2+1
  5693  060B  3046               	movlw	70
  5694  060C  00A2               	movwf	___ftdiv@f2+2
  5695  060D  0021               	movlb	1	; select bank1
  5696  060E  0822               	movf	main@R^(0+128),w
  5697  060F  0020               	movlb	0	; select bank0
  5698  0610  00A3               	movwf	___ftdiv@f1
  5699  0611  0021               	movlb	1	; select bank1
  5700  0612  0823               	movf	(main@R+1)^(0+128),w
  5701  0613  0020               	movlb	0	; select bank0
  5702  0614  00A4               	movwf	___ftdiv@f1+1
  5703  0615  0021               	movlb	1	; select bank1
  5704  0616  0824               	movf	(main@R+2)^(0+128),w
  5705  0617  0020               	movlb	0	; select bank0
  5706  0618  00A5               	movwf	___ftdiv@f1+2
  5707  0619  318F  2757  3184   	fcall	___ftdiv
  5708  061C  0020               	movlb	0	; select bank0
  5709  061D  0820               	movf	?___ftdiv,w
  5710  061E  0021               	movlb	1	; select bank1
  5711  061F  00BB               	movwf	main@steinhart^(0+128)
  5712  0620  0020               	movlb	0	; select bank0
  5713  0621  0821               	movf	?___ftdiv+1,w
  5714  0622  0021               	movlb	1	; select bank1
  5715  0623  00BC               	movwf	(main@steinhart+1)^(0+128)
  5716  0624  0020               	movlb	0	; select bank0
  5717  0625  0822               	movf	?___ftdiv+2,w
  5718  0626  0021               	movlb	1	; select bank1
  5719  0627  00BD               	movwf	(main@steinhart+2)^(0+128)
  5720                           
  5721                           ;main.c: 104: steinhart = log(steinhart);
  5722  0628  083B               	movf	main@steinhart^(0+128),w
  5723  0629  0020               	movlb	0	; select bank0
  5724  062A  00C7               	movwf	log@x
  5725  062B  0021               	movlb	1	; select bank1
  5726  062C  083C               	movf	(main@steinhart+1)^(0+128),w
  5727  062D  0020               	movlb	0	; select bank0
  5728  062E  00C8               	movwf	log@x+1
  5729  062F  0021               	movlb	1	; select bank1
  5730  0630  083D               	movf	(main@steinhart+2)^(0+128),w
  5731  0631  0020               	movlb	0	; select bank0
  5732  0632  00C9               	movwf	log@x+2
  5733  0633  3180  2061  3184   	fcall	_log
  5734  0636  0020               	movlb	0	; select bank0
  5735  0637  0847               	movf	?_log,w
  5736  0638  0021               	movlb	1	; select bank1
  5737  0639  00BB               	movwf	main@steinhart^(0+128)
  5738  063A  0020               	movlb	0	; select bank0
  5739  063B  0848               	movf	?_log+1,w
  5740  063C  0021               	movlb	1	; select bank1
  5741  063D  00BC               	movwf	(main@steinhart+1)^(0+128)
  5742  063E  0020               	movlb	0	; select bank0
  5743  063F  0849               	movf	?_log+2,w
  5744  0640  0021               	movlb	1	; select bank1
  5745  0641  00BD               	movwf	(main@steinhart+2)^(0+128)
  5746                           
  5747                           ;main.c: 105: steinhart /= 3995;
  5748  0642  30B0               	movlw	176
  5749  0643  0020               	movlb	0	; select bank0
  5750  0644  00A0               	movwf	___ftdiv@f2
  5751  0645  3079               	movlw	121
  5752  0646  00A1               	movwf	___ftdiv@f2+1
  5753  0647  3045               	movlw	69
  5754  0648  00A2               	movwf	___ftdiv@f2+2
  5755  0649  0021               	movlb	1	; select bank1
  5756  064A  083B               	movf	main@steinhart^(0+128),w
  5757  064B  0020               	movlb	0	; select bank0
  5758  064C  00A3               	movwf	___ftdiv@f1
  5759  064D  0021               	movlb	1	; select bank1
  5760  064E  083C               	movf	(main@steinhart+1)^(0+128),w
  5761  064F  0020               	movlb	0	; select bank0
  5762  0650  00A4               	movwf	___ftdiv@f1+1
  5763  0651  0021               	movlb	1	; select bank1
  5764  0652  083D               	movf	(main@steinhart+2)^(0+128),w
  5765  0653  0020               	movlb	0	; select bank0
  5766  0654  00A5               	movwf	___ftdiv@f1+2
  5767  0655  318F  2757  3184   	fcall	___ftdiv
  5768  0658  0020               	movlb	0	; select bank0
  5769  0659  0820               	movf	?___ftdiv,w
  5770  065A  0021               	movlb	1	; select bank1
  5771  065B  00BB               	movwf	main@steinhart^(0+128)
  5772  065C  0020               	movlb	0	; select bank0
  5773  065D  0821               	movf	?___ftdiv+1,w
  5774  065E  0021               	movlb	1	; select bank1
  5775  065F  00BC               	movwf	(main@steinhart+1)^(0+128)
  5776  0660  0020               	movlb	0	; select bank0
  5777  0661  0822               	movf	?___ftdiv+2,w
  5778  0662  0021               	movlb	1	; select bank1
  5779  0663  00BD               	movwf	(main@steinhart+2)^(0+128)
  5780                           
  5781                           ;main.c: 106: steinhart += 1.0 / (25 + 273.15);
  5782  0664  30CF               	movlw	207
  5783  0665  0020               	movlb	0	; select bank0
  5784  0666  00B0               	movwf	___ftadd@f1
  5785  0667  305B               	movlw	91
  5786  0668  00B1               	movwf	___ftadd@f1+1
  5787  0669  303B               	movlw	59
  5788  066A  00B2               	movwf	___ftadd@f1+2
  5789  066B  0021               	movlb	1	; select bank1
  5790  066C  083B               	movf	main@steinhart^(0+128),w
  5791  066D  0020               	movlb	0	; select bank0
  5792  066E  00B3               	movwf	___ftadd@f2
  5793  066F  0021               	movlb	1	; select bank1
  5794  0670  083C               	movf	(main@steinhart+1)^(0+128),w
  5795  0671  0020               	movlb	0	; select bank0
  5796  0672  00B4               	movwf	___ftadd@f2+1
  5797  0673  0021               	movlb	1	; select bank1
  5798  0674  083D               	movf	(main@steinhart+2)^(0+128),w
  5799  0675  0020               	movlb	0	; select bank0
  5800  0676  00B5               	movwf	___ftadd@f2+2
  5801  0677  3183  2345  3184   	fcall	___ftadd
  5802  067A  0020               	movlb	0	; select bank0
  5803  067B  0830               	movf	?___ftadd,w
  5804  067C  0021               	movlb	1	; select bank1
  5805  067D  00BB               	movwf	main@steinhart^(0+128)
  5806  067E  0020               	movlb	0	; select bank0
  5807  067F  0831               	movf	?___ftadd+1,w
  5808  0680  0021               	movlb	1	; select bank1
  5809  0681  00BC               	movwf	(main@steinhart+1)^(0+128)
  5810  0682  0020               	movlb	0	; select bank0
  5811  0683  0832               	movf	?___ftadd+2,w
  5812  0684  0021               	movlb	1	; select bank1
  5813  0685  00BD               	movwf	(main@steinhart+2)^(0+128)
  5814                           
  5815                           ;main.c: 107: steinhart = 1.0 / steinhart;
  5816  0686  083B               	movf	main@steinhart^(0+128),w
  5817  0687  0020               	movlb	0	; select bank0
  5818  0688  00A0               	movwf	___ftdiv@f2
  5819  0689  0021               	movlb	1	; select bank1
  5820  068A  083C               	movf	(main@steinhart+1)^(0+128),w
  5821  068B  0020               	movlb	0	; select bank0
  5822  068C  00A1               	movwf	___ftdiv@f2+1
  5823  068D  0021               	movlb	1	; select bank1
  5824  068E  083D               	movf	(main@steinhart+2)^(0+128),w
  5825  068F  0020               	movlb	0	; select bank0
  5826  0690  00A2               	movwf	___ftdiv@f2+2
  5827  0691  3000               	movlw	0
  5828  0692  00A3               	movwf	___ftdiv@f1
  5829  0693  3080               	movlw	128
  5830  0694  00A4               	movwf	___ftdiv@f1+1
  5831  0695  303F               	movlw	63
  5832  0696  00A5               	movwf	___ftdiv@f1+2
  5833  0697  318F  2757  3184   	fcall	___ftdiv
  5834  069A  0020               	movlb	0	; select bank0
  5835  069B  0820               	movf	?___ftdiv,w
  5836  069C  0021               	movlb	1	; select bank1
  5837  069D  00BB               	movwf	main@steinhart^(0+128)
  5838  069E  0020               	movlb	0	; select bank0
  5839  069F  0821               	movf	?___ftdiv+1,w
  5840  06A0  0021               	movlb	1	; select bank1
  5841  06A1  00BC               	movwf	(main@steinhart+1)^(0+128)
  5842  06A2  0020               	movlb	0	; select bank0
  5843  06A3  0822               	movf	?___ftdiv+2,w
  5844  06A4  0021               	movlb	1	; select bank1
  5845  06A5  00BD               	movwf	(main@steinhart+2)^(0+128)
  5846                           
  5847                           ;main.c: 108: steinhart -= 273.15;
  5848  06A6  3093               	movlw	147
  5849  06A7  0020               	movlb	0	; select bank0
  5850  06A8  00BD               	movwf	___ftsub@f2
  5851  06A9  3088               	movlw	136
  5852  06AA  00BE               	movwf	___ftsub@f2+1
  5853  06AB  3043               	movlw	67
  5854  06AC  00BF               	movwf	___ftsub@f2+2
  5855  06AD  0021               	movlb	1	; select bank1
  5856  06AE  083B               	movf	main@steinhart^(0+128),w
  5857  06AF  0020               	movlb	0	; select bank0
  5858  06B0  00C0               	movwf	___ftsub@f1
  5859  06B1  0021               	movlb	1	; select bank1
  5860  06B2  083C               	movf	(main@steinhart+1)^(0+128),w
  5861  06B3  0020               	movlb	0	; select bank0
  5862  06B4  00C1               	movwf	___ftsub@f1+1
  5863  06B5  0021               	movlb	1	; select bank1
  5864  06B6  083D               	movf	(main@steinhart+2)^(0+128),w
  5865  06B7  0020               	movlb	0	; select bank0
  5866  06B8  00C2               	movwf	___ftsub@f1+2
  5867  06B9  318A  2266  3184   	fcall	___ftsub
  5868  06BC  0020               	movlb	0	; select bank0
  5869  06BD  083D               	movf	?___ftsub,w
  5870  06BE  0021               	movlb	1	; select bank1
  5871  06BF  00BB               	movwf	main@steinhart^(0+128)
  5872  06C0  0020               	movlb	0	; select bank0
  5873  06C1  083E               	movf	?___ftsub+1,w
  5874  06C2  0021               	movlb	1	; select bank1
  5875  06C3  00BC               	movwf	(main@steinhart+1)^(0+128)
  5876  06C4  0020               	movlb	0	; select bank0
  5877  06C5  083F               	movf	?___ftsub+2,w
  5878  06C6  0021               	movlb	1	; select bank1
  5879  06C7  00BD               	movwf	(main@steinhart+2)^(0+128)
  5880                           
  5881                           ;main.c: 111: displayTemp = (uint16_t)steinhart * 10;
  5882  06C8  083B               	movf	main@steinhart^(0+128),w
  5883  06C9  00F0               	movwf	___fttol@f1
  5884  06CA  083C               	movf	(main@steinhart+1)^(0+128),w
  5885  06CB  00F1               	movwf	___fttol@f1+1
  5886  06CC  083D               	movf	(main@steinhart+2)^(0+128),w
  5887  06CD  00F2               	movwf	___fttol@f1+2
  5888  06CE  318E  26D1  3184   	fcall	___fttol
  5889  06D1  0871               	movf	?___fttol+1,w
  5890  06D2  0020               	movlb	0	; select bank0
  5891  06D3  00A1               	movwf	___wmul@multiplier+1
  5892  06D4  0870               	movf	?___fttol,w
  5893  06D5  00A0               	movwf	___wmul@multiplier
  5894  06D6  300A               	movlw	10
  5895  06D7  00A2               	movwf	___wmul@multiplicand
  5896  06D8  3000               	movlw	0
  5897  06D9  00A3               	movwf	___wmul@multiplicand+1
  5898  06DA  318A  224A  3184   	fcall	___wmul
  5899  06DD  0020               	movlb	0	; select bank0
  5900  06DE  0821               	movf	?___wmul+1,w
  5901  06DF  0021               	movlb	1	; select bank1
  5902  06E0  00B6               	movwf	(main@displayTemp+1)^(0+128)
  5903  06E1  0020               	movlb	0	; select bank0
  5904  06E2  0820               	movf	?___wmul,w
  5905  06E3  0021               	movlb	1	; select bank1
  5906  06E4  00B5               	movwf	main@displayTemp^(0+128)
  5907                           
  5908                           ;main.c: 113: if(toggle == 1)
  5909  06E5  032E               	decf	main@toggle^(0+128),w
  5910  06E6  1D03               	btfss	3,2
  5911  06E7  2F27               	goto	l3028
  5912                           
  5913                           ;main.c: 114: {
  5914                           ;main.c: 115: displayTemp = displayTemp*9/5+320;
  5915  06E8  3005               	movlw	5
  5916  06E9  0020               	movlb	0	; select bank0
  5917  06EA  00A6               	movwf	___lwdiv@divisor
  5918  06EB  3000               	movlw	0
  5919  06EC  00A7               	movwf	___lwdiv@divisor+1
  5920  06ED  0021               	movlb	1	; select bank1
  5921  06EE  0836               	movf	(main@displayTemp+1)^(0+128),w
  5922  06EF  0020               	movlb	0	; select bank0
  5923  06F0  00A1               	movwf	___wmul@multiplier+1
  5924  06F1  0021               	movlb	1	; select bank1
  5925  06F2  0835               	movf	main@displayTemp^(0+128),w
  5926  06F3  0020               	movlb	0	; select bank0
  5927  06F4  00A0               	movwf	___wmul@multiplier
  5928  06F5  3009               	movlw	9
  5929  06F6  00A2               	movwf	___wmul@multiplicand
  5930  06F7  3000               	movlw	0
  5931  06F8  00A3               	movwf	___wmul@multiplicand+1
  5932  06F9  318A  224A  3184   	fcall	___wmul
  5933  06FC  0020               	movlb	0	; select bank0
  5934  06FD  0821               	movf	?___wmul+1,w
  5935  06FE  00A9               	movwf	___lwdiv@dividend+1
  5936  06FF  0820               	movf	?___wmul,w
  5937  0700  00A8               	movwf	___lwdiv@dividend
  5938  0701  318B  2325  3184   	fcall	___lwdiv
  5939  0704  0020               	movlb	0	; select bank0
  5940  0705  0826               	movf	?___lwdiv,w
  5941  0706  3E40               	addlw	64
  5942  0707  0021               	movlb	1	; select bank1
  5943  0708  00B5               	movwf	main@displayTemp^(0+128)
  5944  0709  3001               	movlw	1
  5945  070A  0020               	movlb	0	; select bank0
  5946  070B  3D27               	addwfc	?___lwdiv+1,w
  5947  070C  0021               	movlb	1	; select bank1
  5948  070D  00B6               	movwf	(main@displayTemp+1)^(0+128)
  5949                           
  5950                           ;main.c: 116: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5951  070E  01F3               	clrf	LCD_Set_Cursor@y
  5952  070F  0AF3               	incf	LCD_Set_Cursor@y,f
  5953  0710  3000               	movlw	0
  5954  0711  318C  240B  3184   	fcall	_LCD_Set_Cursor
  5955  0714  0021               	movlb	1	; select bank1
  5956  0715  0836               	movf	(main@displayTemp+1)^(0+128),w
  5957  0716  00FA               	movwf	LCD_Write_Int@value+1
  5958  0717  0835               	movf	main@displayTemp^(0+128),w
  5959  0718  00F9               	movwf	LCD_Write_Int@value
  5960  0719  01FB               	clrf	LCD_Write_Int@fieldLength
  5961  071A  03FB               	decf	LCD_Write_Int@fieldLength,f
  5962  071B  01FC               	clrf	LCD_Write_Int@numPlaces
  5963  071C  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5964  071D  01FD               	clrf	LCD_Write_Int@sign
  5965  071E  3182  227C  3184   	fcall	_LCD_Write_Int
  5966                           
  5967                           ;main.c: 117: LCD_Write_Char(0);
  5968  0721  3000               	movlw	0
  5969  0722  318A  22C9  3184   	fcall	_LCD_Write_Char
  5970                           
  5971                           ;main.c: 118: LCD_Write_Char('F');
  5972  0725  3046               	movlw	70
  5973  0726  2F3F               	goto	L1
  5974  0727                     l3028:	
  5975                           ;main.c: 120: }
  5976                           
  5977                           ;main.c: 119: LCD_Write_Char(' ');
  5978                           
  5979                           
  5980                           ;main.c: 121: else
  5981                           ;main.c: 122: {
  5982                           ;main.c: 123: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5983  0727  01F3               	clrf	LCD_Set_Cursor@y
  5984  0728  0AF3               	incf	LCD_Set_Cursor@y,f
  5985  0729  3000               	movlw	0
  5986  072A  318C  240B  3184   	fcall	_LCD_Set_Cursor
  5987  072D  0021               	movlb	1	; select bank1
  5988  072E  0836               	movf	(main@displayTemp+1)^(0+128),w
  5989  072F  00FA               	movwf	LCD_Write_Int@value+1
  5990  0730  0835               	movf	main@displayTemp^(0+128),w
  5991  0731  00F9               	movwf	LCD_Write_Int@value
  5992  0732  01FB               	clrf	LCD_Write_Int@fieldLength
  5993  0733  03FB               	decf	LCD_Write_Int@fieldLength,f
  5994  0734  01FC               	clrf	LCD_Write_Int@numPlaces
  5995  0735  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5996  0736  01FD               	clrf	LCD_Write_Int@sign
  5997  0737  3182  227C  3184   	fcall	_LCD_Write_Int
  5998                           
  5999                           ;main.c: 124: LCD_Write_Char(0);
  6000  073A  3000               	movlw	0
  6001  073B  318A  22C9  3184   	fcall	_LCD_Write_Char
  6002                           
  6003                           ;main.c: 125: LCD_Write_Char('C');
  6004  073E  3043               	movlw	67
  6005  073F                     L1:	
  6006  073F  318A  22C9  3184   	fcall	_LCD_Write_Char
  6007                           
  6008                           ;main.c: 126: LCD_Write_Char(' ');
  6009  0742  3020               	movlw	32
  6010  0743  318A  22C9  3184   	fcall	_LCD_Write_Char
  6011                           
  6012                           ;main.c: 127: }
  6013                           ;main.c: 132: { LCD_Set_Cursor(1,0); LCD_Write_Int(counter,-1, 0, 0);};
  6014  0746  01F3               	clrf	LCD_Set_Cursor@y
  6015  0747  3001               	movlw	1
  6016  0748  318C  240B  3184   	fcall	_LCD_Set_Cursor
  6017  074B  0021               	movlb	1	; select bank1
  6018  074C  082D               	movf	(main@counter+1)^(0+128),w
  6019  074D  00FA               	movwf	LCD_Write_Int@value+1
  6020  074E  082C               	movf	main@counter^(0+128),w
  6021  074F  00F9               	movwf	LCD_Write_Int@value
  6022  0750  01FB               	clrf	LCD_Write_Int@fieldLength
  6023  0751  03FB               	decf	LCD_Write_Int@fieldLength,f
  6024  0752  01FC               	clrf	LCD_Write_Int@numPlaces
  6025  0753  01FD               	clrf	LCD_Write_Int@sign
  6026  0754  3182  227C  3184   	fcall	_LCD_Write_Int
  6027                           
  6028                           ;main.c: 133: LCD_Write_Char(' ');
  6029  0757  3020               	movlw	32
  6030  0758  318A  22C9  3184   	fcall	_LCD_Write_Char
  6031                           
  6032                           ;main.c: 134: startupTimer +=1;
  6033  075B  3001               	movlw	1
  6034  075C  0020               	movlb	0	; select bank0
  6035  075D  00CD               	movwf	??_main
  6036  075E  084D               	movf	??_main,w
  6037  075F  0021               	movlb	1	; select bank1
  6038  0760  07AB               	addwf	main@startupTimer^(0+128),f
  6039                           
  6040                           ;main.c: 136: counter2 +=1;
  6041  0761  3001               	movlw	1
  6042  0762  07A8               	addwf	main@counter2^(0+128),f
  6043  0763  3000               	movlw	0
  6044  0764  3DA9               	addwfc	(main@counter2+1)^(0+128),f
  6045                           
  6046                           ;main.c: 138: if(TMR0IF)
  6047  0765  002E               	movlb	14	; select bank14
  6048  0766  1E8C               	btfss	12,5	;volatile
  6049  0767  2F74               	goto	l330
  6050                           
  6051                           ;main.c: 139: {
  6052                           ;main.c: 140: TMR0H = 0x24;
  6053  0768  3024               	movlw	36
  6054  0769  0020               	movlb	0	; select bank0
  6055  076A  009D               	movwf	29	;volatile
  6056                           
  6057                           ;main.c: 141: TMR0L = 0xB8;
  6058  076B  30B8               	movlw	184
  6059  076C  009C               	movwf	28	;volatile
  6060                           
  6061                           ;main.c: 142: TMR0IF = 0;
  6062  076D  002E               	movlb	14	; select bank14
  6063  076E  128C               	bcf	12,5	;volatile
  6064                           
  6065                           ;main.c: 143: counter+=1;
  6066  076F  3001               	movlw	1
  6067  0770  0021               	movlb	1	; select bank1
  6068  0771  07AC               	addwf	main@counter^(0+128),f
  6069  0772  3000               	movlw	0
  6070  0773  3DAD               	addwfc	(main@counter+1)^(0+128),f
  6071  0774                     l330:	
  6072                           
  6073                           ;main.c: 144: }
  6074                           ;main.c: 146: if(counter2>12)
  6075  0774  3000               	movlw	0
  6076  0775  0021               	movlb	1	; select bank1
  6077  0776  0229               	subwf	(main@counter2+1)^(0+128),w
  6078  0777  300D               	movlw	13
  6079  0778  1903               	skipnz
  6080  0779  0228               	subwf	main@counter2^(0+128),w
  6081  077A  1C03               	skipc
  6082  077B  2F86               	goto	l3056
  6083                           
  6084                           ;main.c: 147: {
  6085                           ;main.c: 148: toggle = 1-toggle;
  6086  077C  032E               	decf	main@toggle^(0+128),w
  6087  077D  3AFF               	xorlw	255
  6088  077E  3E01               	addlw	1
  6089  077F  0020               	movlb	0	; select bank0
  6090  0780  00CD               	movwf	??_main
  6091  0781  084D               	movf	??_main,w
  6092  0782  0021               	movlb	1	; select bank1
  6093  0783  00AE               	movwf	main@toggle^(0+128)
  6094                           
  6095                           ;main.c: 149: counter2 = 0;
  6096  0784  01A8               	clrf	main@counter2^(0+128)
  6097  0785  01A9               	clrf	(main@counter2+1)^(0+128)
  6098  0786                     l3056:	
  6099                           
  6100                           ;main.c: 150: }
  6101                           ;main.c: 152: if(setpoint - steinhart < 2)
  6102  0786  083B               	movf	main@steinhart^(0+128),w
  6103  0787  00F0               	movwf	___ftneg@f1
  6104  0788  083C               	movf	(main@steinhart+1)^(0+128),w
  6105  0789  00F1               	movwf	___ftneg@f1+1
  6106  078A  083D               	movf	(main@steinhart+2)^(0+128),w
  6107  078B  00F2               	movwf	___ftneg@f1+2
  6108  078C  3189  2145  3184   	fcall	___ftneg
  6109  078F  0870               	movf	?___ftneg,w
  6110  0790  0020               	movlb	0	; select bank0
  6111  0791  00B0               	movwf	___ftadd@f1
  6112  0792  0871               	movf	?___ftneg+1,w
  6113  0793  00B1               	movwf	___ftadd@f1+1
  6114  0794  0872               	movf	?___ftneg+2,w
  6115  0795  00B2               	movwf	___ftadd@f1+2
  6116  0796  0868               	movf	_setpoint,w
  6117  0797  318A  2216  3184   	fcall	___lbtoft
  6118  079A  0878               	movf	?___lbtoft,w
  6119  079B  0020               	movlb	0	; select bank0
  6120  079C  00B3               	movwf	___ftadd@f2
  6121  079D  0879               	movf	?___lbtoft+1,w
  6122  079E  00B4               	movwf	___ftadd@f2+1
  6123  079F  087A               	movf	?___lbtoft+2,w
  6124  07A0  00B5               	movwf	___ftadd@f2+2
  6125  07A1  3183  2345  3184   	fcall	___ftadd
  6126  07A4  0020               	movlb	0	; select bank0
  6127  07A5  0830               	movf	?___ftadd,w
  6128  07A6  00BD               	movwf	___ftge@ff1
  6129  07A7  0831               	movf	?___ftadd+1,w
  6130  07A8  00BE               	movwf	___ftge@ff1+1
  6131  07A9  0832               	movf	?___ftadd+2,w
  6132  07AA  00BF               	movwf	___ftge@ff1+2
  6133  07AB  3000               	movlw	0
  6134  07AC  00C0               	movwf	___ftge@ff2
  6135  07AD  3000               	movlw	0
  6136  07AE  00C1               	movwf	___ftge@ff2+1
  6137  07AF  3040               	movlw	64
  6138  07B0  00C2               	movwf	___ftge@ff2+2
  6139  07B1  318B  23CF  3184   	fcall	___ftge
  6140  07B4  1803               	btfsc	3,0
  6141  07B5  2FC2               	goto	l3062
  6142                           
  6143                           ;main.c: 153: {
  6144                           ;main.c: 154: if(counter>=314)
  6145  07B6  3001               	movlw	1
  6146  07B7  0021               	movlb	1	; select bank1
  6147  07B8  022D               	subwf	(main@counter+1)^(0+128),w
  6148  07B9  303A               	movlw	58
  6149  07BA  1903               	skipnz
  6150  07BB  022C               	subwf	main@counter^(0+128),w
  6151  07BC  1C03               	skipc
  6152  07BD  2FC2               	goto	l3062
  6153                           
  6154                           ;main.c: 155: {
  6155                           ;main.c: 156: minute+=1;
  6156  07BE  3001               	movlw	1
  6157  07BF  07A0               	addwf	main@minute^(0+128),f
  6158  07C0  3000               	movlw	0
  6159  07C1  3DA1               	addwfc	(main@minute+1)^(0+128),f
  6160  07C2                     l3062:	
  6161                           
  6162                           ;main.c: 158: }
  6163                           ;main.c: 159: }
  6164                           ;main.c: 160: readButtons();
  6165  07C2  318D  25CE  3184   	fcall	_readButtons
  6166                           
  6167                           ;main.c: 161: tempSetpoint();
  6168  07C5  3181  21C2  3184   	fcall	_tempSetpoint
  6169  07C8  2C58               	goto	l2950
  6170  07C9                     __end_of_main:	
  6171                           
  6172                           	psect	text1
  6173  01C2                     __ptext1:	
  6174 ;; *************** function _tempSetpoint *****************
  6175 ;; Defined at:
  6176 ;;		line 12 in file "user.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  counter         1   20[BANK0 ] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;Total ram usage:        4 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    4
  6197 ;; This function calls:
  6198 ;;		_LCD_Clear
  6199 ;;		_LCD_Set_Cursor
  6200 ;;		_LCD_Write_Char
  6201 ;;		_LCD_Write_Int
  6202 ;;		_LCD_Write_String
  6203 ;;		_readButtons
  6204 ;; This function is called by:
  6205 ;;		_main
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _tempSetpoint
  6211  01C2                     _tempSetpoint:	
  6212                           
  6213                           ;user.c: 14: uint8_t counter = 0;
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6217  01C2  0020               	movlb	0	; select bank0
  6218  01C3  01B4               	clrf	tempSetpoint@counter
  6219                           
  6220                           ;user.c: 16: oldSetpoint = setpoint;
  6221  01C4  0868               	movf	_setpoint,w
  6222  01C5  00B1               	movwf	??_tempSetpoint
  6223  01C6  0831               	movf	??_tempSetpoint,w
  6224  01C7  00DF               	movwf	_oldSetpoint
  6225  01C8                     l2696:	
  6226                           ;user.c: 18: while(downCount >= 5)
  6227                           
  6228  01C8  3005               	movlw	5
  6229  01C9  0020               	movlb	0	; select bank0
  6230  01CA  025E               	subwf	_downCount,w
  6231  01CB  1C03               	btfss	3,0
  6232  01CC  2A62               	goto	l2724
  6233                           
  6234                           ;user.c: 19: {
  6235                           ;user.c: 20: counter+=1;
  6236  01CD  3001               	movlw	1
  6237  01CE  00B1               	movwf	??_tempSetpoint
  6238  01CF  0831               	movf	??_tempSetpoint,w
  6239  01D0  07B4               	addwf	tempSetpoint@counter,f
  6240                           
  6241                           ;user.c: 21: if(counter<=1)
  6242  01D1  3002               	movlw	2
  6243  01D2  0234               	subwf	tempSetpoint@counter,w
  6244  01D3  1803               	skipnc
  6245  01D4  29D8               	goto	l2676
  6246                           
  6247                           ;user.c: 22: {
  6248                           ;user.c: 23: LCD_Clear();
  6249  01D5  3189  2135  3181   	fcall	_LCD_Clear
  6250  01D8                     l2676:	
  6251                           
  6252                           ;user.c: 24: }
  6253                           ;user.c: 25: setpoint-=1;
  6254  01D8  3001               	movlw	1
  6255  01D9  0020               	movlb	0	; select bank0
  6256  01DA  02E8               	subwf	_setpoint,f
  6257                           
  6258                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6259  01DB  01F3               	clrf	LCD_Set_Cursor@y
  6260  01DC  3000               	movlw	0
  6261  01DD  318C  240B  3181   	fcall	_LCD_Set_Cursor
  6262  01E0  301B               	movlw	low (STR_1| (0+32768))
  6263  01E1  00F5               	movwf	LCD_Write_String@a
  6264  01E2  3090               	movlw	high (STR_1| (0+32768))
  6265  01E3  00F6               	movwf	LCD_Write_String@a+1
  6266  01E4  318A  2230  3181   	fcall	_LCD_Write_String
  6267                           
  6268                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6269  01E7  01F3               	clrf	LCD_Set_Cursor@y
  6270  01E8  3001               	movlw	1
  6271  01E9  318C  240B  3181   	fcall	_LCD_Set_Cursor
  6272  01EC  0020               	movlb	0	; select bank0
  6273  01ED  0868               	movf	_setpoint,w
  6274  01EE  00B1               	movwf	??_tempSetpoint
  6275  01EF  01B2               	clrf	??_tempSetpoint+1
  6276  01F0  0831               	movf	??_tempSetpoint,w
  6277  01F1  00F9               	movwf	LCD_Write_Int@value
  6278  01F2  0832               	movf	??_tempSetpoint+1,w
  6279  01F3  00FA               	movwf	LCD_Write_Int@value+1
  6280  01F4  3003               	movlw	3
  6281  01F5  00B3               	movwf	??_tempSetpoint+2
  6282  01F6  0833               	movf	??_tempSetpoint+2,w
  6283  01F7  00FB               	movwf	LCD_Write_Int@fieldLength
  6284  01F8  01FC               	clrf	LCD_Write_Int@numPlaces
  6285  01F9  01FD               	clrf	LCD_Write_Int@sign
  6286  01FA  3182  227C  3181   	fcall	_LCD_Write_Int
  6287                           
  6288                           ;user.c: 28: LCD_Write_Char(0);
  6289  01FD  3000               	movlw	0
  6290  01FE  318A  22C9  3181   	fcall	_LCD_Write_Char
  6291                           
  6292                           ;user.c: 29: LCD_Write_Char('C');
  6293  0201  3043               	movlw	67
  6294  0202  318A  22C9  3181   	fcall	_LCD_Write_Char
  6295                           
  6296                           ;user.c: 30: LCD_Write_Char(' ');
  6297  0205  3020               	movlw	32
  6298  0206  318A  22C9  3181   	fcall	_LCD_Write_Char
  6299                           
  6300                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6301  0209  3072               	movlw	114
  6302  020A  0020               	movlb	0	; select bank0
  6303  020B  00B2               	movwf	??_tempSetpoint+1
  6304  020C  30A1               	movlw	161
  6305  020D  00B1               	movwf	??_tempSetpoint
  6306  020E                     u3357:	
  6307  020E  0BB1               	decfsz	??_tempSetpoint,f
  6308  020F  2A0E               	goto	u3357
  6309  0210  0BB2               	decfsz	??_tempSetpoint+1,f
  6310  0211  2A0E               	goto	u3357
  6311  0212  3200               	nop2
  6312                           
  6313                           ;user.c: 32: readButtons();
  6314  0213  318D  25CE  3181   	fcall	_readButtons
  6315  0216  29C8               	goto	l2696
  6316  0217                     l2698:	
  6317                           ;user.c: 33: }
  6318                           ;user.c: 35: while(upCount >= 5)
  6319                           
  6320                           
  6321                           ;user.c: 36: {
  6322                           ;user.c: 37: counter+=1;
  6323  0217  3001               	movlw	1
  6324  0218  00B1               	movwf	??_tempSetpoint
  6325  0219  0831               	movf	??_tempSetpoint,w
  6326  021A  07B4               	addwf	tempSetpoint@counter,f
  6327                           
  6328                           ;user.c: 38: if(counter<=1)
  6329  021B  3002               	movlw	2
  6330  021C  0234               	subwf	tempSetpoint@counter,w
  6331  021D  1803               	skipnc
  6332  021E  2A22               	goto	l2704
  6333                           
  6334                           ;user.c: 39: {
  6335                           ;user.c: 40: LCD_Clear();
  6336  021F  3189  2135  3181   	fcall	_LCD_Clear
  6337  0222                     l2704:	
  6338                           
  6339                           ;user.c: 41: }
  6340                           ;user.c: 42: setpoint+=1;
  6341  0222  3001               	movlw	1
  6342  0223  0020               	movlb	0	; select bank0
  6343  0224  00B1               	movwf	??_tempSetpoint
  6344  0225  0831               	movf	??_tempSetpoint,w
  6345  0226  07E8               	addwf	_setpoint,f
  6346                           
  6347                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6348  0227  01F3               	clrf	LCD_Set_Cursor@y
  6349  0228  3000               	movlw	0
  6350  0229  318C  240B  3181   	fcall	_LCD_Set_Cursor
  6351  022C  301B               	movlw	low (STR_1| (0+32768))
  6352  022D  00F5               	movwf	LCD_Write_String@a
  6353  022E  3090               	movlw	high (STR_1| (0+32768))
  6354  022F  00F6               	movwf	LCD_Write_String@a+1
  6355  0230  318A  2230  3181   	fcall	_LCD_Write_String
  6356                           
  6357                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6358  0233  01F3               	clrf	LCD_Set_Cursor@y
  6359  0234  3001               	movlw	1
  6360  0235  318C  240B  3181   	fcall	_LCD_Set_Cursor
  6361  0238  0020               	movlb	0	; select bank0
  6362  0239  0868               	movf	_setpoint,w
  6363  023A  00B1               	movwf	??_tempSetpoint
  6364  023B  01B2               	clrf	??_tempSetpoint+1
  6365  023C  0831               	movf	??_tempSetpoint,w
  6366  023D  00F9               	movwf	LCD_Write_Int@value
  6367  023E  0832               	movf	??_tempSetpoint+1,w
  6368  023F  00FA               	movwf	LCD_Write_Int@value+1
  6369  0240  3003               	movlw	3
  6370  0241  00B3               	movwf	??_tempSetpoint+2
  6371  0242  0833               	movf	??_tempSetpoint+2,w
  6372  0243  00FB               	movwf	LCD_Write_Int@fieldLength
  6373  0244  01FC               	clrf	LCD_Write_Int@numPlaces
  6374  0245  01FD               	clrf	LCD_Write_Int@sign
  6375  0246  3182  227C  3181   	fcall	_LCD_Write_Int
  6376                           
  6377                           ;user.c: 45: LCD_Write_Char(0);
  6378  0249  3000               	movlw	0
  6379  024A  318A  22C9  3181   	fcall	_LCD_Write_Char
  6380                           
  6381                           ;user.c: 46: LCD_Write_Char('C');
  6382  024D  3043               	movlw	67
  6383  024E  318A  22C9  3181   	fcall	_LCD_Write_Char
  6384                           
  6385                           ;user.c: 47: LCD_Write_Char(' ');
  6386  0251  3020               	movlw	32
  6387  0252  318A  22C9  3181   	fcall	_LCD_Write_Char
  6388                           
  6389                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6390  0255  3072               	movlw	114
  6391  0256  0020               	movlb	0	; select bank0
  6392  0257  00B2               	movwf	??_tempSetpoint+1
  6393  0258  30A1               	movlw	161
  6394  0259  00B1               	movwf	??_tempSetpoint
  6395  025A                     u3367:	
  6396  025A  0BB1               	decfsz	??_tempSetpoint,f
  6397  025B  2A5A               	goto	u3367
  6398  025C  0BB2               	decfsz	??_tempSetpoint+1,f
  6399  025D  2A5A               	goto	u3367
  6400  025E  3200               	nop2
  6401                           
  6402                           ;user.c: 49: readButtons();
  6403  025F  318D  25CE  3181   	fcall	_readButtons
  6404  0262                     l2724:	
  6405  0262  3005               	movlw	5
  6406  0263  0020               	movlb	0	; select bank0
  6407  0264  0261               	subwf	_upCount,w
  6408  0265  1803               	skipnc
  6409  0266  2A17               	goto	l2698
  6410                           
  6411                           ;user.c: 50: }
  6412                           ;user.c: 52: counter = 0;
  6413  0267  01B4               	clrf	tempSetpoint@counter
  6414                           
  6415                           ;user.c: 54: if(oldSetpoint!=setpoint)
  6416  0268  085F               	movf	_oldSetpoint,w
  6417  0269  0668               	xorwf	_setpoint,w
  6418  026A  1903               	skipnz
  6419  026B  0008               	return
  6420                           
  6421                           ;user.c: 55: {
  6422                           ;user.c: 56: _delay((unsigned long)((3000)*(1000000/4000.0)));
  6423  026C  3004               	movlw	4
  6424  026D  00B3               	movwf	??_tempSetpoint+2
  6425  026E  30CF               	movlw	207
  6426  026F  00B2               	movwf	??_tempSetpoint+1
  6427  0270  3003               	movlw	3
  6428  0271  00B1               	movwf	??_tempSetpoint
  6429  0272                     u3377:	
  6430  0272  0BB1               	decfsz	??_tempSetpoint,f
  6431  0273  2A72               	goto	u3377
  6432  0274  0BB2               	decfsz	??_tempSetpoint+1,f
  6433  0275  2A72               	goto	u3377
  6434  0276  0BB3               	decfsz	??_tempSetpoint+2,f
  6435  0277  2A72               	goto	u3377
  6436  0278  3200               	nop2
  6437                           
  6438                           ;user.c: 57: LCD_Clear();
  6439  0279  3189  2135         	fcall	_LCD_Clear
  6440  027B  0008               	return
  6441  027C                     __end_of_tempSetpoint:	
  6442                           
  6443                           	psect	text2
  6444  0DCE                     __ptext2:	
  6445 ;; *************** function _readButtons *****************
  6446 ;; Defined at:
  6447 ;;		line 62 in file "user.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;Total ram usage:        3 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    3
  6468 ;; This function calls:
  6469 ;;		_LCD_Clear
  6470 ;;		_LCD_Set_Cursor
  6471 ;;		_LCD_Write_Char
  6472 ;;		_LCD_Write_Int
  6473 ;;		_LCD_Write_String
  6474 ;; This function is called by:
  6475 ;;		_tempSetpoint
  6476 ;;		_main
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _readButtons
  6482  0DCE                     _readButtons:	
  6483                           
  6484                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6488  0DCE  0020               	movlb	0	; select bank0
  6489  0DCF  1D8C               	btfss	12,3	;volatile
  6490  0DD0  1A0C               	btfsc	12,4	;volatile
  6491  0DD1  2E2D               	goto	l2546
  6492                           
  6493                           ;user.c: 65: {
  6494                           ;user.c: 66: downCount = 0;
  6495  0DD2  01DE               	clrf	_downCount
  6496                           
  6497                           ;user.c: 67: upCount = 0;
  6498  0DD3  01E1               	clrf	_upCount
  6499                           
  6500                           ;user.c: 68: toggleCount+=1;
  6501  0DD4  3001               	movlw	1
  6502  0DD5  00AE               	movwf	??_readButtons
  6503  0DD6  082E               	movf	??_readButtons,w
  6504  0DD7  07E0               	addwf	_toggleCount,f
  6505                           
  6506                           ;user.c: 69: if(toggleCount >=6)
  6507  0DD8  3006               	movlw	6
  6508  0DD9  0260               	subwf	_toggleCount,w
  6509  0DDA  1C03               	skipc
  6510  0DDB  2E2D               	goto	l2546
  6511                           
  6512                           ;user.c: 70: {
  6513                           ;user.c: 71: x+=1;
  6514  0DDC  3001               	movlw	1
  6515  0DDD  00AE               	movwf	??_readButtons
  6516  0DDE  082E               	movf	??_readButtons,w
  6517  0DDF  07E2               	addwf	_x,f
  6518                           
  6519                           ;user.c: 72: if(x>4)
  6520  0DE0  3005               	movlw	5
  6521  0DE1  0262               	subwf	_x,w
  6522  0DE2  1803               	btfsc	3,0
  6523                           
  6524                           ;user.c: 73: {
  6525                           ;user.c: 74: x=0;
  6526  0DE3  01E2               	clrf	_x
  6527                           
  6528                           ;user.c: 75: }
  6529                           ;user.c: 76: setpoint = presets[x];
  6530  0DE4  0862               	movf	_x,w
  6531  0DE5  3E63               	addlw	(low (_presets| 0))& (0+255)
  6532  0DE6  0086               	movwf	6
  6533  0DE7  0187               	clrf	7
  6534  0DE8  0801               	movf	1,w
  6535  0DE9  00AE               	movwf	??_readButtons
  6536  0DEA  082E               	movf	??_readButtons,w
  6537  0DEB  00E8               	movwf	_setpoint
  6538                           
  6539                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6540  0DEC  01F3               	clrf	LCD_Set_Cursor@y
  6541  0DED  3000               	movlw	0
  6542  0DEE  318C  240B  318D   	fcall	_LCD_Set_Cursor
  6543  0DF1  301B               	movlw	low (STR_1| (0+32768))
  6544  0DF2  00F5               	movwf	LCD_Write_String@a
  6545  0DF3  3090               	movlw	high (STR_1| (0+32768))
  6546  0DF4  00F6               	movwf	LCD_Write_String@a+1
  6547  0DF5  318A  2230  318D   	fcall	_LCD_Write_String
  6548                           
  6549                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6550  0DF8  01F3               	clrf	LCD_Set_Cursor@y
  6551  0DF9  3001               	movlw	1
  6552  0DFA  318C  240B  318D   	fcall	_LCD_Set_Cursor
  6553  0DFD  0020               	movlb	0	; select bank0
  6554  0DFE  0868               	movf	_setpoint,w
  6555  0DFF  00AE               	movwf	??_readButtons
  6556  0E00  01AF               	clrf	??_readButtons+1
  6557  0E01  082E               	movf	??_readButtons,w
  6558  0E02  00F9               	movwf	LCD_Write_Int@value
  6559  0E03  082F               	movf	??_readButtons+1,w
  6560  0E04  00FA               	movwf	LCD_Write_Int@value+1
  6561  0E05  3003               	movlw	3
  6562  0E06  00B0               	movwf	??_readButtons+2
  6563  0E07  0830               	movf	??_readButtons+2,w
  6564  0E08  00FB               	movwf	LCD_Write_Int@fieldLength
  6565  0E09  01FC               	clrf	LCD_Write_Int@numPlaces
  6566  0E0A  01FD               	clrf	LCD_Write_Int@sign
  6567  0E0B  3182  227C  318D   	fcall	_LCD_Write_Int
  6568                           
  6569                           ;user.c: 79: LCD_Write_Char(0);
  6570  0E0E  3000               	movlw	0
  6571  0E0F  318A  22C9  318D   	fcall	_LCD_Write_Char
  6572                           
  6573                           ;user.c: 80: LCD_Write_Char('C');
  6574  0E12  3043               	movlw	67
  6575  0E13  318A  22C9  318D   	fcall	_LCD_Write_Char
  6576                           
  6577                           ;user.c: 81: LCD_Write_Char(' ');
  6578  0E16  3020               	movlw	32
  6579  0E17  318A  22C9  318D   	fcall	_LCD_Write_Char
  6580                           
  6581                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6582  0E1A  3002               	movlw	2
  6583  0E1B  0020               	movlb	0	; select bank0
  6584  0E1C  00B0               	movwf	??_readButtons+2
  6585  0E1D  30E7               	movlw	231
  6586  0E1E  00AF               	movwf	??_readButtons+1
  6587  0E1F  3000               	movlw	0
  6588  0E20  00AE               	movwf	??_readButtons
  6589  0E21                     u3387:	
  6590  0E21  0BAE               	decfsz	??_readButtons,f
  6591  0E22  2E21               	goto	u3387
  6592  0E23  0BAF               	decfsz	??_readButtons+1,f
  6593  0E24  2E21               	goto	u3387
  6594  0E25  0BB0               	decfsz	??_readButtons+2,f
  6595  0E26  2E21               	goto	u3387
  6596  0E27  0000               	nop
  6597                           
  6598                           ;user.c: 83: toggleCount = 0;
  6599  0E28  0020               	movlb	0	; select bank0
  6600  0E29  01E0               	clrf	_toggleCount
  6601                           
  6602                           ;user.c: 84: LCD_Clear();
  6603  0E2A  3189  2135  318D   	fcall	_LCD_Clear
  6604  0E2D                     l2546:	
  6605                           
  6606                           ;user.c: 85: }
  6607                           ;user.c: 86: }
  6608                           ;user.c: 87: if(RA3 == 0)
  6609  0E2D  0020               	movlb	0	; select bank0
  6610  0E2E  198C               	btfsc	12,3	;volatile
  6611  0E2F  2E3D               	goto	l2554
  6612                           
  6613                           ;user.c: 88: {
  6614                           ;user.c: 89: downCount +=1;
  6615  0E30  3001               	movlw	1
  6616  0E31  00AE               	movwf	??_readButtons
  6617  0E32  082E               	movf	??_readButtons,w
  6618  0E33  07DE               	addwf	_downCount,f
  6619                           
  6620                           ;user.c: 90: if(downCount>5)
  6621  0E34  3006               	movlw	6
  6622  0E35  025E               	subwf	_downCount,w
  6623  0E36  1C03               	skipc
  6624  0E37  2E3E               	goto	l2556
  6625                           
  6626                           ;user.c: 91: {
  6627                           ;user.c: 92: downCount = 5;
  6628  0E38  3005               	movlw	5
  6629  0E39  00AE               	movwf	??_readButtons
  6630  0E3A  082E               	movf	??_readButtons,w
  6631  0E3B  00DE               	movwf	_downCount
  6632                           
  6633                           ;user.c: 93: }
  6634                           ;user.c: 94: }
  6635  0E3C  2E3E               	goto	l2556
  6636  0E3D                     l2554:	
  6637                           
  6638                           ;user.c: 95: else
  6639                           ;user.c: 96: {
  6640                           ;user.c: 97: downCount = 0;
  6641  0E3D  01DE               	clrf	_downCount
  6642  0E3E                     l2556:	
  6643                           
  6644                           ;user.c: 98: }
  6645                           ;user.c: 100: if(RA4 == 0)
  6646  0E3E  1A0C               	btfsc	12,4	;volatile
  6647  0E3F  2E4D               	goto	l2564
  6648                           
  6649                           ;user.c: 101: {
  6650                           ;user.c: 102: upCount +=1;
  6651  0E40  3001               	movlw	1
  6652  0E41  00AE               	movwf	??_readButtons
  6653  0E42  082E               	movf	??_readButtons,w
  6654  0E43  07E1               	addwf	_upCount,f
  6655                           
  6656                           ;user.c: 103: if(upCount>5)
  6657  0E44  3006               	movlw	6
  6658  0E45  0261               	subwf	_upCount,w
  6659  0E46  1C03               	skipc
  6660  0E47  0008               	return
  6661                           
  6662                           ;user.c: 104: {
  6663                           ;user.c: 105: upCount = 5;
  6664  0E48  3005               	movlw	5
  6665  0E49  00AE               	movwf	??_readButtons
  6666  0E4A  082E               	movf	??_readButtons,w
  6667  0E4B  00E1               	movwf	_upCount
  6668                           
  6669                           ;user.c: 106: }
  6670                           ;user.c: 107: }
  6671  0E4C  0008               	return
  6672  0E4D                     l2564:	
  6673                           
  6674                           ;user.c: 108: else
  6675                           ;user.c: 109: {
  6676                           ;user.c: 110: upCount = 0;
  6677  0E4D  01E1               	clrf	_upCount
  6678  0E4E  0008               	return
  6679  0E4F                     __end_of_readButtons:	
  6680                           
  6681                           	psect	text3
  6682  0A30                     __ptext3:	
  6683 ;; *************** function _LCD_Write_String *****************
  6684 ;; Defined at:
  6685 ;;		line 239 in file "lcd.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  a               2    5[COMMON] PTR const unsigned char 
  6688 ;;		 -> STR_3(10), STR_2(10), STR_1(10), 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  i               2    8[COMMON] int 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;Total ram usage:        5 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    2
  6707 ;; This function calls:
  6708 ;;		_LCD_Write_Char
  6709 ;; This function is called by:
  6710 ;;		_tempSetpoint
  6711 ;;		_readButtons
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _LCD_Write_String
  6717  0A30                     _LCD_Write_String:	
  6718                           
  6719                           ;lcd.c: 241: int i;
  6720                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6721                           
  6722                           ;incstack = 0
  6723                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6724  0A30  01F8               	clrf	LCD_Write_String@i
  6725  0A31  01F9               	clrf	LCD_Write_String@i+1
  6726  0A32                     l2168:	
  6727  0A32  0875               	movf	LCD_Write_String@a,w
  6728  0A33  0778               	addwf	LCD_Write_String@i,w
  6729  0A34  0084               	movwf	4
  6730  0A35  0876               	movf	LCD_Write_String@a+1,w
  6731  0A36  3D79               	addwfc	LCD_Write_String@i+1,w
  6732  0A37  0085               	movwf	5
  6733  0A38  0012               	moviw fsr0++
  6734  0A39  1903               	btfsc	3,2
  6735  0A3A  0008               	return
  6736                           
  6737                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6738  0A3B  0875               	movf	LCD_Write_String@a,w
  6739  0A3C  0778               	addwf	LCD_Write_String@i,w
  6740  0A3D  0084               	movwf	4
  6741  0A3E  0876               	movf	LCD_Write_String@a+1,w
  6742  0A3F  3D79               	addwfc	LCD_Write_String@i+1,w
  6743  0A40  0085               	movwf	5
  6744  0A41  0800               	movf	0,w	;code access
  6745  0A42  318A  22C9  318A   	fcall	_LCD_Write_Char
  6746  0A45  3001               	movlw	1
  6747  0A46  07F8               	addwf	LCD_Write_String@i,f
  6748  0A47  3000               	movlw	0
  6749  0A48  3DF9               	addwfc	LCD_Write_String@i+1,f
  6750  0A49  2A32               	goto	l2168
  6751  0A4A                     __end_of_LCD_Write_String:	
  6752                           
  6753                           	psect	text4
  6754  027C                     __ptext4:	
  6755 ;; *************** function _LCD_Write_Int *****************
  6756 ;; Defined at:
  6757 ;;		line 246 in file "lcd.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  value           2    9[COMMON] int 
  6760 ;;  fieldLength     1   11[COMMON] char 
  6761 ;;  numPlaces       1   12[COMMON] char 
  6762 ;;  sign            1   13[COMMON] char 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  str             5    5[BANK0 ] unsigned char [5]
  6765 ;;  i               2   12[BANK0 ] int 
  6766 ;;  j               2   10[BANK0 ] int 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6776 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;Total ram usage:       19 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    2
  6783 ;; This function calls:
  6784 ;;		_LCD_Write_Char
  6785 ;;		___awdiv
  6786 ;;		___awmod
  6787 ;; This function is called by:
  6788 ;;		_tempSetpoint
  6789 ;;		_readButtons
  6790 ;;		_main
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _LCD_Write_Int
  6796  027C                     _LCD_Write_Int:	
  6797                           
  6798                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6802  027C  3057               	movlw	low LCD_Write_Int@F13686
  6803  027D  0086               	movwf	6
  6804  027E  3000               	movlw	high LCD_Write_Int@F13686
  6805  027F  0087               	movwf	7
  6806  0280  3025               	movlw	low LCD_Write_Int@str
  6807  0281  0084               	movwf	4
  6808  0282  3000               	movlw	high LCD_Write_Int@str
  6809  0283  0085               	movwf	5
  6810  0284  3005               	movlw	5
  6811  0285  0020               	movlb	0	; select bank0
  6812  0286  00A0               	movwf	??_LCD_Write_Int
  6813  0287                     u2090:	
  6814  0287  0016               	moviw fsr1++
  6815  0288  001A               	movwi fsr0++
  6816  0289  0BA0               	decfsz	??_LCD_Write_Int,f
  6817  028A  2A87               	goto	u2090
  6818                           
  6819                           ;lcd.c: 249: int i=4,j=0;
  6820  028B  3004               	movlw	4
  6821  028C  00AC               	movwf	LCD_Write_Int@i
  6822  028D  3000               	movlw	0
  6823  028E  00AD               	movwf	LCD_Write_Int@i+1
  6824  028F  01AA               	clrf	LCD_Write_Int@j
  6825  0290  01AB               	clrf	LCD_Write_Int@j+1
  6826                           
  6827                           ;lcd.c: 251: if(value<0)
  6828  0291  1FFA               	btfss	LCD_Write_Int@value+1,7
  6829  0292  2A9D               	goto	l2182
  6830                           
  6831                           ;lcd.c: 252: {
  6832                           ;lcd.c: 253: LCD_Write_Char('-');
  6833  0293  302D               	movlw	45
  6834  0294  318A  22C9  3182   	fcall	_LCD_Write_Char
  6835                           
  6836                           ;lcd.c: 254: value=value*-1;
  6837  0297  09F9               	comf	LCD_Write_Int@value,f
  6838  0298  09FA               	comf	LCD_Write_Int@value+1,f
  6839  0299  0AF9               	incf	LCD_Write_Int@value,f
  6840  029A  1903               	skipnz
  6841  029B  0AFA               	incf	LCD_Write_Int@value+1,f
  6842                           
  6843                           ;lcd.c: 255: }
  6844  029C  2AA4               	goto	l2192
  6845  029D                     l2182:	
  6846                           
  6847                           ;lcd.c: 257: else
  6848                           ;lcd.c: 258: {
  6849                           ;lcd.c: 259: if(sign == 1)
  6850  029D  037D               	decf	LCD_Write_Int@sign,w
  6851  029E  1D03               	btfss	3,2
  6852  029F  2AA4               	goto	l2192
  6853                           
  6854                           ;lcd.c: 260: {
  6855                           ;lcd.c: 261: LCD_Write_Char('+');
  6856  02A0  302B               	movlw	43
  6857  02A1  318A  22C9  3182   	fcall	_LCD_Write_Char
  6858  02A4                     l2192:	
  6859                           ;lcd.c: 262: }
  6860                           ;lcd.c: 263: }
  6861                           ;lcd.c: 265: while(value)
  6862                           
  6863  02A4  0879               	movf	LCD_Write_Int@value,w
  6864  02A5  047A               	iorwf	LCD_Write_Int@value+1,w
  6865  02A6  1903               	btfsc	3,2
  6866  02A7  2AD1               	goto	l2194
  6867                           
  6868                           ;lcd.c: 266: {
  6869                           ;lcd.c: 267: str[i]=value%10;
  6870  02A8  300A               	movlw	10
  6871  02A9  00F0               	movwf	___awmod@divisor
  6872  02AA  3000               	movlw	0
  6873  02AB  00F1               	movwf	___awmod@divisor+1
  6874  02AC  087A               	movf	LCD_Write_Int@value+1,w
  6875  02AD  00F3               	movwf	___awmod@dividend+1
  6876  02AE  0879               	movf	LCD_Write_Int@value,w
  6877  02AF  00F2               	movwf	___awmod@dividend
  6878  02B0  318C  244A  3182   	fcall	___awmod
  6879  02B3  0870               	movf	?___awmod,w
  6880  02B4  0020               	movlb	0	; select bank0
  6881  02B5  00A0               	movwf	??_LCD_Write_Int
  6882  02B6  082C               	movf	LCD_Write_Int@i,w
  6883  02B7  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6884  02B8  0086               	movwf	6
  6885  02B9  0187               	clrf	7
  6886  02BA  0820               	movf	??_LCD_Write_Int,w
  6887  02BB  0081               	movwf	1
  6888                           
  6889                           ;lcd.c: 268: value=value/10;
  6890  02BC  300A               	movlw	10
  6891  02BD  00F0               	movwf	___awdiv@divisor
  6892  02BE  3000               	movlw	0
  6893  02BF  00F1               	movwf	___awdiv@divisor+1
  6894  02C0  087A               	movf	LCD_Write_Int@value+1,w
  6895  02C1  00F3               	movwf	___awdiv@dividend+1
  6896  02C2  0879               	movf	LCD_Write_Int@value,w
  6897  02C3  00F2               	movwf	___awdiv@dividend
  6898  02C4  3180  2010  3182   	fcall	___awdiv
  6899  02C7  0871               	movf	?___awdiv+1,w
  6900  02C8  00FA               	movwf	LCD_Write_Int@value+1
  6901  02C9  0870               	movf	?___awdiv,w
  6902  02CA  00F9               	movwf	LCD_Write_Int@value
  6903                           
  6904                           ;lcd.c: 269: i--;
  6905  02CB  30FF               	movlw	255
  6906  02CC  0020               	movlb	0	; select bank0
  6907  02CD  07AC               	addwf	LCD_Write_Int@i,f
  6908  02CE  30FF               	movlw	255
  6909  02CF  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6910  02D0  2AA4               	goto	l2192
  6911  02D1                     l2194:	
  6912                           
  6913                           ;lcd.c: 270: }
  6914                           ;lcd.c: 271: if(fieldLength==-1)
  6915  02D1  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6916  02D2  1903               	btfsc	3,2
  6917  02D3  2ADA               	goto	l2200
  6918  02D4  2AE3               	goto	l2202
  6919  02D5                     l2198:	
  6920                           ;lcd.c: 272: {
  6921                           ;lcd.c: 273: while(str[j]==0)
  6922                           
  6923                           
  6924                           ;lcd.c: 274: {
  6925                           ;lcd.c: 275: j++;
  6926  02D5  3001               	movlw	1
  6927  02D6  0020               	movlb	0	; select bank0
  6928  02D7  07AA               	addwf	LCD_Write_Int@j,f
  6929  02D8  3000               	movlw	0
  6930  02D9  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6931  02DA                     l2200:	
  6932  02DA  0020               	movlb	0	; select bank0
  6933  02DB  082A               	movf	LCD_Write_Int@j,w
  6934  02DC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6935  02DD  0086               	movwf	6
  6936  02DE  0187               	clrf	7
  6937  02DF  0801               	movf	1,w
  6938  02E0  1D03               	btfss	3,2
  6939  02E1  2AF4               	goto	l2204
  6940  02E2  2AD5               	goto	l2198
  6941  02E3                     l2202:	
  6942                           ;lcd.c: 276: }
  6943                           ;lcd.c: 277: }
  6944                           
  6945                           
  6946                           ;lcd.c: 278: else
  6947                           ;lcd.c: 279: {
  6948                           ;lcd.c: 280: j=5-fieldLength;
  6949  02E3  087B               	movf	LCD_Write_Int@fieldLength,w
  6950  02E4  0020               	movlb	0	; select bank0
  6951  02E5  00A0               	movwf	??_LCD_Write_Int
  6952  02E6  01A1               	clrf	??_LCD_Write_Int+1
  6953  02E7  1BA0               	btfsc	??_LCD_Write_Int,7
  6954  02E8  03A1               	decf	??_LCD_Write_Int+1,f
  6955  02E9  09A0               	comf	??_LCD_Write_Int,f
  6956  02EA  09A1               	comf	??_LCD_Write_Int+1,f
  6957  02EB  0AA0               	incf	??_LCD_Write_Int,f
  6958  02EC  1903               	skipnz
  6959  02ED  0AA1               	incf	??_LCD_Write_Int+1,f
  6960  02EE  0820               	movf	??_LCD_Write_Int,w
  6961  02EF  3E05               	addlw	5
  6962  02F0  00AA               	movwf	LCD_Write_Int@j
  6963  02F1  3000               	movlw	0
  6964  02F2  3D21               	addwfc	??_LCD_Write_Int+1,w
  6965  02F3  00AB               	movwf	LCD_Write_Int@j+1
  6966  02F4                     l2204:	
  6967                           
  6968                           ;lcd.c: 281: }
  6969                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6970  02F4  082B               	movf	LCD_Write_Int@j+1,w
  6971  02F5  00AD               	movwf	LCD_Write_Int@i+1
  6972  02F6  082A               	movf	LCD_Write_Int@j,w
  6973  02F7  00AC               	movwf	LCD_Write_Int@i
  6974  02F8                     l2210:	
  6975  02F8  087C               	movf	LCD_Write_Int@numPlaces,w
  6976  02F9  00A0               	movwf	??_LCD_Write_Int
  6977  02FA  01A1               	clrf	??_LCD_Write_Int+1
  6978  02FB  1BA0               	btfsc	??_LCD_Write_Int,7
  6979  02FC  03A1               	decf	??_LCD_Write_Int+1,f
  6980  02FD  09A0               	comf	??_LCD_Write_Int,f
  6981  02FE  09A1               	comf	??_LCD_Write_Int+1,f
  6982  02FF  0AA0               	incf	??_LCD_Write_Int,f
  6983  0300  1903               	skipnz
  6984  0301  0AA1               	incf	??_LCD_Write_Int+1,f
  6985  0302  0820               	movf	??_LCD_Write_Int,w
  6986  0303  3E05               	addlw	5
  6987  0304  00A2               	movwf	??_LCD_Write_Int+2
  6988  0305  3000               	movlw	0
  6989  0306  3D21               	addwfc	??_LCD_Write_Int+1,w
  6990  0307  00A3               	movwf	??_LCD_Write_Int+3
  6991  0308  082D               	movf	LCD_Write_Int@i+1,w
  6992  0309  3A80               	xorlw	128
  6993  030A  00A4               	movwf	??_LCD_Write_Int+4
  6994  030B  0823               	movf	??_LCD_Write_Int+3,w
  6995  030C  3A80               	xorlw	128
  6996  030D  0224               	subwf	??_LCD_Write_Int+4,w
  6997  030E  1D03               	skipz
  6998  030F  2B12               	goto	u2155
  6999  0310  0822               	movf	??_LCD_Write_Int+2,w
  7000  0311  022C               	subwf	LCD_Write_Int@i,w
  7001  0312                     u2155:	
  7002  0312  1803               	btfsc	3,0
  7003  0313  2B24               	goto	l2212
  7004                           
  7005                           ;lcd.c: 284: {
  7006                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7007  0314  0020               	movlb	0	; select bank0
  7008  0315  082C               	movf	LCD_Write_Int@i,w
  7009  0316  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7010  0317  0086               	movwf	6
  7011  0318  0187               	clrf	7
  7012  0319  0801               	movf	1,w
  7013  031A  3E30               	addlw	48
  7014  031B  318A  22C9  3182   	fcall	_LCD_Write_Char
  7015  031E  3001               	movlw	1
  7016  031F  0020               	movlb	0	; select bank0
  7017  0320  07AC               	addwf	LCD_Write_Int@i,f
  7018  0321  3000               	movlw	0
  7019  0322  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7020  0323  2AF8               	goto	l2210
  7021  0324                     l2212:	
  7022                           
  7023                           ;lcd.c: 286: }
  7024                           ;lcd.c: 288: if(numPlaces == 1)
  7025  0324  037C               	decf	LCD_Write_Int@numPlaces,w
  7026  0325  1D03               	btfss	3,2
  7027  0326  2B31               	goto	l2216
  7028                           
  7029                           ;lcd.c: 289: {
  7030                           ;lcd.c: 290: LCD_Write_Char(46);
  7031  0327  302E               	movlw	46
  7032  0328  318A  22C9  3182   	fcall	_LCD_Write_Char
  7033                           
  7034                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7035  032B  0020               	movlb	0	; select bank0
  7036  032C  0829               	movf	LCD_Write_Int@str+4,w
  7037  032D  3E30               	addlw	48
  7038  032E  318A  22C9  3182   	fcall	_LCD_Write_Char
  7039  0331                     l2216:	
  7040                           
  7041                           ;lcd.c: 292: }
  7042                           ;lcd.c: 294: if(numPlaces == 2)
  7043  0331  3002               	movlw	2
  7044  0332  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7045  0333  1D03               	btfss	3,2
  7046  0334  0008               	return
  7047                           
  7048                           ;lcd.c: 295: {
  7049                           ;lcd.c: 296: LCD_Write_Char(46);
  7050  0335  302E               	movlw	46
  7051  0336  318A  22C9  3182   	fcall	_LCD_Write_Char
  7052                           
  7053                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7054  0339  0020               	movlb	0	; select bank0
  7055  033A  0828               	movf	LCD_Write_Int@str+3,w
  7056  033B  3E30               	addlw	48
  7057  033C  318A  22C9  3182   	fcall	_LCD_Write_Char
  7058                           
  7059                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7060  033F  0020               	movlb	0	; select bank0
  7061  0340  0829               	movf	LCD_Write_Int@str+4,w
  7062  0341  3E30               	addlw	48
  7063  0342  318A  22C9         	fcall	_LCD_Write_Char
  7064  0344  0008               	return
  7065  0345                     __end_of_LCD_Write_Int:	
  7066                           
  7067                           	psect	text5
  7068  0C4A                     __ptext5:	
  7069 ;; *************** function ___awmod *****************
  7070 ;; Defined at:
  7071 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  divisor         2    0[COMMON] int 
  7074 ;;  dividend        2    2[COMMON] int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  sign            1    6[COMMON] unsigned char 
  7077 ;;  counter         1    5[COMMON] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  2    0[COMMON] int 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;Total ram usage:        7 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_LCD_Write_Int
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function ___awmod
  7102  0C4A                     ___awmod:	
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7106  0C4A  01F6               	clrf	___awmod@sign
  7107  0C4B  1FF3               	btfss	___awmod@dividend+1,7
  7108  0C4C  2C54               	goto	l2110
  7109  0C4D  09F2               	comf	___awmod@dividend,f
  7110  0C4E  09F3               	comf	___awmod@dividend+1,f
  7111  0C4F  0AF2               	incf	___awmod@dividend,f
  7112  0C50  1903               	skipnz
  7113  0C51  0AF3               	incf	___awmod@dividend+1,f
  7114  0C52  01F6               	clrf	___awmod@sign
  7115  0C53  0AF6               	incf	___awmod@sign,f
  7116  0C54                     l2110:	
  7117  0C54  1FF1               	btfss	___awmod@divisor+1,7
  7118  0C55  2C5B               	goto	l2114
  7119  0C56  09F0               	comf	___awmod@divisor,f
  7120  0C57  09F1               	comf	___awmod@divisor+1,f
  7121  0C58  0AF0               	incf	___awmod@divisor,f
  7122  0C59  1903               	skipnz
  7123  0C5A  0AF1               	incf	___awmod@divisor+1,f
  7124  0C5B                     l2114:	
  7125  0C5B  0870               	movf	___awmod@divisor,w
  7126  0C5C  0471               	iorwf	___awmod@divisor+1,w
  7127  0C5D  1903               	btfsc	3,2
  7128  0C5E  2C82               	goto	l2132
  7129  0C5F  01F5               	clrf	___awmod@counter
  7130  0C60  0AF5               	incf	___awmod@counter,f
  7131  0C61                     l2122:	
  7132  0C61  1BF1               	btfsc	___awmod@divisor+1,7
  7133  0C62  2C6D               	goto	l2124
  7134  0C63  3001               	movlw	1
  7135  0C64                     u1985:	
  7136  0C64  35F0               	lslf	___awmod@divisor,f
  7137  0C65  0DF1               	rlf	___awmod@divisor+1,f
  7138  0C66  0B89               	decfsz	9,f
  7139  0C67  2C64               	goto	u1985
  7140  0C68  3001               	movlw	1
  7141  0C69  00F4               	movwf	??___awmod
  7142  0C6A  0874               	movf	??___awmod,w
  7143  0C6B  07F5               	addwf	___awmod@counter,f
  7144  0C6C  2C61               	goto	l2122
  7145  0C6D                     l2124:	
  7146  0C6D  0871               	movf	___awmod@divisor+1,w
  7147  0C6E  0273               	subwf	___awmod@dividend+1,w
  7148  0C6F  1D03               	skipz
  7149  0C70  2C73               	goto	u2005
  7150  0C71  0870               	movf	___awmod@divisor,w
  7151  0C72  0272               	subwf	___awmod@dividend,w
  7152  0C73                     u2005:	
  7153  0C73  1C03               	skipc
  7154  0C74  2C79               	goto	l2128
  7155  0C75  0870               	movf	___awmod@divisor,w
  7156  0C76  02F2               	subwf	___awmod@dividend,f
  7157  0C77  0871               	movf	___awmod@divisor+1,w
  7158  0C78  3BF3               	subwfb	___awmod@dividend+1,f
  7159  0C79                     l2128:	
  7160  0C79  3001               	movlw	1
  7161  0C7A                     u2015:	
  7162  0C7A  36F1               	lsrf	___awmod@divisor+1,f
  7163  0C7B  0CF0               	rrf	___awmod@divisor,f
  7164  0C7C  0B89               	decfsz	9,f
  7165  0C7D  2C7A               	goto	u2015
  7166  0C7E  3001               	movlw	1
  7167  0C7F  02F5               	subwf	___awmod@counter,f
  7168  0C80  1D03               	btfss	3,2
  7169  0C81  2C6D               	goto	l2124
  7170  0C82                     l2132:	
  7171  0C82  0876               	movf	___awmod@sign,w
  7172  0C83  1903               	btfsc	3,2
  7173  0C84  2C8A               	goto	l2136
  7174  0C85  09F2               	comf	___awmod@dividend,f
  7175  0C86  09F3               	comf	___awmod@dividend+1,f
  7176  0C87  0AF2               	incf	___awmod@dividend,f
  7177  0C88  1903               	skipnz
  7178  0C89  0AF3               	incf	___awmod@dividend+1,f
  7179  0C8A                     l2136:	
  7180  0C8A  0873               	movf	___awmod@dividend+1,w
  7181  0C8B  00F1               	movwf	?___awmod+1
  7182  0C8C  0872               	movf	___awmod@dividend,w
  7183  0C8D  00F0               	movwf	?___awmod
  7184  0C8E  0008               	return
  7185  0C8F                     __end_of___awmod:	
  7186                           
  7187                           	psect	text6
  7188  0010                     __ptext6:	
  7189 ;; *************** function ___awdiv *****************
  7190 ;; Defined at:
  7191 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  divisor         2    0[COMMON] int 
  7194 ;;  dividend        2    2[COMMON] int 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  quotient        2    7[COMMON] int 
  7197 ;;  sign            1    6[COMMON] unsigned char 
  7198 ;;  counter         1    5[COMMON] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  2    0[COMMON] int 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;Total ram usage:        9 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_LCD_Write_Int
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function ___awdiv
  7223  0010                     ___awdiv:	
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7227  0010  01F6               	clrf	___awdiv@sign
  7228  0011  1FF1               	btfss	___awdiv@divisor+1,7
  7229  0012  281A               	goto	l2066
  7230  0013  09F0               	comf	___awdiv@divisor,f
  7231  0014  09F1               	comf	___awdiv@divisor+1,f
  7232  0015  0AF0               	incf	___awdiv@divisor,f
  7233  0016  1903               	skipnz
  7234  0017  0AF1               	incf	___awdiv@divisor+1,f
  7235  0018  01F6               	clrf	___awdiv@sign
  7236  0019  0AF6               	incf	___awdiv@sign,f
  7237  001A                     l2066:	
  7238  001A  1FF3               	btfss	___awdiv@dividend+1,7
  7239  001B  2825               	goto	l2072
  7240  001C  09F2               	comf	___awdiv@dividend,f
  7241  001D  09F3               	comf	___awdiv@dividend+1,f
  7242  001E  0AF2               	incf	___awdiv@dividend,f
  7243  001F  1903               	skipnz
  7244  0020  0AF3               	incf	___awdiv@dividend+1,f
  7245  0021  3001               	movlw	1
  7246  0022  00F4               	movwf	??___awdiv
  7247  0023  0874               	movf	??___awdiv,w
  7248  0024  06F6               	xorwf	___awdiv@sign,f
  7249  0025                     l2072:	
  7250  0025  01F7               	clrf	___awdiv@quotient
  7251  0026  01F8               	clrf	___awdiv@quotient+1
  7252  0027  0870               	movf	___awdiv@divisor,w
  7253  0028  0471               	iorwf	___awdiv@divisor+1,w
  7254  0029  1903               	btfsc	3,2
  7255  002A  2854               	goto	l2094
  7256  002B  01F5               	clrf	___awdiv@counter
  7257  002C  0AF5               	incf	___awdiv@counter,f
  7258  002D                     l2082:	
  7259  002D  1BF1               	btfsc	___awdiv@divisor+1,7
  7260  002E  2839               	goto	l2084
  7261  002F  3001               	movlw	1
  7262  0030                     u1885:	
  7263  0030  35F0               	lslf	___awdiv@divisor,f
  7264  0031  0DF1               	rlf	___awdiv@divisor+1,f
  7265  0032  0B89               	decfsz	9,f
  7266  0033  2830               	goto	u1885
  7267  0034  3001               	movlw	1
  7268  0035  00F4               	movwf	??___awdiv
  7269  0036  0874               	movf	??___awdiv,w
  7270  0037  07F5               	addwf	___awdiv@counter,f
  7271  0038  282D               	goto	l2082
  7272  0039                     l2084:	
  7273  0039  3001               	movlw	1
  7274  003A                     u1905:	
  7275  003A  35F7               	lslf	___awdiv@quotient,f
  7276  003B  0DF8               	rlf	___awdiv@quotient+1,f
  7277  003C  0B89               	decfsz	9,f
  7278  003D  283A               	goto	u1905
  7279  003E  0871               	movf	___awdiv@divisor+1,w
  7280  003F  0273               	subwf	___awdiv@dividend+1,w
  7281  0040  1D03               	skipz
  7282  0041  2844               	goto	u1915
  7283  0042  0870               	movf	___awdiv@divisor,w
  7284  0043  0272               	subwf	___awdiv@dividend,w
  7285  0044                     u1915:	
  7286  0044  1C03               	skipc
  7287  0045  284B               	goto	l2090
  7288  0046  0870               	movf	___awdiv@divisor,w
  7289  0047  02F2               	subwf	___awdiv@dividend,f
  7290  0048  0871               	movf	___awdiv@divisor+1,w
  7291  0049  3BF3               	subwfb	___awdiv@dividend+1,f
  7292  004A  1477               	bsf	___awdiv@quotient,0
  7293  004B                     l2090:	
  7294  004B  3001               	movlw	1
  7295  004C                     u1925:	
  7296  004C  36F1               	lsrf	___awdiv@divisor+1,f
  7297  004D  0CF0               	rrf	___awdiv@divisor,f
  7298  004E  0B89               	decfsz	9,f
  7299  004F  284C               	goto	u1925
  7300  0050  3001               	movlw	1
  7301  0051  02F5               	subwf	___awdiv@counter,f
  7302  0052  1D03               	btfss	3,2
  7303  0053  2839               	goto	l2084
  7304  0054                     l2094:	
  7305  0054  0876               	movf	___awdiv@sign,w
  7306  0055  1903               	btfsc	3,2
  7307  0056  285C               	goto	l2098
  7308  0057  09F7               	comf	___awdiv@quotient,f
  7309  0058  09F8               	comf	___awdiv@quotient+1,f
  7310  0059  0AF7               	incf	___awdiv@quotient,f
  7311  005A  1903               	skipnz
  7312  005B  0AF8               	incf	___awdiv@quotient+1,f
  7313  005C                     l2098:	
  7314  005C  0878               	movf	___awdiv@quotient+1,w
  7315  005D  00F1               	movwf	?___awdiv+1
  7316  005E  0877               	movf	___awdiv@quotient,w
  7317  005F  00F0               	movwf	?___awdiv
  7318  0060  0008               	return
  7319  0061                     __end_of___awdiv:	
  7320                           
  7321                           	psect	text7
  7322  0C0B                     __ptext7:	
  7323 ;; *************** function _LCD_Set_Cursor *****************
  7324 ;; Defined at:
  7325 ;;		line 82 in file "lcd.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  x               1    wreg     unsigned char 
  7328 ;;  y               1    3[COMMON] unsigned char 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  x               1    6[COMMON] unsigned char 
  7331 ;;  temp            1    9[COMMON] unsigned char 
  7332 ;;  w               1    8[COMMON] unsigned char 
  7333 ;;  z               1    7[COMMON] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;Total ram usage:        7 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    2
  7350 ;; This function calls:
  7351 ;;		_LCD_Cmd
  7352 ;; This function is called by:
  7353 ;;		_tempSetpoint
  7354 ;;		_readButtons
  7355 ;;		_main
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function _LCD_Set_Cursor
  7361  0C0B                     _LCD_Set_Cursor:	
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7365                           ;LCD_Set_Cursor@x stored from wreg
  7366  0C0B  00F6               	movwf	LCD_Set_Cursor@x
  7367                           
  7368                           ;lcd.c: 86: char temp,z,w;
  7369                           ;lcd.c: 88: if(x == 0)
  7370  0C0C  0876               	movf	LCD_Set_Cursor@x,w
  7371  0C0D  1D03               	btfss	3,2
  7372  0C0E  2C2B               	goto	l2152
  7373                           
  7374                           ;lcd.c: 89: {
  7375                           ;lcd.c: 90: temp = 0x80 + y;
  7376  0C0F  0873               	movf	LCD_Set_Cursor@y,w
  7377  0C10  3E80               	addlw	128
  7378  0C11  00F4               	movwf	??_LCD_Set_Cursor
  7379  0C12  0874               	movf	??_LCD_Set_Cursor,w
  7380  0C13  00F9               	movwf	LCD_Set_Cursor@temp
  7381                           
  7382                           ;lcd.c: 91: z = temp>>4;
  7383  0C14  0879               	movf	LCD_Set_Cursor@temp,w
  7384  0C15  00F4               	movwf	??_LCD_Set_Cursor
  7385  0C16  3004               	movlw	4
  7386  0C17                     u2055:	
  7387  0C17  36F4               	lsrf	??_LCD_Set_Cursor,f
  7388  0C18  0B89               	decfsz	9,f
  7389  0C19  2C17               	goto	u2055
  7390  0C1A  0874               	movf	??_LCD_Set_Cursor,w
  7391  0C1B  00F5               	movwf	??_LCD_Set_Cursor+1
  7392  0C1C  0875               	movf	??_LCD_Set_Cursor+1,w
  7393  0C1D  00F7               	movwf	LCD_Set_Cursor@z
  7394                           
  7395                           ;lcd.c: 92: w = temp & 0x0F;
  7396  0C1E  0879               	movf	LCD_Set_Cursor@temp,w
  7397  0C1F  390F               	andlw	15
  7398  0C20  00F4               	movwf	??_LCD_Set_Cursor
  7399  0C21  0874               	movf	??_LCD_Set_Cursor,w
  7400  0C22  00F8               	movwf	LCD_Set_Cursor@w
  7401                           
  7402                           ;lcd.c: 93: LCD_Cmd(z);
  7403  0C23  0877               	movf	LCD_Set_Cursor@z,w
  7404  0C24  3189  2192  318C   	fcall	_LCD_Cmd
  7405                           
  7406                           ;lcd.c: 94: LCD_Cmd(w);
  7407  0C27  0878               	movf	LCD_Set_Cursor@w,w
  7408  0C28  3189  2192         	fcall	_LCD_Cmd
  7409                           
  7410                           ;lcd.c: 95: }
  7411  0C2A  0008               	return
  7412  0C2B                     l2152:	
  7413                           
  7414                           ;lcd.c: 97: else if(x == 1)
  7415  0C2B  0376               	decf	LCD_Set_Cursor@x,w
  7416  0C2C  1D03               	btfss	3,2
  7417  0C2D  0008               	return
  7418                           
  7419                           ;lcd.c: 98: {
  7420                           ;lcd.c: 99: temp = 0xC0 + y;
  7421  0C2E  0873               	movf	LCD_Set_Cursor@y,w
  7422  0C2F  3EC0               	addlw	192
  7423  0C30  00F4               	movwf	??_LCD_Set_Cursor
  7424  0C31  0874               	movf	??_LCD_Set_Cursor,w
  7425  0C32  00F9               	movwf	LCD_Set_Cursor@temp
  7426                           
  7427                           ;lcd.c: 100: z = temp>>4;
  7428  0C33  0879               	movf	LCD_Set_Cursor@temp,w
  7429  0C34  00F4               	movwf	??_LCD_Set_Cursor
  7430  0C35  3004               	movlw	4
  7431  0C36                     u2075:	
  7432  0C36  36F4               	lsrf	??_LCD_Set_Cursor,f
  7433  0C37  0B89               	decfsz	9,f
  7434  0C38  2C36               	goto	u2075
  7435  0C39  0874               	movf	??_LCD_Set_Cursor,w
  7436  0C3A  00F5               	movwf	??_LCD_Set_Cursor+1
  7437  0C3B  0875               	movf	??_LCD_Set_Cursor+1,w
  7438  0C3C  00F7               	movwf	LCD_Set_Cursor@z
  7439                           
  7440                           ;lcd.c: 101: w = temp & 0x0F;
  7441  0C3D  0879               	movf	LCD_Set_Cursor@temp,w
  7442  0C3E  390F               	andlw	15
  7443  0C3F  00F4               	movwf	??_LCD_Set_Cursor
  7444  0C40  0874               	movf	??_LCD_Set_Cursor,w
  7445  0C41  00F8               	movwf	LCD_Set_Cursor@w
  7446                           
  7447                           ;lcd.c: 102: LCD_Cmd(z);
  7448  0C42  0877               	movf	LCD_Set_Cursor@z,w
  7449  0C43  3189  2192  318C   	fcall	_LCD_Cmd
  7450                           
  7451                           ;lcd.c: 103: LCD_Cmd(w);
  7452  0C46  0878               	movf	LCD_Set_Cursor@w,w
  7453  0C47  3189  2192         	fcall	_LCD_Cmd
  7454  0C49  0008               	return
  7455  0C4A                     __end_of_LCD_Set_Cursor:	
  7456                           
  7457                           	psect	text8
  7458  0061                     __ptext8:	
  7459 ;; *************** function _log *****************
  7460 ;; Defined at:
  7461 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  x               3   39[BANK0 ] void 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  exponent        2   43[BANK0 ] int 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  3   39[BANK0 ] int 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        6 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    3
  7482 ;; This function calls:
  7483 ;;		___awtoft
  7484 ;;		___ftadd
  7485 ;;		___ftge
  7486 ;;		___ftmul
  7487 ;;		_eval_poly
  7488 ;;		_frexp
  7489 ;; This function is called by:
  7490 ;;		_main
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           
  7495                           ;psect for function _log
  7496  0061                     _log:	
  7497                           
  7498                           ;incstack = 0
  7499                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7500  0061  0020               	movlb	0	; select bank0
  7501  0062  0847               	movf	log@x,w
  7502  0063  00BD               	movwf	___ftge@ff1
  7503  0064  0848               	movf	log@x+1,w
  7504  0065  00BE               	movwf	___ftge@ff1+1
  7505  0066  0849               	movf	log@x+2,w
  7506  0067  00BF               	movwf	___ftge@ff1+2
  7507  0068  3000               	movlw	0
  7508  0069  00C0               	movwf	___ftge@ff2
  7509  006A  3000               	movlw	0
  7510  006B  00C1               	movwf	___ftge@ff2+1
  7511  006C  3000               	movlw	0
  7512  006D  00C2               	movwf	___ftge@ff2+2
  7513  006E  318B  23CF  3180   	fcall	___ftge
  7514  0071  1803               	btfsc	3,0
  7515  0072  287F               	goto	l2740
  7516  0073  3021               	movlw	33
  7517  0074  0020               	movlb	0	; select bank0
  7518  0075  00DC               	movwf	_errno
  7519  0076  3000               	movlw	0
  7520  0077  00DD               	movwf	_errno+1
  7521  0078  3000               	movlw	0
  7522  0079  00C7               	movwf	?_log
  7523  007A  3000               	movlw	0
  7524  007B  00C8               	movwf	?_log+1
  7525  007C  3000               	movlw	0
  7526  007D  00C9               	movwf	?_log+2
  7527  007E  0008               	return
  7528  007F                     l2740:	
  7529  007F  0020               	movlb	0	; select bank0
  7530  0080  0849               	movf	log@x+2,w
  7531  0081  0448               	iorwf	log@x+1,w
  7532  0082  0447               	iorwf	log@x,w
  7533  0083  1D03               	skipz
  7534  0084  2890               	goto	l2746
  7535  0085  3022               	movlw	34
  7536  0086  00DC               	movwf	_errno
  7537  0087  3000               	movlw	0
  7538  0088  00DD               	movwf	_errno+1
  7539  0089  3000               	movlw	0
  7540  008A  00C7               	movwf	?_log
  7541  008B  3000               	movlw	0
  7542  008C  00C8               	movwf	?_log+1
  7543  008D  3000               	movlw	0
  7544  008E  00C9               	movwf	?_log+2
  7545  008F  0008               	return
  7546  0090                     l2746:	
  7547  0090  3000               	movlw	0
  7548  0091  00B0               	movwf	___ftadd@f1
  7549  0092  3080               	movlw	128
  7550  0093  00B1               	movwf	___ftadd@f1+1
  7551  0094  30BF               	movlw	191
  7552  0095  00B2               	movwf	___ftadd@f1+2
  7553  0096  3000               	movlw	0
  7554  0097  00A0               	movwf	___ftmul@f1
  7555  0098  3000               	movlw	0
  7556  0099  00A1               	movwf	___ftmul@f1+1
  7557  009A  3040               	movlw	64
  7558  009B  00A2               	movwf	___ftmul@f1+2
  7559  009C  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7560  009D  00CA               	movwf	??_log
  7561  009E  084A               	movf	??_log,w
  7562  009F  00F3               	movwf	frexp@eptr
  7563  00A0  0847               	movf	log@x,w
  7564  00A1  00F0               	movwf	frexp@value
  7565  00A2  0848               	movf	log@x+1,w
  7566  00A3  00F1               	movwf	frexp@value+1
  7567  00A4  0849               	movf	log@x+2,w
  7568  00A5  00F2               	movwf	frexp@value+2
  7569  00A6  318B  2394  3180   	fcall	_frexp
  7570  00A9  0870               	movf	?_frexp,w
  7571  00AA  0020               	movlb	0	; select bank0
  7572  00AB  00A3               	movwf	___ftmul@f2
  7573  00AC  0871               	movf	?_frexp+1,w
  7574  00AD  00A4               	movwf	___ftmul@f2+1
  7575  00AE  0872               	movf	?_frexp+2,w
  7576  00AF  00A5               	movwf	___ftmul@f2+2
  7577  00B0  3181  210E  3180   	fcall	___ftmul
  7578  00B3  0020               	movlb	0	; select bank0
  7579  00B4  0820               	movf	?___ftmul,w
  7580  00B5  00B3               	movwf	___ftadd@f2
  7581  00B6  0821               	movf	?___ftmul+1,w
  7582  00B7  00B4               	movwf	___ftadd@f2+1
  7583  00B8  0822               	movf	?___ftmul+2,w
  7584  00B9  00B5               	movwf	___ftadd@f2+2
  7585  00BA  3183  2345  3180   	fcall	___ftadd
  7586  00BD  0020               	movlb	0	; select bank0
  7587  00BE  0830               	movf	?___ftadd,w
  7588  00BF  00C7               	movwf	log@x
  7589  00C0  0831               	movf	?___ftadd+1,w
  7590  00C1  00C8               	movwf	log@x+1
  7591  00C2  0832               	movf	?___ftadd+2,w
  7592  00C3  00C9               	movwf	log@x+2
  7593  00C4  30FF               	movlw	255
  7594  00C5  07CB               	addwf	log@exponent,f
  7595  00C6  30FF               	movlw	255
  7596  00C7  3DCC               	addwfc	log@exponent+1,f
  7597  00C8  0847               	movf	log@x,w
  7598  00C9  00BD               	movwf	eval_poly@x
  7599  00CA  0848               	movf	log@x+1,w
  7600  00CB  00BE               	movwf	eval_poly@x+1
  7601  00CC  0849               	movf	log@x+2,w
  7602  00CD  00BF               	movwf	eval_poly@x+2
  7603  00CE  3000               	movlw	low (log@coeff| (0+32768))
  7604  00CF  00C0               	movwf	eval_poly@d
  7605  00D0  3090               	movlw	high (log@coeff| (0+32768))
  7606  00D1  00C1               	movwf	eval_poly@d+1
  7607  00D2  3008               	movlw	8
  7608  00D3  00C2               	movwf	eval_poly@n
  7609  00D4  3000               	movlw	0
  7610  00D5  00C3               	movwf	eval_poly@n+1
  7611  00D6  318C  248F  3180   	fcall	_eval_poly
  7612  00D9  0020               	movlb	0	; select bank0
  7613  00DA  083D               	movf	?_eval_poly,w
  7614  00DB  00C7               	movwf	log@x
  7615  00DC  083E               	movf	?_eval_poly+1,w
  7616  00DD  00C8               	movwf	log@x+1
  7617  00DE  083F               	movf	?_eval_poly+2,w
  7618  00DF  00C9               	movwf	log@x+2
  7619  00E0  0847               	movf	log@x,w
  7620  00E1  00B0               	movwf	___ftadd@f1
  7621  00E2  0848               	movf	log@x+1,w
  7622  00E3  00B1               	movwf	___ftadd@f1+1
  7623  00E4  0849               	movf	log@x+2,w
  7624  00E5  00B2               	movwf	___ftadd@f1+2
  7625  00E6  3072               	movlw	114
  7626  00E7  00A0               	movwf	___ftmul@f1
  7627  00E8  3031               	movlw	49
  7628  00E9  00A1               	movwf	___ftmul@f1+1
  7629  00EA  303F               	movlw	63
  7630  00EB  00A2               	movwf	___ftmul@f1+2
  7631  00EC  084C               	movf	log@exponent+1,w
  7632  00ED  00F9               	movwf	___awtoft@c+1
  7633  00EE  084B               	movf	log@exponent,w
  7634  00EF  00F8               	movwf	___awtoft@c
  7635  00F0  318A  2284  3180   	fcall	___awtoft
  7636  00F3  0878               	movf	?___awtoft,w
  7637  00F4  0020               	movlb	0	; select bank0
  7638  00F5  00A3               	movwf	___ftmul@f2
  7639  00F6  0879               	movf	?___awtoft+1,w
  7640  00F7  00A4               	movwf	___ftmul@f2+1
  7641  00F8  087A               	movf	?___awtoft+2,w
  7642  00F9  00A5               	movwf	___ftmul@f2+2
  7643  00FA  3181  210E  3180   	fcall	___ftmul
  7644  00FD  0020               	movlb	0	; select bank0
  7645  00FE  0820               	movf	?___ftmul,w
  7646  00FF  00B3               	movwf	___ftadd@f2
  7647  0100  0821               	movf	?___ftmul+1,w
  7648  0101  00B4               	movwf	___ftadd@f2+1
  7649  0102  0822               	movf	?___ftmul+2,w
  7650  0103  00B5               	movwf	___ftadd@f2+2
  7651  0104  3183  2345         	fcall	___ftadd
  7652  0106  0020               	movlb	0	; select bank0
  7653  0107  0830               	movf	?___ftadd,w
  7654  0108  00C7               	movwf	?_log
  7655  0109  0831               	movf	?___ftadd+1,w
  7656  010A  00C8               	movwf	?_log+1
  7657  010B  0832               	movf	?___ftadd+2,w
  7658  010C  00C9               	movwf	?_log+2
  7659  010D  0008               	return
  7660  010E                     __end_of_log:	
  7661                           
  7662                           	psect	text9
  7663  0B94                     __ptext9:	
  7664 ;; *************** function _frexp *****************
  7665 ;; Defined at:
  7666 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  value           3    0[COMMON] int 
  7669 ;;  eptr            1    3[COMMON] PTR int 
  7670 ;;		 -> log@exponent(2), 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  3    0[COMMON] PTR int 
  7675 ;; Registers used:
  7676 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:        6 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_log
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _frexp
  7697  0B94                     _frexp:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7701  0B94  0872               	movf	frexp@value+2,w
  7702  0B95  0471               	iorwf	frexp@value+1,w
  7703  0B96  0470               	iorwf	frexp@value,w
  7704  0B97  1D03               	skipz
  7705  0B98  2BA6               	goto	l2606
  7706  0B99  0873               	movf	frexp@eptr,w
  7707  0B9A  0086               	movwf	6
  7708  0B9B  0187               	clrf	7
  7709  0B9C  3000               	movlw	0
  7710  0B9D  3FC0               	movwi [0]fsr1
  7711  0B9E  3FC1               	movwi [1]fsr1
  7712  0B9F  3000               	movlw	0
  7713  0BA0  00F0               	movwf	?_frexp
  7714  0BA1  3000               	movlw	0
  7715  0BA2  00F1               	movwf	?_frexp+1
  7716  0BA3  3000               	movlw	0
  7717  0BA4  00F2               	movwf	?_frexp+2
  7718  0BA5  0008               	return
  7719  0BA6                     l2606:	
  7720  0BA6  0872               	movf	frexp@value+2,w
  7721  0BA7  397F               	andlw	127
  7722  0BA8  00F4               	movwf	??_frexp
  7723  0BA9  01F5               	clrf	??_frexp+1
  7724  0BAA  35F4               	lslf	??_frexp,f
  7725  0BAB  0DF5               	rlf	??_frexp+1,f
  7726  0BAC  0873               	movf	frexp@eptr,w
  7727  0BAD  0086               	movwf	6
  7728  0BAE  0187               	clrf	7
  7729  0BAF  0874               	movf	??_frexp,w
  7730  0BB0  3FC0               	movwi [0]fsr1
  7731  0BB1  0875               	movf	??_frexp+1,w
  7732  0BB2  3FC1               	movwi [1]fsr1
  7733  0BB3  0D71               	rlf	frexp@value+1,w
  7734  0BB4  0D71               	rlf	frexp@value+1,w
  7735  0BB5  3901               	andlw	1
  7736  0BB6  00F4               	movwf	??_frexp
  7737  0BB7  01F5               	clrf	??_frexp+1
  7738  0BB8  0873               	movf	frexp@eptr,w
  7739  0BB9  0086               	movwf	6
  7740  0BBA  0187               	clrf	7
  7741  0BBB  0874               	movf	??_frexp,w
  7742  0BBC  0481               	iorwf	1,f
  7743  0BBD  3141               	addfsr 1,1
  7744  0BBE  0875               	movf	??_frexp+1,w
  7745  0BBF  0481               	iorwf	1,f
  7746  0BC0  0873               	movf	frexp@eptr,w
  7747  0BC1  0086               	movwf	6
  7748  0BC2  0187               	clrf	7
  7749  0BC3  3082               	movlw	130
  7750  0BC4  0781               	addwf	1,f
  7751  0BC5  3141               	addfsr 1,1
  7752  0BC6  30FF               	movlw	255
  7753  0BC7  3D81               	addwfc	1,f
  7754  0BC8  317F               	addfsr 1,-1
  7755  0BC9  0872               	movf	frexp@value+2,w
  7756  0BCA  3980               	andlw	-128
  7757  0BCB  383F               	iorlw	63
  7758  0BCC  00F2               	movwf	frexp@value+2
  7759  0BCD  13F1               	bcf	frexp@value+1,7
  7760  0BCE  0008               	return
  7761  0BCF                     __end_of_frexp:	
  7762                           
  7763                           	psect	text10
  7764  0C8F                     __ptext10:	
  7765 ;; *************** function _eval_poly *****************
  7766 ;; Defined at:
  7767 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  x               3   29[BANK0 ] PTR int 
  7770 ;;  d               2   32[BANK0 ] PTR const 
  7771 ;;		 -> log@coeff(27), 
  7772 ;;  n               2   34[BANK0 ] int 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  res             3   36[BANK0 ] int 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  3   29[BANK0 ] int 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7784 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;Total ram usage:       10 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    2
  7791 ;; This function calls:
  7792 ;;		___ftadd
  7793 ;;		___ftmul
  7794 ;;		___wmul
  7795 ;; This function is called by:
  7796 ;;		_log
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           
  7801                           ;psect for function _eval_poly
  7802  0C8F                     _eval_poly:	
  7803                           
  7804                           ;incstack = 0
  7805                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7806  0C8F  0020               	movlb	0	; select bank0
  7807  0C90  0843               	movf	eval_poly@n+1,w
  7808  0C91  00A1               	movwf	___wmul@multiplier+1
  7809  0C92  0842               	movf	eval_poly@n,w
  7810  0C93  00A0               	movwf	___wmul@multiplier
  7811  0C94  3003               	movlw	3
  7812  0C95  00A2               	movwf	___wmul@multiplicand
  7813  0C96  3000               	movlw	0
  7814  0C97  00A3               	movwf	___wmul@multiplicand+1
  7815  0C98  318A  224A  318C   	fcall	___wmul
  7816  0C9B  0020               	movlb	0	; select bank0
  7817  0C9C  0840               	movf	eval_poly@d,w
  7818  0C9D  0720               	addwf	?___wmul,w
  7819  0C9E  0084               	movwf	4
  7820  0C9F  0841               	movf	eval_poly@d+1,w
  7821  0CA0  3D21               	addwfc	?___wmul+1,w
  7822  0CA1  0085               	movwf	5
  7823  0CA2  3F00               	moviw [0]fsr0
  7824  0CA3  00C4               	movwf	eval_poly@res
  7825  0CA4  3F01               	moviw [1]fsr0
  7826  0CA5  00C5               	movwf	eval_poly@res+1
  7827  0CA6  3F02               	moviw [2]fsr0
  7828  0CA7                     L2:	
  7829  0CA7  00C6               	movwf	eval_poly@res+2
  7830  0CA8  0842               	movf	eval_poly@n,w
  7831  0CA9  0443               	iorwf	eval_poly@n+1,w
  7832  0CAA  1903               	btfsc	3,2
  7833  0CAB  2CE8               	goto	l2624
  7834  0CAC  30FF               	movlw	255
  7835  0CAD  07C2               	addwf	eval_poly@n,f
  7836  0CAE  30FF               	movlw	255
  7837  0CAF  3DC3               	addwfc	eval_poly@n+1,f
  7838  0CB0  0843               	movf	eval_poly@n+1,w
  7839  0CB1  00A1               	movwf	___wmul@multiplier+1
  7840  0CB2  0842               	movf	eval_poly@n,w
  7841  0CB3  00A0               	movwf	___wmul@multiplier
  7842  0CB4  3003               	movlw	3
  7843  0CB5  00A2               	movwf	___wmul@multiplicand
  7844  0CB6  3000               	movlw	0
  7845  0CB7  00A3               	movwf	___wmul@multiplicand+1
  7846  0CB8  318A  224A  318C   	fcall	___wmul
  7847  0CBB  0020               	movlb	0	; select bank0
  7848  0CBC  0840               	movf	eval_poly@d,w
  7849  0CBD  0720               	addwf	?___wmul,w
  7850  0CBE  0084               	movwf	4
  7851  0CBF  0841               	movf	eval_poly@d+1,w
  7852  0CC0  3D21               	addwfc	?___wmul+1,w
  7853  0CC1  0085               	movwf	5
  7854  0CC2  3F00               	moviw [0]fsr0
  7855  0CC3  00B0               	movwf	___ftadd@f1
  7856  0CC4  3F01               	moviw [1]fsr0
  7857  0CC5  00B1               	movwf	___ftadd@f1+1
  7858  0CC6  3F02               	moviw [2]fsr0
  7859  0CC7  00B2               	movwf	___ftadd@f1+2
  7860  0CC8  0844               	movf	eval_poly@res,w
  7861  0CC9  00A0               	movwf	___ftmul@f1
  7862  0CCA  0845               	movf	eval_poly@res+1,w
  7863  0CCB  00A1               	movwf	___ftmul@f1+1
  7864  0CCC  0846               	movf	eval_poly@res+2,w
  7865  0CCD  00A2               	movwf	___ftmul@f1+2
  7866  0CCE  083D               	movf	eval_poly@x,w
  7867  0CCF  00A3               	movwf	___ftmul@f2
  7868  0CD0  083E               	movf	eval_poly@x+1,w
  7869  0CD1  00A4               	movwf	___ftmul@f2+1
  7870  0CD2  083F               	movf	eval_poly@x+2,w
  7871  0CD3  00A5               	movwf	___ftmul@f2+2
  7872  0CD4  3181  210E  318C   	fcall	___ftmul
  7873  0CD7  0020               	movlb	0	; select bank0
  7874  0CD8  0820               	movf	?___ftmul,w
  7875  0CD9  00B3               	movwf	___ftadd@f2
  7876  0CDA  0821               	movf	?___ftmul+1,w
  7877  0CDB  00B4               	movwf	___ftadd@f2+1
  7878  0CDC  0822               	movf	?___ftmul+2,w
  7879  0CDD  00B5               	movwf	___ftadd@f2+2
  7880  0CDE  3183  2345  318C   	fcall	___ftadd
  7881  0CE1  0020               	movlb	0	; select bank0
  7882  0CE2  0830               	movf	?___ftadd,w
  7883  0CE3  00C4               	movwf	eval_poly@res
  7884  0CE4  0831               	movf	?___ftadd+1,w
  7885  0CE5  00C5               	movwf	eval_poly@res+1
  7886  0CE6  0832               	movf	?___ftadd+2,w
  7887  0CE7  2CA7               	goto	L2
  7888  0CE8                     l2624:	
  7889  0CE8  0844               	movf	eval_poly@res,w
  7890  0CE9  00BD               	movwf	?_eval_poly
  7891  0CEA  0845               	movf	eval_poly@res+1,w
  7892  0CEB  00BE               	movwf	?_eval_poly+1
  7893  0CEC  0846               	movf	eval_poly@res+2,w
  7894  0CED  00BF               	movwf	?_eval_poly+2
  7895  0CEE  0008               	return
  7896  0CEF                     __end_of_eval_poly:	
  7897                           
  7898                           	psect	text11
  7899  0A4A                     __ptext11:	
  7900 ;; *************** function ___wmul *****************
  7901 ;; Defined at:
  7902 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7905 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  product         2    4[BANK0 ] unsigned int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    0[BANK0 ] unsigned int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;Total ram usage:        6 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_main
  7927 ;;		_eval_poly
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function ___wmul
  7933  0A4A                     ___wmul:	
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7937  0A4A  0020               	movlb	0	; select bank0
  7938  0A4B  01A4               	clrf	___wmul@product
  7939  0A4C  01A5               	clrf	___wmul@product+1
  7940  0A4D                     l2222:	
  7941  0A4D  1C20               	btfss	___wmul@multiplier,0
  7942  0A4E  2A53               	goto	l454
  7943  0A4F  0822               	movf	___wmul@multiplicand,w
  7944  0A50  07A4               	addwf	___wmul@product,f
  7945  0A51  0823               	movf	___wmul@multiplicand+1,w
  7946  0A52  3DA5               	addwfc	___wmul@product+1,f
  7947  0A53                     l454:	
  7948  0A53  3001               	movlw	1
  7949  0A54                     u2195:	
  7950  0A54  35A2               	lslf	___wmul@multiplicand,f
  7951  0A55  0DA3               	rlf	___wmul@multiplicand+1,f
  7952  0A56  0B89               	decfsz	9,f
  7953  0A57  2A54               	goto	u2195
  7954  0A58  3001               	movlw	1
  7955  0A59                     u2205:	
  7956  0A59  36A1               	lsrf	___wmul@multiplier+1,f
  7957  0A5A  0CA0               	rrf	___wmul@multiplier,f
  7958  0A5B  0B89               	decfsz	9,f
  7959  0A5C  2A59               	goto	u2205
  7960  0A5D  0820               	movf	___wmul@multiplier,w
  7961  0A5E  0421               	iorwf	___wmul@multiplier+1,w
  7962  0A5F  1D03               	btfss	3,2
  7963  0A60  2A4D               	goto	l2222
  7964  0A61  0825               	movf	___wmul@product+1,w
  7965  0A62  00A1               	movwf	?___wmul+1
  7966  0A63  0824               	movf	___wmul@product,w
  7967  0A64  00A0               	movwf	?___wmul
  7968  0A65  0008               	return
  7969  0A66                     __end_of___wmul:	
  7970                           
  7971                           	psect	text12
  7972  010E                     __ptext12:	
  7973 ;; *************** function ___ftmul *****************
  7974 ;; Defined at:
  7975 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  f1              3    0[BANK0 ] float 
  7978 ;;  f2              3    3[BANK0 ] float 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7981 ;;  sign            1   15[BANK0 ] unsigned char 
  7982 ;;  cntr            1   14[BANK0 ] unsigned char 
  7983 ;;  exp             1   10[BANK0 ] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  3    0[BANK0 ] float 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0, pclath, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;Total ram usage:       16 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    1
  8000 ;; This function calls:
  8001 ;;		___ftpack
  8002 ;; This function is called by:
  8003 ;;		_log
  8004 ;;		_eval_poly
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function ___ftmul
  8010  010E                     ___ftmul:	
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8014  010E  0020               	movlb	0	; select bank0
  8015  010F  0820               	movf	___ftmul@f1,w
  8016  0110  00A6               	movwf	??___ftmul
  8017  0111  0821               	movf	___ftmul@f1+1,w
  8018  0112  00A7               	movwf	??___ftmul+1
  8019  0113  0822               	movf	___ftmul@f1+2,w
  8020  0114  00A8               	movwf	??___ftmul+2
  8021  0115  1003               	clrc
  8022  0116  0D27               	rlf	??___ftmul+1,w
  8023  0117  0D28               	rlf	??___ftmul+2,w
  8024  0118  00A9               	movwf	??___ftmul+3
  8025  0119  0829               	movf	??___ftmul+3,w
  8026  011A  00AA               	movwf	___ftmul@exp
  8027  011B  082A               	movf	___ftmul@exp,w
  8028  011C  1D03               	btfss	3,2
  8029  011D  2925               	goto	l2310
  8030  011E  3000               	movlw	0
  8031  011F  00A0               	movwf	?___ftmul
  8032  0120  3000               	movlw	0
  8033  0121  00A1               	movwf	?___ftmul+1
  8034  0122  3000               	movlw	0
  8035  0123  00A2               	movwf	?___ftmul+2
  8036  0124  0008               	return
  8037  0125                     l2310:	
  8038  0125  0823               	movf	___ftmul@f2,w
  8039  0126  00A6               	movwf	??___ftmul
  8040  0127  0824               	movf	___ftmul@f2+1,w
  8041  0128  00A7               	movwf	??___ftmul+1
  8042  0129  0825               	movf	___ftmul@f2+2,w
  8043  012A  00A8               	movwf	??___ftmul+2
  8044  012B  1003               	clrc
  8045  012C  0D27               	rlf	??___ftmul+1,w
  8046  012D  0D28               	rlf	??___ftmul+2,w
  8047  012E  00A9               	movwf	??___ftmul+3
  8048  012F  0829               	movf	??___ftmul+3,w
  8049  0130  00AF               	movwf	___ftmul@sign
  8050  0131  082F               	movf	___ftmul@sign,w
  8051  0132  1D03               	btfss	3,2
  8052  0133  293B               	goto	l2316
  8053  0134  3000               	movlw	0
  8054  0135  00A0               	movwf	?___ftmul
  8055  0136  3000               	movlw	0
  8056  0137  00A1               	movwf	?___ftmul+1
  8057  0138  3000               	movlw	0
  8058  0139  00A2               	movwf	?___ftmul+2
  8059  013A  0008               	return
  8060  013B                     l2316:	
  8061  013B  082F               	movf	___ftmul@sign,w
  8062  013C  3E7B               	addlw	123
  8063  013D  00A6               	movwf	??___ftmul
  8064  013E  0826               	movf	??___ftmul,w
  8065  013F  07AA               	addwf	___ftmul@exp,f
  8066  0140  0820               	movf	___ftmul@f1,w
  8067  0141  00A6               	movwf	??___ftmul
  8068  0142  0821               	movf	___ftmul@f1+1,w
  8069  0143  00A7               	movwf	??___ftmul+1
  8070  0144  0822               	movf	___ftmul@f1+2,w
  8071  0145  00A8               	movwf	??___ftmul+2
  8072  0146  3010               	movlw	16
  8073  0147                     u2475:	
  8074  0147  36A8               	lsrf	??___ftmul+2,f
  8075  0148  0CA7               	rrf	??___ftmul+1,f
  8076  0149  0CA6               	rrf	??___ftmul,f
  8077  014A  0B89               	decfsz	9,f
  8078  014B  2947               	goto	u2475
  8079  014C  0826               	movf	??___ftmul,w
  8080  014D  00A9               	movwf	??___ftmul+3
  8081  014E  0829               	movf	??___ftmul+3,w
  8082  014F  00AF               	movwf	___ftmul@sign
  8083  0150  0823               	movf	___ftmul@f2,w
  8084  0151  00A6               	movwf	??___ftmul
  8085  0152  0824               	movf	___ftmul@f2+1,w
  8086  0153  00A7               	movwf	??___ftmul+1
  8087  0154  0825               	movf	___ftmul@f2+2,w
  8088  0155  00A8               	movwf	??___ftmul+2
  8089  0156  3010               	movlw	16
  8090  0157                     u2485:	
  8091  0157  36A8               	lsrf	??___ftmul+2,f
  8092  0158  0CA7               	rrf	??___ftmul+1,f
  8093  0159  0CA6               	rrf	??___ftmul,f
  8094  015A  0B89               	decfsz	9,f
  8095  015B  2957               	goto	u2485
  8096  015C  0826               	movf	??___ftmul,w
  8097  015D  00A9               	movwf	??___ftmul+3
  8098  015E  0829               	movf	??___ftmul+3,w
  8099  015F  06AF               	xorwf	___ftmul@sign,f
  8100  0160  3080               	movlw	128
  8101  0161  00A6               	movwf	??___ftmul
  8102  0162  0826               	movf	??___ftmul,w
  8103  0163  05AF               	andwf	___ftmul@sign,f
  8104  0164  17A1               	bsf	___ftmul@f1+1,7
  8105  0165  17A4               	bsf	___ftmul@f2+1,7
  8106  0166  30FF               	movlw	255
  8107  0167  05A3               	andwf	___ftmul@f2,f
  8108  0168  30FF               	movlw	255
  8109  0169  05A4               	andwf	___ftmul@f2+1,f
  8110  016A  3000               	movlw	0
  8111  016B  05A5               	andwf	___ftmul@f2+2,f
  8112  016C  3000               	movlw	0
  8113  016D  00AB               	movwf	___ftmul@f3_as_product
  8114  016E  3000               	movlw	0
  8115  016F  00AC               	movwf	___ftmul@f3_as_product+1
  8116  0170  3000               	movlw	0
  8117  0171  00AD               	movwf	___ftmul@f3_as_product+2
  8118  0172  3007               	movlw	7
  8119  0173  00A6               	movwf	??___ftmul
  8120  0174  0826               	movf	??___ftmul,w
  8121  0175  00AE               	movwf	___ftmul@cntr
  8122  0176                     l2328:	
  8123  0176  1C20               	btfss	___ftmul@f1,0
  8124  0177  297E               	goto	l2332
  8125  0178  0823               	movf	___ftmul@f2,w
  8126  0179  07AB               	addwf	___ftmul@f3_as_product,f
  8127  017A  0824               	movf	___ftmul@f2+1,w
  8128  017B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8129  017C  0825               	movf	___ftmul@f2+2,w
  8130  017D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8131  017E                     l2332:	
  8132  017E  3001               	movlw	1
  8133  017F                     u2505:	
  8134  017F  36A2               	lsrf	___ftmul@f1+2,f
  8135  0180  0CA1               	rrf	___ftmul@f1+1,f
  8136  0181  0CA0               	rrf	___ftmul@f1,f
  8137  0182  0B89               	decfsz	9,f
  8138  0183  297F               	goto	u2505
  8139  0184  3001               	movlw	1
  8140  0185                     u2515:	
  8141  0185  35A3               	lslf	___ftmul@f2,f
  8142  0186  0DA4               	rlf	___ftmul@f2+1,f
  8143  0187  0DA5               	rlf	___ftmul@f2+2,f
  8144  0188  0B89               	decfsz	9,f
  8145  0189  2985               	goto	u2515
  8146  018A  3001               	movlw	1
  8147  018B  02AE               	subwf	___ftmul@cntr,f
  8148  018C  1D03               	btfss	3,2
  8149  018D  2976               	goto	l2328
  8150  018E  3009               	movlw	9
  8151  018F  00A6               	movwf	??___ftmul
  8152  0190  0826               	movf	??___ftmul,w
  8153  0191  00AE               	movwf	___ftmul@cntr
  8154  0192                     l2340:	
  8155  0192  1C20               	btfss	___ftmul@f1,0
  8156  0193  299A               	goto	l2344
  8157  0194  0823               	movf	___ftmul@f2,w
  8158  0195  07AB               	addwf	___ftmul@f3_as_product,f
  8159  0196  0824               	movf	___ftmul@f2+1,w
  8160  0197  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8161  0198  0825               	movf	___ftmul@f2+2,w
  8162  0199  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8163  019A                     l2344:	
  8164  019A  3001               	movlw	1
  8165  019B                     u2545:	
  8166  019B  36A2               	lsrf	___ftmul@f1+2,f
  8167  019C  0CA1               	rrf	___ftmul@f1+1,f
  8168  019D  0CA0               	rrf	___ftmul@f1,f
  8169  019E  0B89               	decfsz	9,f
  8170  019F  299B               	goto	u2545
  8171  01A0  3001               	movlw	1
  8172  01A1                     u2555:	
  8173  01A1  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8174  01A2  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8175  01A3  0CAB               	rrf	___ftmul@f3_as_product,f
  8176  01A4  0B89               	decfsz	9,f
  8177  01A5  29A1               	goto	u2555
  8178  01A6  3001               	movlw	1
  8179  01A7  02AE               	subwf	___ftmul@cntr,f
  8180  01A8  1D03               	btfss	3,2
  8181  01A9  2992               	goto	l2340
  8182  01AA  082B               	movf	___ftmul@f3_as_product,w
  8183  01AB  00F0               	movwf	___ftpack@arg
  8184  01AC  082C               	movf	___ftmul@f3_as_product+1,w
  8185  01AD  00F1               	movwf	___ftpack@arg+1
  8186  01AE  082D               	movf	___ftmul@f3_as_product+2,w
  8187  01AF  00F2               	movwf	___ftpack@arg+2
  8188  01B0  082A               	movf	___ftmul@exp,w
  8189  01B1  00A6               	movwf	??___ftmul
  8190  01B2  0826               	movf	??___ftmul,w
  8191  01B3  00F3               	movwf	___ftpack@exp
  8192  01B4  082F               	movf	___ftmul@sign,w
  8193  01B5  00A7               	movwf	??___ftmul+1
  8194  01B6  0827               	movf	??___ftmul+1,w
  8195  01B7  00F4               	movwf	___ftpack@sign
  8196  01B8  318C  24EF         	fcall	___ftpack
  8197  01BA  0870               	movf	?___ftpack,w
  8198  01BB  0020               	movlb	0	; select bank0
  8199  01BC  00A0               	movwf	?___ftmul
  8200  01BD  0871               	movf	?___ftpack+1,w
  8201  01BE  00A1               	movwf	?___ftmul+1
  8202  01BF  0872               	movf	?___ftpack+2,w
  8203  01C0  00A2               	movwf	?___ftmul+2
  8204  01C1  0008               	return
  8205  01C2                     __end_of___ftmul:	
  8206                           
  8207                           	psect	text13
  8208  0BCF                     __ptext13:	
  8209 ;; *************** function ___ftge *****************
  8210 ;; Defined at:
  8211 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  ff1             3   29[BANK0 ] float 
  8214 ;;  ff2             3   32[BANK0 ] float 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;		None               void
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8226 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;Total ram usage:        9 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_main
  8236 ;;		_log
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function ___ftge
  8242  0BCF                     ___ftge:	
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8246  0BCF  0020               	movlb	0	; select bank0
  8247  0BD0  1FBF               	btfss	___ftge@ff1+2,7
  8248  0BD1  2BE6               	goto	l2582
  8249  0BD2  093D               	comf	___ftge@ff1,w
  8250  0BD3  00C3               	movwf	??___ftge
  8251  0BD4  093E               	comf	___ftge@ff1+1,w
  8252  0BD5  00C4               	movwf	??___ftge+1
  8253  0BD6  093F               	comf	___ftge@ff1+2,w
  8254  0BD7  00C5               	movwf	??___ftge+2
  8255  0BD8  0AC3               	incf	??___ftge,f
  8256  0BD9  1903               	skipnz
  8257  0BDA  0AC4               	incf	??___ftge+1,f
  8258  0BDB  1903               	skipnz
  8259  0BDC  0AC5               	incf	??___ftge+2,f
  8260  0BDD  3000               	movlw	0
  8261  0BDE  0743               	addwf	??___ftge,w
  8262  0BDF  00BD               	movwf	___ftge@ff1
  8263  0BE0  3000               	movlw	0
  8264  0BE1  3D44               	addwfc	??___ftge+1,w
  8265  0BE2  00BE               	movwf	___ftge@ff1+1
  8266  0BE3  3080               	movlw	128
  8267  0BE4  3D45               	addwfc	??___ftge+2,w
  8268  0BE5  00BF               	movwf	___ftge@ff1+2
  8269  0BE6                     l2582:	
  8270  0BE6  1FC2               	btfss	___ftge@ff2+2,7
  8271  0BE7  2BFC               	goto	l2586
  8272  0BE8  0940               	comf	___ftge@ff2,w
  8273  0BE9  00C3               	movwf	??___ftge
  8274  0BEA  0941               	comf	___ftge@ff2+1,w
  8275  0BEB  00C4               	movwf	??___ftge+1
  8276  0BEC  0942               	comf	___ftge@ff2+2,w
  8277  0BED  00C5               	movwf	??___ftge+2
  8278  0BEE  0AC3               	incf	??___ftge,f
  8279  0BEF  1903               	skipnz
  8280  0BF0  0AC4               	incf	??___ftge+1,f
  8281  0BF1  1903               	skipnz
  8282  0BF2  0AC5               	incf	??___ftge+2,f
  8283  0BF3  3000               	movlw	0
  8284  0BF4  0743               	addwf	??___ftge,w
  8285  0BF5  00C0               	movwf	___ftge@ff2
  8286  0BF6  3000               	movlw	0
  8287  0BF7  3D44               	addwfc	??___ftge+1,w
  8288  0BF8  00C1               	movwf	___ftge@ff2+1
  8289  0BF9  3080               	movlw	128
  8290  0BFA  3D45               	addwfc	??___ftge+2,w
  8291  0BFB  00C2               	movwf	___ftge@ff2+2
  8292  0BFC                     l2586:	
  8293  0BFC  3080               	movlw	128
  8294  0BFD  06BF               	xorwf	___ftge@ff1+2,f
  8295  0BFE  3080               	movlw	128
  8296  0BFF  06C2               	xorwf	___ftge@ff2+2,f
  8297  0C00  0842               	movf	___ftge@ff2+2,w
  8298  0C01  023F               	subwf	___ftge@ff1+2,w
  8299  0C02  1D03               	skipz
  8300  0C03  0008               	return
  8301  0C04  0841               	movf	___ftge@ff2+1,w
  8302  0C05  023E               	subwf	___ftge@ff1+1,w
  8303  0C06  1D03               	skipz
  8304  0C07  0008               	return
  8305  0C08  0840               	movf	___ftge@ff2,w
  8306  0C09  023D               	subwf	___ftge@ff1,w
  8307  0C0A  0008               	return
  8308  0C0B                     __end_of___ftge:	
  8309                           
  8310                           	psect	text14
  8311  0A84                     __ptext14:	
  8312 ;; *************** function ___awtoft *****************
  8313 ;; Defined at:
  8314 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  c               2    8[COMMON] int 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  sign            1   13[COMMON] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  3    8[COMMON] float 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, pclath, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:        6 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    1
  8335 ;; This function calls:
  8336 ;;		___ftpack
  8337 ;; This function is called by:
  8338 ;;		_log
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           
  8343                           ;psect for function ___awtoft
  8344  0A84                     ___awtoft:	
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8348  0A84  01FD               	clrf	___awtoft@sign
  8349  0A85  1FF9               	btfss	___awtoft@c+1,7
  8350  0A86  2A8E               	goto	l2574
  8351  0A87  09F8               	comf	___awtoft@c,f
  8352  0A88  09F9               	comf	___awtoft@c+1,f
  8353  0A89  0AF8               	incf	___awtoft@c,f
  8354  0A8A  1903               	skipnz
  8355  0A8B  0AF9               	incf	___awtoft@c+1,f
  8356  0A8C  01FD               	clrf	___awtoft@sign
  8357  0A8D  0AFD               	incf	___awtoft@sign,f
  8358  0A8E                     l2574:	
  8359  0A8E  0878               	movf	___awtoft@c,w
  8360  0A8F  00F0               	movwf	___ftpack@arg
  8361  0A90  0879               	movf	___awtoft@c+1,w
  8362  0A91  00F1               	movwf	___ftpack@arg+1
  8363  0A92  01F2               	clrf	___ftpack@arg+2
  8364  0A93  308E               	movlw	142
  8365  0A94  00FB               	movwf	??___awtoft
  8366  0A95  087B               	movf	??___awtoft,w
  8367  0A96  00F3               	movwf	___ftpack@exp
  8368  0A97  087D               	movf	___awtoft@sign,w
  8369  0A98  00FC               	movwf	??___awtoft+1
  8370  0A99  087C               	movf	??___awtoft+1,w
  8371  0A9A  00F4               	movwf	___ftpack@sign
  8372  0A9B  318C  24EF         	fcall	___ftpack
  8373  0A9D  0870               	movf	?___ftpack,w
  8374  0A9E  00F8               	movwf	?___awtoft
  8375  0A9F  0871               	movf	?___ftpack+1,w
  8376  0AA0  00F9               	movwf	?___awtoft+1
  8377  0AA1  0872               	movf	?___ftpack+2,w
  8378  0AA2  00FA               	movwf	?___awtoft+2
  8379  0AA3  0008               	return
  8380  0AA4                     __end_of___awtoft:	
  8381                           
  8382                           	psect	text15
  8383  09A4                     __ptext15:	
  8384 ;; *************** function ___lwtoft *****************
  8385 ;; Defined at:
  8386 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  c               2    8[COMMON] unsigned int 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  3    8[COMMON] float 
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0, pclath, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8400 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;Total ram usage:        4 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    1
  8407 ;; This function calls:
  8408 ;;		___ftpack
  8409 ;; This function is called by:
  8410 ;;		_main
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function ___lwtoft
  8416  09A4                     ___lwtoft:	
  8417                           
  8418                           ;incstack = 0
  8419                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8420  09A4  0878               	movf	___lwtoft@c,w
  8421  09A5  00F0               	movwf	___ftpack@arg
  8422  09A6  0879               	movf	___lwtoft@c+1,w
  8423  09A7  00F1               	movwf	___ftpack@arg+1
  8424  09A8  01F2               	clrf	___ftpack@arg+2
  8425  09A9  308E               	movlw	142
  8426  09AA  00FB               	movwf	??___lwtoft
  8427  09AB  087B               	movf	??___lwtoft,w
  8428  09AC  00F3               	movwf	___ftpack@exp
  8429  09AD  01F4               	clrf	___ftpack@sign
  8430  09AE  318C  24EF         	fcall	___ftpack
  8431  09B0  0870               	movf	?___ftpack,w
  8432  09B1  00F8               	movwf	?___lwtoft
  8433  09B2  0871               	movf	?___ftpack+1,w
  8434  09B3  00F9               	movwf	?___lwtoft+1
  8435  09B4  0872               	movf	?___ftpack+2,w
  8436  09B5  00FA               	movwf	?___lwtoft+2
  8437  09B6  0008               	return
  8438  09B7                     __end_of___lwtoft:	
  8439                           
  8440                           	psect	text16
  8441  0B25                     __ptext16:	
  8442 ;; *************** function ___lwdiv *****************
  8443 ;; Defined at:
  8444 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  divisor         2    6[BANK0 ] unsigned int 
  8447 ;;  dividend        2    8[BANK0 ] unsigned int 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  quotient        2   11[BANK0 ] unsigned int 
  8450 ;;  counter         1   13[BANK0 ] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  2    6[BANK0 ] unsigned int 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;Total ram usage:        8 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_main
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function ___lwdiv
  8475  0B25                     ___lwdiv:	
  8476                           
  8477                           ;incstack = 0
  8478                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8479  0B25  0020               	movlb	0	; select bank0
  8480  0B26  01AB               	clrf	___lwdiv@quotient
  8481  0B27  01AC               	clrf	___lwdiv@quotient+1
  8482  0B28  0826               	movf	___lwdiv@divisor,w
  8483  0B29  0427               	iorwf	___lwdiv@divisor+1,w
  8484  0B2A  1903               	btfsc	3,2
  8485  0B2B  2B55               	goto	l2922
  8486  0B2C  01AD               	clrf	___lwdiv@counter
  8487  0B2D  0AAD               	incf	___lwdiv@counter,f
  8488  0B2E                     l2910:	
  8489  0B2E  1BA7               	btfsc	___lwdiv@divisor+1,7
  8490  0B2F  2B3A               	goto	l2912
  8491  0B30  3001               	movlw	1
  8492  0B31                     u3155:	
  8493  0B31  35A6               	lslf	___lwdiv@divisor,f
  8494  0B32  0DA7               	rlf	___lwdiv@divisor+1,f
  8495  0B33  0B89               	decfsz	9,f
  8496  0B34  2B31               	goto	u3155
  8497  0B35  3001               	movlw	1
  8498  0B36  00AA               	movwf	??___lwdiv
  8499  0B37  082A               	movf	??___lwdiv,w
  8500  0B38  07AD               	addwf	___lwdiv@counter,f
  8501  0B39  2B2E               	goto	l2910
  8502  0B3A                     l2912:	
  8503  0B3A  3001               	movlw	1
  8504  0B3B                     u3175:	
  8505  0B3B  35AB               	lslf	___lwdiv@quotient,f
  8506  0B3C  0DAC               	rlf	___lwdiv@quotient+1,f
  8507  0B3D  0B89               	decfsz	9,f
  8508  0B3E  2B3B               	goto	u3175
  8509  0B3F  0827               	movf	___lwdiv@divisor+1,w
  8510  0B40  0229               	subwf	___lwdiv@dividend+1,w
  8511  0B41  1D03               	skipz
  8512  0B42  2B45               	goto	u3185
  8513  0B43  0826               	movf	___lwdiv@divisor,w
  8514  0B44  0228               	subwf	___lwdiv@dividend,w
  8515  0B45                     u3185:	
  8516  0B45  1C03               	skipc
  8517  0B46  2B4C               	goto	l2918
  8518  0B47  0826               	movf	___lwdiv@divisor,w
  8519  0B48  02A8               	subwf	___lwdiv@dividend,f
  8520  0B49  0827               	movf	___lwdiv@divisor+1,w
  8521  0B4A  3BA9               	subwfb	___lwdiv@dividend+1,f
  8522  0B4B  142B               	bsf	___lwdiv@quotient,0
  8523  0B4C                     l2918:	
  8524  0B4C  3001               	movlw	1
  8525  0B4D                     u3195:	
  8526  0B4D  36A7               	lsrf	___lwdiv@divisor+1,f
  8527  0B4E  0CA6               	rrf	___lwdiv@divisor,f
  8528  0B4F  0B89               	decfsz	9,f
  8529  0B50  2B4D               	goto	u3195
  8530  0B51  3001               	movlw	1
  8531  0B52  02AD               	subwf	___lwdiv@counter,f
  8532  0B53  1D03               	btfss	3,2
  8533  0B54  2B3A               	goto	l2912
  8534  0B55                     l2922:	
  8535  0B55  082C               	movf	___lwdiv@quotient+1,w
  8536  0B56  00A7               	movwf	?___lwdiv+1
  8537  0B57  082B               	movf	___lwdiv@quotient,w
  8538  0B58  00A6               	movwf	?___lwdiv
  8539  0B59  0008               	return
  8540  0B5A                     __end_of___lwdiv:	
  8541                           
  8542                           	psect	text17
  8543  0A16                     __ptext17:	
  8544 ;; *************** function ___lbtoft *****************
  8545 ;; Defined at:
  8546 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  c               1    wreg     unsigned char 
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  c               1   11[COMMON] unsigned char 
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  3    8[COMMON] float 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2, status,0, pclath, cstack
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8560 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;Total ram usage:        8 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    1
  8567 ;; This function calls:
  8568 ;;		___ftpack
  8569 ;; This function is called by:
  8570 ;;		_main
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function ___lbtoft
  8576  0A16                     ___lbtoft:	
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8580                           ;___lbtoft@c stored from wreg
  8581  0A16  00FB               	movwf	___lbtoft@c
  8582  0A17  087B               	movf	___lbtoft@c,w
  8583  0A18  0020               	movlb	0	; select bank0
  8584  0A19  00A0               	movwf	??___lbtoft
  8585  0A1A  01A1               	clrf	??___lbtoft+1
  8586  0A1B  01A2               	clrf	??___lbtoft+2
  8587  0A1C  0820               	movf	??___lbtoft,w
  8588  0A1D  00F0               	movwf	___ftpack@arg
  8589  0A1E  0821               	movf	??___lbtoft+1,w
  8590  0A1F  00F1               	movwf	___ftpack@arg+1
  8591  0A20  0822               	movf	??___lbtoft+2,w
  8592  0A21  00F2               	movwf	___ftpack@arg+2
  8593  0A22  308E               	movlw	142
  8594  0A23  00A3               	movwf	??___lbtoft+3
  8595  0A24  0823               	movf	??___lbtoft+3,w
  8596  0A25  00F3               	movwf	___ftpack@exp
  8597  0A26  01F4               	clrf	___ftpack@sign
  8598  0A27  318C  24EF         	fcall	___ftpack
  8599  0A29  0870               	movf	?___ftpack,w
  8600  0A2A  00F8               	movwf	?___lbtoft
  8601  0A2B  0871               	movf	?___ftpack+1,w
  8602  0A2C  00F9               	movwf	?___lbtoft+1
  8603  0A2D  0872               	movf	?___ftpack+2,w
  8604  0A2E  00FA               	movwf	?___lbtoft+2
  8605  0A2F  0008               	return
  8606  0A30                     __end_of___lbtoft:	
  8607                           
  8608                           	psect	text18
  8609  0ED1                     __ptext18:	
  8610 ;; *************** function ___fttol *****************
  8611 ;; Defined at:
  8612 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  f1              3    0[COMMON] float 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  lval            4    9[COMMON] unsigned long 
  8617 ;;  exp1            1   13[COMMON] unsigned char 
  8618 ;;  sign1           1    8[COMMON] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  4    0[COMMON] long 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;Total ram usage:       14 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_main
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           
  8642                           ;psect for function ___fttol
  8643  0ED1                     ___fttol:	
  8644                           
  8645                           ;incstack = 0
  8646                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8647  0ED1  0870               	movf	___fttol@f1,w
  8648  0ED2  00F4               	movwf	??___fttol
  8649  0ED3  0871               	movf	___fttol@f1+1,w
  8650  0ED4  00F5               	movwf	??___fttol+1
  8651  0ED5  0872               	movf	___fttol@f1+2,w
  8652  0ED6  00F6               	movwf	??___fttol+2
  8653  0ED7  1003               	clrc
  8654  0ED8  0D75               	rlf	??___fttol+1,w
  8655  0ED9  0D76               	rlf	??___fttol+2,w
  8656  0EDA  00F7               	movwf	??___fttol+3
  8657  0EDB  0877               	movf	??___fttol+3,w
  8658  0EDC  00FD               	movwf	___fttol@exp1
  8659  0EDD  087D               	movf	___fttol@exp1,w
  8660  0EDE  1D03               	btfss	3,2
  8661  0EDF  2EE9               	goto	l2860
  8662  0EE0  3000               	movlw	0
  8663  0EE1  00F3               	movwf	?___fttol+3
  8664  0EE2  3000               	movlw	0
  8665  0EE3  00F2               	movwf	?___fttol+2
  8666  0EE4  3000               	movlw	0
  8667  0EE5  00F1               	movwf	?___fttol+1
  8668  0EE6  3000               	movlw	0
  8669  0EE7  00F0               	movwf	?___fttol
  8670  0EE8  0008               	return
  8671  0EE9                     l2860:	
  8672  0EE9  0870               	movf	___fttol@f1,w
  8673  0EEA  00F4               	movwf	??___fttol
  8674  0EEB  0871               	movf	___fttol@f1+1,w
  8675  0EEC  00F5               	movwf	??___fttol+1
  8676  0EED  0872               	movf	___fttol@f1+2,w
  8677  0EEE  00F6               	movwf	??___fttol+2
  8678  0EEF  3017               	movlw	23
  8679  0EF0                     u3055:	
  8680  0EF0  36F6               	lsrf	??___fttol+2,f
  8681  0EF1  0CF5               	rrf	??___fttol+1,f
  8682  0EF2  0CF4               	rrf	??___fttol,f
  8683  0EF3  0B89               	decfsz	9,f
  8684  0EF4  2EF0               	goto	u3055
  8685  0EF5  0874               	movf	??___fttol,w
  8686  0EF6  00F7               	movwf	??___fttol+3
  8687  0EF7  0877               	movf	??___fttol+3,w
  8688  0EF8  00F8               	movwf	___fttol@sign1
  8689  0EF9  17F1               	bsf	___fttol@f1+1,7
  8690  0EFA  30FF               	movlw	255
  8691  0EFB  05F0               	andwf	___fttol@f1,f
  8692  0EFC  30FF               	movlw	255
  8693  0EFD  05F1               	andwf	___fttol@f1+1,f
  8694  0EFE  3000               	movlw	0
  8695  0EFF  05F2               	andwf	___fttol@f1+2,f
  8696  0F00  0870               	movf	___fttol@f1,w
  8697  0F01  00F9               	movwf	___fttol@lval
  8698  0F02  0871               	movf	___fttol@f1+1,w
  8699  0F03  00FA               	movwf	___fttol@lval+1
  8700  0F04  0872               	movf	___fttol@f1+2,w
  8701  0F05  00FB               	movwf	___fttol@lval+2
  8702  0F06  01FC               	clrf	___fttol@lval+3
  8703  0F07  308E               	movlw	142
  8704  0F08  02FD               	subwf	___fttol@exp1,f
  8705  0F09  1FFD               	btfss	___fttol@exp1,7
  8706  0F0A  2F27               	goto	l2880
  8707  0F0B  087D               	movf	___fttol@exp1,w
  8708  0F0C  3A80               	xorlw	128
  8709  0F0D  3E8F               	addlw	143
  8710  0F0E  1803               	skipnc
  8711  0F0F  2F19               	goto	l2878
  8712  0F10  3000               	movlw	0
  8713  0F11  00F3               	movwf	?___fttol+3
  8714  0F12  3000               	movlw	0
  8715  0F13  00F2               	movwf	?___fttol+2
  8716  0F14  3000               	movlw	0
  8717  0F15  00F1               	movwf	?___fttol+1
  8718  0F16  3000               	movlw	0
  8719  0F17  00F0               	movwf	?___fttol
  8720  0F18  0008               	return
  8721  0F19                     l2878:	
  8722  0F19  3001               	movlw	1
  8723  0F1A                     u3085:	
  8724  0F1A  36FC               	lsrf	___fttol@lval+3,f
  8725  0F1B  0CFB               	rrf	___fttol@lval+2,f
  8726  0F1C  0CFA               	rrf	___fttol@lval+1,f
  8727  0F1D  0CF9               	rrf	___fttol@lval,f
  8728  0F1E  0B89               	decfsz	9,f
  8729  0F1F  2F1A               	goto	u3085
  8730  0F20  3001               	movlw	1
  8731  0F21  00F4               	movwf	??___fttol
  8732  0F22  0874               	movf	??___fttol,w
  8733  0F23  07FD               	addwf	___fttol@exp1,f
  8734  0F24  1903               	btfsc	3,2
  8735  0F25  2F40               	goto	l2888
  8736  0F26  2F19               	goto	l2878
  8737  0F27                     l2880:	
  8738  0F27  3018               	movlw	24
  8739  0F28  027D               	subwf	___fttol@exp1,w
  8740  0F29  1C03               	skipc
  8741  0F2A  2F3D               	goto	l706
  8742  0F2B  3000               	movlw	0
  8743  0F2C  00F3               	movwf	?___fttol+3
  8744  0F2D  3000               	movlw	0
  8745  0F2E  00F2               	movwf	?___fttol+2
  8746  0F2F  3000               	movlw	0
  8747  0F30  00F1               	movwf	?___fttol+1
  8748  0F31  3000               	movlw	0
  8749  0F32  00F0               	movwf	?___fttol
  8750  0F33  0008               	return
  8751  0F34                     l2886:	
  8752  0F34  3001               	movlw	1
  8753  0F35                     u3115:	
  8754  0F35  35F9               	lslf	___fttol@lval,f
  8755  0F36  0DFA               	rlf	___fttol@lval+1,f
  8756  0F37  0DFB               	rlf	___fttol@lval+2,f
  8757  0F38  0DFC               	rlf	___fttol@lval+3,f
  8758  0F39  0B89               	decfsz	9,f
  8759  0F3A  2F35               	goto	u3115
  8760  0F3B  3001               	movlw	1
  8761  0F3C  02FD               	subwf	___fttol@exp1,f
  8762  0F3D                     l706:	
  8763  0F3D  087D               	movf	___fttol@exp1,w
  8764  0F3E  1D03               	btfss	3,2
  8765  0F3F  2F34               	goto	l2886
  8766  0F40                     l2888:	
  8767  0F40  0878               	movf	___fttol@sign1,w
  8768  0F41  1903               	btfsc	3,2
  8769  0F42  2F4E               	goto	l2892
  8770  0F43  09F9               	comf	___fttol@lval,f
  8771  0F44  09FA               	comf	___fttol@lval+1,f
  8772  0F45  09FB               	comf	___fttol@lval+2,f
  8773  0F46  09FC               	comf	___fttol@lval+3,f
  8774  0F47  0AF9               	incf	___fttol@lval,f
  8775  0F48  1903               	skipnz
  8776  0F49  0AFA               	incf	___fttol@lval+1,f
  8777  0F4A  1903               	skipnz
  8778  0F4B  0AFB               	incf	___fttol@lval+2,f
  8779  0F4C  1903               	skipnz
  8780  0F4D  0AFC               	incf	___fttol@lval+3,f
  8781  0F4E                     l2892:	
  8782  0F4E  087C               	movf	___fttol@lval+3,w
  8783  0F4F  00F3               	movwf	?___fttol+3
  8784  0F50  087B               	movf	___fttol@lval+2,w
  8785  0F51  00F2               	movwf	?___fttol+2
  8786  0F52  087A               	movf	___fttol@lval+1,w
  8787  0F53  00F1               	movwf	?___fttol+1
  8788  0F54  0879               	movf	___fttol@lval,w
  8789  0F55  00F0               	movwf	?___fttol
  8790  0F56  0008               	return
  8791  0F57                     __end_of___fttol:	
  8792                           
  8793                           	psect	text19
  8794  0A66                     __ptext19:	
  8795 ;; *************** function ___ftsub *****************
  8796 ;; Defined at:
  8797 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  f2              3   29[BANK0 ] float 
  8800 ;;  f1              3   32[BANK0 ] float 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  3   29[BANK0 ] float 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0, pclath, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8812 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;Total ram usage:        6 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    2
  8819 ;; This function calls:
  8820 ;;		___ftadd
  8821 ;; This function is called by:
  8822 ;;		_main
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           
  8827                           ;psect for function ___ftsub
  8828  0A66                     ___ftsub:	
  8829                           
  8830                           ;incstack = 0
  8831                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8832  0A66  0020               	movlb	0	; select bank0
  8833  0A67  083F               	movf	___ftsub@f2+2,w
  8834  0A68  043E               	iorwf	___ftsub@f2+1,w
  8835  0A69  043D               	iorwf	___ftsub@f2,w
  8836  0A6A  1903               	skipnz
  8837  0A6B  2A6E               	goto	l2850
  8838  0A6C  3080               	movlw	128
  8839  0A6D  06BF               	xorwf	___ftsub@f2+2,f
  8840  0A6E                     l2850:	
  8841  0A6E  0840               	movf	___ftsub@f1,w
  8842  0A6F  00B0               	movwf	___ftadd@f1
  8843  0A70  0841               	movf	___ftsub@f1+1,w
  8844  0A71  00B1               	movwf	___ftadd@f1+1
  8845  0A72  0842               	movf	___ftsub@f1+2,w
  8846  0A73  00B2               	movwf	___ftadd@f1+2
  8847  0A74  083D               	movf	___ftsub@f2,w
  8848  0A75  00B3               	movwf	___ftadd@f2
  8849  0A76  083E               	movf	___ftsub@f2+1,w
  8850  0A77  00B4               	movwf	___ftadd@f2+1
  8851  0A78  083F               	movf	___ftsub@f2+2,w
  8852  0A79  00B5               	movwf	___ftadd@f2+2
  8853  0A7A  3183  2345         	fcall	___ftadd
  8854  0A7C  0020               	movlb	0	; select bank0
  8855  0A7D  0830               	movf	?___ftadd,w
  8856  0A7E  00BD               	movwf	?___ftsub
  8857  0A7F  0831               	movf	?___ftadd+1,w
  8858  0A80  00BE               	movwf	?___ftsub+1
  8859  0A81  0832               	movf	?___ftadd+2,w
  8860  0A82  00BF               	movwf	?___ftsub+2
  8861  0A83  0008               	return
  8862  0A84                     __end_of___ftsub:	
  8863                           
  8864                           	psect	text20
  8865  0345                     __ptext20:	
  8866 ;; *************** function ___ftadd *****************
  8867 ;; Defined at:
  8868 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  f1              3   16[BANK0 ] float 
  8871 ;;  f2              3   19[BANK0 ] float 
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;  exp1            1   28[BANK0 ] unsigned char 
  8874 ;;  exp2            1   27[BANK0 ] unsigned char 
  8875 ;;  sign            1   26[BANK0 ] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  3   16[BANK0 ] float 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;Total ram usage:       13 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    1
  8892 ;; This function calls:
  8893 ;;		___ftpack
  8894 ;; This function is called by:
  8895 ;;		_main
  8896 ;;		___ftsub
  8897 ;;		_log
  8898 ;;		_eval_poly
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           
  8903                           ;psect for function ___ftadd
  8904  0345                     ___ftadd:	
  8905                           
  8906                           ;incstack = 0
  8907                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8908  0345  0020               	movlb	0	; select bank0
  8909  0346  0830               	movf	___ftadd@f1,w
  8910  0347  00B6               	movwf	??___ftadd
  8911  0348  0831               	movf	___ftadd@f1+1,w
  8912  0349  00B7               	movwf	??___ftadd+1
  8913  034A  0832               	movf	___ftadd@f1+2,w
  8914  034B  00B8               	movwf	??___ftadd+2
  8915  034C  1003               	clrc
  8916  034D  0D37               	rlf	??___ftadd+1,w
  8917  034E  0D38               	rlf	??___ftadd+2,w
  8918  034F  00B9               	movwf	??___ftadd+3
  8919  0350  0839               	movf	??___ftadd+3,w
  8920  0351  00BC               	movwf	___ftadd@exp1
  8921  0352  0833               	movf	___ftadd@f2,w
  8922  0353  00B6               	movwf	??___ftadd
  8923  0354  0834               	movf	___ftadd@f2+1,w
  8924  0355  00B7               	movwf	??___ftadd+1
  8925  0356  0835               	movf	___ftadd@f2+2,w
  8926  0357  00B8               	movwf	??___ftadd+2
  8927  0358  1003               	clrc
  8928  0359  0D37               	rlf	??___ftadd+1,w
  8929  035A  0D38               	rlf	??___ftadd+2,w
  8930  035B  00B9               	movwf	??___ftadd+3
  8931  035C  0839               	movf	??___ftadd+3,w
  8932  035D  00BB               	movwf	___ftadd@exp2
  8933  035E  083C               	movf	___ftadd@exp1,w
  8934  035F  1903               	btfsc	3,2
  8935  0360  2B6D               	goto	l2240
  8936  0361  083B               	movf	___ftadd@exp2,w
  8937  0362  023C               	subwf	___ftadd@exp1,w
  8938  0363  1803               	skipnc
  8939  0364  2B74               	goto	l2244
  8940  0365  033C               	decf	___ftadd@exp1,w
  8941  0366  3AFF               	xorlw	255
  8942  0367  073B               	addwf	___ftadd@exp2,w
  8943  0368  00B6               	movwf	??___ftadd
  8944  0369  3019               	movlw	25
  8945  036A  0236               	subwf	??___ftadd,w
  8946  036B  1C03               	skipc
  8947  036C  2B74               	goto	l2244
  8948  036D                     l2240:	
  8949  036D  0833               	movf	___ftadd@f2,w
  8950  036E  00B0               	movwf	?___ftadd
  8951  036F  0834               	movf	___ftadd@f2+1,w
  8952  0370  00B1               	movwf	?___ftadd+1
  8953  0371  0835               	movf	___ftadd@f2+2,w
  8954  0372  00B2               	movwf	?___ftadd+2
  8955  0373  0008               	return
  8956  0374                     l2244:	
  8957  0374  083B               	movf	___ftadd@exp2,w
  8958  0375  1903               	btfsc	3,2
  8959  0376  0008               	return
  8960  0377  083C               	movf	___ftadd@exp1,w
  8961  0378  023B               	subwf	___ftadd@exp2,w
  8962  0379  1803               	skipnc
  8963  037A  2B83               	goto	l2250
  8964  037B  033B               	decf	___ftadd@exp2,w
  8965  037C  3AFF               	xorlw	255
  8966  037D  073C               	addwf	___ftadd@exp1,w
  8967  037E  00B6               	movwf	??___ftadd
  8968  037F  3019               	movlw	25
  8969  0380  0236               	subwf	??___ftadd,w
  8970  0381  1803               	btfsc	3,0
  8971  0382  0008               	return
  8972  0383                     l2250:	
  8973  0383  3006               	movlw	6
  8974  0384  00B6               	movwf	??___ftadd
  8975  0385  0836               	movf	??___ftadd,w
  8976  0386  00BA               	movwf	___ftadd@sign
  8977  0387  1BB2               	btfsc	___ftadd@f1+2,7
  8978  0388  17BA               	bsf	___ftadd@sign,7
  8979  0389  1BB5               	btfsc	___ftadd@f2+2,7
  8980  038A  173A               	bsf	___ftadd@sign,6
  8981  038B  17B1               	bsf	___ftadd@f1+1,7
  8982  038C  30FF               	movlw	255
  8983  038D  05B0               	andwf	___ftadd@f1,f
  8984  038E  30FF               	movlw	255
  8985  038F  05B1               	andwf	___ftadd@f1+1,f
  8986  0390  3000               	movlw	0
  8987  0391  05B2               	andwf	___ftadd@f1+2,f
  8988  0392  17B4               	bsf	___ftadd@f2+1,7
  8989  0393  30FF               	movlw	255
  8990  0394  05B3               	andwf	___ftadd@f2,f
  8991  0395  30FF               	movlw	255
  8992  0396  05B4               	andwf	___ftadd@f2+1,f
  8993  0397  3000               	movlw	0
  8994  0398  05B5               	andwf	___ftadd@f2+2,f
  8995  0399  083B               	movf	___ftadd@exp2,w
  8996  039A  023C               	subwf	___ftadd@exp1,w
  8997  039B  1803               	skipnc
  8998  039C  2BBF               	goto	l2272
  8999  039D                     l2262:	
  9000  039D  3001               	movlw	1
  9001  039E                     u2315:	
  9002  039E  35B3               	lslf	___ftadd@f2,f
  9003  039F  0DB4               	rlf	___ftadd@f2+1,f
  9004  03A0  0DB5               	rlf	___ftadd@f2+2,f
  9005  03A1  0B89               	decfsz	9,f
  9006  03A2  2B9E               	goto	u2315
  9007  03A3  3001               	movlw	1
  9008  03A4  02BB               	subwf	___ftadd@exp2,f
  9009  03A5  083B               	movf	___ftadd@exp2,w
  9010  03A6  063C               	xorwf	___ftadd@exp1,w
  9011  03A7  1903               	skipnz
  9012  03A8  2BBA               	goto	l2270
  9013  03A9  3001               	movlw	1
  9014  03AA  02BA               	subwf	___ftadd@sign,f
  9015  03AB  083A               	movf	___ftadd@sign,w
  9016  03AC  3907               	andlw	7
  9017  03AD  1903               	btfsc	3,2
  9018  03AE  2BBA               	goto	l2270
  9019  03AF  2B9D               	goto	l2262
  9020  03B0                     l2268:	
  9021  03B0  3001               	movlw	1
  9022  03B1                     u2345:	
  9023  03B1  36B2               	lsrf	___ftadd@f1+2,f
  9024  03B2  0CB1               	rrf	___ftadd@f1+1,f
  9025  03B3  0CB0               	rrf	___ftadd@f1,f
  9026  03B4  0B89               	decfsz	9,f
  9027  03B5  2BB1               	goto	u2345
  9028  03B6  3001               	movlw	1
  9029  03B7  00B6               	movwf	??___ftadd
  9030  03B8  0836               	movf	??___ftadd,w
  9031  03B9  07BC               	addwf	___ftadd@exp1,f
  9032  03BA                     l2270:	
  9033  03BA  083C               	movf	___ftadd@exp1,w
  9034  03BB  063B               	xorwf	___ftadd@exp2,w
  9035  03BC  1903               	btfsc	3,2
  9036  03BD  2BE4               	goto	l646
  9037  03BE  2BB0               	goto	l2268
  9038  03BF                     l2272:	
  9039  03BF  083C               	movf	___ftadd@exp1,w
  9040  03C0  023B               	subwf	___ftadd@exp2,w
  9041  03C1  1803               	skipnc
  9042  03C2  2BE4               	goto	l646
  9043  03C3                     l2274:	
  9044  03C3  3001               	movlw	1
  9045  03C4                     u2375:	
  9046  03C4  35B0               	lslf	___ftadd@f1,f
  9047  03C5  0DB1               	rlf	___ftadd@f1+1,f
  9048  03C6  0DB2               	rlf	___ftadd@f1+2,f
  9049  03C7  0B89               	decfsz	9,f
  9050  03C8  2BC4               	goto	u2375
  9051  03C9  3001               	movlw	1
  9052  03CA  02BC               	subwf	___ftadd@exp1,f
  9053  03CB  083B               	movf	___ftadd@exp2,w
  9054  03CC  063C               	xorwf	___ftadd@exp1,w
  9055  03CD  1903               	skipnz
  9056  03CE  2BE0               	goto	l2282
  9057  03CF  3001               	movlw	1
  9058  03D0  02BA               	subwf	___ftadd@sign,f
  9059  03D1  083A               	movf	___ftadd@sign,w
  9060  03D2  3907               	andlw	7
  9061  03D3  1903               	btfsc	3,2
  9062  03D4  2BE0               	goto	l2282
  9063  03D5  2BC3               	goto	l2274
  9064  03D6                     l2280:	
  9065  03D6  3001               	movlw	1
  9066  03D7                     u2405:	
  9067  03D7  36B5               	lsrf	___ftadd@f2+2,f
  9068  03D8  0CB4               	rrf	___ftadd@f2+1,f
  9069  03D9  0CB3               	rrf	___ftadd@f2,f
  9070  03DA  0B89               	decfsz	9,f
  9071  03DB  2BD7               	goto	u2405
  9072  03DC  3001               	movlw	1
  9073  03DD  00B6               	movwf	??___ftadd
  9074  03DE  0836               	movf	??___ftadd,w
  9075  03DF  07BB               	addwf	___ftadd@exp2,f
  9076  03E0                     l2282:	
  9077  03E0  083C               	movf	___ftadd@exp1,w
  9078  03E1  063B               	xorwf	___ftadd@exp2,w
  9079  03E2  1D03               	skipz
  9080  03E3  2BD6               	goto	l2280
  9081  03E4                     l646:	
  9082  03E4  1FBA               	btfss	___ftadd@sign,7
  9083  03E5  2BF6               	goto	l2286
  9084  03E6  30FF               	movlw	255
  9085  03E7  06B0               	xorwf	___ftadd@f1,f
  9086  03E8  30FF               	movlw	255
  9087  03E9  06B1               	xorwf	___ftadd@f1+1,f
  9088  03EA  30FF               	movlw	255
  9089  03EB  06B2               	xorwf	___ftadd@f1+2,f
  9090  03EC  3001               	movlw	1
  9091  03ED  07B0               	addwf	___ftadd@f1,f
  9092  03EE  3000               	movlw	0
  9093  03EF  1803               	skipnc
  9094  03F0  3001               	movlw	1
  9095  03F1  07B1               	addwf	___ftadd@f1+1,f
  9096  03F2  3000               	movlw	0
  9097  03F3  1803               	skipnc
  9098  03F4  3001               	movlw	1
  9099  03F5  07B2               	addwf	___ftadd@f1+2,f
  9100  03F6                     l2286:	
  9101  03F6  1F3A               	btfss	___ftadd@sign,6
  9102  03F7  2C08               	goto	l2290
  9103  03F8  30FF               	movlw	255
  9104  03F9  06B3               	xorwf	___ftadd@f2,f
  9105  03FA  30FF               	movlw	255
  9106  03FB  06B4               	xorwf	___ftadd@f2+1,f
  9107  03FC  30FF               	movlw	255
  9108  03FD  06B5               	xorwf	___ftadd@f2+2,f
  9109  03FE  3001               	movlw	1
  9110  03FF  07B3               	addwf	___ftadd@f2,f
  9111  0400  3000               	movlw	0
  9112  0401  1803               	skipnc
  9113  0402  3001               	movlw	1
  9114  0403  07B4               	addwf	___ftadd@f2+1,f
  9115  0404  3000               	movlw	0
  9116  0405  1803               	skipnc
  9117  0406  3001               	movlw	1
  9118  0407  07B5               	addwf	___ftadd@f2+2,f
  9119  0408                     l2290:	
  9120  0408  01BA               	clrf	___ftadd@sign
  9121  0409  0830               	movf	___ftadd@f1,w
  9122  040A  07B3               	addwf	___ftadd@f2,f
  9123  040B  0831               	movf	___ftadd@f1+1,w
  9124  040C  3DB4               	addwfc	___ftadd@f2+1,f
  9125  040D  0832               	movf	___ftadd@f1+2,w
  9126  040E  3DB5               	addwfc	___ftadd@f2+2,f
  9127  040F  1FB5               	btfss	___ftadd@f2+2,7
  9128  0410  2C23               	goto	l2300
  9129  0411  30FF               	movlw	255
  9130  0412  06B3               	xorwf	___ftadd@f2,f
  9131  0413  30FF               	movlw	255
  9132  0414  06B4               	xorwf	___ftadd@f2+1,f
  9133  0415  30FF               	movlw	255
  9134  0416  06B5               	xorwf	___ftadd@f2+2,f
  9135  0417  3001               	movlw	1
  9136  0418  07B3               	addwf	___ftadd@f2,f
  9137  0419  3000               	movlw	0
  9138  041A  1803               	skipnc
  9139  041B  3001               	movlw	1
  9140  041C  07B4               	addwf	___ftadd@f2+1,f
  9141  041D  3000               	movlw	0
  9142  041E  1803               	skipnc
  9143  041F  3001               	movlw	1
  9144  0420  07B5               	addwf	___ftadd@f2+2,f
  9145  0421  01BA               	clrf	___ftadd@sign
  9146  0422  0ABA               	incf	___ftadd@sign,f
  9147  0423                     l2300:	
  9148  0423  0833               	movf	___ftadd@f2,w
  9149  0424  00F0               	movwf	___ftpack@arg
  9150  0425  0834               	movf	___ftadd@f2+1,w
  9151  0426  00F1               	movwf	___ftpack@arg+1
  9152  0427  0835               	movf	___ftadd@f2+2,w
  9153  0428  00F2               	movwf	___ftpack@arg+2
  9154  0429  083C               	movf	___ftadd@exp1,w
  9155  042A  00B6               	movwf	??___ftadd
  9156  042B  0836               	movf	??___ftadd,w
  9157  042C  00F3               	movwf	___ftpack@exp
  9158  042D  083A               	movf	___ftadd@sign,w
  9159  042E  00B7               	movwf	??___ftadd+1
  9160  042F  0837               	movf	??___ftadd+1,w
  9161  0430  00F4               	movwf	___ftpack@sign
  9162  0431  318C  24EF         	fcall	___ftpack
  9163  0433  0870               	movf	?___ftpack,w
  9164  0434  0020               	movlb	0	; select bank0
  9165  0435  00B0               	movwf	?___ftadd
  9166  0436  0871               	movf	?___ftpack+1,w
  9167  0437  00B1               	movwf	?___ftadd+1
  9168  0438  0872               	movf	?___ftpack+2,w
  9169  0439  00B2               	movwf	?___ftadd+2
  9170  043A  0008               	return
  9171  043B                     __end_of___ftadd:	
  9172                           
  9173                           	psect	text21
  9174  0945                     __ptext21:	
  9175 ;; *************** function ___ftneg *****************
  9176 ;; Defined at:
  9177 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  f1              3    0[COMMON] float 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  3    0[COMMON] float 
  9184 ;; Registers used:
  9185 ;;		wreg
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;Total ram usage:        3 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_main
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function ___ftneg
  9206  0945                     ___ftneg:	
  9207                           
  9208                           ;incstack = 0
  9209                           ; Regs used in ___ftneg: [wreg]
  9210  0945  0872               	movf	___ftneg@f1+2,w
  9211  0946  0471               	iorwf	___ftneg@f1+1,w
  9212  0947  0470               	iorwf	___ftneg@f1,w
  9213  0948  1903               	skipnz
  9214  0949  0008               	return
  9215  094A  3080               	movlw	128
  9216  094B  06F2               	xorwf	___ftneg@f1+2,f
  9217  094C  0008               	return
  9218  094D                     __end_of___ftneg:	
  9219                           
  9220                           	psect	text22
  9221  0F57                     __ptext22:	
  9222 ;; *************** function ___ftdiv *****************
  9223 ;; Defined at:
  9224 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  f2              3    0[BANK0 ] float 
  9227 ;;  f1              3    3[BANK0 ] float 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  f3              3   11[BANK0 ] float 
  9230 ;;  sign            1   15[BANK0 ] unsigned char 
  9231 ;;  exp             1   14[BANK0 ] unsigned char 
  9232 ;;  cntr            1   10[BANK0 ] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  3    0[BANK0 ] float 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2, status,0, pclath, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9242 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;Total ram usage:       16 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    1
  9249 ;; This function calls:
  9250 ;;		___ftpack
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function ___ftdiv
  9258  0F57                     ___ftdiv:	
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9262  0F57  0020               	movlb	0	; select bank0
  9263  0F58  0823               	movf	___ftdiv@f1,w
  9264  0F59  00A6               	movwf	??___ftdiv
  9265  0F5A  0824               	movf	___ftdiv@f1+1,w
  9266  0F5B  00A7               	movwf	??___ftdiv+1
  9267  0F5C  0825               	movf	___ftdiv@f1+2,w
  9268  0F5D  00A8               	movwf	??___ftdiv+2
  9269  0F5E  1003               	clrc
  9270  0F5F  0D27               	rlf	??___ftdiv+1,w
  9271  0F60  0D28               	rlf	??___ftdiv+2,w
  9272  0F61  00A9               	movwf	??___ftdiv+3
  9273  0F62  0829               	movf	??___ftdiv+3,w
  9274  0F63  00AE               	movwf	___ftdiv@exp
  9275  0F64  082E               	movf	___ftdiv@exp,w
  9276  0F65  1D03               	btfss	3,2
  9277  0F66  2F6E               	goto	l2802
  9278  0F67  3000               	movlw	0
  9279  0F68  00A0               	movwf	?___ftdiv
  9280  0F69  3000               	movlw	0
  9281  0F6A  00A1               	movwf	?___ftdiv+1
  9282  0F6B  3000               	movlw	0
  9283  0F6C  00A2               	movwf	?___ftdiv+2
  9284  0F6D  0008               	return
  9285  0F6E                     l2802:	
  9286  0F6E  0820               	movf	___ftdiv@f2,w
  9287  0F6F  00A6               	movwf	??___ftdiv
  9288  0F70  0821               	movf	___ftdiv@f2+1,w
  9289  0F71  00A7               	movwf	??___ftdiv+1
  9290  0F72  0822               	movf	___ftdiv@f2+2,w
  9291  0F73  00A8               	movwf	??___ftdiv+2
  9292  0F74  1003               	clrc
  9293  0F75  0D27               	rlf	??___ftdiv+1,w
  9294  0F76  0D28               	rlf	??___ftdiv+2,w
  9295  0F77  00A9               	movwf	??___ftdiv+3
  9296  0F78  0829               	movf	??___ftdiv+3,w
  9297  0F79  00AF               	movwf	___ftdiv@sign
  9298  0F7A  082F               	movf	___ftdiv@sign,w
  9299  0F7B  1D03               	btfss	3,2
  9300  0F7C  2F84               	goto	l2808
  9301  0F7D  3000               	movlw	0
  9302  0F7E  00A0               	movwf	?___ftdiv
  9303  0F7F  3000               	movlw	0
  9304  0F80  00A1               	movwf	?___ftdiv+1
  9305  0F81  3000               	movlw	0
  9306  0F82  00A2               	movwf	?___ftdiv+2
  9307  0F83  0008               	return
  9308  0F84                     l2808:	
  9309  0F84  3000               	movlw	0
  9310  0F85  00AB               	movwf	___ftdiv@f3
  9311  0F86  3000               	movlw	0
  9312  0F87  00AC               	movwf	___ftdiv@f3+1
  9313  0F88  3000               	movlw	0
  9314  0F89  00AD               	movwf	___ftdiv@f3+2
  9315  0F8A  3089               	movlw	137
  9316  0F8B  072F               	addwf	___ftdiv@sign,w
  9317  0F8C  00A6               	movwf	??___ftdiv
  9318  0F8D  0826               	movf	??___ftdiv,w
  9319  0F8E  02AE               	subwf	___ftdiv@exp,f
  9320  0F8F  0823               	movf	___ftdiv@f1,w
  9321  0F90  00A6               	movwf	??___ftdiv
  9322  0F91  0824               	movf	___ftdiv@f1+1,w
  9323  0F92  00A7               	movwf	??___ftdiv+1
  9324  0F93  0825               	movf	___ftdiv@f1+2,w
  9325  0F94  00A8               	movwf	??___ftdiv+2
  9326  0F95  3010               	movlw	16
  9327  0F96                     u2965:	
  9328  0F96  36A8               	lsrf	??___ftdiv+2,f
  9329  0F97  0CA7               	rrf	??___ftdiv+1,f
  9330  0F98  0CA6               	rrf	??___ftdiv,f
  9331  0F99  0B89               	decfsz	9,f
  9332  0F9A  2F96               	goto	u2965
  9333  0F9B  0826               	movf	??___ftdiv,w
  9334  0F9C  00A9               	movwf	??___ftdiv+3
  9335  0F9D  0829               	movf	??___ftdiv+3,w
  9336  0F9E  00AF               	movwf	___ftdiv@sign
  9337  0F9F  0820               	movf	___ftdiv@f2,w
  9338  0FA0  00A6               	movwf	??___ftdiv
  9339  0FA1  0821               	movf	___ftdiv@f2+1,w
  9340  0FA2  00A7               	movwf	??___ftdiv+1
  9341  0FA3  0822               	movf	___ftdiv@f2+2,w
  9342  0FA4  00A8               	movwf	??___ftdiv+2
  9343  0FA5  3010               	movlw	16
  9344  0FA6                     u2975:	
  9345  0FA6  36A8               	lsrf	??___ftdiv+2,f
  9346  0FA7  0CA7               	rrf	??___ftdiv+1,f
  9347  0FA8  0CA6               	rrf	??___ftdiv,f
  9348  0FA9  0B89               	decfsz	9,f
  9349  0FAA  2FA6               	goto	u2975
  9350  0FAB  0826               	movf	??___ftdiv,w
  9351  0FAC  00A9               	movwf	??___ftdiv+3
  9352  0FAD  0829               	movf	??___ftdiv+3,w
  9353  0FAE  06AF               	xorwf	___ftdiv@sign,f
  9354  0FAF  3080               	movlw	128
  9355  0FB0  00A6               	movwf	??___ftdiv
  9356  0FB1  0826               	movf	??___ftdiv,w
  9357  0FB2  05AF               	andwf	___ftdiv@sign,f
  9358  0FB3  17A4               	bsf	___ftdiv@f1+1,7
  9359  0FB4  30FF               	movlw	255
  9360  0FB5  05A3               	andwf	___ftdiv@f1,f
  9361  0FB6  30FF               	movlw	255
  9362  0FB7  05A4               	andwf	___ftdiv@f1+1,f
  9363  0FB8  3000               	movlw	0
  9364  0FB9  05A5               	andwf	___ftdiv@f1+2,f
  9365  0FBA  17A1               	bsf	___ftdiv@f2+1,7
  9366  0FBB  30FF               	movlw	255
  9367  0FBC  05A0               	andwf	___ftdiv@f2,f
  9368  0FBD  30FF               	movlw	255
  9369  0FBE  05A1               	andwf	___ftdiv@f2+1,f
  9370  0FBF  3000               	movlw	0
  9371  0FC0  05A2               	andwf	___ftdiv@f2+2,f
  9372  0FC1  3018               	movlw	24
  9373  0FC2  00A6               	movwf	??___ftdiv
  9374  0FC3  0826               	movf	??___ftdiv,w
  9375  0FC4  00AA               	movwf	___ftdiv@cntr
  9376  0FC5                     l2822:	
  9377  0FC5  3001               	movlw	1
  9378  0FC6                     u2985:	
  9379  0FC6  35AB               	lslf	___ftdiv@f3,f
  9380  0FC7  0DAC               	rlf	___ftdiv@f3+1,f
  9381  0FC8  0DAD               	rlf	___ftdiv@f3+2,f
  9382  0FC9  0B89               	decfsz	9,f
  9383  0FCA  2FC6               	goto	u2985
  9384  0FCB  0822               	movf	___ftdiv@f2+2,w
  9385  0FCC  0225               	subwf	___ftdiv@f1+2,w
  9386  0FCD  1D03               	skipz
  9387  0FCE  2FD5               	goto	u2995
  9388  0FCF  0821               	movf	___ftdiv@f2+1,w
  9389  0FD0  0224               	subwf	___ftdiv@f1+1,w
  9390  0FD1  1D03               	skipz
  9391  0FD2  2FD5               	goto	u2995
  9392  0FD3  0820               	movf	___ftdiv@f2,w
  9393  0FD4  0223               	subwf	___ftdiv@f1,w
  9394  0FD5                     u2995:	
  9395  0FD5  1C03               	skipc
  9396  0FD6  2FDE               	goto	l2830
  9397  0FD7  0820               	movf	___ftdiv@f2,w
  9398  0FD8  02A3               	subwf	___ftdiv@f1,f
  9399  0FD9  0821               	movf	___ftdiv@f2+1,w
  9400  0FDA  3BA4               	subwfb	___ftdiv@f1+1,f
  9401  0FDB  0822               	movf	___ftdiv@f2+2,w
  9402  0FDC  3BA5               	subwfb	___ftdiv@f1+2,f
  9403  0FDD  142B               	bsf	___ftdiv@f3,0
  9404  0FDE                     l2830:	
  9405  0FDE  3001               	movlw	1
  9406  0FDF                     u3005:	
  9407  0FDF  35A3               	lslf	___ftdiv@f1,f
  9408  0FE0  0DA4               	rlf	___ftdiv@f1+1,f
  9409  0FE1  0DA5               	rlf	___ftdiv@f1+2,f
  9410  0FE2  0B89               	decfsz	9,f
  9411  0FE3  2FDF               	goto	u3005
  9412  0FE4  3001               	movlw	1
  9413  0FE5  02AA               	subwf	___ftdiv@cntr,f
  9414  0FE6  1D03               	btfss	3,2
  9415  0FE7  2FC5               	goto	l2822
  9416  0FE8  082B               	movf	___ftdiv@f3,w
  9417  0FE9  00F0               	movwf	___ftpack@arg
  9418  0FEA  082C               	movf	___ftdiv@f3+1,w
  9419  0FEB  00F1               	movwf	___ftpack@arg+1
  9420  0FEC  082D               	movf	___ftdiv@f3+2,w
  9421  0FED  00F2               	movwf	___ftpack@arg+2
  9422  0FEE  082E               	movf	___ftdiv@exp,w
  9423  0FEF  00A6               	movwf	??___ftdiv
  9424  0FF0  0826               	movf	??___ftdiv,w
  9425  0FF1  00F3               	movwf	___ftpack@exp
  9426  0FF2  082F               	movf	___ftdiv@sign,w
  9427  0FF3  00A7               	movwf	??___ftdiv+1
  9428  0FF4  0827               	movf	??___ftdiv+1,w
  9429  0FF5  00F4               	movwf	___ftpack@sign
  9430  0FF6  318C  24EF         	fcall	___ftpack
  9431  0FF8  0870               	movf	?___ftpack,w
  9432  0FF9  0020               	movlb	0	; select bank0
  9433  0FFA  00A0               	movwf	?___ftdiv
  9434  0FFB  0871               	movf	?___ftpack+1,w
  9435  0FFC  00A1               	movwf	?___ftdiv+1
  9436  0FFD  0872               	movf	?___ftpack+2,w
  9437  0FFE  00A2               	movwf	?___ftdiv+2
  9438  0FFF  0008               	return
  9439  1000                     __end_of___ftdiv:	
  9440                           
  9441                           	psect	text23
  9442  0CEF                     __ptext23:	
  9443 ;; *************** function ___ftpack *****************
  9444 ;; Defined at:
  9445 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  arg             3    0[COMMON] unsigned um
  9448 ;;  exp             1    3[COMMON] unsigned char 
  9449 ;;  sign            1    4[COMMON] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  3    0[COMMON] float 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9461 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;Total ram usage:        8 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; This function calls:
  9468 ;;		Nothing
  9469 ;; This function is called by:
  9470 ;;		___awtoft
  9471 ;;		___ftadd
  9472 ;;		___ftdiv
  9473 ;;		___ftmul
  9474 ;;		___lbtoft
  9475 ;;		___lwtoft
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function ___ftpack
  9481  0CEF                     ___ftpack:	
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9485  0CEF  0873               	movf	___ftpack@exp,w
  9486  0CF0  1903               	btfsc	3,2
  9487  0CF1  2CF7               	goto	l2030
  9488  0CF2  0872               	movf	___ftpack@arg+2,w
  9489  0CF3  0471               	iorwf	___ftpack@arg+1,w
  9490  0CF4  0470               	iorwf	___ftpack@arg,w
  9491  0CF5  1D03               	skipz
  9492  0CF6  2D08               	goto	l2036
  9493  0CF7                     l2030:	
  9494  0CF7  3000               	movlw	0
  9495  0CF8  00F0               	movwf	?___ftpack
  9496  0CF9  3000               	movlw	0
  9497  0CFA  00F1               	movwf	?___ftpack+1
  9498  0CFB  3000               	movlw	0
  9499  0CFC  00F2               	movwf	?___ftpack+2
  9500  0CFD  0008               	return
  9501  0CFE                     l2034:	
  9502  0CFE  3001               	movlw	1
  9503  0CFF  00F5               	movwf	??___ftpack
  9504  0D00  0875               	movf	??___ftpack,w
  9505  0D01  07F3               	addwf	___ftpack@exp,f
  9506  0D02  3001               	movlw	1
  9507  0D03                     u1755:	
  9508  0D03  36F2               	lsrf	___ftpack@arg+2,f
  9509  0D04  0CF1               	rrf	___ftpack@arg+1,f
  9510  0D05  0CF0               	rrf	___ftpack@arg,f
  9511  0D06  0B89               	decfsz	9,f
  9512  0D07  2D03               	goto	u1755
  9513  0D08                     l2036:	
  9514  0D08  30FE               	movlw	254
  9515  0D09  0572               	andwf	___ftpack@arg+2,w
  9516  0D0A  1903               	btfsc	3,2
  9517  0D0B  2D21               	goto	l615
  9518  0D0C  2CFE               	goto	l2034
  9519  0D0D                     l2038:	
  9520  0D0D  3001               	movlw	1
  9521  0D0E  00F5               	movwf	??___ftpack
  9522  0D0F  0875               	movf	??___ftpack,w
  9523  0D10  07F3               	addwf	___ftpack@exp,f
  9524  0D11  3001               	movlw	1
  9525  0D12  07F0               	addwf	___ftpack@arg,f
  9526  0D13  3000               	movlw	0
  9527  0D14  1803               	skipnc
  9528  0D15  3001               	movlw	1
  9529  0D16  07F1               	addwf	___ftpack@arg+1,f
  9530  0D17  3000               	movlw	0
  9531  0D18  1803               	skipnc
  9532  0D19  3001               	movlw	1
  9533  0D1A  07F2               	addwf	___ftpack@arg+2,f
  9534  0D1B  3001               	movlw	1
  9535  0D1C                     u1775:	
  9536  0D1C  36F2               	lsrf	___ftpack@arg+2,f
  9537  0D1D  0CF1               	rrf	___ftpack@arg+1,f
  9538  0D1E  0CF0               	rrf	___ftpack@arg,f
  9539  0D1F  0B89               	decfsz	9,f
  9540  0D20  2D1C               	goto	u1775
  9541  0D21                     l615:	
  9542  0D21  30FF               	movlw	255
  9543  0D22  0572               	andwf	___ftpack@arg+2,w
  9544  0D23  1903               	btfsc	3,2
  9545  0D24  2D2E               	goto	l2046
  9546  0D25  2D0D               	goto	l2038
  9547  0D26                     l2044:	
  9548  0D26  3001               	movlw	1
  9549  0D27  02F3               	subwf	___ftpack@exp,f
  9550  0D28  3001               	movlw	1
  9551  0D29                     u1795:	
  9552  0D29  35F0               	lslf	___ftpack@arg,f
  9553  0D2A  0DF1               	rlf	___ftpack@arg+1,f
  9554  0D2B  0DF2               	rlf	___ftpack@arg+2,f
  9555  0D2C  0B89               	decfsz	9,f
  9556  0D2D  2D29               	goto	u1795
  9557  0D2E                     l2046:	
  9558  0D2E  1BF1               	btfsc	___ftpack@arg+1,7
  9559  0D2F  2D34               	goto	l622
  9560  0D30  3002               	movlw	2
  9561  0D31  0273               	subwf	___ftpack@exp,w
  9562  0D32  1803               	skipnc
  9563  0D33  2D26               	goto	l2044
  9564  0D34                     l622:	
  9565  0D34  1873               	btfsc	___ftpack@exp,0
  9566  0D35  2D3C               	goto	l623
  9567  0D36  30FF               	movlw	255
  9568  0D37  05F0               	andwf	___ftpack@arg,f
  9569  0D38  307F               	movlw	127
  9570  0D39  05F1               	andwf	___ftpack@arg+1,f
  9571  0D3A  30FF               	movlw	255
  9572  0D3B  05F2               	andwf	___ftpack@arg+2,f
  9573  0D3C                     l623:	
  9574  0D3C  1003               	clrc
  9575  0D3D  0CF3               	rrf	___ftpack@exp,f
  9576  0D3E  0873               	movf	___ftpack@exp,w
  9577  0D3F  00F5               	movwf	??___ftpack
  9578  0D40  01F6               	clrf	??___ftpack+1
  9579  0D41  01F7               	clrf	??___ftpack+2
  9580  0D42  3010               	movlw	16
  9581  0D43                     u1835:	
  9582  0D43  35F5               	lslf	??___ftpack,f
  9583  0D44  0DF6               	rlf	??___ftpack+1,f
  9584  0D45  0DF7               	rlf	??___ftpack+2,f
  9585  0D46  0B89               	decfsz	9,f
  9586  0D47  2D43               	goto	u1835
  9587  0D48  0875               	movf	??___ftpack,w
  9588  0D49  04F0               	iorwf	___ftpack@arg,f
  9589  0D4A  0876               	movf	??___ftpack+1,w
  9590  0D4B  04F1               	iorwf	___ftpack@arg+1,f
  9591  0D4C  0877               	movf	??___ftpack+2,w
  9592  0D4D  04F2               	iorwf	___ftpack@arg+2,f
  9593  0D4E  0874               	movf	___ftpack@sign,w
  9594  0D4F  1903               	btfsc	3,2
  9595  0D50  0008               	return
  9596  0D51  17F2               	bsf	___ftpack@arg+2,7
  9597  0D52  0008               	return
  9598  0D53                     __end_of___ftpack:	
  9599                           
  9600                           	psect	text24
  9601  0E4F                     __ptext24:	
  9602 ;; *************** function ___aldiv *****************
  9603 ;; Defined at:
  9604 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  divisor         4    0[COMMON] long 
  9607 ;;  dividend        4    4[COMMON] long 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  quotient        4    2[BANK0 ] long 
  9610 ;;  sign            1    1[BANK0 ] unsigned char 
  9611 ;;  counter         1    0[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  4    0[COMMON] long 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9621 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;Total ram usage:       15 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_main
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           
  9635                           ;psect for function ___aldiv
  9636  0E4F                     ___aldiv:	
  9637                           
  9638                           ;incstack = 0
  9639                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9640  0E4F  0020               	movlb	0	; select bank0
  9641  0E50  01A1               	clrf	___aldiv@sign
  9642  0E51  1FF3               	btfss	___aldiv@divisor+3,7
  9643  0E52  2E60               	goto	l509
  9644  0E53  09F0               	comf	___aldiv@divisor,f
  9645  0E54  09F1               	comf	___aldiv@divisor+1,f
  9646  0E55  09F2               	comf	___aldiv@divisor+2,f
  9647  0E56  09F3               	comf	___aldiv@divisor+3,f
  9648  0E57  0AF0               	incf	___aldiv@divisor,f
  9649  0E58  1903               	skipnz
  9650  0E59  0AF1               	incf	___aldiv@divisor+1,f
  9651  0E5A  1903               	skipnz
  9652  0E5B  0AF2               	incf	___aldiv@divisor+2,f
  9653  0E5C  1903               	skipnz
  9654  0E5D  0AF3               	incf	___aldiv@divisor+3,f
  9655  0E5E  01A1               	clrf	___aldiv@sign
  9656  0E5F  0AA1               	incf	___aldiv@sign,f
  9657  0E60                     l509:	
  9658  0E60  1FF7               	btfss	___aldiv@dividend+3,7
  9659  0E61  2E71               	goto	l2766
  9660  0E62  09F4               	comf	___aldiv@dividend,f
  9661  0E63  09F5               	comf	___aldiv@dividend+1,f
  9662  0E64  09F6               	comf	___aldiv@dividend+2,f
  9663  0E65  09F7               	comf	___aldiv@dividend+3,f
  9664  0E66  0AF4               	incf	___aldiv@dividend,f
  9665  0E67  1903               	skipnz
  9666  0E68  0AF5               	incf	___aldiv@dividend+1,f
  9667  0E69  1903               	skipnz
  9668  0E6A  0AF6               	incf	___aldiv@dividend+2,f
  9669  0E6B  1903               	skipnz
  9670  0E6C  0AF7               	incf	___aldiv@dividend+3,f
  9671  0E6D  3001               	movlw	1
  9672  0E6E  00F8               	movwf	??___aldiv
  9673  0E6F  0878               	movf	??___aldiv,w
  9674  0E70  06A1               	xorwf	___aldiv@sign,f
  9675  0E71                     l2766:	
  9676  0E71  3000               	movlw	0
  9677  0E72  00A5               	movwf	___aldiv@quotient+3
  9678  0E73  3000               	movlw	0
  9679  0E74  00A4               	movwf	___aldiv@quotient+2
  9680  0E75  3000               	movlw	0
  9681  0E76  00A3               	movwf	___aldiv@quotient+1
  9682  0E77  3000               	movlw	0
  9683  0E78  00A2               	movwf	___aldiv@quotient
  9684  0E79  0873               	movf	___aldiv@divisor+3,w
  9685  0E7A  0472               	iorwf	___aldiv@divisor+2,w
  9686  0E7B  0471               	iorwf	___aldiv@divisor+1,w
  9687  0E7C  0470               	iorwf	___aldiv@divisor,w
  9688  0E7D  1903               	skipnz
  9689  0E7E  2EBA               	goto	l2788
  9690  0E7F  01A0               	clrf	___aldiv@counter
  9691  0E80  0AA0               	incf	___aldiv@counter,f
  9692  0E81                     l2774:	
  9693  0E81  1BF3               	btfsc	___aldiv@divisor+3,7
  9694  0E82  2E8F               	goto	l2776
  9695  0E83  3001               	movlw	1
  9696  0E84                     u2875:	
  9697  0E84  35F0               	lslf	___aldiv@divisor,f
  9698  0E85  0DF1               	rlf	___aldiv@divisor+1,f
  9699  0E86  0DF2               	rlf	___aldiv@divisor+2,f
  9700  0E87  0DF3               	rlf	___aldiv@divisor+3,f
  9701  0E88  0B89               	decfsz	9,f
  9702  0E89  2E84               	goto	u2875
  9703  0E8A  3001               	movlw	1
  9704  0E8B  00F8               	movwf	??___aldiv
  9705  0E8C  0878               	movf	??___aldiv,w
  9706  0E8D  07A0               	addwf	___aldiv@counter,f
  9707  0E8E  2E81               	goto	l2774
  9708  0E8F                     l2776:	
  9709  0E8F  3001               	movlw	1
  9710  0E90                     u2895:	
  9711  0E90  35A2               	lslf	___aldiv@quotient,f
  9712  0E91  0DA3               	rlf	___aldiv@quotient+1,f
  9713  0E92  0DA4               	rlf	___aldiv@quotient+2,f
  9714  0E93  0DA5               	rlf	___aldiv@quotient+3,f
  9715  0E94  0B89               	decfsz	9,f
  9716  0E95  2E90               	goto	u2895
  9717  0E96  0873               	movf	___aldiv@divisor+3,w
  9718  0E97  0277               	subwf	___aldiv@dividend+3,w
  9719  0E98  1D03               	skipz
  9720  0E99  2EA4               	goto	u2905
  9721  0E9A  0872               	movf	___aldiv@divisor+2,w
  9722  0E9B  0276               	subwf	___aldiv@dividend+2,w
  9723  0E9C  1D03               	skipz
  9724  0E9D  2EA4               	goto	u2905
  9725  0E9E  0871               	movf	___aldiv@divisor+1,w
  9726  0E9F  0275               	subwf	___aldiv@dividend+1,w
  9727  0EA0  1D03               	skipz
  9728  0EA1  2EA4               	goto	u2905
  9729  0EA2  0870               	movf	___aldiv@divisor,w
  9730  0EA3  0274               	subwf	___aldiv@dividend,w
  9731  0EA4                     u2905:	
  9732  0EA4  1C03               	skipc
  9733  0EA5  2EAF               	goto	l2784
  9734  0EA6  0870               	movf	___aldiv@divisor,w
  9735  0EA7  02F4               	subwf	___aldiv@dividend,f
  9736  0EA8  0871               	movf	___aldiv@divisor+1,w
  9737  0EA9  3BF5               	subwfb	___aldiv@dividend+1,f
  9738  0EAA  0872               	movf	___aldiv@divisor+2,w
  9739  0EAB  3BF6               	subwfb	___aldiv@dividend+2,f
  9740  0EAC  0873               	movf	___aldiv@divisor+3,w
  9741  0EAD  3BF7               	subwfb	___aldiv@dividend+3,f
  9742  0EAE  1422               	bsf	___aldiv@quotient,0
  9743  0EAF                     l2784:	
  9744  0EAF  3001               	movlw	1
  9745  0EB0                     u2915:	
  9746  0EB0  36F3               	lsrf	___aldiv@divisor+3,f
  9747  0EB1  0CF2               	rrf	___aldiv@divisor+2,f
  9748  0EB2  0CF1               	rrf	___aldiv@divisor+1,f
  9749  0EB3  0CF0               	rrf	___aldiv@divisor,f
  9750  0EB4  0B89               	decfsz	9,f
  9751  0EB5  2EB0               	goto	u2915
  9752  0EB6  3001               	movlw	1
  9753  0EB7  02A0               	subwf	___aldiv@counter,f
  9754  0EB8  1D03               	btfss	3,2
  9755  0EB9  2E8F               	goto	l2776
  9756  0EBA                     l2788:	
  9757  0EBA  0821               	movf	___aldiv@sign,w
  9758  0EBB  1903               	btfsc	3,2
  9759  0EBC  2EC8               	goto	l2792
  9760  0EBD  09A2               	comf	___aldiv@quotient,f
  9761  0EBE  09A3               	comf	___aldiv@quotient+1,f
  9762  0EBF  09A4               	comf	___aldiv@quotient+2,f
  9763  0EC0  09A5               	comf	___aldiv@quotient+3,f
  9764  0EC1  0AA2               	incf	___aldiv@quotient,f
  9765  0EC2  1903               	skipnz
  9766  0EC3  0AA3               	incf	___aldiv@quotient+1,f
  9767  0EC4  1903               	skipnz
  9768  0EC5  0AA4               	incf	___aldiv@quotient+2,f
  9769  0EC6  1903               	skipnz
  9770  0EC7  0AA5               	incf	___aldiv@quotient+3,f
  9771  0EC8                     l2792:	
  9772  0EC8  0825               	movf	___aldiv@quotient+3,w
  9773  0EC9  00F3               	movwf	?___aldiv+3
  9774  0ECA  0824               	movf	___aldiv@quotient+2,w
  9775  0ECB  00F2               	movwf	?___aldiv+2
  9776  0ECC  0823               	movf	___aldiv@quotient+1,w
  9777  0ECD  00F1               	movwf	?___aldiv+1
  9778  0ECE  0822               	movf	___aldiv@quotient,w
  9779  0ECF  00F0               	movwf	?___aldiv
  9780  0ED0  0008               	return
  9781  0ED1                     __end_of___aldiv:	
  9782                           
  9783                           	psect	text25
  9784  0B5A                     __ptext25:	
  9785 ;; *************** function _SYSTEM_Initialize *****************
  9786 ;; Defined at:
  9787 ;;		line 37 in file "system.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;		None
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;Total ram usage:        2 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    3
  9808 ;; This function calls:
  9809 ;;		_ADCC_Initialize
  9810 ;;		_InitCustomChars
  9811 ;;		_LCD_Clear
  9812 ;;		_LCD_Init
  9813 ;;		_OSCILLATOR_Initialize
  9814 ;;		_PIN_MANAGER_Initialize
  9815 ;;		_PWM6_Initialize
  9816 ;;		_TMR0_Initialize
  9817 ;;		_TMR2_Initialize
  9818 ;; This function is called by:
  9819 ;;		_main
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           
  9824                           ;psect for function _SYSTEM_Initialize
  9825  0B5A                     _SYSTEM_Initialize:	
  9826                           
  9827                           ;system.c: 40: PIN_MANAGER_Initialize();
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9831  0B5A  318A  22F3  318B   	fcall	_PIN_MANAGER_Initialize
  9832                           
  9833                           ;system.c: 41: OSCILLATOR_Initialize();
  9834  0B5D  3189  213D  318B   	fcall	_OSCILLATOR_Initialize
  9835                           
  9836                           ;system.c: 42: FVRCON = 0x00;
  9837  0B60  0032               	movlb	18	; select bank18
  9838  0B61  018C               	clrf	12	;volatile
  9839                           
  9840                           ;system.c: 43: ADCC_Initialize();
  9841  0B62  3189  21FD  318B   	fcall	_ADCC_Initialize
  9842                           
  9843                           ;system.c: 44: PWM6_Initialize();
  9844  0B65  3189  2159  318B   	fcall	_PWM6_Initialize
  9845                           
  9846                           ;system.c: 45: TMR0_Initialize();
  9847  0B68  3189  2174  318B   	fcall	_TMR0_Initialize
  9848                           
  9849                           ;system.c: 46: TMR2_Initialize();
  9850  0B6B  3189  2183  318B   	fcall	_TMR2_Initialize
  9851                           
  9852                           ;system.c: 47: LCD_Init(0X00);
  9853  0B6E  3000               	movlw	0
  9854  0B6F  318D  2553  318B   	fcall	_LCD_Init
  9855                           
  9856                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
  9857  0B72  3041               	movlw	65
  9858  0B73  00F8               	movwf	??_SYSTEM_Initialize+1
  9859  0B74  30EE               	movlw	238
  9860  0B75  00F7               	movwf	??_SYSTEM_Initialize
  9861  0B76                     u3397:	
  9862  0B76  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9863  0B77  2B76               	goto	u3397
  9864  0B78  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9865  0B79  2B76               	goto	u3397
  9866  0B7A  0000               	nop
  9867                           
  9868                           ;system.c: 49: LCD_Clear();
  9869  0B7B  3189  2135  318B   	fcall	_LCD_Clear
  9870                           
  9871                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
  9872  0B7E  3021               	movlw	33
  9873  0B7F  00F8               	movwf	??_SYSTEM_Initialize+1
  9874  0B80  3076               	movlw	118
  9875  0B81  00F7               	movwf	??_SYSTEM_Initialize
  9876  0B82                     u3407:	
  9877  0B82  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9878  0B83  2B82               	goto	u3407
  9879  0B84  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9880  0B85  2B82               	goto	u3407
  9881  0B86  0000               	nop
  9882                           
  9883                           ;system.c: 51: InitCustomChars();
  9884  0B87  318A  22A4  318B   	fcall	_InitCustomChars
  9885                           
  9886                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
  9887  0B8A  3041               	movlw	65
  9888  0B8B  00F8               	movwf	??_SYSTEM_Initialize+1
  9889  0B8C  30EE               	movlw	238
  9890  0B8D  00F7               	movwf	??_SYSTEM_Initialize
  9891  0B8E                     u3417:	
  9892  0B8E  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9893  0B8F  2B8E               	goto	u3417
  9894  0B90  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9895  0B91  2B8E               	goto	u3417
  9896  0B92  0000               	nop
  9897  0B93  0008               	return
  9898  0B94                     __end_of_SYSTEM_Initialize:	
  9899                           
  9900                           	psect	text26
  9901  0983                     __ptext26:	
  9902 ;; *************** function _TMR2_Initialize *****************
  9903 ;; Defined at:
  9904 ;;		line 21 in file "timers.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        0 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_SYSTEM_Initialize
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           
  9932                           ;psect for function _TMR2_Initialize
  9933  0983                     _TMR2_Initialize:	
  9934                           
  9935                           ;timers.c: 24: T2CON = 0x7F;
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9939  0983  307F               	movlw	127
  9940  0984  0025               	movlb	5	; select bank5
  9941  0985  008E               	movwf	14	;volatile
  9942                           
  9943                           ;timers.c: 26: T2CLKCON = 0x01;
  9944  0986  3001               	movlw	1
  9945  0987  0090               	movwf	16	;volatile
  9946                           
  9947                           ;timers.c: 28: T2HLT = 0x00;
  9948  0988  018F               	clrf	15	;volatile
  9949                           
  9950                           ;timers.c: 30: T2RST = 0x00;
  9951  0989  0191               	clrf	17	;volatile
  9952                           
  9953                           ;timers.c: 32: T2PR = 0xFF;
  9954  098A  30FF               	movlw	255
  9955  098B  008D               	movwf	13	;volatile
  9956                           
  9957                           ;timers.c: 34: T2TMR = 0x00;
  9958  098C  018C               	clrf	12	;volatile
  9959                           
  9960                           ;timers.c: 36: PIR4bits.TMR2IF = 0;
  9961  098D  002E               	movlb	14	; select bank14
  9962  098E  1090               	bcf	16,1	;volatile
  9963                           
  9964                           ;timers.c: 38: T2CONbits.TMR2ON = 1;
  9965  098F  0025               	movlb	5	; select bank5
  9966  0990  178E               	bsf	14,7	;volatile
  9967  0991  0008               	return
  9968  0992                     __end_of_TMR2_Initialize:	
  9969                           
  9970                           	psect	text27
  9971  0974                     __ptext27:	
  9972 ;; *************** function _TMR0_Initialize *****************
  9973 ;; Defined at:
  9974 ;;		line 3 in file "timers.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_SYSTEM_Initialize
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _TMR0_Initialize
 10003  0974                     _TMR0_Initialize:	
 10004                           
 10005                           ;timers.c: 5: T0CON0 = 0x10;
 10006                           
 10007                           ;incstack = 0
 10008                           ; Regs used in _TMR0_Initialize: [wreg]
 10009  0974  3010               	movlw	16
 10010  0975  0020               	movlb	0	; select bank0
 10011  0976  009E               	movwf	30	;volatile
 10012                           
 10013                           ;timers.c: 7: T0CON1 = 0x42;
 10014  0977  3042               	movlw	66
 10015  0978  009F               	movwf	31	;volatile
 10016                           
 10017                           ;timers.c: 9: TMR0H = 0x24;
 10018  0979  3024               	movlw	36
 10019  097A  009D               	movwf	29	;volatile
 10020                           
 10021                           ;timers.c: 11: TMR0L = 0xB8;
 10022  097B  30B8               	movlw	184
 10023  097C  009C               	movwf	28	;volatile
 10024                           
 10025                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
 10026  097D  002E               	movlb	14	; select bank14
 10027  097E  1696               	bsf	22,5	;volatile
 10028                           
 10029                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
 10030  097F  128C               	bcf	12,5	;volatile
 10031                           
 10032                           ;timers.c: 17: T0CON0bits.T0EN = 1;
 10033  0980  0020               	movlb	0	; select bank0
 10034  0981  179E               	bsf	30,7	;volatile
 10035  0982  0008               	return
 10036  0983                     __end_of_TMR0_Initialize:	
 10037                           
 10038                           	psect	text28
 10039  0959                     __ptext28:	
 10040 ;; *************** function _PWM6_Initialize *****************
 10041 ;; Defined at:
 10042 ;;		line 4 in file "pwm6.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      void 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;Total ram usage:        0 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_SYSTEM_Initialize
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           
 10070                           ;psect for function _PWM6_Initialize
 10071  0959                     _PWM6_Initialize:	
 10072                           
 10073                           ;pwm6.c: 6: PWM6CON = 0x80;
 10074                           
 10075                           ;incstack = 0
 10076                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10077  0959  3080               	movlw	128
 10078  095A  0027               	movlb	7	; select bank7
 10079  095B  008E               	movwf	14	;volatile
 10080                           
 10081                           ;pwm6.c: 8: PWM6DCH = 0xFF;
 10082  095C  30FF               	movlw	255
 10083  095D  008D               	movwf	13	;volatile
 10084                           
 10085                           ;pwm6.c: 10: PWM6DCL = 0xC0;
 10086  095E  30C0               	movlw	192
 10087  095F  008C               	movwf	12	;volatile
 10088                           
 10089                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
 10090  0960  0024               	movlb	4	; select bank4
 10091  0961  081F               	movf	31,w	;volatile
 10092  0962  39F3               	andlw	-13
 10093  0963  3804               	iorlw	4
 10094  0964  009F               	movwf	31	;volatile
 10095  0965  0008               	return
 10096  0966                     __end_of_PWM6_Initialize:	
 10097                           
 10098                           	psect	text29
 10099  0AF3                     __ptext29:	
 10100 ;; *************** function _PIN_MANAGER_Initialize *****************
 10101 ;; Defined at:
 10102 ;;		line 5 in file "pin_manager.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;		None
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  state           1    0[COMMON] unsigned char 
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  1    wreg      void 
 10109 ;; Registers used:
 10110 ;;		wreg, status,2
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;Total ram usage:        1 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_SYSTEM_Initialize
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _PIN_MANAGER_Initialize
 10131  0AF3                     _PIN_MANAGER_Initialize:	
 10132                           
 10133                           ;pin_manager.c: 7: LATA = 0x00;
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10137  0AF3  0020               	movlb	0	; select bank0
 10138  0AF4  0196               	clrf	22	;volatile
 10139                           
 10140                           ;pin_manager.c: 8: LATB = 0x0;
 10141  0AF5  0197               	clrf	23	;volatile
 10142                           
 10143                           ;pin_manager.c: 9: LATC = 0x0;
 10144  0AF6  0198               	clrf	24	;volatile
 10145                           
 10146                           ;pin_manager.c: 11: WPUA = 0x18;
 10147  0AF7  3018               	movlw	24
 10148  0AF8  003E               	movlb	30	; select bank30
 10149  0AF9  00B9               	movwf	57	;volatile
 10150                           
 10151                           ;pin_manager.c: 12: WPUB = 0x00;
 10152  0AFA  01C4               	clrf	68	;volatile
 10153                           
 10154                           ;pin_manager.c: 13: WPUC = 0x00;
 10155  0AFB  01CF               	clrf	79	;volatile
 10156                           
 10157                           ;pin_manager.c: 14: WPUE = 0x8;
 10158  0AFC  3008               	movlw	8
 10159  0AFD  00E5               	movwf	101	;volatile
 10160                           
 10161                           ;pin_manager.c: 16: TRISA = 0x1C;
 10162  0AFE  301C               	movlw	28
 10163  0AFF  0020               	movlb	0	; select bank0
 10164  0B00  0091               	movwf	17	;volatile
 10165                           
 10166                           ;pin_manager.c: 17: TRISB = 0x00;
 10167  0B01  0192               	clrf	18	;volatile
 10168                           
 10169                           ;pin_manager.c: 18: TRISC = 0x10;
 10170  0B02  3010               	movlw	16
 10171  0B03  0093               	movwf	19	;volatile
 10172                           
 10173                           ;pin_manager.c: 20: ANSELA = 0x04;
 10174  0B04  3004               	movlw	4
 10175  0B05  003E               	movlb	30	; select bank30
 10176  0B06  00B8               	movwf	56	;volatile
 10177                           
 10178                           ;pin_manager.c: 21: ANSELB = 0x00;
 10179  0B07  01C3               	clrf	67	;volatile
 10180                           
 10181                           ;pin_manager.c: 22: ANSELC = 0x00;
 10182  0B08  01CE               	clrf	78	;volatile
 10183                           
 10184                           ;pin_manager.c: 26: PIE0bits.IOCIE = 0;
 10185  0B09  002E               	movlb	14	; select bank14
 10186  0B0A  1216               	bcf	22,4	;volatile
 10187                           
 10188                           ;pin_manager.c: 27: bool state = GIE;
 10189  0B0B  3000               	movlw	0
 10190  0B0C  1B8B               	btfsc	11,7	;volatile
 10191  0B0D  3001               	movlw	1
 10192  0B0E  00F0               	movwf	PIN_MANAGER_Initialize@state
 10193                           
 10194                           ;pin_manager.c: 28: GIE = 0;
 10195  0B0F  138B               	bcf	11,7	;volatile
 10196                           
 10197                           ;pin_manager.c: 29: PPSLOCK = 0x55;
 10198  0B10  3055               	movlw	85
 10199  0B11  003D               	movlb	29	; select bank29
 10200  0B12  008F               	movwf	15	;volatile
 10201                           
 10202                           ;pin_manager.c: 30: PPSLOCK = 0xAA;
 10203  0B13  30AA               	movlw	170
 10204  0B14  008F               	movwf	15	;volatile
 10205                           
 10206                           ;pin_manager.c: 31: PPSLOCKbits.PPSLOCKED = 0x00;
 10207  0B15  100F               	bcf	15,0	;volatile
 10208                           
 10209                           ;pin_manager.c: 34: RA1PPS = 0x000E;
 10210  0B16  300E               	movlw	14
 10211  0B17  003E               	movlb	30	; select bank30
 10212  0B18  0091               	movwf	17	;volatile
 10213                           
 10214                           ;pin_manager.c: 38: PPSLOCK = 0x55;
 10215  0B19  3055               	movlw	85
 10216  0B1A  003D               	movlb	29	; select bank29
 10217  0B1B  008F               	movwf	15	;volatile
 10218                           
 10219                           ;pin_manager.c: 39: PPSLOCK = 0xAA;
 10220  0B1C  30AA               	movlw	170
 10221  0B1D  008F               	movwf	15	;volatile
 10222                           
 10223                           ;pin_manager.c: 40: PPSLOCKbits.PPSLOCKED = 0x01;
 10224  0B1E  140F               	bsf	15,0	;volatile
 10225                           
 10226                           ;pin_manager.c: 41: GIE = state;
 10227  0B1F  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10228  0B20  2B23               	goto	u2590
 10229  0B21  178B               	bsf	11,7	;volatile
 10230  0B22  0008               	return
 10231  0B23                     u2590:	
 10232  0B23  138B               	bcf	11,7	;volatile
 10233  0B24  0008               	return
 10234  0B25                     __end_of_PIN_MANAGER_Initialize:	
 10235                           
 10236                           	psect	text30
 10237  093D                     __ptext30:	
 10238 ;; *************** function _OSCILLATOR_Initialize *****************
 10239 ;; Defined at:
 10240 ;;		line 55 in file "system.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_SYSTEM_Initialize
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _OSCILLATOR_Initialize
 10269  093D                     _OSCILLATOR_Initialize:	
 10270                           
 10271                           ;system.c: 81: OSCCON1 = 0x60;
 10272                           
 10273                           ;incstack = 0
 10274                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10275  093D  3060               	movlw	96
 10276  093E  0031               	movlb	17	; select bank17
 10277  093F  008D               	movwf	13	;volatile
 10278                           
 10279                           ;system.c: 83: OSCCON3 = 0x00;
 10280  0940  018F               	clrf	15	;volatile
 10281                           
 10282                           ;system.c: 85: OSCEN = 0x00;
 10283  0941  0191               	clrf	17	;volatile
 10284                           
 10285                           ;system.c: 87: OSCFRQ = 0x00;
 10286  0942  0193               	clrf	19	;volatile
 10287                           
 10288                           ;system.c: 89: OSCTUNE = 0x00;
 10289  0943  0192               	clrf	18	;volatile
 10290  0944  0008               	return
 10291  0945                     __end_of_OSCILLATOR_Initialize:	
 10292                           
 10293                           	psect	text31
 10294  0D53                     __ptext31:	
 10295 ;; *************** function _LCD_Init *****************
 10296 ;; Defined at:
 10297 ;;		line 154 in file "lcd.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  style           1    wreg     unsigned char 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;  style           1    5[COMMON] unsigned char 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      void 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, pclath, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;Total ram usage:        3 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:    2
 10318 ;; This function calls:
 10319 ;;		_LCD_Cmd
 10320 ;;		_LCD_Port
 10321 ;; This function is called by:
 10322 ;;		_SYSTEM_Initialize
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           
 10327                           ;psect for function _LCD_Init
 10328  0D53                     _LCD_Init:	
 10329                           
 10330                           ;incstack = 0
 10331                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10332                           ;LCD_Init@style stored from wreg
 10333  0D53  00F5               	movwf	LCD_Init@style
 10334                           
 10335                           ;lcd.c: 156: LCD_Port(0x00);
 10336  0D54  3000               	movlw	0
 10337  0D55  3189  21CD  318D   	fcall	_LCD_Port
 10338                           
 10339                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
 10340  0D58  3021               	movlw	33
 10341  0D59  00F4               	movwf	??_LCD_Init+1
 10342  0D5A  3076               	movlw	118
 10343  0D5B  00F3               	movwf	??_LCD_Init
 10344  0D5C                     u3427:	
 10345  0D5C  0BF3               	decfsz	??_LCD_Init,f
 10346  0D5D  2D5C               	goto	u3427
 10347  0D5E  0BF4               	decfsz	??_LCD_Init+1,f
 10348  0D5F  2D5C               	goto	u3427
 10349  0D60  0000               	nop
 10350                           
 10351                           ;lcd.c: 160: LCD_Cmd(0x03);
 10352  0D61  3003               	movlw	3
 10353  0D62  3189  2192  318D   	fcall	_LCD_Cmd
 10354                           
 10355                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
 10356  0D65  3004               	movlw	4
 10357  0D66  00F4               	movwf	??_LCD_Init+1
 10358  0D67  303D               	movlw	61
 10359  0D68  00F3               	movwf	??_LCD_Init
 10360  0D69                     u3437:	
 10361  0D69  0BF3               	decfsz	??_LCD_Init,f
 10362  0D6A  2D69               	goto	u3437
 10363  0D6B  0BF4               	decfsz	??_LCD_Init+1,f
 10364  0D6C  2D69               	goto	u3437
 10365  0D6D  3200               	nop2
 10366                           
 10367                           ;lcd.c: 164: LCD_Cmd(0x03);
 10368  0D6E  3003               	movlw	3
 10369  0D6F  3189  2192  318D   	fcall	_LCD_Cmd
 10370                           
 10371                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10372  0D72  3009               	movlw	9
 10373  0D73  00F3               	movwf	??_LCD_Init
 10374  0D74                     u3447:	
 10375  0D74  0BF3               	decfsz	??_LCD_Init,f
 10376  0D75  2D74               	goto	u3447
 10377  0D76  3200               	nop2	;nop
 10378                           
 10379                           ;lcd.c: 168: LCD_Cmd(0x03);
 10380  0D77  3003               	movlw	3
 10381  0D78  3189  2192  318D   	fcall	_LCD_Cmd
 10382                           
 10383                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10384  0D7B  3009               	movlw	9
 10385  0D7C  00F3               	movwf	??_LCD_Init
 10386  0D7D                     u3457:	
 10387  0D7D  0BF3               	decfsz	??_LCD_Init,f
 10388  0D7E  2D7D               	goto	u3457
 10389  0D7F  3200               	nop2	;nop
 10390                           
 10391                           ;lcd.c: 172: LCD_Cmd(0x02);
 10392  0D80  3002               	movlw	2
 10393  0D81  3189  2192  318D   	fcall	_LCD_Cmd
 10394                           
 10395                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10396  0D84  3009               	movlw	9
 10397  0D85  00F3               	movwf	??_LCD_Init
 10398  0D86                     u3467:	
 10399  0D86  0BF3               	decfsz	??_LCD_Init,f
 10400  0D87  2D86               	goto	u3467
 10401  0D88  3200               	nop2	;nop
 10402                           
 10403                           ;lcd.c: 176: LCD_Cmd(0x2);
 10404  0D89  3002               	movlw	2
 10405  0D8A  3189  2192  318D   	fcall	_LCD_Cmd
 10406                           
 10407                           ;lcd.c: 178: LCD_Cmd(0x8);
 10408  0D8D  3008               	movlw	8
 10409  0D8E  3189  2192  318D   	fcall	_LCD_Cmd
 10410                           
 10411                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10412  0D91  3009               	movlw	9
 10413  0D92  00F3               	movwf	??_LCD_Init
 10414  0D93                     u3477:	
 10415  0D93  0BF3               	decfsz	??_LCD_Init,f
 10416  0D94  2D93               	goto	u3477
 10417  0D95  3200               	nop2	;nop
 10418                           
 10419                           ;lcd.c: 182: LCD_Cmd(0x0);
 10420  0D96  3000               	movlw	0
 10421  0D97  3189  2192  318D   	fcall	_LCD_Cmd
 10422                           
 10423                           ;lcd.c: 184: LCD_Cmd(0x8);
 10424  0D9A  3008               	movlw	8
 10425  0D9B  3189  2192  318D   	fcall	_LCD_Cmd
 10426                           
 10427                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10428  0D9E  3009               	movlw	9
 10429  0D9F  00F3               	movwf	??_LCD_Init
 10430  0DA0                     u3487:	
 10431  0DA0  0BF3               	decfsz	??_LCD_Init,f
 10432  0DA1  2DA0               	goto	u3487
 10433  0DA2  3200               	nop2	;nop
 10434                           
 10435                           ;lcd.c: 188: LCD_Cmd(0x0);
 10436  0DA3  3000               	movlw	0
 10437  0DA4  3189  2192  318D   	fcall	_LCD_Cmd
 10438                           
 10439                           ;lcd.c: 190: LCD_Cmd(0x1);
 10440  0DA7  3001               	movlw	1
 10441  0DA8  3189  2192  318D   	fcall	_LCD_Cmd
 10442                           
 10443                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10444  0DAB  30F9               	movlw	249
 10445  0DAC  00F3               	movwf	??_LCD_Init
 10446  0DAD                     u3497:	
 10447  0DAD  3200               	nop2
 10448  0DAE  0BF3               	decfsz	??_LCD_Init,f
 10449  0DAF  2DAD               	goto	u3497
 10450  0DB0  3200               	nop2	;nop
 10451  0DB1  3200               	nop2	;nop
 10452                           
 10453                           ;lcd.c: 194: LCD_Cmd(0x0);
 10454  0DB2  3000               	movlw	0
 10455  0DB3  3189  2192  318D   	fcall	_LCD_Cmd
 10456                           
 10457                           ;lcd.c: 196: LCD_Cmd(0x6);
 10458  0DB6  3006               	movlw	6
 10459  0DB7  3189  2192  318D   	fcall	_LCD_Cmd
 10460                           
 10461                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10462  0DBA  3009               	movlw	9
 10463  0DBB  00F3               	movwf	??_LCD_Init
 10464  0DBC                     u3507:	
 10465  0DBC  0BF3               	decfsz	??_LCD_Init,f
 10466  0DBD  2DBC               	goto	u3507
 10467  0DBE  3200               	nop2	;nop
 10468                           
 10469                           ;lcd.c: 200: LCD_Cmd(0x0);
 10470  0DBF  3000               	movlw	0
 10471  0DC0  3189  2192  318D   	fcall	_LCD_Cmd
 10472                           
 10473                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10474  0DC3  0875               	movf	LCD_Init@style,w
 10475  0DC4  380C               	iorlw	12
 10476  0DC5  3189  2192  318D   	fcall	_LCD_Cmd
 10477                           
 10478                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10479  0DC8  3009               	movlw	9
 10480  0DC9  00F3               	movwf	??_LCD_Init
 10481  0DCA                     u3517:	
 10482  0DCA  0BF3               	decfsz	??_LCD_Init,f
 10483  0DCB  2DCA               	goto	u3517
 10484  0DCC  3200               	nop2	;nop
 10485  0DCD  0008               	return
 10486  0DCE                     __end_of_LCD_Init:	
 10487                           
 10488                           	psect	text32
 10489  0935                     __ptext32:	
 10490 ;; *************** function _LCD_Clear *****************
 10491 ;; Defined at:
 10492 ;;		line 75 in file "lcd.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0, pclath, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;Total ram usage:        0 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    2
 10513 ;; This function calls:
 10514 ;;		_LCD_Cmd
 10515 ;; This function is called by:
 10516 ;;		_SYSTEM_Initialize
 10517 ;;		_tempSetpoint
 10518 ;;		_readButtons
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function _LCD_Clear
 10524  0935                     _LCD_Clear:	
 10525                           
 10526                           ;lcd.c: 77: LCD_Cmd(0);
 10527                           
 10528                           ;incstack = 0
 10529                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10530  0935  3000               	movlw	0
 10531  0936  3189  2192  3189   	fcall	_LCD_Cmd
 10532                           
 10533                           ;lcd.c: 78: LCD_Cmd(1);
 10534  0939  3001               	movlw	1
 10535  093A  3189  2192         	fcall	_LCD_Cmd
 10536  093C  0008               	return
 10537  093D                     __end_of_LCD_Clear:	
 10538                           
 10539                           	psect	text33
 10540  0AA4                     __ptext33:	
 10541 ;; *************** function _InitCustomChars *****************
 10542 ;; Defined at:
 10543 ;;		line 29 in file "lcd.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  i               1    6[COMMON] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;Total ram usage:        2 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    2
 10564 ;; This function calls:
 10565 ;;		_LCD_Cmd
 10566 ;;		_LCD_Write_Char
 10567 ;; This function is called by:
 10568 ;;		_SYSTEM_Initialize
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           
 10573                           ;psect for function _InitCustomChars
 10574  0AA4                     _InitCustomChars:	
 10575                           
 10576                           ;lcd.c: 31: uint8_t i;
 10577                           ;lcd.c: 32: LCD_Cmd(0x04);
 10578                           
 10579                           ;incstack = 0
 10580                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10581  0AA4  3004               	movlw	4
 10582  0AA5  3189  2192  318A   	fcall	_LCD_Cmd
 10583                           
 10584                           ;lcd.c: 33: LCD_Cmd(0x00);
 10585  0AA8  3000               	movlw	0
 10586  0AA9  3189  2192  318A   	fcall	_LCD_Cmd
 10587                           
 10588                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10589  0AAC  01F6               	clrf	InitCustomChars@i
 10590  0AAD  3018               	movlw	24
 10591  0AAE  0276               	subwf	InitCustomChars@i,w
 10592  0AAF  1803               	btfsc	3,0
 10593  0AB0  2AC1               	goto	l2368
 10594  0AB1                     l2362:	
 10595                           
 10596                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10597  0AB1  0876               	movf	InitCustomChars@i,w
 10598  0AB2  3EBE               	addlw	(low (___cgram| 0))& (0+255)
 10599  0AB3  0086               	movwf	6
 10600  0AB4  0187               	clrf	7
 10601  0AB5  0801               	movf	1,w
 10602  0AB6  318A  22C9  318A   	fcall	_LCD_Write_Char
 10603  0AB9  3001               	movlw	1
 10604  0ABA  00F5               	movwf	??_InitCustomChars
 10605  0ABB  0875               	movf	??_InitCustomChars,w
 10606  0ABC  07F6               	addwf	InitCustomChars@i,f
 10607  0ABD  3018               	movlw	24
 10608  0ABE  0276               	subwf	InitCustomChars@i,w
 10609  0ABF  1C03               	skipc
 10610  0AC0  2AB1               	goto	l2362
 10611  0AC1                     l2368:	
 10612                           
 10613                           ;lcd.c: 36: LCD_Cmd(0);
 10614  0AC1  3000               	movlw	0
 10615  0AC2  3189  2192  318A   	fcall	_LCD_Cmd
 10616                           
 10617                           ;lcd.c: 37: LCD_Cmd(2);
 10618  0AC5  3002               	movlw	2
 10619  0AC6  3189  2192         	fcall	_LCD_Cmd
 10620  0AC8  0008               	return
 10621  0AC9                     __end_of_InitCustomChars:	
 10622                           
 10623                           	psect	text34
 10624  0AC9                     __ptext34:	
 10625 ;; *************** function _LCD_Write_Char *****************
 10626 ;; Defined at:
 10627 ;;		line 223 in file "lcd.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  a               1    wreg     const unsigned char 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;  a               1    4[COMMON] const unsigned char 
 10632 ;;  y               1    3[COMMON] unsigned char 
 10633 ;;  temp            1    2[COMMON] unsigned char 
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1    wreg      void 
 10636 ;; Registers used:
 10637 ;;		wreg, status,2, status,0, pclath, cstack
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;Total ram usage:        4 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; Hardware stack levels required when called:    1
 10650 ;; This function calls:
 10651 ;;		_LCD_Port
 10652 ;; This function is called by:
 10653 ;;		_InitCustomChars
 10654 ;;		_LCD_Write_String
 10655 ;;		_LCD_Write_Int
 10656 ;;		_tempSetpoint
 10657 ;;		_readButtons
 10658 ;;		_main
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           
 10663                           ;psect for function _LCD_Write_Char
 10664  0AC9                     _LCD_Write_Char:	
 10665                           
 10666                           ;incstack = 0
 10667                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10668                           ;LCD_Write_Char@a stored from wreg
 10669  0AC9  00F4               	movwf	LCD_Write_Char@a
 10670                           
 10671                           ;lcd.c: 225: char temp,y;
 10672                           ;lcd.c: 226: temp = a&0x0F;
 10673  0ACA  0874               	movf	LCD_Write_Char@a,w
 10674  0ACB  390F               	andlw	15
 10675  0ACC  00F1               	movwf	??_LCD_Write_Char
 10676  0ACD  0871               	movf	??_LCD_Write_Char,w
 10677  0ACE  00F2               	movwf	LCD_Write_Char@temp
 10678                           
 10679                           ;lcd.c: 227: y = a&0xF0;
 10680  0ACF  0874               	movf	LCD_Write_Char@a,w
 10681  0AD0  39F0               	andlw	240
 10682  0AD1  00F1               	movwf	??_LCD_Write_Char
 10683  0AD2  0871               	movf	??_LCD_Write_Char,w
 10684  0AD3  00F3               	movwf	LCD_Write_Char@y
 10685                           
 10686                           ;lcd.c: 228: RB0 = 1;
 10687  0AD4  0020               	movlb	0	; select bank0
 10688  0AD5  140D               	bsf	13,0	;volatile
 10689                           
 10690                           ;lcd.c: 229: LCD_Port(y>>4);
 10691  0AD6  0873               	movf	LCD_Write_Char@y,w
 10692  0AD7  00F1               	movwf	??_LCD_Write_Char
 10693  0AD8  3004               	movlw	4
 10694  0AD9                     u1725:	
 10695  0AD9  36F1               	lsrf	??_LCD_Write_Char,f
 10696  0ADA  0B89               	decfsz	9,f
 10697  0ADB  2AD9               	goto	u1725
 10698  0ADC  0871               	movf	??_LCD_Write_Char,w
 10699  0ADD  3189  21CD  318A   	fcall	_LCD_Port
 10700                           
 10701                           ;lcd.c: 230: RB1 = 1;
 10702  0AE0  0020               	movlb	0	; select bank0
 10703  0AE1  148D               	bsf	13,1	;volatile
 10704                           
 10705                           ;lcd.c: 231: RB1 = 0;
 10706  0AE2  108D               	bcf	13,1	;volatile
 10707                           
 10708                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10709  0AE3  3003               	movlw	3
 10710  0AE4  00F1               	movwf	??_LCD_Write_Char
 10711  0AE5                     u3527:	
 10712  0AE5  0BF1               	decfsz	??_LCD_Write_Char,f
 10713  0AE6  2AE5               	goto	u3527
 10714                           
 10715                           ;lcd.c: 233: LCD_Port(temp);
 10716  0AE7  0872               	movf	LCD_Write_Char@temp,w
 10717  0AE8  3189  21CD  318A   	fcall	_LCD_Port
 10718                           
 10719                           ;lcd.c: 234: RB1 = 1;
 10720  0AEB  0020               	movlb	0	; select bank0
 10721  0AEC  148D               	bsf	13,1	;volatile
 10722                           
 10723                           ;lcd.c: 235: RB1 = 0;
 10724  0AED  108D               	bcf	13,1	;volatile
 10725                           
 10726                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10727  0AEE  3003               	movlw	3
 10728  0AEF  00F1               	movwf	??_LCD_Write_Char
 10729  0AF0                     u3537:	
 10730  0AF0  0BF1               	decfsz	??_LCD_Write_Char,f
 10731  0AF1  2AF0               	goto	u3537
 10732  0AF2  0008               	return
 10733  0AF3                     __end_of_LCD_Write_Char:	
 10734                           
 10735                           	psect	text35
 10736  0992                     __ptext35:	
 10737 ;; *************** function _LCD_Cmd *****************
 10738 ;; Defined at:
 10739 ;;		line 65 in file "lcd.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  a               1    wreg     unsigned char 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;  a               1    2[COMMON] unsigned char 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0, pclath, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;Total ram usage:        2 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    1
 10760 ;; This function calls:
 10761 ;;		_LCD_Port
 10762 ;; This function is called by:
 10763 ;;		_InitCustomChars
 10764 ;;		_LCD_Clear
 10765 ;;		_LCD_Set_Cursor
 10766 ;;		_LCD_Init
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           
 10771                           ;psect for function _LCD_Cmd
 10772  0992                     _LCD_Cmd:	
 10773                           
 10774                           ;incstack = 0
 10775                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10776                           ;LCD_Cmd@a stored from wreg
 10777  0992  00F2               	movwf	LCD_Cmd@a
 10778                           
 10779                           ;lcd.c: 67: RB0 = 0;
 10780  0993  0020               	movlb	0	; select bank0
 10781  0994  100D               	bcf	13,0	;volatile
 10782                           
 10783                           ;lcd.c: 68: LCD_Port(a);
 10784  0995  0872               	movf	LCD_Cmd@a,w
 10785  0996  3189  21CD  3189   	fcall	_LCD_Port
 10786                           
 10787                           ;lcd.c: 69: RB1 = 1;
 10788  0999  0020               	movlb	0	; select bank0
 10789  099A  148D               	bsf	13,1	;volatile
 10790                           
 10791                           ;lcd.c: 70: RB1 = 0;
 10792  099B  108D               	bcf	13,1	;volatile
 10793                           
 10794                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10795  099C  30F9               	movlw	249
 10796  099D  00F1               	movwf	??_LCD_Cmd
 10797  099E                     u3547:	
 10798  099E  0000               	nop
 10799  099F  0BF1               	decfsz	??_LCD_Cmd,f
 10800  09A0  299E               	goto	u3547
 10801  09A1  3200               	nop2	;nop
 10802  09A2  0000               	nop
 10803  09A3  0008               	return
 10804  09A4                     __end_of_LCD_Cmd:	
 10805                           
 10806                           	psect	text36
 10807  09CD                     __ptext36:	
 10808 ;; *************** function _LCD_Port *****************
 10809 ;; Defined at:
 10810 ;;		line 41 in file "lcd.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  a               1    wreg     unsigned char 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  a               1    0[COMMON] unsigned char 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  1    wreg      void 
 10817 ;; Registers used:
 10818 ;;		wreg
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;Total ram usage:        1 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; This function calls:
 10831 ;;		Nothing
 10832 ;; This function is called by:
 10833 ;;		_LCD_Cmd
 10834 ;;		_LCD_Init
 10835 ;;		_LCD_Write_Char
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           
 10840                           ;psect for function _LCD_Port
 10841  09CD                     _LCD_Port:	
 10842                           
 10843                           ;incstack = 0
 10844                           ; Regs used in _LCD_Port: [wreg]
 10845                           ;LCD_Port@a stored from wreg
 10846  09CD  00F0               	movwf	LCD_Port@a
 10847                           
 10848                           ;lcd.c: 43: if(a & 1)
 10849  09CE  1C70               	btfss	LCD_Port@a,0
 10850  09CF  29D3               	goto	l28
 10851                           
 10852                           ;lcd.c: 44: RB2 = 1;
 10853  09D0  0020               	movlb	0	; select bank0
 10854  09D1  150D               	bsf	13,2	;volatile
 10855  09D2  29D5               	goto	l1984
 10856  09D3                     l28:	
 10857                           
 10858                           ;lcd.c: 45: else
 10859                           ;lcd.c: 46: RB2 = 0;
 10860  09D3  0020               	movlb	0	; select bank0
 10861  09D4  110D               	bcf	13,2	;volatile
 10862  09D5                     l1984:	
 10863                           
 10864                           ;lcd.c: 48: if(a & 2)
 10865  09D5  1CF0               	btfss	LCD_Port@a,1
 10866  09D6  29D9               	goto	l30
 10867                           
 10868                           ;lcd.c: 49: RB3 = 1;
 10869  09D7  158D               	bsf	13,3	;volatile
 10870  09D8  29DA               	goto	l1988
 10871  09D9                     l30:	
 10872                           
 10873                           ;lcd.c: 50: else
 10874                           ;lcd.c: 51: RB3 = 0;
 10875  09D9  118D               	bcf	13,3	;volatile
 10876  09DA                     l1988:	
 10877                           
 10878                           ;lcd.c: 53: if(a & 4)
 10879  09DA  1D70               	btfss	LCD_Port@a,2
 10880  09DB  29DE               	goto	l32
 10881                           
 10882                           ;lcd.c: 54: RB4 = 1;
 10883  09DC  160D               	bsf	13,4	;volatile
 10884  09DD  29DF               	goto	l1992
 10885  09DE                     l32:	
 10886                           
 10887                           ;lcd.c: 55: else
 10888                           ;lcd.c: 56: RB4 = 0;
 10889  09DE  120D               	bcf	13,4	;volatile
 10890  09DF                     l1992:	
 10891                           
 10892                           ;lcd.c: 58: if(a & 8)
 10893  09DF  1DF0               	btfss	LCD_Port@a,3
 10894  09E0  29E3               	goto	l34
 10895                           
 10896                           ;lcd.c: 59: RB5 = 1;
 10897  09E1  168D               	bsf	13,5	;volatile
 10898  09E2  0008               	return
 10899  09E3                     l34:	
 10900                           
 10901                           ;lcd.c: 60: else
 10902                           ;lcd.c: 61: RB5 = 0;
 10903  09E3  128D               	bcf	13,5	;volatile
 10904  09E4  0008               	return
 10905  09E5                     __end_of_LCD_Port:	
 10906                           
 10907                           	psect	text37
 10908  09FD                     __ptext37:	
 10909 ;; *************** function _ADCC_Initialize *****************
 10910 ;; Defined at:
 10911 ;;		line 5 in file "adcc.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;		None
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, status,2
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_SYSTEM_Initialize
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           
 10939                           ;psect for function _ADCC_Initialize
 10940  09FD                     _ADCC_Initialize:	
 10941                           
 10942                           ;adcc.c: 9: ADCON1 = 0x00;
 10943                           
 10944                           ;incstack = 0
 10945                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10946  09FD  0021               	movlb	1	; select bank1
 10947  09FE  0194               	clrf	20	;volatile
 10948                           
 10949                           ;adcc.c: 11: ADCON2 = 0x00;
 10950  09FF  0195               	clrf	21	;volatile
 10951                           
 10952                           ;adcc.c: 13: ADCON3 = 0x00;
 10953  0A00  0196               	clrf	22	;volatile
 10954                           
 10955                           ;adcc.c: 15: ADACT = 0x00;
 10956  0A01  0199               	clrf	25	;volatile
 10957                           
 10958                           ;adcc.c: 17: ADSTAT = 0x00;
 10959  0A02  0197               	clrf	23	;volatile
 10960                           
 10961                           ;adcc.c: 19: ADCLK = 0x0F;
 10962  0A03  300F               	movlw	15
 10963  0A04  0098               	movwf	24	;volatile
 10964                           
 10965                           ;adcc.c: 22: ADREF = 0x00;
 10966  0A05  019A               	clrf	26	;volatile
 10967                           
 10968                           ;adcc.c: 24: ADCAP = 0x00;
 10969  0A06  019B               	clrf	27	;volatile
 10970                           
 10971                           ;adcc.c: 26: ADPRE = 0x00;
 10972  0A07  019C               	clrf	28	;volatile
 10973                           
 10974                           ;adcc.c: 28: ADACQ = 0x00;
 10975  0A08  019D               	clrf	29	;volatile
 10976                           
 10977                           ;adcc.c: 30: ADPCH = 0x00;
 10978  0A09  019E               	clrf	30	;volatile
 10979                           
 10980                           ;adcc.c: 32: ADRPT = 0x00;
 10981  0A0A  0022               	movlb	2	; select bank2
 10982  0A0B  018D               	clrf	13	;volatile
 10983                           
 10984                           ;adcc.c: 34: ADLTHL = 0x00;
 10985  0A0C  018E               	clrf	14	;volatile
 10986                           
 10987                           ;adcc.c: 36: ADLTHH = 0x00;
 10988  0A0D  018F               	clrf	15	;volatile
 10989                           
 10990                           ;adcc.c: 38: ADUTHL = 0x00;
 10991  0A0E  0190               	clrf	16	;volatile
 10992                           
 10993                           ;adcc.c: 40: ADUTHH = 0x00;
 10994  0A0F  0191               	clrf	17	;volatile
 10995                           
 10996                           ;adcc.c: 42: ADSTPTL = 0x00;
 10997  0A10  0192               	clrf	18	;volatile
 10998                           
 10999                           ;adcc.c: 44: ADSTPTH = 0x00;
 11000  0A11  0193               	clrf	19	;volatile
 11001                           
 11002                           ;adcc.c: 47: ADCON0 = 0x84;
 11003  0A12  3084               	movlw	132
 11004  0A13  0021               	movlb	1	; select bank1
 11005  0A14  0093               	movwf	19	;volatile
 11006  0A15  0008               	return
 11007  0A16                     __end_of_ADCC_Initialize:	
 11008                           
 11009                           	psect	text38
 11010  09B7                     __ptext38:	
 11011 ;; *************** function _PWM6_LoadDutyValue *****************
 11012 ;; Defined at:
 11013 ;;		line 15 in file "pwm6.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  dutyValue       2    0[COMMON] unsigned int 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;		None
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, status,2, status,0
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;Total ram usage:        4 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_main
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           
 11041                           ;psect for function _PWM6_LoadDutyValue
 11042  09B7                     _PWM6_LoadDutyValue:	
 11043                           
 11044                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11045                           
 11046                           ;incstack = 0
 11047                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11048  09B7  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11049  09B8  00F3               	movwf	??_PWM6_LoadDutyValue+1
 11050  09B9  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11051  09BA  00F2               	movwf	??_PWM6_LoadDutyValue
 11052  09BB  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11053  09BC  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11054  09BD  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11055  09BE  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11056  09BF  0872               	movf	??_PWM6_LoadDutyValue,w
 11057  09C0  0027               	movlb	7	; select bank7
 11058  09C1  008D               	movwf	13	;volatile
 11059                           
 11060                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 11061  09C2  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11062  09C3  3903               	andlw	3
 11063  09C4  00F2               	movwf	??_PWM6_LoadDutyValue
 11064  09C5  3005               	movlw	5
 11065  09C6                     u2765:	
 11066  09C6  35F2               	lslf	??_PWM6_LoadDutyValue,f
 11067  09C7  3EFF               	addlw	-1
 11068  09C8  1D03               	skipz
 11069  09C9  29C6               	goto	u2765
 11070  09CA  3572               	lslf	??_PWM6_LoadDutyValue,w
 11071  09CB  008C               	movwf	12	;volatile
 11072  09CC  0008               	return
 11073  09CD                     __end_of_PWM6_LoadDutyValue:	
 11074                           
 11075                           	psect	text39
 11076  0966                     __ptext39:	
 11077 ;; *************** function _ADCC_GetSingleConversion *****************
 11078 ;; Defined at:
 11079 ;;		line 53 in file "adcc.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;  channel         1    wreg     enum E13559
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;  channel         1    3[COMMON] enum E13559
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  2    0[COMMON] unsigned int 
 11086 ;; Registers used:
 11087 ;;		wreg
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        4 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_main
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           
 11107                           ;psect for function _ADCC_GetSingleConversion
 11108  0966                     _ADCC_GetSingleConversion:	
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11112                           ;ADCC_GetSingleConversion@channel stored from wreg
 11113  0966  00F3               	movwf	ADCC_GetSingleConversion@channel
 11114                           
 11115                           ;adcc.c: 56: ADPCH = channel;
 11116  0967  0873               	movf	ADCC_GetSingleConversion@channel,w
 11117  0968  0021               	movlb	1	; select bank1
 11118  0969  009E               	movwf	30	;volatile
 11119                           
 11120                           ;adcc.c: 59: ADCON0bits.ADON = 1;
 11121  096A  1793               	bsf	19,7	;volatile
 11122                           
 11123                           ;adcc.c: 62: ADCON0bits.ADCONT = 0;
 11124  096B  1313               	bcf	19,6	;volatile
 11125                           
 11126                           ;adcc.c: 65: ADCON0bits.ADGO = 1;
 11127  096C  1413               	bsf	19,0	;volatile
 11128  096D                     l208:	
 11129                           ;adcc.c: 69: {
 11130                           
 11131                           ;adcc.c: 68: while (ADCON0bits.ADGO)
 11132                           
 11133  096D  1813               	btfsc	19,0	;volatile
 11134  096E  296D               	goto	l208
 11135                           
 11136                           ;adcc.c: 70: }
 11137                           ;adcc.c: 73: return ((ADRESH << 8) + ADRESL);
 11138  096F  080D               	movf	13,w	;volatile
 11139  0970  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11140  0971  080C               	movf	12,w	;volatile
 11141  0972  00F0               	movwf	?_ADCC_GetSingleConversion
 11142  0973  0008               	return
 11143  0974                     __end_of_ADCC_GetSingleConversion:	
 11144  007E                     btemp	set	126	;btemp
 11145  007E                     wtemp	set	126
 11146  007E                     wtemp0	set	126
 11147  0080                     wtemp1	set	128
 11148  0082                     wtemp2	set	130
 11149  0084                     wtemp3	set	132
 11150  0086                     wtemp4	set	134
 11151  0088                     wtemp5	set	136
 11152  007F                     wtemp6	set	127
 11153  007E                     ttemp	set	126
 11154  007E                     ttemp0	set	126
 11155  0081                     ttemp1	set	129
 11156  0084                     ttemp2	set	132
 11157  0087                     ttemp3	set	135
 11158  007F                     ttemp4	set	127
 11159  007E                     ltemp	set	126
 11160  007E                     ltemp0	set	126
 11161  0082                     ltemp1	set	130
 11162  0086                     ltemp2	set	134
 11163  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    27
    Data        30
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      73
    BANK1            80     30      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___fttol
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___wmul->___fttol
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftge->___ftadd
    ___lwdiv->___wmul
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   49676
                                             45 BANK0     10    10      0
                                              0 BANK1     30    30      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8710
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4331
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     427
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     857
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15762
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6729
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     516
                                              0 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2509
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     640
                                             29 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3540
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3367
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     138
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___fttol (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
   ___fttol
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
       ___fttol (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
     ___fttol (ARG)
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___fttol (ARG)
       _frexp (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___fttol (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
         ___fttol (ARG)
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Sep 07 20:15:02 2017

                                _x 0062                        __CFG_CP$OFF 0000  
                               l30 09D9                                 l32 09DE  
                               l34 09E3                                 l28 09D3  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0022  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l208 096D  
                              l320 053E                                l321 054A  
                              l330 0774                                l509 0E60  
                              l622 0D34                                l454 0A53  
                              l623 0D3C                                l615 0D21  
                              l706 0F3D                                l646 03E4  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RA3 0063  
                              _RB2 006A                                _RA4 0064  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _log 0061                       ___awmod@sign 0076  
                  _TMR2_Initialize 0983                       __CFG_BORV$LO 0000  
                              wreg 0009                    __end_of_LCD_Cmd 09A4  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 002A  
                   _LCD_Set_Cursor 0C0B                       ___ftdiv@sign 002F  
                             l2030 0CF7                               l2110 0C54  
                             l2200 02DA                               l2034 0CFE  
                             l2122 0C61                               l2114 0C5B  
                             l2210 02F8                               l2202 02E3  
                             l2044 0D26                               l2036 0D08  
                             l2300 0423                               l2124 0C6D  
                             l2132 0C82                               l2212 0324  
                             l2204 02F4                               l2046 0D2E  
                             l2038 0D0D                               l2310 0125  
                             l2222 0A4D                               l2240 036D  
                             l2152 0C2B                               l2072 0025  
                             l2136 0C8A                               l2128 0C79  
                             l2216 0331                               l2250 0383  
                             l2090 004B                               l2082 002D  
                             l2066 001A                               l2244 0374  
                             l2340 0192                               l2332 017E  
                             l2316 013B                               l2084 0039  
                             l3028 0727                               l2270 03BA  
                             l2262 039D                               l2094 0054  
                             l2182 029D                               l3062 07C2  
                             l2280 03D6                               l2272 03BF  
                             l2344 019A                               l2328 0176  
                             l2192 02A4                               l2168 0A32  
                             l3056 0786                               l2362 0AB1  
                             l2290 0408                               l2282 03E0  
                             l2274 03C3                               l2098 005C  
                             l2194 02D1                               l2268 03B0  
                             l2286 03F6                               l2606 0BA6  
                             l2198 02D5                               l2368 0AC1  
                             l2624 0CE8                               l2704 0222  
                             l2802 0F6E                               l2554 0E3D  
                             l2546 0E2D                               l2740 007F  
                             l2564 0E4D                               l2556 0E3E  
                             l2724 0262                               l2830 0FDE  
                             l2822 0FC5                               l2910 0B2E  
                             l2574 0A8E                               l2582 0BE6  
                             l2808 0F84                               l2912 0B3A  
                             l2850 0A6E                               l2922 0B55  
                             l2586 0BFC                               l2746 0090  
                             l2860 0EE9                               l2676 01D8  
                             l2774 0E81                               l2766 0E71  
                             l2918 0B4C                               l2950 0458  
                             l1992 09DF                               l1984 09D5  
                             l2792 0EC8                               l2784 0EAF  
                             l2776 0E8F                               l2880 0F27  
                             l2696 01C8                               l2698 0217  
                             l2962 0509                               l1988 09DA  
                             l2788 0EBA                               l2892 0F4E  
                             l2972 0532                               l2886 0F34  
                             l2878 0F19                               l2888 0F40  
                             l2992 05A1                               l2984 0576  
                             l2994 05A3                               l2986 057A  
                             ?_log 0047                               l2998 05B1  
                             STR_1 101B                               STR_2 101B  
                             STR_3 101B                               u2005 0C73  
                             u2015 0C7A                               u3005 0FDF  
                             u2205 0A59                               _LATA 0016  
                             _LATB 0017                               u2055 0C17  
                             _LATC 0018                               u2090 0287  
                             u2315 039E                               u3115 0F35  
                             u2075 0C36                               u2155 0312  
                             u2405 03D7                               u3055 0EF0  
                             u2345 03B1                               u2505 017F  
                             _T2PR 028D                               u3155 0B31  
                             u2515 0185                               u2195 0A54  
                             u1725 0AD9                               u3085 0F1A  
                             u3245 0538                               u3407 0B82  
                             u2375 03C4                               u3175 0B3B  
                             u3255 0544                               u3417 0B8E  
                             u3185 0B45                               u2545 019B  
                             u1905 003A                        main@counter 00AC  
                             u3507 0DBC                               u3427 0D5C  
                             u1835 0D43                               u1755 0D03  
                             u3195 0B4D                               u2555 01A1  
                             u2475 0147                               u1915 0044  
                             u3517 0DCA                               u3437 0D69  
                             u2485 0157                               u1925 004C  
                             u3357 020E                               u2590 0B23  
                             u3527 0AE5                               u3447 0D74  
                             u1775 0D1C                               u3367 025A  
                             u3537 0AF0                               u3457 0D7D  
                             u2905 0EA4                               u3377 0272  
                             u3547 099E                               u3467 0D86  
                             u2915 0EB0                               u1795 0D29  
                             u3387 0E21                               u2765 09C6  
                             u3477 0D93                               u3397 0B76  
                             u1885 0030                               u3487 0DA0  
                             u3497 0DAD                               u1985 0C64  
                             u2875 0E84                               u2965 0F96  
                             u2895 0E90                               u2975 0FA6  
                             u2985 0FC6                               u2995 0FD5  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                ?_LCD_Write_String 0075                               _main 043B  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                 ??_LCD_Write_String 0077  
                             ttemp 007E                               wtemp 007E  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 027C  
                     ___ftmul@sign 002F                       ___fttol@exp1 007D  
                            ??_log 004A                       ___fttol@lval 0079  
          __end_of_TMR0_Initialize 0983                   __end_of_LCD_Init 0DCE  
                 __end_of_LCD_Port 09E5                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 0945  
                  __end_of___aldiv 0ED1                              _ADACQ 009D  
                            _ADCAP 009B                              _ADACT 0099  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0061                              _ADPRE 009C  
                  __end_of___ftadd 043B                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0C8F                              _ADRPT 010D  
                  __end_of___ftdiv 1000                    __end_of___ftneg 094D  
                  __end_of___ftmul 01C2                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0A84                    __end_of___fttol 0F57  
                            _T2CON 028E                main@readTemperature 00B9  
                            _T2HLT 028F                       main@counter2 00A8  
                  __end_of___lwdiv 0B5A                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 0959             __end_of_LCD_Set_Cursor 0C4A  
                    ___awtoft@sign 007D                              _frexp 0B94  
                            _errno 005C                      ___ftpack@sign 0074  
                            main@R 00A2                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 0AC9  
                  __initialization 07C9                        log@exponent 004B  
                     __end_of_main 07C9            __end_of_TMR2_Initialize 0992  
                           ??_main 004D                      ___fttol@sign1 0078  
                __end_of_LCD_Clear 093D                          ??_LCD_Cmd 0071  
                  ?_LCD_Set_Cursor 0073                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             ?_frexp 0070  
                           _ADLTHH 010F                             _ADLTHL 010E  
                           _ADRESH 008D                             _ADRESL 008C  
                           _ADSTAT 0097                             _ADUTHH 0111  
                 ___awdiv@dividend 0072                             _ADUTHL 0110  
                 __end_of___awtoft 0AA4                             _ANSELA 0F38  
                           _ANSELB 0F43                             _ANSELC 0F4E  
                 __end_of___ftpack 0D53                   __end_of___lbtoft 0A30  
               __CFG_RSTOSC$HFINT1 0000                             _T0CON0 001E  
                           _T0CON1 001F                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 09B7                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 0AF3  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0BCF             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 0A4A  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074                          ??___lwdiv 002A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 0966  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 09FD  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00BB                    _InitCustomChars 0AA4  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                _SYSTEM_Initialize 0B5A                   __end_oflog@coeff 101B  
          __end_of__initialization 07FD                          ?_LCD_Init 0070  
                        ?_LCD_Port 0070                         ___ftadd@f1 0030  
                       ___ftadd@f2 0033                         ___ftge@ff1 003D  
                       ___ftge@ff2 0040                    ??_LCD_Write_Int 0020  
               ?_SYSTEM_Initialize 0070                       eval_poly@res 0044  
                       ___ftdiv@f1 0023                         ___ftdiv@f2 0020  
                       ___ftdiv@f3 002B                    ?_LCD_Write_Char 0070  
                       ___ftneg@f1 0070                      LCD_Init@style 0075  
                       ___awtoft@c 0078                         ___lbtoft@c 007B  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
                       ___ftsub@f1 0040                         ___ftsub@f2 003D  
                       ___fttol@f1 0070                     __pcstackCOMMON 0070  
                        LCD_Port@a 0070                       __pidataBANK0 092F  
                     __pidataBANK1 09E5                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0BCF                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0081  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0B94  
                       __pbssBANK0 0057                         __pbssBANK1 00D6  
               __size_of_eval_poly 0060                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070                         __pmaintext 043B  
                          ?___ftge 003D                            ?___wmul 0020  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 0A16  
       __end_of_PWM6_LoadDutyValue 09CD          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0AC9  
                          _LCD_Cmd 0992                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0E4F                            ___cgram 00BE  
                  __size_of___ftge 003C                            ___awdiv 0010  
                          ___ftadd 0345                            ___awmod 0C4A  
                          ___ftdiv 0F57                            ___ftneg 0945  
                  __size_of___wmul 001C                            ___ftmul 010E  
                          ___ftsub 0A66                            ___fttol 0ED1  
                          ___lwdiv 0B25                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0CEF                   ??_LCD_Set_Cursor 0074  
                          __ptext1 01C2                            __ptext2 0DCE  
                          __ptext3 0A30                            __ptext4 027C  
                          __ptext5 0C4A                            __ptext6 0010  
                          __ptext7 0C0B                            __ptext8 0061  
                          __ptext9 0B94                         ??___lwtoft 007B  
            _OSCILLATOR_Initialize 093D                          _T2CONbits 028E  
                     __size_of_log 00AD                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 0061                            _samples 238C  
                        _LCD_Clear 0935                            _presets 0063  
       __size_of_SYSTEM_Initialize 003A                            clrloop0 094E  
             end_of_initialization 07FD                     main@outCurrent 00B7  
                          init_ram 0004                            initloop 0005  
                   ??_tempSetpoint 0031                   ___aldiv@quotient 0022  
                LCD_Write_Int@sign 007D                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0974              __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                         main@minute 00A0  
                __size_of_LCD_Init 007B                         main@toggle 00AE  
                __size_of_LCD_Port 0018                         main@totals 00AF  
                      ___ftmul@exp 002A                     __end_of___ftge 0C0B  
                   __end_of___wmul 0A66                   _LCD_Write_String 0A30  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07C9  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 010E  
                       frexp@value 0070           LCD_Write_Int@fieldLength 007B  
            __end_of_LCD_Write_Int 0345                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 007E  
                      __pdataBANK0 0063                        __pdataBANK1 00BE  
                    ??_readButtons 002E                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0966  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 027C                 _PWM6_LoadDutyValue 09B7  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070                          _main$1030 00A5  
                 ___lwdiv@dividend 0028             _PIN_MANAGER_Initialize 0AF3  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 0070  
                         ?___lwdiv 0026                    main@displayTemp 00B5  
             ??_PWM6_LoadDutyValue 0072                          _downCount 005E  
                        _eval_poly 0C8F                __end_of_readButtons 0E4F  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 002B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
           main@readTemperatureOld 00B3                    ___aldiv@divisor 0070  
                ??_TMR0_Initialize 0070                    ___aldiv@counter 0020  
                         _LCD_Init 0D53                     ___wmul@product 0024  
                         _LCD_Port 09CD                          clear_ram0 094D  
                         _PIE0bits 0716                           _PIR0bits 070C  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0020                         ?_eval_poly 003D  
                 __size_of_LCD_Cmd 0012           __end_of_LCD_Write_String 0A4A  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
             main@firstTimeThrough 00AA            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 002C                     LCD_Write_Int@j 002A  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0008  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0086                   __size_of___lwdiv 0035  
                      _readButtons 0DCE                           ___awtoft 0A84  
                         ___ftpack 0CEF                           ___lbtoft 0A16  
            __size_of_tempSetpoint 00BA                           ___lwtoft 09A4  
                       _T0CON0bits 001E           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 00D6                    ___lwdiv@divisor 0026  
                      _oldSetpoint 005F                    ___lwdiv@counter 002D  
                         __ptext10 0C8F                           __ptext11 0A4A  
                         __ptext20 0345                           __ptext12 010E  
                         __ptext21 0945                           __ptext13 0BCF  
                         __ptext30 093D                           __ptext22 0F57  
                         __ptext14 0A84                           __ptext31 0D53  
                         __ptext23 0CEF                           __ptext15 09A4  
                         __ptext32 0935                           __ptext24 0E4F  
                         __ptext16 0B25                           __ptext33 0AA4  
                         __ptext25 0B5A                           __ptext17 0A16  
                         __ptext34 0AC9                           __ptext26 0983  
                         __ptext18 0ED1                           __ptext35 0992  
                         __ptext27 0974                           __ptext19 0A66  
                         __ptext36 09CD                           __ptext28 0959  
                         __ptext37 09FD                           __ptext29 0AF3  
                         __ptext38 09B7                           __ptext39 0966  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0025  
              LCD_Write_Int@F13686 0057                  ??_PWM6_Initialize 0070  
                    __size_of_main 038E               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 01C2         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 0068        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                   main@startupTimer 00AB  
               LCD_Set_Cursor@temp 0079                 LCD_Write_Int@value 0079  
                  _TMR0_Initialize 0974                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0B25                  ??_ADCC_Initialize 0070  
                      _toggleCount 0060                  ??_InitCustomChars 0075  
