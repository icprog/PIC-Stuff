

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Sep 10 19:13:22 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5BC,52
    63                           	dabs	1,0x238C,0,_samples
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  001C                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0110                     	;# 
   120  0110                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0119                     	;# 
   132  0119                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011A                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  011C                     	;# 
   144  011C                     	;# 
   145  011D                     	;# 
   146  011D                     	;# 
   147  011D                     	;# 
   148  011E                     	;# 
   149  011E                     	;# 
   150  011E                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  018F                     	;# 
   160  0190                     	;# 
   161  0191                     	;# 
   162  0192                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0198                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  020F                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0218                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  028C                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  028F                     	;# 
   205  0290                     	;# 
   206  0290                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0293                     	;# 
   212  0294                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0296                     	;# 
   216  0297                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029B                     	;# 
   223  029C                     	;# 
   224  029C                     	;# 
   225  029D                     	;# 
   226  030C                     	;# 
   227  030C                     	;# 
   228  030D                     	;# 
   229  030E                     	;# 
   230  030F                     	;# 
   231  0310                     	;# 
   232  0310                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0314                     	;# 
   237  0314                     	;# 
   238  0315                     	;# 
   239  0316                     	;# 
   240  0317                     	;# 
   241  0318                     	;# 
   242  0318                     	;# 
   243  0319                     	;# 
   244  031A                     	;# 
   245  031B                     	;# 
   246  031C                     	;# 
   247  031C                     	;# 
   248  031D                     	;# 
   249  031E                     	;# 
   250  031F                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0390                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  040C                     	;# 
   258  040D                     	;# 
   259  040E                     	;# 
   260  040F                     	;# 
   261  0410                     	;# 
   262  0411                     	;# 
   263  0416                     	;# 
   264  0416                     	;# 
   265  0417                     	;# 
   266  0418                     	;# 
   267  0418                     	;# 
   268  0419                     	;# 
   269  041A                     	;# 
   270  041A                     	;# 
   271  041B                     	;# 
   272  041C                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  041F                     	;# 
   277  048C                     	;# 
   278  048C                     	;# 
   279  048D                     	;# 
   280  048E                     	;# 
   281  048F                     	;# 
   282  048F                     	;# 
   283  0490                     	;# 
   284  0491                     	;# 
   285  0492                     	;# 
   286  0492                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0495                     	;# 
   290  0495                     	;# 
   291  0496                     	;# 
   292  0497                     	;# 
   293  0498                     	;# 
   294  0499                     	;# 
   295  049A                     	;# 
   296  049B                     	;# 
   297  049C                     	;# 
   298  049D                     	;# 
   299  050C                     	;# 
   300  050C                     	;# 
   301  050D                     	;# 
   302  050E                     	;# 
   303  050F                     	;# 
   304  050F                     	;# 
   305  0510                     	;# 
   306  0511                     	;# 
   307  0512                     	;# 
   308  0512                     	;# 
   309  0513                     	;# 
   310  0514                     	;# 
   311  0515                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  051B                     	;# 
   319  051C                     	;# 
   320  051D                     	;# 
   321  058C                     	;# 
   322  058C                     	;# 
   323  058D                     	;# 
   324  058E                     	;# 
   325  058F                     	;# 
   326  058F                     	;# 
   327  0590                     	;# 
   328  0591                     	;# 
   329  0592                     	;# 
   330  0593                     	;# 
   331  060C                     	;# 
   332  060D                     	;# 
   333  060E                     	;# 
   334  060F                     	;# 
   335  0610                     	;# 
   336  0611                     	;# 
   337  0612                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0616                     	;# 
   341  0617                     	;# 
   342  0618                     	;# 
   343  0619                     	;# 
   344  061A                     	;# 
   345  061B                     	;# 
   346  061C                     	;# 
   347  061D                     	;# 
   348  061E                     	;# 
   349  068C                     	;# 
   350  068D                     	;# 
   351  068E                     	;# 
   352  068F                     	;# 
   353  0690                     	;# 
   354  0691                     	;# 
   355  0692                     	;# 
   356  0693                     	;# 
   357  0694                     	;# 
   358  070C                     	;# 
   359  070D                     	;# 
   360  070E                     	;# 
   361  070F                     	;# 
   362  0710                     	;# 
   363  0711                     	;# 
   364  0712                     	;# 
   365  0713                     	;# 
   366  0714                     	;# 
   367  0716                     	;# 
   368  0717                     	;# 
   369  0718                     	;# 
   370  0719                     	;# 
   371  071A                     	;# 
   372  071B                     	;# 
   373  071C                     	;# 
   374  071D                     	;# 
   375  071E                     	;# 
   376  0796                     	;# 
   377  0797                     	;# 
   378  0798                     	;# 
   379  0799                     	;# 
   380  079A                     	;# 
   381  079B                     	;# 
   382  080C                     	;# 
   383  080D                     	;# 
   384  080E                     	;# 
   385  080F                     	;# 
   386  0810                     	;# 
   387  0811                     	;# 
   388  0812                     	;# 
   389  0813                     	;# 
   390  0814                     	;# 
   391  081A                     	;# 
   392  081B                     	;# 
   393  081C                     	;# 
   394  081D                     	;# 
   395  081E                     	;# 
   396  081F                     	;# 
   397  088C                     	;# 
   398  088D                     	;# 
   399  088E                     	;# 
   400  088F                     	;# 
   401  0890                     	;# 
   402  0891                     	;# 
   403  0892                     	;# 
   404  0893                     	;# 
   405  0895                     	;# 
   406  0896                     	;# 
   407  0897                     	;# 
   408  0898                     	;# 
   409  0899                     	;# 
   410  089A                     	;# 
   411  089B                     	;# 
   412  090C                     	;# 
   413  090E                     	;# 
   414  090F                     	;# 
   415  091F                     	;# 
   416  091F                     	;# 
   417  098F                     	;# 
   418  098F                     	;# 
   419  0990                     	;# 
   420  0991                     	;# 
   421  0992                     	;# 
   422  0993                     	;# 
   423  0994                     	;# 
   424  0995                     	;# 
   425  0996                     	;# 
   426  0997                     	;# 
   427  0E0F                     	;# 
   428  0E10                     	;# 
   429  0E11                     	;# 
   430  0E12                     	;# 
   431  0E13                     	;# 
   432  0E14                     	;# 
   433  0E15                     	;# 
   434  0E16                     	;# 
   435  0E17                     	;# 
   436  0E18                     	;# 
   437  0E19                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E1D                     	;# 
   442  0E1E                     	;# 
   443  0E1F                     	;# 
   444  0E20                     	;# 
   445  0E21                     	;# 
   446  0E22                     	;# 
   447  0E23                     	;# 
   448  0E24                     	;# 
   449  0E25                     	;# 
   450  0E26                     	;# 
   451  0E27                     	;# 
   452  0E28                     	;# 
   453  0E29                     	;# 
   454  0E2A                     	;# 
   455  0E2B                     	;# 
   456  0E2C                     	;# 
   457  0E2D                     	;# 
   458  0E2E                     	;# 
   459  0E2F                     	;# 
   460  0E30                     	;# 
   461  0E31                     	;# 
   462  0E32                     	;# 
   463  0E33                     	;# 
   464  0E34                     	;# 
   465  0E35                     	;# 
   466  0E36                     	;# 
   467  0E37                     	;# 
   468  0E8F                     	;# 
   469  0E90                     	;# 
   470  0E91                     	;# 
   471  0E92                     	;# 
   472  0E93                     	;# 
   473  0E94                     	;# 
   474  0E95                     	;# 
   475  0E96                     	;# 
   476  0E97                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0EA1                     	;# 
   481  0EA2                     	;# 
   482  0EA3                     	;# 
   483  0EA4                     	;# 
   484  0EA5                     	;# 
   485  0EA9                     	;# 
   486  0EAA                     	;# 
   487  0EAB                     	;# 
   488  0EAC                     	;# 
   489  0EB1                     	;# 
   490  0EB2                     	;# 
   491  0EB3                     	;# 
   492  0EB8                     	;# 
   493  0EB9                     	;# 
   494  0EBA                     	;# 
   495  0EBB                     	;# 
   496  0EBC                     	;# 
   497  0EBD                     	;# 
   498  0EBE                     	;# 
   499  0EC3                     	;# 
   500  0EC5                     	;# 
   501  0EC6                     	;# 
   502  0EC7                     	;# 
   503  0EC8                     	;# 
   504  0EC9                     	;# 
   505  0ECA                     	;# 
   506  0ECB                     	;# 
   507  0ECC                     	;# 
   508  0F10                     	;# 
   509  0F11                     	;# 
   510  0F12                     	;# 
   511  0F13                     	;# 
   512  0F14                     	;# 
   513  0F15                     	;# 
   514  0F16                     	;# 
   515  0F17                     	;# 
   516  0F18                     	;# 
   517  0F19                     	;# 
   518  0F1A                     	;# 
   519  0F1B                     	;# 
   520  0F1C                     	;# 
   521  0F1D                     	;# 
   522  0F1E                     	;# 
   523  0F1F                     	;# 
   524  0F20                     	;# 
   525  0F21                     	;# 
   526  0F22                     	;# 
   527  0F23                     	;# 
   528  0F24                     	;# 
   529  0F25                     	;# 
   530  0F26                     	;# 
   531  0F27                     	;# 
   532  0F38                     	;# 
   533  0F39                     	;# 
   534  0F3A                     	;# 
   535  0F3B                     	;# 
   536  0F3C                     	;# 
   537  0F3D                     	;# 
   538  0F3E                     	;# 
   539  0F3F                     	;# 
   540  0F40                     	;# 
   541  0F41                     	;# 
   542  0F43                     	;# 
   543  0F44                     	;# 
   544  0F45                     	;# 
   545  0F46                     	;# 
   546  0F47                     	;# 
   547  0F48                     	;# 
   548  0F49                     	;# 
   549  0F4A                     	;# 
   550  0F4B                     	;# 
   551  0F4C                     	;# 
   552  0F4E                     	;# 
   553  0F4F                     	;# 
   554  0F50                     	;# 
   555  0F51                     	;# 
   556  0F52                     	;# 
   557  0F53                     	;# 
   558  0F54                     	;# 
   559  0F55                     	;# 
   560  0F56                     	;# 
   561  0F57                     	;# 
   562  0F65                     	;# 
   563  0F68                     	;# 
   564  0F69                     	;# 
   565  0F6A                     	;# 
   566  0F6B                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000D                     	;# 
   592  000E                     	;# 
   593  0010                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  001C                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001D                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0090                     	;# 
   614  0091                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0110                     	;# 
   633  0110                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  0119                     	;# 
   645  0119                     	;# 
   646  0119                     	;# 
   647  011A                     	;# 
   648  011A                     	;# 
   649  011A                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011C                     	;# 
   656  011C                     	;# 
   657  011C                     	;# 
   658  011D                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  011E                     	;# 
   662  011E                     	;# 
   663  011E                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  018E                     	;# 
   672  018F                     	;# 
   673  0190                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0196                     	;# 
   677  0197                     	;# 
   678  0198                     	;# 
   679  0199                     	;# 
   680  019A                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  020C                     	;# 
   684  020D                     	;# 
   685  020E                     	;# 
   686  020F                     	;# 
   687  020F                     	;# 
   688  0210                     	;# 
   689  0210                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0215                     	;# 
   696  0215                     	;# 
   697  0216                     	;# 
   698  0216                     	;# 
   699  0217                     	;# 
   700  0217                     	;# 
   701  0218                     	;# 
   702  0219                     	;# 
   703  021A                     	;# 
   704  021B                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021D                     	;# 
   710  021E                     	;# 
   711  021F                     	;# 
   712  028C                     	;# 
   713  028C                     	;# 
   714  028D                     	;# 
   715  028D                     	;# 
   716  028E                     	;# 
   717  028F                     	;# 
   718  0290                     	;# 
   719  0290                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0292                     	;# 
   723  0293                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0296                     	;# 
   728  0296                     	;# 
   729  0297                     	;# 
   730  0298                     	;# 
   731  0298                     	;# 
   732  0299                     	;# 
   733  0299                     	;# 
   734  029A                     	;# 
   735  029B                     	;# 
   736  029C                     	;# 
   737  029C                     	;# 
   738  029D                     	;# 
   739  030C                     	;# 
   740  030C                     	;# 
   741  030D                     	;# 
   742  030E                     	;# 
   743  030F                     	;# 
   744  0310                     	;# 
   745  0310                     	;# 
   746  0311                     	;# 
   747  0312                     	;# 
   748  0313                     	;# 
   749  0314                     	;# 
   750  0314                     	;# 
   751  0315                     	;# 
   752  0316                     	;# 
   753  0317                     	;# 
   754  0318                     	;# 
   755  0318                     	;# 
   756  0319                     	;# 
   757  031A                     	;# 
   758  031B                     	;# 
   759  031C                     	;# 
   760  031C                     	;# 
   761  031D                     	;# 
   762  031E                     	;# 
   763  031F                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  040C                     	;# 
   771  040D                     	;# 
   772  040E                     	;# 
   773  040F                     	;# 
   774  0410                     	;# 
   775  0411                     	;# 
   776  0416                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  0418                     	;# 
   780  0418                     	;# 
   781  0419                     	;# 
   782  041A                     	;# 
   783  041A                     	;# 
   784  041B                     	;# 
   785  041C                     	;# 
   786  041C                     	;# 
   787  041D                     	;# 
   788  041E                     	;# 
   789  041F                     	;# 
   790  048C                     	;# 
   791  048C                     	;# 
   792  048D                     	;# 
   793  048E                     	;# 
   794  048F                     	;# 
   795  048F                     	;# 
   796  0490                     	;# 
   797  0491                     	;# 
   798  0492                     	;# 
   799  0492                     	;# 
   800  0493                     	;# 
   801  0494                     	;# 
   802  0495                     	;# 
   803  0495                     	;# 
   804  0496                     	;# 
   805  0497                     	;# 
   806  0498                     	;# 
   807  0499                     	;# 
   808  049A                     	;# 
   809  049B                     	;# 
   810  049C                     	;# 
   811  049D                     	;# 
   812  050C                     	;# 
   813  050C                     	;# 
   814  050D                     	;# 
   815  050E                     	;# 
   816  050F                     	;# 
   817  050F                     	;# 
   818  0510                     	;# 
   819  0511                     	;# 
   820  0512                     	;# 
   821  0512                     	;# 
   822  0513                     	;# 
   823  0514                     	;# 
   824  0515                     	;# 
   825  0515                     	;# 
   826  0516                     	;# 
   827  0517                     	;# 
   828  0518                     	;# 
   829  0519                     	;# 
   830  051A                     	;# 
   831  051B                     	;# 
   832  051C                     	;# 
   833  051D                     	;# 
   834  058C                     	;# 
   835  058C                     	;# 
   836  058D                     	;# 
   837  058E                     	;# 
   838  058F                     	;# 
   839  058F                     	;# 
   840  0590                     	;# 
   841  0591                     	;# 
   842  0592                     	;# 
   843  0593                     	;# 
   844  060C                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  0616                     	;# 
   854  0617                     	;# 
   855  0618                     	;# 
   856  0619                     	;# 
   857  061A                     	;# 
   858  061B                     	;# 
   859  061C                     	;# 
   860  061D                     	;# 
   861  061E                     	;# 
   862  068C                     	;# 
   863  068D                     	;# 
   864  068E                     	;# 
   865  068F                     	;# 
   866  0690                     	;# 
   867  0691                     	;# 
   868  0692                     	;# 
   869  0693                     	;# 
   870  0694                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  080C                     	;# 
   896  080D                     	;# 
   897  080E                     	;# 
   898  080F                     	;# 
   899  0810                     	;# 
   900  0811                     	;# 
   901  0812                     	;# 
   902  0813                     	;# 
   903  0814                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081D                     	;# 
   908  081E                     	;# 
   909  081F                     	;# 
   910  088C                     	;# 
   911  088D                     	;# 
   912  088E                     	;# 
   913  088F                     	;# 
   914  0890                     	;# 
   915  0891                     	;# 
   916  0892                     	;# 
   917  0893                     	;# 
   918  0895                     	;# 
   919  0896                     	;# 
   920  0897                     	;# 
   921  0898                     	;# 
   922  0899                     	;# 
   923  089A                     	;# 
   924  089B                     	;# 
   925  090C                     	;# 
   926  090E                     	;# 
   927  090F                     	;# 
   928  091F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  0E0F                     	;# 
   941  0E10                     	;# 
   942  0E11                     	;# 
   943  0E12                     	;# 
   944  0E13                     	;# 
   945  0E14                     	;# 
   946  0E15                     	;# 
   947  0E16                     	;# 
   948  0E17                     	;# 
   949  0E18                     	;# 
   950  0E19                     	;# 
   951  0E1A                     	;# 
   952  0E1B                     	;# 
   953  0E1C                     	;# 
   954  0E1D                     	;# 
   955  0E1E                     	;# 
   956  0E1F                     	;# 
   957  0E20                     	;# 
   958  0E21                     	;# 
   959  0E22                     	;# 
   960  0E23                     	;# 
   961  0E24                     	;# 
   962  0E25                     	;# 
   963  0E26                     	;# 
   964  0E27                     	;# 
   965  0E28                     	;# 
   966  0E29                     	;# 
   967  0E2A                     	;# 
   968  0E2B                     	;# 
   969  0E2C                     	;# 
   970  0E2D                     	;# 
   971  0E2E                     	;# 
   972  0E2F                     	;# 
   973  0E30                     	;# 
   974  0E31                     	;# 
   975  0E32                     	;# 
   976  0E33                     	;# 
   977  0E34                     	;# 
   978  0E35                     	;# 
   979  0E36                     	;# 
   980  0E37                     	;# 
   981  0E8F                     	;# 
   982  0E90                     	;# 
   983  0E91                     	;# 
   984  0E92                     	;# 
   985  0E93                     	;# 
   986  0E94                     	;# 
   987  0E95                     	;# 
   988  0E96                     	;# 
   989  0E97                     	;# 
   990  0E9C                     	;# 
   991  0E9D                     	;# 
   992  0E9E                     	;# 
   993  0EA1                     	;# 
   994  0EA2                     	;# 
   995  0EA3                     	;# 
   996  0EA4                     	;# 
   997  0EA5                     	;# 
   998  0EA9                     	;# 
   999  0EAA                     	;# 
  1000  0EAB                     	;# 
  1001  0EAC                     	;# 
  1002  0EB1                     	;# 
  1003  0EB2                     	;# 
  1004  0EB3                     	;# 
  1005  0EB8                     	;# 
  1006  0EB9                     	;# 
  1007  0EBA                     	;# 
  1008  0EBB                     	;# 
  1009  0EBC                     	;# 
  1010  0EBD                     	;# 
  1011  0EBE                     	;# 
  1012  0EC3                     	;# 
  1013  0EC5                     	;# 
  1014  0EC6                     	;# 
  1015  0EC7                     	;# 
  1016  0EC8                     	;# 
  1017  0EC9                     	;# 
  1018  0ECA                     	;# 
  1019  0ECB                     	;# 
  1020  0ECC                     	;# 
  1021  0F10                     	;# 
  1022  0F11                     	;# 
  1023  0F12                     	;# 
  1024  0F13                     	;# 
  1025  0F14                     	;# 
  1026  0F15                     	;# 
  1027  0F16                     	;# 
  1028  0F17                     	;# 
  1029  0F18                     	;# 
  1030  0F19                     	;# 
  1031  0F1A                     	;# 
  1032  0F1B                     	;# 
  1033  0F1C                     	;# 
  1034  0F1D                     	;# 
  1035  0F1E                     	;# 
  1036  0F1F                     	;# 
  1037  0F20                     	;# 
  1038  0F21                     	;# 
  1039  0F22                     	;# 
  1040  0F23                     	;# 
  1041  0F24                     	;# 
  1042  0F25                     	;# 
  1043  0F26                     	;# 
  1044  0F27                     	;# 
  1045  0F38                     	;# 
  1046  0F39                     	;# 
  1047  0F3A                     	;# 
  1048  0F3B                     	;# 
  1049  0F3C                     	;# 
  1050  0F3D                     	;# 
  1051  0F3E                     	;# 
  1052  0F3F                     	;# 
  1053  0F40                     	;# 
  1054  0F41                     	;# 
  1055  0F43                     	;# 
  1056  0F44                     	;# 
  1057  0F45                     	;# 
  1058  0F46                     	;# 
  1059  0F47                     	;# 
  1060  0F48                     	;# 
  1061  0F49                     	;# 
  1062  0F4A                     	;# 
  1063  0F4B                     	;# 
  1064  0F4C                     	;# 
  1065  0F4E                     	;# 
  1066  0F4F                     	;# 
  1067  0F50                     	;# 
  1068  0F51                     	;# 
  1069  0F52                     	;# 
  1070  0F53                     	;# 
  1071  0F54                     	;# 
  1072  0F55                     	;# 
  1073  0F56                     	;# 
  1074  0F57                     	;# 
  1075  0F65                     	;# 
  1076  0F68                     	;# 
  1077  0F69                     	;# 
  1078  0F6A                     	;# 
  1079  0F6B                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0016                     	;# 
  1111  0017                     	;# 
  1112  0018                     	;# 
  1113  001C                     	;# 
  1114  001C                     	;# 
  1115  001D                     	;# 
  1116  001D                     	;# 
  1117  001E                     	;# 
  1118  001F                     	;# 
  1119  008C                     	;# 
  1120  008C                     	;# 
  1121  008D                     	;# 
  1122  008E                     	;# 
  1123  008E                     	;# 
  1124  008F                     	;# 
  1125  0090                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0093                     	;# 
  1129  0094                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0097                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009A                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  010C                     	;# 
  1141  010D                     	;# 
  1142  010E                     	;# 
  1143  010E                     	;# 
  1144  010F                     	;# 
  1145  0110                     	;# 
  1146  0110                     	;# 
  1147  0111                     	;# 
  1148  0112                     	;# 
  1149  0112                     	;# 
  1150  0113                     	;# 
  1151  0114                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0119                     	;# 
  1158  0119                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011A                     	;# 
  1162  011A                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011B                     	;# 
  1167  011B                     	;# 
  1168  011C                     	;# 
  1169  011C                     	;# 
  1170  011C                     	;# 
  1171  011D                     	;# 
  1172  011D                     	;# 
  1173  011D                     	;# 
  1174  011E                     	;# 
  1175  011E                     	;# 
  1176  011E                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  011F                     	;# 
  1181  011F                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0196                     	;# 
  1190  0197                     	;# 
  1191  0198                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  020C                     	;# 
  1197  020D                     	;# 
  1198  020E                     	;# 
  1199  020F                     	;# 
  1200  020F                     	;# 
  1201  0210                     	;# 
  1202  0210                     	;# 
  1203  0211                     	;# 
  1204  0211                     	;# 
  1205  0212                     	;# 
  1206  0213                     	;# 
  1207  0214                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0216                     	;# 
  1211  0216                     	;# 
  1212  0217                     	;# 
  1213  0217                     	;# 
  1214  0218                     	;# 
  1215  0219                     	;# 
  1216  021A                     	;# 
  1217  021B                     	;# 
  1218  021B                     	;# 
  1219  021C                     	;# 
  1220  021C                     	;# 
  1221  021D                     	;# 
  1222  021D                     	;# 
  1223  021E                     	;# 
  1224  021F                     	;# 
  1225  028C                     	;# 
  1226  028C                     	;# 
  1227  028D                     	;# 
  1228  028D                     	;# 
  1229  028E                     	;# 
  1230  028F                     	;# 
  1231  0290                     	;# 
  1232  0290                     	;# 
  1233  0291                     	;# 
  1234  0292                     	;# 
  1235  0292                     	;# 
  1236  0293                     	;# 
  1237  0293                     	;# 
  1238  0294                     	;# 
  1239  0295                     	;# 
  1240  0296                     	;# 
  1241  0296                     	;# 
  1242  0297                     	;# 
  1243  0298                     	;# 
  1244  0298                     	;# 
  1245  0299                     	;# 
  1246  0299                     	;# 
  1247  029A                     	;# 
  1248  029B                     	;# 
  1249  029C                     	;# 
  1250  029C                     	;# 
  1251  029D                     	;# 
  1252  030C                     	;# 
  1253  030C                     	;# 
  1254  030D                     	;# 
  1255  030E                     	;# 
  1256  030F                     	;# 
  1257  0310                     	;# 
  1258  0310                     	;# 
  1259  0311                     	;# 
  1260  0312                     	;# 
  1261  0313                     	;# 
  1262  0314                     	;# 
  1263  0314                     	;# 
  1264  0315                     	;# 
  1265  0316                     	;# 
  1266  0317                     	;# 
  1267  0318                     	;# 
  1268  0318                     	;# 
  1269  0319                     	;# 
  1270  031A                     	;# 
  1271  031B                     	;# 
  1272  031C                     	;# 
  1273  031C                     	;# 
  1274  031D                     	;# 
  1275  031E                     	;# 
  1276  031F                     	;# 
  1277  038C                     	;# 
  1278  038D                     	;# 
  1279  038E                     	;# 
  1280  0390                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  040C                     	;# 
  1284  040D                     	;# 
  1285  040E                     	;# 
  1286  040F                     	;# 
  1287  0410                     	;# 
  1288  0411                     	;# 
  1289  0416                     	;# 
  1290  0416                     	;# 
  1291  0417                     	;# 
  1292  0418                     	;# 
  1293  0418                     	;# 
  1294  0419                     	;# 
  1295  041A                     	;# 
  1296  041A                     	;# 
  1297  041B                     	;# 
  1298  041C                     	;# 
  1299  041C                     	;# 
  1300  041D                     	;# 
  1301  041E                     	;# 
  1302  041F                     	;# 
  1303  048C                     	;# 
  1304  048C                     	;# 
  1305  048D                     	;# 
  1306  048E                     	;# 
  1307  048F                     	;# 
  1308  048F                     	;# 
  1309  0490                     	;# 
  1310  0491                     	;# 
  1311  0492                     	;# 
  1312  0492                     	;# 
  1313  0493                     	;# 
  1314  0494                     	;# 
  1315  0495                     	;# 
  1316  0495                     	;# 
  1317  0496                     	;# 
  1318  0497                     	;# 
  1319  0498                     	;# 
  1320  0499                     	;# 
  1321  049A                     	;# 
  1322  049B                     	;# 
  1323  049C                     	;# 
  1324  049D                     	;# 
  1325  050C                     	;# 
  1326  050C                     	;# 
  1327  050D                     	;# 
  1328  050E                     	;# 
  1329  050F                     	;# 
  1330  050F                     	;# 
  1331  0510                     	;# 
  1332  0511                     	;# 
  1333  0512                     	;# 
  1334  0512                     	;# 
  1335  0513                     	;# 
  1336  0514                     	;# 
  1337  0515                     	;# 
  1338  0515                     	;# 
  1339  0516                     	;# 
  1340  0517                     	;# 
  1341  0518                     	;# 
  1342  0519                     	;# 
  1343  051A                     	;# 
  1344  051B                     	;# 
  1345  051C                     	;# 
  1346  051D                     	;# 
  1347  058C                     	;# 
  1348  058C                     	;# 
  1349  058D                     	;# 
  1350  058E                     	;# 
  1351  058F                     	;# 
  1352  058F                     	;# 
  1353  0590                     	;# 
  1354  0591                     	;# 
  1355  0592                     	;# 
  1356  0593                     	;# 
  1357  060C                     	;# 
  1358  060D                     	;# 
  1359  060E                     	;# 
  1360  060F                     	;# 
  1361  0610                     	;# 
  1362  0611                     	;# 
  1363  0612                     	;# 
  1364  0613                     	;# 
  1365  0614                     	;# 
  1366  0616                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  061A                     	;# 
  1371  061B                     	;# 
  1372  061C                     	;# 
  1373  061D                     	;# 
  1374  061E                     	;# 
  1375  068C                     	;# 
  1376  068D                     	;# 
  1377  068E                     	;# 
  1378  068F                     	;# 
  1379  0690                     	;# 
  1380  0691                     	;# 
  1381  0692                     	;# 
  1382  0693                     	;# 
  1383  0694                     	;# 
  1384  070C                     	;# 
  1385  070D                     	;# 
  1386  070E                     	;# 
  1387  070F                     	;# 
  1388  0710                     	;# 
  1389  0711                     	;# 
  1390  0712                     	;# 
  1391  0713                     	;# 
  1392  0714                     	;# 
  1393  0716                     	;# 
  1394  0717                     	;# 
  1395  0718                     	;# 
  1396  0719                     	;# 
  1397  071A                     	;# 
  1398  071B                     	;# 
  1399  071C                     	;# 
  1400  071D                     	;# 
  1401  071E                     	;# 
  1402  0796                     	;# 
  1403  0797                     	;# 
  1404  0798                     	;# 
  1405  0799                     	;# 
  1406  079A                     	;# 
  1407  079B                     	;# 
  1408  080C                     	;# 
  1409  080D                     	;# 
  1410  080E                     	;# 
  1411  080F                     	;# 
  1412  0810                     	;# 
  1413  0811                     	;# 
  1414  0812                     	;# 
  1415  0813                     	;# 
  1416  0814                     	;# 
  1417  081A                     	;# 
  1418  081B                     	;# 
  1419  081C                     	;# 
  1420  081D                     	;# 
  1421  081E                     	;# 
  1422  081F                     	;# 
  1423  088C                     	;# 
  1424  088D                     	;# 
  1425  088E                     	;# 
  1426  088F                     	;# 
  1427  0890                     	;# 
  1428  0891                     	;# 
  1429  0892                     	;# 
  1430  0893                     	;# 
  1431  0895                     	;# 
  1432  0896                     	;# 
  1433  0897                     	;# 
  1434  0898                     	;# 
  1435  0899                     	;# 
  1436  089A                     	;# 
  1437  089B                     	;# 
  1438  090C                     	;# 
  1439  090E                     	;# 
  1440  090F                     	;# 
  1441  091F                     	;# 
  1442  091F                     	;# 
  1443  098F                     	;# 
  1444  098F                     	;# 
  1445  0990                     	;# 
  1446  0991                     	;# 
  1447  0992                     	;# 
  1448  0993                     	;# 
  1449  0994                     	;# 
  1450  0995                     	;# 
  1451  0996                     	;# 
  1452  0997                     	;# 
  1453  0E0F                     	;# 
  1454  0E10                     	;# 
  1455  0E11                     	;# 
  1456  0E12                     	;# 
  1457  0E13                     	;# 
  1458  0E14                     	;# 
  1459  0E15                     	;# 
  1460  0E16                     	;# 
  1461  0E17                     	;# 
  1462  0E18                     	;# 
  1463  0E19                     	;# 
  1464  0E1A                     	;# 
  1465  0E1B                     	;# 
  1466  0E1C                     	;# 
  1467  0E1D                     	;# 
  1468  0E1E                     	;# 
  1469  0E1F                     	;# 
  1470  0E20                     	;# 
  1471  0E21                     	;# 
  1472  0E22                     	;# 
  1473  0E23                     	;# 
  1474  0E24                     	;# 
  1475  0E25                     	;# 
  1476  0E26                     	;# 
  1477  0E27                     	;# 
  1478  0E28                     	;# 
  1479  0E29                     	;# 
  1480  0E2A                     	;# 
  1481  0E2B                     	;# 
  1482  0E2C                     	;# 
  1483  0E2D                     	;# 
  1484  0E2E                     	;# 
  1485  0E2F                     	;# 
  1486  0E30                     	;# 
  1487  0E31                     	;# 
  1488  0E32                     	;# 
  1489  0E33                     	;# 
  1490  0E34                     	;# 
  1491  0E35                     	;# 
  1492  0E36                     	;# 
  1493  0E37                     	;# 
  1494  0E8F                     	;# 
  1495  0E90                     	;# 
  1496  0E91                     	;# 
  1497  0E92                     	;# 
  1498  0E93                     	;# 
  1499  0E94                     	;# 
  1500  0E95                     	;# 
  1501  0E96                     	;# 
  1502  0E97                     	;# 
  1503  0E9C                     	;# 
  1504  0E9D                     	;# 
  1505  0E9E                     	;# 
  1506  0EA1                     	;# 
  1507  0EA2                     	;# 
  1508  0EA3                     	;# 
  1509  0EA4                     	;# 
  1510  0EA5                     	;# 
  1511  0EA9                     	;# 
  1512  0EAA                     	;# 
  1513  0EAB                     	;# 
  1514  0EAC                     	;# 
  1515  0EB1                     	;# 
  1516  0EB2                     	;# 
  1517  0EB3                     	;# 
  1518  0EB8                     	;# 
  1519  0EB9                     	;# 
  1520  0EBA                     	;# 
  1521  0EBB                     	;# 
  1522  0EBC                     	;# 
  1523  0EBD                     	;# 
  1524  0EBE                     	;# 
  1525  0EC3                     	;# 
  1526  0EC5                     	;# 
  1527  0EC6                     	;# 
  1528  0EC7                     	;# 
  1529  0EC8                     	;# 
  1530  0EC9                     	;# 
  1531  0ECA                     	;# 
  1532  0ECB                     	;# 
  1533  0ECC                     	;# 
  1534  0F10                     	;# 
  1535  0F11                     	;# 
  1536  0F12                     	;# 
  1537  0F13                     	;# 
  1538  0F14                     	;# 
  1539  0F15                     	;# 
  1540  0F16                     	;# 
  1541  0F17                     	;# 
  1542  0F18                     	;# 
  1543  0F19                     	;# 
  1544  0F1A                     	;# 
  1545  0F1B                     	;# 
  1546  0F1C                     	;# 
  1547  0F1D                     	;# 
  1548  0F1E                     	;# 
  1549  0F1F                     	;# 
  1550  0F20                     	;# 
  1551  0F21                     	;# 
  1552  0F22                     	;# 
  1553  0F23                     	;# 
  1554  0F24                     	;# 
  1555  0F25                     	;# 
  1556  0F26                     	;# 
  1557  0F27                     	;# 
  1558  0F38                     	;# 
  1559  0F39                     	;# 
  1560  0F3A                     	;# 
  1561  0F3B                     	;# 
  1562  0F3C                     	;# 
  1563  0F3D                     	;# 
  1564  0F3E                     	;# 
  1565  0F3F                     	;# 
  1566  0F40                     	;# 
  1567  0F41                     	;# 
  1568  0F43                     	;# 
  1569  0F44                     	;# 
  1570  0F45                     	;# 
  1571  0F46                     	;# 
  1572  0F47                     	;# 
  1573  0F48                     	;# 
  1574  0F49                     	;# 
  1575  0F4A                     	;# 
  1576  0F4B                     	;# 
  1577  0F4C                     	;# 
  1578  0F4E                     	;# 
  1579  0F4F                     	;# 
  1580  0F50                     	;# 
  1581  0F51                     	;# 
  1582  0F52                     	;# 
  1583  0F53                     	;# 
  1584  0F54                     	;# 
  1585  0F55                     	;# 
  1586  0F56                     	;# 
  1587  0F57                     	;# 
  1588  0F65                     	;# 
  1589  0F68                     	;# 
  1590  0F69                     	;# 
  1591  0F6A                     	;# 
  1592  0F6B                     	;# 
  1593  0FE4                     	;# 
  1594  0FE5                     	;# 
  1595  0FE6                     	;# 
  1596  0FE7                     	;# 
  1597  0FE8                     	;# 
  1598  0FE9                     	;# 
  1599  0FEA                     	;# 
  1600  0FEB                     	;# 
  1601  0FED                     	;# 
  1602  0FEE                     	;# 
  1603  0FEF                     	;# 
  1604  0000                     	;# 
  1605  0001                     	;# 
  1606  0002                     	;# 
  1607  0003                     	;# 
  1608  0004                     	;# 
  1609  0005                     	;# 
  1610  0006                     	;# 
  1611  0007                     	;# 
  1612  0008                     	;# 
  1613  0009                     	;# 
  1614  000A                     	;# 
  1615  000B                     	;# 
  1616  000C                     	;# 
  1617  000D                     	;# 
  1618  000E                     	;# 
  1619  0010                     	;# 
  1620  0011                     	;# 
  1621  0012                     	;# 
  1622  0013                     	;# 
  1623  0016                     	;# 
  1624  0017                     	;# 
  1625  0018                     	;# 
  1626  001C                     	;# 
  1627  001C                     	;# 
  1628  001D                     	;# 
  1629  001D                     	;# 
  1630  001E                     	;# 
  1631  001F                     	;# 
  1632  008C                     	;# 
  1633  008C                     	;# 
  1634  008D                     	;# 
  1635  008E                     	;# 
  1636  008E                     	;# 
  1637  008F                     	;# 
  1638  0090                     	;# 
  1639  0090                     	;# 
  1640  0091                     	;# 
  1641  0093                     	;# 
  1642  0094                     	;# 
  1643  0095                     	;# 
  1644  0096                     	;# 
  1645  0097                     	;# 
  1646  0098                     	;# 
  1647  0099                     	;# 
  1648  009A                     	;# 
  1649  009B                     	;# 
  1650  009C                     	;# 
  1651  009D                     	;# 
  1652  009E                     	;# 
  1653  010C                     	;# 
  1654  010D                     	;# 
  1655  010E                     	;# 
  1656  010E                     	;# 
  1657  010F                     	;# 
  1658  0110                     	;# 
  1659  0110                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0112                     	;# 
  1663  0113                     	;# 
  1664  0114                     	;# 
  1665  0114                     	;# 
  1666  0115                     	;# 
  1667  0116                     	;# 
  1668  0116                     	;# 
  1669  0117                     	;# 
  1670  0119                     	;# 
  1671  0119                     	;# 
  1672  0119                     	;# 
  1673  011A                     	;# 
  1674  011A                     	;# 
  1675  011A                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011B                     	;# 
  1680  011B                     	;# 
  1681  011C                     	;# 
  1682  011C                     	;# 
  1683  011C                     	;# 
  1684  011D                     	;# 
  1685  011D                     	;# 
  1686  011D                     	;# 
  1687  011E                     	;# 
  1688  011E                     	;# 
  1689  011E                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  011F                     	;# 
  1694  011F                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018E                     	;# 
  1698  018F                     	;# 
  1699  0190                     	;# 
  1700  0191                     	;# 
  1701  0192                     	;# 
  1702  0196                     	;# 
  1703  0197                     	;# 
  1704  0198                     	;# 
  1705  0199                     	;# 
  1706  019A                     	;# 
  1707  019B                     	;# 
  1708  019C                     	;# 
  1709  020C                     	;# 
  1710  020D                     	;# 
  1711  020E                     	;# 
  1712  020F                     	;# 
  1713  020F                     	;# 
  1714  0210                     	;# 
  1715  0210                     	;# 
  1716  0211                     	;# 
  1717  0211                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0214                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0218                     	;# 
  1728  0219                     	;# 
  1729  021A                     	;# 
  1730  021B                     	;# 
  1731  021B                     	;# 
  1732  021C                     	;# 
  1733  021C                     	;# 
  1734  021D                     	;# 
  1735  021D                     	;# 
  1736  021E                     	;# 
  1737  021F                     	;# 
  1738  028C                     	;# 
  1739  028C                     	;# 
  1740  028D                     	;# 
  1741  028D                     	;# 
  1742  028E                     	;# 
  1743  028F                     	;# 
  1744  0290                     	;# 
  1745  0290                     	;# 
  1746  0291                     	;# 
  1747  0292                     	;# 
  1748  0292                     	;# 
  1749  0293                     	;# 
  1750  0293                     	;# 
  1751  0294                     	;# 
  1752  0295                     	;# 
  1753  0296                     	;# 
  1754  0296                     	;# 
  1755  0297                     	;# 
  1756  0298                     	;# 
  1757  0298                     	;# 
  1758  0299                     	;# 
  1759  0299                     	;# 
  1760  029A                     	;# 
  1761  029B                     	;# 
  1762  029C                     	;# 
  1763  029C                     	;# 
  1764  029D                     	;# 
  1765  030C                     	;# 
  1766  030C                     	;# 
  1767  030D                     	;# 
  1768  030E                     	;# 
  1769  030F                     	;# 
  1770  0310                     	;# 
  1771  0310                     	;# 
  1772  0311                     	;# 
  1773  0312                     	;# 
  1774  0313                     	;# 
  1775  0314                     	;# 
  1776  0314                     	;# 
  1777  0315                     	;# 
  1778  0316                     	;# 
  1779  0317                     	;# 
  1780  0318                     	;# 
  1781  0318                     	;# 
  1782  0319                     	;# 
  1783  031A                     	;# 
  1784  031B                     	;# 
  1785  031C                     	;# 
  1786  031C                     	;# 
  1787  031D                     	;# 
  1788  031E                     	;# 
  1789  031F                     	;# 
  1790  038C                     	;# 
  1791  038D                     	;# 
  1792  038E                     	;# 
  1793  0390                     	;# 
  1794  0391                     	;# 
  1795  0392                     	;# 
  1796  040C                     	;# 
  1797  040D                     	;# 
  1798  040E                     	;# 
  1799  040F                     	;# 
  1800  0410                     	;# 
  1801  0411                     	;# 
  1802  0416                     	;# 
  1803  0416                     	;# 
  1804  0417                     	;# 
  1805  0418                     	;# 
  1806  0418                     	;# 
  1807  0419                     	;# 
  1808  041A                     	;# 
  1809  041A                     	;# 
  1810  041B                     	;# 
  1811  041C                     	;# 
  1812  041C                     	;# 
  1813  041D                     	;# 
  1814  041E                     	;# 
  1815  041F                     	;# 
  1816  048C                     	;# 
  1817  048C                     	;# 
  1818  048D                     	;# 
  1819  048E                     	;# 
  1820  048F                     	;# 
  1821  048F                     	;# 
  1822  0490                     	;# 
  1823  0491                     	;# 
  1824  0492                     	;# 
  1825  0492                     	;# 
  1826  0493                     	;# 
  1827  0494                     	;# 
  1828  0495                     	;# 
  1829  0495                     	;# 
  1830  0496                     	;# 
  1831  0497                     	;# 
  1832  0498                     	;# 
  1833  0499                     	;# 
  1834  049A                     	;# 
  1835  049B                     	;# 
  1836  049C                     	;# 
  1837  049D                     	;# 
  1838  050C                     	;# 
  1839  050C                     	;# 
  1840  050D                     	;# 
  1841  050E                     	;# 
  1842  050F                     	;# 
  1843  050F                     	;# 
  1844  0510                     	;# 
  1845  0511                     	;# 
  1846  0512                     	;# 
  1847  0512                     	;# 
  1848  0513                     	;# 
  1849  0514                     	;# 
  1850  0515                     	;# 
  1851  0515                     	;# 
  1852  0516                     	;# 
  1853  0517                     	;# 
  1854  0518                     	;# 
  1855  0519                     	;# 
  1856  051A                     	;# 
  1857  051B                     	;# 
  1858  051C                     	;# 
  1859  051D                     	;# 
  1860  058C                     	;# 
  1861  058C                     	;# 
  1862  058D                     	;# 
  1863  058E                     	;# 
  1864  058F                     	;# 
  1865  058F                     	;# 
  1866  0590                     	;# 
  1867  0591                     	;# 
  1868  0592                     	;# 
  1869  0593                     	;# 
  1870  060C                     	;# 
  1871  060D                     	;# 
  1872  060E                     	;# 
  1873  060F                     	;# 
  1874  0610                     	;# 
  1875  0611                     	;# 
  1876  0612                     	;# 
  1877  0613                     	;# 
  1878  0614                     	;# 
  1879  0616                     	;# 
  1880  0617                     	;# 
  1881  0618                     	;# 
  1882  0619                     	;# 
  1883  061A                     	;# 
  1884  061B                     	;# 
  1885  061C                     	;# 
  1886  061D                     	;# 
  1887  061E                     	;# 
  1888  068C                     	;# 
  1889  068D                     	;# 
  1890  068E                     	;# 
  1891  068F                     	;# 
  1892  0690                     	;# 
  1893  0691                     	;# 
  1894  0692                     	;# 
  1895  0693                     	;# 
  1896  0694                     	;# 
  1897  070C                     	;# 
  1898  070D                     	;# 
  1899  070E                     	;# 
  1900  070F                     	;# 
  1901  0710                     	;# 
  1902  0711                     	;# 
  1903  0712                     	;# 
  1904  0713                     	;# 
  1905  0714                     	;# 
  1906  0716                     	;# 
  1907  0717                     	;# 
  1908  0718                     	;# 
  1909  0719                     	;# 
  1910  071A                     	;# 
  1911  071B                     	;# 
  1912  071C                     	;# 
  1913  071D                     	;# 
  1914  071E                     	;# 
  1915  0796                     	;# 
  1916  0797                     	;# 
  1917  0798                     	;# 
  1918  0799                     	;# 
  1919  079A                     	;# 
  1920  079B                     	;# 
  1921  080C                     	;# 
  1922  080D                     	;# 
  1923  080E                     	;# 
  1924  080F                     	;# 
  1925  0810                     	;# 
  1926  0811                     	;# 
  1927  0812                     	;# 
  1928  0813                     	;# 
  1929  0814                     	;# 
  1930  081A                     	;# 
  1931  081B                     	;# 
  1932  081C                     	;# 
  1933  081D                     	;# 
  1934  081E                     	;# 
  1935  081F                     	;# 
  1936  088C                     	;# 
  1937  088D                     	;# 
  1938  088E                     	;# 
  1939  088F                     	;# 
  1940  0890                     	;# 
  1941  0891                     	;# 
  1942  0892                     	;# 
  1943  0893                     	;# 
  1944  0895                     	;# 
  1945  0896                     	;# 
  1946  0897                     	;# 
  1947  0898                     	;# 
  1948  0899                     	;# 
  1949  089A                     	;# 
  1950  089B                     	;# 
  1951  090C                     	;# 
  1952  090E                     	;# 
  1953  090F                     	;# 
  1954  091F                     	;# 
  1955  091F                     	;# 
  1956  098F                     	;# 
  1957  098F                     	;# 
  1958  0990                     	;# 
  1959  0991                     	;# 
  1960  0992                     	;# 
  1961  0993                     	;# 
  1962  0994                     	;# 
  1963  0995                     	;# 
  1964  0996                     	;# 
  1965  0997                     	;# 
  1966  0E0F                     	;# 
  1967  0E10                     	;# 
  1968  0E11                     	;# 
  1969  0E12                     	;# 
  1970  0E13                     	;# 
  1971  0E14                     	;# 
  1972  0E15                     	;# 
  1973  0E16                     	;# 
  1974  0E17                     	;# 
  1975  0E18                     	;# 
  1976  0E19                     	;# 
  1977  0E1A                     	;# 
  1978  0E1B                     	;# 
  1979  0E1C                     	;# 
  1980  0E1D                     	;# 
  1981  0E1E                     	;# 
  1982  0E1F                     	;# 
  1983  0E20                     	;# 
  1984  0E21                     	;# 
  1985  0E22                     	;# 
  1986  0E23                     	;# 
  1987  0E24                     	;# 
  1988  0E25                     	;# 
  1989  0E26                     	;# 
  1990  0E27                     	;# 
  1991  0E28                     	;# 
  1992  0E29                     	;# 
  1993  0E2A                     	;# 
  1994  0E2B                     	;# 
  1995  0E2C                     	;# 
  1996  0E2D                     	;# 
  1997  0E2E                     	;# 
  1998  0E2F                     	;# 
  1999  0E30                     	;# 
  2000  0E31                     	;# 
  2001  0E32                     	;# 
  2002  0E33                     	;# 
  2003  0E34                     	;# 
  2004  0E35                     	;# 
  2005  0E36                     	;# 
  2006  0E37                     	;# 
  2007  0E8F                     	;# 
  2008  0E90                     	;# 
  2009  0E91                     	;# 
  2010  0E92                     	;# 
  2011  0E93                     	;# 
  2012  0E94                     	;# 
  2013  0E95                     	;# 
  2014  0E96                     	;# 
  2015  0E97                     	;# 
  2016  0E9C                     	;# 
  2017  0E9D                     	;# 
  2018  0E9E                     	;# 
  2019  0EA1                     	;# 
  2020  0EA2                     	;# 
  2021  0EA3                     	;# 
  2022  0EA4                     	;# 
  2023  0EA5                     	;# 
  2024  0EA9                     	;# 
  2025  0EAA                     	;# 
  2026  0EAB                     	;# 
  2027  0EAC                     	;# 
  2028  0EB1                     	;# 
  2029  0EB2                     	;# 
  2030  0EB3                     	;# 
  2031  0EB8                     	;# 
  2032  0EB9                     	;# 
  2033  0EBA                     	;# 
  2034  0EBB                     	;# 
  2035  0EBC                     	;# 
  2036  0EBD                     	;# 
  2037  0EBE                     	;# 
  2038  0EC3                     	;# 
  2039  0EC5                     	;# 
  2040  0EC6                     	;# 
  2041  0EC7                     	;# 
  2042  0EC8                     	;# 
  2043  0EC9                     	;# 
  2044  0ECA                     	;# 
  2045  0ECB                     	;# 
  2046  0ECC                     	;# 
  2047  0F10                     	;# 
  2048  0F11                     	;# 
  2049  0F12                     	;# 
  2050  0F13                     	;# 
  2051  0F14                     	;# 
  2052  0F15                     	;# 
  2053  0F16                     	;# 
  2054  0F17                     	;# 
  2055  0F18                     	;# 
  2056  0F19                     	;# 
  2057  0F1A                     	;# 
  2058  0F1B                     	;# 
  2059  0F1C                     	;# 
  2060  0F1D                     	;# 
  2061  0F1E                     	;# 
  2062  0F1F                     	;# 
  2063  0F20                     	;# 
  2064  0F21                     	;# 
  2065  0F22                     	;# 
  2066  0F23                     	;# 
  2067  0F24                     	;# 
  2068  0F25                     	;# 
  2069  0F26                     	;# 
  2070  0F27                     	;# 
  2071  0F38                     	;# 
  2072  0F39                     	;# 
  2073  0F3A                     	;# 
  2074  0F3B                     	;# 
  2075  0F3C                     	;# 
  2076  0F3D                     	;# 
  2077  0F3E                     	;# 
  2078  0F3F                     	;# 
  2079  0F40                     	;# 
  2080  0F41                     	;# 
  2081  0F43                     	;# 
  2082  0F44                     	;# 
  2083  0F45                     	;# 
  2084  0F46                     	;# 
  2085  0F47                     	;# 
  2086  0F48                     	;# 
  2087  0F49                     	;# 
  2088  0F4A                     	;# 
  2089  0F4B                     	;# 
  2090  0F4C                     	;# 
  2091  0F4E                     	;# 
  2092  0F4F                     	;# 
  2093  0F50                     	;# 
  2094  0F51                     	;# 
  2095  0F52                     	;# 
  2096  0F53                     	;# 
  2097  0F54                     	;# 
  2098  0F55                     	;# 
  2099  0F56                     	;# 
  2100  0F57                     	;# 
  2101  0F65                     	;# 
  2102  0F68                     	;# 
  2103  0F69                     	;# 
  2104  0F6A                     	;# 
  2105  0F6B                     	;# 
  2106  0FE4                     	;# 
  2107  0FE5                     	;# 
  2108  0FE6                     	;# 
  2109  0FE7                     	;# 
  2110  0FE8                     	;# 
  2111  0FE9                     	;# 
  2112  0FEA                     	;# 
  2113  0FEB                     	;# 
  2114  0FED                     	;# 
  2115  0FEE                     	;# 
  2116  0FEF                     	;# 
  2117  0000                     	;# 
  2118  0001                     	;# 
  2119  0002                     	;# 
  2120  0003                     	;# 
  2121  0004                     	;# 
  2122  0005                     	;# 
  2123  0006                     	;# 
  2124  0007                     	;# 
  2125  0008                     	;# 
  2126  0009                     	;# 
  2127  000A                     	;# 
  2128  000B                     	;# 
  2129  000C                     	;# 
  2130  000D                     	;# 
  2131  000E                     	;# 
  2132  0010                     	;# 
  2133  0011                     	;# 
  2134  0012                     	;# 
  2135  0013                     	;# 
  2136  0016                     	;# 
  2137  0017                     	;# 
  2138  0018                     	;# 
  2139  001C                     	;# 
  2140  001C                     	;# 
  2141  001D                     	;# 
  2142  001D                     	;# 
  2143  001E                     	;# 
  2144  001F                     	;# 
  2145  008C                     	;# 
  2146  008C                     	;# 
  2147  008D                     	;# 
  2148  008E                     	;# 
  2149  008E                     	;# 
  2150  008F                     	;# 
  2151  0090                     	;# 
  2152  0090                     	;# 
  2153  0091                     	;# 
  2154  0093                     	;# 
  2155  0094                     	;# 
  2156  0095                     	;# 
  2157  0096                     	;# 
  2158  0097                     	;# 
  2159  0098                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009C                     	;# 
  2164  009D                     	;# 
  2165  009E                     	;# 
  2166  010C                     	;# 
  2167  010D                     	;# 
  2168  010E                     	;# 
  2169  010E                     	;# 
  2170  010F                     	;# 
  2171  0110                     	;# 
  2172  0110                     	;# 
  2173  0111                     	;# 
  2174  0112                     	;# 
  2175  0112                     	;# 
  2176  0113                     	;# 
  2177  0114                     	;# 
  2178  0114                     	;# 
  2179  0115                     	;# 
  2180  0116                     	;# 
  2181  0116                     	;# 
  2182  0117                     	;# 
  2183  0119                     	;# 
  2184  0119                     	;# 
  2185  0119                     	;# 
  2186  011A                     	;# 
  2187  011A                     	;# 
  2188  011A                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011B                     	;# 
  2193  011B                     	;# 
  2194  011C                     	;# 
  2195  011C                     	;# 
  2196  011C                     	;# 
  2197  011D                     	;# 
  2198  011D                     	;# 
  2199  011D                     	;# 
  2200  011E                     	;# 
  2201  011E                     	;# 
  2202  011E                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  011F                     	;# 
  2207  011F                     	;# 
  2208  018C                     	;# 
  2209  018D                     	;# 
  2210  018E                     	;# 
  2211  018F                     	;# 
  2212  0190                     	;# 
  2213  0191                     	;# 
  2214  0192                     	;# 
  2215  0196                     	;# 
  2216  0197                     	;# 
  2217  0198                     	;# 
  2218  0199                     	;# 
  2219  019A                     	;# 
  2220  019B                     	;# 
  2221  019C                     	;# 
  2222  020C                     	;# 
  2223  020D                     	;# 
  2224  020E                     	;# 
  2225  020F                     	;# 
  2226  020F                     	;# 
  2227  0210                     	;# 
  2228  0210                     	;# 
  2229  0211                     	;# 
  2230  0211                     	;# 
  2231  0212                     	;# 
  2232  0213                     	;# 
  2233  0214                     	;# 
  2234  0215                     	;# 
  2235  0215                     	;# 
  2236  0216                     	;# 
  2237  0216                     	;# 
  2238  0217                     	;# 
  2239  0217                     	;# 
  2240  0218                     	;# 
  2241  0219                     	;# 
  2242  021A                     	;# 
  2243  021B                     	;# 
  2244  021B                     	;# 
  2245  021C                     	;# 
  2246  021C                     	;# 
  2247  021D                     	;# 
  2248  021D                     	;# 
  2249  021E                     	;# 
  2250  021F                     	;# 
  2251  028C                     	;# 
  2252  028C                     	;# 
  2253  028D                     	;# 
  2254  028D                     	;# 
  2255  028E                     	;# 
  2256  028F                     	;# 
  2257  0290                     	;# 
  2258  0290                     	;# 
  2259  0291                     	;# 
  2260  0292                     	;# 
  2261  0292                     	;# 
  2262  0293                     	;# 
  2263  0293                     	;# 
  2264  0294                     	;# 
  2265  0295                     	;# 
  2266  0296                     	;# 
  2267  0296                     	;# 
  2268  0297                     	;# 
  2269  0298                     	;# 
  2270  0298                     	;# 
  2271  0299                     	;# 
  2272  0299                     	;# 
  2273  029A                     	;# 
  2274  029B                     	;# 
  2275  029C                     	;# 
  2276  029C                     	;# 
  2277  029D                     	;# 
  2278  030C                     	;# 
  2279  030C                     	;# 
  2280  030D                     	;# 
  2281  030E                     	;# 
  2282  030F                     	;# 
  2283  0310                     	;# 
  2284  0310                     	;# 
  2285  0311                     	;# 
  2286  0312                     	;# 
  2287  0313                     	;# 
  2288  0314                     	;# 
  2289  0314                     	;# 
  2290  0315                     	;# 
  2291  0316                     	;# 
  2292  0317                     	;# 
  2293  0318                     	;# 
  2294  0318                     	;# 
  2295  0319                     	;# 
  2296  031A                     	;# 
  2297  031B                     	;# 
  2298  031C                     	;# 
  2299  031C                     	;# 
  2300  031D                     	;# 
  2301  031E                     	;# 
  2302  031F                     	;# 
  2303  038C                     	;# 
  2304  038D                     	;# 
  2305  038E                     	;# 
  2306  0390                     	;# 
  2307  0391                     	;# 
  2308  0392                     	;# 
  2309  040C                     	;# 
  2310  040D                     	;# 
  2311  040E                     	;# 
  2312  040F                     	;# 
  2313  0410                     	;# 
  2314  0411                     	;# 
  2315  0416                     	;# 
  2316  0416                     	;# 
  2317  0417                     	;# 
  2318  0418                     	;# 
  2319  0418                     	;# 
  2320  0419                     	;# 
  2321  041A                     	;# 
  2322  041A                     	;# 
  2323  041B                     	;# 
  2324  041C                     	;# 
  2325  041C                     	;# 
  2326  041D                     	;# 
  2327  041E                     	;# 
  2328  041F                     	;# 
  2329  048C                     	;# 
  2330  048C                     	;# 
  2331  048D                     	;# 
  2332  048E                     	;# 
  2333  048F                     	;# 
  2334  048F                     	;# 
  2335  0490                     	;# 
  2336  0491                     	;# 
  2337  0492                     	;# 
  2338  0492                     	;# 
  2339  0493                     	;# 
  2340  0494                     	;# 
  2341  0495                     	;# 
  2342  0495                     	;# 
  2343  0496                     	;# 
  2344  0497                     	;# 
  2345  0498                     	;# 
  2346  0499                     	;# 
  2347  049A                     	;# 
  2348  049B                     	;# 
  2349  049C                     	;# 
  2350  049D                     	;# 
  2351  050C                     	;# 
  2352  050C                     	;# 
  2353  050D                     	;# 
  2354  050E                     	;# 
  2355  050F                     	;# 
  2356  050F                     	;# 
  2357  0510                     	;# 
  2358  0511                     	;# 
  2359  0512                     	;# 
  2360  0512                     	;# 
  2361  0513                     	;# 
  2362  0514                     	;# 
  2363  0515                     	;# 
  2364  0515                     	;# 
  2365  0516                     	;# 
  2366  0517                     	;# 
  2367  0518                     	;# 
  2368  0519                     	;# 
  2369  051A                     	;# 
  2370  051B                     	;# 
  2371  051C                     	;# 
  2372  051D                     	;# 
  2373  058C                     	;# 
  2374  058C                     	;# 
  2375  058D                     	;# 
  2376  058E                     	;# 
  2377  058F                     	;# 
  2378  058F                     	;# 
  2379  0590                     	;# 
  2380  0591                     	;# 
  2381  0592                     	;# 
  2382  0593                     	;# 
  2383  060C                     	;# 
  2384  060D                     	;# 
  2385  060E                     	;# 
  2386  060F                     	;# 
  2387  0610                     	;# 
  2388  0611                     	;# 
  2389  0612                     	;# 
  2390  0613                     	;# 
  2391  0614                     	;# 
  2392  0616                     	;# 
  2393  0617                     	;# 
  2394  0618                     	;# 
  2395  0619                     	;# 
  2396  061A                     	;# 
  2397  061B                     	;# 
  2398  061C                     	;# 
  2399  061D                     	;# 
  2400  061E                     	;# 
  2401  068C                     	;# 
  2402  068D                     	;# 
  2403  068E                     	;# 
  2404  068F                     	;# 
  2405  0690                     	;# 
  2406  0691                     	;# 
  2407  0692                     	;# 
  2408  0693                     	;# 
  2409  0694                     	;# 
  2410  070C                     	;# 
  2411  070D                     	;# 
  2412  070E                     	;# 
  2413  070F                     	;# 
  2414  0710                     	;# 
  2415  0711                     	;# 
  2416  0712                     	;# 
  2417  0713                     	;# 
  2418  0714                     	;# 
  2419  0716                     	;# 
  2420  0717                     	;# 
  2421  0718                     	;# 
  2422  0719                     	;# 
  2423  071A                     	;# 
  2424  071B                     	;# 
  2425  071C                     	;# 
  2426  071D                     	;# 
  2427  071E                     	;# 
  2428  0796                     	;# 
  2429  0797                     	;# 
  2430  0798                     	;# 
  2431  0799                     	;# 
  2432  079A                     	;# 
  2433  079B                     	;# 
  2434  080C                     	;# 
  2435  080D                     	;# 
  2436  080E                     	;# 
  2437  080F                     	;# 
  2438  0810                     	;# 
  2439  0811                     	;# 
  2440  0812                     	;# 
  2441  0813                     	;# 
  2442  0814                     	;# 
  2443  081A                     	;# 
  2444  081B                     	;# 
  2445  081C                     	;# 
  2446  081D                     	;# 
  2447  081E                     	;# 
  2448  081F                     	;# 
  2449  088C                     	;# 
  2450  088D                     	;# 
  2451  088E                     	;# 
  2452  088F                     	;# 
  2453  0890                     	;# 
  2454  0891                     	;# 
  2455  0892                     	;# 
  2456  0893                     	;# 
  2457  0895                     	;# 
  2458  0896                     	;# 
  2459  0897                     	;# 
  2460  0898                     	;# 
  2461  0899                     	;# 
  2462  089A                     	;# 
  2463  089B                     	;# 
  2464  090C                     	;# 
  2465  090E                     	;# 
  2466  090F                     	;# 
  2467  091F                     	;# 
  2468  091F                     	;# 
  2469  098F                     	;# 
  2470  098F                     	;# 
  2471  0990                     	;# 
  2472  0991                     	;# 
  2473  0992                     	;# 
  2474  0993                     	;# 
  2475  0994                     	;# 
  2476  0995                     	;# 
  2477  0996                     	;# 
  2478  0997                     	;# 
  2479  0E0F                     	;# 
  2480  0E10                     	;# 
  2481  0E11                     	;# 
  2482  0E12                     	;# 
  2483  0E13                     	;# 
  2484  0E14                     	;# 
  2485  0E15                     	;# 
  2486  0E16                     	;# 
  2487  0E17                     	;# 
  2488  0E18                     	;# 
  2489  0E19                     	;# 
  2490  0E1A                     	;# 
  2491  0E1B                     	;# 
  2492  0E1C                     	;# 
  2493  0E1D                     	;# 
  2494  0E1E                     	;# 
  2495  0E1F                     	;# 
  2496  0E20                     	;# 
  2497  0E21                     	;# 
  2498  0E22                     	;# 
  2499  0E23                     	;# 
  2500  0E24                     	;# 
  2501  0E25                     	;# 
  2502  0E26                     	;# 
  2503  0E27                     	;# 
  2504  0E28                     	;# 
  2505  0E29                     	;# 
  2506  0E2A                     	;# 
  2507  0E2B                     	;# 
  2508  0E2C                     	;# 
  2509  0E2D                     	;# 
  2510  0E2E                     	;# 
  2511  0E2F                     	;# 
  2512  0E30                     	;# 
  2513  0E31                     	;# 
  2514  0E32                     	;# 
  2515  0E33                     	;# 
  2516  0E34                     	;# 
  2517  0E35                     	;# 
  2518  0E36                     	;# 
  2519  0E37                     	;# 
  2520  0E8F                     	;# 
  2521  0E90                     	;# 
  2522  0E91                     	;# 
  2523  0E92                     	;# 
  2524  0E93                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E96                     	;# 
  2528  0E97                     	;# 
  2529  0E9C                     	;# 
  2530  0E9D                     	;# 
  2531  0E9E                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA9                     	;# 
  2538  0EAA                     	;# 
  2539  0EAB                     	;# 
  2540  0EAC                     	;# 
  2541  0EB1                     	;# 
  2542  0EB2                     	;# 
  2543  0EB3                     	;# 
  2544  0EB8                     	;# 
  2545  0EB9                     	;# 
  2546  0EBA                     	;# 
  2547  0EBB                     	;# 
  2548  0EBC                     	;# 
  2549  0EBD                     	;# 
  2550  0EBE                     	;# 
  2551  0EC3                     	;# 
  2552  0EC5                     	;# 
  2553  0EC6                     	;# 
  2554  0EC7                     	;# 
  2555  0EC8                     	;# 
  2556  0EC9                     	;# 
  2557  0ECA                     	;# 
  2558  0ECB                     	;# 
  2559  0ECC                     	;# 
  2560  0F10                     	;# 
  2561  0F11                     	;# 
  2562  0F12                     	;# 
  2563  0F13                     	;# 
  2564  0F14                     	;# 
  2565  0F15                     	;# 
  2566  0F16                     	;# 
  2567  0F17                     	;# 
  2568  0F18                     	;# 
  2569  0F19                     	;# 
  2570  0F1A                     	;# 
  2571  0F1B                     	;# 
  2572  0F1C                     	;# 
  2573  0F1D                     	;# 
  2574  0F1E                     	;# 
  2575  0F1F                     	;# 
  2576  0F20                     	;# 
  2577  0F21                     	;# 
  2578  0F22                     	;# 
  2579  0F23                     	;# 
  2580  0F24                     	;# 
  2581  0F25                     	;# 
  2582  0F26                     	;# 
  2583  0F27                     	;# 
  2584  0F38                     	;# 
  2585  0F39                     	;# 
  2586  0F3A                     	;# 
  2587  0F3B                     	;# 
  2588  0F3C                     	;# 
  2589  0F3D                     	;# 
  2590  0F3E                     	;# 
  2591  0F3F                     	;# 
  2592  0F40                     	;# 
  2593  0F41                     	;# 
  2594  0F43                     	;# 
  2595  0F44                     	;# 
  2596  0F45                     	;# 
  2597  0F46                     	;# 
  2598  0F47                     	;# 
  2599  0F48                     	;# 
  2600  0F49                     	;# 
  2601  0F4A                     	;# 
  2602  0F4B                     	;# 
  2603  0F4C                     	;# 
  2604  0F4E                     	;# 
  2605  0F4F                     	;# 
  2606  0F50                     	;# 
  2607  0F51                     	;# 
  2608  0F52                     	;# 
  2609  0F53                     	;# 
  2610  0F54                     	;# 
  2611  0F55                     	;# 
  2612  0F56                     	;# 
  2613  0F57                     	;# 
  2614  0F65                     	;# 
  2615  0F68                     	;# 
  2616  0F69                     	;# 
  2617  0F6A                     	;# 
  2618  0F6B                     	;# 
  2619  0FE4                     	;# 
  2620  0FE5                     	;# 
  2621  0FE6                     	;# 
  2622  0FE7                     	;# 
  2623  0FE8                     	;# 
  2624  0FE9                     	;# 
  2625  0FEA                     	;# 
  2626  0FEB                     	;# 
  2627  0FED                     	;# 
  2628  0FEE                     	;# 
  2629  0FEF                     	;# 
  2630  0000                     	;# 
  2631  0001                     	;# 
  2632  0002                     	;# 
  2633  0003                     	;# 
  2634  0004                     	;# 
  2635  0005                     	;# 
  2636  0006                     	;# 
  2637  0007                     	;# 
  2638  0008                     	;# 
  2639  0009                     	;# 
  2640  000A                     	;# 
  2641  000B                     	;# 
  2642  000C                     	;# 
  2643  000D                     	;# 
  2644  000E                     	;# 
  2645  0010                     	;# 
  2646  0011                     	;# 
  2647  0012                     	;# 
  2648  0013                     	;# 
  2649  0016                     	;# 
  2650  0017                     	;# 
  2651  0018                     	;# 
  2652  001C                     	;# 
  2653  001C                     	;# 
  2654  001D                     	;# 
  2655  001D                     	;# 
  2656  001E                     	;# 
  2657  001F                     	;# 
  2658  008C                     	;# 
  2659  008C                     	;# 
  2660  008D                     	;# 
  2661  008E                     	;# 
  2662  008E                     	;# 
  2663  008F                     	;# 
  2664  0090                     	;# 
  2665  0090                     	;# 
  2666  0091                     	;# 
  2667  0093                     	;# 
  2668  0094                     	;# 
  2669  0095                     	;# 
  2670  0096                     	;# 
  2671  0097                     	;# 
  2672  0098                     	;# 
  2673  0099                     	;# 
  2674  009A                     	;# 
  2675  009B                     	;# 
  2676  009C                     	;# 
  2677  009D                     	;# 
  2678  009E                     	;# 
  2679  010C                     	;# 
  2680  010D                     	;# 
  2681  010E                     	;# 
  2682  010E                     	;# 
  2683  010F                     	;# 
  2684  0110                     	;# 
  2685  0110                     	;# 
  2686  0111                     	;# 
  2687  0112                     	;# 
  2688  0112                     	;# 
  2689  0113                     	;# 
  2690  0114                     	;# 
  2691  0114                     	;# 
  2692  0115                     	;# 
  2693  0116                     	;# 
  2694  0116                     	;# 
  2695  0117                     	;# 
  2696  0119                     	;# 
  2697  0119                     	;# 
  2698  0119                     	;# 
  2699  011A                     	;# 
  2700  011A                     	;# 
  2701  011A                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011B                     	;# 
  2706  011B                     	;# 
  2707  011C                     	;# 
  2708  011C                     	;# 
  2709  011C                     	;# 
  2710  011D                     	;# 
  2711  011D                     	;# 
  2712  011D                     	;# 
  2713  011E                     	;# 
  2714  011E                     	;# 
  2715  011E                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  011F                     	;# 
  2720  011F                     	;# 
  2721  018C                     	;# 
  2722  018D                     	;# 
  2723  018E                     	;# 
  2724  018F                     	;# 
  2725  0190                     	;# 
  2726  0191                     	;# 
  2727  0192                     	;# 
  2728  0196                     	;# 
  2729  0197                     	;# 
  2730  0198                     	;# 
  2731  0199                     	;# 
  2732  019A                     	;# 
  2733  019B                     	;# 
  2734  019C                     	;# 
  2735  020C                     	;# 
  2736  020D                     	;# 
  2737  020E                     	;# 
  2738  020F                     	;# 
  2739  020F                     	;# 
  2740  0210                     	;# 
  2741  0210                     	;# 
  2742  0211                     	;# 
  2743  0211                     	;# 
  2744  0212                     	;# 
  2745  0213                     	;# 
  2746  0214                     	;# 
  2747  0215                     	;# 
  2748  0215                     	;# 
  2749  0216                     	;# 
  2750  0216                     	;# 
  2751  0217                     	;# 
  2752  0217                     	;# 
  2753  0218                     	;# 
  2754  0219                     	;# 
  2755  021A                     	;# 
  2756  021B                     	;# 
  2757  021B                     	;# 
  2758  021C                     	;# 
  2759  021C                     	;# 
  2760  021D                     	;# 
  2761  021D                     	;# 
  2762  021E                     	;# 
  2763  021F                     	;# 
  2764  028C                     	;# 
  2765  028C                     	;# 
  2766  028D                     	;# 
  2767  028D                     	;# 
  2768  028E                     	;# 
  2769  028F                     	;# 
  2770  0290                     	;# 
  2771  0290                     	;# 
  2772  0291                     	;# 
  2773  0292                     	;# 
  2774  0292                     	;# 
  2775  0293                     	;# 
  2776  0293                     	;# 
  2777  0294                     	;# 
  2778  0295                     	;# 
  2779  0296                     	;# 
  2780  0296                     	;# 
  2781  0297                     	;# 
  2782  0298                     	;# 
  2783  0298                     	;# 
  2784  0299                     	;# 
  2785  0299                     	;# 
  2786  029A                     	;# 
  2787  029B                     	;# 
  2788  029C                     	;# 
  2789  029C                     	;# 
  2790  029D                     	;# 
  2791  030C                     	;# 
  2792  030C                     	;# 
  2793  030D                     	;# 
  2794  030E                     	;# 
  2795  030F                     	;# 
  2796  0310                     	;# 
  2797  0310                     	;# 
  2798  0311                     	;# 
  2799  0312                     	;# 
  2800  0313                     	;# 
  2801  0314                     	;# 
  2802  0314                     	;# 
  2803  0315                     	;# 
  2804  0316                     	;# 
  2805  0317                     	;# 
  2806  0318                     	;# 
  2807  0318                     	;# 
  2808  0319                     	;# 
  2809  031A                     	;# 
  2810  031B                     	;# 
  2811  031C                     	;# 
  2812  031C                     	;# 
  2813  031D                     	;# 
  2814  031E                     	;# 
  2815  031F                     	;# 
  2816  038C                     	;# 
  2817  038D                     	;# 
  2818  038E                     	;# 
  2819  0390                     	;# 
  2820  0391                     	;# 
  2821  0392                     	;# 
  2822  040C                     	;# 
  2823  040D                     	;# 
  2824  040E                     	;# 
  2825  040F                     	;# 
  2826  0410                     	;# 
  2827  0411                     	;# 
  2828  0416                     	;# 
  2829  0416                     	;# 
  2830  0417                     	;# 
  2831  0418                     	;# 
  2832  0418                     	;# 
  2833  0419                     	;# 
  2834  041A                     	;# 
  2835  041A                     	;# 
  2836  041B                     	;# 
  2837  041C                     	;# 
  2838  041C                     	;# 
  2839  041D                     	;# 
  2840  041E                     	;# 
  2841  041F                     	;# 
  2842  048C                     	;# 
  2843  048C                     	;# 
  2844  048D                     	;# 
  2845  048E                     	;# 
  2846  048F                     	;# 
  2847  048F                     	;# 
  2848  0490                     	;# 
  2849  0491                     	;# 
  2850  0492                     	;# 
  2851  0492                     	;# 
  2852  0493                     	;# 
  2853  0494                     	;# 
  2854  0495                     	;# 
  2855  0495                     	;# 
  2856  0496                     	;# 
  2857  0497                     	;# 
  2858  0498                     	;# 
  2859  0499                     	;# 
  2860  049A                     	;# 
  2861  049B                     	;# 
  2862  049C                     	;# 
  2863  049D                     	;# 
  2864  050C                     	;# 
  2865  050C                     	;# 
  2866  050D                     	;# 
  2867  050E                     	;# 
  2868  050F                     	;# 
  2869  050F                     	;# 
  2870  0510                     	;# 
  2871  0511                     	;# 
  2872  0512                     	;# 
  2873  0512                     	;# 
  2874  0513                     	;# 
  2875  0514                     	;# 
  2876  0515                     	;# 
  2877  0515                     	;# 
  2878  0516                     	;# 
  2879  0517                     	;# 
  2880  0518                     	;# 
  2881  0519                     	;# 
  2882  051A                     	;# 
  2883  051B                     	;# 
  2884  051C                     	;# 
  2885  051D                     	;# 
  2886  058C                     	;# 
  2887  058C                     	;# 
  2888  058D                     	;# 
  2889  058E                     	;# 
  2890  058F                     	;# 
  2891  058F                     	;# 
  2892  0590                     	;# 
  2893  0591                     	;# 
  2894  0592                     	;# 
  2895  0593                     	;# 
  2896  060C                     	;# 
  2897  060D                     	;# 
  2898  060E                     	;# 
  2899  060F                     	;# 
  2900  0610                     	;# 
  2901  0611                     	;# 
  2902  0612                     	;# 
  2903  0613                     	;# 
  2904  0614                     	;# 
  2905  0616                     	;# 
  2906  0617                     	;# 
  2907  0618                     	;# 
  2908  0619                     	;# 
  2909  061A                     	;# 
  2910  061B                     	;# 
  2911  061C                     	;# 
  2912  061D                     	;# 
  2913  061E                     	;# 
  2914  068C                     	;# 
  2915  068D                     	;# 
  2916  068E                     	;# 
  2917  068F                     	;# 
  2918  0690                     	;# 
  2919  0691                     	;# 
  2920  0692                     	;# 
  2921  0693                     	;# 
  2922  0694                     	;# 
  2923  070C                     	;# 
  2924  070D                     	;# 
  2925  070E                     	;# 
  2926  070F                     	;# 
  2927  0710                     	;# 
  2928  0711                     	;# 
  2929  0712                     	;# 
  2930  0713                     	;# 
  2931  0714                     	;# 
  2932  0716                     	;# 
  2933  0717                     	;# 
  2934  0718                     	;# 
  2935  0719                     	;# 
  2936  071A                     	;# 
  2937  071B                     	;# 
  2938  071C                     	;# 
  2939  071D                     	;# 
  2940  071E                     	;# 
  2941  0796                     	;# 
  2942  0797                     	;# 
  2943  0798                     	;# 
  2944  0799                     	;# 
  2945  079A                     	;# 
  2946  079B                     	;# 
  2947  080C                     	;# 
  2948  080D                     	;# 
  2949  080E                     	;# 
  2950  080F                     	;# 
  2951  0810                     	;# 
  2952  0811                     	;# 
  2953  0812                     	;# 
  2954  0813                     	;# 
  2955  0814                     	;# 
  2956  081A                     	;# 
  2957  081B                     	;# 
  2958  081C                     	;# 
  2959  081D                     	;# 
  2960  081E                     	;# 
  2961  081F                     	;# 
  2962  088C                     	;# 
  2963  088D                     	;# 
  2964  088E                     	;# 
  2965  088F                     	;# 
  2966  0890                     	;# 
  2967  0891                     	;# 
  2968  0892                     	;# 
  2969  0893                     	;# 
  2970  0895                     	;# 
  2971  0896                     	;# 
  2972  0897                     	;# 
  2973  0898                     	;# 
  2974  0899                     	;# 
  2975  089A                     	;# 
  2976  089B                     	;# 
  2977  090C                     	;# 
  2978  090E                     	;# 
  2979  090F                     	;# 
  2980  091F                     	;# 
  2981  091F                     	;# 
  2982  098F                     	;# 
  2983  098F                     	;# 
  2984  0990                     	;# 
  2985  0991                     	;# 
  2986  0992                     	;# 
  2987  0993                     	;# 
  2988  0994                     	;# 
  2989  0995                     	;# 
  2990  0996                     	;# 
  2991  0997                     	;# 
  2992  0E0F                     	;# 
  2993  0E10                     	;# 
  2994  0E11                     	;# 
  2995  0E12                     	;# 
  2996  0E13                     	;# 
  2997  0E14                     	;# 
  2998  0E15                     	;# 
  2999  0E16                     	;# 
  3000  0E17                     	;# 
  3001  0E18                     	;# 
  3002  0E19                     	;# 
  3003  0E1A                     	;# 
  3004  0E1B                     	;# 
  3005  0E1C                     	;# 
  3006  0E1D                     	;# 
  3007  0E1E                     	;# 
  3008  0E1F                     	;# 
  3009  0E20                     	;# 
  3010  0E21                     	;# 
  3011  0E22                     	;# 
  3012  0E23                     	;# 
  3013  0E24                     	;# 
  3014  0E25                     	;# 
  3015  0E26                     	;# 
  3016  0E27                     	;# 
  3017  0E28                     	;# 
  3018  0E29                     	;# 
  3019  0E2A                     	;# 
  3020  0E2B                     	;# 
  3021  0E2C                     	;# 
  3022  0E2D                     	;# 
  3023  0E2E                     	;# 
  3024  0E2F                     	;# 
  3025  0E30                     	;# 
  3026  0E31                     	;# 
  3027  0E32                     	;# 
  3028  0E33                     	;# 
  3029  0E34                     	;# 
  3030  0E35                     	;# 
  3031  0E36                     	;# 
  3032  0E37                     	;# 
  3033  0E8F                     	;# 
  3034  0E90                     	;# 
  3035  0E91                     	;# 
  3036  0E92                     	;# 
  3037  0E93                     	;# 
  3038  0E94                     	;# 
  3039  0E95                     	;# 
  3040  0E96                     	;# 
  3041  0E97                     	;# 
  3042  0E9C                     	;# 
  3043  0E9D                     	;# 
  3044  0E9E                     	;# 
  3045  0EA1                     	;# 
  3046  0EA2                     	;# 
  3047  0EA3                     	;# 
  3048  0EA4                     	;# 
  3049  0EA5                     	;# 
  3050  0EA9                     	;# 
  3051  0EAA                     	;# 
  3052  0EAB                     	;# 
  3053  0EAC                     	;# 
  3054  0EB1                     	;# 
  3055  0EB2                     	;# 
  3056  0EB3                     	;# 
  3057  0EB8                     	;# 
  3058  0EB9                     	;# 
  3059  0EBA                     	;# 
  3060  0EBB                     	;# 
  3061  0EBC                     	;# 
  3062  0EBD                     	;# 
  3063  0EBE                     	;# 
  3064  0EC3                     	;# 
  3065  0EC5                     	;# 
  3066  0EC6                     	;# 
  3067  0EC7                     	;# 
  3068  0EC8                     	;# 
  3069  0EC9                     	;# 
  3070  0ECA                     	;# 
  3071  0ECB                     	;# 
  3072  0ECC                     	;# 
  3073  0F10                     	;# 
  3074  0F11                     	;# 
  3075  0F12                     	;# 
  3076  0F13                     	;# 
  3077  0F14                     	;# 
  3078  0F15                     	;# 
  3079  0F16                     	;# 
  3080  0F17                     	;# 
  3081  0F18                     	;# 
  3082  0F19                     	;# 
  3083  0F1A                     	;# 
  3084  0F1B                     	;# 
  3085  0F1C                     	;# 
  3086  0F1D                     	;# 
  3087  0F1E                     	;# 
  3088  0F1F                     	;# 
  3089  0F20                     	;# 
  3090  0F21                     	;# 
  3091  0F22                     	;# 
  3092  0F23                     	;# 
  3093  0F24                     	;# 
  3094  0F25                     	;# 
  3095  0F26                     	;# 
  3096  0F27                     	;# 
  3097  0F38                     	;# 
  3098  0F39                     	;# 
  3099  0F3A                     	;# 
  3100  0F3B                     	;# 
  3101  0F3C                     	;# 
  3102  0F3D                     	;# 
  3103  0F3E                     	;# 
  3104  0F3F                     	;# 
  3105  0F40                     	;# 
  3106  0F41                     	;# 
  3107  0F43                     	;# 
  3108  0F44                     	;# 
  3109  0F45                     	;# 
  3110  0F46                     	;# 
  3111  0F47                     	;# 
  3112  0F48                     	;# 
  3113  0F49                     	;# 
  3114  0F4A                     	;# 
  3115  0F4B                     	;# 
  3116  0F4C                     	;# 
  3117  0F4E                     	;# 
  3118  0F4F                     	;# 
  3119  0F50                     	;# 
  3120  0F51                     	;# 
  3121  0F52                     	;# 
  3122  0F53                     	;# 
  3123  0F54                     	;# 
  3124  0F55                     	;# 
  3125  0F56                     	;# 
  3126  0F57                     	;# 
  3127  0F65                     	;# 
  3128  0F68                     	;# 
  3129  0F69                     	;# 
  3130  0F6A                     	;# 
  3131  0F6B                     	;# 
  3132  0FE4                     	;# 
  3133  0FE5                     	;# 
  3134  0FE6                     	;# 
  3135  0FE7                     	;# 
  3136  0FE8                     	;# 
  3137  0FE9                     	;# 
  3138  0FEA                     	;# 
  3139  0FEB                     	;# 
  3140  0FED                     	;# 
  3141  0FEE                     	;# 
  3142  0FEF                     	;# 
  3143  0000                     	;# 
  3144  0001                     	;# 
  3145  0002                     	;# 
  3146  0003                     	;# 
  3147  0004                     	;# 
  3148  0005                     	;# 
  3149  0006                     	;# 
  3150  0007                     	;# 
  3151  0008                     	;# 
  3152  0009                     	;# 
  3153  000A                     	;# 
  3154  000B                     	;# 
  3155  000C                     	;# 
  3156  000D                     	;# 
  3157  000E                     	;# 
  3158  0010                     	;# 
  3159  0011                     	;# 
  3160  0012                     	;# 
  3161  0013                     	;# 
  3162  0016                     	;# 
  3163  0017                     	;# 
  3164  0018                     	;# 
  3165  001C                     	;# 
  3166  001C                     	;# 
  3167  001D                     	;# 
  3168  001D                     	;# 
  3169  001E                     	;# 
  3170  001F                     	;# 
  3171  008C                     	;# 
  3172  008C                     	;# 
  3173  008D                     	;# 
  3174  008E                     	;# 
  3175  008E                     	;# 
  3176  008F                     	;# 
  3177  0090                     	;# 
  3178  0090                     	;# 
  3179  0091                     	;# 
  3180  0093                     	;# 
  3181  0094                     	;# 
  3182  0095                     	;# 
  3183  0096                     	;# 
  3184  0097                     	;# 
  3185  0098                     	;# 
  3186  0099                     	;# 
  3187  009A                     	;# 
  3188  009B                     	;# 
  3189  009C                     	;# 
  3190  009D                     	;# 
  3191  009E                     	;# 
  3192  010C                     	;# 
  3193  010D                     	;# 
  3194  010E                     	;# 
  3195  010E                     	;# 
  3196  010F                     	;# 
  3197  0110                     	;# 
  3198  0110                     	;# 
  3199  0111                     	;# 
  3200  0112                     	;# 
  3201  0112                     	;# 
  3202  0113                     	;# 
  3203  0114                     	;# 
  3204  0114                     	;# 
  3205  0115                     	;# 
  3206  0116                     	;# 
  3207  0116                     	;# 
  3208  0117                     	;# 
  3209  0119                     	;# 
  3210  0119                     	;# 
  3211  0119                     	;# 
  3212  011A                     	;# 
  3213  011A                     	;# 
  3214  011A                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011B                     	;# 
  3219  011B                     	;# 
  3220  011C                     	;# 
  3221  011C                     	;# 
  3222  011C                     	;# 
  3223  011D                     	;# 
  3224  011D                     	;# 
  3225  011D                     	;# 
  3226  011E                     	;# 
  3227  011E                     	;# 
  3228  011E                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  011F                     	;# 
  3233  011F                     	;# 
  3234  018C                     	;# 
  3235  018D                     	;# 
  3236  018E                     	;# 
  3237  018F                     	;# 
  3238  0190                     	;# 
  3239  0191                     	;# 
  3240  0192                     	;# 
  3241  0196                     	;# 
  3242  0197                     	;# 
  3243  0198                     	;# 
  3244  0199                     	;# 
  3245  019A                     	;# 
  3246  019B                     	;# 
  3247  019C                     	;# 
  3248  020C                     	;# 
  3249  020D                     	;# 
  3250  020E                     	;# 
  3251  020F                     	;# 
  3252  020F                     	;# 
  3253  0210                     	;# 
  3254  0210                     	;# 
  3255  0211                     	;# 
  3256  0211                     	;# 
  3257  0212                     	;# 
  3258  0213                     	;# 
  3259  0214                     	;# 
  3260  0215                     	;# 
  3261  0215                     	;# 
  3262  0216                     	;# 
  3263  0216                     	;# 
  3264  0217                     	;# 
  3265  0217                     	;# 
  3266  0218                     	;# 
  3267  0219                     	;# 
  3268  021A                     	;# 
  3269  021B                     	;# 
  3270  021B                     	;# 
  3271  021C                     	;# 
  3272  021C                     	;# 
  3273  021D                     	;# 
  3274  021D                     	;# 
  3275  021E                     	;# 
  3276  021F                     	;# 
  3277  028C                     	;# 
  3278  028C                     	;# 
  3279  028D                     	;# 
  3280  028D                     	;# 
  3281  028E                     	;# 
  3282  028F                     	;# 
  3283  0290                     	;# 
  3284  0290                     	;# 
  3285  0291                     	;# 
  3286  0292                     	;# 
  3287  0292                     	;# 
  3288  0293                     	;# 
  3289  0293                     	;# 
  3290  0294                     	;# 
  3291  0295                     	;# 
  3292  0296                     	;# 
  3293  0296                     	;# 
  3294  0297                     	;# 
  3295  0298                     	;# 
  3296  0298                     	;# 
  3297  0299                     	;# 
  3298  0299                     	;# 
  3299  029A                     	;# 
  3300  029B                     	;# 
  3301  029C                     	;# 
  3302  029C                     	;# 
  3303  029D                     	;# 
  3304  030C                     	;# 
  3305  030C                     	;# 
  3306  030D                     	;# 
  3307  030E                     	;# 
  3308  030F                     	;# 
  3309  0310                     	;# 
  3310  0310                     	;# 
  3311  0311                     	;# 
  3312  0312                     	;# 
  3313  0313                     	;# 
  3314  0314                     	;# 
  3315  0314                     	;# 
  3316  0315                     	;# 
  3317  0316                     	;# 
  3318  0317                     	;# 
  3319  0318                     	;# 
  3320  0318                     	;# 
  3321  0319                     	;# 
  3322  031A                     	;# 
  3323  031B                     	;# 
  3324  031C                     	;# 
  3325  031C                     	;# 
  3326  031D                     	;# 
  3327  031E                     	;# 
  3328  031F                     	;# 
  3329  038C                     	;# 
  3330  038D                     	;# 
  3331  038E                     	;# 
  3332  0390                     	;# 
  3333  0391                     	;# 
  3334  0392                     	;# 
  3335  040C                     	;# 
  3336  040D                     	;# 
  3337  040E                     	;# 
  3338  040F                     	;# 
  3339  0410                     	;# 
  3340  0411                     	;# 
  3341  0416                     	;# 
  3342  0416                     	;# 
  3343  0417                     	;# 
  3344  0418                     	;# 
  3345  0418                     	;# 
  3346  0419                     	;# 
  3347  041A                     	;# 
  3348  041A                     	;# 
  3349  041B                     	;# 
  3350  041C                     	;# 
  3351  041C                     	;# 
  3352  041D                     	;# 
  3353  041E                     	;# 
  3354  041F                     	;# 
  3355  048C                     	;# 
  3356  048C                     	;# 
  3357  048D                     	;# 
  3358  048E                     	;# 
  3359  048F                     	;# 
  3360  048F                     	;# 
  3361  0490                     	;# 
  3362  0491                     	;# 
  3363  0492                     	;# 
  3364  0492                     	;# 
  3365  0493                     	;# 
  3366  0494                     	;# 
  3367  0495                     	;# 
  3368  0495                     	;# 
  3369  0496                     	;# 
  3370  0497                     	;# 
  3371  0498                     	;# 
  3372  0499                     	;# 
  3373  049A                     	;# 
  3374  049B                     	;# 
  3375  049C                     	;# 
  3376  049D                     	;# 
  3377  050C                     	;# 
  3378  050C                     	;# 
  3379  050D                     	;# 
  3380  050E                     	;# 
  3381  050F                     	;# 
  3382  050F                     	;# 
  3383  0510                     	;# 
  3384  0511                     	;# 
  3385  0512                     	;# 
  3386  0512                     	;# 
  3387  0513                     	;# 
  3388  0514                     	;# 
  3389  0515                     	;# 
  3390  0515                     	;# 
  3391  0516                     	;# 
  3392  0517                     	;# 
  3393  0518                     	;# 
  3394  0519                     	;# 
  3395  051A                     	;# 
  3396  051B                     	;# 
  3397  051C                     	;# 
  3398  051D                     	;# 
  3399  058C                     	;# 
  3400  058C                     	;# 
  3401  058D                     	;# 
  3402  058E                     	;# 
  3403  058F                     	;# 
  3404  058F                     	;# 
  3405  0590                     	;# 
  3406  0591                     	;# 
  3407  0592                     	;# 
  3408  0593                     	;# 
  3409  060C                     	;# 
  3410  060D                     	;# 
  3411  060E                     	;# 
  3412  060F                     	;# 
  3413  0610                     	;# 
  3414  0611                     	;# 
  3415  0612                     	;# 
  3416  0613                     	;# 
  3417  0614                     	;# 
  3418  0616                     	;# 
  3419  0617                     	;# 
  3420  0618                     	;# 
  3421  0619                     	;# 
  3422  061A                     	;# 
  3423  061B                     	;# 
  3424  061C                     	;# 
  3425  061D                     	;# 
  3426  061E                     	;# 
  3427  068C                     	;# 
  3428  068D                     	;# 
  3429  068E                     	;# 
  3430  068F                     	;# 
  3431  0690                     	;# 
  3432  0691                     	;# 
  3433  0692                     	;# 
  3434  0693                     	;# 
  3435  0694                     	;# 
  3436  070C                     	;# 
  3437  070D                     	;# 
  3438  070E                     	;# 
  3439  070F                     	;# 
  3440  0710                     	;# 
  3441  0711                     	;# 
  3442  0712                     	;# 
  3443  0713                     	;# 
  3444  0714                     	;# 
  3445  0716                     	;# 
  3446  0717                     	;# 
  3447  0718                     	;# 
  3448  0719                     	;# 
  3449  071A                     	;# 
  3450  071B                     	;# 
  3451  071C                     	;# 
  3452  071D                     	;# 
  3453  071E                     	;# 
  3454  0796                     	;# 
  3455  0797                     	;# 
  3456  0798                     	;# 
  3457  0799                     	;# 
  3458  079A                     	;# 
  3459  079B                     	;# 
  3460  080C                     	;# 
  3461  080D                     	;# 
  3462  080E                     	;# 
  3463  080F                     	;# 
  3464  0810                     	;# 
  3465  0811                     	;# 
  3466  0812                     	;# 
  3467  0813                     	;# 
  3468  0814                     	;# 
  3469  081A                     	;# 
  3470  081B                     	;# 
  3471  081C                     	;# 
  3472  081D                     	;# 
  3473  081E                     	;# 
  3474  081F                     	;# 
  3475  088C                     	;# 
  3476  088D                     	;# 
  3477  088E                     	;# 
  3478  088F                     	;# 
  3479  0890                     	;# 
  3480  0891                     	;# 
  3481  0892                     	;# 
  3482  0893                     	;# 
  3483  0895                     	;# 
  3484  0896                     	;# 
  3485  0897                     	;# 
  3486  0898                     	;# 
  3487  0899                     	;# 
  3488  089A                     	;# 
  3489  089B                     	;# 
  3490  090C                     	;# 
  3491  090E                     	;# 
  3492  090F                     	;# 
  3493  091F                     	;# 
  3494  091F                     	;# 
  3495  098F                     	;# 
  3496  098F                     	;# 
  3497  0990                     	;# 
  3498  0991                     	;# 
  3499  0992                     	;# 
  3500  0993                     	;# 
  3501  0994                     	;# 
  3502  0995                     	;# 
  3503  0996                     	;# 
  3504  0997                     	;# 
  3505  0E0F                     	;# 
  3506  0E10                     	;# 
  3507  0E11                     	;# 
  3508  0E12                     	;# 
  3509  0E13                     	;# 
  3510  0E14                     	;# 
  3511  0E15                     	;# 
  3512  0E16                     	;# 
  3513  0E17                     	;# 
  3514  0E18                     	;# 
  3515  0E19                     	;# 
  3516  0E1A                     	;# 
  3517  0E1B                     	;# 
  3518  0E1C                     	;# 
  3519  0E1D                     	;# 
  3520  0E1E                     	;# 
  3521  0E1F                     	;# 
  3522  0E20                     	;# 
  3523  0E21                     	;# 
  3524  0E22                     	;# 
  3525  0E23                     	;# 
  3526  0E24                     	;# 
  3527  0E25                     	;# 
  3528  0E26                     	;# 
  3529  0E27                     	;# 
  3530  0E28                     	;# 
  3531  0E29                     	;# 
  3532  0E2A                     	;# 
  3533  0E2B                     	;# 
  3534  0E2C                     	;# 
  3535  0E2D                     	;# 
  3536  0E2E                     	;# 
  3537  0E2F                     	;# 
  3538  0E30                     	;# 
  3539  0E31                     	;# 
  3540  0E32                     	;# 
  3541  0E33                     	;# 
  3542  0E34                     	;# 
  3543  0E35                     	;# 
  3544  0E36                     	;# 
  3545  0E37                     	;# 
  3546  0E8F                     	;# 
  3547  0E90                     	;# 
  3548  0E91                     	;# 
  3549  0E92                     	;# 
  3550  0E93                     	;# 
  3551  0E94                     	;# 
  3552  0E95                     	;# 
  3553  0E96                     	;# 
  3554  0E97                     	;# 
  3555  0E9C                     	;# 
  3556  0E9D                     	;# 
  3557  0E9E                     	;# 
  3558  0EA1                     	;# 
  3559  0EA2                     	;# 
  3560  0EA3                     	;# 
  3561  0EA4                     	;# 
  3562  0EA5                     	;# 
  3563  0EA9                     	;# 
  3564  0EAA                     	;# 
  3565  0EAB                     	;# 
  3566  0EAC                     	;# 
  3567  0EB1                     	;# 
  3568  0EB2                     	;# 
  3569  0EB3                     	;# 
  3570  0EB8                     	;# 
  3571  0EB9                     	;# 
  3572  0EBA                     	;# 
  3573  0EBB                     	;# 
  3574  0EBC                     	;# 
  3575  0EBD                     	;# 
  3576  0EBE                     	;# 
  3577  0EC3                     	;# 
  3578  0EC5                     	;# 
  3579  0EC6                     	;# 
  3580  0EC7                     	;# 
  3581  0EC8                     	;# 
  3582  0EC9                     	;# 
  3583  0ECA                     	;# 
  3584  0ECB                     	;# 
  3585  0ECC                     	;# 
  3586  0F10                     	;# 
  3587  0F11                     	;# 
  3588  0F12                     	;# 
  3589  0F13                     	;# 
  3590  0F14                     	;# 
  3591  0F15                     	;# 
  3592  0F16                     	;# 
  3593  0F17                     	;# 
  3594  0F18                     	;# 
  3595  0F19                     	;# 
  3596  0F1A                     	;# 
  3597  0F1B                     	;# 
  3598  0F1C                     	;# 
  3599  0F1D                     	;# 
  3600  0F1E                     	;# 
  3601  0F1F                     	;# 
  3602  0F20                     	;# 
  3603  0F21                     	;# 
  3604  0F22                     	;# 
  3605  0F23                     	;# 
  3606  0F24                     	;# 
  3607  0F25                     	;# 
  3608  0F26                     	;# 
  3609  0F27                     	;# 
  3610  0F38                     	;# 
  3611  0F39                     	;# 
  3612  0F3A                     	;# 
  3613  0F3B                     	;# 
  3614  0F3C                     	;# 
  3615  0F3D                     	;# 
  3616  0F3E                     	;# 
  3617  0F3F                     	;# 
  3618  0F40                     	;# 
  3619  0F41                     	;# 
  3620  0F43                     	;# 
  3621  0F44                     	;# 
  3622  0F45                     	;# 
  3623  0F46                     	;# 
  3624  0F47                     	;# 
  3625  0F48                     	;# 
  3626  0F49                     	;# 
  3627  0F4A                     	;# 
  3628  0F4B                     	;# 
  3629  0F4C                     	;# 
  3630  0F4E                     	;# 
  3631  0F4F                     	;# 
  3632  0F50                     	;# 
  3633  0F51                     	;# 
  3634  0F52                     	;# 
  3635  0F53                     	;# 
  3636  0F54                     	;# 
  3637  0F55                     	;# 
  3638  0F56                     	;# 
  3639  0F57                     	;# 
  3640  0F65                     	;# 
  3641  0F68                     	;# 
  3642  0F69                     	;# 
  3643  0F6A                     	;# 
  3644  0F6B                     	;# 
  3645  0FE4                     	;# 
  3646  0FE5                     	;# 
  3647  0FE6                     	;# 
  3648  0FE7                     	;# 
  3649  0FE8                     	;# 
  3650  0FE9                     	;# 
  3651  0FEA                     	;# 
  3652  0FEB                     	;# 
  3653  0FED                     	;# 
  3654  0FEE                     	;# 
  3655  0FEF                     	;# 
  3656  0000                     	;# 
  3657  0001                     	;# 
  3658  0002                     	;# 
  3659  0003                     	;# 
  3660  0004                     	;# 
  3661  0005                     	;# 
  3662  0006                     	;# 
  3663  0007                     	;# 
  3664  0008                     	;# 
  3665  0009                     	;# 
  3666  000A                     	;# 
  3667  000B                     	;# 
  3668  000C                     	;# 
  3669  000D                     	;# 
  3670  000E                     	;# 
  3671  0010                     	;# 
  3672  0011                     	;# 
  3673  0012                     	;# 
  3674  0013                     	;# 
  3675  0016                     	;# 
  3676  0017                     	;# 
  3677  0018                     	;# 
  3678  001C                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008C                     	;# 
  3686  008D                     	;# 
  3687  008E                     	;# 
  3688  008E                     	;# 
  3689  008F                     	;# 
  3690  0090                     	;# 
  3691  0090                     	;# 
  3692  0091                     	;# 
  3693  0093                     	;# 
  3694  0094                     	;# 
  3695  0095                     	;# 
  3696  0096                     	;# 
  3697  0097                     	;# 
  3698  0098                     	;# 
  3699  0099                     	;# 
  3700  009A                     	;# 
  3701  009B                     	;# 
  3702  009C                     	;# 
  3703  009D                     	;# 
  3704  009E                     	;# 
  3705  010C                     	;# 
  3706  010D                     	;# 
  3707  010E                     	;# 
  3708  010E                     	;# 
  3709  010F                     	;# 
  3710  0110                     	;# 
  3711  0110                     	;# 
  3712  0111                     	;# 
  3713  0112                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0114                     	;# 
  3718  0115                     	;# 
  3719  0116                     	;# 
  3720  0116                     	;# 
  3721  0117                     	;# 
  3722  0119                     	;# 
  3723  0119                     	;# 
  3724  0119                     	;# 
  3725  011A                     	;# 
  3726  011A                     	;# 
  3727  011A                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011B                     	;# 
  3732  011B                     	;# 
  3733  011C                     	;# 
  3734  011C                     	;# 
  3735  011C                     	;# 
  3736  011D                     	;# 
  3737  011D                     	;# 
  3738  011D                     	;# 
  3739  011E                     	;# 
  3740  011E                     	;# 
  3741  011E                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  011F                     	;# 
  3746  011F                     	;# 
  3747  018C                     	;# 
  3748  018D                     	;# 
  3749  018E                     	;# 
  3750  018F                     	;# 
  3751  0190                     	;# 
  3752  0191                     	;# 
  3753  0192                     	;# 
  3754  0196                     	;# 
  3755  0197                     	;# 
  3756  0198                     	;# 
  3757  0199                     	;# 
  3758  019A                     	;# 
  3759  019B                     	;# 
  3760  019C                     	;# 
  3761  020C                     	;# 
  3762  020D                     	;# 
  3763  020E                     	;# 
  3764  020F                     	;# 
  3765  020F                     	;# 
  3766  0210                     	;# 
  3767  0210                     	;# 
  3768  0211                     	;# 
  3769  0211                     	;# 
  3770  0212                     	;# 
  3771  0213                     	;# 
  3772  0214                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0216                     	;# 
  3776  0216                     	;# 
  3777  0217                     	;# 
  3778  0217                     	;# 
  3779  0218                     	;# 
  3780  0219                     	;# 
  3781  021A                     	;# 
  3782  021B                     	;# 
  3783  021B                     	;# 
  3784  021C                     	;# 
  3785  021C                     	;# 
  3786  021D                     	;# 
  3787  021D                     	;# 
  3788  021E                     	;# 
  3789  021F                     	;# 
  3790  028C                     	;# 
  3791  028C                     	;# 
  3792  028D                     	;# 
  3793  028D                     	;# 
  3794  028E                     	;# 
  3795  028F                     	;# 
  3796  0290                     	;# 
  3797  0290                     	;# 
  3798  0291                     	;# 
  3799  0292                     	;# 
  3800  0292                     	;# 
  3801  0293                     	;# 
  3802  0293                     	;# 
  3803  0294                     	;# 
  3804  0295                     	;# 
  3805  0296                     	;# 
  3806  0296                     	;# 
  3807  0297                     	;# 
  3808  0298                     	;# 
  3809  0298                     	;# 
  3810  0299                     	;# 
  3811  0299                     	;# 
  3812  029A                     	;# 
  3813  029B                     	;# 
  3814  029C                     	;# 
  3815  029C                     	;# 
  3816  029D                     	;# 
  3817  030C                     	;# 
  3818  030C                     	;# 
  3819  030D                     	;# 
  3820  030E                     	;# 
  3821  030F                     	;# 
  3822  0310                     	;# 
  3823  0310                     	;# 
  3824  0311                     	;# 
  3825  0312                     	;# 
  3826  0313                     	;# 
  3827  0314                     	;# 
  3828  0314                     	;# 
  3829  0315                     	;# 
  3830  0316                     	;# 
  3831  0317                     	;# 
  3832  0318                     	;# 
  3833  0318                     	;# 
  3834  0319                     	;# 
  3835  031A                     	;# 
  3836  031B                     	;# 
  3837  031C                     	;# 
  3838  031C                     	;# 
  3839  031D                     	;# 
  3840  031E                     	;# 
  3841  031F                     	;# 
  3842  038C                     	;# 
  3843  038D                     	;# 
  3844  038E                     	;# 
  3845  0390                     	;# 
  3846  0391                     	;# 
  3847  0392                     	;# 
  3848  040C                     	;# 
  3849  040D                     	;# 
  3850  040E                     	;# 
  3851  040F                     	;# 
  3852  0410                     	;# 
  3853  0411                     	;# 
  3854  0416                     	;# 
  3855  0416                     	;# 
  3856  0417                     	;# 
  3857  0418                     	;# 
  3858  0418                     	;# 
  3859  0419                     	;# 
  3860  041A                     	;# 
  3861  041A                     	;# 
  3862  041B                     	;# 
  3863  041C                     	;# 
  3864  041C                     	;# 
  3865  041D                     	;# 
  3866  041E                     	;# 
  3867  041F                     	;# 
  3868  048C                     	;# 
  3869  048C                     	;# 
  3870  048D                     	;# 
  3871  048E                     	;# 
  3872  048F                     	;# 
  3873  048F                     	;# 
  3874  0490                     	;# 
  3875  0491                     	;# 
  3876  0492                     	;# 
  3877  0492                     	;# 
  3878  0493                     	;# 
  3879  0494                     	;# 
  3880  0495                     	;# 
  3881  0495                     	;# 
  3882  0496                     	;# 
  3883  0497                     	;# 
  3884  0498                     	;# 
  3885  0499                     	;# 
  3886  049A                     	;# 
  3887  049B                     	;# 
  3888  049C                     	;# 
  3889  049D                     	;# 
  3890  050C                     	;# 
  3891  050C                     	;# 
  3892  050D                     	;# 
  3893  050E                     	;# 
  3894  050F                     	;# 
  3895  050F                     	;# 
  3896  0510                     	;# 
  3897  0511                     	;# 
  3898  0512                     	;# 
  3899  0512                     	;# 
  3900  0513                     	;# 
  3901  0514                     	;# 
  3902  0515                     	;# 
  3903  0515                     	;# 
  3904  0516                     	;# 
  3905  0517                     	;# 
  3906  0518                     	;# 
  3907  0519                     	;# 
  3908  051A                     	;# 
  3909  051B                     	;# 
  3910  051C                     	;# 
  3911  051D                     	;# 
  3912  058C                     	;# 
  3913  058C                     	;# 
  3914  058D                     	;# 
  3915  058E                     	;# 
  3916  058F                     	;# 
  3917  058F                     	;# 
  3918  0590                     	;# 
  3919  0591                     	;# 
  3920  0592                     	;# 
  3921  0593                     	;# 
  3922  060C                     	;# 
  3923  060D                     	;# 
  3924  060E                     	;# 
  3925  060F                     	;# 
  3926  0610                     	;# 
  3927  0611                     	;# 
  3928  0612                     	;# 
  3929  0613                     	;# 
  3930  0614                     	;# 
  3931  0616                     	;# 
  3932  0617                     	;# 
  3933  0618                     	;# 
  3934  0619                     	;# 
  3935  061A                     	;# 
  3936  061B                     	;# 
  3937  061C                     	;# 
  3938  061D                     	;# 
  3939  061E                     	;# 
  3940  068C                     	;# 
  3941  068D                     	;# 
  3942  068E                     	;# 
  3943  068F                     	;# 
  3944  0690                     	;# 
  3945  0691                     	;# 
  3946  0692                     	;# 
  3947  0693                     	;# 
  3948  0694                     	;# 
  3949  070C                     	;# 
  3950  070D                     	;# 
  3951  070E                     	;# 
  3952  070F                     	;# 
  3953  0710                     	;# 
  3954  0711                     	;# 
  3955  0712                     	;# 
  3956  0713                     	;# 
  3957  0714                     	;# 
  3958  0716                     	;# 
  3959  0717                     	;# 
  3960  0718                     	;# 
  3961  0719                     	;# 
  3962  071A                     	;# 
  3963  071B                     	;# 
  3964  071C                     	;# 
  3965  071D                     	;# 
  3966  071E                     	;# 
  3967  0796                     	;# 
  3968  0797                     	;# 
  3969  0798                     	;# 
  3970  0799                     	;# 
  3971  079A                     	;# 
  3972  079B                     	;# 
  3973  080C                     	;# 
  3974  080D                     	;# 
  3975  080E                     	;# 
  3976  080F                     	;# 
  3977  0810                     	;# 
  3978  0811                     	;# 
  3979  0812                     	;# 
  3980  0813                     	;# 
  3981  0814                     	;# 
  3982  081A                     	;# 
  3983  081B                     	;# 
  3984  081C                     	;# 
  3985  081D                     	;# 
  3986  081E                     	;# 
  3987  081F                     	;# 
  3988  088C                     	;# 
  3989  088D                     	;# 
  3990  088E                     	;# 
  3991  088F                     	;# 
  3992  0890                     	;# 
  3993  0891                     	;# 
  3994  0892                     	;# 
  3995  0893                     	;# 
  3996  0895                     	;# 
  3997  0896                     	;# 
  3998  0897                     	;# 
  3999  0898                     	;# 
  4000  0899                     	;# 
  4001  089A                     	;# 
  4002  089B                     	;# 
  4003  090C                     	;# 
  4004  090E                     	;# 
  4005  090F                     	;# 
  4006  091F                     	;# 
  4007  091F                     	;# 
  4008  098F                     	;# 
  4009  098F                     	;# 
  4010  0990                     	;# 
  4011  0991                     	;# 
  4012  0992                     	;# 
  4013  0993                     	;# 
  4014  0994                     	;# 
  4015  0995                     	;# 
  4016  0996                     	;# 
  4017  0997                     	;# 
  4018  0E0F                     	;# 
  4019  0E10                     	;# 
  4020  0E11                     	;# 
  4021  0E12                     	;# 
  4022  0E13                     	;# 
  4023  0E14                     	;# 
  4024  0E15                     	;# 
  4025  0E16                     	;# 
  4026  0E17                     	;# 
  4027  0E18                     	;# 
  4028  0E19                     	;# 
  4029  0E1A                     	;# 
  4030  0E1B                     	;# 
  4031  0E1C                     	;# 
  4032  0E1D                     	;# 
  4033  0E1E                     	;# 
  4034  0E1F                     	;# 
  4035  0E20                     	;# 
  4036  0E21                     	;# 
  4037  0E22                     	;# 
  4038  0E23                     	;# 
  4039  0E24                     	;# 
  4040  0E25                     	;# 
  4041  0E26                     	;# 
  4042  0E27                     	;# 
  4043  0E28                     	;# 
  4044  0E29                     	;# 
  4045  0E2A                     	;# 
  4046  0E2B                     	;# 
  4047  0E2C                     	;# 
  4048  0E2D                     	;# 
  4049  0E2E                     	;# 
  4050  0E2F                     	;# 
  4051  0E30                     	;# 
  4052  0E31                     	;# 
  4053  0E32                     	;# 
  4054  0E33                     	;# 
  4055  0E34                     	;# 
  4056  0E35                     	;# 
  4057  0E36                     	;# 
  4058  0E37                     	;# 
  4059  0E8F                     	;# 
  4060  0E90                     	;# 
  4061  0E91                     	;# 
  4062  0E92                     	;# 
  4063  0E93                     	;# 
  4064  0E94                     	;# 
  4065  0E95                     	;# 
  4066  0E96                     	;# 
  4067  0E97                     	;# 
  4068  0E9C                     	;# 
  4069  0E9D                     	;# 
  4070  0E9E                     	;# 
  4071  0EA1                     	;# 
  4072  0EA2                     	;# 
  4073  0EA3                     	;# 
  4074  0EA4                     	;# 
  4075  0EA5                     	;# 
  4076  0EA9                     	;# 
  4077  0EAA                     	;# 
  4078  0EAB                     	;# 
  4079  0EAC                     	;# 
  4080  0EB1                     	;# 
  4081  0EB2                     	;# 
  4082  0EB3                     	;# 
  4083  0EB8                     	;# 
  4084  0EB9                     	;# 
  4085  0EBA                     	;# 
  4086  0EBB                     	;# 
  4087  0EBC                     	;# 
  4088  0EBD                     	;# 
  4089  0EBE                     	;# 
  4090  0EC3                     	;# 
  4091  0EC5                     	;# 
  4092  0EC6                     	;# 
  4093  0EC7                     	;# 
  4094  0EC8                     	;# 
  4095  0EC9                     	;# 
  4096  0ECA                     	;# 
  4097  0ECB                     	;# 
  4098  0ECC                     	;# 
  4099  0F10                     	;# 
  4100  0F11                     	;# 
  4101  0F12                     	;# 
  4102  0F13                     	;# 
  4103  0F14                     	;# 
  4104  0F15                     	;# 
  4105  0F16                     	;# 
  4106  0F17                     	;# 
  4107  0F18                     	;# 
  4108  0F19                     	;# 
  4109  0F1A                     	;# 
  4110  0F1B                     	;# 
  4111  0F1C                     	;# 
  4112  0F1D                     	;# 
  4113  0F1E                     	;# 
  4114  0F1F                     	;# 
  4115  0F20                     	;# 
  4116  0F21                     	;# 
  4117  0F22                     	;# 
  4118  0F23                     	;# 
  4119  0F24                     	;# 
  4120  0F25                     	;# 
  4121  0F26                     	;# 
  4122  0F27                     	;# 
  4123  0F38                     	;# 
  4124  0F39                     	;# 
  4125  0F3A                     	;# 
  4126  0F3B                     	;# 
  4127  0F3C                     	;# 
  4128  0F3D                     	;# 
  4129  0F3E                     	;# 
  4130  0F3F                     	;# 
  4131  0F40                     	;# 
  4132  0F41                     	;# 
  4133  0F43                     	;# 
  4134  0F44                     	;# 
  4135  0F45                     	;# 
  4136  0F46                     	;# 
  4137  0F47                     	;# 
  4138  0F48                     	;# 
  4139  0F49                     	;# 
  4140  0F4A                     	;# 
  4141  0F4B                     	;# 
  4142  0F4C                     	;# 
  4143  0F4E                     	;# 
  4144  0F4F                     	;# 
  4145  0F50                     	;# 
  4146  0F51                     	;# 
  4147  0F52                     	;# 
  4148  0F53                     	;# 
  4149  0F54                     	;# 
  4150  0F55                     	;# 
  4151  0F56                     	;# 
  4152  0F57                     	;# 
  4153  0F65                     	;# 
  4154  0F68                     	;# 
  4155  0F69                     	;# 
  4156  0F6A                     	;# 
  4157  0F6B                     	;# 
  4158  0FE4                     	;# 
  4159  0FE5                     	;# 
  4160  0FE6                     	;# 
  4161  0FE7                     	;# 
  4162  0FE8                     	;# 
  4163  0FE9                     	;# 
  4164  0FEA                     	;# 
  4165  0FEB                     	;# 
  4166  0FED                     	;# 
  4167  0FEE                     	;# 
  4168  0FEF                     	;# 
  4169  0000                     	;# 
  4170  0001                     	;# 
  4171  0002                     	;# 
  4172  0003                     	;# 
  4173  0004                     	;# 
  4174  0005                     	;# 
  4175  0006                     	;# 
  4176  0007                     	;# 
  4177  0008                     	;# 
  4178  0009                     	;# 
  4179  000A                     	;# 
  4180  000B                     	;# 
  4181  000C                     	;# 
  4182  000D                     	;# 
  4183  000E                     	;# 
  4184  0010                     	;# 
  4185  0011                     	;# 
  4186  0012                     	;# 
  4187  0013                     	;# 
  4188  0016                     	;# 
  4189  0017                     	;# 
  4190  0018                     	;# 
  4191  001C                     	;# 
  4192  001C                     	;# 
  4193  001D                     	;# 
  4194  001D                     	;# 
  4195  001E                     	;# 
  4196  001F                     	;# 
  4197  008C                     	;# 
  4198  008C                     	;# 
  4199  008D                     	;# 
  4200  008E                     	;# 
  4201  008E                     	;# 
  4202  008F                     	;# 
  4203  0090                     	;# 
  4204  0090                     	;# 
  4205  0091                     	;# 
  4206  0093                     	;# 
  4207  0094                     	;# 
  4208  0095                     	;# 
  4209  0096                     	;# 
  4210  0097                     	;# 
  4211  0098                     	;# 
  4212  0099                     	;# 
  4213  009A                     	;# 
  4214  009B                     	;# 
  4215  009C                     	;# 
  4216  009D                     	;# 
  4217  009E                     	;# 
  4218  010C                     	;# 
  4219  010D                     	;# 
  4220  010E                     	;# 
  4221  010E                     	;# 
  4222  010F                     	;# 
  4223  0110                     	;# 
  4224  0110                     	;# 
  4225  0111                     	;# 
  4226  0112                     	;# 
  4227  0112                     	;# 
  4228  0113                     	;# 
  4229  0114                     	;# 
  4230  0114                     	;# 
  4231  0115                     	;# 
  4232  0116                     	;# 
  4233  0116                     	;# 
  4234  0117                     	;# 
  4235  0119                     	;# 
  4236  0119                     	;# 
  4237  0119                     	;# 
  4238  011A                     	;# 
  4239  011A                     	;# 
  4240  011A                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011B                     	;# 
  4244  011B                     	;# 
  4245  011B                     	;# 
  4246  011C                     	;# 
  4247  011C                     	;# 
  4248  011C                     	;# 
  4249  011D                     	;# 
  4250  011D                     	;# 
  4251  011D                     	;# 
  4252  011E                     	;# 
  4253  011E                     	;# 
  4254  011E                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  011F                     	;# 
  4258  011F                     	;# 
  4259  011F                     	;# 
  4260  018C                     	;# 
  4261  018D                     	;# 
  4262  018E                     	;# 
  4263  018F                     	;# 
  4264  0190                     	;# 
  4265  0191                     	;# 
  4266  0192                     	;# 
  4267  0196                     	;# 
  4268  0197                     	;# 
  4269  0198                     	;# 
  4270  0199                     	;# 
  4271  019A                     	;# 
  4272  019B                     	;# 
  4273  019C                     	;# 
  4274  020C                     	;# 
  4275  020D                     	;# 
  4276  020E                     	;# 
  4277  020F                     	;# 
  4278  020F                     	;# 
  4279  0210                     	;# 
  4280  0210                     	;# 
  4281  0211                     	;# 
  4282  0211                     	;# 
  4283  0212                     	;# 
  4284  0213                     	;# 
  4285  0214                     	;# 
  4286  0215                     	;# 
  4287  0215                     	;# 
  4288  0216                     	;# 
  4289  0216                     	;# 
  4290  0217                     	;# 
  4291  0217                     	;# 
  4292  0218                     	;# 
  4293  0219                     	;# 
  4294  021A                     	;# 
  4295  021B                     	;# 
  4296  021B                     	;# 
  4297  021C                     	;# 
  4298  021C                     	;# 
  4299  021D                     	;# 
  4300  021D                     	;# 
  4301  021E                     	;# 
  4302  021F                     	;# 
  4303  028C                     	;# 
  4304  028C                     	;# 
  4305  028D                     	;# 
  4306  028D                     	;# 
  4307  028E                     	;# 
  4308  028F                     	;# 
  4309  0290                     	;# 
  4310  0290                     	;# 
  4311  0291                     	;# 
  4312  0292                     	;# 
  4313  0292                     	;# 
  4314  0293                     	;# 
  4315  0293                     	;# 
  4316  0294                     	;# 
  4317  0295                     	;# 
  4318  0296                     	;# 
  4319  0296                     	;# 
  4320  0297                     	;# 
  4321  0298                     	;# 
  4322  0298                     	;# 
  4323  0299                     	;# 
  4324  0299                     	;# 
  4325  029A                     	;# 
  4326  029B                     	;# 
  4327  029C                     	;# 
  4328  029C                     	;# 
  4329  029D                     	;# 
  4330  030C                     	;# 
  4331  030C                     	;# 
  4332  030D                     	;# 
  4333  030E                     	;# 
  4334  030F                     	;# 
  4335  0310                     	;# 
  4336  0310                     	;# 
  4337  0311                     	;# 
  4338  0312                     	;# 
  4339  0313                     	;# 
  4340  0314                     	;# 
  4341  0314                     	;# 
  4342  0315                     	;# 
  4343  0316                     	;# 
  4344  0317                     	;# 
  4345  0318                     	;# 
  4346  0318                     	;# 
  4347  0319                     	;# 
  4348  031A                     	;# 
  4349  031B                     	;# 
  4350  031C                     	;# 
  4351  031C                     	;# 
  4352  031D                     	;# 
  4353  031E                     	;# 
  4354  031F                     	;# 
  4355  038C                     	;# 
  4356  038D                     	;# 
  4357  038E                     	;# 
  4358  0390                     	;# 
  4359  0391                     	;# 
  4360  0392                     	;# 
  4361  040C                     	;# 
  4362  040D                     	;# 
  4363  040E                     	;# 
  4364  040F                     	;# 
  4365  0410                     	;# 
  4366  0411                     	;# 
  4367  0416                     	;# 
  4368  0416                     	;# 
  4369  0417                     	;# 
  4370  0418                     	;# 
  4371  0418                     	;# 
  4372  0419                     	;# 
  4373  041A                     	;# 
  4374  041A                     	;# 
  4375  041B                     	;# 
  4376  041C                     	;# 
  4377  041C                     	;# 
  4378  041D                     	;# 
  4379  041E                     	;# 
  4380  041F                     	;# 
  4381  048C                     	;# 
  4382  048C                     	;# 
  4383  048D                     	;# 
  4384  048E                     	;# 
  4385  048F                     	;# 
  4386  048F                     	;# 
  4387  0490                     	;# 
  4388  0491                     	;# 
  4389  0492                     	;# 
  4390  0492                     	;# 
  4391  0493                     	;# 
  4392  0494                     	;# 
  4393  0495                     	;# 
  4394  0495                     	;# 
  4395  0496                     	;# 
  4396  0497                     	;# 
  4397  0498                     	;# 
  4398  0499                     	;# 
  4399  049A                     	;# 
  4400  049B                     	;# 
  4401  049C                     	;# 
  4402  049D                     	;# 
  4403  050C                     	;# 
  4404  050C                     	;# 
  4405  050D                     	;# 
  4406  050E                     	;# 
  4407  050F                     	;# 
  4408  050F                     	;# 
  4409  0510                     	;# 
  4410  0511                     	;# 
  4411  0512                     	;# 
  4412  0512                     	;# 
  4413  0513                     	;# 
  4414  0514                     	;# 
  4415  0515                     	;# 
  4416  0515                     	;# 
  4417  0516                     	;# 
  4418  0517                     	;# 
  4419  0518                     	;# 
  4420  0519                     	;# 
  4421  051A                     	;# 
  4422  051B                     	;# 
  4423  051C                     	;# 
  4424  051D                     	;# 
  4425  058C                     	;# 
  4426  058C                     	;# 
  4427  058D                     	;# 
  4428  058E                     	;# 
  4429  058F                     	;# 
  4430  058F                     	;# 
  4431  0590                     	;# 
  4432  0591                     	;# 
  4433  0592                     	;# 
  4434  0593                     	;# 
  4435  060C                     	;# 
  4436  060D                     	;# 
  4437  060E                     	;# 
  4438  060F                     	;# 
  4439  0610                     	;# 
  4440  0611                     	;# 
  4441  0612                     	;# 
  4442  0613                     	;# 
  4443  0614                     	;# 
  4444  0616                     	;# 
  4445  0617                     	;# 
  4446  0618                     	;# 
  4447  0619                     	;# 
  4448  061A                     	;# 
  4449  061B                     	;# 
  4450  061C                     	;# 
  4451  061D                     	;# 
  4452  061E                     	;# 
  4453  068C                     	;# 
  4454  068D                     	;# 
  4455  068E                     	;# 
  4456  068F                     	;# 
  4457  0690                     	;# 
  4458  0691                     	;# 
  4459  0692                     	;# 
  4460  0693                     	;# 
  4461  0694                     	;# 
  4462  070C                     	;# 
  4463  070D                     	;# 
  4464  070E                     	;# 
  4465  070F                     	;# 
  4466  0710                     	;# 
  4467  0711                     	;# 
  4468  0712                     	;# 
  4469  0713                     	;# 
  4470  0714                     	;# 
  4471  0716                     	;# 
  4472  0717                     	;# 
  4473  0718                     	;# 
  4474  0719                     	;# 
  4475  071A                     	;# 
  4476  071B                     	;# 
  4477  071C                     	;# 
  4478  071D                     	;# 
  4479  071E                     	;# 
  4480  0796                     	;# 
  4481  0797                     	;# 
  4482  0798                     	;# 
  4483  0799                     	;# 
  4484  079A                     	;# 
  4485  079B                     	;# 
  4486  080C                     	;# 
  4487  080D                     	;# 
  4488  080E                     	;# 
  4489  080F                     	;# 
  4490  0810                     	;# 
  4491  0811                     	;# 
  4492  0812                     	;# 
  4493  0813                     	;# 
  4494  0814                     	;# 
  4495  081A                     	;# 
  4496  081B                     	;# 
  4497  081C                     	;# 
  4498  081D                     	;# 
  4499  081E                     	;# 
  4500  081F                     	;# 
  4501  088C                     	;# 
  4502  088D                     	;# 
  4503  088E                     	;# 
  4504  088F                     	;# 
  4505  0890                     	;# 
  4506  0891                     	;# 
  4507  0892                     	;# 
  4508  0893                     	;# 
  4509  0895                     	;# 
  4510  0896                     	;# 
  4511  0897                     	;# 
  4512  0898                     	;# 
  4513  0899                     	;# 
  4514  089A                     	;# 
  4515  089B                     	;# 
  4516  090C                     	;# 
  4517  090E                     	;# 
  4518  090F                     	;# 
  4519  091F                     	;# 
  4520  091F                     	;# 
  4521  098F                     	;# 
  4522  098F                     	;# 
  4523  0990                     	;# 
  4524  0991                     	;# 
  4525  0992                     	;# 
  4526  0993                     	;# 
  4527  0994                     	;# 
  4528  0995                     	;# 
  4529  0996                     	;# 
  4530  0997                     	;# 
  4531  0E0F                     	;# 
  4532  0E10                     	;# 
  4533  0E11                     	;# 
  4534  0E12                     	;# 
  4535  0E13                     	;# 
  4536  0E14                     	;# 
  4537  0E15                     	;# 
  4538  0E16                     	;# 
  4539  0E17                     	;# 
  4540  0E18                     	;# 
  4541  0E19                     	;# 
  4542  0E1A                     	;# 
  4543  0E1B                     	;# 
  4544  0E1C                     	;# 
  4545  0E1D                     	;# 
  4546  0E1E                     	;# 
  4547  0E1F                     	;# 
  4548  0E20                     	;# 
  4549  0E21                     	;# 
  4550  0E22                     	;# 
  4551  0E23                     	;# 
  4552  0E24                     	;# 
  4553  0E25                     	;# 
  4554  0E26                     	;# 
  4555  0E27                     	;# 
  4556  0E28                     	;# 
  4557  0E29                     	;# 
  4558  0E2A                     	;# 
  4559  0E2B                     	;# 
  4560  0E2C                     	;# 
  4561  0E2D                     	;# 
  4562  0E2E                     	;# 
  4563  0E2F                     	;# 
  4564  0E30                     	;# 
  4565  0E31                     	;# 
  4566  0E32                     	;# 
  4567  0E33                     	;# 
  4568  0E34                     	;# 
  4569  0E35                     	;# 
  4570  0E36                     	;# 
  4571  0E37                     	;# 
  4572  0E8F                     	;# 
  4573  0E90                     	;# 
  4574  0E91                     	;# 
  4575  0E92                     	;# 
  4576  0E93                     	;# 
  4577  0E94                     	;# 
  4578  0E95                     	;# 
  4579  0E96                     	;# 
  4580  0E97                     	;# 
  4581  0E9C                     	;# 
  4582  0E9D                     	;# 
  4583  0E9E                     	;# 
  4584  0EA1                     	;# 
  4585  0EA2                     	;# 
  4586  0EA3                     	;# 
  4587  0EA4                     	;# 
  4588  0EA5                     	;# 
  4589  0EA9                     	;# 
  4590  0EAA                     	;# 
  4591  0EAB                     	;# 
  4592  0EAC                     	;# 
  4593  0EB1                     	;# 
  4594  0EB2                     	;# 
  4595  0EB3                     	;# 
  4596  0EB8                     	;# 
  4597  0EB9                     	;# 
  4598  0EBA                     	;# 
  4599  0EBB                     	;# 
  4600  0EBC                     	;# 
  4601  0EBD                     	;# 
  4602  0EBE                     	;# 
  4603  0EC3                     	;# 
  4604  0EC5                     	;# 
  4605  0EC6                     	;# 
  4606  0EC7                     	;# 
  4607  0EC8                     	;# 
  4608  0EC9                     	;# 
  4609  0ECA                     	;# 
  4610  0ECB                     	;# 
  4611  0ECC                     	;# 
  4612  0F10                     	;# 
  4613  0F11                     	;# 
  4614  0F12                     	;# 
  4615  0F13                     	;# 
  4616  0F14                     	;# 
  4617  0F15                     	;# 
  4618  0F16                     	;# 
  4619  0F17                     	;# 
  4620  0F18                     	;# 
  4621  0F19                     	;# 
  4622  0F1A                     	;# 
  4623  0F1B                     	;# 
  4624  0F1C                     	;# 
  4625  0F1D                     	;# 
  4626  0F1E                     	;# 
  4627  0F1F                     	;# 
  4628  0F20                     	;# 
  4629  0F21                     	;# 
  4630  0F22                     	;# 
  4631  0F23                     	;# 
  4632  0F24                     	;# 
  4633  0F25                     	;# 
  4634  0F26                     	;# 
  4635  0F27                     	;# 
  4636  0F38                     	;# 
  4637  0F39                     	;# 
  4638  0F3A                     	;# 
  4639  0F3B                     	;# 
  4640  0F3C                     	;# 
  4641  0F3D                     	;# 
  4642  0F3E                     	;# 
  4643  0F3F                     	;# 
  4644  0F40                     	;# 
  4645  0F41                     	;# 
  4646  0F43                     	;# 
  4647  0F44                     	;# 
  4648  0F45                     	;# 
  4649  0F46                     	;# 
  4650  0F47                     	;# 
  4651  0F48                     	;# 
  4652  0F49                     	;# 
  4653  0F4A                     	;# 
  4654  0F4B                     	;# 
  4655  0F4C                     	;# 
  4656  0F4E                     	;# 
  4657  0F4F                     	;# 
  4658  0F50                     	;# 
  4659  0F51                     	;# 
  4660  0F52                     	;# 
  4661  0F53                     	;# 
  4662  0F54                     	;# 
  4663  0F55                     	;# 
  4664  0F56                     	;# 
  4665  0F57                     	;# 
  4666  0F65                     	;# 
  4667  0F68                     	;# 
  4668  0F69                     	;# 
  4669  0F6A                     	;# 
  4670  0F6B                     	;# 
  4671  0FE4                     	;# 
  4672  0FE5                     	;# 
  4673  0FE6                     	;# 
  4674  0FE7                     	;# 
  4675  0FE8                     	;# 
  4676  0FE9                     	;# 
  4677  0FEA                     	;# 
  4678  0FEB                     	;# 
  4679  0FED                     	;# 
  4680  0FEE                     	;# 
  4681  0FEF                     	;_samples
  4682                           
  4683                           	psect	idataBANK0
  4684  16F2                     __pidataBANK0:	
  4685                           
  4686                           ;initializer for _PID_MaxOutput
  4687  16F2  34FF               	retlw	255
  4688  16F3  3403               	retlw	3
  4689                           
  4690                           ;initializer for _setpoint
  4691  16F4  3446               	retlw	70
  4692                           
  4693                           	psect	idataBANK1
  4694  16F5                     __pidataBANK1:	
  4695                           ;initializer for _presets
  4696                           
  4697  16F5  3400               	retlw	0
  4698  16F6  3446               	retlw	70
  4699  16F7  345F               	retlw	95
  4700  16F8  3469               	retlw	105
  4701  16F9  3478               	retlw	120
  4702                           
  4703                           	psect	idataBANK2
  4704  179B                     __pidataBANK2:	
  4705                           
  4706                           ;initializer for ___cgram
  4707  179B  340C               	retlw	12
  4708  179C  3412               	retlw	18
  4709  179D  3412               	retlw	18
  4710  179E  340C               	retlw	12
  4711  179F  3400               	retlw	0
  4712  17A0  3400               	retlw	0
  4713  17A1  3400               	retlw	0
  4714  17A2  3400               	retlw	0
  4715  17A3  340A               	retlw	10
  4716  17A4  3415               	retlw	21
  4717  17A5  3411               	retlw	17
  4718  17A6  340A               	retlw	10
  4719  17A7  3404               	retlw	4
  4720  17A8  3400               	retlw	0
  4721  17A9  3400               	retlw	0
  4722  17AA  3400               	retlw	0
  4723  17AB  340A               	retlw	10
  4724  17AC  341F               	retlw	31
  4725  17AD  341F               	retlw	31
  4726  17AE  340E               	retlw	14
  4727  17AF  3404               	retlw	4
  4728  17B0  3400               	retlw	0
  4729  17B1  3400               	retlw	0
  4730  17B2  3400               	retlw	0
  4731                           
  4732                           	psect	stringtext
  4733  1000                     __pstringtext:	
  4734  1000                     log@coeff:	
  4735  1000  3400               	retlw	0
  4736  1001  3400               	retlw	0
  4737  1002  3400               	retlw	0
  4738  1003  3400               	retlw	0
  4739  1004  3480               	retlw	128
  4740  1005  343F               	retlw	63
  4741  1006  34F0               	retlw	240
  4742  1007  34FF               	retlw	255
  4743  1008  34BE               	retlw	190
  4744  1009  34E2               	retlw	226
  4745  100A  34A9               	retlw	169
  4746  100B  343E               	retlw	62
  4747  100C  3483               	retlw	131
  4748  100D  3476               	retlw	118
  4749  100E  34BE               	retlw	190
  4750  100F  34AE               	retlw	174
  4751  1010  342B               	retlw	43
  4752  1011  343E               	retlw	62
  4753  1012  343C               	retlw	60
  4754  1013  34C3               	retlw	195
  4755  1014  34BD               	retlw	189
  4756  1015  34D2               	retlw	210
  4757  1016  3413               	retlw	19
  4758  1017  343D               	retlw	61
  4759  1018  3478               	retlw	120
  4760  1019  34D3               	retlw	211
  4761  101A  34BB               	retlw	187
  4762  101B                     __end_oflog@coeff:	
  4763  0016                     _LATA	set	22
  4764  0017                     _LATB	set	23
  4765  0018                     _LATC	set	24
  4766  001E                     _T0CON0	set	30
  4767  001E                     _T0CON0bits	set	30
  4768  001F                     _T0CON1	set	31
  4769  001D                     _TMR0H	set	29
  4770  001C                     _TMR0L	set	28
  4771  0011                     _TRISA	set	17
  4772  0012                     _TRISB	set	18
  4773  0013                     _TRISC	set	19
  4774  005F                     _GIE	set	95
  4775  0063                     _RA3	set	99
  4776  0064                     _RA4	set	100
  4777  0068                     _RB0	set	104
  4778  0069                     _RB1	set	105
  4779  006A                     _RB2	set	106
  4780  006B                     _RB3	set	107
  4781  006C                     _RB4	set	108
  4782  006D                     _RB5	set	109
  4783  009D                     _ADACQ	set	157
  4784  0099                     _ADACT	set	153
  4785  009B                     _ADCAP	set	155
  4786  0098                     _ADCLK	set	152
  4787  0093                     _ADCON0	set	147
  4788  0093                     _ADCON0bits	set	147
  4789  0094                     _ADCON1	set	148
  4790  0095                     _ADCON2	set	149
  4791  0096                     _ADCON3	set	150
  4792  009E                     _ADPCH	set	158
  4793  009C                     _ADPRE	set	156
  4794  009A                     _ADREF	set	154
  4795  008D                     _ADRESH	set	141
  4796  008C                     _ADRESL	set	140
  4797  0097                     _ADSTAT	set	151
  4798  010F                     _ADLTHH	set	271
  4799  010E                     _ADLTHL	set	270
  4800  010D                     _ADRPT	set	269
  4801  0113                     _ADSTPTH	set	275
  4802  0112                     _ADSTPTL	set	274
  4803  0111                     _ADUTHH	set	273
  4804  0110                     _ADUTHL	set	272
  4805  021F                     _CCPTMRS1bits	set	543
  4806  0290                     _T2CLKCON	set	656
  4807  028E                     _T2CON	set	654
  4808  028E                     _T2CONbits	set	654
  4809  028F                     _T2HLT	set	655
  4810  028D                     _T2PR	set	653
  4811  0291                     _T2RST	set	657
  4812  028C                     _T2TMR	set	652
  4813  038E                     _PWM6CON	set	910
  4814  038D                     _PWM6DCH	set	909
  4815  038C                     _PWM6DCL	set	908
  4816  0716                     _PIE0bits	set	1814
  4817  070C                     _PIR0bits	set	1804
  4818  0710                     _PIR4bits	set	1808
  4819  3865                     _TMR0IF	set	14437
  4820  088D                     _OSCCON1	set	2189
  4821  088F                     _OSCCON3	set	2191
  4822  0891                     _OSCEN	set	2193
  4823  0893                     _OSCFRQ	set	2195
  4824  0892                     _OSCTUNE	set	2194
  4825  090C                     _FVRCON	set	2316
  4826  0E8F                     _PPSLOCK	set	3727
  4827  0E8F                     _PPSLOCKbits	set	3727
  4828  0F38                     _ANSELA	set	3896
  4829  0F43                     _ANSELB	set	3907
  4830  0F4E                     _ANSELC	set	3918
  4831  0F11                     _RA1PPS	set	3857
  4832  0F39                     _WPUA	set	3897
  4833  0F44                     _WPUB	set	3908
  4834  0F4F                     _WPUC	set	3919
  4835  0F65                     _WPUE	set	3941
  4836  101B                     STR_1:	
  4837  101B  3453               	retlw	83	;'S'
  4838  101C  3465               	retlw	101	;'e'
  4839  101D  3474               	retlw	116	;'t'
  4840  101E  3470               	retlw	112	;'p'
  4841  101F  346F               	retlw	111	;'o'
  4842  1020  3469               	retlw	105	;'i'
  4843  1021  346E               	retlw	110	;'n'
  4844  1022  3474               	retlw	116	;'t'
  4845  1023  343F               	retlw	63	;'?'
  4846  1024  3400               	retlw	0
  4847  1025                     STR_4:	
  4848  1025  3454               	retlw	84	;'T'
  4849  1026  3469               	retlw	105	;'i'
  4850  1027  346D               	retlw	109	;'m'
  4851  1028  3465               	retlw	101	;'e'
  4852  1029  343A               	retlw	58	;':'
  4853  102A  3400               	retlw	0
  4854  101B                     
  4855                           ; #config settings
  4856  0000                     
  4857                           	psect	cinit
  4858  07B9                     start_initialization:	
  4859  07B9                     __initialization:		;BIGRAM
  4860                           
  4861                           ; Initialize objects allocated to BANK0
  4862  07B9  3196  26F2  3187   	fcall	__pidataBANK0	;fetch initializer
  4863  07BC  00ED               	movwf	__pdataBANK0& (0+127)
  4864  07BD  3196  26F3  3187   	fcall	__pidataBANK0+1	;fetch initializer
  4865  07C0  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  4866  07C1  3196  26F4  3187   	fcall	__pidataBANK0+2	;fetch initializer
  4867  07C4  00EF               	movwf	(__pdataBANK0+2)& (0+127)
  4868                           
  4869                           ; Initialize objects allocated to BANK1
  4870  07C5  30F5               	movlw	low __pidataBANK1
  4871  07C6  0084               	movwf	4
  4872  07C7  3096               	movlw	(high __pidataBANK1)| (0+128)
  4873  07C8  0085               	movwf	5
  4874  07C9  30E5               	movlw	low __pdataBANK1
  4875  07CA  0086               	movwf	6
  4876  07CB  3000               	movlw	high __pdataBANK1
  4877  07CC  0087               	movwf	7
  4878  07CD  3000               	movlw	0
  4879  07CE  00FF               	movwf	btemp+1
  4880  07CF  3005               	movlw	5
  4881  07D0  3197  2716  3187   	fcall	init_ram
  4882                           
  4883                           ; Initialize objects allocated to BANK2
  4884  07D3  309B               	movlw	low __pidataBANK2
  4885  07D4  0084               	movwf	4
  4886  07D5  3097               	movlw	(high __pidataBANK2)| (0+128)
  4887  07D6  0085               	movwf	5
  4888  07D7  3020               	movlw	low __pdataBANK2
  4889  07D8  0086               	movwf	6
  4890  07D9  3001               	movlw	high __pdataBANK2
  4891  07DA  0087               	movwf	7
  4892  07DB  3000               	movlw	0
  4893  07DC  00FF               	movwf	btemp+1
  4894  07DD  3018               	movlw	24
  4895  07DE  3197  2716  3187   	fcall	init_ram
  4896                           
  4897                           ; Clear objects allocated to BIGRAM
  4898  07E1  308C               	movlw	low (0+9100)
  4899  07E2  0084               	movwf	4
  4900  07E3  3023               	movlw	high (0+9100)
  4901  07E4  0085               	movwf	5
  4902  07E5  3064               	movlw	100
  4903  07E6  00FE               	movwf	btemp
  4904  07E7  3000               	movlw	0
  4905  07E8  00FF               	movwf	btemp+1
  4906  07E9  3197  270A  3187   	fcall	clear_ram0
  4907                           
  4908                           ; Clear objects allocated to BANK0
  4909  07EC  01E6               	clrf	__pbssBANK0& (0+127)
  4910  07ED  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  4911  07EE  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  4912  07EF  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  4913  07F0  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  4914  07F1  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  4915  07F2  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  4916                           
  4917                           ; Clear objects allocated to BANK1
  4918  07F3  30A0               	movlw	low __pbssBANK1
  4919  07F4  0084               	movwf	4
  4920  07F5  3000               	movlw	high __pbssBANK1
  4921  07F6  0085               	movwf	5
  4922  07F7  3027               	movlw	39
  4923  07F8  00FE               	movwf	btemp
  4924  07F9  3000               	movlw	0
  4925  07FA  00FF               	movwf	btemp+1
  4926  07FB  3197  270A         	fcall	clear_ram0
  4927  07FD                     end_of_initialization:	
  4928                           ;End of C runtime variable initialization code
  4929                           
  4930  07FD                     __end_of__initialization:	
  4931  07FD  0020               	movlb	0
  4932  07FE  3184  2C0D         	ljmp	_main	;jump to C main() function
  4933                           
  4934                           	psect	bssBANK0
  4935  0066                     __pbssBANK0:	
  4936  0066                     _PID_MinOutput:	
  4937  0066                     	ds	2
  4938  0068                     _downCount:	
  4939  0068                     	ds	1
  4940  0069                     _oldSetpoint:	
  4941  0069                     	ds	1
  4942  006A                     _toggleCount:	
  4943  006A                     	ds	1
  4944  006B                     _upCount:	
  4945  006B                     	ds	1
  4946  006C                     _x:	
  4947  006C                     	ds	1
  4948                           
  4949                           	psect	dataBANK0
  4950  006D                     __pdataBANK0:	
  4951  006D                     _PID_MaxOutput:	
  4952  006D                     	ds	2
  4953  006F                     _setpoint:	
  4954  006F                     	ds	1
  4955                           
  4956                           	psect	bssBANK1
  4957  00A0                     __pbssBANK1:	
  4958  00A0                     LCD_Write_Int@F13695:	
  4959  00A0                     	ds	5
  4960  00A5                     _DerivativeValue:	
  4961  00A5                     	ds	3
  4962  00A8                     _Err:	
  4963  00A8                     	ds	3
  4964  00AB                     _ErrValue:	
  4965  00AB                     	ds	3
  4966  00AE                     _PID_Integrated:	
  4967  00AE                     	ds	3
  4968  00B1                     _PID_Kd:	
  4969  00B1                     	ds	3
  4970  00B4                     _PID_Ki:	
  4971  00B4                     	ds	3
  4972  00B7                     _PID_Kp:	
  4973  00B7                     	ds	3
  4974  00BA                     _PID_Prev_Error:	
  4975  00BA                     	ds	3
  4976  00BD                     _PID_Prev_Input:	
  4977  00BD                     	ds	3
  4978  00C0                     _Result:	
  4979  00C0                     	ds	3
  4980  00C3                     _errno:	
  4981  00C3                     	ds	2
  4982  00C5                     main@sampleIndex:	
  4983  00C5                     	ds	2
  4984                           
  4985                           	psect	dataBANK1
  4986  00E5                     __pdataBANK1:	
  4987  00E5                     _presets:	
  4988  00E5                     	ds	5
  4989                           
  4990                           	psect	dataBANK2
  4991  0120                     __pdataBANK2:	
  4992  0120                     ___cgram:	
  4993  0120                     	ds	24
  4994                           
  4995                           	psect	inittext
  4996  1716                     init_ram:	
  4997  1716  00FE               	movwf	126
  4998  1717                     initloop:	
  4999  1717  0012               	moviw fsr0++
  5000  1718  001E               	movwi fsr1++
  5001  1719  3001               	movlw	1
  5002  171A  02FE               	subwf	126,f
  5003  171B  3000               	movlw	0
  5004  171C  3BFF               	subwfb	127,f
  5005  171D  087F               	movf	127,w
  5006  171E  047E               	iorwf	126,w
  5007  171F  1903               	btfsc	3,2
  5008  1720  3400               	retlw	0
  5009  1721  2F17               	goto	initloop
  5010                           
  5011                           	psect	clrtext
  5012  170A                     clear_ram0:	
  5013                           ;	Called with FSR0 containing the base address, and
  5014                           ;	btemp/btemp+1 has the size to clear
  5015                           
  5016  170A  0064               	clrwdt	;clear the watchdog before getting into this loop
  5017  170B                     clrloop0:	
  5018  170B  0180               	clrf	0	;clear RAM location pointed to by FSR
  5019  170C  3101               	addfsr 0,1
  5020  170D  3001               	movlw	1
  5021  170E  02FE               	subwf	126,f
  5022  170F  3000               	movlw	0
  5023  1710  3BFF               	subwfb	127,f
  5024  1711  087F               	movf	127,w
  5025  1712  047E               	iorwf	126,w
  5026  1713  1903               	btfsc	3,2
  5027  1714  3400               	retlw	0	;all done for this memory range, return
  5028  1715  2F0B               	goto	clrloop0	;have we reached the end yet?
  5029                           
  5030                           	psect	cstackBANK1
  5031  00C7                     __pcstackBANK1:	
  5032  00C7                     main@R:	
  5033                           
  5034                           ; 3 bytes @ 0x0
  5035  00C7                     	ds	3
  5036  00CA                     _main$1057:	
  5037                           
  5038                           ; 3 bytes @ 0x3
  5039  00CA                     	ds	3
  5040  00CD                     main@minutes:	
  5041                           
  5042                           ; 2 bytes @ 0x6
  5043  00CD                     	ds	2
  5044  00CF                     main@PWM_Output:	
  5045                           
  5046                           ; 2 bytes @ 0x8
  5047  00CF                     	ds	2
  5048  00D1                     main@seconds:	
  5049                           
  5050                           ; 2 bytes @ 0xA
  5051  00D1                     	ds	2
  5052  00D3                     main@firstTimeThrough:	
  5053                           
  5054                           ; 1 bytes @ 0xC
  5055  00D3                     	ds	1
  5056  00D4                     main@counter:	
  5057                           
  5058                           ; 2 bytes @ 0xD
  5059  00D4                     	ds	2
  5060  00D6                     main@startupTimer:	
  5061                           
  5062                           ; 1 bytes @ 0xF
  5063  00D6                     	ds	1
  5064  00D7                     main@toggle:	
  5065                           
  5066                           ; 1 bytes @ 0x10
  5067  00D7                     	ds	1
  5068  00D8                     main@displayTemp:	
  5069                           
  5070                           ; 2 bytes @ 0x11
  5071  00D8                     	ds	2
  5072  00DA                     main@totals:	
  5073                           
  5074                           ; 4 bytes @ 0x13
  5075  00DA                     	ds	4
  5076  00DE                     main@readTemperatureOld:	
  5077                           
  5078                           ; 2 bytes @ 0x17
  5079  00DE                     	ds	2
  5080  00E0                     main@readTemperature:	
  5081                           
  5082                           ; 2 bytes @ 0x19
  5083  00E0                     	ds	2
  5084  00E2                     main@steinhart:	
  5085                           
  5086                           ; 3 bytes @ 0x1B
  5087  00E2                     	ds	3
  5088                           
  5089                           	psect	cstackCOMMON
  5090  0070                     __pcstackCOMMON:	
  5091  0070                     ?_OSCILLATOR_Initialize:	
  5092  0070                     ??_OSCILLATOR_Initialize:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     ?_ADCC_Initialize:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0070                     ??_ADCC_Initialize:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0070                     ?_PWM6_Initialize:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0070                     ??_PWM6_Initialize:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0070                     ?_TMR0_Initialize:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0070                     ??_TMR0_Initialize:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0070                     ?_TMR2_Initialize:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0070                     ??_TMR2_Initialize:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0070                     ?_LCD_Init:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0070                     ?_LCD_Clear:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0070                     ?_InitCustomChars:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0070                     ?_Init_PID:	
  5129                           ; 1 bytes @ 0x0
  5130                           
  5131  0070                     ??_Init_PID:	
  5132                           ; 1 bytes @ 0x0
  5133                           
  5134  0070                     ?_LCD_Cmd:	
  5135                           ; 1 bytes @ 0x0
  5136                           
  5137  0070                     ?_LCD_Write_Char:	
  5138                           ; 1 bytes @ 0x0
  5139                           
  5140  0070                     ?_readButtons:	
  5141                           ; 1 bytes @ 0x0
  5142                           
  5143  0070                     ?_PIN_MANAGER_Initialize:	
  5144                           ; 1 bytes @ 0x0
  5145                           
  5146  0070                     ??_PIN_MANAGER_Initialize:	
  5147                           ; 1 bytes @ 0x0
  5148                           
  5149  0070                     ?_SYSTEM_Initialize:	
  5150                           ; 1 bytes @ 0x0
  5151                           
  5152  0070                     ?_LCD_Port:	
  5153                           ; 1 bytes @ 0x0
  5154                           
  5155  0070                     ??_LCD_Port:	
  5156                           ; 1 bytes @ 0x0
  5157                           
  5158  0070                     ?_PWM6_LoadDutyValue:	
  5159                           ; 1 bytes @ 0x0
  5160                           
  5161  0070                     ?_tempSetpoint:	
  5162                           ; 1 bytes @ 0x0
  5163                           
  5164  0070                     ?_main:	
  5165                           ; 1 bytes @ 0x0
  5166                           
  5167  0070                     ?_ADCC_GetSingleConversion:	
  5168                           ; 1 bytes @ 0x0
  5169                           
  5170  0070                     ?___wmul:	
  5171                           ; 2 bytes @ 0x0
  5172                           
  5173  0070                     ?___awdiv:	
  5174                           ; 2 bytes @ 0x0
  5175                           
  5176  0070                     ?___awmod:	
  5177                           ; 2 bytes @ 0x0
  5178                           
  5179  0070                     ?___ftpack:	
  5180                           ; 2 bytes @ 0x0
  5181                           
  5182  0070                     ?_frexp:	
  5183                           ; 3 bytes @ 0x0
  5184                           
  5185  0070                     ?___ftneg:	
  5186                           ; 3 bytes @ 0x0
  5187                           
  5188  0070                     ?___aldiv:	
  5189                           ; 3 bytes @ 0x0
  5190                           
  5191  0070                     PIN_MANAGER_Initialize@state:	
  5192                           ; 4 bytes @ 0x0
  5193                           
  5194  0070                     LCD_Port@a:	
  5195                           ; 1 bytes @ 0x0
  5196                           
  5197  0070                     PWM6_LoadDutyValue@dutyValue:	
  5198                           ; 1 bytes @ 0x0
  5199                           
  5200  0070                     ___wmul@multiplier:	
  5201                           ; 2 bytes @ 0x0
  5202                           
  5203  0070                     ___awdiv@divisor:	
  5204                           ; 2 bytes @ 0x0
  5205                           
  5206  0070                     ___awmod@divisor:	
  5207                           ; 2 bytes @ 0x0
  5208                           
  5209  0070                     ___ftpack@arg:	
  5210                           ; 2 bytes @ 0x0
  5211                           
  5212  0070                     ___ftneg@f1:	
  5213                           ; 3 bytes @ 0x0
  5214                           
  5215  0070                     frexp@value:	
  5216                           ; 3 bytes @ 0x0
  5217                           
  5218  0070                     ___aldiv@divisor:	
  5219                           ; 3 bytes @ 0x0
  5220                           
  5221                           
  5222                           ; 4 bytes @ 0x0
  5223  0070                     	ds	1
  5224  0071                     ??_LCD_Cmd:	
  5225  0071                     ??_LCD_Write_Char:	
  5226                           ; 1 bytes @ 0x1
  5227                           
  5228                           
  5229                           ; 1 bytes @ 0x1
  5230  0071                     	ds	1
  5231  0072                     ??_PWM6_LoadDutyValue:	
  5232  0072                     LCD_Cmd@a:	
  5233                           ; 1 bytes @ 0x2
  5234                           
  5235  0072                     LCD_Write_Char@temp:	
  5236                           ; 1 bytes @ 0x2
  5237                           
  5238  0072                     ___wmul@multiplicand:	
  5239                           ; 1 bytes @ 0x2
  5240                           
  5241  0072                     ___awdiv@dividend:	
  5242                           ; 2 bytes @ 0x2
  5243                           
  5244  0072                     ___awmod@dividend:	
  5245                           ; 2 bytes @ 0x2
  5246                           
  5247                           
  5248                           ; 2 bytes @ 0x2
  5249  0072                     	ds	1
  5250  0073                     ??_LCD_Init:	
  5251  0073                     ??_LCD_Clear:	
  5252                           ; 1 bytes @ 0x3
  5253                           
  5254  0073                     ?_LCD_Set_Cursor:	
  5255                           ; 1 bytes @ 0x3
  5256                           
  5257  0073                     ??_ADCC_GetSingleConversion:	
  5258                           ; 1 bytes @ 0x3
  5259                           
  5260  0073                     ??___ftneg:	
  5261                           ; 1 bytes @ 0x3
  5262                           
  5263  0073                     LCD_Set_Cursor@y:	
  5264                           ; 1 bytes @ 0x3
  5265                           
  5266  0073                     LCD_Write_Char@y:	
  5267                           ; 1 bytes @ 0x3
  5268                           
  5269  0073                     ADCC_GetSingleConversion@channel:	
  5270                           ; 1 bytes @ 0x3
  5271                           
  5272  0073                     ___ftpack@exp:	
  5273                           ; 1 bytes @ 0x3
  5274                           
  5275  0073                     frexp@eptr:	
  5276                           ; 1 bytes @ 0x3
  5277                           
  5278                           
  5279                           ; 1 bytes @ 0x3
  5280  0073                     	ds	1
  5281  0074                     ??_frexp:	
  5282  0074                     ??_LCD_Set_Cursor:	
  5283                           ; 1 bytes @ 0x4
  5284                           
  5285  0074                     ??___wmul:	
  5286                           ; 1 bytes @ 0x4
  5287                           
  5288  0074                     ??___awdiv:	
  5289                           ; 1 bytes @ 0x4
  5290                           
  5291  0074                     ??___awmod:	
  5292                           ; 1 bytes @ 0x4
  5293                           
  5294  0074                     LCD_Write_Char@a:	
  5295                           ; 1 bytes @ 0x4
  5296                           
  5297  0074                     ___ftpack@sign:	
  5298                           ; 1 bytes @ 0x4
  5299                           
  5300  0074                     ___wmul@product:	
  5301                           ; 1 bytes @ 0x4
  5302                           
  5303  0074                     ___aldiv@dividend:	
  5304                           ; 2 bytes @ 0x4
  5305                           
  5306                           
  5307                           ; 4 bytes @ 0x4
  5308  0074                     	ds	1
  5309  0075                     ??_InitCustomChars:	
  5310  0075                     ??___ftpack:	
  5311                           ; 1 bytes @ 0x5
  5312                           
  5313  0075                     ?_LCD_Write_String:	
  5314                           ; 1 bytes @ 0x5
  5315                           
  5316  0075                     LCD_Init@style:	
  5317                           ; 1 bytes @ 0x5
  5318                           
  5319  0075                     ___awdiv@counter:	
  5320                           ; 1 bytes @ 0x5
  5321                           
  5322  0075                     ___awmod@counter:	
  5323                           ; 1 bytes @ 0x5
  5324                           
  5325  0075                     LCD_Write_String@a:	
  5326                           ; 1 bytes @ 0x5
  5327                           
  5328                           
  5329                           ; 2 bytes @ 0x5
  5330  0075                     	ds	1
  5331  0076                     ?___lwdiv:	
  5332  0076                     InitCustomChars@i:	
  5333                           ; 2 bytes @ 0x6
  5334                           
  5335  0076                     LCD_Set_Cursor@x:	
  5336                           ; 1 bytes @ 0x6
  5337                           
  5338  0076                     ___awdiv@sign:	
  5339                           ; 1 bytes @ 0x6
  5340                           
  5341  0076                     ___awmod@sign:	
  5342                           ; 1 bytes @ 0x6
  5343                           
  5344  0076                     ___lwdiv@divisor:	
  5345                           ; 1 bytes @ 0x6
  5346                           
  5347                           
  5348                           ; 2 bytes @ 0x6
  5349  0076                     	ds	1
  5350  0077                     ??_SYSTEM_Initialize:	
  5351  0077                     ??_LCD_Write_String:	
  5352                           ; 1 bytes @ 0x7
  5353                           
  5354  0077                     LCD_Set_Cursor@z:	
  5355                           ; 1 bytes @ 0x7
  5356                           
  5357  0077                     ___awdiv@quotient:	
  5358                           ; 1 bytes @ 0x7
  5359                           
  5360                           
  5361                           ; 2 bytes @ 0x7
  5362  0077                     	ds	1
  5363  0078                     ??___aldiv:	
  5364  0078                     ?___awtoft:	
  5365                           ; 1 bytes @ 0x8
  5366                           
  5367  0078                     ?___lbtoft:	
  5368                           ; 3 bytes @ 0x8
  5369                           
  5370  0078                     ?___lwtoft:	
  5371                           ; 3 bytes @ 0x8
  5372                           
  5373  0078                     LCD_Set_Cursor@w:	
  5374                           ; 3 bytes @ 0x8
  5375                           
  5376  0078                     LCD_Write_String@i:	
  5377                           ; 1 bytes @ 0x8
  5378                           
  5379  0078                     ___awtoft@c:	
  5380                           ; 2 bytes @ 0x8
  5381                           
  5382  0078                     ___lwdiv@dividend:	
  5383                           ; 2 bytes @ 0x8
  5384                           
  5385  0078                     ___lwtoft@c:	
  5386                           ; 2 bytes @ 0x8
  5387                           
  5388                           
  5389                           ; 2 bytes @ 0x8
  5390  0078                     	ds	1
  5391  0079                     ?_LCD_Write_Int:	
  5392  0079                     LCD_Set_Cursor@temp:	
  5393                           ; 1 bytes @ 0x9
  5394                           
  5395  0079                     LCD_Write_Int@value:	
  5396                           ; 1 bytes @ 0x9
  5397                           
  5398                           
  5399                           ; 2 bytes @ 0x9
  5400  0079                     	ds	1
  5401  007A                     ??___lwdiv:	
  5402                           
  5403                           ; 1 bytes @ 0xA
  5404  007A                     	ds	1
  5405  007B                     ??___awtoft:	
  5406  007B                     ??___lwtoft:	
  5407                           ; 1 bytes @ 0xB
  5408                           
  5409  007B                     LCD_Write_Int@fieldLength:	
  5410                           ; 1 bytes @ 0xB
  5411                           
  5412  007B                     ___lbtoft@c:	
  5413                           ; 1 bytes @ 0xB
  5414                           
  5415  007B                     ___lwdiv@quotient:	
  5416                           ; 1 bytes @ 0xB
  5417                           
  5418                           
  5419                           ; 2 bytes @ 0xB
  5420  007B                     	ds	1
  5421  007C                     LCD_Write_Int@numPlaces:	
  5422                           
  5423                           ; 1 bytes @ 0xC
  5424  007C                     	ds	1
  5425  007D                     LCD_Write_Int@sign:	
  5426  007D                     ___awtoft@sign:	
  5427                           ; 1 bytes @ 0xD
  5428                           
  5429  007D                     ___lwdiv@counter:	
  5430                           ; 1 bytes @ 0xD
  5431                           
  5432                           
  5433                           ; 1 bytes @ 0xD
  5434  007D                     	ds	1
  5435  007E                     ??_eval_poly:	
  5436  007E                     ??_PID_Calculate:	
  5437                           ; 1 bytes @ 0xE
  5438                           
  5439  007E                     ??___ftsub:	
  5440                           ; 1 bytes @ 0xE
  5441                           
  5442                           
  5443                           	psect	cstackBANK0
  5444  0020                     __pcstackBANK0:	
  5445                           ; 1 bytes @ 0xE
  5446                           
  5447  0020                     ??_LCD_Write_Int:	
  5448  0020                     ??___lbtoft:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451  0020                     ?___ftdiv:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454  0020                     ?___ftmul:	
  5455                           ; 3 bytes @ 0x0
  5456                           
  5457  0020                     ___aldiv@counter:	
  5458                           ; 3 bytes @ 0x0
  5459                           
  5460  0020                     ___ftdiv@f2:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463  0020                     ___ftmul@f1:	
  5464                           ; 3 bytes @ 0x0
  5465                           
  5466                           
  5467                           ; 3 bytes @ 0x0
  5468  0020                     	ds	1
  5469  0021                     ___aldiv@sign:	
  5470                           
  5471                           ; 1 bytes @ 0x1
  5472  0021                     	ds	1
  5473  0022                     ___aldiv@quotient:	
  5474                           
  5475                           ; 4 bytes @ 0x2
  5476  0022                     	ds	1
  5477  0023                     ___ftdiv@f1:	
  5478  0023                     ___ftmul@f2:	
  5479                           ; 3 bytes @ 0x3
  5480                           
  5481                           
  5482                           ; 3 bytes @ 0x3
  5483  0023                     	ds	2
  5484  0025                     LCD_Write_Int@str:	
  5485                           
  5486                           ; 5 bytes @ 0x5
  5487  0025                     	ds	1
  5488  0026                     ??___ftdiv:	
  5489  0026                     ??___ftmul:	
  5490                           ; 1 bytes @ 0x6
  5491                           
  5492                           
  5493                           ; 1 bytes @ 0x6
  5494  0026                     	ds	4
  5495  002A                     ___ftdiv@cntr:	
  5496  002A                     ___ftmul@exp:	
  5497                           ; 1 bytes @ 0xA
  5498                           
  5499  002A                     LCD_Write_Int@j:	
  5500                           ; 1 bytes @ 0xA
  5501                           
  5502                           
  5503                           ; 2 bytes @ 0xA
  5504  002A                     	ds	1
  5505  002B                     ___ftdiv@f3:	
  5506  002B                     ___ftmul@f3_as_product:	
  5507                           ; 3 bytes @ 0xB
  5508                           
  5509                           
  5510                           ; 3 bytes @ 0xB
  5511  002B                     	ds	1
  5512  002C                     LCD_Write_Int@i:	
  5513                           
  5514                           ; 2 bytes @ 0xC
  5515  002C                     	ds	2
  5516  002E                     ??_readButtons:	
  5517  002E                     ___ftdiv@exp:	
  5518                           ; 1 bytes @ 0xE
  5519                           
  5520  002E                     ___ftmul@cntr:	
  5521                           ; 1 bytes @ 0xE
  5522                           
  5523                           
  5524                           ; 1 bytes @ 0xE
  5525  002E                     	ds	1
  5526  002F                     ___ftdiv@sign:	
  5527  002F                     ___ftmul@sign:	
  5528                           ; 1 bytes @ 0xF
  5529                           
  5530                           
  5531                           ; 1 bytes @ 0xF
  5532  002F                     	ds	1
  5533  0030                     ?___ftadd:	
  5534  0030                     ___ftadd@f1:	
  5535                           ; 3 bytes @ 0x10
  5536                           
  5537                           
  5538                           ; 3 bytes @ 0x10
  5539  0030                     	ds	1
  5540  0031                     ??_tempSetpoint:	
  5541                           
  5542                           ; 1 bytes @ 0x11
  5543  0031                     	ds	2
  5544  0033                     ___ftadd@f2:	
  5545                           
  5546                           ; 3 bytes @ 0x13
  5547  0033                     	ds	1
  5548  0034                     tempSetpoint@counter:	
  5549                           
  5550                           ; 1 bytes @ 0x14
  5551  0034                     	ds	2
  5552  0036                     ??___ftadd:	
  5553                           
  5554                           ; 1 bytes @ 0x16
  5555  0036                     	ds	4
  5556  003A                     ___ftadd@sign:	
  5557                           
  5558                           ; 1 bytes @ 0x1A
  5559  003A                     	ds	1
  5560  003B                     ___ftadd@exp2:	
  5561                           
  5562                           ; 1 bytes @ 0x1B
  5563  003B                     	ds	1
  5564  003C                     ___ftadd@exp1:	
  5565                           
  5566                           ; 1 bytes @ 0x1C
  5567  003C                     	ds	1
  5568  003D                     ?___ftge:	
  5569  003D                     ?_eval_poly:	
  5570                           ; 1 bit 
  5571                           
  5572  003D                     ?___ftsub:	
  5573                           ; 3 bytes @ 0x1D
  5574                           
  5575  003D                     ___ftge@ff1:	
  5576                           ; 3 bytes @ 0x1D
  5577                           
  5578  003D                     ___ftsub@f2:	
  5579                           ; 3 bytes @ 0x1D
  5580                           
  5581  003D                     eval_poly@x:	
  5582                           ; 3 bytes @ 0x1D
  5583                           
  5584                           
  5585                           ; 3 bytes @ 0x1D
  5586  003D                     	ds	3
  5587  0040                     eval_poly@d:	
  5588  0040                     ___ftge@ff2:	
  5589                           ; 2 bytes @ 0x20
  5590                           
  5591  0040                     ___ftsub@f1:	
  5592                           ; 3 bytes @ 0x20
  5593                           
  5594                           
  5595                           ; 3 bytes @ 0x20
  5596  0040                     	ds	2
  5597  0042                     eval_poly@n:	
  5598                           
  5599                           ; 2 bytes @ 0x22
  5600  0042                     	ds	1
  5601  0043                     ??___ftge:	
  5602                           
  5603                           ; 1 bytes @ 0x23
  5604  0043                     	ds	1
  5605  0044                     eval_poly@res:	
  5606                           
  5607                           ; 3 bytes @ 0x24
  5608  0044                     	ds	2
  5609  0046                     ?_PID_Calculate:	
  5610  0046                     PID_Calculate@setpoint:	
  5611                           ; 3 bytes @ 0x26
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x26
  5615  0046                     	ds	1
  5616  0047                     ?_log:	
  5617  0047                     log@x:	
  5618                           ; 3 bytes @ 0x27
  5619                           
  5620                           
  5621                           ; 3 bytes @ 0x27
  5622  0047                     	ds	1
  5623  0048                     PID_Calculate@temp:	
  5624                           
  5625                           ; 3 bytes @ 0x28
  5626  0048                     	ds	2
  5627  004A                     ??_log:	
  5628                           
  5629                           ; 1 bytes @ 0x2A
  5630  004A                     	ds	1
  5631  004B                     log@exponent:	
  5632  004B                     _PID_Calculate$1056:	
  5633                           ; 2 bytes @ 0x2B
  5634                           
  5635                           
  5636                           ; 3 bytes @ 0x2B
  5637  004B                     	ds	3
  5638  004E                     ?___fttol:	
  5639  004E                     ___fttol@f1:	
  5640                           ; 4 bytes @ 0x2E
  5641                           
  5642                           
  5643                           ; 3 bytes @ 0x2E
  5644  004E                     	ds	4
  5645  0052                     ??___fttol:	
  5646                           
  5647                           ; 1 bytes @ 0x32
  5648  0052                     	ds	4
  5649  0056                     ___fttol@sign1:	
  5650                           
  5651                           ; 1 bytes @ 0x36
  5652  0056                     	ds	1
  5653  0057                     ___fttol@lval:	
  5654                           
  5655                           ; 4 bytes @ 0x37
  5656  0057                     	ds	4
  5657  005B                     ___fttol@exp1:	
  5658                           
  5659                           ; 1 bytes @ 0x3B
  5660  005B                     	ds	1
  5661  005C                     ??_main:	
  5662                           
  5663                           ; 1 bytes @ 0x3C
  5664  005C                     	ds	10
  5665                           
  5666                           	psect	maintext
  5667  040D                     __pmaintext:	
  5668 ;;
  5669 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5670 ;;
  5671 ;; *************** function _main *****************
  5672 ;; Defined at:
  5673 ;;		line 16 in file "main.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  s               8    0        unsigned char [8]
  5678 ;;  totals          4   19[BANK1 ] long 
  5679 ;;  steinhart       3   27[BANK1 ] float 
  5680 ;;  R               3    0[BANK1 ] float 
  5681 ;;  readTemperat    2   25[BANK1 ] unsigned int 
  5682 ;;  readTemperat    2   23[BANK1 ] unsigned int 
  5683 ;;  displayTemp     2   17[BANK1 ] unsigned int 
  5684 ;;  counter         2   13[BANK1 ] unsigned int 
  5685 ;;  seconds         2   10[BANK1 ] unsigned int 
  5686 ;;  PWM_Output      2    8[BANK1 ] unsigned int 
  5687 ;;  minutes         2    6[BANK1 ] unsigned int 
  5688 ;;  toggle          1   16[BANK1 ] unsigned char 
  5689 ;;  startupTimer    1   15[BANK1 ] unsigned char 
  5690 ;;  firstTimeThr    1   12[BANK1 ] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : B1F/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Totals:         0      10      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;Total ram usage:       40 bytes
  5705 ;; Hardware stack levels required when called:    5
  5706 ;; This function calls:
  5707 ;;		_ADCC_GetSingleConversion
  5708 ;;		_LCD_Set_Cursor
  5709 ;;		_LCD_Write_Char
  5710 ;;		_LCD_Write_Int
  5711 ;;		_LCD_Write_String
  5712 ;;		_PID_Calculate
  5713 ;;		_PWM6_LoadDutyValue
  5714 ;;		_SYSTEM_Initialize
  5715 ;;		___aldiv
  5716 ;;		___ftadd
  5717 ;;		___ftdiv
  5718 ;;		___ftge
  5719 ;;		___ftmul
  5720 ;;		___ftneg
  5721 ;;		___ftsub
  5722 ;;		___fttol
  5723 ;;		___lbtoft
  5724 ;;		___lwdiv
  5725 ;;		___lwtoft
  5726 ;;		___wmul
  5727 ;;		_log
  5728 ;;		_readButtons
  5729 ;;		_tempSetpoint
  5730 ;; This function is called by:
  5731 ;;		Startup code after reset
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _main
  5737  040D                     _main:	
  5738                           
  5739                           ;main.c: 18: SYSTEM_Initialize();
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5743  040D  3189  21C3  3184   	fcall	_SYSTEM_Initialize
  5744                           
  5745                           ;main.c: 20: uint16_t readTemperature, PWM_Output = 1023, readTemperatureOld, displayTem
      +                          p, seconds = 0, counter = 0, minutes = 0;
  5746  0410  30FF               	movlw	255
  5747  0411  0021               	movlb	1	; select bank1
  5748  0412  00CF               	movwf	main@PWM_Output^(0+128)
  5749  0413  3003               	movlw	3
  5750  0414  00D0               	movwf	(main@PWM_Output^(0+128)+1)
  5751  0415  01D1               	clrf	main@seconds^(0+128)
  5752  0416  01D2               	clrf	(main@seconds+1)^(0+128)
  5753  0417  01D4               	clrf	main@counter^(0+128)
  5754  0418  01D5               	clrf	(main@counter+1)^(0+128)
  5755  0419  01CD               	clrf	main@minutes^(0+128)
  5756  041A  01CE               	clrf	(main@minutes+1)^(0+128)
  5757                           
  5758                           ;main.c: 22: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5759  041B  01D6               	clrf	main@startupTimer^(0+128)
  5760  041C  01D3               	clrf	main@firstTimeThrough^(0+128)
  5761  041D  01D7               	clrf	main@toggle^(0+128)
  5762                           
  5763                           ;main.c: 24: float R, steinhart;
  5764                           ;main.c: 26: static uint16_t sampleIndex = 0;
  5765                           ;main.c: 28: int32_t totals = 0;
  5766  041E  3000               	movlw	0
  5767  041F  00DD               	movwf	(main@totals+3)^(0+128)
  5768  0420  3000               	movlw	0
  5769  0421  00DC               	movwf	(main@totals+2)^(0+128)
  5770  0422  3000               	movlw	0
  5771  0423  00DB               	movwf	(main@totals+1)^(0+128)
  5772  0424  3000               	movlw	0
  5773  0425  00DA               	movwf	main@totals^(0+128)
  5774  0426                     l3045:	
  5775                           ;main.c: 30: char s[8];
  5776                           ;main.c: 32: while (1)
  5777                           
  5778                           
  5779                           ;main.c: 33: {
  5780                           ;main.c: 34: readTemperature = ADCC_GetSingleConversion(2);
  5781  0426  3002               	movlw	2
  5782  0427  3197  272F  3184   	fcall	_ADCC_GetSingleConversion
  5783  042A  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5784  042B  0021               	movlb	1	; select bank1
  5785  042C  00E1               	movwf	(main@readTemperature+1)^(0+128)
  5786  042D  0870               	movf	?_ADCC_GetSingleConversion,w
  5787  042E  00E0               	movwf	main@readTemperature^(0+128)
  5788                           
  5789                           ;main.c: 36: totals = totals - samples[sampleIndex];
  5790  042F  085A               	movf	main@totals^(0+128),w
  5791  0430  0020               	movlb	0	; select bank0
  5792  0431  00DC               	movwf	??_main
  5793  0432  0021               	movlb	1	; select bank1
  5794  0433  085B               	movf	(main@totals+1)^(0+128),w
  5795  0434  0020               	movlb	0	; select bank0
  5796  0435  00DD               	movwf	??_main+1
  5797  0436  0021               	movlb	1	; select bank1
  5798  0437  085C               	movf	(main@totals+2)^(0+128),w
  5799  0438  0020               	movlb	0	; select bank0
  5800  0439  00DE               	movwf	??_main+2
  5801  043A  0021               	movlb	1	; select bank1
  5802  043B  085D               	movf	(main@totals+3)^(0+128),w
  5803  043C  0020               	movlb	0	; select bank0
  5804  043D  00DF               	movwf	??_main+3
  5805  043E  0021               	movlb	1	; select bank1
  5806  043F  0846               	movf	(main@sampleIndex+1)^(0+128),w
  5807  0440  0020               	movlb	0	; select bank0
  5808  0441  00E1               	movwf	??_main+5
  5809  0442  0021               	movlb	1	; select bank1
  5810  0443  0845               	movf	main@sampleIndex^(0+128),w
  5811  0444  0020               	movlb	0	; select bank0
  5812  0445  00E0               	movwf	??_main+4
  5813  0446  35E0               	lslf	??_main+4,f
  5814  0447  0DE1               	rlf	??_main+5,f
  5815  0448  308C               	movlw	140
  5816  0449  0760               	addwf	??_main+4,w
  5817  044A  0084               	movwf	4
  5818  044B  3023               	movlw	35
  5819  044C  3D61               	addwfc	??_main+5,w
  5820  044D  0085               	movwf	5
  5821  044E  3F00               	moviw [0]fsr0
  5822  044F  00E2               	movwf	??_main+6
  5823  0450  3F01               	moviw [1]fsr0
  5824  0451  00E3               	movwf	??_main+7
  5825  0452  01E4               	clrf	??_main+8
  5826  0453  01E5               	clrf	??_main+9
  5827  0454  09E2               	comf	??_main+6,f
  5828  0455  09E3               	comf	??_main+7,f
  5829  0456  09E4               	comf	??_main+8,f
  5830  0457  09E5               	comf	??_main+9,f
  5831  0458  0AE2               	incf	??_main+6,f
  5832  0459  1903               	skipnz
  5833  045A  0AE3               	incf	??_main+7,f
  5834  045B  1903               	skipnz
  5835  045C  0AE4               	incf	??_main+8,f
  5836  045D  1903               	skipnz
  5837  045E  0AE5               	incf	??_main+9,f
  5838  045F  0862               	movf	??_main+6,w
  5839  0460  07DC               	addwf	??_main,f
  5840  0461  0863               	movf	??_main+7,w
  5841  0462  3DDD               	addwfc	??_main+1,f
  5842  0463  0864               	movf	??_main+8,w
  5843  0464  3DDE               	addwfc	??_main+2,f
  5844  0465  0865               	movf	??_main+9,w
  5845  0466  3DDF               	addwfc	??_main+3,f
  5846  0467  085F               	movf	??_main+3,w
  5847  0468  0021               	movlb	1	; select bank1
  5848  0469  00DD               	movwf	(main@totals+3)^(0+128)
  5849  046A  0020               	movlb	0	; select bank0
  5850  046B  085E               	movf	??_main+2,w
  5851  046C  0021               	movlb	1	; select bank1
  5852  046D  00DC               	movwf	(main@totals+2)^(0+128)
  5853  046E  0020               	movlb	0	; select bank0
  5854  046F  085D               	movf	??_main+1,w
  5855  0470  0021               	movlb	1	; select bank1
  5856  0471  00DB               	movwf	(main@totals+1)^(0+128)
  5857  0472  0020               	movlb	0	; select bank0
  5858  0473  085C               	movf	??_main,w
  5859  0474  0021               	movlb	1	; select bank1
  5860  0475  00DA               	movwf	main@totals^(0+128)
  5861                           
  5862                           ;main.c: 38: samples[sampleIndex] = readTemperature;
  5863  0476  0846               	movf	(main@sampleIndex+1)^(0+128),w
  5864  0477  0020               	movlb	0	; select bank0
  5865  0478  00DD               	movwf	??_main+1
  5866  0479  0021               	movlb	1	; select bank1
  5867  047A  0845               	movf	main@sampleIndex^(0+128),w
  5868  047B  0020               	movlb	0	; select bank0
  5869  047C  00DC               	movwf	??_main
  5870  047D  35DC               	lslf	??_main,f
  5871  047E  0DDD               	rlf	??_main+1,f
  5872  047F  308C               	movlw	140
  5873  0480  00DE               	movwf	??_main+2
  5874  0481  3023               	movlw	35
  5875  0482  00DF               	movwf	??_main+3
  5876  0483  085C               	movf	??_main,w
  5877  0484  075E               	addwf	??_main+2,w
  5878  0485  0086               	movwf	6
  5879  0486  085D               	movf	??_main+1,w
  5880  0487  3D5F               	addwfc	??_main+3,w
  5881  0488  0087               	movwf	7
  5882  0489  0021               	movlb	1	; select bank1
  5883  048A  0860               	movf	main@readTemperature^(0+128),w
  5884  048B  3FC0               	movwi [0]fsr1
  5885  048C  0861               	movf	(main@readTemperature+1)^(0+128),w
  5886  048D  3FC1               	movwi [1]fsr1
  5887                           
  5888                           ;main.c: 40: totals = totals + samples[sampleIndex];
  5889  048E  085A               	movf	main@totals^(0+128),w
  5890  048F  0020               	movlb	0	; select bank0
  5891  0490  00DC               	movwf	??_main
  5892  0491  0021               	movlb	1	; select bank1
  5893  0492  085B               	movf	(main@totals+1)^(0+128),w
  5894  0493  0020               	movlb	0	; select bank0
  5895  0494  00DD               	movwf	??_main+1
  5896  0495  0021               	movlb	1	; select bank1
  5897  0496  085C               	movf	(main@totals+2)^(0+128),w
  5898  0497  0020               	movlb	0	; select bank0
  5899  0498  00DE               	movwf	??_main+2
  5900  0499  0021               	movlb	1	; select bank1
  5901  049A  085D               	movf	(main@totals+3)^(0+128),w
  5902  049B  0020               	movlb	0	; select bank0
  5903  049C  00DF               	movwf	??_main+3
  5904  049D  0021               	movlb	1	; select bank1
  5905  049E  0846               	movf	(main@sampleIndex+1)^(0+128),w
  5906  049F  0020               	movlb	0	; select bank0
  5907  04A0  00E1               	movwf	??_main+5
  5908  04A1  0021               	movlb	1	; select bank1
  5909  04A2  0845               	movf	main@sampleIndex^(0+128),w
  5910  04A3  0020               	movlb	0	; select bank0
  5911  04A4  00E0               	movwf	??_main+4
  5912  04A5  35E0               	lslf	??_main+4,f
  5913  04A6  0DE1               	rlf	??_main+5,f
  5914  04A7  308C               	movlw	140
  5915  04A8  0760               	addwf	??_main+4,w
  5916  04A9  0084               	movwf	4
  5917  04AA  3023               	movlw	35
  5918  04AB  3D61               	addwfc	??_main+5,w
  5919  04AC  0085               	movwf	5
  5920  04AD  3F00               	moviw [0]fsr0
  5921  04AE  00E2               	movwf	??_main+6
  5922  04AF  3F01               	moviw [1]fsr0
  5923  04B0  00E3               	movwf	??_main+7
  5924  04B1  01E4               	clrf	??_main+8
  5925  04B2  01E5               	clrf	??_main+9
  5926  04B3  0862               	movf	??_main+6,w
  5927  04B4  07DC               	addwf	??_main,f
  5928  04B5  0863               	movf	??_main+7,w
  5929  04B6  3DDD               	addwfc	??_main+1,f
  5930  04B7  0864               	movf	??_main+8,w
  5931  04B8  3DDE               	addwfc	??_main+2,f
  5932  04B9  0865               	movf	??_main+9,w
  5933  04BA  3DDF               	addwfc	??_main+3,f
  5934  04BB  085F               	movf	??_main+3,w
  5935  04BC  0021               	movlb	1	; select bank1
  5936  04BD  00DD               	movwf	(main@totals+3)^(0+128)
  5937  04BE  0020               	movlb	0	; select bank0
  5938  04BF  085E               	movf	??_main+2,w
  5939  04C0  0021               	movlb	1	; select bank1
  5940  04C1  00DC               	movwf	(main@totals+2)^(0+128)
  5941  04C2  0020               	movlb	0	; select bank0
  5942  04C3  085D               	movf	??_main+1,w
  5943  04C4  0021               	movlb	1	; select bank1
  5944  04C5  00DB               	movwf	(main@totals+1)^(0+128)
  5945  04C6  0020               	movlb	0	; select bank0
  5946  04C7  085C               	movf	??_main,w
  5947  04C8  0021               	movlb	1	; select bank1
  5948  04C9  00DA               	movwf	main@totals^(0+128)
  5949                           
  5950                           ;main.c: 42: sampleIndex += 1;
  5951  04CA  3001               	movlw	1
  5952  04CB  07C5               	addwf	main@sampleIndex^(0+128),f
  5953  04CC  3000               	movlw	0
  5954  04CD  3DC6               	addwfc	(main@sampleIndex+1)^(0+128),f
  5955                           
  5956                           ;main.c: 44: if(sampleIndex >= 50)
  5957  04CE  3000               	movlw	0
  5958  04CF  0246               	subwf	(main@sampleIndex+1)^(0+128),w
  5959  04D0  3032               	movlw	50
  5960  04D1  1903               	skipnz
  5961  04D2  0245               	subwf	main@sampleIndex^(0+128),w
  5962  04D3  1C03               	skipc
  5963  04D4  2CD7               	goto	l3055
  5964                           
  5965                           ;main.c: 45: {
  5966                           ;main.c: 46: sampleIndex = 0;
  5967  04D5  01C5               	clrf	main@sampleIndex^(0+128)
  5968  04D6  01C6               	clrf	(main@sampleIndex+1)^(0+128)
  5969  04D7                     l3055:	
  5970                           
  5971                           ;main.c: 47: }
  5972                           ;main.c: 49: readTemperature = totals / 50;
  5973  04D7  3000               	movlw	0
  5974  04D8  00F3               	movwf	___aldiv@divisor+3
  5975  04D9  3000               	movlw	0
  5976  04DA  00F2               	movwf	___aldiv@divisor+2
  5977  04DB  3000               	movlw	0
  5978  04DC  00F1               	movwf	___aldiv@divisor+1
  5979  04DD  3032               	movlw	50
  5980  04DE  00F0               	movwf	___aldiv@divisor
  5981  04DF  085D               	movf	(main@totals+3)^(0+128),w
  5982  04E0  00F7               	movwf	___aldiv@dividend+3
  5983  04E1  085C               	movf	(main@totals+2)^(0+128),w
  5984  04E2  00F6               	movwf	___aldiv@dividend+2
  5985  04E3  085B               	movf	(main@totals+1)^(0+128),w
  5986  04E4  00F5               	movwf	___aldiv@dividend+1
  5987  04E5  085A               	movf	main@totals^(0+128),w
  5988  04E6  00F4               	movwf	___aldiv@dividend
  5989  04E7  318C  2430  3184   	fcall	___aldiv
  5990  04EA  0871               	movf	?___aldiv+1,w
  5991  04EB  0021               	movlb	1	; select bank1
  5992  04EC  00E1               	movwf	(main@readTemperature+1)^(0+128)
  5993  04ED  0870               	movf	?___aldiv,w
  5994  04EE  00E0               	movwf	main@readTemperature^(0+128)
  5995                           
  5996                           ;main.c: 52: if(startupTimer >= 70)
  5997  04EF  3046               	movlw	70
  5998  04F0  0256               	subwf	main@startupTimer^(0+128),w
  5999  04F1  1C03               	skipc
  6000  04F2  2D24               	goto	l3073
  6001                           
  6002                           ;main.c: 53: {
  6003                           ;main.c: 54: if(firstTimeThrough == 0)
  6004  04F3  0853               	movf	main@firstTimeThrough^(0+128),w
  6005  04F4  1D03               	btfss	3,2
  6006  04F5  2D02               	goto	l3067
  6007                           
  6008                           ;main.c: 55: {
  6009                           ;main.c: 56: readTemperatureOld = readTemperature;
  6010  04F6  0861               	movf	(main@readTemperature+1)^(0+128),w
  6011  04F7  00DF               	movwf	(main@readTemperatureOld+1)^(0+128)
  6012  04F8  0860               	movf	main@readTemperature^(0+128),w
  6013  04F9  00DE               	movwf	main@readTemperatureOld^(0+128)
  6014                           
  6015                           ;main.c: 57: counter = 0;
  6016  04FA  01D4               	clrf	main@counter^(0+128)
  6017  04FB  01D5               	clrf	(main@counter+1)^(0+128)
  6018                           
  6019                           ;main.c: 58: firstTimeThrough +=1;
  6020  04FC  3001               	movlw	1
  6021  04FD  0020               	movlb	0	; select bank0
  6022  04FE  00DC               	movwf	??_main
  6023  04FF  085C               	movf	??_main,w
  6024  0500  0021               	movlb	1	; select bank1
  6025  0501  07D3               	addwf	main@firstTimeThrough^(0+128),f
  6026  0502                     l3067:	
  6027                           
  6028                           ;main.c: 59: }
  6029                           ;main.c: 61: if(readTemperature > readTemperatureOld)
  6030  0502  0861               	movf	(main@readTemperature+1)^(0+128),w
  6031  0503  025F               	subwf	(main@readTemperatureOld+1)^(0+128),w
  6032  0504  1D03               	skipz
  6033  0505  2D08               	goto	u3295
  6034  0506  0860               	movf	main@readTemperature^(0+128),w
  6035  0507  025E               	subwf	main@readTemperatureOld^(0+128),w
  6036  0508                     u3295:	
  6037  0508  1803               	skipnc
  6038  0509  2D0E               	goto	l396
  6039                           
  6040                           ;main.c: 62: {
  6041                           ;main.c: 63: readTemperatureOld += 1;
  6042  050A  3001               	movlw	1
  6043  050B  07DE               	addwf	main@readTemperatureOld^(0+128),f
  6044  050C  3000               	movlw	0
  6045  050D  3DDF               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  6046  050E                     l396:	
  6047                           
  6048                           ;main.c: 64: }
  6049                           ;main.c: 66: if(readTemperature < readTemperatureOld)
  6050  050E  085F               	movf	(main@readTemperatureOld+1)^(0+128),w
  6051  050F  0261               	subwf	(main@readTemperature+1)^(0+128),w
  6052  0510  1D03               	skipz
  6053  0511  2D14               	goto	u3305
  6054  0512  085E               	movf	main@readTemperatureOld^(0+128),w
  6055  0513  0260               	subwf	main@readTemperature^(0+128),w
  6056  0514                     u3305:	
  6057  0514  1803               	skipnc
  6058  0515  2D1A               	goto	l397
  6059                           
  6060                           ;main.c: 67: {
  6061                           ;main.c: 68: readTemperatureOld -= 1;
  6062  0516  3001               	movlw	1
  6063  0517  02DE               	subwf	main@readTemperatureOld^(0+128),f
  6064  0518  3000               	movlw	0
  6065  0519  3BDF               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  6066  051A                     l397:	
  6067                           
  6068                           ;main.c: 69: }
  6069                           ;main.c: 71: readTemperature = readTemperatureOld;
  6070  051A  085F               	movf	(main@readTemperatureOld+1)^(0+128),w
  6071  051B  00E1               	movwf	(main@readTemperature+1)^(0+128)
  6072  051C  085E               	movf	main@readTemperatureOld^(0+128),w
  6073  051D  00E0               	movwf	main@readTemperature^(0+128)
  6074                           
  6075                           ;main.c: 73: startupTimer = 69;
  6076  051E  3045               	movlw	69
  6077  051F  0020               	movlb	0	; select bank0
  6078  0520  00DC               	movwf	??_main
  6079  0521  085C               	movf	??_main,w
  6080  0522  0021               	movlb	1	; select bank1
  6081  0523  00D6               	movwf	main@startupTimer^(0+128)
  6082  0524                     l3073:	
  6083                           
  6084                           ;main.c: 74: }
  6085                           ;main.c: 76: startupTimer +=1;
  6086  0524  3001               	movlw	1
  6087  0525  0020               	movlb	0	; select bank0
  6088  0526  00DC               	movwf	??_main
  6089  0527  085C               	movf	??_main,w
  6090  0528  0021               	movlb	1	; select bank1
  6091  0529  07D6               	addwf	main@startupTimer^(0+128),f
  6092                           
  6093                           ;main.c: 79: R = 10200/(1023/(float)readTemperature - 1);
  6094  052A  3000               	movlw	0
  6095  052B  0020               	movlb	0	; select bank0
  6096  052C  00B0               	movwf	___ftadd@f1
  6097  052D  3080               	movlw	128
  6098  052E  00B1               	movwf	___ftadd@f1+1
  6099  052F  30BF               	movlw	191
  6100  0530  00B2               	movwf	___ftadd@f1+2
  6101  0531  0021               	movlb	1	; select bank1
  6102  0532  0861               	movf	(main@readTemperature+1)^(0+128),w
  6103  0533  00F9               	movwf	___lwtoft@c+1
  6104  0534  0860               	movf	main@readTemperature^(0+128),w
  6105  0535  00F8               	movwf	___lwtoft@c
  6106  0536  3188  2002  3184   	fcall	___lwtoft
  6107  0539  0878               	movf	?___lwtoft,w
  6108  053A  0020               	movlb	0	; select bank0
  6109  053B  00A0               	movwf	___ftdiv@f2
  6110  053C  0879               	movf	?___lwtoft+1,w
  6111  053D  00A1               	movwf	___ftdiv@f2+1
  6112  053E  087A               	movf	?___lwtoft+2,w
  6113  053F  00A2               	movwf	___ftdiv@f2+2
  6114  0540  30C0               	movlw	192
  6115  0541  00A3               	movwf	___ftdiv@f1
  6116  0542  307F               	movlw	127
  6117  0543  00A4               	movwf	___ftdiv@f1+1
  6118  0544  3044               	movlw	68
  6119  0545  00A5               	movwf	___ftdiv@f1+2
  6120  0546  318D  2539  3184   	fcall	___ftdiv
  6121  0549  0020               	movlb	0	; select bank0
  6122  054A  0820               	movf	?___ftdiv,w
  6123  054B  00B3               	movwf	___ftadd@f2
  6124  054C  0821               	movf	?___ftdiv+1,w
  6125  054D  00B4               	movwf	___ftadd@f2+1
  6126  054E  0822               	movf	?___ftdiv+2,w
  6127  054F  00B5               	movwf	___ftadd@f2+2
  6128  0550  3181  2139  3184   	fcall	___ftadd
  6129  0553  0020               	movlb	0	; select bank0
  6130  0554  0830               	movf	?___ftadd,w
  6131  0555  0021               	movlb	1	; select bank1
  6132  0556  00CA               	movwf	_main$1057^(0+128)
  6133  0557  0020               	movlb	0	; select bank0
  6134  0558  0831               	movf	?___ftadd+1,w
  6135  0559  0021               	movlb	1	; select bank1
  6136  055A  00CB               	movwf	(_main$1057+1)^(0+128)
  6137  055B  0020               	movlb	0	; select bank0
  6138  055C  0832               	movf	?___ftadd+2,w
  6139  055D  0021               	movlb	1	; select bank1
  6140  055E  00CC               	movwf	(_main$1057+2)^(0+128)
  6141                           
  6142                           ;main.c: 79: R = 10200/(1023/(float)readTemperature - 1);
  6143  055F  084A               	movf	_main$1057^(0+128),w
  6144  0560  0020               	movlb	0	; select bank0
  6145  0561  00A0               	movwf	___ftdiv@f2
  6146  0562  0021               	movlb	1	; select bank1
  6147  0563  084B               	movf	(_main$1057+1)^(0+128),w
  6148  0564  0020               	movlb	0	; select bank0
  6149  0565  00A1               	movwf	___ftdiv@f2+1
  6150  0566  0021               	movlb	1	; select bank1
  6151  0567  084C               	movf	(_main$1057+2)^(0+128),w
  6152  0568  0020               	movlb	0	; select bank0
  6153  0569  00A2               	movwf	___ftdiv@f2+2
  6154  056A  3060               	movlw	96
  6155  056B  00A3               	movwf	___ftdiv@f1
  6156  056C  301F               	movlw	31
  6157  056D  00A4               	movwf	___ftdiv@f1+1
  6158  056E  3046               	movlw	70
  6159  056F  00A5               	movwf	___ftdiv@f1+2
  6160  0570  318D  2539  3184   	fcall	___ftdiv
  6161  0573  0020               	movlb	0	; select bank0
  6162  0574  0820               	movf	?___ftdiv,w
  6163  0575  0021               	movlb	1	; select bank1
  6164  0576  00C7               	movwf	main@R^(0+128)
  6165  0577  0020               	movlb	0	; select bank0
  6166  0578  0821               	movf	?___ftdiv+1,w
  6167  0579  0021               	movlb	1	; select bank1
  6168  057A  00C8               	movwf	(main@R+1)^(0+128)
  6169  057B  0020               	movlb	0	; select bank0
  6170  057C  0822               	movf	?___ftdiv+2,w
  6171  057D  0021               	movlb	1	; select bank1
  6172  057E  00C9               	movwf	(main@R+2)^(0+128)
  6173                           
  6174                           ;main.c: 81: steinhart = R /10061;
  6175  057F  3034               	movlw	52
  6176  0580  0020               	movlb	0	; select bank0
  6177  0581  00A0               	movwf	___ftdiv@f2
  6178  0582  301D               	movlw	29
  6179  0583  00A1               	movwf	___ftdiv@f2+1
  6180  0584  3046               	movlw	70
  6181  0585  00A2               	movwf	___ftdiv@f2+2
  6182  0586  0021               	movlb	1	; select bank1
  6183  0587  0847               	movf	main@R^(0+128),w
  6184  0588  0020               	movlb	0	; select bank0
  6185  0589  00A3               	movwf	___ftdiv@f1
  6186  058A  0021               	movlb	1	; select bank1
  6187  058B  0848               	movf	(main@R+1)^(0+128),w
  6188  058C  0020               	movlb	0	; select bank0
  6189  058D  00A4               	movwf	___ftdiv@f1+1
  6190  058E  0021               	movlb	1	; select bank1
  6191  058F  0849               	movf	(main@R+2)^(0+128),w
  6192  0590  0020               	movlb	0	; select bank0
  6193  0591  00A5               	movwf	___ftdiv@f1+2
  6194  0592  318D  2539  3184   	fcall	___ftdiv
  6195  0595  0020               	movlb	0	; select bank0
  6196  0596  0820               	movf	?___ftdiv,w
  6197  0597  0021               	movlb	1	; select bank1
  6198  0598  00E2               	movwf	main@steinhart^(0+128)
  6199  0599  0020               	movlb	0	; select bank0
  6200  059A  0821               	movf	?___ftdiv+1,w
  6201  059B  0021               	movlb	1	; select bank1
  6202  059C  00E3               	movwf	(main@steinhart+1)^(0+128)
  6203  059D  0020               	movlb	0	; select bank0
  6204  059E  0822               	movf	?___ftdiv+2,w
  6205  059F  0021               	movlb	1	; select bank1
  6206  05A0  00E4               	movwf	(main@steinhart+2)^(0+128)
  6207                           
  6208                           ;main.c: 82: steinhart = log(steinhart);
  6209  05A1  0862               	movf	main@steinhart^(0+128),w
  6210  05A2  0020               	movlb	0	; select bank0
  6211  05A3  00C7               	movwf	log@x
  6212  05A4  0021               	movlb	1	; select bank1
  6213  05A5  0863               	movf	(main@steinhart+1)^(0+128),w
  6214  05A6  0020               	movlb	0	; select bank0
  6215  05A7  00C8               	movwf	log@x+1
  6216  05A8  0021               	movlb	1	; select bank1
  6217  05A9  0864               	movf	(main@steinhart+2)^(0+128),w
  6218  05AA  0020               	movlb	0	; select bank0
  6219  05AB  00C9               	movwf	log@x+2
  6220  05AC  318D  25E2  3184   	fcall	_log
  6221  05AF  0020               	movlb	0	; select bank0
  6222  05B0  0847               	movf	?_log,w
  6223  05B1  0021               	movlb	1	; select bank1
  6224  05B2  00E2               	movwf	main@steinhart^(0+128)
  6225  05B3  0020               	movlb	0	; select bank0
  6226  05B4  0848               	movf	?_log+1,w
  6227  05B5  0021               	movlb	1	; select bank1
  6228  05B6  00E3               	movwf	(main@steinhart+1)^(0+128)
  6229  05B7  0020               	movlb	0	; select bank0
  6230  05B8  0849               	movf	?_log+2,w
  6231  05B9  0021               	movlb	1	; select bank1
  6232  05BA  00E4               	movwf	(main@steinhart+2)^(0+128)
  6233                           
  6234                           ;main.c: 83: steinhart /= 3995;
  6235  05BB  30B0               	movlw	176
  6236  05BC  0020               	movlb	0	; select bank0
  6237  05BD  00A0               	movwf	___ftdiv@f2
  6238  05BE  3079               	movlw	121
  6239  05BF  00A1               	movwf	___ftdiv@f2+1
  6240  05C0  3045               	movlw	69
  6241  05C1  00A2               	movwf	___ftdiv@f2+2
  6242  05C2  0021               	movlb	1	; select bank1
  6243  05C3  0862               	movf	main@steinhart^(0+128),w
  6244  05C4  0020               	movlb	0	; select bank0
  6245  05C5  00A3               	movwf	___ftdiv@f1
  6246  05C6  0021               	movlb	1	; select bank1
  6247  05C7  0863               	movf	(main@steinhart+1)^(0+128),w
  6248  05C8  0020               	movlb	0	; select bank0
  6249  05C9  00A4               	movwf	___ftdiv@f1+1
  6250  05CA  0021               	movlb	1	; select bank1
  6251  05CB  0864               	movf	(main@steinhart+2)^(0+128),w
  6252  05CC  0020               	movlb	0	; select bank0
  6253  05CD  00A5               	movwf	___ftdiv@f1+2
  6254  05CE  318D  2539  3184   	fcall	___ftdiv
  6255  05D1  0020               	movlb	0	; select bank0
  6256  05D2  0820               	movf	?___ftdiv,w
  6257  05D3  0021               	movlb	1	; select bank1
  6258  05D4  00E2               	movwf	main@steinhart^(0+128)
  6259  05D5  0020               	movlb	0	; select bank0
  6260  05D6  0821               	movf	?___ftdiv+1,w
  6261  05D7  0021               	movlb	1	; select bank1
  6262  05D8  00E3               	movwf	(main@steinhart+1)^(0+128)
  6263  05D9  0020               	movlb	0	; select bank0
  6264  05DA  0822               	movf	?___ftdiv+2,w
  6265  05DB  0021               	movlb	1	; select bank1
  6266  05DC  00E4               	movwf	(main@steinhart+2)^(0+128)
  6267                           
  6268                           ;main.c: 84: steinhart += 1.0 / (25 + 273.15);
  6269  05DD  30CF               	movlw	207
  6270  05DE  0020               	movlb	0	; select bank0
  6271  05DF  00B0               	movwf	___ftadd@f1
  6272  05E0  305B               	movlw	91
  6273  05E1  00B1               	movwf	___ftadd@f1+1
  6274  05E2  303B               	movlw	59
  6275  05E3  00B2               	movwf	___ftadd@f1+2
  6276  05E4  0021               	movlb	1	; select bank1
  6277  05E5  0862               	movf	main@steinhart^(0+128),w
  6278  05E6  0020               	movlb	0	; select bank0
  6279  05E7  00B3               	movwf	___ftadd@f2
  6280  05E8  0021               	movlb	1	; select bank1
  6281  05E9  0863               	movf	(main@steinhart+1)^(0+128),w
  6282  05EA  0020               	movlb	0	; select bank0
  6283  05EB  00B4               	movwf	___ftadd@f2+1
  6284  05EC  0021               	movlb	1	; select bank1
  6285  05ED  0864               	movf	(main@steinhart+2)^(0+128),w
  6286  05EE  0020               	movlb	0	; select bank0
  6287  05EF  00B5               	movwf	___ftadd@f2+2
  6288  05F0  3181  2139  3184   	fcall	___ftadd
  6289  05F3  0020               	movlb	0	; select bank0
  6290  05F4  0830               	movf	?___ftadd,w
  6291  05F5  0021               	movlb	1	; select bank1
  6292  05F6  00E2               	movwf	main@steinhart^(0+128)
  6293  05F7  0020               	movlb	0	; select bank0
  6294  05F8  0831               	movf	?___ftadd+1,w
  6295  05F9  0021               	movlb	1	; select bank1
  6296  05FA  00E3               	movwf	(main@steinhart+1)^(0+128)
  6297  05FB  0020               	movlb	0	; select bank0
  6298  05FC  0832               	movf	?___ftadd+2,w
  6299  05FD  0021               	movlb	1	; select bank1
  6300  05FE  00E4               	movwf	(main@steinhart+2)^(0+128)
  6301                           
  6302                           ;main.c: 85: steinhart = 1.0 / steinhart;
  6303  05FF  0862               	movf	main@steinhart^(0+128),w
  6304  0600  0020               	movlb	0	; select bank0
  6305  0601  00A0               	movwf	___ftdiv@f2
  6306  0602  0021               	movlb	1	; select bank1
  6307  0603  0863               	movf	(main@steinhart+1)^(0+128),w
  6308  0604  0020               	movlb	0	; select bank0
  6309  0605  00A1               	movwf	___ftdiv@f2+1
  6310  0606  0021               	movlb	1	; select bank1
  6311  0607  0864               	movf	(main@steinhart+2)^(0+128),w
  6312  0608  0020               	movlb	0	; select bank0
  6313  0609  00A2               	movwf	___ftdiv@f2+2
  6314  060A  3000               	movlw	0
  6315  060B  00A3               	movwf	___ftdiv@f1
  6316  060C  3080               	movlw	128
  6317  060D  00A4               	movwf	___ftdiv@f1+1
  6318  060E  303F               	movlw	63
  6319  060F  00A5               	movwf	___ftdiv@f1+2
  6320  0610  318D  2539  3184   	fcall	___ftdiv
  6321  0613  0020               	movlb	0	; select bank0
  6322  0614  0820               	movf	?___ftdiv,w
  6323  0615  0021               	movlb	1	; select bank1
  6324  0616  00E2               	movwf	main@steinhart^(0+128)
  6325  0617  0020               	movlb	0	; select bank0
  6326  0618  0821               	movf	?___ftdiv+1,w
  6327  0619  0021               	movlb	1	; select bank1
  6328  061A  00E3               	movwf	(main@steinhart+1)^(0+128)
  6329  061B  0020               	movlb	0	; select bank0
  6330  061C  0822               	movf	?___ftdiv+2,w
  6331  061D  0021               	movlb	1	; select bank1
  6332  061E  00E4               	movwf	(main@steinhart+2)^(0+128)
  6333                           
  6334                           ;main.c: 86: steinhart -= 273.15;
  6335  061F  3093               	movlw	147
  6336  0620  0020               	movlb	0	; select bank0
  6337  0621  00BD               	movwf	___ftsub@f2
  6338  0622  3088               	movlw	136
  6339  0623  00BE               	movwf	___ftsub@f2+1
  6340  0624  3043               	movlw	67
  6341  0625  00BF               	movwf	___ftsub@f2+2
  6342  0626  0021               	movlb	1	; select bank1
  6343  0627  0862               	movf	main@steinhart^(0+128),w
  6344  0628  0020               	movlb	0	; select bank0
  6345  0629  00C0               	movwf	___ftsub@f1
  6346  062A  0021               	movlb	1	; select bank1
  6347  062B  0863               	movf	(main@steinhart+1)^(0+128),w
  6348  062C  0020               	movlb	0	; select bank0
  6349  062D  00C1               	movwf	___ftsub@f1+1
  6350  062E  0021               	movlb	1	; select bank1
  6351  062F  0864               	movf	(main@steinhart+2)^(0+128),w
  6352  0630  0020               	movlb	0	; select bank0
  6353  0631  00C2               	movwf	___ftsub@f1+2
  6354  0632  3188  2030  3184   	fcall	___ftsub
  6355  0635  0020               	movlb	0	; select bank0
  6356  0636  083D               	movf	?___ftsub,w
  6357  0637  0021               	movlb	1	; select bank1
  6358  0638  00E2               	movwf	main@steinhart^(0+128)
  6359  0639  0020               	movlb	0	; select bank0
  6360  063A  083E               	movf	?___ftsub+1,w
  6361  063B  0021               	movlb	1	; select bank1
  6362  063C  00E3               	movwf	(main@steinhart+1)^(0+128)
  6363  063D  0020               	movlb	0	; select bank0
  6364  063E  083F               	movf	?___ftsub+2,w
  6365  063F  0021               	movlb	1	; select bank1
  6366  0640  00E4               	movwf	(main@steinhart+2)^(0+128)
  6367                           
  6368                           ;main.c: 89: displayTemp = (uint16_t)(steinhart*100);
  6369  0641  0862               	movf	main@steinhart^(0+128),w
  6370  0642  0020               	movlb	0	; select bank0
  6371  0643  00A3               	movwf	___ftmul@f2
  6372  0644  0021               	movlb	1	; select bank1
  6373  0645  0863               	movf	(main@steinhart+1)^(0+128),w
  6374  0646  0020               	movlb	0	; select bank0
  6375  0647  00A4               	movwf	___ftmul@f2+1
  6376  0648  0021               	movlb	1	; select bank1
  6377  0649  0864               	movf	(main@steinhart+2)^(0+128),w
  6378  064A  0020               	movlb	0	; select bank0
  6379  064B  00A5               	movwf	___ftmul@f2+2
  6380  064C  3000               	movlw	0
  6381  064D  00A0               	movwf	___ftmul@f1
  6382  064E  30C8               	movlw	200
  6383  064F  00A1               	movwf	___ftmul@f1+1
  6384  0650  3042               	movlw	66
  6385  0651  00A2               	movwf	___ftmul@f1+2
  6386  0652  318E  2692  3184   	fcall	___ftmul
  6387  0655  0020               	movlb	0	; select bank0
  6388  0656  0820               	movf	?___ftmul,w
  6389  0657  00CE               	movwf	___fttol@f1
  6390  0658  0821               	movf	?___ftmul+1,w
  6391  0659  00CF               	movwf	___fttol@f1+1
  6392  065A  0822               	movf	?___ftmul+2,w
  6393  065B  00D0               	movwf	___fttol@f1+2
  6394  065C  318C  24B2  3184   	fcall	___fttol
  6395  065F  0020               	movlb	0	; select bank0
  6396  0660  084F               	movf	?___fttol+1,w
  6397  0661  0021               	movlb	1	; select bank1
  6398  0662  00D9               	movwf	(main@displayTemp+1)^(0+128)
  6399  0663  0020               	movlb	0	; select bank0
  6400  0664  084E               	movf	?___fttol,w
  6401  0665  0021               	movlb	1	; select bank1
  6402  0666  00D8               	movwf	main@displayTemp^(0+128)
  6403                           
  6404                           ;main.c: 91: if(toggle == 1)
  6405  0667  0357               	decf	main@toggle^(0+128),w
  6406  0668  1D03               	btfss	3,2
  6407  0669  2EA3               	goto	l3105
  6408                           
  6409                           ;main.c: 92: {
  6410                           ;main.c: 93: displayTemp = displayTemp*9/5+3200;
  6411  066A  3005               	movlw	5
  6412  066B  00F6               	movwf	___lwdiv@divisor
  6413  066C  3000               	movlw	0
  6414  066D  00F7               	movwf	___lwdiv@divisor+1
  6415  066E  0859               	movf	(main@displayTemp+1)^(0+128),w
  6416  066F  00F1               	movwf	___wmul@multiplier+1
  6417  0670  0858               	movf	main@displayTemp^(0+128),w
  6418  0671  00F0               	movwf	___wmul@multiplier
  6419  0672  3009               	movlw	9
  6420  0673  00F2               	movwf	___wmul@multiplicand
  6421  0674  3000               	movlw	0
  6422  0675  00F3               	movwf	___wmul@multiplicand+1
  6423  0676  3188  2015  3184   	fcall	___wmul
  6424  0679  0871               	movf	?___wmul+1,w
  6425  067A  00F9               	movwf	___lwdiv@dividend+1
  6426  067B  0870               	movf	?___wmul,w
  6427  067C  00F8               	movwf	___lwdiv@dividend
  6428  067D  3189  2118  3184   	fcall	___lwdiv
  6429  0680  0876               	movf	?___lwdiv,w
  6430  0681  3E80               	addlw	128
  6431  0682  0021               	movlb	1	; select bank1
  6432  0683  00D8               	movwf	main@displayTemp^(0+128)
  6433  0684  300C               	movlw	12
  6434  0685  3D77               	addwfc	?___lwdiv+1,w
  6435  0686  00D9               	movwf	(main@displayTemp+1)^(0+128)
  6436                           
  6437                           ;main.c: 98: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 2, 0);};
  6438  0687  01F3               	clrf	LCD_Set_Cursor@y
  6439  0688  0AF3               	incf	LCD_Set_Cursor@y,f
  6440  0689  3000               	movlw	0
  6441  068A  3189  21FF  3184   	fcall	_LCD_Set_Cursor
  6442  068D  0021               	movlb	1	; select bank1
  6443  068E  0859               	movf	(main@displayTemp+1)^(0+128),w
  6444  068F  00FA               	movwf	LCD_Write_Int@value+1
  6445  0690  0858               	movf	main@displayTemp^(0+128),w
  6446  0691  00F9               	movwf	LCD_Write_Int@value
  6447  0692  01FB               	clrf	LCD_Write_Int@fieldLength
  6448  0693  03FB               	decf	LCD_Write_Int@fieldLength,f
  6449  0694  3002               	movlw	2
  6450  0695  0020               	movlb	0	; select bank0
  6451  0696  00DC               	movwf	??_main
  6452  0697  085C               	movf	??_main,w
  6453  0698  00FC               	movwf	LCD_Write_Int@numPlaces
  6454  0699  01FD               	clrf	LCD_Write_Int@sign
  6455  069A  3180  2070  3184   	fcall	_LCD_Write_Int
  6456                           
  6457                           ;main.c: 99: LCD_Write_Char(0);
  6458  069D  3000               	movlw	0
  6459  069E  3188  20BC  3184   	fcall	_LCD_Write_Char
  6460                           
  6461                           ;main.c: 100: LCD_Write_Char('F');
  6462  06A1  3046               	movlw	70
  6463  06A2  2EBD               	goto	L1
  6464  06A3                     l3105:	
  6465                           ;main.c: 102: }
  6466                           
  6467                           ;main.c: 101: LCD_Write_Char(' ');
  6468                           
  6469                           
  6470                           ;main.c: 103: else
  6471                           ;main.c: 104: {
  6472                           ;main.c: 110: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 2, 0);};
  6473  06A3  01F3               	clrf	LCD_Set_Cursor@y
  6474  06A4  3000               	movlw	0
  6475  06A5  3189  21FF  3184   	fcall	_LCD_Set_Cursor
  6476  06A8  0021               	movlb	1	; select bank1
  6477  06A9  0859               	movf	(main@displayTemp+1)^(0+128),w
  6478  06AA  00FA               	movwf	LCD_Write_Int@value+1
  6479  06AB  0858               	movf	main@displayTemp^(0+128),w
  6480  06AC  00F9               	movwf	LCD_Write_Int@value
  6481  06AD  01FB               	clrf	LCD_Write_Int@fieldLength
  6482  06AE  03FB               	decf	LCD_Write_Int@fieldLength,f
  6483  06AF  3002               	movlw	2
  6484  06B0  0020               	movlb	0	; select bank0
  6485  06B1  00DC               	movwf	??_main
  6486  06B2  085C               	movf	??_main,w
  6487  06B3  00FC               	movwf	LCD_Write_Int@numPlaces
  6488  06B4  01FD               	clrf	LCD_Write_Int@sign
  6489  06B5  3180  2070  3184   	fcall	_LCD_Write_Int
  6490                           
  6491                           ;main.c: 111: LCD_Write_Char(0);
  6492  06B8  3000               	movlw	0
  6493  06B9  3188  20BC  3184   	fcall	_LCD_Write_Char
  6494                           
  6495                           ;main.c: 112: LCD_Write_Char('C');
  6496  06BC  3043               	movlw	67
  6497  06BD                     L1:	
  6498  06BD  3188  20BC  3184   	fcall	_LCD_Write_Char
  6499                           
  6500                           ;main.c: 113: LCD_Write_Char(' ');
  6501  06C0  3020               	movlw	32
  6502  06C1  3188  20BC  3184   	fcall	_LCD_Write_Char
  6503                           
  6504                           ;main.c: 114: }
  6505                           ;main.c: 116: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  6506  06C4  01F3               	clrf	LCD_Set_Cursor@y
  6507  06C5  3001               	movlw	1
  6508  06C6  3189  21FF  3184   	fcall	_LCD_Set_Cursor
  6509  06C9  3025               	movlw	low (STR_4| (0+32768))
  6510  06CA  00F5               	movwf	LCD_Write_String@a
  6511  06CB  3090               	movlw	high (STR_4| (0+32768))
  6512  06CC  00F6               	movwf	LCD_Write_String@a+1
  6513  06CD  3197  27E6  3184   	fcall	_LCD_Write_String
  6514                           
  6515                           ;main.c: 123: { LCD_Set_Cursor(1,4); LCD_Write_Int(minutes,4, 0, 0);};
  6516  06D0  3004               	movlw	4
  6517  06D1  0020               	movlb	0	; select bank0
  6518  06D2  00DC               	movwf	??_main
  6519  06D3  085C               	movf	??_main,w
  6520  06D4  00F3               	movwf	LCD_Set_Cursor@y
  6521  06D5  3001               	movlw	1
  6522  06D6  3189  21FF  3184   	fcall	_LCD_Set_Cursor
  6523  06D9  0021               	movlb	1	; select bank1
  6524  06DA  084E               	movf	(main@minutes+1)^(0+128),w
  6525  06DB  00FA               	movwf	LCD_Write_Int@value+1
  6526  06DC  084D               	movf	main@minutes^(0+128),w
  6527  06DD  00F9               	movwf	LCD_Write_Int@value
  6528  06DE  3004               	movlw	4
  6529  06DF  0020               	movlb	0	; select bank0
  6530  06E0  00DC               	movwf	??_main
  6531  06E1  085C               	movf	??_main,w
  6532  06E2  00FB               	movwf	LCD_Write_Int@fieldLength
  6533  06E3  01FC               	clrf	LCD_Write_Int@numPlaces
  6534  06E4  01FD               	clrf	LCD_Write_Int@sign
  6535  06E5  3180  2070  3184   	fcall	_LCD_Write_Int
  6536                           
  6537                           ;main.c: 127: counter +=1;
  6538  06E8  3001               	movlw	1
  6539  06E9  0021               	movlb	1	; select bank1
  6540  06EA  07D4               	addwf	main@counter^(0+128),f
  6541  06EB  3000               	movlw	0
  6542  06EC  3DD5               	addwfc	(main@counter+1)^(0+128),f
  6543                           
  6544                           ;main.c: 129: if(counter>12)
  6545  06ED  3000               	movlw	0
  6546  06EE  0255               	subwf	(main@counter+1)^(0+128),w
  6547  06EF  300D               	movlw	13
  6548  06F0  1903               	skipnz
  6549  06F1  0254               	subwf	main@counter^(0+128),w
  6550  06F2  1C03               	skipc
  6551  06F3  2F64               	goto	l3139
  6552                           
  6553                           ;main.c: 130: {
  6554                           ;main.c: 131: toggle = 1-toggle;
  6555  06F4  0357               	decf	main@toggle^(0+128),w
  6556  06F5  3AFF               	xorlw	255
  6557  06F6  3E01               	addlw	1
  6558  06F7  0020               	movlb	0	; select bank0
  6559  06F8  00DC               	movwf	??_main
  6560  06F9  085C               	movf	??_main,w
  6561  06FA  0021               	movlb	1	; select bank1
  6562  06FB  00D7               	movwf	main@toggle^(0+128)
  6563                           
  6564                           ;main.c: 132: counter = 0;
  6565  06FC  01D4               	clrf	main@counter^(0+128)
  6566  06FD  01D5               	clrf	(main@counter+1)^(0+128)
  6567                           
  6568                           ;main.c: 133: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  6569  06FE  0862               	movf	main@steinhart^(0+128),w
  6570  06FF  0020               	movlb	0	; select bank0
  6571  0700  00C8               	movwf	PID_Calculate@temp
  6572  0701  0021               	movlb	1	; select bank1
  6573  0702  0863               	movf	(main@steinhart+1)^(0+128),w
  6574  0703  0020               	movlb	0	; select bank0
  6575  0704  00C9               	movwf	PID_Calculate@temp+1
  6576  0705  0021               	movlb	1	; select bank1
  6577  0706  0864               	movf	(main@steinhart+2)^(0+128),w
  6578  0707  0020               	movlb	0	; select bank0
  6579  0708  00CA               	movwf	PID_Calculate@temp+2
  6580  0709  086F               	movf	_setpoint,w
  6581  070A  00DC               	movwf	??_main
  6582  070B  01DD               	clrf	??_main+1
  6583  070C  085C               	movf	??_main,w
  6584  070D  00C6               	movwf	PID_Calculate@setpoint
  6585  070E  085D               	movf	??_main+1,w
  6586  070F  00C7               	movwf	PID_Calculate@setpoint+1
  6587  0710  3182  222F  3184   	fcall	_PID_Calculate
  6588  0713  0020               	movlb	0	; select bank0
  6589  0714  0846               	movf	?_PID_Calculate,w
  6590  0715  00CE               	movwf	___fttol@f1
  6591  0716  0847               	movf	?_PID_Calculate+1,w
  6592  0717  00CF               	movwf	___fttol@f1+1
  6593  0718  0848               	movf	?_PID_Calculate+2,w
  6594  0719  00D0               	movwf	___fttol@f1+2
  6595  071A  318C  24B2  3184   	fcall	___fttol
  6596  071D  0020               	movlb	0	; select bank0
  6597  071E  084F               	movf	?___fttol+1,w
  6598  071F  0021               	movlb	1	; select bank1
  6599  0720  00D0               	movwf	(main@PWM_Output+1)^(0+128)
  6600  0721  0020               	movlb	0	; select bank0
  6601  0722  084E               	movf	?___fttol,w
  6602  0723  0021               	movlb	1	; select bank1
  6603  0724  00CF               	movwf	main@PWM_Output^(0+128)
  6604                           
  6605                           ;main.c: 135: if((setpoint-steinhart)>4)
  6606  0725  3000               	movlw	0
  6607  0726  0020               	movlb	0	; select bank0
  6608  0727  00BD               	movwf	___ftge@ff1
  6609  0728  3080               	movlw	128
  6610  0729  00BE               	movwf	___ftge@ff1+1
  6611  072A  3040               	movlw	64
  6612  072B  00BF               	movwf	___ftge@ff1+2
  6613  072C  0021               	movlb	1	; select bank1
  6614  072D  0862               	movf	main@steinhart^(0+128),w
  6615  072E  00F0               	movwf	___ftneg@f1
  6616  072F  0863               	movf	(main@steinhart+1)^(0+128),w
  6617  0730  00F1               	movwf	___ftneg@f1+1
  6618  0731  0864               	movf	(main@steinhart+2)^(0+128),w
  6619  0732  00F2               	movwf	___ftneg@f1+2
  6620  0733  3196  26FA  3184   	fcall	___ftneg
  6621  0736  0870               	movf	?___ftneg,w
  6622  0737  0020               	movlb	0	; select bank0
  6623  0738  00B0               	movwf	___ftadd@f1
  6624  0739  0871               	movf	?___ftneg+1,w
  6625  073A  00B1               	movwf	___ftadd@f1+1
  6626  073B  0872               	movf	?___ftneg+2,w
  6627  073C  00B2               	movwf	___ftadd@f1+2
  6628  073D  086F               	movf	_setpoint,w
  6629  073E  3197  27CC  3184   	fcall	___lbtoft
  6630  0741  0878               	movf	?___lbtoft,w
  6631  0742  0020               	movlb	0	; select bank0
  6632  0743  00B3               	movwf	___ftadd@f2
  6633  0744  0879               	movf	?___lbtoft+1,w
  6634  0745  00B4               	movwf	___ftadd@f2+1
  6635  0746  087A               	movf	?___lbtoft+2,w
  6636  0747  00B5               	movwf	___ftadd@f2+2
  6637  0748  3181  2139  3184   	fcall	___ftadd
  6638  074B  0020               	movlb	0	; select bank0
  6639  074C  0830               	movf	?___ftadd,w
  6640  074D  00C0               	movwf	___ftge@ff2
  6641  074E  0831               	movf	?___ftadd+1,w
  6642  074F  00C1               	movwf	___ftge@ff2+1
  6643  0750  0832               	movf	?___ftadd+2,w
  6644  0751  00C2               	movwf	___ftge@ff2+2
  6645  0752  3189  2187  3184   	fcall	___ftge
  6646  0755  1803               	btfsc	3,0
  6647  0756  2F5C               	goto	l3137
  6648                           
  6649                           ;main.c: 136: {
  6650                           ;main.c: 137: PWM_Output = 1023;
  6651  0757  30FF               	movlw	255
  6652  0758  0021               	movlb	1	; select bank1
  6653  0759  00CF               	movwf	main@PWM_Output^(0+128)
  6654  075A  3003               	movlw	3
  6655  075B  00D0               	movwf	(main@PWM_Output^(0+128)+1)
  6656  075C                     l3137:	
  6657                           
  6658                           ;main.c: 138: }
  6659                           ;main.c: 140: PWM6_LoadDutyValue(PWM_Output);
  6660  075C  0021               	movlb	1	; select bank1
  6661  075D  0850               	movf	(main@PWM_Output+1)^(0+128),w
  6662  075E  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6663  075F  084F               	movf	main@PWM_Output^(0+128),w
  6664  0760  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6665  0761  3197  276D  3184   	fcall	_PWM6_LoadDutyValue
  6666  0764                     l3139:	
  6667                           
  6668                           ;main.c: 141: }
  6669                           ;main.c: 144: if(TMR0IF)
  6670  0764  002E               	movlb	14	; select bank14
  6671  0765  1E8C               	btfss	12,5	;volatile
  6672  0766  2F73               	goto	l3145
  6673                           
  6674                           ;main.c: 145: {
  6675                           ;main.c: 146: TMR0H = 0x24;
  6676  0767  3024               	movlw	36
  6677  0768  0020               	movlb	0	; select bank0
  6678  0769  009D               	movwf	29	;volatile
  6679                           
  6680                           ;main.c: 147: TMR0L = 0x9F;
  6681  076A  309F               	movlw	159
  6682  076B  009C               	movwf	28	;volatile
  6683                           
  6684                           ;main.c: 148: TMR0IF = 0;
  6685  076C  002E               	movlb	14	; select bank14
  6686  076D  128C               	bcf	12,5	;volatile
  6687                           
  6688                           ;main.c: 149: seconds+=1;
  6689  076E  3001               	movlw	1
  6690  076F  0021               	movlb	1	; select bank1
  6691  0770  07D1               	addwf	main@seconds^(0+128),f
  6692  0771  3000               	movlw	0
  6693  0772  3DD2               	addwfc	(main@seconds+1)^(0+128),f
  6694  0773                     l3145:	
  6695                           
  6696                           ;main.c: 150: }
  6697                           ;main.c: 152: if(setpoint - steinhart < 2)
  6698  0773  0021               	movlb	1	; select bank1
  6699  0774  0862               	movf	main@steinhart^(0+128),w
  6700  0775  00F0               	movwf	___ftneg@f1
  6701  0776  0863               	movf	(main@steinhart+1)^(0+128),w
  6702  0777  00F1               	movwf	___ftneg@f1+1
  6703  0778  0864               	movf	(main@steinhart+2)^(0+128),w
  6704  0779  00F2               	movwf	___ftneg@f1+2
  6705  077A  3196  26FA  3184   	fcall	___ftneg
  6706  077D  0870               	movf	?___ftneg,w
  6707  077E  0020               	movlb	0	; select bank0
  6708  077F  00B0               	movwf	___ftadd@f1
  6709  0780  0871               	movf	?___ftneg+1,w
  6710  0781  00B1               	movwf	___ftadd@f1+1
  6711  0782  0872               	movf	?___ftneg+2,w
  6712  0783  00B2               	movwf	___ftadd@f1+2
  6713  0784  086F               	movf	_setpoint,w
  6714  0785  3197  27CC  3184   	fcall	___lbtoft
  6715  0788  0878               	movf	?___lbtoft,w
  6716  0789  0020               	movlb	0	; select bank0
  6717  078A  00B3               	movwf	___ftadd@f2
  6718  078B  0879               	movf	?___lbtoft+1,w
  6719  078C  00B4               	movwf	___ftadd@f2+1
  6720  078D  087A               	movf	?___lbtoft+2,w
  6721  078E  00B5               	movwf	___ftadd@f2+2
  6722  078F  3181  2139  3184   	fcall	___ftadd
  6723  0792  0020               	movlb	0	; select bank0
  6724  0793  0830               	movf	?___ftadd,w
  6725  0794  00BD               	movwf	___ftge@ff1
  6726  0795  0831               	movf	?___ftadd+1,w
  6727  0796  00BE               	movwf	___ftge@ff1+1
  6728  0797  0832               	movf	?___ftadd+2,w
  6729  0798  00BF               	movwf	___ftge@ff1+2
  6730  0799  3000               	movlw	0
  6731  079A  00C0               	movwf	___ftge@ff2
  6732  079B  3000               	movlw	0
  6733  079C  00C1               	movwf	___ftge@ff2+1
  6734  079D  3040               	movlw	64
  6735  079E  00C2               	movwf	___ftge@ff2+2
  6736  079F  3189  2187  3184   	fcall	___ftge
  6737  07A2  1803               	btfsc	3,0
  6738  07A3  2FB2               	goto	l3153
  6739                           
  6740                           ;main.c: 153: {
  6741                           ;main.c: 154: if(seconds>63)
  6742  07A4  3000               	movlw	0
  6743  07A5  0021               	movlb	1	; select bank1
  6744  07A6  0252               	subwf	(main@seconds+1)^(0+128),w
  6745  07A7  3040               	movlw	64
  6746  07A8  1903               	skipnz
  6747  07A9  0251               	subwf	main@seconds^(0+128),w
  6748  07AA  1C03               	skipc
  6749  07AB  2FB2               	goto	l3153
  6750                           
  6751                           ;main.c: 155: {
  6752                           ;main.c: 156: minutes+=1;
  6753  07AC  3001               	movlw	1
  6754  07AD  07CD               	addwf	main@minutes^(0+128),f
  6755  07AE  3000               	movlw	0
  6756  07AF  3DCE               	addwfc	(main@minutes+1)^(0+128),f
  6757                           
  6758                           ;main.c: 157: seconds = 0;
  6759  07B0  01D1               	clrf	main@seconds^(0+128)
  6760  07B1  01D2               	clrf	(main@seconds+1)^(0+128)
  6761  07B2                     l3153:	
  6762                           
  6763                           ;main.c: 158: }
  6764                           ;main.c: 159: }
  6765                           ;main.c: 162: readButtons();
  6766  07B2  318B  23AF  3184   	fcall	_readButtons
  6767                           
  6768                           ;main.c: 163: tempSetpoint();
  6769  07B5  318F  2746  3184   	fcall	_tempSetpoint
  6770  07B8  2C26               	goto	l3045
  6771  07B9                     __end_of_main:	
  6772                           
  6773                           	psect	text1
  6774  0F46                     __ptext1:	
  6775 ;; *************** function _tempSetpoint *****************
  6776 ;; Defined at:
  6777 ;;		line 12 in file "user.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  counter         1   20[BANK0 ] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  1    wreg      void 
  6784 ;; Registers used:
  6785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;Total ram usage:        4 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    4
  6798 ;; This function calls:
  6799 ;;		_LCD_Clear
  6800 ;;		_LCD_Set_Cursor
  6801 ;;		_LCD_Write_Char
  6802 ;;		_LCD_Write_Int
  6803 ;;		_LCD_Write_String
  6804 ;;		_readButtons
  6805 ;; This function is called by:
  6806 ;;		_main
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function _tempSetpoint
  6812  0F46                     _tempSetpoint:	
  6813                           
  6814                           ;user.c: 14: uint8_t counter = 0;
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6818  0F46  0020               	movlb	0	; select bank0
  6819  0F47  01B4               	clrf	tempSetpoint@counter
  6820                           
  6821                           ;user.c: 16: oldSetpoint = setpoint;
  6822  0F48  086F               	movf	_setpoint,w
  6823  0F49  00B1               	movwf	??_tempSetpoint
  6824  0F4A  0831               	movf	??_tempSetpoint,w
  6825  0F4B  00E9               	movwf	_oldSetpoint
  6826  0F4C                     l2779:	
  6827                           ;user.c: 18: while(downCount >= 5)
  6828                           
  6829  0F4C  3005               	movlw	5
  6830  0F4D  0020               	movlb	0	; select bank0
  6831  0F4E  0268               	subwf	_downCount,w
  6832  0F4F  1C03               	btfss	3,0
  6833  0F50  2FE6               	goto	l2807
  6834                           
  6835                           ;user.c: 19: {
  6836                           ;user.c: 20: counter+=1;
  6837  0F51  3001               	movlw	1
  6838  0F52  00B1               	movwf	??_tempSetpoint
  6839  0F53  0831               	movf	??_tempSetpoint,w
  6840  0F54  07B4               	addwf	tempSetpoint@counter,f
  6841                           
  6842                           ;user.c: 21: if(counter<=1)
  6843  0F55  3002               	movlw	2
  6844  0F56  0234               	subwf	tempSetpoint@counter,w
  6845  0F57  1803               	skipnc
  6846  0F58  2F5C               	goto	l2759
  6847                           
  6848                           ;user.c: 22: {
  6849                           ;user.c: 23: LCD_Clear();
  6850  0F59  3197  2702  318F   	fcall	_LCD_Clear
  6851  0F5C                     l2759:	
  6852                           
  6853                           ;user.c: 24: }
  6854                           ;user.c: 25: setpoint-=1;
  6855  0F5C  3001               	movlw	1
  6856  0F5D  0020               	movlb	0	; select bank0
  6857  0F5E  02EF               	subwf	_setpoint,f
  6858                           
  6859                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6860  0F5F  01F3               	clrf	LCD_Set_Cursor@y
  6861  0F60  3000               	movlw	0
  6862  0F61  3189  21FF  318F   	fcall	_LCD_Set_Cursor
  6863  0F64  301B               	movlw	low (STR_1| (0+32768))
  6864  0F65  00F5               	movwf	LCD_Write_String@a
  6865  0F66  3090               	movlw	high (STR_1| (0+32768))
  6866  0F67  00F6               	movwf	LCD_Write_String@a+1
  6867  0F68  3197  27E6  318F   	fcall	_LCD_Write_String
  6868                           
  6869                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6870  0F6B  01F3               	clrf	LCD_Set_Cursor@y
  6871  0F6C  3001               	movlw	1
  6872  0F6D  3189  21FF  318F   	fcall	_LCD_Set_Cursor
  6873  0F70  0020               	movlb	0	; select bank0
  6874  0F71  086F               	movf	_setpoint,w
  6875  0F72  00B1               	movwf	??_tempSetpoint
  6876  0F73  01B2               	clrf	??_tempSetpoint+1
  6877  0F74  0831               	movf	??_tempSetpoint,w
  6878  0F75  00F9               	movwf	LCD_Write_Int@value
  6879  0F76  0832               	movf	??_tempSetpoint+1,w
  6880  0F77  00FA               	movwf	LCD_Write_Int@value+1
  6881  0F78  3003               	movlw	3
  6882  0F79  00B3               	movwf	??_tempSetpoint+2
  6883  0F7A  0833               	movf	??_tempSetpoint+2,w
  6884  0F7B  00FB               	movwf	LCD_Write_Int@fieldLength
  6885  0F7C  01FC               	clrf	LCD_Write_Int@numPlaces
  6886  0F7D  01FD               	clrf	LCD_Write_Int@sign
  6887  0F7E  3180  2070  318F   	fcall	_LCD_Write_Int
  6888                           
  6889                           ;user.c: 28: LCD_Write_Char(0);
  6890  0F81  3000               	movlw	0
  6891  0F82  3188  20BC  318F   	fcall	_LCD_Write_Char
  6892                           
  6893                           ;user.c: 29: LCD_Write_Char('C');
  6894  0F85  3043               	movlw	67
  6895  0F86  3188  20BC  318F   	fcall	_LCD_Write_Char
  6896                           
  6897                           ;user.c: 30: LCD_Write_Char(' ');
  6898  0F89  3020               	movlw	32
  6899  0F8A  3188  20BC  318F   	fcall	_LCD_Write_Char
  6900                           
  6901                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6902  0F8D  3072               	movlw	114
  6903  0F8E  0020               	movlb	0	; select bank0
  6904  0F8F  00B2               	movwf	??_tempSetpoint+1
  6905  0F90  30A1               	movlw	161
  6906  0F91  00B1               	movwf	??_tempSetpoint
  6907  0F92                     u3377:	
  6908  0F92  0BB1               	decfsz	??_tempSetpoint,f
  6909  0F93  2F92               	goto	u3377
  6910  0F94  0BB2               	decfsz	??_tempSetpoint+1,f
  6911  0F95  2F92               	goto	u3377
  6912  0F96  3200               	nop2
  6913                           
  6914                           ;user.c: 32: readButtons();
  6915  0F97  318B  23AF  318F   	fcall	_readButtons
  6916  0F9A  2F4C               	goto	l2779
  6917  0F9B                     l2781:	
  6918                           ;user.c: 33: }
  6919                           ;user.c: 35: while(upCount >= 5)
  6920                           
  6921                           
  6922                           ;user.c: 36: {
  6923                           ;user.c: 37: counter+=1;
  6924  0F9B  3001               	movlw	1
  6925  0F9C  00B1               	movwf	??_tempSetpoint
  6926  0F9D  0831               	movf	??_tempSetpoint,w
  6927  0F9E  07B4               	addwf	tempSetpoint@counter,f
  6928                           
  6929                           ;user.c: 38: if(counter<=1)
  6930  0F9F  3002               	movlw	2
  6931  0FA0  0234               	subwf	tempSetpoint@counter,w
  6932  0FA1  1803               	skipnc
  6933  0FA2  2FA6               	goto	l2787
  6934                           
  6935                           ;user.c: 39: {
  6936                           ;user.c: 40: LCD_Clear();
  6937  0FA3  3197  2702  318F   	fcall	_LCD_Clear
  6938  0FA6                     l2787:	
  6939                           
  6940                           ;user.c: 41: }
  6941                           ;user.c: 42: setpoint+=1;
  6942  0FA6  3001               	movlw	1
  6943  0FA7  0020               	movlb	0	; select bank0
  6944  0FA8  00B1               	movwf	??_tempSetpoint
  6945  0FA9  0831               	movf	??_tempSetpoint,w
  6946  0FAA  07EF               	addwf	_setpoint,f
  6947                           
  6948                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6949  0FAB  01F3               	clrf	LCD_Set_Cursor@y
  6950  0FAC  3000               	movlw	0
  6951  0FAD  3189  21FF  318F   	fcall	_LCD_Set_Cursor
  6952  0FB0  301B               	movlw	low (STR_1| (0+32768))
  6953  0FB1  00F5               	movwf	LCD_Write_String@a
  6954  0FB2  3090               	movlw	high (STR_1| (0+32768))
  6955  0FB3  00F6               	movwf	LCD_Write_String@a+1
  6956  0FB4  3197  27E6  318F   	fcall	_LCD_Write_String
  6957                           
  6958                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6959  0FB7  01F3               	clrf	LCD_Set_Cursor@y
  6960  0FB8  3001               	movlw	1
  6961  0FB9  3189  21FF  318F   	fcall	_LCD_Set_Cursor
  6962  0FBC  0020               	movlb	0	; select bank0
  6963  0FBD  086F               	movf	_setpoint,w
  6964  0FBE  00B1               	movwf	??_tempSetpoint
  6965  0FBF  01B2               	clrf	??_tempSetpoint+1
  6966  0FC0  0831               	movf	??_tempSetpoint,w
  6967  0FC1  00F9               	movwf	LCD_Write_Int@value
  6968  0FC2  0832               	movf	??_tempSetpoint+1,w
  6969  0FC3  00FA               	movwf	LCD_Write_Int@value+1
  6970  0FC4  3003               	movlw	3
  6971  0FC5  00B3               	movwf	??_tempSetpoint+2
  6972  0FC6  0833               	movf	??_tempSetpoint+2,w
  6973  0FC7  00FB               	movwf	LCD_Write_Int@fieldLength
  6974  0FC8  01FC               	clrf	LCD_Write_Int@numPlaces
  6975  0FC9  01FD               	clrf	LCD_Write_Int@sign
  6976  0FCA  3180  2070  318F   	fcall	_LCD_Write_Int
  6977                           
  6978                           ;user.c: 45: LCD_Write_Char(0);
  6979  0FCD  3000               	movlw	0
  6980  0FCE  3188  20BC  318F   	fcall	_LCD_Write_Char
  6981                           
  6982                           ;user.c: 46: LCD_Write_Char('C');
  6983  0FD1  3043               	movlw	67
  6984  0FD2  3188  20BC  318F   	fcall	_LCD_Write_Char
  6985                           
  6986                           ;user.c: 47: LCD_Write_Char(' ');
  6987  0FD5  3020               	movlw	32
  6988  0FD6  3188  20BC  318F   	fcall	_LCD_Write_Char
  6989                           
  6990                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6991  0FD9  3072               	movlw	114
  6992  0FDA  0020               	movlb	0	; select bank0
  6993  0FDB  00B2               	movwf	??_tempSetpoint+1
  6994  0FDC  30A1               	movlw	161
  6995  0FDD  00B1               	movwf	??_tempSetpoint
  6996  0FDE                     u3387:	
  6997  0FDE  0BB1               	decfsz	??_tempSetpoint,f
  6998  0FDF  2FDE               	goto	u3387
  6999  0FE0  0BB2               	decfsz	??_tempSetpoint+1,f
  7000  0FE1  2FDE               	goto	u3387
  7001  0FE2  3200               	nop2
  7002                           
  7003                           ;user.c: 49: readButtons();
  7004  0FE3  318B  23AF  318F   	fcall	_readButtons
  7005  0FE6                     l2807:	
  7006  0FE6  3005               	movlw	5
  7007  0FE7  0020               	movlb	0	; select bank0
  7008  0FE8  026B               	subwf	_upCount,w
  7009  0FE9  1803               	skipnc
  7010  0FEA  2F9B               	goto	l2781
  7011                           
  7012                           ;user.c: 50: }
  7013                           ;user.c: 52: counter = 0;
  7014  0FEB  01B4               	clrf	tempSetpoint@counter
  7015                           
  7016                           ;user.c: 54: if(oldSetpoint!=setpoint)
  7017  0FEC  0869               	movf	_oldSetpoint,w
  7018  0FED  066F               	xorwf	_setpoint,w
  7019  0FEE  1903               	skipnz
  7020  0FEF  0008               	return
  7021                           
  7022                           ;user.c: 55: {
  7023                           ;user.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  7024  0FF0  3003               	movlw	3
  7025  0FF1  00B3               	movwf	??_tempSetpoint+2
  7026  0FF2  308A               	movlw	138
  7027  0FF3  00B2               	movwf	??_tempSetpoint+1
  7028  0FF4  3056               	movlw	86
  7029  0FF5  00B1               	movwf	??_tempSetpoint
  7030  0FF6                     u3397:	
  7031  0FF6  0BB1               	decfsz	??_tempSetpoint,f
  7032  0FF7  2FF6               	goto	u3397
  7033  0FF8  0BB2               	decfsz	??_tempSetpoint+1,f
  7034  0FF9  2FF6               	goto	u3397
  7035  0FFA  0BB3               	decfsz	??_tempSetpoint+2,f
  7036  0FFB  2FF6               	goto	u3397
  7037  0FFC  3200               	nop2
  7038                           
  7039                           ;user.c: 57: LCD_Clear();
  7040  0FFD  3197  2702         	fcall	_LCD_Clear
  7041  0FFF  0008               	return
  7042  1000                     __end_of_tempSetpoint:	
  7043                           
  7044                           	psect	text2
  7045  0BAF                     __ptext2:	
  7046 ;; *************** function _readButtons *****************
  7047 ;; Defined at:
  7048 ;;		line 62 in file "user.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;Total ram usage:        3 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    3
  7069 ;; This function calls:
  7070 ;;		_LCD_Clear
  7071 ;;		_LCD_Set_Cursor
  7072 ;;		_LCD_Write_Char
  7073 ;;		_LCD_Write_Int
  7074 ;;		_LCD_Write_String
  7075 ;; This function is called by:
  7076 ;;		_tempSetpoint
  7077 ;;		_main
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _readButtons
  7083  0BAF                     _readButtons:	
  7084                           
  7085                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7089  0BAF  0020               	movlb	0	; select bank0
  7090  0BB0  1D8C               	btfss	12,3	;volatile
  7091  0BB1  1A0C               	btfsc	12,4	;volatile
  7092  0BB2  2C0E               	goto	l2619
  7093                           
  7094                           ;user.c: 65: {
  7095                           ;user.c: 66: downCount = 0;
  7096  0BB3  01E8               	clrf	_downCount
  7097                           
  7098                           ;user.c: 67: upCount = 0;
  7099  0BB4  01EB               	clrf	_upCount
  7100                           
  7101                           ;user.c: 68: toggleCount+=1;
  7102  0BB5  3001               	movlw	1
  7103  0BB6  00AE               	movwf	??_readButtons
  7104  0BB7  082E               	movf	??_readButtons,w
  7105  0BB8  07EA               	addwf	_toggleCount,f
  7106                           
  7107                           ;user.c: 69: if(toggleCount >=6)
  7108  0BB9  3006               	movlw	6
  7109  0BBA  026A               	subwf	_toggleCount,w
  7110  0BBB  1C03               	skipc
  7111  0BBC  2C0E               	goto	l2619
  7112                           
  7113                           ;user.c: 70: {
  7114                           ;user.c: 71: x+=1;
  7115  0BBD  3001               	movlw	1
  7116  0BBE  00AE               	movwf	??_readButtons
  7117  0BBF  082E               	movf	??_readButtons,w
  7118  0BC0  07EC               	addwf	_x,f
  7119                           
  7120                           ;user.c: 72: if(x>4)
  7121  0BC1  3005               	movlw	5
  7122  0BC2  026C               	subwf	_x,w
  7123  0BC3  1803               	btfsc	3,0
  7124                           
  7125                           ;user.c: 73: {
  7126                           ;user.c: 74: x=0;
  7127  0BC4  01EC               	clrf	_x
  7128                           
  7129                           ;user.c: 75: }
  7130                           ;user.c: 76: setpoint = presets[x];
  7131  0BC5  086C               	movf	_x,w
  7132  0BC6  3EE5               	addlw	(low (_presets| 0))& (0+255)
  7133  0BC7  0086               	movwf	6
  7134  0BC8  0187               	clrf	7
  7135  0BC9  0801               	movf	1,w
  7136  0BCA  00AE               	movwf	??_readButtons
  7137  0BCB  082E               	movf	??_readButtons,w
  7138  0BCC  00EF               	movwf	_setpoint
  7139                           
  7140                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  7141  0BCD  01F3               	clrf	LCD_Set_Cursor@y
  7142  0BCE  3000               	movlw	0
  7143  0BCF  3189  21FF  318B   	fcall	_LCD_Set_Cursor
  7144  0BD2  301B               	movlw	low (STR_1| (0+32768))
  7145  0BD3  00F5               	movwf	LCD_Write_String@a
  7146  0BD4  3090               	movlw	high (STR_1| (0+32768))
  7147  0BD5  00F6               	movwf	LCD_Write_String@a+1
  7148  0BD6  3197  27E6  318B   	fcall	_LCD_Write_String
  7149                           
  7150                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  7151  0BD9  01F3               	clrf	LCD_Set_Cursor@y
  7152  0BDA  3001               	movlw	1
  7153  0BDB  3189  21FF  318B   	fcall	_LCD_Set_Cursor
  7154  0BDE  0020               	movlb	0	; select bank0
  7155  0BDF  086F               	movf	_setpoint,w
  7156  0BE0  00AE               	movwf	??_readButtons
  7157  0BE1  01AF               	clrf	??_readButtons+1
  7158  0BE2  082E               	movf	??_readButtons,w
  7159  0BE3  00F9               	movwf	LCD_Write_Int@value
  7160  0BE4  082F               	movf	??_readButtons+1,w
  7161  0BE5  00FA               	movwf	LCD_Write_Int@value+1
  7162  0BE6  3003               	movlw	3
  7163  0BE7  00B0               	movwf	??_readButtons+2
  7164  0BE8  0830               	movf	??_readButtons+2,w
  7165  0BE9  00FB               	movwf	LCD_Write_Int@fieldLength
  7166  0BEA  01FC               	clrf	LCD_Write_Int@numPlaces
  7167  0BEB  01FD               	clrf	LCD_Write_Int@sign
  7168  0BEC  3180  2070  318B   	fcall	_LCD_Write_Int
  7169                           
  7170                           ;user.c: 79: LCD_Write_Char(0);
  7171  0BEF  3000               	movlw	0
  7172  0BF0  3188  20BC  318B   	fcall	_LCD_Write_Char
  7173                           
  7174                           ;user.c: 80: LCD_Write_Char('C');
  7175  0BF3  3043               	movlw	67
  7176  0BF4  3188  20BC  318B   	fcall	_LCD_Write_Char
  7177                           
  7178                           ;user.c: 81: LCD_Write_Char(' ');
  7179  0BF7  3020               	movlw	32
  7180  0BF8  3188  20BC  318B   	fcall	_LCD_Write_Char
  7181                           
  7182                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  7183  0BFB  3002               	movlw	2
  7184  0BFC  0020               	movlb	0	; select bank0
  7185  0BFD  00B0               	movwf	??_readButtons+2
  7186  0BFE  30E7               	movlw	231
  7187  0BFF  00AF               	movwf	??_readButtons+1
  7188  0C00  3000               	movlw	0
  7189  0C01  00AE               	movwf	??_readButtons
  7190  0C02                     u3407:	
  7191  0C02  0BAE               	decfsz	??_readButtons,f
  7192  0C03  2C02               	goto	u3407
  7193  0C04  0BAF               	decfsz	??_readButtons+1,f
  7194  0C05  2C02               	goto	u3407
  7195  0C06  0BB0               	decfsz	??_readButtons+2,f
  7196  0C07  2C02               	goto	u3407
  7197  0C08  0000               	nop
  7198                           
  7199                           ;user.c: 83: toggleCount = 0;
  7200  0C09  0020               	movlb	0	; select bank0
  7201  0C0A  01EA               	clrf	_toggleCount
  7202                           
  7203                           ;user.c: 84: LCD_Clear();
  7204  0C0B  3197  2702  318B   	fcall	_LCD_Clear
  7205  0C0E                     l2619:	
  7206                           
  7207                           ;user.c: 85: }
  7208                           ;user.c: 86: }
  7209                           ;user.c: 88: if(RA3 == 0)
  7210  0C0E  0020               	movlb	0	; select bank0
  7211  0C0F  198C               	btfsc	12,3	;volatile
  7212  0C10  2C1E               	goto	l2627
  7213                           
  7214                           ;user.c: 89: {
  7215                           ;user.c: 90: downCount +=1;
  7216  0C11  3001               	movlw	1
  7217  0C12  00AE               	movwf	??_readButtons
  7218  0C13  082E               	movf	??_readButtons,w
  7219  0C14  07E8               	addwf	_downCount,f
  7220                           
  7221                           ;user.c: 91: if(downCount>5)
  7222  0C15  3006               	movlw	6
  7223  0C16  0268               	subwf	_downCount,w
  7224  0C17  1C03               	skipc
  7225  0C18  2C1F               	goto	l2629
  7226                           
  7227                           ;user.c: 92: {
  7228                           ;user.c: 93: downCount = 5;
  7229  0C19  3005               	movlw	5
  7230  0C1A  00AE               	movwf	??_readButtons
  7231  0C1B  082E               	movf	??_readButtons,w
  7232  0C1C  00E8               	movwf	_downCount
  7233                           
  7234                           ;user.c: 94: }
  7235                           ;user.c: 95: }
  7236  0C1D  2C1F               	goto	l2629
  7237  0C1E                     l2627:	
  7238                           
  7239                           ;user.c: 96: else
  7240                           ;user.c: 97: {
  7241                           ;user.c: 98: downCount = 0;
  7242  0C1E  01E8               	clrf	_downCount
  7243  0C1F                     l2629:	
  7244                           
  7245                           ;user.c: 99: }
  7246                           ;user.c: 101: if(RA4 == 0)
  7247  0C1F  1A0C               	btfsc	12,4	;volatile
  7248  0C20  2C2E               	goto	l2637
  7249                           
  7250                           ;user.c: 102: {
  7251                           ;user.c: 103: upCount +=1;
  7252  0C21  3001               	movlw	1
  7253  0C22  00AE               	movwf	??_readButtons
  7254  0C23  082E               	movf	??_readButtons,w
  7255  0C24  07EB               	addwf	_upCount,f
  7256                           
  7257                           ;user.c: 104: if(upCount>5)
  7258  0C25  3006               	movlw	6
  7259  0C26  026B               	subwf	_upCount,w
  7260  0C27  1C03               	skipc
  7261  0C28  0008               	return
  7262                           
  7263                           ;user.c: 105: {
  7264                           ;user.c: 106: upCount = 5;
  7265  0C29  3005               	movlw	5
  7266  0C2A  00AE               	movwf	??_readButtons
  7267  0C2B  082E               	movf	??_readButtons,w
  7268  0C2C  00EB               	movwf	_upCount
  7269                           
  7270                           ;user.c: 107: }
  7271                           ;user.c: 108: }
  7272  0C2D  0008               	return
  7273  0C2E                     l2637:	
  7274                           
  7275                           ;user.c: 109: else
  7276                           ;user.c: 110: {
  7277                           ;user.c: 111: upCount = 0;
  7278  0C2E  01EB               	clrf	_upCount
  7279  0C2F  0008               	return
  7280  0C30                     __end_of_readButtons:	
  7281                           
  7282                           	psect	text3
  7283  17E6                     __ptext3:	
  7284 ;; *************** function _LCD_Write_String *****************
  7285 ;; Defined at:
  7286 ;;		line 239 in file "lcd.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  a               2    5[COMMON] PTR const unsigned char 
  7289 ;;		 -> STR_4(6), STR_3(10), STR_2(10), STR_1(10), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  i               2    8[COMMON] int 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;Total ram usage:        5 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    2
  7308 ;; This function calls:
  7309 ;;		_LCD_Write_Char
  7310 ;; This function is called by:
  7311 ;;		_tempSetpoint
  7312 ;;		_readButtons
  7313 ;;		_main
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function _LCD_Write_String
  7319  17E6                     _LCD_Write_String:	
  7320                           
  7321                           ;lcd.c: 241: int i;
  7322                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7326  17E6  01F8               	clrf	LCD_Write_String@i
  7327  17E7  01F9               	clrf	LCD_Write_String@i+1
  7328  17E8                     l2231:	
  7329  17E8  0875               	movf	LCD_Write_String@a,w
  7330  17E9  0778               	addwf	LCD_Write_String@i,w
  7331  17EA  0084               	movwf	4
  7332  17EB  0876               	movf	LCD_Write_String@a+1,w
  7333  17EC  3D79               	addwfc	LCD_Write_String@i+1,w
  7334  17ED  0085               	movwf	5
  7335  17EE  0012               	moviw fsr0++
  7336  17EF  1903               	btfsc	3,2
  7337  17F0  0008               	return
  7338                           
  7339                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  7340  17F1  0875               	movf	LCD_Write_String@a,w
  7341  17F2  0778               	addwf	LCD_Write_String@i,w
  7342  17F3  0084               	movwf	4
  7343  17F4  0876               	movf	LCD_Write_String@a+1,w
  7344  17F5  3D79               	addwfc	LCD_Write_String@i+1,w
  7345  17F6  0085               	movwf	5
  7346  17F7  0800               	movf	0,w	;code access
  7347  17F8  3188  20BC  3197   	fcall	_LCD_Write_Char
  7348  17FB  3001               	movlw	1
  7349  17FC  07F8               	addwf	LCD_Write_String@i,f
  7350  17FD  3000               	movlw	0
  7351  17FE  3DF9               	addwfc	LCD_Write_String@i+1,f
  7352  17FF  2FE8               	goto	l2231
  7353  1800                     __end_of_LCD_Write_String:	
  7354                           
  7355                           	psect	text4
  7356  0070                     __ptext4:	
  7357 ;; *************** function _LCD_Write_Int *****************
  7358 ;; Defined at:
  7359 ;;		line 246 in file "lcd.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  value           2    9[COMMON] int 
  7362 ;;  fieldLength     1   11[COMMON] char 
  7363 ;;  numPlaces       1   12[COMMON] char 
  7364 ;;  sign            1   13[COMMON] char 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  str             5    5[BANK0 ] unsigned char [5]
  7367 ;;  i               2   12[BANK0 ] int 
  7368 ;;  j               2   10[BANK0 ] int 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7378 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;Total ram usage:       19 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    2
  7385 ;; This function calls:
  7386 ;;		_LCD_Write_Char
  7387 ;;		___awdiv
  7388 ;;		___awmod
  7389 ;; This function is called by:
  7390 ;;		_tempSetpoint
  7391 ;;		_readButtons
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _LCD_Write_Int
  7398  0070                     _LCD_Write_Int:	
  7399                           
  7400                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7401                           
  7402                           ;incstack = 0
  7403                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7404  0070  30A0               	movlw	low LCD_Write_Int@F13695
  7405  0071  0086               	movwf	6
  7406  0072  3000               	movlw	high LCD_Write_Int@F13695
  7407  0073  0087               	movwf	7
  7408  0074  3025               	movlw	low LCD_Write_Int@str
  7409  0075  0084               	movwf	4
  7410  0076  3000               	movlw	high LCD_Write_Int@str
  7411  0077  0085               	movwf	5
  7412  0078  3005               	movlw	5
  7413  0079  0020               	movlb	0	; select bank0
  7414  007A  00A0               	movwf	??_LCD_Write_Int
  7415  007B                     u2100:	
  7416  007B  0016               	moviw fsr1++
  7417  007C  001A               	movwi fsr0++
  7418  007D  0BA0               	decfsz	??_LCD_Write_Int,f
  7419  007E  287B               	goto	u2100
  7420                           
  7421                           ;lcd.c: 249: int i=4,j=0;
  7422  007F  3004               	movlw	4
  7423  0080  00AC               	movwf	LCD_Write_Int@i
  7424  0081  3000               	movlw	0
  7425  0082  00AD               	movwf	LCD_Write_Int@i+1
  7426  0083  01AA               	clrf	LCD_Write_Int@j
  7427  0084  01AB               	clrf	LCD_Write_Int@j+1
  7428                           
  7429                           ;lcd.c: 251: if(value<0)
  7430  0085  1FFA               	btfss	LCD_Write_Int@value+1,7
  7431  0086  2891               	goto	l2245
  7432                           
  7433                           ;lcd.c: 252: {
  7434                           ;lcd.c: 253: LCD_Write_Char('-');
  7435  0087  302D               	movlw	45
  7436  0088  3188  20BC  3180   	fcall	_LCD_Write_Char
  7437                           
  7438                           ;lcd.c: 254: value=value*-1;
  7439  008B  09F9               	comf	LCD_Write_Int@value,f
  7440  008C  09FA               	comf	LCD_Write_Int@value+1,f
  7441  008D  0AF9               	incf	LCD_Write_Int@value,f
  7442  008E  1903               	skipnz
  7443  008F  0AFA               	incf	LCD_Write_Int@value+1,f
  7444                           
  7445                           ;lcd.c: 255: }
  7446  0090  2898               	goto	l2255
  7447  0091                     l2245:	
  7448                           
  7449                           ;lcd.c: 257: else
  7450                           ;lcd.c: 258: {
  7451                           ;lcd.c: 259: if(sign == 1)
  7452  0091  037D               	decf	LCD_Write_Int@sign,w
  7453  0092  1D03               	btfss	3,2
  7454  0093  2898               	goto	l2255
  7455                           
  7456                           ;lcd.c: 260: {
  7457                           ;lcd.c: 261: LCD_Write_Char('+');
  7458  0094  302B               	movlw	43
  7459  0095  3188  20BC  3180   	fcall	_LCD_Write_Char
  7460  0098                     l2255:	
  7461                           ;lcd.c: 262: }
  7462                           ;lcd.c: 263: }
  7463                           ;lcd.c: 265: while(value)
  7464                           
  7465  0098  0879               	movf	LCD_Write_Int@value,w
  7466  0099  047A               	iorwf	LCD_Write_Int@value+1,w
  7467  009A  1903               	btfsc	3,2
  7468  009B  28C5               	goto	l2257
  7469                           
  7470                           ;lcd.c: 266: {
  7471                           ;lcd.c: 267: str[i]=value%10;
  7472  009C  300A               	movlw	10
  7473  009D  00F0               	movwf	___awmod@divisor
  7474  009E  3000               	movlw	0
  7475  009F  00F1               	movwf	___awmod@divisor+1
  7476  00A0  087A               	movf	LCD_Write_Int@value+1,w
  7477  00A1  00F3               	movwf	___awmod@dividend+1
  7478  00A2  0879               	movf	LCD_Write_Int@value,w
  7479  00A3  00F2               	movwf	___awmod@dividend
  7480  00A4  318A  223E  3180   	fcall	___awmod
  7481  00A7  0870               	movf	?___awmod,w
  7482  00A8  0020               	movlb	0	; select bank0
  7483  00A9  00A0               	movwf	??_LCD_Write_Int
  7484  00AA  082C               	movf	LCD_Write_Int@i,w
  7485  00AB  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7486  00AC  0086               	movwf	6
  7487  00AD  0187               	clrf	7
  7488  00AE  0820               	movf	??_LCD_Write_Int,w
  7489  00AF  0081               	movwf	1
  7490                           
  7491                           ;lcd.c: 268: value=value/10;
  7492  00B0  300A               	movlw	10
  7493  00B1  00F0               	movwf	___awdiv@divisor
  7494  00B2  3000               	movlw	0
  7495  00B3  00F1               	movwf	___awdiv@divisor+1
  7496  00B4  087A               	movf	LCD_Write_Int@value+1,w
  7497  00B5  00F3               	movwf	___awdiv@dividend+1
  7498  00B6  0879               	movf	LCD_Write_Int@value,w
  7499  00B7  00F2               	movwf	___awdiv@dividend
  7500  00B8  318A  2283  3180   	fcall	___awdiv
  7501  00BB  0871               	movf	?___awdiv+1,w
  7502  00BC  00FA               	movwf	LCD_Write_Int@value+1
  7503  00BD  0870               	movf	?___awdiv,w
  7504  00BE  00F9               	movwf	LCD_Write_Int@value
  7505                           
  7506                           ;lcd.c: 269: i--;
  7507  00BF  30FF               	movlw	255
  7508  00C0  0020               	movlb	0	; select bank0
  7509  00C1  07AC               	addwf	LCD_Write_Int@i,f
  7510  00C2  30FF               	movlw	255
  7511  00C3  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7512  00C4  2898               	goto	l2255
  7513  00C5                     l2257:	
  7514                           
  7515                           ;lcd.c: 270: }
  7516                           ;lcd.c: 271: if(fieldLength==-1)
  7517  00C5  0A7B               	incf	LCD_Write_Int@fieldLength,w
  7518  00C6  1903               	btfsc	3,2
  7519  00C7  28CE               	goto	l2263
  7520  00C8  28D7               	goto	l2265
  7521  00C9                     l2261:	
  7522                           ;lcd.c: 272: {
  7523                           ;lcd.c: 273: while(str[j]==0)
  7524                           
  7525                           
  7526                           ;lcd.c: 274: {
  7527                           ;lcd.c: 275: j++;
  7528  00C9  3001               	movlw	1
  7529  00CA  0020               	movlb	0	; select bank0
  7530  00CB  07AA               	addwf	LCD_Write_Int@j,f
  7531  00CC  3000               	movlw	0
  7532  00CD  3DAB               	addwfc	LCD_Write_Int@j+1,f
  7533  00CE                     l2263:	
  7534  00CE  0020               	movlb	0	; select bank0
  7535  00CF  082A               	movf	LCD_Write_Int@j,w
  7536  00D0  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7537  00D1  0086               	movwf	6
  7538  00D2  0187               	clrf	7
  7539  00D3  0801               	movf	1,w
  7540  00D4  1D03               	btfss	3,2
  7541  00D5  28E8               	goto	l2267
  7542  00D6  28C9               	goto	l2261
  7543  00D7                     l2265:	
  7544                           ;lcd.c: 276: }
  7545                           ;lcd.c: 277: }
  7546                           
  7547                           
  7548                           ;lcd.c: 278: else
  7549                           ;lcd.c: 279: {
  7550                           ;lcd.c: 280: j=5-fieldLength;
  7551  00D7  087B               	movf	LCD_Write_Int@fieldLength,w
  7552  00D8  0020               	movlb	0	; select bank0
  7553  00D9  00A0               	movwf	??_LCD_Write_Int
  7554  00DA  01A1               	clrf	??_LCD_Write_Int+1
  7555  00DB  1BA0               	btfsc	??_LCD_Write_Int,7
  7556  00DC  03A1               	decf	??_LCD_Write_Int+1,f
  7557  00DD  09A0               	comf	??_LCD_Write_Int,f
  7558  00DE  09A1               	comf	??_LCD_Write_Int+1,f
  7559  00DF  0AA0               	incf	??_LCD_Write_Int,f
  7560  00E0  1903               	skipnz
  7561  00E1  0AA1               	incf	??_LCD_Write_Int+1,f
  7562  00E2  0820               	movf	??_LCD_Write_Int,w
  7563  00E3  3E05               	addlw	5
  7564  00E4  00AA               	movwf	LCD_Write_Int@j
  7565  00E5  3000               	movlw	0
  7566  00E6  3D21               	addwfc	??_LCD_Write_Int+1,w
  7567  00E7  00AB               	movwf	LCD_Write_Int@j+1
  7568  00E8                     l2267:	
  7569                           
  7570                           ;lcd.c: 281: }
  7571                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7572  00E8  082B               	movf	LCD_Write_Int@j+1,w
  7573  00E9  00AD               	movwf	LCD_Write_Int@i+1
  7574  00EA  082A               	movf	LCD_Write_Int@j,w
  7575  00EB  00AC               	movwf	LCD_Write_Int@i
  7576  00EC                     l2273:	
  7577  00EC  087C               	movf	LCD_Write_Int@numPlaces,w
  7578  00ED  00A0               	movwf	??_LCD_Write_Int
  7579  00EE  01A1               	clrf	??_LCD_Write_Int+1
  7580  00EF  1BA0               	btfsc	??_LCD_Write_Int,7
  7581  00F0  03A1               	decf	??_LCD_Write_Int+1,f
  7582  00F1  09A0               	comf	??_LCD_Write_Int,f
  7583  00F2  09A1               	comf	??_LCD_Write_Int+1,f
  7584  00F3  0AA0               	incf	??_LCD_Write_Int,f
  7585  00F4  1903               	skipnz
  7586  00F5  0AA1               	incf	??_LCD_Write_Int+1,f
  7587  00F6  0820               	movf	??_LCD_Write_Int,w
  7588  00F7  3E05               	addlw	5
  7589  00F8  00A2               	movwf	??_LCD_Write_Int+2
  7590  00F9  3000               	movlw	0
  7591  00FA  3D21               	addwfc	??_LCD_Write_Int+1,w
  7592  00FB  00A3               	movwf	??_LCD_Write_Int+3
  7593  00FC  082D               	movf	LCD_Write_Int@i+1,w
  7594  00FD  3A80               	xorlw	128
  7595  00FE  00A4               	movwf	??_LCD_Write_Int+4
  7596  00FF  0823               	movf	??_LCD_Write_Int+3,w
  7597  0100  3A80               	xorlw	128
  7598  0101  0224               	subwf	??_LCD_Write_Int+4,w
  7599  0102  1D03               	skipz
  7600  0103  2906               	goto	u2165
  7601  0104  0822               	movf	??_LCD_Write_Int+2,w
  7602  0105  022C               	subwf	LCD_Write_Int@i,w
  7603  0106                     u2165:	
  7604  0106  1803               	btfsc	3,0
  7605  0107  2918               	goto	l2275
  7606                           
  7607                           ;lcd.c: 284: {
  7608                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7609  0108  0020               	movlb	0	; select bank0
  7610  0109  082C               	movf	LCD_Write_Int@i,w
  7611  010A  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7612  010B  0086               	movwf	6
  7613  010C  0187               	clrf	7
  7614  010D  0801               	movf	1,w
  7615  010E  3E30               	addlw	48
  7616  010F  3188  20BC  3180   	fcall	_LCD_Write_Char
  7617  0112  3001               	movlw	1
  7618  0113  0020               	movlb	0	; select bank0
  7619  0114  07AC               	addwf	LCD_Write_Int@i,f
  7620  0115  3000               	movlw	0
  7621  0116  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7622  0117  28EC               	goto	l2273
  7623  0118                     l2275:	
  7624                           
  7625                           ;lcd.c: 286: }
  7626                           ;lcd.c: 288: if(numPlaces == 1)
  7627  0118  037C               	decf	LCD_Write_Int@numPlaces,w
  7628  0119  1D03               	btfss	3,2
  7629  011A  2925               	goto	l2279
  7630                           
  7631                           ;lcd.c: 289: {
  7632                           ;lcd.c: 290: LCD_Write_Char(46);
  7633  011B  302E               	movlw	46
  7634  011C  3188  20BC  3180   	fcall	_LCD_Write_Char
  7635                           
  7636                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7637  011F  0020               	movlb	0	; select bank0
  7638  0120  0829               	movf	LCD_Write_Int@str+4,w
  7639  0121  3E30               	addlw	48
  7640  0122  3188  20BC  3180   	fcall	_LCD_Write_Char
  7641  0125                     l2279:	
  7642                           
  7643                           ;lcd.c: 292: }
  7644                           ;lcd.c: 294: if(numPlaces == 2)
  7645  0125  3002               	movlw	2
  7646  0126  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7647  0127  1D03               	btfss	3,2
  7648  0128  0008               	return
  7649                           
  7650                           ;lcd.c: 295: {
  7651                           ;lcd.c: 296: LCD_Write_Char(46);
  7652  0129  302E               	movlw	46
  7653  012A  3188  20BC  3180   	fcall	_LCD_Write_Char
  7654                           
  7655                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7656  012D  0020               	movlb	0	; select bank0
  7657  012E  0828               	movf	LCD_Write_Int@str+3,w
  7658  012F  3E30               	addlw	48
  7659  0130  3188  20BC  3180   	fcall	_LCD_Write_Char
  7660                           
  7661                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7662  0133  0020               	movlb	0	; select bank0
  7663  0134  0829               	movf	LCD_Write_Int@str+4,w
  7664  0135  3E30               	addlw	48
  7665  0136  3188  20BC         	fcall	_LCD_Write_Char
  7666  0138  0008               	return
  7667  0139                     __end_of_LCD_Write_Int:	
  7668                           
  7669                           	psect	text5
  7670  0A3E                     __ptext5:	
  7671 ;; *************** function ___awmod *****************
  7672 ;; Defined at:
  7673 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  divisor         2    0[COMMON] int 
  7676 ;;  dividend        2    2[COMMON] int 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  sign            1    6[COMMON] unsigned char 
  7679 ;;  counter         1    5[COMMON] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2    0[COMMON] int 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7692 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7693 ;;Total ram usage:        7 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_LCD_Write_Int
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function ___awmod
  7704  0A3E                     ___awmod:	
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7708  0A3E  01F6               	clrf	___awmod@sign
  7709  0A3F  1FF3               	btfss	___awmod@dividend+1,7
  7710  0A40  2A48               	goto	l2173
  7711  0A41  09F2               	comf	___awmod@dividend,f
  7712  0A42  09F3               	comf	___awmod@dividend+1,f
  7713  0A43  0AF2               	incf	___awmod@dividend,f
  7714  0A44  1903               	skipnz
  7715  0A45  0AF3               	incf	___awmod@dividend+1,f
  7716  0A46  01F6               	clrf	___awmod@sign
  7717  0A47  0AF6               	incf	___awmod@sign,f
  7718  0A48                     l2173:	
  7719  0A48  1FF1               	btfss	___awmod@divisor+1,7
  7720  0A49  2A4F               	goto	l2177
  7721  0A4A  09F0               	comf	___awmod@divisor,f
  7722  0A4B  09F1               	comf	___awmod@divisor+1,f
  7723  0A4C  0AF0               	incf	___awmod@divisor,f
  7724  0A4D  1903               	skipnz
  7725  0A4E  0AF1               	incf	___awmod@divisor+1,f
  7726  0A4F                     l2177:	
  7727  0A4F  0870               	movf	___awmod@divisor,w
  7728  0A50  0471               	iorwf	___awmod@divisor+1,w
  7729  0A51  1903               	btfsc	3,2
  7730  0A52  2A76               	goto	l2195
  7731  0A53  01F5               	clrf	___awmod@counter
  7732  0A54  0AF5               	incf	___awmod@counter,f
  7733  0A55                     l2185:	
  7734  0A55  1BF1               	btfsc	___awmod@divisor+1,7
  7735  0A56  2A61               	goto	l2187
  7736  0A57  3001               	movlw	1
  7737  0A58                     u1995:	
  7738  0A58  35F0               	lslf	___awmod@divisor,f
  7739  0A59  0DF1               	rlf	___awmod@divisor+1,f
  7740  0A5A  0B89               	decfsz	9,f
  7741  0A5B  2A58               	goto	u1995
  7742  0A5C  3001               	movlw	1
  7743  0A5D  00F4               	movwf	??___awmod
  7744  0A5E  0874               	movf	??___awmod,w
  7745  0A5F  07F5               	addwf	___awmod@counter,f
  7746  0A60  2A55               	goto	l2185
  7747  0A61                     l2187:	
  7748  0A61  0871               	movf	___awmod@divisor+1,w
  7749  0A62  0273               	subwf	___awmod@dividend+1,w
  7750  0A63  1D03               	skipz
  7751  0A64  2A67               	goto	u2015
  7752  0A65  0870               	movf	___awmod@divisor,w
  7753  0A66  0272               	subwf	___awmod@dividend,w
  7754  0A67                     u2015:	
  7755  0A67  1C03               	skipc
  7756  0A68  2A6D               	goto	l2191
  7757  0A69  0870               	movf	___awmod@divisor,w
  7758  0A6A  02F2               	subwf	___awmod@dividend,f
  7759  0A6B  0871               	movf	___awmod@divisor+1,w
  7760  0A6C  3BF3               	subwfb	___awmod@dividend+1,f
  7761  0A6D                     l2191:	
  7762  0A6D  3001               	movlw	1
  7763  0A6E                     u2025:	
  7764  0A6E  36F1               	lsrf	___awmod@divisor+1,f
  7765  0A6F  0CF0               	rrf	___awmod@divisor,f
  7766  0A70  0B89               	decfsz	9,f
  7767  0A71  2A6E               	goto	u2025
  7768  0A72  3001               	movlw	1
  7769  0A73  02F5               	subwf	___awmod@counter,f
  7770  0A74  1D03               	btfss	3,2
  7771  0A75  2A61               	goto	l2187
  7772  0A76                     l2195:	
  7773  0A76  0876               	movf	___awmod@sign,w
  7774  0A77  1903               	btfsc	3,2
  7775  0A78  2A7E               	goto	l2199
  7776  0A79  09F2               	comf	___awmod@dividend,f
  7777  0A7A  09F3               	comf	___awmod@dividend+1,f
  7778  0A7B  0AF2               	incf	___awmod@dividend,f
  7779  0A7C  1903               	skipnz
  7780  0A7D  0AF3               	incf	___awmod@dividend+1,f
  7781  0A7E                     l2199:	
  7782  0A7E  0873               	movf	___awmod@dividend+1,w
  7783  0A7F  00F1               	movwf	?___awmod+1
  7784  0A80  0872               	movf	___awmod@dividend,w
  7785  0A81  00F0               	movwf	?___awmod
  7786  0A82  0008               	return
  7787  0A83                     __end_of___awmod:	
  7788                           
  7789                           	psect	text6
  7790  0A83                     __ptext6:	
  7791 ;; *************** function ___awdiv *****************
  7792 ;; Defined at:
  7793 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  divisor         2    0[COMMON] int 
  7796 ;;  dividend        2    2[COMMON] int 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  quotient        2    7[COMMON] int 
  7799 ;;  sign            1    6[COMMON] unsigned char 
  7800 ;;  counter         1    5[COMMON] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  2    0[COMMON] int 
  7803 ;; Registers used:
  7804 ;;		wreg, status,2, status,0
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;Total ram usage:        9 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_LCD_Write_Int
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           
  7824                           ;psect for function ___awdiv
  7825  0A83                     ___awdiv:	
  7826                           
  7827                           ;incstack = 0
  7828                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7829  0A83  01F6               	clrf	___awdiv@sign
  7830  0A84  1FF1               	btfss	___awdiv@divisor+1,7
  7831  0A85  2A8D               	goto	l2129
  7832  0A86  09F0               	comf	___awdiv@divisor,f
  7833  0A87  09F1               	comf	___awdiv@divisor+1,f
  7834  0A88  0AF0               	incf	___awdiv@divisor,f
  7835  0A89  1903               	skipnz
  7836  0A8A  0AF1               	incf	___awdiv@divisor+1,f
  7837  0A8B  01F6               	clrf	___awdiv@sign
  7838  0A8C  0AF6               	incf	___awdiv@sign,f
  7839  0A8D                     l2129:	
  7840  0A8D  1FF3               	btfss	___awdiv@dividend+1,7
  7841  0A8E  2A98               	goto	l2135
  7842  0A8F  09F2               	comf	___awdiv@dividend,f
  7843  0A90  09F3               	comf	___awdiv@dividend+1,f
  7844  0A91  0AF2               	incf	___awdiv@dividend,f
  7845  0A92  1903               	skipnz
  7846  0A93  0AF3               	incf	___awdiv@dividend+1,f
  7847  0A94  3001               	movlw	1
  7848  0A95  00F4               	movwf	??___awdiv
  7849  0A96  0874               	movf	??___awdiv,w
  7850  0A97  06F6               	xorwf	___awdiv@sign,f
  7851  0A98                     l2135:	
  7852  0A98  01F7               	clrf	___awdiv@quotient
  7853  0A99  01F8               	clrf	___awdiv@quotient+1
  7854  0A9A  0870               	movf	___awdiv@divisor,w
  7855  0A9B  0471               	iorwf	___awdiv@divisor+1,w
  7856  0A9C  1903               	btfsc	3,2
  7857  0A9D  2AC7               	goto	l2157
  7858  0A9E  01F5               	clrf	___awdiv@counter
  7859  0A9F  0AF5               	incf	___awdiv@counter,f
  7860  0AA0                     l2145:	
  7861  0AA0  1BF1               	btfsc	___awdiv@divisor+1,7
  7862  0AA1  2AAC               	goto	l2147
  7863  0AA2  3001               	movlw	1
  7864  0AA3                     u1895:	
  7865  0AA3  35F0               	lslf	___awdiv@divisor,f
  7866  0AA4  0DF1               	rlf	___awdiv@divisor+1,f
  7867  0AA5  0B89               	decfsz	9,f
  7868  0AA6  2AA3               	goto	u1895
  7869  0AA7  3001               	movlw	1
  7870  0AA8  00F4               	movwf	??___awdiv
  7871  0AA9  0874               	movf	??___awdiv,w
  7872  0AAA  07F5               	addwf	___awdiv@counter,f
  7873  0AAB  2AA0               	goto	l2145
  7874  0AAC                     l2147:	
  7875  0AAC  3001               	movlw	1
  7876  0AAD                     u1915:	
  7877  0AAD  35F7               	lslf	___awdiv@quotient,f
  7878  0AAE  0DF8               	rlf	___awdiv@quotient+1,f
  7879  0AAF  0B89               	decfsz	9,f
  7880  0AB0  2AAD               	goto	u1915
  7881  0AB1  0871               	movf	___awdiv@divisor+1,w
  7882  0AB2  0273               	subwf	___awdiv@dividend+1,w
  7883  0AB3  1D03               	skipz
  7884  0AB4  2AB7               	goto	u1925
  7885  0AB5  0870               	movf	___awdiv@divisor,w
  7886  0AB6  0272               	subwf	___awdiv@dividend,w
  7887  0AB7                     u1925:	
  7888  0AB7  1C03               	skipc
  7889  0AB8  2ABE               	goto	l2153
  7890  0AB9  0870               	movf	___awdiv@divisor,w
  7891  0ABA  02F2               	subwf	___awdiv@dividend,f
  7892  0ABB  0871               	movf	___awdiv@divisor+1,w
  7893  0ABC  3BF3               	subwfb	___awdiv@dividend+1,f
  7894  0ABD  1477               	bsf	___awdiv@quotient,0
  7895  0ABE                     l2153:	
  7896  0ABE  3001               	movlw	1
  7897  0ABF                     u1935:	
  7898  0ABF  36F1               	lsrf	___awdiv@divisor+1,f
  7899  0AC0  0CF0               	rrf	___awdiv@divisor,f
  7900  0AC1  0B89               	decfsz	9,f
  7901  0AC2  2ABF               	goto	u1935
  7902  0AC3  3001               	movlw	1
  7903  0AC4  02F5               	subwf	___awdiv@counter,f
  7904  0AC5  1D03               	btfss	3,2
  7905  0AC6  2AAC               	goto	l2147
  7906  0AC7                     l2157:	
  7907  0AC7  0876               	movf	___awdiv@sign,w
  7908  0AC8  1903               	btfsc	3,2
  7909  0AC9  2ACF               	goto	l2161
  7910  0ACA  09F7               	comf	___awdiv@quotient,f
  7911  0ACB  09F8               	comf	___awdiv@quotient+1,f
  7912  0ACC  0AF7               	incf	___awdiv@quotient,f
  7913  0ACD  1903               	skipnz
  7914  0ACE  0AF8               	incf	___awdiv@quotient+1,f
  7915  0ACF                     l2161:	
  7916  0ACF  0878               	movf	___awdiv@quotient+1,w
  7917  0AD0  00F1               	movwf	?___awdiv+1
  7918  0AD1  0877               	movf	___awdiv@quotient,w
  7919  0AD2  00F0               	movwf	?___awdiv
  7920  0AD3  0008               	return
  7921  0AD4                     __end_of___awdiv:	
  7922                           
  7923                           	psect	text7
  7924  09FF                     __ptext7:	
  7925 ;; *************** function _LCD_Set_Cursor *****************
  7926 ;; Defined at:
  7927 ;;		line 82 in file "lcd.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  x               1    wreg     unsigned char 
  7930 ;;  y               1    3[COMMON] unsigned char 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  x               1    6[COMMON] unsigned char 
  7933 ;;  temp            1    9[COMMON] unsigned char 
  7934 ;;  w               1    8[COMMON] unsigned char 
  7935 ;;  z               1    7[COMMON] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, pclath, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7945 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;Total ram usage:        7 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    2
  7952 ;; This function calls:
  7953 ;;		_LCD_Cmd
  7954 ;; This function is called by:
  7955 ;;		_tempSetpoint
  7956 ;;		_readButtons
  7957 ;;		_main
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _LCD_Set_Cursor
  7963  09FF                     _LCD_Set_Cursor:	
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7967                           ;LCD_Set_Cursor@x stored from wreg
  7968  09FF  00F6               	movwf	LCD_Set_Cursor@x
  7969                           
  7970                           ;lcd.c: 86: char temp,z,w;
  7971                           ;lcd.c: 88: if(x == 0)
  7972  0A00  0876               	movf	LCD_Set_Cursor@x,w
  7973  0A01  1D03               	btfss	3,2
  7974  0A02  2A1F               	goto	l2215
  7975                           
  7976                           ;lcd.c: 89: {
  7977                           ;lcd.c: 90: temp = 0x80 + y;
  7978  0A03  0873               	movf	LCD_Set_Cursor@y,w
  7979  0A04  3E80               	addlw	128
  7980  0A05  00F4               	movwf	??_LCD_Set_Cursor
  7981  0A06  0874               	movf	??_LCD_Set_Cursor,w
  7982  0A07  00F9               	movwf	LCD_Set_Cursor@temp
  7983                           
  7984                           ;lcd.c: 91: z = temp>>4;
  7985  0A08  0879               	movf	LCD_Set_Cursor@temp,w
  7986  0A09  00F4               	movwf	??_LCD_Set_Cursor
  7987  0A0A  3004               	movlw	4
  7988  0A0B                     u2065:	
  7989  0A0B  36F4               	lsrf	??_LCD_Set_Cursor,f
  7990  0A0C  0B89               	decfsz	9,f
  7991  0A0D  2A0B               	goto	u2065
  7992  0A0E  0874               	movf	??_LCD_Set_Cursor,w
  7993  0A0F  00F5               	movwf	??_LCD_Set_Cursor+1
  7994  0A10  0875               	movf	??_LCD_Set_Cursor+1,w
  7995  0A11  00F7               	movwf	LCD_Set_Cursor@z
  7996                           
  7997                           ;lcd.c: 92: w = temp & 0x0F;
  7998  0A12  0879               	movf	LCD_Set_Cursor@temp,w
  7999  0A13  390F               	andlw	15
  8000  0A14  00F4               	movwf	??_LCD_Set_Cursor
  8001  0A15  0874               	movf	??_LCD_Set_Cursor,w
  8002  0A16  00F8               	movwf	LCD_Set_Cursor@w
  8003                           
  8004                           ;lcd.c: 93: LCD_Cmd(z);
  8005  0A17  0877               	movf	LCD_Set_Cursor@z,w
  8006  0A18  3197  275B  3189   	fcall	_LCD_Cmd
  8007                           
  8008                           ;lcd.c: 94: LCD_Cmd(w);
  8009  0A1B  0878               	movf	LCD_Set_Cursor@w,w
  8010  0A1C  3197  275B         	fcall	_LCD_Cmd
  8011                           
  8012                           ;lcd.c: 95: }
  8013  0A1E  0008               	return
  8014  0A1F                     l2215:	
  8015                           
  8016                           ;lcd.c: 97: else if(x == 1)
  8017  0A1F  0376               	decf	LCD_Set_Cursor@x,w
  8018  0A20  1D03               	btfss	3,2
  8019  0A21  0008               	return
  8020                           
  8021                           ;lcd.c: 98: {
  8022                           ;lcd.c: 99: temp = 0xC0 + y;
  8023  0A22  0873               	movf	LCD_Set_Cursor@y,w
  8024  0A23  3EC0               	addlw	192
  8025  0A24  00F4               	movwf	??_LCD_Set_Cursor
  8026  0A25  0874               	movf	??_LCD_Set_Cursor,w
  8027  0A26  00F9               	movwf	LCD_Set_Cursor@temp
  8028                           
  8029                           ;lcd.c: 100: z = temp>>4;
  8030  0A27  0879               	movf	LCD_Set_Cursor@temp,w
  8031  0A28  00F4               	movwf	??_LCD_Set_Cursor
  8032  0A29  3004               	movlw	4
  8033  0A2A                     u2085:	
  8034  0A2A  36F4               	lsrf	??_LCD_Set_Cursor,f
  8035  0A2B  0B89               	decfsz	9,f
  8036  0A2C  2A2A               	goto	u2085
  8037  0A2D  0874               	movf	??_LCD_Set_Cursor,w
  8038  0A2E  00F5               	movwf	??_LCD_Set_Cursor+1
  8039  0A2F  0875               	movf	??_LCD_Set_Cursor+1,w
  8040  0A30  00F7               	movwf	LCD_Set_Cursor@z
  8041                           
  8042                           ;lcd.c: 101: w = temp & 0x0F;
  8043  0A31  0879               	movf	LCD_Set_Cursor@temp,w
  8044  0A32  390F               	andlw	15
  8045  0A33  00F4               	movwf	??_LCD_Set_Cursor
  8046  0A34  0874               	movf	??_LCD_Set_Cursor,w
  8047  0A35  00F8               	movwf	LCD_Set_Cursor@w
  8048                           
  8049                           ;lcd.c: 102: LCD_Cmd(z);
  8050  0A36  0877               	movf	LCD_Set_Cursor@z,w
  8051  0A37  3197  275B  3189   	fcall	_LCD_Cmd
  8052                           
  8053                           ;lcd.c: 103: LCD_Cmd(w);
  8054  0A3A  0878               	movf	LCD_Set_Cursor@w,w
  8055  0A3B  3197  275B         	fcall	_LCD_Cmd
  8056  0A3D  0008               	return
  8057  0A3E                     __end_of_LCD_Set_Cursor:	
  8058                           
  8059                           	psect	text8
  8060  0DE2                     __ptext8:	
  8061 ;; *************** function _log *****************
  8062 ;; Defined at:
  8063 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  x               3   39[BANK0 ] void 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  exponent        2   43[BANK0 ] int 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  3   39[BANK0 ] int 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8077 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;Total ram usage:        6 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    3
  8084 ;; This function calls:
  8085 ;;		___awtoft
  8086 ;;		___ftadd
  8087 ;;		___ftge
  8088 ;;		___ftmul
  8089 ;;		_eval_poly
  8090 ;;		_frexp
  8091 ;; This function is called by:
  8092 ;;		_main
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _log
  8098  0DE2                     _log:	
  8099                           
  8100                           ;incstack = 0
  8101                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8102  0DE2  0020               	movlb	0	; select bank0
  8103  0DE3  0847               	movf	log@x,w
  8104  0DE4  00BD               	movwf	___ftge@ff1
  8105  0DE5  0848               	movf	log@x+1,w
  8106  0DE6  00BE               	movwf	___ftge@ff1+1
  8107  0DE7  0849               	movf	log@x+2,w
  8108  0DE8  00BF               	movwf	___ftge@ff1+2
  8109  0DE9  3000               	movlw	0
  8110  0DEA  00C0               	movwf	___ftge@ff2
  8111  0DEB  3000               	movlw	0
  8112  0DEC  00C1               	movwf	___ftge@ff2+1
  8113  0DED  3000               	movlw	0
  8114  0DEE  00C2               	movwf	___ftge@ff2+2
  8115  0DEF  3189  2187  318D   	fcall	___ftge
  8116  0DF2  1803               	btfsc	3,0
  8117  0DF3  2E01               	goto	l2845
  8118  0DF4  3021               	movlw	33
  8119  0DF5  0021               	movlb	1	; select bank1
  8120  0DF6  00C3               	movwf	_errno^(0+128)
  8121  0DF7  3000               	movlw	0
  8122  0DF8  00C4               	movwf	(_errno^(0+128)+1)
  8123  0DF9  3000               	movlw	0
  8124  0DFA  0020               	movlb	0	; select bank0
  8125  0DFB  00C7               	movwf	?_log
  8126  0DFC  3000               	movlw	0
  8127  0DFD  00C8               	movwf	?_log+1
  8128  0DFE  3000               	movlw	0
  8129  0DFF  00C9               	movwf	?_log+2
  8130  0E00  0008               	return
  8131  0E01                     l2845:	
  8132  0E01  0020               	movlb	0	; select bank0
  8133  0E02  0849               	movf	log@x+2,w
  8134  0E03  0448               	iorwf	log@x+1,w
  8135  0E04  0447               	iorwf	log@x,w
  8136  0E05  1D03               	skipz
  8137  0E06  2E14               	goto	l2851
  8138  0E07  3022               	movlw	34
  8139  0E08  0021               	movlb	1	; select bank1
  8140  0E09  00C3               	movwf	_errno^(0+128)
  8141  0E0A  3000               	movlw	0
  8142  0E0B  00C4               	movwf	(_errno^(0+128)+1)
  8143  0E0C  3000               	movlw	0
  8144  0E0D  0020               	movlb	0	; select bank0
  8145  0E0E  00C7               	movwf	?_log
  8146  0E0F  3000               	movlw	0
  8147  0E10  00C8               	movwf	?_log+1
  8148  0E11  3000               	movlw	0
  8149  0E12  00C9               	movwf	?_log+2
  8150  0E13  0008               	return
  8151  0E14                     l2851:	
  8152  0E14  3000               	movlw	0
  8153  0E15  00B0               	movwf	___ftadd@f1
  8154  0E16  3080               	movlw	128
  8155  0E17  00B1               	movwf	___ftadd@f1+1
  8156  0E18  30BF               	movlw	191
  8157  0E19  00B2               	movwf	___ftadd@f1+2
  8158  0E1A  3000               	movlw	0
  8159  0E1B  00A0               	movwf	___ftmul@f1
  8160  0E1C  3000               	movlw	0
  8161  0E1D  00A1               	movwf	___ftmul@f1+1
  8162  0E1E  3040               	movlw	64
  8163  0E1F  00A2               	movwf	___ftmul@f1+2
  8164  0E20  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8165  0E21  00CA               	movwf	??_log
  8166  0E22  084A               	movf	??_log,w
  8167  0E23  00F3               	movwf	frexp@eptr
  8168  0E24  0847               	movf	log@x,w
  8169  0E25  00F0               	movwf	frexp@value
  8170  0E26  0848               	movf	log@x+1,w
  8171  0E27  00F1               	movwf	frexp@value+1
  8172  0E28  0849               	movf	log@x+2,w
  8173  0E29  00F2               	movwf	frexp@value+2
  8174  0E2A  3189  214C  318D   	fcall	_frexp
  8175  0E2D  0870               	movf	?_frexp,w
  8176  0E2E  0020               	movlb	0	; select bank0
  8177  0E2F  00A3               	movwf	___ftmul@f2
  8178  0E30  0871               	movf	?_frexp+1,w
  8179  0E31  00A4               	movwf	___ftmul@f2+1
  8180  0E32  0872               	movf	?_frexp+2,w
  8181  0E33  00A5               	movwf	___ftmul@f2+2
  8182  0E34  318E  2692  318D   	fcall	___ftmul
  8183  0E37  0020               	movlb	0	; select bank0
  8184  0E38  0820               	movf	?___ftmul,w
  8185  0E39  00B3               	movwf	___ftadd@f2
  8186  0E3A  0821               	movf	?___ftmul+1,w
  8187  0E3B  00B4               	movwf	___ftadd@f2+1
  8188  0E3C  0822               	movf	?___ftmul+2,w
  8189  0E3D  00B5               	movwf	___ftadd@f2+2
  8190  0E3E  3181  2139  318D   	fcall	___ftadd
  8191  0E41  0020               	movlb	0	; select bank0
  8192  0E42  0830               	movf	?___ftadd,w
  8193  0E43  00C7               	movwf	log@x
  8194  0E44  0831               	movf	?___ftadd+1,w
  8195  0E45  00C8               	movwf	log@x+1
  8196  0E46  0832               	movf	?___ftadd+2,w
  8197  0E47  00C9               	movwf	log@x+2
  8198  0E48  30FF               	movlw	255
  8199  0E49  07CB               	addwf	log@exponent,f
  8200  0E4A  30FF               	movlw	255
  8201  0E4B  3DCC               	addwfc	log@exponent+1,f
  8202  0E4C  0847               	movf	log@x,w
  8203  0E4D  00BD               	movwf	eval_poly@x
  8204  0E4E  0848               	movf	log@x+1,w
  8205  0E4F  00BE               	movwf	eval_poly@x+1
  8206  0E50  0849               	movf	log@x+2,w
  8207  0E51  00BF               	movwf	eval_poly@x+2
  8208  0E52  3000               	movlw	low (log@coeff| (0+32768))
  8209  0E53  00C0               	movwf	eval_poly@d
  8210  0E54  3090               	movlw	high (log@coeff| (0+32768))
  8211  0E55  00C1               	movwf	eval_poly@d+1
  8212  0E56  3008               	movlw	8
  8213  0E57  00C2               	movwf	eval_poly@n
  8214  0E58  3000               	movlw	0
  8215  0E59  00C3               	movwf	eval_poly@n+1
  8216  0E5A  318A  22D4  318D   	fcall	_eval_poly
  8217  0E5D  0020               	movlb	0	; select bank0
  8218  0E5E  083D               	movf	?_eval_poly,w
  8219  0E5F  00C7               	movwf	log@x
  8220  0E60  083E               	movf	?_eval_poly+1,w
  8221  0E61  00C8               	movwf	log@x+1
  8222  0E62  083F               	movf	?_eval_poly+2,w
  8223  0E63  00C9               	movwf	log@x+2
  8224  0E64  0847               	movf	log@x,w
  8225  0E65  00B0               	movwf	___ftadd@f1
  8226  0E66  0848               	movf	log@x+1,w
  8227  0E67  00B1               	movwf	___ftadd@f1+1
  8228  0E68  0849               	movf	log@x+2,w
  8229  0E69  00B2               	movwf	___ftadd@f1+2
  8230  0E6A  3072               	movlw	114
  8231  0E6B  00A0               	movwf	___ftmul@f1
  8232  0E6C  3031               	movlw	49
  8233  0E6D  00A1               	movwf	___ftmul@f1+1
  8234  0E6E  303F               	movlw	63
  8235  0E6F  00A2               	movwf	___ftmul@f1+2
  8236  0E70  084C               	movf	log@exponent+1,w
  8237  0E71  00F9               	movwf	___awtoft@c+1
  8238  0E72  084B               	movf	log@exponent,w
  8239  0E73  00F8               	movwf	___awtoft@c
  8240  0E74  3188  204E  318D   	fcall	___awtoft
  8241  0E77  0878               	movf	?___awtoft,w
  8242  0E78  0020               	movlb	0	; select bank0
  8243  0E79  00A3               	movwf	___ftmul@f2
  8244  0E7A  0879               	movf	?___awtoft+1,w
  8245  0E7B  00A4               	movwf	___ftmul@f2+1
  8246  0E7C  087A               	movf	?___awtoft+2,w
  8247  0E7D  00A5               	movwf	___ftmul@f2+2
  8248  0E7E  318E  2692  318D   	fcall	___ftmul
  8249  0E81  0020               	movlb	0	; select bank0
  8250  0E82  0820               	movf	?___ftmul,w
  8251  0E83  00B3               	movwf	___ftadd@f2
  8252  0E84  0821               	movf	?___ftmul+1,w
  8253  0E85  00B4               	movwf	___ftadd@f2+1
  8254  0E86  0822               	movf	?___ftmul+2,w
  8255  0E87  00B5               	movwf	___ftadd@f2+2
  8256  0E88  3181  2139         	fcall	___ftadd
  8257  0E8A  0020               	movlb	0	; select bank0
  8258  0E8B  0830               	movf	?___ftadd,w
  8259  0E8C  00C7               	movwf	?_log
  8260  0E8D  0831               	movf	?___ftadd+1,w
  8261  0E8E  00C8               	movwf	?_log+1
  8262  0E8F  0832               	movf	?___ftadd+2,w
  8263  0E90  00C9               	movwf	?_log+2
  8264  0E91  0008               	return
  8265  0E92                     __end_of_log:	
  8266                           
  8267                           	psect	text9
  8268  094C                     __ptext9:	
  8269 ;; *************** function _frexp *****************
  8270 ;; Defined at:
  8271 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  value           3    0[COMMON] int 
  8274 ;;  eptr            1    3[COMMON] PTR int 
  8275 ;;		 -> log@exponent(2), 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  3    0[COMMON] PTR int 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:        6 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_log
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _frexp
  8302  094C                     _frexp:	
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8306  094C  0872               	movf	frexp@value+2,w
  8307  094D  0471               	iorwf	frexp@value+1,w
  8308  094E  0470               	iorwf	frexp@value,w
  8309  094F  1D03               	skipz
  8310  0950  295E               	goto	l2687
  8311  0951  0873               	movf	frexp@eptr,w
  8312  0952  0086               	movwf	6
  8313  0953  0187               	clrf	7
  8314  0954  3000               	movlw	0
  8315  0955  3FC0               	movwi [0]fsr1
  8316  0956  3FC1               	movwi [1]fsr1
  8317  0957  3000               	movlw	0
  8318  0958  00F0               	movwf	?_frexp
  8319  0959  3000               	movlw	0
  8320  095A  00F1               	movwf	?_frexp+1
  8321  095B  3000               	movlw	0
  8322  095C  00F2               	movwf	?_frexp+2
  8323  095D  0008               	return
  8324  095E                     l2687:	
  8325  095E  0872               	movf	frexp@value+2,w
  8326  095F  397F               	andlw	127
  8327  0960  00F4               	movwf	??_frexp
  8328  0961  01F5               	clrf	??_frexp+1
  8329  0962  35F4               	lslf	??_frexp,f
  8330  0963  0DF5               	rlf	??_frexp+1,f
  8331  0964  0873               	movf	frexp@eptr,w
  8332  0965  0086               	movwf	6
  8333  0966  0187               	clrf	7
  8334  0967  0874               	movf	??_frexp,w
  8335  0968  3FC0               	movwi [0]fsr1
  8336  0969  0875               	movf	??_frexp+1,w
  8337  096A  3FC1               	movwi [1]fsr1
  8338  096B  0D71               	rlf	frexp@value+1,w
  8339  096C  0D71               	rlf	frexp@value+1,w
  8340  096D  3901               	andlw	1
  8341  096E  00F4               	movwf	??_frexp
  8342  096F  01F5               	clrf	??_frexp+1
  8343  0970  0873               	movf	frexp@eptr,w
  8344  0971  0086               	movwf	6
  8345  0972  0187               	clrf	7
  8346  0973  0874               	movf	??_frexp,w
  8347  0974  0481               	iorwf	1,f
  8348  0975  3141               	addfsr 1,1
  8349  0976  0875               	movf	??_frexp+1,w
  8350  0977  0481               	iorwf	1,f
  8351  0978  0873               	movf	frexp@eptr,w
  8352  0979  0086               	movwf	6
  8353  097A  0187               	clrf	7
  8354  097B  3082               	movlw	130
  8355  097C  0781               	addwf	1,f
  8356  097D  3141               	addfsr 1,1
  8357  097E  30FF               	movlw	255
  8358  097F  3D81               	addwfc	1,f
  8359  0980  317F               	addfsr 1,-1
  8360  0981  0872               	movf	frexp@value+2,w
  8361  0982  3980               	andlw	-128
  8362  0983  383F               	iorlw	63
  8363  0984  00F2               	movwf	frexp@value+2
  8364  0985  13F1               	bcf	frexp@value+1,7
  8365  0986  0008               	return
  8366  0987                     __end_of_frexp:	
  8367                           
  8368                           	psect	text10
  8369  0AD4                     __ptext10:	
  8370 ;; *************** function _eval_poly *****************
  8371 ;; Defined at:
  8372 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  x               3   29[BANK0 ] PTR int 
  8375 ;;  d               2   32[BANK0 ] PTR const 
  8376 ;;		 -> log@coeff(27), 
  8377 ;;  n               2   34[BANK0 ] int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  res             3   36[BANK0 ] int 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  3   29[BANK0 ] int 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8389 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8390 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8392 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;Total ram usage:       10 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    2
  8396 ;; This function calls:
  8397 ;;		___ftadd
  8398 ;;		___ftmul
  8399 ;;		___wmul
  8400 ;; This function is called by:
  8401 ;;		_log
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           
  8406                           ;psect for function _eval_poly
  8407  0AD4                     _eval_poly:	
  8408                           
  8409                           ;incstack = 0
  8410                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8411  0AD4  0020               	movlb	0	; select bank0
  8412  0AD5  0843               	movf	eval_poly@n+1,w
  8413  0AD6  00F1               	movwf	___wmul@multiplier+1
  8414  0AD7  0842               	movf	eval_poly@n,w
  8415  0AD8  00F0               	movwf	___wmul@multiplier
  8416  0AD9  3003               	movlw	3
  8417  0ADA  00F2               	movwf	___wmul@multiplicand
  8418  0ADB  3000               	movlw	0
  8419  0ADC  00F3               	movwf	___wmul@multiplicand+1
  8420  0ADD  3188  2015  318A   	fcall	___wmul
  8421  0AE0  0020               	movlb	0	; select bank0
  8422  0AE1  0840               	movf	eval_poly@d,w
  8423  0AE2  0770               	addwf	?___wmul,w
  8424  0AE3  0084               	movwf	4
  8425  0AE4  0841               	movf	eval_poly@d+1,w
  8426  0AE5  3D71               	addwfc	?___wmul+1,w
  8427  0AE6  0085               	movwf	5
  8428  0AE7  3F00               	moviw [0]fsr0
  8429  0AE8  00C4               	movwf	eval_poly@res
  8430  0AE9  3F01               	moviw [1]fsr0
  8431  0AEA  00C5               	movwf	eval_poly@res+1
  8432  0AEB  3F02               	moviw [2]fsr0
  8433  0AEC                     L2:	
  8434  0AEC  00C6               	movwf	eval_poly@res+2
  8435  0AED  0842               	movf	eval_poly@n,w
  8436  0AEE  0443               	iorwf	eval_poly@n+1,w
  8437  0AEF  1903               	btfsc	3,2
  8438  0AF0  2B2D               	goto	l2705
  8439  0AF1  30FF               	movlw	255
  8440  0AF2  07C2               	addwf	eval_poly@n,f
  8441  0AF3  30FF               	movlw	255
  8442  0AF4  3DC3               	addwfc	eval_poly@n+1,f
  8443  0AF5  0843               	movf	eval_poly@n+1,w
  8444  0AF6  00F1               	movwf	___wmul@multiplier+1
  8445  0AF7  0842               	movf	eval_poly@n,w
  8446  0AF8  00F0               	movwf	___wmul@multiplier
  8447  0AF9  3003               	movlw	3
  8448  0AFA  00F2               	movwf	___wmul@multiplicand
  8449  0AFB  3000               	movlw	0
  8450  0AFC  00F3               	movwf	___wmul@multiplicand+1
  8451  0AFD  3188  2015  318A   	fcall	___wmul
  8452  0B00  0020               	movlb	0	; select bank0
  8453  0B01  0840               	movf	eval_poly@d,w
  8454  0B02  0770               	addwf	?___wmul,w
  8455  0B03  0084               	movwf	4
  8456  0B04  0841               	movf	eval_poly@d+1,w
  8457  0B05  3D71               	addwfc	?___wmul+1,w
  8458  0B06  0085               	movwf	5
  8459  0B07  3F00               	moviw [0]fsr0
  8460  0B08  00B0               	movwf	___ftadd@f1
  8461  0B09  3F01               	moviw [1]fsr0
  8462  0B0A  00B1               	movwf	___ftadd@f1+1
  8463  0B0B  3F02               	moviw [2]fsr0
  8464  0B0C  00B2               	movwf	___ftadd@f1+2
  8465  0B0D  0844               	movf	eval_poly@res,w
  8466  0B0E  00A0               	movwf	___ftmul@f1
  8467  0B0F  0845               	movf	eval_poly@res+1,w
  8468  0B10  00A1               	movwf	___ftmul@f1+1
  8469  0B11  0846               	movf	eval_poly@res+2,w
  8470  0B12  00A2               	movwf	___ftmul@f1+2
  8471  0B13  083D               	movf	eval_poly@x,w
  8472  0B14  00A3               	movwf	___ftmul@f2
  8473  0B15  083E               	movf	eval_poly@x+1,w
  8474  0B16  00A4               	movwf	___ftmul@f2+1
  8475  0B17  083F               	movf	eval_poly@x+2,w
  8476  0B18  00A5               	movwf	___ftmul@f2+2
  8477  0B19  318E  2692  318A   	fcall	___ftmul
  8478  0B1C  0020               	movlb	0	; select bank0
  8479  0B1D  0820               	movf	?___ftmul,w
  8480  0B1E  00B3               	movwf	___ftadd@f2
  8481  0B1F  0821               	movf	?___ftmul+1,w
  8482  0B20  00B4               	movwf	___ftadd@f2+1
  8483  0B21  0822               	movf	?___ftmul+2,w
  8484  0B22  00B5               	movwf	___ftadd@f2+2
  8485  0B23  3181  2139  318A   	fcall	___ftadd
  8486  0B26  0020               	movlb	0	; select bank0
  8487  0B27  0830               	movf	?___ftadd,w
  8488  0B28  00C4               	movwf	eval_poly@res
  8489  0B29  0831               	movf	?___ftadd+1,w
  8490  0B2A  00C5               	movwf	eval_poly@res+1
  8491  0B2B  0832               	movf	?___ftadd+2,w
  8492  0B2C  2AEC               	goto	L2
  8493  0B2D                     l2705:	
  8494  0B2D  0844               	movf	eval_poly@res,w
  8495  0B2E  00BD               	movwf	?_eval_poly
  8496  0B2F  0845               	movf	eval_poly@res+1,w
  8497  0B30  00BE               	movwf	?_eval_poly+1
  8498  0B31  0846               	movf	eval_poly@res+2,w
  8499  0B32  00BF               	movwf	?_eval_poly+2
  8500  0B33  0008               	return
  8501  0B34                     __end_of_eval_poly:	
  8502                           
  8503                           	psect	text11
  8504  0815                     __ptext11:	
  8505 ;; *************** function ___wmul *****************
  8506 ;; Defined at:
  8507 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  multiplier      2    0[COMMON] unsigned int 
  8510 ;;  multiplicand    2    2[COMMON] unsigned int 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  product         2    4[COMMON] unsigned int 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  2    0[COMMON] unsigned int 
  8515 ;; Registers used:
  8516 ;;		wreg, status,2, status,0
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;Total ram usage:        6 bytes
  8527 ;; Hardware stack levels used:    1
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_main
  8532 ;;		_eval_poly
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           
  8537                           ;psect for function ___wmul
  8538  0815                     ___wmul:	
  8539                           
  8540                           ;incstack = 0
  8541                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8542  0815  01F4               	clrf	___wmul@product
  8543  0816  01F5               	clrf	___wmul@product+1
  8544  0817                     l2285:	
  8545  0817  1C70               	btfss	___wmul@multiplier,0
  8546  0818  281D               	goto	l489
  8547  0819  0872               	movf	___wmul@multiplicand,w
  8548  081A  07F4               	addwf	___wmul@product,f
  8549  081B  0873               	movf	___wmul@multiplicand+1,w
  8550  081C  3DF5               	addwfc	___wmul@product+1,f
  8551  081D                     l489:	
  8552  081D  3001               	movlw	1
  8553  081E                     u2205:	
  8554  081E  35F2               	lslf	___wmul@multiplicand,f
  8555  081F  0DF3               	rlf	___wmul@multiplicand+1,f
  8556  0820  0B89               	decfsz	9,f
  8557  0821  281E               	goto	u2205
  8558  0822  3001               	movlw	1
  8559  0823                     u2215:	
  8560  0823  36F1               	lsrf	___wmul@multiplier+1,f
  8561  0824  0CF0               	rrf	___wmul@multiplier,f
  8562  0825  0B89               	decfsz	9,f
  8563  0826  2823               	goto	u2215
  8564  0827  0870               	movf	___wmul@multiplier,w
  8565  0828  0471               	iorwf	___wmul@multiplier+1,w
  8566  0829  1D03               	btfss	3,2
  8567  082A  2817               	goto	l2285
  8568  082B  0875               	movf	___wmul@product+1,w
  8569  082C  00F1               	movwf	?___wmul+1
  8570  082D  0874               	movf	___wmul@product,w
  8571  082E  00F0               	movwf	?___wmul
  8572  082F  0008               	return
  8573  0830                     __end_of___wmul:	
  8574                           
  8575                           	psect	text12
  8576  0802                     __ptext12:	
  8577 ;; *************** function ___lwtoft *****************
  8578 ;; Defined at:
  8579 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  c               2    8[COMMON] unsigned int 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  3    8[COMMON] float 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0, pclath, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8593 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;Total ram usage:        4 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    1
  8600 ;; This function calls:
  8601 ;;		___ftpack
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function ___lwtoft
  8609  0802                     ___lwtoft:	
  8610                           
  8611                           ;incstack = 0
  8612                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8613  0802  0878               	movf	___lwtoft@c,w
  8614  0803  00F0               	movwf	___ftpack@arg
  8615  0804  0879               	movf	___lwtoft@c+1,w
  8616  0805  00F1               	movwf	___ftpack@arg+1
  8617  0806  01F2               	clrf	___ftpack@arg+2
  8618  0807  308E               	movlw	142
  8619  0808  00FB               	movwf	??___lwtoft
  8620  0809  087B               	movf	??___lwtoft,w
  8621  080A  00F3               	movwf	___ftpack@exp
  8622  080B  01F4               	clrf	___ftpack@sign
  8623  080C  3180  200C         	fcall	___ftpack
  8624  080E  0870               	movf	?___ftpack,w
  8625  080F  00F8               	movwf	?___lwtoft
  8626  0810  0871               	movf	?___ftpack+1,w
  8627  0811  00F9               	movwf	?___lwtoft+1
  8628  0812  0872               	movf	?___ftpack+2,w
  8629  0813  00FA               	movwf	?___lwtoft+2
  8630  0814  0008               	return
  8631  0815                     __end_of___lwtoft:	
  8632                           
  8633                           	psect	text13
  8634  0918                     __ptext13:	
  8635 ;; *************** function ___lwdiv *****************
  8636 ;; Defined at:
  8637 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  divisor         2    6[COMMON] unsigned int 
  8640 ;;  dividend        2    8[COMMON] unsigned int 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  quotient        2   11[COMMON] unsigned int 
  8643 ;;  counter         1   13[COMMON] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  2    6[COMMON] unsigned int 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;Total ram usage:        8 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function ___lwdiv
  8668  0918                     ___lwdiv:	
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8672  0918  01FB               	clrf	___lwdiv@quotient
  8673  0919  01FC               	clrf	___lwdiv@quotient+1
  8674  091A  0876               	movf	___lwdiv@divisor,w
  8675  091B  0477               	iorwf	___lwdiv@divisor+1,w
  8676  091C  1903               	btfsc	3,2
  8677  091D  2947               	goto	l3019
  8678  091E  01FD               	clrf	___lwdiv@counter
  8679  091F  0AFD               	incf	___lwdiv@counter,f
  8680  0920                     l3007:	
  8681  0920  1BF7               	btfsc	___lwdiv@divisor+1,7
  8682  0921  292C               	goto	l3009
  8683  0922  3001               	movlw	1
  8684  0923                     u3205:	
  8685  0923  35F6               	lslf	___lwdiv@divisor,f
  8686  0924  0DF7               	rlf	___lwdiv@divisor+1,f
  8687  0925  0B89               	decfsz	9,f
  8688  0926  2923               	goto	u3205
  8689  0927  3001               	movlw	1
  8690  0928  00FA               	movwf	??___lwdiv
  8691  0929  087A               	movf	??___lwdiv,w
  8692  092A  07FD               	addwf	___lwdiv@counter,f
  8693  092B  2920               	goto	l3007
  8694  092C                     l3009:	
  8695  092C  3001               	movlw	1
  8696  092D                     u3225:	
  8697  092D  35FB               	lslf	___lwdiv@quotient,f
  8698  092E  0DFC               	rlf	___lwdiv@quotient+1,f
  8699  092F  0B89               	decfsz	9,f
  8700  0930  292D               	goto	u3225
  8701  0931  0877               	movf	___lwdiv@divisor+1,w
  8702  0932  0279               	subwf	___lwdiv@dividend+1,w
  8703  0933  1D03               	skipz
  8704  0934  2937               	goto	u3235
  8705  0935  0876               	movf	___lwdiv@divisor,w
  8706  0936  0278               	subwf	___lwdiv@dividend,w
  8707  0937                     u3235:	
  8708  0937  1C03               	skipc
  8709  0938  293E               	goto	l3015
  8710  0939  0876               	movf	___lwdiv@divisor,w
  8711  093A  02F8               	subwf	___lwdiv@dividend,f
  8712  093B  0877               	movf	___lwdiv@divisor+1,w
  8713  093C  3BF9               	subwfb	___lwdiv@dividend+1,f
  8714  093D  147B               	bsf	___lwdiv@quotient,0
  8715  093E                     l3015:	
  8716  093E  3001               	movlw	1
  8717  093F                     u3245:	
  8718  093F  36F7               	lsrf	___lwdiv@divisor+1,f
  8719  0940  0CF6               	rrf	___lwdiv@divisor,f
  8720  0941  0B89               	decfsz	9,f
  8721  0942  293F               	goto	u3245
  8722  0943  3001               	movlw	1
  8723  0944  02FD               	subwf	___lwdiv@counter,f
  8724  0945  1D03               	btfss	3,2
  8725  0946  292C               	goto	l3009
  8726  0947                     l3019:	
  8727  0947  087C               	movf	___lwdiv@quotient+1,w
  8728  0948  00F7               	movwf	?___lwdiv+1
  8729  0949  087B               	movf	___lwdiv@quotient,w
  8730  094A  00F6               	movwf	?___lwdiv
  8731  094B  0008               	return
  8732  094C                     __end_of___lwdiv:	
  8733                           
  8734                           	psect	text14
  8735  17CC                     __ptext14:	
  8736 ;; *************** function ___lbtoft *****************
  8737 ;; Defined at:
  8738 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  c               1    wreg     unsigned char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  c               1   11[COMMON] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  3    8[COMMON] float 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8752 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;Total ram usage:        8 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    1
  8759 ;; This function calls:
  8760 ;;		___ftpack
  8761 ;; This function is called by:
  8762 ;;		_main
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           
  8767                           ;psect for function ___lbtoft
  8768  17CC                     ___lbtoft:	
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8772                           ;___lbtoft@c stored from wreg
  8773  17CC  00FB               	movwf	___lbtoft@c
  8774  17CD  087B               	movf	___lbtoft@c,w
  8775  17CE  0020               	movlb	0	; select bank0
  8776  17CF  00A0               	movwf	??___lbtoft
  8777  17D0  01A1               	clrf	??___lbtoft+1
  8778  17D1  01A2               	clrf	??___lbtoft+2
  8779  17D2  0820               	movf	??___lbtoft,w
  8780  17D3  00F0               	movwf	___ftpack@arg
  8781  17D4  0821               	movf	??___lbtoft+1,w
  8782  17D5  00F1               	movwf	___ftpack@arg+1
  8783  17D6  0822               	movf	??___lbtoft+2,w
  8784  17D7  00F2               	movwf	___ftpack@arg+2
  8785  17D8  308E               	movlw	142
  8786  17D9  00A3               	movwf	??___lbtoft+3
  8787  17DA  0823               	movf	??___lbtoft+3,w
  8788  17DB  00F3               	movwf	___ftpack@exp
  8789  17DC  01F4               	clrf	___ftpack@sign
  8790  17DD  3180  200C         	fcall	___ftpack
  8791  17DF  0870               	movf	?___ftpack,w
  8792  17E0  00F8               	movwf	?___lbtoft
  8793  17E1  0871               	movf	?___ftpack+1,w
  8794  17E2  00F9               	movwf	?___lbtoft+1
  8795  17E3  0872               	movf	?___ftpack+2,w
  8796  17E4  00FA               	movwf	?___lbtoft+2
  8797  17E5  0008               	return
  8798  17E6                     __end_of___lbtoft:	
  8799                           
  8800                           	psect	text15
  8801  0CB2                     __ptext15:	
  8802 ;; *************** function ___fttol *****************
  8803 ;; Defined at:
  8804 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  f1              3   46[BANK0 ] float 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  lval            4   55[BANK0 ] unsigned long 
  8809 ;;  exp1            1   59[BANK0 ] unsigned char 
  8810 ;;  sign1           1   54[BANK0 ] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  4   46[BANK0 ] long 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8820 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;Total ram usage:       14 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_main
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           
  8834                           ;psect for function ___fttol
  8835  0CB2                     ___fttol:	
  8836                           
  8837                           ;incstack = 0
  8838                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8839  0CB2  0020               	movlb	0	; select bank0
  8840  0CB3  084E               	movf	___fttol@f1,w
  8841  0CB4  00D2               	movwf	??___fttol
  8842  0CB5  084F               	movf	___fttol@f1+1,w
  8843  0CB6  00D3               	movwf	??___fttol+1
  8844  0CB7  0850               	movf	___fttol@f1+2,w
  8845  0CB8  00D4               	movwf	??___fttol+2
  8846  0CB9  1003               	clrc
  8847  0CBA  0D53               	rlf	??___fttol+1,w
  8848  0CBB  0D54               	rlf	??___fttol+2,w
  8849  0CBC  00D5               	movwf	??___fttol+3
  8850  0CBD  0855               	movf	??___fttol+3,w
  8851  0CBE  00DB               	movwf	___fttol@exp1
  8852  0CBF  085B               	movf	___fttol@exp1,w
  8853  0CC0  1D03               	btfss	3,2
  8854  0CC1  2CCB               	goto	l2957
  8855  0CC2  3000               	movlw	0
  8856  0CC3  00D1               	movwf	?___fttol+3
  8857  0CC4  3000               	movlw	0
  8858  0CC5  00D0               	movwf	?___fttol+2
  8859  0CC6  3000               	movlw	0
  8860  0CC7  00CF               	movwf	?___fttol+1
  8861  0CC8  3000               	movlw	0
  8862  0CC9  00CE               	movwf	?___fttol
  8863  0CCA  0008               	return
  8864  0CCB                     l2957:	
  8865  0CCB  084E               	movf	___fttol@f1,w
  8866  0CCC  00D2               	movwf	??___fttol
  8867  0CCD  084F               	movf	___fttol@f1+1,w
  8868  0CCE  00D3               	movwf	??___fttol+1
  8869  0CCF  0850               	movf	___fttol@f1+2,w
  8870  0CD0  00D4               	movwf	??___fttol+2
  8871  0CD1  3017               	movlw	23
  8872  0CD2                     u3105:	
  8873  0CD2  36D4               	lsrf	??___fttol+2,f
  8874  0CD3  0CD3               	rrf	??___fttol+1,f
  8875  0CD4  0CD2               	rrf	??___fttol,f
  8876  0CD5  0B89               	decfsz	9,f
  8877  0CD6  2CD2               	goto	u3105
  8878  0CD7  0852               	movf	??___fttol,w
  8879  0CD8  00D5               	movwf	??___fttol+3
  8880  0CD9  0855               	movf	??___fttol+3,w
  8881  0CDA  00D6               	movwf	___fttol@sign1
  8882  0CDB  17CF               	bsf	___fttol@f1+1,7
  8883  0CDC  30FF               	movlw	255
  8884  0CDD  05CE               	andwf	___fttol@f1,f
  8885  0CDE  30FF               	movlw	255
  8886  0CDF  05CF               	andwf	___fttol@f1+1,f
  8887  0CE0  3000               	movlw	0
  8888  0CE1  05D0               	andwf	___fttol@f1+2,f
  8889  0CE2  084E               	movf	___fttol@f1,w
  8890  0CE3  00D7               	movwf	___fttol@lval
  8891  0CE4  084F               	movf	___fttol@f1+1,w
  8892  0CE5  00D8               	movwf	___fttol@lval+1
  8893  0CE6  0850               	movf	___fttol@f1+2,w
  8894  0CE7  00D9               	movwf	___fttol@lval+2
  8895  0CE8  01DA               	clrf	___fttol@lval+3
  8896  0CE9  308E               	movlw	142
  8897  0CEA  02DB               	subwf	___fttol@exp1,f
  8898  0CEB  1FDB               	btfss	___fttol@exp1,7
  8899  0CEC  2D09               	goto	l2977
  8900  0CED  085B               	movf	___fttol@exp1,w
  8901  0CEE  3A80               	xorlw	128
  8902  0CEF  3E8F               	addlw	143
  8903  0CF0  1803               	skipnc
  8904  0CF1  2CFB               	goto	l2975
  8905  0CF2  3000               	movlw	0
  8906  0CF3  00D1               	movwf	?___fttol+3
  8907  0CF4  3000               	movlw	0
  8908  0CF5  00D0               	movwf	?___fttol+2
  8909  0CF6  3000               	movlw	0
  8910  0CF7  00CF               	movwf	?___fttol+1
  8911  0CF8  3000               	movlw	0
  8912  0CF9  00CE               	movwf	?___fttol
  8913  0CFA  0008               	return
  8914  0CFB                     l2975:	
  8915  0CFB  3001               	movlw	1
  8916  0CFC                     u3135:	
  8917  0CFC  36DA               	lsrf	___fttol@lval+3,f
  8918  0CFD  0CD9               	rrf	___fttol@lval+2,f
  8919  0CFE  0CD8               	rrf	___fttol@lval+1,f
  8920  0CFF  0CD7               	rrf	___fttol@lval,f
  8921  0D00  0B89               	decfsz	9,f
  8922  0D01  2CFC               	goto	u3135
  8923  0D02  3001               	movlw	1
  8924  0D03  00D2               	movwf	??___fttol
  8925  0D04  0852               	movf	??___fttol,w
  8926  0D05  07DB               	addwf	___fttol@exp1,f
  8927  0D06  1903               	btfsc	3,2
  8928  0D07  2D22               	goto	l2985
  8929  0D08  2CFB               	goto	l2975
  8930  0D09                     l2977:	
  8931  0D09  3018               	movlw	24
  8932  0D0A  025B               	subwf	___fttol@exp1,w
  8933  0D0B  1C03               	skipc
  8934  0D0C  2D1F               	goto	l741
  8935  0D0D  3000               	movlw	0
  8936  0D0E  00D1               	movwf	?___fttol+3
  8937  0D0F  3000               	movlw	0
  8938  0D10  00D0               	movwf	?___fttol+2
  8939  0D11  3000               	movlw	0
  8940  0D12  00CF               	movwf	?___fttol+1
  8941  0D13  3000               	movlw	0
  8942  0D14  00CE               	movwf	?___fttol
  8943  0D15  0008               	return
  8944  0D16                     l2983:	
  8945  0D16  3001               	movlw	1
  8946  0D17                     u3165:	
  8947  0D17  35D7               	lslf	___fttol@lval,f
  8948  0D18  0DD8               	rlf	___fttol@lval+1,f
  8949  0D19  0DD9               	rlf	___fttol@lval+2,f
  8950  0D1A  0DDA               	rlf	___fttol@lval+3,f
  8951  0D1B  0B89               	decfsz	9,f
  8952  0D1C  2D17               	goto	u3165
  8953  0D1D  3001               	movlw	1
  8954  0D1E  02DB               	subwf	___fttol@exp1,f
  8955  0D1F                     l741:	
  8956  0D1F  085B               	movf	___fttol@exp1,w
  8957  0D20  1D03               	btfss	3,2
  8958  0D21  2D16               	goto	l2983
  8959  0D22                     l2985:	
  8960  0D22  0856               	movf	___fttol@sign1,w
  8961  0D23  1903               	btfsc	3,2
  8962  0D24  2D30               	goto	l2989
  8963  0D25  09D7               	comf	___fttol@lval,f
  8964  0D26  09D8               	comf	___fttol@lval+1,f
  8965  0D27  09D9               	comf	___fttol@lval+2,f
  8966  0D28  09DA               	comf	___fttol@lval+3,f
  8967  0D29  0AD7               	incf	___fttol@lval,f
  8968  0D2A  1903               	skipnz
  8969  0D2B  0AD8               	incf	___fttol@lval+1,f
  8970  0D2C  1903               	skipnz
  8971  0D2D  0AD9               	incf	___fttol@lval+2,f
  8972  0D2E  1903               	skipnz
  8973  0D2F  0ADA               	incf	___fttol@lval+3,f
  8974  0D30                     l2989:	
  8975  0D30  085A               	movf	___fttol@lval+3,w
  8976  0D31  00D1               	movwf	?___fttol+3
  8977  0D32  0859               	movf	___fttol@lval+2,w
  8978  0D33  00D0               	movwf	?___fttol+2
  8979  0D34  0858               	movf	___fttol@lval+1,w
  8980  0D35  00CF               	movwf	?___fttol+1
  8981  0D36  0857               	movf	___fttol@lval,w
  8982  0D37  00CE               	movwf	?___fttol
  8983  0D38  0008               	return
  8984  0D39                     __end_of___fttol:	
  8985                           
  8986                           	psect	text16
  8987  0830                     __ptext16:	
  8988 ;; *************** function ___ftsub *****************
  8989 ;; Defined at:
  8990 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  f2              3   29[BANK0 ] float 
  8993 ;;  f1              3   32[BANK0 ] float 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  3   29[BANK0 ] float 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9005 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;Total ram usage:        6 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    2
  9012 ;; This function calls:
  9013 ;;		___ftadd
  9014 ;; This function is called by:
  9015 ;;		_main
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function ___ftsub
  9021  0830                     ___ftsub:	
  9022                           
  9023                           ;incstack = 0
  9024                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9025  0830  0020               	movlb	0	; select bank0
  9026  0831  083F               	movf	___ftsub@f2+2,w
  9027  0832  043E               	iorwf	___ftsub@f2+1,w
  9028  0833  043D               	iorwf	___ftsub@f2,w
  9029  0834  1903               	skipnz
  9030  0835  2838               	goto	l2947
  9031  0836  3080               	movlw	128
  9032  0837  06BF               	xorwf	___ftsub@f2+2,f
  9033  0838                     l2947:	
  9034  0838  0840               	movf	___ftsub@f1,w
  9035  0839  00B0               	movwf	___ftadd@f1
  9036  083A  0841               	movf	___ftsub@f1+1,w
  9037  083B  00B1               	movwf	___ftadd@f1+1
  9038  083C  0842               	movf	___ftsub@f1+2,w
  9039  083D  00B2               	movwf	___ftadd@f1+2
  9040  083E  083D               	movf	___ftsub@f2,w
  9041  083F  00B3               	movwf	___ftadd@f2
  9042  0840  083E               	movf	___ftsub@f2+1,w
  9043  0841  00B4               	movwf	___ftadd@f2+1
  9044  0842  083F               	movf	___ftsub@f2+2,w
  9045  0843  00B5               	movwf	___ftadd@f2+2
  9046  0844  3181  2139         	fcall	___ftadd
  9047  0846  0020               	movlb	0	; select bank0
  9048  0847  0830               	movf	?___ftadd,w
  9049  0848  00BD               	movwf	?___ftsub
  9050  0849  0831               	movf	?___ftadd+1,w
  9051  084A  00BE               	movwf	?___ftsub+1
  9052  084B  0832               	movf	?___ftadd+2,w
  9053  084C  00BF               	movwf	?___ftsub+2
  9054  084D  0008               	return
  9055  084E                     __end_of___ftsub:	
  9056                           
  9057                           	psect	text17
  9058  0D39                     __ptext17:	
  9059 ;; *************** function ___ftdiv *****************
  9060 ;; Defined at:
  9061 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  f2              3    0[BANK0 ] float 
  9064 ;;  f1              3    3[BANK0 ] float 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  f3              3   11[BANK0 ] float 
  9067 ;;  sign            1   15[BANK0 ] unsigned char 
  9068 ;;  exp             1   14[BANK0 ] unsigned char 
  9069 ;;  cntr            1   10[BANK0 ] unsigned char 
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  3    0[BANK0 ] float 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0, pclath, cstack
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9079 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;Total ram usage:       16 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; Hardware stack levels required when called:    1
  9086 ;; This function calls:
  9087 ;;		___ftpack
  9088 ;; This function is called by:
  9089 ;;		_main
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function ___ftdiv
  9095  0D39                     ___ftdiv:	
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9099  0D39  0020               	movlb	0	; select bank0
  9100  0D3A  0823               	movf	___ftdiv@f1,w
  9101  0D3B  00A6               	movwf	??___ftdiv
  9102  0D3C  0824               	movf	___ftdiv@f1+1,w
  9103  0D3D  00A7               	movwf	??___ftdiv+1
  9104  0D3E  0825               	movf	___ftdiv@f1+2,w
  9105  0D3F  00A8               	movwf	??___ftdiv+2
  9106  0D40  1003               	clrc
  9107  0D41  0D27               	rlf	??___ftdiv+1,w
  9108  0D42  0D28               	rlf	??___ftdiv+2,w
  9109  0D43  00A9               	movwf	??___ftdiv+3
  9110  0D44  0829               	movf	??___ftdiv+3,w
  9111  0D45  00AE               	movwf	___ftdiv@exp
  9112  0D46  082E               	movf	___ftdiv@exp,w
  9113  0D47  1D03               	btfss	3,2
  9114  0D48  2D50               	goto	l2907
  9115  0D49  3000               	movlw	0
  9116  0D4A  00A0               	movwf	?___ftdiv
  9117  0D4B  3000               	movlw	0
  9118  0D4C  00A1               	movwf	?___ftdiv+1
  9119  0D4D  3000               	movlw	0
  9120  0D4E  00A2               	movwf	?___ftdiv+2
  9121  0D4F  0008               	return
  9122  0D50                     l2907:	
  9123  0D50  0820               	movf	___ftdiv@f2,w
  9124  0D51  00A6               	movwf	??___ftdiv
  9125  0D52  0821               	movf	___ftdiv@f2+1,w
  9126  0D53  00A7               	movwf	??___ftdiv+1
  9127  0D54  0822               	movf	___ftdiv@f2+2,w
  9128  0D55  00A8               	movwf	??___ftdiv+2
  9129  0D56  1003               	clrc
  9130  0D57  0D27               	rlf	??___ftdiv+1,w
  9131  0D58  0D28               	rlf	??___ftdiv+2,w
  9132  0D59  00A9               	movwf	??___ftdiv+3
  9133  0D5A  0829               	movf	??___ftdiv+3,w
  9134  0D5B  00AF               	movwf	___ftdiv@sign
  9135  0D5C  082F               	movf	___ftdiv@sign,w
  9136  0D5D  1D03               	btfss	3,2
  9137  0D5E  2D66               	goto	l2913
  9138  0D5F  3000               	movlw	0
  9139  0D60  00A0               	movwf	?___ftdiv
  9140  0D61  3000               	movlw	0
  9141  0D62  00A1               	movwf	?___ftdiv+1
  9142  0D63  3000               	movlw	0
  9143  0D64  00A2               	movwf	?___ftdiv+2
  9144  0D65  0008               	return
  9145  0D66                     l2913:	
  9146  0D66  3000               	movlw	0
  9147  0D67  00AB               	movwf	___ftdiv@f3
  9148  0D68  3000               	movlw	0
  9149  0D69  00AC               	movwf	___ftdiv@f3+1
  9150  0D6A  3000               	movlw	0
  9151  0D6B  00AD               	movwf	___ftdiv@f3+2
  9152  0D6C  3089               	movlw	137
  9153  0D6D  072F               	addwf	___ftdiv@sign,w
  9154  0D6E  00A6               	movwf	??___ftdiv
  9155  0D6F  0826               	movf	??___ftdiv,w
  9156  0D70  02AE               	subwf	___ftdiv@exp,f
  9157  0D71  0823               	movf	___ftdiv@f1,w
  9158  0D72  00A6               	movwf	??___ftdiv
  9159  0D73  0824               	movf	___ftdiv@f1+1,w
  9160  0D74  00A7               	movwf	??___ftdiv+1
  9161  0D75  0825               	movf	___ftdiv@f1+2,w
  9162  0D76  00A8               	movwf	??___ftdiv+2
  9163  0D77  3010               	movlw	16
  9164  0D78                     u3025:	
  9165  0D78  36A8               	lsrf	??___ftdiv+2,f
  9166  0D79  0CA7               	rrf	??___ftdiv+1,f
  9167  0D7A  0CA6               	rrf	??___ftdiv,f
  9168  0D7B  0B89               	decfsz	9,f
  9169  0D7C  2D78               	goto	u3025
  9170  0D7D  0826               	movf	??___ftdiv,w
  9171  0D7E  00A9               	movwf	??___ftdiv+3
  9172  0D7F  0829               	movf	??___ftdiv+3,w
  9173  0D80  00AF               	movwf	___ftdiv@sign
  9174  0D81  0820               	movf	___ftdiv@f2,w
  9175  0D82  00A6               	movwf	??___ftdiv
  9176  0D83  0821               	movf	___ftdiv@f2+1,w
  9177  0D84  00A7               	movwf	??___ftdiv+1
  9178  0D85  0822               	movf	___ftdiv@f2+2,w
  9179  0D86  00A8               	movwf	??___ftdiv+2
  9180  0D87  3010               	movlw	16
  9181  0D88                     u3035:	
  9182  0D88  36A8               	lsrf	??___ftdiv+2,f
  9183  0D89  0CA7               	rrf	??___ftdiv+1,f
  9184  0D8A  0CA6               	rrf	??___ftdiv,f
  9185  0D8B  0B89               	decfsz	9,f
  9186  0D8C  2D88               	goto	u3035
  9187  0D8D  0826               	movf	??___ftdiv,w
  9188  0D8E  00A9               	movwf	??___ftdiv+3
  9189  0D8F  0829               	movf	??___ftdiv+3,w
  9190  0D90  06AF               	xorwf	___ftdiv@sign,f
  9191  0D91  3080               	movlw	128
  9192  0D92  00A6               	movwf	??___ftdiv
  9193  0D93  0826               	movf	??___ftdiv,w
  9194  0D94  05AF               	andwf	___ftdiv@sign,f
  9195  0D95  17A4               	bsf	___ftdiv@f1+1,7
  9196  0D96  30FF               	movlw	255
  9197  0D97  05A3               	andwf	___ftdiv@f1,f
  9198  0D98  30FF               	movlw	255
  9199  0D99  05A4               	andwf	___ftdiv@f1+1,f
  9200  0D9A  3000               	movlw	0
  9201  0D9B  05A5               	andwf	___ftdiv@f1+2,f
  9202  0D9C  17A1               	bsf	___ftdiv@f2+1,7
  9203  0D9D  30FF               	movlw	255
  9204  0D9E  05A0               	andwf	___ftdiv@f2,f
  9205  0D9F  30FF               	movlw	255
  9206  0DA0  05A1               	andwf	___ftdiv@f2+1,f
  9207  0DA1  3000               	movlw	0
  9208  0DA2  05A2               	andwf	___ftdiv@f2+2,f
  9209  0DA3  3018               	movlw	24
  9210  0DA4  00A6               	movwf	??___ftdiv
  9211  0DA5  0826               	movf	??___ftdiv,w
  9212  0DA6  00AA               	movwf	___ftdiv@cntr
  9213  0DA7                     l2927:	
  9214  0DA7  3001               	movlw	1
  9215  0DA8                     u3045:	
  9216  0DA8  35AB               	lslf	___ftdiv@f3,f
  9217  0DA9  0DAC               	rlf	___ftdiv@f3+1,f
  9218  0DAA  0DAD               	rlf	___ftdiv@f3+2,f
  9219  0DAB  0B89               	decfsz	9,f
  9220  0DAC  2DA8               	goto	u3045
  9221  0DAD  0822               	movf	___ftdiv@f2+2,w
  9222  0DAE  0225               	subwf	___ftdiv@f1+2,w
  9223  0DAF  1D03               	skipz
  9224  0DB0  2DB7               	goto	u3055
  9225  0DB1  0821               	movf	___ftdiv@f2+1,w
  9226  0DB2  0224               	subwf	___ftdiv@f1+1,w
  9227  0DB3  1D03               	skipz
  9228  0DB4  2DB7               	goto	u3055
  9229  0DB5  0820               	movf	___ftdiv@f2,w
  9230  0DB6  0223               	subwf	___ftdiv@f1,w
  9231  0DB7                     u3055:	
  9232  0DB7  1C03               	skipc
  9233  0DB8  2DC0               	goto	l2935
  9234  0DB9  0820               	movf	___ftdiv@f2,w
  9235  0DBA  02A3               	subwf	___ftdiv@f1,f
  9236  0DBB  0821               	movf	___ftdiv@f2+1,w
  9237  0DBC  3BA4               	subwfb	___ftdiv@f1+1,f
  9238  0DBD  0822               	movf	___ftdiv@f2+2,w
  9239  0DBE  3BA5               	subwfb	___ftdiv@f1+2,f
  9240  0DBF  142B               	bsf	___ftdiv@f3,0
  9241  0DC0                     l2935:	
  9242  0DC0  3001               	movlw	1
  9243  0DC1                     u3065:	
  9244  0DC1  35A3               	lslf	___ftdiv@f1,f
  9245  0DC2  0DA4               	rlf	___ftdiv@f1+1,f
  9246  0DC3  0DA5               	rlf	___ftdiv@f1+2,f
  9247  0DC4  0B89               	decfsz	9,f
  9248  0DC5  2DC1               	goto	u3065
  9249  0DC6  3001               	movlw	1
  9250  0DC7  02AA               	subwf	___ftdiv@cntr,f
  9251  0DC8  1D03               	btfss	3,2
  9252  0DC9  2DA7               	goto	l2927
  9253  0DCA  082B               	movf	___ftdiv@f3,w
  9254  0DCB  00F0               	movwf	___ftpack@arg
  9255  0DCC  082C               	movf	___ftdiv@f3+1,w
  9256  0DCD  00F1               	movwf	___ftpack@arg+1
  9257  0DCE  082D               	movf	___ftdiv@f3+2,w
  9258  0DCF  00F2               	movwf	___ftpack@arg+2
  9259  0DD0  082E               	movf	___ftdiv@exp,w
  9260  0DD1  00A6               	movwf	??___ftdiv
  9261  0DD2  0826               	movf	??___ftdiv,w
  9262  0DD3  00F3               	movwf	___ftpack@exp
  9263  0DD4  082F               	movf	___ftdiv@sign,w
  9264  0DD5  00A7               	movwf	??___ftdiv+1
  9265  0DD6  0827               	movf	??___ftdiv+1,w
  9266  0DD7  00F4               	movwf	___ftpack@sign
  9267  0DD8  3180  200C         	fcall	___ftpack
  9268  0DDA  0870               	movf	?___ftpack,w
  9269  0DDB  0020               	movlb	0	; select bank0
  9270  0DDC  00A0               	movwf	?___ftdiv
  9271  0DDD  0871               	movf	?___ftpack+1,w
  9272  0DDE  00A1               	movwf	?___ftdiv+1
  9273  0DDF  0872               	movf	?___ftpack+2,w
  9274  0DE0  00A2               	movwf	?___ftdiv+2
  9275  0DE1  0008               	return
  9276  0DE2                     __end_of___ftdiv:	
  9277                           
  9278                           	psect	text18
  9279  0C30                     __ptext18:	
  9280 ;; *************** function ___aldiv *****************
  9281 ;; Defined at:
  9282 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  divisor         4    0[COMMON] long 
  9285 ;;  dividend        4    4[COMMON] long 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  quotient        4    2[BANK0 ] long 
  9288 ;;  sign            1    1[BANK0 ] unsigned char 
  9289 ;;  counter         1    0[BANK0 ] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  4    0[COMMON] long 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9299 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;Total ram usage:       15 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_main
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           
  9313                           ;psect for function ___aldiv
  9314  0C30                     ___aldiv:	
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9318  0C30  0020               	movlb	0	; select bank0
  9319  0C31  01A1               	clrf	___aldiv@sign
  9320  0C32  1FF3               	btfss	___aldiv@divisor+3,7
  9321  0C33  2C41               	goto	l544
  9322  0C34  09F0               	comf	___aldiv@divisor,f
  9323  0C35  09F1               	comf	___aldiv@divisor+1,f
  9324  0C36  09F2               	comf	___aldiv@divisor+2,f
  9325  0C37  09F3               	comf	___aldiv@divisor+3,f
  9326  0C38  0AF0               	incf	___aldiv@divisor,f
  9327  0C39  1903               	skipnz
  9328  0C3A  0AF1               	incf	___aldiv@divisor+1,f
  9329  0C3B  1903               	skipnz
  9330  0C3C  0AF2               	incf	___aldiv@divisor+2,f
  9331  0C3D  1903               	skipnz
  9332  0C3E  0AF3               	incf	___aldiv@divisor+3,f
  9333  0C3F  01A1               	clrf	___aldiv@sign
  9334  0C40  0AA1               	incf	___aldiv@sign,f
  9335  0C41                     l544:	
  9336  0C41  1FF7               	btfss	___aldiv@dividend+3,7
  9337  0C42  2C52               	goto	l2871
  9338  0C43  09F4               	comf	___aldiv@dividend,f
  9339  0C44  09F5               	comf	___aldiv@dividend+1,f
  9340  0C45  09F6               	comf	___aldiv@dividend+2,f
  9341  0C46  09F7               	comf	___aldiv@dividend+3,f
  9342  0C47  0AF4               	incf	___aldiv@dividend,f
  9343  0C48  1903               	skipnz
  9344  0C49  0AF5               	incf	___aldiv@dividend+1,f
  9345  0C4A  1903               	skipnz
  9346  0C4B  0AF6               	incf	___aldiv@dividend+2,f
  9347  0C4C  1903               	skipnz
  9348  0C4D  0AF7               	incf	___aldiv@dividend+3,f
  9349  0C4E  3001               	movlw	1
  9350  0C4F  00F8               	movwf	??___aldiv
  9351  0C50  0878               	movf	??___aldiv,w
  9352  0C51  06A1               	xorwf	___aldiv@sign,f
  9353  0C52                     l2871:	
  9354  0C52  3000               	movlw	0
  9355  0C53  00A5               	movwf	___aldiv@quotient+3
  9356  0C54  3000               	movlw	0
  9357  0C55  00A4               	movwf	___aldiv@quotient+2
  9358  0C56  3000               	movlw	0
  9359  0C57  00A3               	movwf	___aldiv@quotient+1
  9360  0C58  3000               	movlw	0
  9361  0C59  00A2               	movwf	___aldiv@quotient
  9362  0C5A  0873               	movf	___aldiv@divisor+3,w
  9363  0C5B  0472               	iorwf	___aldiv@divisor+2,w
  9364  0C5C  0471               	iorwf	___aldiv@divisor+1,w
  9365  0C5D  0470               	iorwf	___aldiv@divisor,w
  9366  0C5E  1903               	skipnz
  9367  0C5F  2C9B               	goto	l2893
  9368  0C60  01A0               	clrf	___aldiv@counter
  9369  0C61  0AA0               	incf	___aldiv@counter,f
  9370  0C62                     l2879:	
  9371  0C62  1BF3               	btfsc	___aldiv@divisor+3,7
  9372  0C63  2C70               	goto	l2881
  9373  0C64  3001               	movlw	1
  9374  0C65                     u2935:	
  9375  0C65  35F0               	lslf	___aldiv@divisor,f
  9376  0C66  0DF1               	rlf	___aldiv@divisor+1,f
  9377  0C67  0DF2               	rlf	___aldiv@divisor+2,f
  9378  0C68  0DF3               	rlf	___aldiv@divisor+3,f
  9379  0C69  0B89               	decfsz	9,f
  9380  0C6A  2C65               	goto	u2935
  9381  0C6B  3001               	movlw	1
  9382  0C6C  00F8               	movwf	??___aldiv
  9383  0C6D  0878               	movf	??___aldiv,w
  9384  0C6E  07A0               	addwf	___aldiv@counter,f
  9385  0C6F  2C62               	goto	l2879
  9386  0C70                     l2881:	
  9387  0C70  3001               	movlw	1
  9388  0C71                     u2955:	
  9389  0C71  35A2               	lslf	___aldiv@quotient,f
  9390  0C72  0DA3               	rlf	___aldiv@quotient+1,f
  9391  0C73  0DA4               	rlf	___aldiv@quotient+2,f
  9392  0C74  0DA5               	rlf	___aldiv@quotient+3,f
  9393  0C75  0B89               	decfsz	9,f
  9394  0C76  2C71               	goto	u2955
  9395  0C77  0873               	movf	___aldiv@divisor+3,w
  9396  0C78  0277               	subwf	___aldiv@dividend+3,w
  9397  0C79  1D03               	skipz
  9398  0C7A  2C85               	goto	u2965
  9399  0C7B  0872               	movf	___aldiv@divisor+2,w
  9400  0C7C  0276               	subwf	___aldiv@dividend+2,w
  9401  0C7D  1D03               	skipz
  9402  0C7E  2C85               	goto	u2965
  9403  0C7F  0871               	movf	___aldiv@divisor+1,w
  9404  0C80  0275               	subwf	___aldiv@dividend+1,w
  9405  0C81  1D03               	skipz
  9406  0C82  2C85               	goto	u2965
  9407  0C83  0870               	movf	___aldiv@divisor,w
  9408  0C84  0274               	subwf	___aldiv@dividend,w
  9409  0C85                     u2965:	
  9410  0C85  1C03               	skipc
  9411  0C86  2C90               	goto	l2889
  9412  0C87  0870               	movf	___aldiv@divisor,w
  9413  0C88  02F4               	subwf	___aldiv@dividend,f
  9414  0C89  0871               	movf	___aldiv@divisor+1,w
  9415  0C8A  3BF5               	subwfb	___aldiv@dividend+1,f
  9416  0C8B  0872               	movf	___aldiv@divisor+2,w
  9417  0C8C  3BF6               	subwfb	___aldiv@dividend+2,f
  9418  0C8D  0873               	movf	___aldiv@divisor+3,w
  9419  0C8E  3BF7               	subwfb	___aldiv@dividend+3,f
  9420  0C8F  1422               	bsf	___aldiv@quotient,0
  9421  0C90                     l2889:	
  9422  0C90  3001               	movlw	1
  9423  0C91                     u2975:	
  9424  0C91  36F3               	lsrf	___aldiv@divisor+3,f
  9425  0C92  0CF2               	rrf	___aldiv@divisor+2,f
  9426  0C93  0CF1               	rrf	___aldiv@divisor+1,f
  9427  0C94  0CF0               	rrf	___aldiv@divisor,f
  9428  0C95  0B89               	decfsz	9,f
  9429  0C96  2C91               	goto	u2975
  9430  0C97  3001               	movlw	1
  9431  0C98  02A0               	subwf	___aldiv@counter,f
  9432  0C99  1D03               	btfss	3,2
  9433  0C9A  2C70               	goto	l2881
  9434  0C9B                     l2893:	
  9435  0C9B  0821               	movf	___aldiv@sign,w
  9436  0C9C  1903               	btfsc	3,2
  9437  0C9D  2CA9               	goto	l2897
  9438  0C9E  09A2               	comf	___aldiv@quotient,f
  9439  0C9F  09A3               	comf	___aldiv@quotient+1,f
  9440  0CA0  09A4               	comf	___aldiv@quotient+2,f
  9441  0CA1  09A5               	comf	___aldiv@quotient+3,f
  9442  0CA2  0AA2               	incf	___aldiv@quotient,f
  9443  0CA3  1903               	skipnz
  9444  0CA4  0AA3               	incf	___aldiv@quotient+1,f
  9445  0CA5  1903               	skipnz
  9446  0CA6  0AA4               	incf	___aldiv@quotient+2,f
  9447  0CA7  1903               	skipnz
  9448  0CA8  0AA5               	incf	___aldiv@quotient+3,f
  9449  0CA9                     l2897:	
  9450  0CA9  0825               	movf	___aldiv@quotient+3,w
  9451  0CAA  00F3               	movwf	?___aldiv+3
  9452  0CAB  0824               	movf	___aldiv@quotient+2,w
  9453  0CAC  00F2               	movwf	?___aldiv+2
  9454  0CAD  0823               	movf	___aldiv@quotient+1,w
  9455  0CAE  00F1               	movwf	?___aldiv+1
  9456  0CAF  0822               	movf	___aldiv@quotient,w
  9457  0CB0  00F0               	movwf	?___aldiv
  9458  0CB1  0008               	return
  9459  0CB2                     __end_of___aldiv:	
  9460                           
  9461                           	psect	text19
  9462  09C3                     __ptext19:	
  9463 ;; *************** function _SYSTEM_Initialize *****************
  9464 ;; Defined at:
  9465 ;;		line 37 in file "system.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;Total ram usage:        2 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    3
  9486 ;; This function calls:
  9487 ;;		_ADCC_Initialize
  9488 ;;		_InitCustomChars
  9489 ;;		_Init_PID
  9490 ;;		_LCD_Clear
  9491 ;;		_LCD_Init
  9492 ;;		_OSCILLATOR_Initialize
  9493 ;;		_PIN_MANAGER_Initialize
  9494 ;;		_PWM6_Initialize
  9495 ;;		_TMR0_Initialize
  9496 ;;		_TMR2_Initialize
  9497 ;; This function is called by:
  9498 ;;		_main
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           
  9503                           ;psect for function _SYSTEM_Initialize
  9504  09C3                     _SYSTEM_Initialize:	
  9505                           
  9506                           ;system.c: 40: PIN_MANAGER_Initialize();
  9507                           
  9508                           ;incstack = 0
  9509                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9510  09C3  3188  20E6  3189   	fcall	_PIN_MANAGER_Initialize
  9511                           
  9512                           ;system.c: 41: OSCILLATOR_Initialize();
  9513  09C6  3180  2004  3189   	fcall	_OSCILLATOR_Initialize
  9514                           
  9515                           ;system.c: 42: FVRCON = 0x00;
  9516  09C9  0032               	movlb	18	; select bank18
  9517  09CA  018C               	clrf	12	;volatile
  9518                           
  9519                           ;system.c: 43: ADCC_Initialize();
  9520  09CB  3197  27B3  3189   	fcall	_ADCC_Initialize
  9521                           
  9522                           ;system.c: 44: PWM6_Initialize();
  9523  09CE  3197  2722  3189   	fcall	_PWM6_Initialize
  9524                           
  9525                           ;system.c: 45: TMR0_Initialize();
  9526  09D1  3197  273D  3189   	fcall	_TMR0_Initialize
  9527                           
  9528                           ;system.c: 46: TMR2_Initialize();
  9529  09D4  3197  274C  3189   	fcall	_TMR2_Initialize
  9530                           
  9531                           ;system.c: 47: LCD_Init(0X00);
  9532  09D7  3000               	movlw	0
  9533  09D8  318B  2334  3189   	fcall	_LCD_Init
  9534                           
  9535                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
  9536  09DB  3041               	movlw	65
  9537  09DC  00F8               	movwf	??_SYSTEM_Initialize+1
  9538  09DD  30EE               	movlw	238
  9539  09DE  00F7               	movwf	??_SYSTEM_Initialize
  9540  09DF                     u3417:	
  9541  09DF  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9542  09E0  29DF               	goto	u3417
  9543  09E1  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9544  09E2  29DF               	goto	u3417
  9545  09E3  0000               	nop
  9546                           
  9547                           ;system.c: 49: LCD_Clear();
  9548  09E4  3197  2702  3189   	fcall	_LCD_Clear
  9549                           
  9550                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
  9551  09E7  3021               	movlw	33
  9552  09E8  00F8               	movwf	??_SYSTEM_Initialize+1
  9553  09E9  3076               	movlw	118
  9554  09EA  00F7               	movwf	??_SYSTEM_Initialize
  9555  09EB                     u3427:	
  9556  09EB  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9557  09EC  29EB               	goto	u3427
  9558  09ED  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9559  09EE  29EB               	goto	u3427
  9560  09EF  0000               	nop
  9561                           
  9562                           ;system.c: 51: InitCustomChars();
  9563  09F0  3188  206E  3189   	fcall	_InitCustomChars
  9564                           
  9565                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
  9566  09F3  3041               	movlw	65
  9567  09F4  00F8               	movwf	??_SYSTEM_Initialize+1
  9568  09F5  30EE               	movlw	238
  9569  09F6  00F7               	movwf	??_SYSTEM_Initialize
  9570  09F7                     u3437:	
  9571  09F7  0BF7               	decfsz	??_SYSTEM_Initialize,f
  9572  09F8  29F7               	goto	u3437
  9573  09F9  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  9574  09FA  29F7               	goto	u3437
  9575  09FB  0000               	nop
  9576                           
  9577                           ;system.c: 53: Init_PID();
  9578  09FC  3188  2094         	fcall	_Init_PID
  9579  09FE  0008               	return
  9580  09FF                     __end_of_SYSTEM_Initialize:	
  9581                           
  9582                           	psect	text20
  9583  174C                     __ptext20:	
  9584 ;; *************** function _TMR2_Initialize *****************
  9585 ;; Defined at:
  9586 ;;		line 21 in file "timers.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;		None
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      void 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;Total ram usage:        0 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_SYSTEM_Initialize
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _TMR2_Initialize
  9615  174C                     _TMR2_Initialize:	
  9616                           
  9617                           ;timers.c: 23: T2CON = 0x7F;
  9618                           
  9619                           ;incstack = 0
  9620                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9621  174C  307F               	movlw	127
  9622  174D  0025               	movlb	5	; select bank5
  9623  174E  008E               	movwf	14	;volatile
  9624                           
  9625                           ;timers.c: 25: T2CLKCON = 0x01;
  9626  174F  3001               	movlw	1
  9627  1750  0090               	movwf	16	;volatile
  9628                           
  9629                           ;timers.c: 27: T2HLT = 0x00;
  9630  1751  018F               	clrf	15	;volatile
  9631                           
  9632                           ;timers.c: 29: T2RST = 0x00;
  9633  1752  0191               	clrf	17	;volatile
  9634                           
  9635                           ;timers.c: 31: T2PR = 0xFF;
  9636  1753  30FF               	movlw	255
  9637  1754  008D               	movwf	13	;volatile
  9638                           
  9639                           ;timers.c: 33: T2TMR = 0x00;
  9640  1755  018C               	clrf	12	;volatile
  9641                           
  9642                           ;timers.c: 35: PIR4bits.TMR2IF = 0;
  9643  1756  002E               	movlb	14	; select bank14
  9644  1757  1090               	bcf	16,1	;volatile
  9645                           
  9646                           ;timers.c: 37: T2CONbits.TMR2ON = 1;
  9647  1758  0025               	movlb	5	; select bank5
  9648  1759  178E               	bsf	14,7	;volatile
  9649  175A  0008               	return
  9650  175B                     __end_of_TMR2_Initialize:	
  9651                           
  9652                           	psect	text21
  9653  173D                     __ptext21:	
  9654 ;; *************** function _TMR0_Initialize *****************
  9655 ;; Defined at:
  9656 ;;		line 3 in file "timers.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;		None
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;		None
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;Total ram usage:        0 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_SYSTEM_Initialize
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _TMR0_Initialize
  9685  173D                     _TMR0_Initialize:	
  9686                           
  9687                           ;timers.c: 5: T0CON0 = 0x10;
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _TMR0_Initialize: [wreg]
  9691  173D  3010               	movlw	16
  9692  173E  0020               	movlb	0	; select bank0
  9693  173F  009E               	movwf	30	;volatile
  9694                           
  9695                           ;timers.c: 7: T0CON1 = 0x42;
  9696  1740  3042               	movlw	66
  9697  1741  009F               	movwf	31	;volatile
  9698                           
  9699                           ;timers.c: 9: TMR0H = 0x24;
  9700  1742  3024               	movlw	36
  9701  1743  009D               	movwf	29	;volatile
  9702                           
  9703                           ;timers.c: 11: TMR0L = 0x9F;
  9704  1744  309F               	movlw	159
  9705  1745  009C               	movwf	28	;volatile
  9706                           
  9707                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
  9708  1746  002E               	movlb	14	; select bank14
  9709  1747  1696               	bsf	22,5	;volatile
  9710                           
  9711                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
  9712  1748  128C               	bcf	12,5	;volatile
  9713                           
  9714                           ;timers.c: 17: T0CON0bits.T0EN = 1;
  9715  1749  0020               	movlb	0	; select bank0
  9716  174A  179E               	bsf	30,7	;volatile
  9717  174B  0008               	return
  9718  174C                     __end_of_TMR0_Initialize:	
  9719                           
  9720                           	psect	text22
  9721  1722                     __ptext22:	
  9722 ;; *************** function _PWM6_Initialize *****************
  9723 ;; Defined at:
  9724 ;;		line 4 in file "pwm6.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_SYSTEM_Initialize
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           
  9752                           ;psect for function _PWM6_Initialize
  9753  1722                     _PWM6_Initialize:	
  9754                           
  9755                           ;pwm6.c: 6: PWM6CON = 0x80;
  9756                           
  9757                           ;incstack = 0
  9758                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9759  1722  3080               	movlw	128
  9760  1723  0027               	movlb	7	; select bank7
  9761  1724  008E               	movwf	14	;volatile
  9762                           
  9763                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9764  1725  30FF               	movlw	255
  9765  1726  008D               	movwf	13	;volatile
  9766                           
  9767                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9768  1727  30C0               	movlw	192
  9769  1728  008C               	movwf	12	;volatile
  9770                           
  9771                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9772  1729  0024               	movlb	4	; select bank4
  9773  172A  081F               	movf	31,w	;volatile
  9774  172B  39F3               	andlw	-13
  9775  172C  3804               	iorlw	4
  9776  172D  009F               	movwf	31	;volatile
  9777  172E  0008               	return
  9778  172F                     __end_of_PWM6_Initialize:	
  9779                           
  9780                           	psect	text23
  9781  08E6                     __ptext23:	
  9782 ;; *************** function _PIN_MANAGER_Initialize *****************
  9783 ;; Defined at:
  9784 ;;		line 5 in file "pin_manager.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  state           1    0[COMMON] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;Total ram usage:        1 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; This function calls:
  9805 ;;		Nothing
  9806 ;; This function is called by:
  9807 ;;		_SYSTEM_Initialize
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           
  9812                           ;psect for function _PIN_MANAGER_Initialize
  9813  08E6                     _PIN_MANAGER_Initialize:	
  9814                           
  9815                           ;pin_manager.c: 7: LATA = 0x00;
  9816                           
  9817                           ;incstack = 0
  9818                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9819  08E6  0020               	movlb	0	; select bank0
  9820  08E7  0196               	clrf	22	;volatile
  9821                           
  9822                           ;pin_manager.c: 8: LATB = 0x0;
  9823  08E8  0197               	clrf	23	;volatile
  9824                           
  9825                           ;pin_manager.c: 9: LATC = 0x0;
  9826  08E9  0198               	clrf	24	;volatile
  9827                           
  9828                           ;pin_manager.c: 11: WPUA = 0x18;
  9829  08EA  3018               	movlw	24
  9830  08EB  003E               	movlb	30	; select bank30
  9831  08EC  00B9               	movwf	57	;volatile
  9832                           
  9833                           ;pin_manager.c: 12: WPUB = 0x00;
  9834  08ED  01C4               	clrf	68	;volatile
  9835                           
  9836                           ;pin_manager.c: 13: WPUC = 0x00;
  9837  08EE  01CF               	clrf	79	;volatile
  9838                           
  9839                           ;pin_manager.c: 14: WPUE = 0x8;
  9840  08EF  3008               	movlw	8
  9841  08F0  00E5               	movwf	101	;volatile
  9842                           
  9843                           ;pin_manager.c: 16: TRISA = 0x1C;
  9844  08F1  301C               	movlw	28
  9845  08F2  0020               	movlb	0	; select bank0
  9846  08F3  0091               	movwf	17	;volatile
  9847                           
  9848                           ;pin_manager.c: 17: TRISB = 0x00;
  9849  08F4  0192               	clrf	18	;volatile
  9850                           
  9851                           ;pin_manager.c: 18: TRISC = 0x10;
  9852  08F5  3010               	movlw	16
  9853  08F6  0093               	movwf	19	;volatile
  9854                           
  9855                           ;pin_manager.c: 20: ANSELA = 0x04;
  9856  08F7  3004               	movlw	4
  9857  08F8  003E               	movlb	30	; select bank30
  9858  08F9  00B8               	movwf	56	;volatile
  9859                           
  9860                           ;pin_manager.c: 21: ANSELB = 0x00;
  9861  08FA  01C3               	clrf	67	;volatile
  9862                           
  9863                           ;pin_manager.c: 22: ANSELC = 0x00;
  9864  08FB  01CE               	clrf	78	;volatile
  9865                           
  9866                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9867  08FC  002E               	movlb	14	; select bank14
  9868  08FD  1216               	bcf	22,4	;volatile
  9869                           
  9870                           ;pin_manager.c: 25: bool state = GIE;
  9871  08FE  3000               	movlw	0
  9872  08FF  1B8B               	btfsc	11,7	;volatile
  9873  0900  3001               	movlw	1
  9874  0901  00F0               	movwf	PIN_MANAGER_Initialize@state
  9875                           
  9876                           ;pin_manager.c: 26: GIE = 0;
  9877  0902  138B               	bcf	11,7	;volatile
  9878                           
  9879                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9880  0903  3055               	movlw	85
  9881  0904  003D               	movlb	29	; select bank29
  9882  0905  008F               	movwf	15	;volatile
  9883                           
  9884                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9885  0906  30AA               	movlw	170
  9886  0907  008F               	movwf	15	;volatile
  9887                           
  9888                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9889  0908  100F               	bcf	15,0	;volatile
  9890                           
  9891                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9892  0909  300E               	movlw	14
  9893  090A  003E               	movlb	30	; select bank30
  9894  090B  0091               	movwf	17	;volatile
  9895                           
  9896                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9897  090C  3055               	movlw	85
  9898  090D  003D               	movlb	29	; select bank29
  9899  090E  008F               	movwf	15	;volatile
  9900                           
  9901                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9902  090F  30AA               	movlw	170
  9903  0910  008F               	movwf	15	;volatile
  9904                           
  9905                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9906  0911  140F               	bsf	15,0	;volatile
  9907                           
  9908                           ;pin_manager.c: 39: GIE = state;
  9909  0912  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9910  0913  2916               	goto	u2580
  9911  0914  178B               	bsf	11,7	;volatile
  9912  0915  0008               	return
  9913  0916                     u2580:	
  9914  0916  138B               	bcf	11,7	;volatile
  9915  0917  0008               	return
  9916  0918                     __end_of_PIN_MANAGER_Initialize:	
  9917                           
  9918                           	psect	text24
  9919  0004                     __ptext24:	
  9920 ;; *************** function _OSCILLATOR_Initialize *****************
  9921 ;; Defined at:
  9922 ;;		line 56 in file "system.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;		None
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;Total ram usage:        0 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; This function calls:
  9943 ;;		Nothing
  9944 ;; This function is called by:
  9945 ;;		_SYSTEM_Initialize
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _OSCILLATOR_Initialize
  9951  0004                     _OSCILLATOR_Initialize:	
  9952                           
  9953                           ;system.c: 58: OSCCON1 = 0x60;
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9957  0004  3060               	movlw	96
  9958  0005  0031               	movlb	17	; select bank17
  9959  0006  008D               	movwf	13	;volatile
  9960                           
  9961                           ;system.c: 60: OSCCON3 = 0x00;
  9962  0007  018F               	clrf	15	;volatile
  9963                           
  9964                           ;system.c: 62: OSCEN = 0x00;
  9965  0008  0191               	clrf	17	;volatile
  9966                           
  9967                           ;system.c: 64: OSCFRQ = 0x00;
  9968  0009  0193               	clrf	19	;volatile
  9969                           
  9970                           ;system.c: 66: OSCTUNE = 0x00;
  9971  000A  0192               	clrf	18	;volatile
  9972  000B  0008               	return
  9973  000C                     __end_of_OSCILLATOR_Initialize:	
  9974                           
  9975                           	psect	text25
  9976  0B34                     __ptext25:	
  9977 ;; *************** function _LCD_Init *****************
  9978 ;; Defined at:
  9979 ;;		line 154 in file "lcd.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  style           1    wreg     unsigned char 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;  style           1    5[COMMON] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  1    wreg      void 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0, pclath, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;Total ram usage:        3 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    2
 10000 ;; This function calls:
 10001 ;;		_LCD_Cmd
 10002 ;;		_LCD_Port
 10003 ;; This function is called by:
 10004 ;;		_SYSTEM_Initialize
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           
 10009                           ;psect for function _LCD_Init
 10010  0B34                     _LCD_Init:	
 10011                           
 10012                           ;incstack = 0
 10013                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10014                           ;LCD_Init@style stored from wreg
 10015  0B34  00F5               	movwf	LCD_Init@style
 10016                           
 10017                           ;lcd.c: 156: LCD_Port(0x00);
 10018  0B35  3000               	movlw	0
 10019  0B36  3197  2783  318B   	fcall	_LCD_Port
 10020                           
 10021                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
 10022  0B39  3021               	movlw	33
 10023  0B3A  00F4               	movwf	??_LCD_Init+1
 10024  0B3B  3076               	movlw	118
 10025  0B3C  00F3               	movwf	??_LCD_Init
 10026  0B3D                     u3447:	
 10027  0B3D  0BF3               	decfsz	??_LCD_Init,f
 10028  0B3E  2B3D               	goto	u3447
 10029  0B3F  0BF4               	decfsz	??_LCD_Init+1,f
 10030  0B40  2B3D               	goto	u3447
 10031  0B41  0000               	nop
 10032                           
 10033                           ;lcd.c: 160: LCD_Cmd(0x03);
 10034  0B42  3003               	movlw	3
 10035  0B43  3197  275B  318B   	fcall	_LCD_Cmd
 10036                           
 10037                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
 10038  0B46  3004               	movlw	4
 10039  0B47  00F4               	movwf	??_LCD_Init+1
 10040  0B48  303D               	movlw	61
 10041  0B49  00F3               	movwf	??_LCD_Init
 10042  0B4A                     u3457:	
 10043  0B4A  0BF3               	decfsz	??_LCD_Init,f
 10044  0B4B  2B4A               	goto	u3457
 10045  0B4C  0BF4               	decfsz	??_LCD_Init+1,f
 10046  0B4D  2B4A               	goto	u3457
 10047  0B4E  3200               	nop2
 10048                           
 10049                           ;lcd.c: 164: LCD_Cmd(0x03);
 10050  0B4F  3003               	movlw	3
 10051  0B50  3197  275B  318B   	fcall	_LCD_Cmd
 10052                           
 10053                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10054  0B53  3009               	movlw	9
 10055  0B54  00F3               	movwf	??_LCD_Init
 10056  0B55                     u3467:	
 10057  0B55  0BF3               	decfsz	??_LCD_Init,f
 10058  0B56  2B55               	goto	u3467
 10059  0B57  3200               	nop2	;nop
 10060                           
 10061                           ;lcd.c: 168: LCD_Cmd(0x03);
 10062  0B58  3003               	movlw	3
 10063  0B59  3197  275B  318B   	fcall	_LCD_Cmd
 10064                           
 10065                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10066  0B5C  3009               	movlw	9
 10067  0B5D  00F3               	movwf	??_LCD_Init
 10068  0B5E                     u3477:	
 10069  0B5E  0BF3               	decfsz	??_LCD_Init,f
 10070  0B5F  2B5E               	goto	u3477
 10071  0B60  3200               	nop2	;nop
 10072                           
 10073                           ;lcd.c: 172: LCD_Cmd(0x02);
 10074  0B61  3002               	movlw	2
 10075  0B62  3197  275B  318B   	fcall	_LCD_Cmd
 10076                           
 10077                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10078  0B65  3009               	movlw	9
 10079  0B66  00F3               	movwf	??_LCD_Init
 10080  0B67                     u3487:	
 10081  0B67  0BF3               	decfsz	??_LCD_Init,f
 10082  0B68  2B67               	goto	u3487
 10083  0B69  3200               	nop2	;nop
 10084                           
 10085                           ;lcd.c: 176: LCD_Cmd(0x2);
 10086  0B6A  3002               	movlw	2
 10087  0B6B  3197  275B  318B   	fcall	_LCD_Cmd
 10088                           
 10089                           ;lcd.c: 178: LCD_Cmd(0x8);
 10090  0B6E  3008               	movlw	8
 10091  0B6F  3197  275B  318B   	fcall	_LCD_Cmd
 10092                           
 10093                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10094  0B72  3009               	movlw	9
 10095  0B73  00F3               	movwf	??_LCD_Init
 10096  0B74                     u3497:	
 10097  0B74  0BF3               	decfsz	??_LCD_Init,f
 10098  0B75  2B74               	goto	u3497
 10099  0B76  3200               	nop2	;nop
 10100                           
 10101                           ;lcd.c: 182: LCD_Cmd(0x0);
 10102  0B77  3000               	movlw	0
 10103  0B78  3197  275B  318B   	fcall	_LCD_Cmd
 10104                           
 10105                           ;lcd.c: 184: LCD_Cmd(0x8);
 10106  0B7B  3008               	movlw	8
 10107  0B7C  3197  275B  318B   	fcall	_LCD_Cmd
 10108                           
 10109                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10110  0B7F  3009               	movlw	9
 10111  0B80  00F3               	movwf	??_LCD_Init
 10112  0B81                     u3507:	
 10113  0B81  0BF3               	decfsz	??_LCD_Init,f
 10114  0B82  2B81               	goto	u3507
 10115  0B83  3200               	nop2	;nop
 10116                           
 10117                           ;lcd.c: 188: LCD_Cmd(0x0);
 10118  0B84  3000               	movlw	0
 10119  0B85  3197  275B  318B   	fcall	_LCD_Cmd
 10120                           
 10121                           ;lcd.c: 190: LCD_Cmd(0x1);
 10122  0B88  3001               	movlw	1
 10123  0B89  3197  275B  318B   	fcall	_LCD_Cmd
 10124                           
 10125                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10126  0B8C  30F9               	movlw	249
 10127  0B8D  00F3               	movwf	??_LCD_Init
 10128  0B8E                     u3517:	
 10129  0B8E  3200               	nop2
 10130  0B8F  0BF3               	decfsz	??_LCD_Init,f
 10131  0B90  2B8E               	goto	u3517
 10132  0B91  3200               	nop2	;nop
 10133  0B92  3200               	nop2	;nop
 10134                           
 10135                           ;lcd.c: 194: LCD_Cmd(0x0);
 10136  0B93  3000               	movlw	0
 10137  0B94  3197  275B  318B   	fcall	_LCD_Cmd
 10138                           
 10139                           ;lcd.c: 196: LCD_Cmd(0x6);
 10140  0B97  3006               	movlw	6
 10141  0B98  3197  275B  318B   	fcall	_LCD_Cmd
 10142                           
 10143                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10144  0B9B  3009               	movlw	9
 10145  0B9C  00F3               	movwf	??_LCD_Init
 10146  0B9D                     u3527:	
 10147  0B9D  0BF3               	decfsz	??_LCD_Init,f
 10148  0B9E  2B9D               	goto	u3527
 10149  0B9F  3200               	nop2	;nop
 10150                           
 10151                           ;lcd.c: 200: LCD_Cmd(0x0);
 10152  0BA0  3000               	movlw	0
 10153  0BA1  3197  275B  318B   	fcall	_LCD_Cmd
 10154                           
 10155                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10156  0BA4  0875               	movf	LCD_Init@style,w
 10157  0BA5  380C               	iorlw	12
 10158  0BA6  3197  275B  318B   	fcall	_LCD_Cmd
 10159                           
 10160                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10161  0BA9  3009               	movlw	9
 10162  0BAA  00F3               	movwf	??_LCD_Init
 10163  0BAB                     u3537:	
 10164  0BAB  0BF3               	decfsz	??_LCD_Init,f
 10165  0BAC  2BAB               	goto	u3537
 10166  0BAD  3200               	nop2	;nop
 10167  0BAE  0008               	return
 10168  0BAF                     __end_of_LCD_Init:	
 10169                           
 10170                           	psect	text26
 10171  1702                     __ptext26:	
 10172 ;; *************** function _LCD_Clear *****************
 10173 ;; Defined at:
 10174 ;;		line 75 in file "lcd.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, pclath, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    2
 10195 ;; This function calls:
 10196 ;;		_LCD_Cmd
 10197 ;; This function is called by:
 10198 ;;		_SYSTEM_Initialize
 10199 ;;		_tempSetpoint
 10200 ;;		_readButtons
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           
 10205                           ;psect for function _LCD_Clear
 10206  1702                     _LCD_Clear:	
 10207                           
 10208                           ;lcd.c: 77: LCD_Cmd(0);
 10209                           
 10210                           ;incstack = 0
 10211                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10212  1702  3000               	movlw	0
 10213  1703  3197  275B  3197   	fcall	_LCD_Cmd
 10214                           
 10215                           ;lcd.c: 78: LCD_Cmd(1);
 10216  1706  3001               	movlw	1
 10217  1707  3197  275B         	fcall	_LCD_Cmd
 10218  1709  0008               	return
 10219  170A                     __end_of_LCD_Clear:	
 10220                           
 10221                           	psect	text27
 10222  0894                     __ptext27:	
 10223 ;; *************** function _Init_PID *****************
 10224 ;; Defined at:
 10225 ;;		line 12 in file "PID_Lib.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;Total ram usage:        0 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_SYSTEM_Initialize
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           
 10253                           ;psect for function _Init_PID
 10254  0894                     _Init_PID:	
 10255                           
 10256                           ;PID_Lib.c: 14: PID_Kp = 50;
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _Init_PID: [wreg+status,2]
 10260  0894  3000               	movlw	0
 10261  0895  0021               	movlb	1	; select bank1
 10262  0896  00B7               	movwf	_PID_Kp^(0+128)
 10263  0897  3048               	movlw	72
 10264  0898  00B8               	movwf	(_PID_Kp+1)^(0+128)
 10265  0899  3042               	movlw	66
 10266  089A  00B9               	movwf	(_PID_Kp+2)^(0+128)
 10267                           
 10268                           ;PID_Lib.c: 15: PID_Ki = .5;
 10269  089B  3000               	movlw	0
 10270  089C  00B4               	movwf	_PID_Ki^(0+128)
 10271  089D  3000               	movlw	0
 10272  089E  00B5               	movwf	(_PID_Ki+1)^(0+128)
 10273  089F  303F               	movlw	63
 10274  08A0  00B6               	movwf	(_PID_Ki+2)^(0+128)
 10275                           
 10276                           ;PID_Lib.c: 16: PID_Kd = 400;
 10277  08A1  3000               	movlw	0
 10278  08A2  00B1               	movwf	_PID_Kd^(0+128)
 10279  08A3  30C8               	movlw	200
 10280  08A4  00B2               	movwf	(_PID_Kd+1)^(0+128)
 10281  08A5  3043               	movlw	67
 10282  08A6  00B3               	movwf	(_PID_Kd+2)^(0+128)
 10283                           
 10284                           ;PID_Lib.c: 17: PID_MinOutput = 0;
 10285  08A7  0020               	movlb	0	; select bank0
 10286  08A8  01E6               	clrf	_PID_MinOutput
 10287  08A9  01E7               	clrf	_PID_MinOutput+1
 10288                           
 10289                           ;PID_Lib.c: 18: PID_MaxOutput = 1023;
 10290  08AA  30FF               	movlw	255
 10291  08AB  00ED               	movwf	_PID_MaxOutput
 10292  08AC  3003               	movlw	3
 10293  08AD  00EE               	movwf	_PID_MaxOutput+1
 10294                           
 10295                           ;PID_Lib.c: 19: PID_Integrated = 0;
 10296  08AE  3000               	movlw	0
 10297  08AF  0021               	movlb	1	; select bank1
 10298  08B0  00AE               	movwf	_PID_Integrated^(0+128)
 10299  08B1  3000               	movlw	0
 10300  08B2  00AF               	movwf	(_PID_Integrated+1)^(0+128)
 10301  08B3  3000               	movlw	0
 10302  08B4  00B0               	movwf	(_PID_Integrated+2)^(0+128)
 10303                           
 10304                           ;PID_Lib.c: 20: PID_Prev_Input = 0;
 10305  08B5  3000               	movlw	0
 10306  08B6  00BD               	movwf	_PID_Prev_Input^(0+128)
 10307  08B7  3000               	movlw	0
 10308  08B8  00BE               	movwf	(_PID_Prev_Input+1)^(0+128)
 10309  08B9  3000               	movlw	0
 10310  08BA  00BF               	movwf	(_PID_Prev_Input+2)^(0+128)
 10311  08BB  0008               	return
 10312  08BC                     __end_of_Init_PID:	
 10313                           
 10314                           	psect	text28
 10315  086E                     __ptext28:	
 10316 ;; *************** function _InitCustomChars *****************
 10317 ;; Defined at:
 10318 ;;		line 29 in file "lcd.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  i               1    6[COMMON] unsigned char 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;Total ram usage:        2 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    2
 10339 ;; This function calls:
 10340 ;;		_LCD_Cmd
 10341 ;;		_LCD_Write_Char
 10342 ;; This function is called by:
 10343 ;;		_SYSTEM_Initialize
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           
 10348                           ;psect for function _InitCustomChars
 10349  086E                     _InitCustomChars:	
 10350                           
 10351                           ;lcd.c: 31: uint8_t i;
 10352                           ;lcd.c: 32: LCD_Cmd(0x04);
 10353                           
 10354                           ;incstack = 0
 10355                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10356  086E  3004               	movlw	4
 10357  086F  3197  275B  3188   	fcall	_LCD_Cmd
 10358                           
 10359                           ;lcd.c: 33: LCD_Cmd(0x00);
 10360  0872  3000               	movlw	0
 10361  0873  3197  275B  3188   	fcall	_LCD_Cmd
 10362                           
 10363                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10364  0876  01F6               	clrf	InitCustomChars@i
 10365  0877  3018               	movlw	24
 10366  0878  0276               	subwf	InitCustomChars@i,w
 10367  0879  1803               	btfsc	3,0
 10368  087A  288C               	goto	l2569
 10369  087B                     l2563:	
 10370                           
 10371                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10372  087B  0876               	movf	InitCustomChars@i,w
 10373  087C  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10374  087D  0086               	movwf	6
 10375  087E  3001               	movlw	1	; select bank2/3
 10376  087F  0087               	movwf	7
 10377  0880  0801               	movf	1,w
 10378  0881  3188  20BC  3188   	fcall	_LCD_Write_Char
 10379  0884  3001               	movlw	1
 10380  0885  00F5               	movwf	??_InitCustomChars
 10381  0886  0875               	movf	??_InitCustomChars,w
 10382  0887  07F6               	addwf	InitCustomChars@i,f
 10383  0888  3018               	movlw	24
 10384  0889  0276               	subwf	InitCustomChars@i,w
 10385  088A  1C03               	skipc
 10386  088B  287B               	goto	l2563
 10387  088C                     l2569:	
 10388                           
 10389                           ;lcd.c: 36: LCD_Cmd(0);
 10390  088C  3000               	movlw	0
 10391  088D  3197  275B  3188   	fcall	_LCD_Cmd
 10392                           
 10393                           ;lcd.c: 37: LCD_Cmd(2);
 10394  0890  3002               	movlw	2
 10395  0891  3197  275B         	fcall	_LCD_Cmd
 10396  0893  0008               	return
 10397  0894                     __end_of_InitCustomChars:	
 10398                           
 10399                           	psect	text29
 10400  08BC                     __ptext29:	
 10401 ;; *************** function _LCD_Write_Char *****************
 10402 ;; Defined at:
 10403 ;;		line 223 in file "lcd.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  a               1    wreg     const unsigned char 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  a               1    4[COMMON] const unsigned char 
 10408 ;;  y               1    3[COMMON] unsigned char 
 10409 ;;  temp            1    2[COMMON] unsigned char 
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      void 
 10412 ;; Registers used:
 10413 ;;		wreg, status,2, status,0, pclath, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;Total ram usage:        4 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:    1
 10426 ;; This function calls:
 10427 ;;		_LCD_Port
 10428 ;; This function is called by:
 10429 ;;		_InitCustomChars
 10430 ;;		_LCD_Write_String
 10431 ;;		_LCD_Write_Int
 10432 ;;		_tempSetpoint
 10433 ;;		_readButtons
 10434 ;;		_main
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _LCD_Write_Char
 10440  08BC                     _LCD_Write_Char:	
 10441                           
 10442                           ;incstack = 0
 10443                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10444                           ;LCD_Write_Char@a stored from wreg
 10445  08BC  00F4               	movwf	LCD_Write_Char@a
 10446                           
 10447                           ;lcd.c: 225: char temp,y;
 10448                           ;lcd.c: 226: temp = a&0x0F;
 10449  08BD  0874               	movf	LCD_Write_Char@a,w
 10450  08BE  390F               	andlw	15
 10451  08BF  00F1               	movwf	??_LCD_Write_Char
 10452  08C0  0871               	movf	??_LCD_Write_Char,w
 10453  08C1  00F2               	movwf	LCD_Write_Char@temp
 10454                           
 10455                           ;lcd.c: 227: y = a&0xF0;
 10456  08C2  0874               	movf	LCD_Write_Char@a,w
 10457  08C3  39F0               	andlw	240
 10458  08C4  00F1               	movwf	??_LCD_Write_Char
 10459  08C5  0871               	movf	??_LCD_Write_Char,w
 10460  08C6  00F3               	movwf	LCD_Write_Char@y
 10461                           
 10462                           ;lcd.c: 228: RB0 = 1;
 10463  08C7  0020               	movlb	0	; select bank0
 10464  08C8  140D               	bsf	13,0	;volatile
 10465                           
 10466                           ;lcd.c: 229: LCD_Port(y>>4);
 10467  08C9  0873               	movf	LCD_Write_Char@y,w
 10468  08CA  00F1               	movwf	??_LCD_Write_Char
 10469  08CB  3004               	movlw	4
 10470  08CC                     u1735:	
 10471  08CC  36F1               	lsrf	??_LCD_Write_Char,f
 10472  08CD  0B89               	decfsz	9,f
 10473  08CE  28CC               	goto	u1735
 10474  08CF  0871               	movf	??_LCD_Write_Char,w
 10475  08D0  3197  2783  3188   	fcall	_LCD_Port
 10476                           
 10477                           ;lcd.c: 230: RB1 = 1;
 10478  08D3  0020               	movlb	0	; select bank0
 10479  08D4  148D               	bsf	13,1	;volatile
 10480                           
 10481                           ;lcd.c: 231: RB1 = 0;
 10482  08D5  108D               	bcf	13,1	;volatile
 10483                           
 10484                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10485  08D6  3003               	movlw	3
 10486  08D7  00F1               	movwf	??_LCD_Write_Char
 10487  08D8                     u3547:	
 10488  08D8  0BF1               	decfsz	??_LCD_Write_Char,f
 10489  08D9  28D8               	goto	u3547
 10490                           
 10491                           ;lcd.c: 233: LCD_Port(temp);
 10492  08DA  0872               	movf	LCD_Write_Char@temp,w
 10493  08DB  3197  2783  3188   	fcall	_LCD_Port
 10494                           
 10495                           ;lcd.c: 234: RB1 = 1;
 10496  08DE  0020               	movlb	0	; select bank0
 10497  08DF  148D               	bsf	13,1	;volatile
 10498                           
 10499                           ;lcd.c: 235: RB1 = 0;
 10500  08E0  108D               	bcf	13,1	;volatile
 10501                           
 10502                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 10503  08E1  3003               	movlw	3
 10504  08E2  00F1               	movwf	??_LCD_Write_Char
 10505  08E3                     u3557:	
 10506  08E3  0BF1               	decfsz	??_LCD_Write_Char,f
 10507  08E4  28E3               	goto	u3557
 10508  08E5  0008               	return
 10509  08E6                     __end_of_LCD_Write_Char:	
 10510                           
 10511                           	psect	text30
 10512  175B                     __ptext30:	
 10513 ;; *************** function _LCD_Cmd *****************
 10514 ;; Defined at:
 10515 ;;		line 65 in file "lcd.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  a               1    wreg     unsigned char 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  a               1    2[COMMON] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0, pclath, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;Total ram usage:        2 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    1
 10536 ;; This function calls:
 10537 ;;		_LCD_Port
 10538 ;; This function is called by:
 10539 ;;		_InitCustomChars
 10540 ;;		_LCD_Clear
 10541 ;;		_LCD_Set_Cursor
 10542 ;;		_LCD_Init
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           
 10547                           ;psect for function _LCD_Cmd
 10548  175B                     _LCD_Cmd:	
 10549                           
 10550                           ;incstack = 0
 10551                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10552                           ;LCD_Cmd@a stored from wreg
 10553  175B  00F2               	movwf	LCD_Cmd@a
 10554                           
 10555                           ;lcd.c: 67: RB0 = 0;
 10556  175C  0020               	movlb	0	; select bank0
 10557  175D  100D               	bcf	13,0	;volatile
 10558                           
 10559                           ;lcd.c: 68: LCD_Port(a);
 10560  175E  0872               	movf	LCD_Cmd@a,w
 10561  175F  3197  2783  3197   	fcall	_LCD_Port
 10562                           
 10563                           ;lcd.c: 69: RB1 = 1;
 10564  1762  0020               	movlb	0	; select bank0
 10565  1763  148D               	bsf	13,1	;volatile
 10566                           
 10567                           ;lcd.c: 70: RB1 = 0;
 10568  1764  108D               	bcf	13,1	;volatile
 10569                           
 10570                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10571  1765  30F9               	movlw	249
 10572  1766  00F1               	movwf	??_LCD_Cmd
 10573  1767                     u3567:	
 10574  1767  0000               	nop
 10575  1768  0BF1               	decfsz	??_LCD_Cmd,f
 10576  1769  2F67               	goto	u3567
 10577  176A  3200               	nop2	;nop
 10578  176B  0000               	nop
 10579  176C  0008               	return
 10580  176D                     __end_of_LCD_Cmd:	
 10581                           
 10582                           	psect	text31
 10583  1783                     __ptext31:	
 10584 ;; *************** function _LCD_Port *****************
 10585 ;; Defined at:
 10586 ;;		line 41 in file "lcd.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  a               1    wreg     unsigned char 
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;  a               1    0[COMMON] unsigned char 
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		wreg
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;Total ram usage:        1 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_LCD_Cmd
 10610 ;;		_LCD_Init
 10611 ;;		_LCD_Write_Char
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           
 10616                           ;psect for function _LCD_Port
 10617  1783                     _LCD_Port:	
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in _LCD_Port: [wreg]
 10621                           ;LCD_Port@a stored from wreg
 10622  1783  00F0               	movwf	LCD_Port@a
 10623                           
 10624                           ;lcd.c: 43: if(a & 1)
 10625  1784  1C70               	btfss	LCD_Port@a,0
 10626  1785  2F89               	goto	l107
 10627                           
 10628                           ;lcd.c: 44: RB2 = 1;
 10629  1786  0020               	movlb	0	; select bank0
 10630  1787  150D               	bsf	13,2	;volatile
 10631  1788  2F8B               	goto	l2047
 10632  1789                     l107:	
 10633                           
 10634                           ;lcd.c: 45: else
 10635                           ;lcd.c: 46: RB2 = 0;
 10636  1789  0020               	movlb	0	; select bank0
 10637  178A  110D               	bcf	13,2	;volatile
 10638  178B                     l2047:	
 10639                           
 10640                           ;lcd.c: 48: if(a & 2)
 10641  178B  1CF0               	btfss	LCD_Port@a,1
 10642  178C  2F8F               	goto	l109
 10643                           
 10644                           ;lcd.c: 49: RB3 = 1;
 10645  178D  158D               	bsf	13,3	;volatile
 10646  178E  2F90               	goto	l2051
 10647  178F                     l109:	
 10648                           
 10649                           ;lcd.c: 50: else
 10650                           ;lcd.c: 51: RB3 = 0;
 10651  178F  118D               	bcf	13,3	;volatile
 10652  1790                     l2051:	
 10653                           
 10654                           ;lcd.c: 53: if(a & 4)
 10655  1790  1D70               	btfss	LCD_Port@a,2
 10656  1791  2F94               	goto	l111
 10657                           
 10658                           ;lcd.c: 54: RB4 = 1;
 10659  1792  160D               	bsf	13,4	;volatile
 10660  1793  2F95               	goto	l2055
 10661  1794                     l111:	
 10662                           
 10663                           ;lcd.c: 55: else
 10664                           ;lcd.c: 56: RB4 = 0;
 10665  1794  120D               	bcf	13,4	;volatile
 10666  1795                     l2055:	
 10667                           
 10668                           ;lcd.c: 58: if(a & 8)
 10669  1795  1DF0               	btfss	LCD_Port@a,3
 10670  1796  2F99               	goto	l113
 10671                           
 10672                           ;lcd.c: 59: RB5 = 1;
 10673  1797  168D               	bsf	13,5	;volatile
 10674  1798  0008               	return
 10675  1799                     l113:	
 10676                           
 10677                           ;lcd.c: 60: else
 10678                           ;lcd.c: 61: RB5 = 0;
 10679  1799  128D               	bcf	13,5	;volatile
 10680  179A  0008               	return
 10681  179B                     __end_of_LCD_Port:	
 10682                           
 10683                           	psect	text32
 10684  17B3                     __ptext32:	
 10685 ;; *************** function _ADCC_Initialize *****************
 10686 ;; Defined at:
 10687 ;;		line 5 in file "adcc.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;Total ram usage:        0 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		_SYSTEM_Initialize
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           
 10715                           ;psect for function _ADCC_Initialize
 10716  17B3                     _ADCC_Initialize:	
 10717                           
 10718                           ;adcc.c: 8: ADCON1 = 0x00;
 10719                           
 10720                           ;incstack = 0
 10721                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10722  17B3  0021               	movlb	1	; select bank1
 10723  17B4  0194               	clrf	20	;volatile
 10724                           
 10725                           ;adcc.c: 10: ADCON2 = 0x00;
 10726  17B5  0195               	clrf	21	;volatile
 10727                           
 10728                           ;adcc.c: 12: ADCON3 = 0x00;
 10729  17B6  0196               	clrf	22	;volatile
 10730                           
 10731                           ;adcc.c: 14: ADACT = 0x00;
 10732  17B7  0199               	clrf	25	;volatile
 10733                           
 10734                           ;adcc.c: 16: ADSTAT = 0x00;
 10735  17B8  0197               	clrf	23	;volatile
 10736                           
 10737                           ;adcc.c: 18: ADCLK = 0x0F;
 10738  17B9  300F               	movlw	15
 10739  17BA  0098               	movwf	24	;volatile
 10740                           
 10741                           ;adcc.c: 21: ADREF = 0x00;
 10742  17BB  019A               	clrf	26	;volatile
 10743                           
 10744                           ;adcc.c: 23: ADCAP = 0x00;
 10745  17BC  019B               	clrf	27	;volatile
 10746                           
 10747                           ;adcc.c: 25: ADPRE = 0x00;
 10748  17BD  019C               	clrf	28	;volatile
 10749                           
 10750                           ;adcc.c: 27: ADACQ = 0x00;
 10751  17BE  019D               	clrf	29	;volatile
 10752                           
 10753                           ;adcc.c: 29: ADPCH = 0x00;
 10754  17BF  019E               	clrf	30	;volatile
 10755                           
 10756                           ;adcc.c: 31: ADRPT = 0x00;
 10757  17C0  0022               	movlb	2	; select bank2
 10758  17C1  018D               	clrf	13	;volatile
 10759                           
 10760                           ;adcc.c: 33: ADLTHL = 0x00;
 10761  17C2  018E               	clrf	14	;volatile
 10762                           
 10763                           ;adcc.c: 35: ADLTHH = 0x00;
 10764  17C3  018F               	clrf	15	;volatile
 10765                           
 10766                           ;adcc.c: 37: ADUTHL = 0x00;
 10767  17C4  0190               	clrf	16	;volatile
 10768                           
 10769                           ;adcc.c: 39: ADUTHH = 0x00;
 10770  17C5  0191               	clrf	17	;volatile
 10771                           
 10772                           ;adcc.c: 41: ADSTPTL = 0x00;
 10773  17C6  0192               	clrf	18	;volatile
 10774                           
 10775                           ;adcc.c: 43: ADSTPTH = 0x00;
 10776  17C7  0193               	clrf	19	;volatile
 10777                           
 10778                           ;adcc.c: 46: ADCON0 = 0x84;
 10779  17C8  3084               	movlw	132
 10780  17C9  0021               	movlb	1	; select bank1
 10781  17CA  0093               	movwf	19	;volatile
 10782  17CB  0008               	return
 10783  17CC                     __end_of_ADCC_Initialize:	
 10784                           
 10785                           	psect	text33
 10786  176D                     __ptext33:	
 10787 ;; *************** function _PWM6_LoadDutyValue *****************
 10788 ;; Defined at:
 10789 ;;		line 15 in file "pwm6.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  dutyValue       2    0[COMMON] unsigned int 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		wreg, status,2, status,0
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;Total ram usage:        4 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_main
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _PWM6_LoadDutyValue
 10818  176D                     _PWM6_LoadDutyValue:	
 10819                           
 10820                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10821                           
 10822                           ;incstack = 0
 10823                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10824  176D  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10825  176E  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10826  176F  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10827  1770  00F2               	movwf	??_PWM6_LoadDutyValue
 10828  1771  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10829  1772  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10830  1773  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10831  1774  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10832  1775  0872               	movf	??_PWM6_LoadDutyValue,w
 10833  1776  0027               	movlb	7	; select bank7
 10834  1777  008D               	movwf	13	;volatile
 10835                           
 10836                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10837  1778  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10838  1779  3903               	andlw	3
 10839  177A  00F2               	movwf	??_PWM6_LoadDutyValue
 10840  177B  3005               	movlw	5
 10841  177C                     u2775:	
 10842  177C  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10843  177D  3EFF               	addlw	-1
 10844  177E  1D03               	skipz
 10845  177F  2F7C               	goto	u2775
 10846  1780  3572               	lslf	??_PWM6_LoadDutyValue,w
 10847  1781  008C               	movwf	12	;volatile
 10848  1782  0008               	return
 10849  1783                     __end_of_PWM6_LoadDutyValue:	
 10850                           
 10851                           	psect	text34
 10852  022F                     __ptext34:	
 10853 ;; *************** function _PID_Calculate *****************
 10854 ;; Defined at:
 10855 ;;		line 25 in file "PID_Lib.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  setpoint        2   38[BANK0 ] const int 
 10858 ;;  temp            3   40[BANK0 ] float 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  3   38[BANK0 ] float 
 10863 ;; Registers used:
 10864 ;;		wreg, status,2, status,0, pclath, cstack
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10870 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;Total ram usage:        8 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    2
 10877 ;; This function calls:
 10878 ;;		___awtoft
 10879 ;;		___ftadd
 10880 ;;		___ftge
 10881 ;;		___ftmul
 10882 ;;		___ftneg
 10883 ;; This function is called by:
 10884 ;;		_main
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           
 10889                           ;psect for function _PID_Calculate
 10890  022F                     _PID_Calculate:	
 10891                           
 10892                           ;PID_Lib.c: 30: Err = setpoint - temp;
 10893                           
 10894                           ;incstack = 0
 10895                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10896  022F  0020               	movlb	0	; select bank0
 10897  0230  0848               	movf	PID_Calculate@temp,w
 10898  0231  00F0               	movwf	___ftneg@f1
 10899  0232  0849               	movf	PID_Calculate@temp+1,w
 10900  0233  00F1               	movwf	___ftneg@f1+1
 10901  0234  084A               	movf	PID_Calculate@temp+2,w
 10902  0235  00F2               	movwf	___ftneg@f1+2
 10903  0236  3196  26FA  3182   	fcall	___ftneg
 10904  0239  0870               	movf	?___ftneg,w
 10905  023A  0020               	movlb	0	; select bank0
 10906  023B  00B0               	movwf	___ftadd@f1
 10907  023C  0871               	movf	?___ftneg+1,w
 10908  023D  00B1               	movwf	___ftadd@f1+1
 10909  023E  0872               	movf	?___ftneg+2,w
 10910  023F  00B2               	movwf	___ftadd@f1+2
 10911  0240  0847               	movf	PID_Calculate@setpoint+1,w
 10912  0241  00F9               	movwf	___awtoft@c+1
 10913  0242  0846               	movf	PID_Calculate@setpoint,w
 10914  0243  00F8               	movwf	___awtoft@c
 10915  0244  3188  204E  3182   	fcall	___awtoft
 10916  0247  0878               	movf	?___awtoft,w
 10917  0248  0020               	movlb	0	; select bank0
 10918  0249  00B3               	movwf	___ftadd@f2
 10919  024A  0879               	movf	?___awtoft+1,w
 10920  024B  00B4               	movwf	___ftadd@f2+1
 10921  024C  087A               	movf	?___awtoft+2,w
 10922  024D  00B5               	movwf	___ftadd@f2+2
 10923  024E  3181  2139  3182   	fcall	___ftadd
 10924  0251  0020               	movlb	0	; select bank0
 10925  0252  0830               	movf	?___ftadd,w
 10926  0253  0021               	movlb	1	; select bank1
 10927  0254  00A8               	movwf	_Err^(0+128)
 10928  0255  0020               	movlb	0	; select bank0
 10929  0256  0831               	movf	?___ftadd+1,w
 10930  0257  0021               	movlb	1	; select bank1
 10931  0258  00A9               	movwf	(_Err+1)^(0+128)
 10932  0259  0020               	movlb	0	; select bank0
 10933  025A  0832               	movf	?___ftadd+2,w
 10934  025B  0021               	movlb	1	; select bank1
 10935  025C  00AA               	movwf	(_Err+2)^(0+128)
 10936                           
 10937                           ;PID_Lib.c: 32: ErrValue = Err * PID_Kp;
 10938  025D  0837               	movf	_PID_Kp^(0+128),w
 10939  025E  0020               	movlb	0	; select bank0
 10940  025F  00A0               	movwf	___ftmul@f1
 10941  0260  0021               	movlb	1	; select bank1
 10942  0261  0838               	movf	(_PID_Kp+1)^(0+128),w
 10943  0262  0020               	movlb	0	; select bank0
 10944  0263  00A1               	movwf	___ftmul@f1+1
 10945  0264  0021               	movlb	1	; select bank1
 10946  0265  0839               	movf	(_PID_Kp+2)^(0+128),w
 10947  0266  0020               	movlb	0	; select bank0
 10948  0267  00A2               	movwf	___ftmul@f1+2
 10949  0268  0021               	movlb	1	; select bank1
 10950  0269  0828               	movf	_Err^(0+128),w
 10951  026A  0020               	movlb	0	; select bank0
 10952  026B  00A3               	movwf	___ftmul@f2
 10953  026C  0021               	movlb	1	; select bank1
 10954  026D  0829               	movf	(_Err+1)^(0+128),w
 10955  026E  0020               	movlb	0	; select bank0
 10956  026F  00A4               	movwf	___ftmul@f2+1
 10957  0270  0021               	movlb	1	; select bank1
 10958  0271  082A               	movf	(_Err+2)^(0+128),w
 10959  0272  0020               	movlb	0	; select bank0
 10960  0273  00A5               	movwf	___ftmul@f2+2
 10961  0274  318E  2692  3182   	fcall	___ftmul
 10962  0277  0020               	movlb	0	; select bank0
 10963  0278  0820               	movf	?___ftmul,w
 10964  0279  0021               	movlb	1	; select bank1
 10965  027A  00AB               	movwf	_ErrValue^(0+128)
 10966  027B  0020               	movlb	0	; select bank0
 10967  027C  0821               	movf	?___ftmul+1,w
 10968  027D  0021               	movlb	1	; select bank1
 10969  027E  00AC               	movwf	(_ErrValue+1)^(0+128)
 10970  027F  0020               	movlb	0	; select bank0
 10971  0280  0822               	movf	?___ftmul+2,w
 10972  0281  0021               	movlb	1	; select bank1
 10973  0282  00AD               	movwf	(_ErrValue+2)^(0+128)
 10974                           
 10975                           ;PID_Lib.c: 35: PID_Integrated = PID_Integrated + (Err * PID_Ki);
 10976  0283  082E               	movf	_PID_Integrated^(0+128),w
 10977  0284  0020               	movlb	0	; select bank0
 10978  0285  00B0               	movwf	___ftadd@f1
 10979  0286  0021               	movlb	1	; select bank1
 10980  0287  082F               	movf	(_PID_Integrated+1)^(0+128),w
 10981  0288  0020               	movlb	0	; select bank0
 10982  0289  00B1               	movwf	___ftadd@f1+1
 10983  028A  0021               	movlb	1	; select bank1
 10984  028B  0830               	movf	(_PID_Integrated+2)^(0+128),w
 10985  028C  0020               	movlb	0	; select bank0
 10986  028D  00B2               	movwf	___ftadd@f1+2
 10987  028E  0021               	movlb	1	; select bank1
 10988  028F  0834               	movf	_PID_Ki^(0+128),w
 10989  0290  0020               	movlb	0	; select bank0
 10990  0291  00A0               	movwf	___ftmul@f1
 10991  0292  0021               	movlb	1	; select bank1
 10992  0293  0835               	movf	(_PID_Ki+1)^(0+128),w
 10993  0294  0020               	movlb	0	; select bank0
 10994  0295  00A1               	movwf	___ftmul@f1+1
 10995  0296  0021               	movlb	1	; select bank1
 10996  0297  0836               	movf	(_PID_Ki+2)^(0+128),w
 10997  0298  0020               	movlb	0	; select bank0
 10998  0299  00A2               	movwf	___ftmul@f1+2
 10999  029A  0021               	movlb	1	; select bank1
 11000  029B  0828               	movf	_Err^(0+128),w
 11001  029C  0020               	movlb	0	; select bank0
 11002  029D  00A3               	movwf	___ftmul@f2
 11003  029E  0021               	movlb	1	; select bank1
 11004  029F  0829               	movf	(_Err+1)^(0+128),w
 11005  02A0  0020               	movlb	0	; select bank0
 11006  02A1  00A4               	movwf	___ftmul@f2+1
 11007  02A2  0021               	movlb	1	; select bank1
 11008  02A3  082A               	movf	(_Err+2)^(0+128),w
 11009  02A4  0020               	movlb	0	; select bank0
 11010  02A5  00A5               	movwf	___ftmul@f2+2
 11011  02A6  318E  2692  3182   	fcall	___ftmul
 11012  02A9  0020               	movlb	0	; select bank0
 11013  02AA  0820               	movf	?___ftmul,w
 11014  02AB  00B3               	movwf	___ftadd@f2
 11015  02AC  0821               	movf	?___ftmul+1,w
 11016  02AD  00B4               	movwf	___ftadd@f2+1
 11017  02AE  0822               	movf	?___ftmul+2,w
 11018  02AF  00B5               	movwf	___ftadd@f2+2
 11019  02B0  3181  2139  3182   	fcall	___ftadd
 11020  02B3  0020               	movlb	0	; select bank0
 11021  02B4  0830               	movf	?___ftadd,w
 11022  02B5  0021               	movlb	1	; select bank1
 11023  02B6  00AE               	movwf	_PID_Integrated^(0+128)
 11024  02B7  0020               	movlb	0	; select bank0
 11025  02B8  0831               	movf	?___ftadd+1,w
 11026  02B9  0021               	movlb	1	; select bank1
 11027  02BA  00AF               	movwf	(_PID_Integrated+1)^(0+128)
 11028  02BB  0020               	movlb	0	; select bank0
 11029  02BC  0832               	movf	?___ftadd+2,w
 11030  02BD  0021               	movlb	1	; select bank1
 11031  02BE  00B0               	movwf	(_PID_Integrated+2)^(0+128)
 11032                           
 11033                           ;PID_Lib.c: 37: if (PID_Integrated < PID_MinOutput)
 11034  02BF  082E               	movf	_PID_Integrated^(0+128),w
 11035  02C0  0020               	movlb	0	; select bank0
 11036  02C1  00BD               	movwf	___ftge@ff1
 11037  02C2  0021               	movlb	1	; select bank1
 11038  02C3  082F               	movf	(_PID_Integrated+1)^(0+128),w
 11039  02C4  0020               	movlb	0	; select bank0
 11040  02C5  00BE               	movwf	___ftge@ff1+1
 11041  02C6  0021               	movlb	1	; select bank1
 11042  02C7  0830               	movf	(_PID_Integrated+2)^(0+128),w
 11043  02C8  0020               	movlb	0	; select bank0
 11044  02C9  00BF               	movwf	___ftge@ff1+2
 11045  02CA  0867               	movf	_PID_MinOutput+1,w
 11046  02CB  00F9               	movwf	___awtoft@c+1
 11047  02CC  0866               	movf	_PID_MinOutput,w
 11048  02CD  00F8               	movwf	___awtoft@c
 11049  02CE  3188  204E  3182   	fcall	___awtoft
 11050  02D1  0878               	movf	?___awtoft,w
 11051  02D2  0020               	movlb	0	; select bank0
 11052  02D3  00C0               	movwf	___ftge@ff2
 11053  02D4  0879               	movf	?___awtoft+1,w
 11054  02D5  00C1               	movwf	___ftge@ff2+1
 11055  02D6  087A               	movf	?___awtoft+2,w
 11056  02D7  00C2               	movwf	___ftge@ff2+2
 11057  02D8  3189  2187  3182   	fcall	___ftge
 11058  02DB  1803               	btfsc	3,0
 11059  02DC  2AEC               	goto	l349
 11060                           
 11061                           ;PID_Lib.c: 38: {
 11062                           ;PID_Lib.c: 39: PID_Integrated = PID_MinOutput;
 11063  02DD  0020               	movlb	0	; select bank0
 11064  02DE  0867               	movf	_PID_MinOutput+1,w
 11065  02DF  00F9               	movwf	___awtoft@c+1
 11066  02E0  0866               	movf	_PID_MinOutput,w
 11067  02E1  00F8               	movwf	___awtoft@c
 11068  02E2  3188  204E  3182   	fcall	___awtoft
 11069  02E5  0878               	movf	?___awtoft,w
 11070  02E6  0021               	movlb	1	; select bank1
 11071  02E7  00AE               	movwf	_PID_Integrated^(0+128)
 11072  02E8  0879               	movf	?___awtoft+1,w
 11073  02E9  00AF               	movwf	(_PID_Integrated+1)^(0+128)
 11074  02EA  087A               	movf	?___awtoft+2,w
 11075  02EB  00B0               	movwf	(_PID_Integrated+2)^(0+128)
 11076  02EC                     l349:	
 11077                           
 11078                           ;PID_Lib.c: 40: }
 11079                           ;PID_Lib.c: 42: if (PID_Integrated > PID_MaxOutput)
 11080  02EC  0020               	movlb	0	; select bank0
 11081  02ED  086E               	movf	_PID_MaxOutput+1,w
 11082  02EE  00F9               	movwf	___awtoft@c+1
 11083  02EF  086D               	movf	_PID_MaxOutput,w
 11084  02F0  00F8               	movwf	___awtoft@c
 11085  02F1  3188  204E  3182   	fcall	___awtoft
 11086  02F4  0878               	movf	?___awtoft,w
 11087  02F5  0020               	movlb	0	; select bank0
 11088  02F6  00BD               	movwf	___ftge@ff1
 11089  02F7  0879               	movf	?___awtoft+1,w
 11090  02F8  00BE               	movwf	___ftge@ff1+1
 11091  02F9  087A               	movf	?___awtoft+2,w
 11092  02FA  00BF               	movwf	___ftge@ff1+2
 11093  02FB  0021               	movlb	1	; select bank1
 11094  02FC  082E               	movf	_PID_Integrated^(0+128),w
 11095  02FD  0020               	movlb	0	; select bank0
 11096  02FE  00C0               	movwf	___ftge@ff2
 11097  02FF  0021               	movlb	1	; select bank1
 11098  0300  082F               	movf	(_PID_Integrated+1)^(0+128),w
 11099  0301  0020               	movlb	0	; select bank0
 11100  0302  00C1               	movwf	___ftge@ff2+1
 11101  0303  0021               	movlb	1	; select bank1
 11102  0304  0830               	movf	(_PID_Integrated+2)^(0+128),w
 11103  0305  0020               	movlb	0	; select bank0
 11104  0306  00C2               	movwf	___ftge@ff2+2
 11105  0307  3189  2187  3182   	fcall	___ftge
 11106  030A  1803               	btfsc	3,0
 11107  030B  2B1B               	goto	l350
 11108                           
 11109                           ;PID_Lib.c: 43: {
 11110                           ;PID_Lib.c: 44: PID_Integrated = PID_MaxOutput;
 11111  030C  0020               	movlb	0	; select bank0
 11112  030D  086E               	movf	_PID_MaxOutput+1,w
 11113  030E  00F9               	movwf	___awtoft@c+1
 11114  030F  086D               	movf	_PID_MaxOutput,w
 11115  0310  00F8               	movwf	___awtoft@c
 11116  0311  3188  204E  3182   	fcall	___awtoft
 11117  0314  0878               	movf	?___awtoft,w
 11118  0315  0021               	movlb	1	; select bank1
 11119  0316  00AE               	movwf	_PID_Integrated^(0+128)
 11120  0317  0879               	movf	?___awtoft+1,w
 11121  0318  00AF               	movwf	(_PID_Integrated+1)^(0+128)
 11122  0319  087A               	movf	?___awtoft+2,w
 11123  031A  00B0               	movwf	(_PID_Integrated+2)^(0+128)
 11124  031B                     l350:	
 11125                           
 11126                           ;PID_Lib.c: 45: }
 11127                           ;PID_Lib.c: 57: DerivativeValue=(Err-PID_Prev_Error)*PID_Kd;
 11128  031B  0021               	movlb	1	; select bank1
 11129  031C  0831               	movf	_PID_Kd^(0+128),w
 11130  031D  0020               	movlb	0	; select bank0
 11131  031E  00A0               	movwf	___ftmul@f1
 11132  031F  0021               	movlb	1	; select bank1
 11133  0320  0832               	movf	(_PID_Kd+1)^(0+128),w
 11134  0321  0020               	movlb	0	; select bank0
 11135  0322  00A1               	movwf	___ftmul@f1+1
 11136  0323  0021               	movlb	1	; select bank1
 11137  0324  0833               	movf	(_PID_Kd+2)^(0+128),w
 11138  0325  0020               	movlb	0	; select bank0
 11139  0326  00A2               	movwf	___ftmul@f1+2
 11140  0327  0021               	movlb	1	; select bank1
 11141  0328  0828               	movf	_Err^(0+128),w
 11142  0329  0020               	movlb	0	; select bank0
 11143  032A  00B0               	movwf	___ftadd@f1
 11144  032B  0021               	movlb	1	; select bank1
 11145  032C  0829               	movf	(_Err+1)^(0+128),w
 11146  032D  0020               	movlb	0	; select bank0
 11147  032E  00B1               	movwf	___ftadd@f1+1
 11148  032F  0021               	movlb	1	; select bank1
 11149  0330  082A               	movf	(_Err+2)^(0+128),w
 11150  0331  0020               	movlb	0	; select bank0
 11151  0332  00B2               	movwf	___ftadd@f1+2
 11152  0333  0021               	movlb	1	; select bank1
 11153  0334  083A               	movf	_PID_Prev_Error^(0+128),w
 11154  0335  00F0               	movwf	___ftneg@f1
 11155  0336  083B               	movf	(_PID_Prev_Error+1)^(0+128),w
 11156  0337  00F1               	movwf	___ftneg@f1+1
 11157  0338  083C               	movf	(_PID_Prev_Error+2)^(0+128),w
 11158  0339  00F2               	movwf	___ftneg@f1+2
 11159  033A  3196  26FA  3182   	fcall	___ftneg
 11160  033D  0870               	movf	?___ftneg,w
 11161  033E  0020               	movlb	0	; select bank0
 11162  033F  00B3               	movwf	___ftadd@f2
 11163  0340  0871               	movf	?___ftneg+1,w
 11164  0341  00B4               	movwf	___ftadd@f2+1
 11165  0342  0872               	movf	?___ftneg+2,w
 11166  0343  00B5               	movwf	___ftadd@f2+2
 11167  0344  3181  2139  3182   	fcall	___ftadd
 11168  0347  0020               	movlb	0	; select bank0
 11169  0348  0830               	movf	?___ftadd,w
 11170  0349  00A3               	movwf	___ftmul@f2
 11171  034A  0831               	movf	?___ftadd+1,w
 11172  034B  00A4               	movwf	___ftmul@f2+1
 11173  034C  0832               	movf	?___ftadd+2,w
 11174  034D  00A5               	movwf	___ftmul@f2+2
 11175  034E  318E  2692  3182   	fcall	___ftmul
 11176  0351  0020               	movlb	0	; select bank0
 11177  0352  0820               	movf	?___ftmul,w
 11178  0353  0021               	movlb	1	; select bank1
 11179  0354  00A5               	movwf	_DerivativeValue^(0+128)
 11180  0355  0020               	movlb	0	; select bank0
 11181  0356  0821               	movf	?___ftmul+1,w
 11182  0357  0021               	movlb	1	; select bank1
 11183  0358  00A6               	movwf	(_DerivativeValue+1)^(0+128)
 11184  0359  0020               	movlb	0	; select bank0
 11185  035A  0822               	movf	?___ftmul+2,w
 11186  035B  0021               	movlb	1	; select bank1
 11187  035C  00A7               	movwf	(_DerivativeValue+2)^(0+128)
 11188                           
 11189                           ;PID_Lib.c: 59: PID_Prev_Error = Err;
 11190  035D  0828               	movf	_Err^(0+128),w
 11191  035E  00BA               	movwf	_PID_Prev_Error^(0+128)
 11192  035F  0829               	movf	(_Err+1)^(0+128),w
 11193  0360  00BB               	movwf	(_PID_Prev_Error+1)^(0+128)
 11194  0361  082A               	movf	(_Err+2)^(0+128),w
 11195  0362  00BC               	movwf	(_PID_Prev_Error+2)^(0+128)
 11196                           
 11197                           ;PID_Lib.c: 69: Result = ErrValue + PID_Integrated + DerivativeValue;
 11198  0363  082E               	movf	_PID_Integrated^(0+128),w
 11199  0364  0020               	movlb	0	; select bank0
 11200  0365  00B0               	movwf	___ftadd@f1
 11201  0366  0021               	movlb	1	; select bank1
 11202  0367  082F               	movf	(_PID_Integrated+1)^(0+128),w
 11203  0368  0020               	movlb	0	; select bank0
 11204  0369  00B1               	movwf	___ftadd@f1+1
 11205  036A  0021               	movlb	1	; select bank1
 11206  036B  0830               	movf	(_PID_Integrated+2)^(0+128),w
 11207  036C  0020               	movlb	0	; select bank0
 11208  036D  00B2               	movwf	___ftadd@f1+2
 11209  036E  0021               	movlb	1	; select bank1
 11210  036F  082B               	movf	_ErrValue^(0+128),w
 11211  0370  0020               	movlb	0	; select bank0
 11212  0371  00B3               	movwf	___ftadd@f2
 11213  0372  0021               	movlb	1	; select bank1
 11214  0373  082C               	movf	(_ErrValue+1)^(0+128),w
 11215  0374  0020               	movlb	0	; select bank0
 11216  0375  00B4               	movwf	___ftadd@f2+1
 11217  0376  0021               	movlb	1	; select bank1
 11218  0377  082D               	movf	(_ErrValue+2)^(0+128),w
 11219  0378  0020               	movlb	0	; select bank0
 11220  0379  00B5               	movwf	___ftadd@f2+2
 11221  037A  3181  2139  3182   	fcall	___ftadd
 11222  037D  0020               	movlb	0	; select bank0
 11223  037E  0830               	movf	?___ftadd,w
 11224  037F  00CB               	movwf	_PID_Calculate$1056
 11225  0380  0831               	movf	?___ftadd+1,w
 11226  0381  00CC               	movwf	_PID_Calculate$1056+1
 11227  0382  0832               	movf	?___ftadd+2,w
 11228  0383  00CD               	movwf	_PID_Calculate$1056+2
 11229                           
 11230                           ;PID_Lib.c: 69: Result = ErrValue + PID_Integrated + DerivativeValue;
 11231  0384  0021               	movlb	1	; select bank1
 11232  0385  0825               	movf	_DerivativeValue^(0+128),w
 11233  0386  0020               	movlb	0	; select bank0
 11234  0387  00B0               	movwf	___ftadd@f1
 11235  0388  0021               	movlb	1	; select bank1
 11236  0389  0826               	movf	(_DerivativeValue+1)^(0+128),w
 11237  038A  0020               	movlb	0	; select bank0
 11238  038B  00B1               	movwf	___ftadd@f1+1
 11239  038C  0021               	movlb	1	; select bank1
 11240  038D  0827               	movf	(_DerivativeValue+2)^(0+128),w
 11241  038E  0020               	movlb	0	; select bank0
 11242  038F  00B2               	movwf	___ftadd@f1+2
 11243  0390  084B               	movf	_PID_Calculate$1056,w
 11244  0391  00B3               	movwf	___ftadd@f2
 11245  0392  084C               	movf	_PID_Calculate$1056+1,w
 11246  0393  00B4               	movwf	___ftadd@f2+1
 11247  0394  084D               	movf	_PID_Calculate$1056+2,w
 11248  0395  00B5               	movwf	___ftadd@f2+2
 11249  0396  3181  2139  3182   	fcall	___ftadd
 11250  0399  0020               	movlb	0	; select bank0
 11251  039A  0830               	movf	?___ftadd,w
 11252  039B  0021               	movlb	1	; select bank1
 11253  039C  00C0               	movwf	_Result^(0+128)
 11254  039D  0020               	movlb	0	; select bank0
 11255  039E  0831               	movf	?___ftadd+1,w
 11256  039F  0021               	movlb	1	; select bank1
 11257  03A0  00C1               	movwf	(_Result+1)^(0+128)
 11258  03A1  0020               	movlb	0	; select bank0
 11259  03A2  0832               	movf	?___ftadd+2,w
 11260  03A3  0021               	movlb	1	; select bank1
 11261  03A4  00C2               	movwf	(_Result+2)^(0+128)
 11262                           
 11263                           ;PID_Lib.c: 71: if (Result < PID_MinOutput)
 11264  03A5  0840               	movf	_Result^(0+128),w
 11265  03A6  0020               	movlb	0	; select bank0
 11266  03A7  00BD               	movwf	___ftge@ff1
 11267  03A8  0021               	movlb	1	; select bank1
 11268  03A9  0841               	movf	(_Result+1)^(0+128),w
 11269  03AA  0020               	movlb	0	; select bank0
 11270  03AB  00BE               	movwf	___ftge@ff1+1
 11271  03AC  0021               	movlb	1	; select bank1
 11272  03AD  0842               	movf	(_Result+2)^(0+128),w
 11273  03AE  0020               	movlb	0	; select bank0
 11274  03AF  00BF               	movwf	___ftge@ff1+2
 11275  03B0  0867               	movf	_PID_MinOutput+1,w
 11276  03B1  00F9               	movwf	___awtoft@c+1
 11277  03B2  0866               	movf	_PID_MinOutput,w
 11278  03B3  00F8               	movwf	___awtoft@c
 11279  03B4  3188  204E  3182   	fcall	___awtoft
 11280  03B7  0878               	movf	?___awtoft,w
 11281  03B8  0020               	movlb	0	; select bank0
 11282  03B9  00C0               	movwf	___ftge@ff2
 11283  03BA  0879               	movf	?___awtoft+1,w
 11284  03BB  00C1               	movwf	___ftge@ff2+1
 11285  03BC  087A               	movf	?___awtoft+2,w
 11286  03BD  00C2               	movwf	___ftge@ff2+2
 11287  03BE  3189  2187  3182   	fcall	___ftge
 11288  03C1  1803               	btfsc	3,0
 11289  03C2  2BD2               	goto	l351
 11290                           
 11291                           ;PID_Lib.c: 72: {
 11292                           ;PID_Lib.c: 73: Result = PID_MinOutput;
 11293  03C3  0020               	movlb	0	; select bank0
 11294  03C4  0867               	movf	_PID_MinOutput+1,w
 11295  03C5  00F9               	movwf	___awtoft@c+1
 11296  03C6  0866               	movf	_PID_MinOutput,w
 11297  03C7  00F8               	movwf	___awtoft@c
 11298  03C8  3188  204E  3182   	fcall	___awtoft
 11299  03CB  0878               	movf	?___awtoft,w
 11300  03CC  0021               	movlb	1	; select bank1
 11301  03CD  00C0               	movwf	_Result^(0+128)
 11302  03CE  0879               	movf	?___awtoft+1,w
 11303  03CF  00C1               	movwf	(_Result+1)^(0+128)
 11304  03D0  087A               	movf	?___awtoft+2,w
 11305  03D1  00C2               	movwf	(_Result+2)^(0+128)
 11306  03D2                     l351:	
 11307                           
 11308                           ;PID_Lib.c: 74: }
 11309                           ;PID_Lib.c: 76: if (Result > PID_MaxOutput)
 11310  03D2  0020               	movlb	0	; select bank0
 11311  03D3  086E               	movf	_PID_MaxOutput+1,w
 11312  03D4  00F9               	movwf	___awtoft@c+1
 11313  03D5  086D               	movf	_PID_MaxOutput,w
 11314  03D6  00F8               	movwf	___awtoft@c
 11315  03D7  3188  204E  3182   	fcall	___awtoft
 11316  03DA  0878               	movf	?___awtoft,w
 11317  03DB  0020               	movlb	0	; select bank0
 11318  03DC  00BD               	movwf	___ftge@ff1
 11319  03DD  0879               	movf	?___awtoft+1,w
 11320  03DE  00BE               	movwf	___ftge@ff1+1
 11321  03DF  087A               	movf	?___awtoft+2,w
 11322  03E0  00BF               	movwf	___ftge@ff1+2
 11323  03E1  0021               	movlb	1	; select bank1
 11324  03E2  0840               	movf	_Result^(0+128),w
 11325  03E3  0020               	movlb	0	; select bank0
 11326  03E4  00C0               	movwf	___ftge@ff2
 11327  03E5  0021               	movlb	1	; select bank1
 11328  03E6  0841               	movf	(_Result+1)^(0+128),w
 11329  03E7  0020               	movlb	0	; select bank0
 11330  03E8  00C1               	movwf	___ftge@ff2+1
 11331  03E9  0021               	movlb	1	; select bank1
 11332  03EA  0842               	movf	(_Result+2)^(0+128),w
 11333  03EB  0020               	movlb	0	; select bank0
 11334  03EC  00C2               	movwf	___ftge@ff2+2
 11335  03ED  3189  2187  3182   	fcall	___ftge
 11336  03F0  1803               	btfsc	3,0
 11337  03F1  2C00               	goto	l2835
 11338                           
 11339                           ;PID_Lib.c: 77: {
 11340                           ;PID_Lib.c: 78: Result = PID_MaxOutput;
 11341  03F2  0020               	movlb	0	; select bank0
 11342  03F3  086E               	movf	_PID_MaxOutput+1,w
 11343  03F4  00F9               	movwf	___awtoft@c+1
 11344  03F5  086D               	movf	_PID_MaxOutput,w
 11345  03F6  00F8               	movwf	___awtoft@c
 11346  03F7  3188  204E         	fcall	___awtoft
 11347  03F9  0878               	movf	?___awtoft,w
 11348  03FA  0021               	movlb	1	; select bank1
 11349  03FB  00C0               	movwf	_Result^(0+128)
 11350  03FC  0879               	movf	?___awtoft+1,w
 11351  03FD  00C1               	movwf	(_Result+1)^(0+128)
 11352  03FE  087A               	movf	?___awtoft+2,w
 11353  03FF  00C2               	movwf	(_Result+2)^(0+128)
 11354  0400                     l2835:	
 11355                           
 11356                           ;PID_Lib.c: 79: }
 11357                           ;PID_Lib.c: 81: return (Result);
 11358  0400  0021               	movlb	1	; select bank1
 11359  0401  0840               	movf	_Result^(0+128),w
 11360  0402  0020               	movlb	0	; select bank0
 11361  0403  00C6               	movwf	?_PID_Calculate
 11362  0404  0021               	movlb	1	; select bank1
 11363  0405  0841               	movf	(_Result+1)^(0+128),w
 11364  0406  0020               	movlb	0	; select bank0
 11365  0407  00C7               	movwf	?_PID_Calculate+1
 11366  0408  0021               	movlb	1	; select bank1
 11367  0409  0842               	movf	(_Result+2)^(0+128),w
 11368  040A  0020               	movlb	0	; select bank0
 11369  040B  00C8               	movwf	?_PID_Calculate+2
 11370  040C  0008               	return
 11371  040D                     __end_of_PID_Calculate:	
 11372                           
 11373                           	psect	text35
 11374  16FA                     __ptext35:	
 11375 ;; *************** function ___ftneg *****************
 11376 ;; Defined at:
 11377 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  f1              3    0[COMMON] float 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  3    0[COMMON] float 
 11384 ;; Registers used:
 11385 ;;		wreg
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;Total ram usage:        3 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_PID_Calculate
 11401 ;;		_main
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           
 11406                           ;psect for function ___ftneg
 11407  16FA                     ___ftneg:	
 11408                           
 11409                           ;incstack = 0
 11410                           ; Regs used in ___ftneg: [wreg]
 11411  16FA  0872               	movf	___ftneg@f1+2,w
 11412  16FB  0471               	iorwf	___ftneg@f1+1,w
 11413  16FC  0470               	iorwf	___ftneg@f1,w
 11414  16FD  1903               	skipnz
 11415  16FE  0008               	return
 11416  16FF  3080               	movlw	128
 11417  1700  06F2               	xorwf	___ftneg@f1+2,f
 11418  1701  0008               	return
 11419  1702                     __end_of___ftneg:	
 11420                           
 11421                           	psect	text36
 11422  0E92                     __ptext36:	
 11423 ;; *************** function ___ftmul *****************
 11424 ;; Defined at:
 11425 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;  f1              3    0[BANK0 ] float 
 11428 ;;  f2              3    3[BANK0 ] float 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 11431 ;;  sign            1   15[BANK0 ] unsigned char 
 11432 ;;  cntr            1   14[BANK0 ] unsigned char 
 11433 ;;  exp             1   10[BANK0 ] unsigned char 
 11434 ;; Return value:  Size  Location     Type
 11435 ;;                  3    0[BANK0 ] float 
 11436 ;; Registers used:
 11437 ;;		wreg, status,2, status,0, pclath, cstack
 11438 ;; Tracked objects:
 11439 ;;		On entry : 0/0
 11440 ;;		On exit  : 0/0
 11441 ;;		Unchanged: 0/0
 11442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;Total ram usage:       16 bytes
 11448 ;; Hardware stack levels used:    1
 11449 ;; Hardware stack levels required when called:    1
 11450 ;; This function calls:
 11451 ;;		___ftpack
 11452 ;; This function is called by:
 11453 ;;		_PID_Calculate
 11454 ;;		_main
 11455 ;;		_log
 11456 ;;		_eval_poly
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           
 11461                           ;psect for function ___ftmul
 11462  0E92                     ___ftmul:	
 11463                           
 11464                           ;incstack = 0
 11465                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11466  0E92  0020               	movlb	0	; select bank0
 11467  0E93  0820               	movf	___ftmul@f1,w
 11468  0E94  00A6               	movwf	??___ftmul
 11469  0E95  0821               	movf	___ftmul@f1+1,w
 11470  0E96  00A7               	movwf	??___ftmul+1
 11471  0E97  0822               	movf	___ftmul@f1+2,w
 11472  0E98  00A8               	movwf	??___ftmul+2
 11473  0E99  1003               	clrc
 11474  0E9A  0D27               	rlf	??___ftmul+1,w
 11475  0E9B  0D28               	rlf	??___ftmul+2,w
 11476  0E9C  00A9               	movwf	??___ftmul+3
 11477  0E9D  0829               	movf	??___ftmul+3,w
 11478  0E9E  00AA               	movwf	___ftmul@exp
 11479  0E9F  082A               	movf	___ftmul@exp,w
 11480  0EA0  1D03               	btfss	3,2
 11481  0EA1  2EA9               	goto	l2373
 11482  0EA2  3000               	movlw	0
 11483  0EA3  00A0               	movwf	?___ftmul
 11484  0EA4  3000               	movlw	0
 11485  0EA5  00A1               	movwf	?___ftmul+1
 11486  0EA6  3000               	movlw	0
 11487  0EA7  00A2               	movwf	?___ftmul+2
 11488  0EA8  0008               	return
 11489  0EA9                     l2373:	
 11490  0EA9  0823               	movf	___ftmul@f2,w
 11491  0EAA  00A6               	movwf	??___ftmul
 11492  0EAB  0824               	movf	___ftmul@f2+1,w
 11493  0EAC  00A7               	movwf	??___ftmul+1
 11494  0EAD  0825               	movf	___ftmul@f2+2,w
 11495  0EAE  00A8               	movwf	??___ftmul+2
 11496  0EAF  1003               	clrc
 11497  0EB0  0D27               	rlf	??___ftmul+1,w
 11498  0EB1  0D28               	rlf	??___ftmul+2,w
 11499  0EB2  00A9               	movwf	??___ftmul+3
 11500  0EB3  0829               	movf	??___ftmul+3,w
 11501  0EB4  00AF               	movwf	___ftmul@sign
 11502  0EB5  082F               	movf	___ftmul@sign,w
 11503  0EB6  1D03               	btfss	3,2
 11504  0EB7  2EBF               	goto	l2379
 11505  0EB8  3000               	movlw	0
 11506  0EB9  00A0               	movwf	?___ftmul
 11507  0EBA  3000               	movlw	0
 11508  0EBB  00A1               	movwf	?___ftmul+1
 11509  0EBC  3000               	movlw	0
 11510  0EBD  00A2               	movwf	?___ftmul+2
 11511  0EBE  0008               	return
 11512  0EBF                     l2379:	
 11513  0EBF  082F               	movf	___ftmul@sign,w
 11514  0EC0  3E7B               	addlw	123
 11515  0EC1  00A6               	movwf	??___ftmul
 11516  0EC2  0826               	movf	??___ftmul,w
 11517  0EC3  07AA               	addwf	___ftmul@exp,f
 11518  0EC4  0820               	movf	___ftmul@f1,w
 11519  0EC5  00A6               	movwf	??___ftmul
 11520  0EC6  0821               	movf	___ftmul@f1+1,w
 11521  0EC7  00A7               	movwf	??___ftmul+1
 11522  0EC8  0822               	movf	___ftmul@f1+2,w
 11523  0EC9  00A8               	movwf	??___ftmul+2
 11524  0ECA  3010               	movlw	16
 11525  0ECB                     u2485:	
 11526  0ECB  36A8               	lsrf	??___ftmul+2,f
 11527  0ECC  0CA7               	rrf	??___ftmul+1,f
 11528  0ECD  0CA6               	rrf	??___ftmul,f
 11529  0ECE  0B89               	decfsz	9,f
 11530  0ECF  2ECB               	goto	u2485
 11531  0ED0  0826               	movf	??___ftmul,w
 11532  0ED1  00A9               	movwf	??___ftmul+3
 11533  0ED2  0829               	movf	??___ftmul+3,w
 11534  0ED3  00AF               	movwf	___ftmul@sign
 11535  0ED4  0823               	movf	___ftmul@f2,w
 11536  0ED5  00A6               	movwf	??___ftmul
 11537  0ED6  0824               	movf	___ftmul@f2+1,w
 11538  0ED7  00A7               	movwf	??___ftmul+1
 11539  0ED8  0825               	movf	___ftmul@f2+2,w
 11540  0ED9  00A8               	movwf	??___ftmul+2
 11541  0EDA  3010               	movlw	16
 11542  0EDB                     u2495:	
 11543  0EDB  36A8               	lsrf	??___ftmul+2,f
 11544  0EDC  0CA7               	rrf	??___ftmul+1,f
 11545  0EDD  0CA6               	rrf	??___ftmul,f
 11546  0EDE  0B89               	decfsz	9,f
 11547  0EDF  2EDB               	goto	u2495
 11548  0EE0  0826               	movf	??___ftmul,w
 11549  0EE1  00A9               	movwf	??___ftmul+3
 11550  0EE2  0829               	movf	??___ftmul+3,w
 11551  0EE3  06AF               	xorwf	___ftmul@sign,f
 11552  0EE4  3080               	movlw	128
 11553  0EE5  00A6               	movwf	??___ftmul
 11554  0EE6  0826               	movf	??___ftmul,w
 11555  0EE7  05AF               	andwf	___ftmul@sign,f
 11556  0EE8  17A1               	bsf	___ftmul@f1+1,7
 11557  0EE9  17A4               	bsf	___ftmul@f2+1,7
 11558  0EEA  30FF               	movlw	255
 11559  0EEB  05A3               	andwf	___ftmul@f2,f
 11560  0EEC  30FF               	movlw	255
 11561  0EED  05A4               	andwf	___ftmul@f2+1,f
 11562  0EEE  3000               	movlw	0
 11563  0EEF  05A5               	andwf	___ftmul@f2+2,f
 11564  0EF0  3000               	movlw	0
 11565  0EF1  00AB               	movwf	___ftmul@f3_as_product
 11566  0EF2  3000               	movlw	0
 11567  0EF3  00AC               	movwf	___ftmul@f3_as_product+1
 11568  0EF4  3000               	movlw	0
 11569  0EF5  00AD               	movwf	___ftmul@f3_as_product+2
 11570  0EF6  3007               	movlw	7
 11571  0EF7  00A6               	movwf	??___ftmul
 11572  0EF8  0826               	movf	??___ftmul,w
 11573  0EF9  00AE               	movwf	___ftmul@cntr
 11574  0EFA                     l2391:	
 11575  0EFA  1C20               	btfss	___ftmul@f1,0
 11576  0EFB  2F02               	goto	l2395
 11577  0EFC  0823               	movf	___ftmul@f2,w
 11578  0EFD  07AB               	addwf	___ftmul@f3_as_product,f
 11579  0EFE  0824               	movf	___ftmul@f2+1,w
 11580  0EFF  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11581  0F00  0825               	movf	___ftmul@f2+2,w
 11582  0F01  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11583  0F02                     l2395:	
 11584  0F02  3001               	movlw	1
 11585  0F03                     u2515:	
 11586  0F03  36A2               	lsrf	___ftmul@f1+2,f
 11587  0F04  0CA1               	rrf	___ftmul@f1+1,f
 11588  0F05  0CA0               	rrf	___ftmul@f1,f
 11589  0F06  0B89               	decfsz	9,f
 11590  0F07  2F03               	goto	u2515
 11591  0F08  3001               	movlw	1
 11592  0F09                     u2525:	
 11593  0F09  35A3               	lslf	___ftmul@f2,f
 11594  0F0A  0DA4               	rlf	___ftmul@f2+1,f
 11595  0F0B  0DA5               	rlf	___ftmul@f2+2,f
 11596  0F0C  0B89               	decfsz	9,f
 11597  0F0D  2F09               	goto	u2525
 11598  0F0E  3001               	movlw	1
 11599  0F0F  02AE               	subwf	___ftmul@cntr,f
 11600  0F10  1D03               	btfss	3,2
 11601  0F11  2EFA               	goto	l2391
 11602  0F12  3009               	movlw	9
 11603  0F13  00A6               	movwf	??___ftmul
 11604  0F14  0826               	movf	??___ftmul,w
 11605  0F15  00AE               	movwf	___ftmul@cntr
 11606  0F16                     l2403:	
 11607  0F16  1C20               	btfss	___ftmul@f1,0
 11608  0F17  2F1E               	goto	l2407
 11609  0F18  0823               	movf	___ftmul@f2,w
 11610  0F19  07AB               	addwf	___ftmul@f3_as_product,f
 11611  0F1A  0824               	movf	___ftmul@f2+1,w
 11612  0F1B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 11613  0F1C  0825               	movf	___ftmul@f2+2,w
 11614  0F1D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 11615  0F1E                     l2407:	
 11616  0F1E  3001               	movlw	1
 11617  0F1F                     u2555:	
 11618  0F1F  36A2               	lsrf	___ftmul@f1+2,f
 11619  0F20  0CA1               	rrf	___ftmul@f1+1,f
 11620  0F21  0CA0               	rrf	___ftmul@f1,f
 11621  0F22  0B89               	decfsz	9,f
 11622  0F23  2F1F               	goto	u2555
 11623  0F24  3001               	movlw	1
 11624  0F25                     u2565:	
 11625  0F25  36AD               	lsrf	___ftmul@f3_as_product+2,f
 11626  0F26  0CAC               	rrf	___ftmul@f3_as_product+1,f
 11627  0F27  0CAB               	rrf	___ftmul@f3_as_product,f
 11628  0F28  0B89               	decfsz	9,f
 11629  0F29  2F25               	goto	u2565
 11630  0F2A  3001               	movlw	1
 11631  0F2B  02AE               	subwf	___ftmul@cntr,f
 11632  0F2C  1D03               	btfss	3,2
 11633  0F2D  2F16               	goto	l2403
 11634  0F2E  082B               	movf	___ftmul@f3_as_product,w
 11635  0F2F  00F0               	movwf	___ftpack@arg
 11636  0F30  082C               	movf	___ftmul@f3_as_product+1,w
 11637  0F31  00F1               	movwf	___ftpack@arg+1
 11638  0F32  082D               	movf	___ftmul@f3_as_product+2,w
 11639  0F33  00F2               	movwf	___ftpack@arg+2
 11640  0F34  082A               	movf	___ftmul@exp,w
 11641  0F35  00A6               	movwf	??___ftmul
 11642  0F36  0826               	movf	??___ftmul,w
 11643  0F37  00F3               	movwf	___ftpack@exp
 11644  0F38  082F               	movf	___ftmul@sign,w
 11645  0F39  00A7               	movwf	??___ftmul+1
 11646  0F3A  0827               	movf	??___ftmul+1,w
 11647  0F3B  00F4               	movwf	___ftpack@sign
 11648  0F3C  3180  200C         	fcall	___ftpack
 11649  0F3E  0870               	movf	?___ftpack,w
 11650  0F3F  0020               	movlb	0	; select bank0
 11651  0F40  00A0               	movwf	?___ftmul
 11652  0F41  0871               	movf	?___ftpack+1,w
 11653  0F42  00A1               	movwf	?___ftmul+1
 11654  0F43  0872               	movf	?___ftpack+2,w
 11655  0F44  00A2               	movwf	?___ftmul+2
 11656  0F45  0008               	return
 11657  0F46                     __end_of___ftmul:	
 11658                           
 11659                           	psect	text37
 11660  0987                     __ptext37:	
 11661 ;; *************** function ___ftge *****************
 11662 ;; Defined at:
 11663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;  ff1             3   29[BANK0 ] float 
 11666 ;;  ff2             3   32[BANK0 ] float 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;		None
 11669 ;; Return value:  Size  Location     Type
 11670 ;;		None               void
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, status,0
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11678 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11680 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;Total ram usage:        9 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; This function calls:
 11685 ;;		Nothing
 11686 ;; This function is called by:
 11687 ;;		_PID_Calculate
 11688 ;;		_main
 11689 ;;		_log
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           
 11694                           ;psect for function ___ftge
 11695  0987                     ___ftge:	
 11696                           
 11697                           ;incstack = 0
 11698                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 11699  0987  0020               	movlb	0	; select bank0
 11700  0988  1FBF               	btfss	___ftge@ff1+2,7
 11701  0989  299E               	goto	l2655
 11702  098A  093D               	comf	___ftge@ff1,w
 11703  098B  00C3               	movwf	??___ftge
 11704  098C  093E               	comf	___ftge@ff1+1,w
 11705  098D  00C4               	movwf	??___ftge+1
 11706  098E  093F               	comf	___ftge@ff1+2,w
 11707  098F  00C5               	movwf	??___ftge+2
 11708  0990  0AC3               	incf	??___ftge,f
 11709  0991  1903               	skipnz
 11710  0992  0AC4               	incf	??___ftge+1,f
 11711  0993  1903               	skipnz
 11712  0994  0AC5               	incf	??___ftge+2,f
 11713  0995  3000               	movlw	0
 11714  0996  0743               	addwf	??___ftge,w
 11715  0997  00BD               	movwf	___ftge@ff1
 11716  0998  3000               	movlw	0
 11717  0999  3D44               	addwfc	??___ftge+1,w
 11718  099A  00BE               	movwf	___ftge@ff1+1
 11719  099B  3080               	movlw	128
 11720  099C  3D45               	addwfc	??___ftge+2,w
 11721  099D  00BF               	movwf	___ftge@ff1+2
 11722  099E                     l2655:	
 11723  099E  1FC2               	btfss	___ftge@ff2+2,7
 11724  099F  29B4               	goto	l2659
 11725  09A0  0940               	comf	___ftge@ff2,w
 11726  09A1  00C3               	movwf	??___ftge
 11727  09A2  0941               	comf	___ftge@ff2+1,w
 11728  09A3  00C4               	movwf	??___ftge+1
 11729  09A4  0942               	comf	___ftge@ff2+2,w
 11730  09A5  00C5               	movwf	??___ftge+2
 11731  09A6  0AC3               	incf	??___ftge,f
 11732  09A7  1903               	skipnz
 11733  09A8  0AC4               	incf	??___ftge+1,f
 11734  09A9  1903               	skipnz
 11735  09AA  0AC5               	incf	??___ftge+2,f
 11736  09AB  3000               	movlw	0
 11737  09AC  0743               	addwf	??___ftge,w
 11738  09AD  00C0               	movwf	___ftge@ff2
 11739  09AE  3000               	movlw	0
 11740  09AF  3D44               	addwfc	??___ftge+1,w
 11741  09B0  00C1               	movwf	___ftge@ff2+1
 11742  09B1  3080               	movlw	128
 11743  09B2  3D45               	addwfc	??___ftge+2,w
 11744  09B3  00C2               	movwf	___ftge@ff2+2
 11745  09B4                     l2659:	
 11746  09B4  3080               	movlw	128
 11747  09B5  06BF               	xorwf	___ftge@ff1+2,f
 11748  09B6  3080               	movlw	128
 11749  09B7  06C2               	xorwf	___ftge@ff2+2,f
 11750  09B8  0842               	movf	___ftge@ff2+2,w
 11751  09B9  023F               	subwf	___ftge@ff1+2,w
 11752  09BA  1D03               	skipz
 11753  09BB  0008               	return
 11754  09BC  0841               	movf	___ftge@ff2+1,w
 11755  09BD  023E               	subwf	___ftge@ff1+1,w
 11756  09BE  1D03               	skipz
 11757  09BF  0008               	return
 11758  09C0  0840               	movf	___ftge@ff2,w
 11759  09C1  023D               	subwf	___ftge@ff1,w
 11760  09C2  0008               	return
 11761  09C3                     __end_of___ftge:	
 11762                           
 11763                           	psect	text38
 11764  0139                     __ptext38:	
 11765 ;; *************** function ___ftadd *****************
 11766 ;; Defined at:
 11767 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  f1              3   16[BANK0 ] float 
 11770 ;;  f2              3   19[BANK0 ] float 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;  exp1            1   28[BANK0 ] unsigned char 
 11773 ;;  exp2            1   27[BANK0 ] unsigned char 
 11774 ;;  sign            1   26[BANK0 ] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  3   16[BANK0 ] float 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2, status,0, pclath, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11784 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;Total ram usage:       13 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    1
 11791 ;; This function calls:
 11792 ;;		___ftpack
 11793 ;; This function is called by:
 11794 ;;		_PID_Calculate
 11795 ;;		_main
 11796 ;;		___ftsub
 11797 ;;		_log
 11798 ;;		_eval_poly
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           
 11803                           ;psect for function ___ftadd
 11804  0139                     ___ftadd:	
 11805                           
 11806                           ;incstack = 0
 11807                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11808  0139  0020               	movlb	0	; select bank0
 11809  013A  0830               	movf	___ftadd@f1,w
 11810  013B  00B6               	movwf	??___ftadd
 11811  013C  0831               	movf	___ftadd@f1+1,w
 11812  013D  00B7               	movwf	??___ftadd+1
 11813  013E  0832               	movf	___ftadd@f1+2,w
 11814  013F  00B8               	movwf	??___ftadd+2
 11815  0140  1003               	clrc
 11816  0141  0D37               	rlf	??___ftadd+1,w
 11817  0142  0D38               	rlf	??___ftadd+2,w
 11818  0143  00B9               	movwf	??___ftadd+3
 11819  0144  0839               	movf	??___ftadd+3,w
 11820  0145  00BC               	movwf	___ftadd@exp1
 11821  0146  0833               	movf	___ftadd@f2,w
 11822  0147  00B6               	movwf	??___ftadd
 11823  0148  0834               	movf	___ftadd@f2+1,w
 11824  0149  00B7               	movwf	??___ftadd+1
 11825  014A  0835               	movf	___ftadd@f2+2,w
 11826  014B  00B8               	movwf	??___ftadd+2
 11827  014C  1003               	clrc
 11828  014D  0D37               	rlf	??___ftadd+1,w
 11829  014E  0D38               	rlf	??___ftadd+2,w
 11830  014F  00B9               	movwf	??___ftadd+3
 11831  0150  0839               	movf	??___ftadd+3,w
 11832  0151  00BB               	movwf	___ftadd@exp2
 11833  0152  083C               	movf	___ftadd@exp1,w
 11834  0153  1903               	btfsc	3,2
 11835  0154  2961               	goto	l2303
 11836  0155  083B               	movf	___ftadd@exp2,w
 11837  0156  023C               	subwf	___ftadd@exp1,w
 11838  0157  1803               	skipnc
 11839  0158  2968               	goto	l2307
 11840  0159  033C               	decf	___ftadd@exp1,w
 11841  015A  3AFF               	xorlw	255
 11842  015B  073B               	addwf	___ftadd@exp2,w
 11843  015C  00B6               	movwf	??___ftadd
 11844  015D  3019               	movlw	25
 11845  015E  0236               	subwf	??___ftadd,w
 11846  015F  1C03               	skipc
 11847  0160  2968               	goto	l2307
 11848  0161                     l2303:	
 11849  0161  0833               	movf	___ftadd@f2,w
 11850  0162  00B0               	movwf	?___ftadd
 11851  0163  0834               	movf	___ftadd@f2+1,w
 11852  0164  00B1               	movwf	?___ftadd+1
 11853  0165  0835               	movf	___ftadd@f2+2,w
 11854  0166  00B2               	movwf	?___ftadd+2
 11855  0167  0008               	return
 11856  0168                     l2307:	
 11857  0168  083B               	movf	___ftadd@exp2,w
 11858  0169  1903               	btfsc	3,2
 11859  016A  0008               	return
 11860  016B  083C               	movf	___ftadd@exp1,w
 11861  016C  023B               	subwf	___ftadd@exp2,w
 11862  016D  1803               	skipnc
 11863  016E  2977               	goto	l2313
 11864  016F  033B               	decf	___ftadd@exp2,w
 11865  0170  3AFF               	xorlw	255
 11866  0171  073C               	addwf	___ftadd@exp1,w
 11867  0172  00B6               	movwf	??___ftadd
 11868  0173  3019               	movlw	25
 11869  0174  0236               	subwf	??___ftadd,w
 11870  0175  1803               	btfsc	3,0
 11871  0176  0008               	return
 11872  0177                     l2313:	
 11873  0177  3006               	movlw	6
 11874  0178  00B6               	movwf	??___ftadd
 11875  0179  0836               	movf	??___ftadd,w
 11876  017A  00BA               	movwf	___ftadd@sign
 11877  017B  1BB2               	btfsc	___ftadd@f1+2,7
 11878  017C  17BA               	bsf	___ftadd@sign,7
 11879  017D  1BB5               	btfsc	___ftadd@f2+2,7
 11880  017E  173A               	bsf	___ftadd@sign,6
 11881  017F  17B1               	bsf	___ftadd@f1+1,7
 11882  0180  30FF               	movlw	255
 11883  0181  05B0               	andwf	___ftadd@f1,f
 11884  0182  30FF               	movlw	255
 11885  0183  05B1               	andwf	___ftadd@f1+1,f
 11886  0184  3000               	movlw	0
 11887  0185  05B2               	andwf	___ftadd@f1+2,f
 11888  0186  17B4               	bsf	___ftadd@f2+1,7
 11889  0187  30FF               	movlw	255
 11890  0188  05B3               	andwf	___ftadd@f2,f
 11891  0189  30FF               	movlw	255
 11892  018A  05B4               	andwf	___ftadd@f2+1,f
 11893  018B  3000               	movlw	0
 11894  018C  05B5               	andwf	___ftadd@f2+2,f
 11895  018D  083B               	movf	___ftadd@exp2,w
 11896  018E  023C               	subwf	___ftadd@exp1,w
 11897  018F  1803               	skipnc
 11898  0190  29B3               	goto	l2335
 11899  0191                     l2325:	
 11900  0191  3001               	movlw	1
 11901  0192                     u2325:	
 11902  0192  35B3               	lslf	___ftadd@f2,f
 11903  0193  0DB4               	rlf	___ftadd@f2+1,f
 11904  0194  0DB5               	rlf	___ftadd@f2+2,f
 11905  0195  0B89               	decfsz	9,f
 11906  0196  2992               	goto	u2325
 11907  0197  3001               	movlw	1
 11908  0198  02BB               	subwf	___ftadd@exp2,f
 11909  0199  083B               	movf	___ftadd@exp2,w
 11910  019A  063C               	xorwf	___ftadd@exp1,w
 11911  019B  1903               	skipnz
 11912  019C  29AE               	goto	l2333
 11913  019D  3001               	movlw	1
 11914  019E  02BA               	subwf	___ftadd@sign,f
 11915  019F  083A               	movf	___ftadd@sign,w
 11916  01A0  3907               	andlw	7
 11917  01A1  1903               	btfsc	3,2
 11918  01A2  29AE               	goto	l2333
 11919  01A3  2991               	goto	l2325
 11920  01A4                     l2331:	
 11921  01A4  3001               	movlw	1
 11922  01A5                     u2355:	
 11923  01A5  36B2               	lsrf	___ftadd@f1+2,f
 11924  01A6  0CB1               	rrf	___ftadd@f1+1,f
 11925  01A7  0CB0               	rrf	___ftadd@f1,f
 11926  01A8  0B89               	decfsz	9,f
 11927  01A9  29A5               	goto	u2355
 11928  01AA  3001               	movlw	1
 11929  01AB  00B6               	movwf	??___ftadd
 11930  01AC  0836               	movf	??___ftadd,w
 11931  01AD  07BC               	addwf	___ftadd@exp1,f
 11932  01AE                     l2333:	
 11933  01AE  083C               	movf	___ftadd@exp1,w
 11934  01AF  063B               	xorwf	___ftadd@exp2,w
 11935  01B0  1903               	btfsc	3,2
 11936  01B1  29D8               	goto	l681
 11937  01B2  29A4               	goto	l2331
 11938  01B3                     l2335:	
 11939  01B3  083C               	movf	___ftadd@exp1,w
 11940  01B4  023B               	subwf	___ftadd@exp2,w
 11941  01B5  1803               	skipnc
 11942  01B6  29D8               	goto	l681
 11943  01B7                     l2337:	
 11944  01B7  3001               	movlw	1
 11945  01B8                     u2385:	
 11946  01B8  35B0               	lslf	___ftadd@f1,f
 11947  01B9  0DB1               	rlf	___ftadd@f1+1,f
 11948  01BA  0DB2               	rlf	___ftadd@f1+2,f
 11949  01BB  0B89               	decfsz	9,f
 11950  01BC  29B8               	goto	u2385
 11951  01BD  3001               	movlw	1
 11952  01BE  02BC               	subwf	___ftadd@exp1,f
 11953  01BF  083B               	movf	___ftadd@exp2,w
 11954  01C0  063C               	xorwf	___ftadd@exp1,w
 11955  01C1  1903               	skipnz
 11956  01C2  29D4               	goto	l2345
 11957  01C3  3001               	movlw	1
 11958  01C4  02BA               	subwf	___ftadd@sign,f
 11959  01C5  083A               	movf	___ftadd@sign,w
 11960  01C6  3907               	andlw	7
 11961  01C7  1903               	btfsc	3,2
 11962  01C8  29D4               	goto	l2345
 11963  01C9  29B7               	goto	l2337
 11964  01CA                     l2343:	
 11965  01CA  3001               	movlw	1
 11966  01CB                     u2415:	
 11967  01CB  36B5               	lsrf	___ftadd@f2+2,f
 11968  01CC  0CB4               	rrf	___ftadd@f2+1,f
 11969  01CD  0CB3               	rrf	___ftadd@f2,f
 11970  01CE  0B89               	decfsz	9,f
 11971  01CF  29CB               	goto	u2415
 11972  01D0  3001               	movlw	1
 11973  01D1  00B6               	movwf	??___ftadd
 11974  01D2  0836               	movf	??___ftadd,w
 11975  01D3  07BB               	addwf	___ftadd@exp2,f
 11976  01D4                     l2345:	
 11977  01D4  083C               	movf	___ftadd@exp1,w
 11978  01D5  063B               	xorwf	___ftadd@exp2,w
 11979  01D6  1D03               	skipz
 11980  01D7  29CA               	goto	l2343
 11981  01D8                     l681:	
 11982  01D8  1FBA               	btfss	___ftadd@sign,7
 11983  01D9  29EA               	goto	l2349
 11984  01DA  30FF               	movlw	255
 11985  01DB  06B0               	xorwf	___ftadd@f1,f
 11986  01DC  30FF               	movlw	255
 11987  01DD  06B1               	xorwf	___ftadd@f1+1,f
 11988  01DE  30FF               	movlw	255
 11989  01DF  06B2               	xorwf	___ftadd@f1+2,f
 11990  01E0  3001               	movlw	1
 11991  01E1  07B0               	addwf	___ftadd@f1,f
 11992  01E2  3000               	movlw	0
 11993  01E3  1803               	skipnc
 11994  01E4  3001               	movlw	1
 11995  01E5  07B1               	addwf	___ftadd@f1+1,f
 11996  01E6  3000               	movlw	0
 11997  01E7  1803               	skipnc
 11998  01E8  3001               	movlw	1
 11999  01E9  07B2               	addwf	___ftadd@f1+2,f
 12000  01EA                     l2349:	
 12001  01EA  1F3A               	btfss	___ftadd@sign,6
 12002  01EB  29FC               	goto	l2353
 12003  01EC  30FF               	movlw	255
 12004  01ED  06B3               	xorwf	___ftadd@f2,f
 12005  01EE  30FF               	movlw	255
 12006  01EF  06B4               	xorwf	___ftadd@f2+1,f
 12007  01F0  30FF               	movlw	255
 12008  01F1  06B5               	xorwf	___ftadd@f2+2,f
 12009  01F2  3001               	movlw	1
 12010  01F3  07B3               	addwf	___ftadd@f2,f
 12011  01F4  3000               	movlw	0
 12012  01F5  1803               	skipnc
 12013  01F6  3001               	movlw	1
 12014  01F7  07B4               	addwf	___ftadd@f2+1,f
 12015  01F8  3000               	movlw	0
 12016  01F9  1803               	skipnc
 12017  01FA  3001               	movlw	1
 12018  01FB  07B5               	addwf	___ftadd@f2+2,f
 12019  01FC                     l2353:	
 12020  01FC  01BA               	clrf	___ftadd@sign
 12021  01FD  0830               	movf	___ftadd@f1,w
 12022  01FE  07B3               	addwf	___ftadd@f2,f
 12023  01FF  0831               	movf	___ftadd@f1+1,w
 12024  0200  3DB4               	addwfc	___ftadd@f2+1,f
 12025  0201  0832               	movf	___ftadd@f1+2,w
 12026  0202  3DB5               	addwfc	___ftadd@f2+2,f
 12027  0203  1FB5               	btfss	___ftadd@f2+2,7
 12028  0204  2A17               	goto	l2363
 12029  0205  30FF               	movlw	255
 12030  0206  06B3               	xorwf	___ftadd@f2,f
 12031  0207  30FF               	movlw	255
 12032  0208  06B4               	xorwf	___ftadd@f2+1,f
 12033  0209  30FF               	movlw	255
 12034  020A  06B5               	xorwf	___ftadd@f2+2,f
 12035  020B  3001               	movlw	1
 12036  020C  07B3               	addwf	___ftadd@f2,f
 12037  020D  3000               	movlw	0
 12038  020E  1803               	skipnc
 12039  020F  3001               	movlw	1
 12040  0210  07B4               	addwf	___ftadd@f2+1,f
 12041  0211  3000               	movlw	0
 12042  0212  1803               	skipnc
 12043  0213  3001               	movlw	1
 12044  0214  07B5               	addwf	___ftadd@f2+2,f
 12045  0215  01BA               	clrf	___ftadd@sign
 12046  0216  0ABA               	incf	___ftadd@sign,f
 12047  0217                     l2363:	
 12048  0217  0833               	movf	___ftadd@f2,w
 12049  0218  00F0               	movwf	___ftpack@arg
 12050  0219  0834               	movf	___ftadd@f2+1,w
 12051  021A  00F1               	movwf	___ftpack@arg+1
 12052  021B  0835               	movf	___ftadd@f2+2,w
 12053  021C  00F2               	movwf	___ftpack@arg+2
 12054  021D  083C               	movf	___ftadd@exp1,w
 12055  021E  00B6               	movwf	??___ftadd
 12056  021F  0836               	movf	??___ftadd,w
 12057  0220  00F3               	movwf	___ftpack@exp
 12058  0221  083A               	movf	___ftadd@sign,w
 12059  0222  00B7               	movwf	??___ftadd+1
 12060  0223  0837               	movf	??___ftadd+1,w
 12061  0224  00F4               	movwf	___ftpack@sign
 12062  0225  3180  200C         	fcall	___ftpack
 12063  0227  0870               	movf	?___ftpack,w
 12064  0228  0020               	movlb	0	; select bank0
 12065  0229  00B0               	movwf	?___ftadd
 12066  022A  0871               	movf	?___ftpack+1,w
 12067  022B  00B1               	movwf	?___ftadd+1
 12068  022C  0872               	movf	?___ftpack+2,w
 12069  022D  00B2               	movwf	?___ftadd+2
 12070  022E  0008               	return
 12071  022F                     __end_of___ftadd:	
 12072                           
 12073                           	psect	text39
 12074  084E                     __ptext39:	
 12075 ;; *************** function ___awtoft *****************
 12076 ;; Defined at:
 12077 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  c               2    8[COMMON] int 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;  sign            1   13[COMMON] unsigned char 
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  3    8[COMMON] float 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0, pclath, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;Total ram usage:        6 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    1
 12098 ;; This function calls:
 12099 ;;		___ftpack
 12100 ;; This function is called by:
 12101 ;;		_PID_Calculate
 12102 ;;		_log
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           
 12107                           ;psect for function ___awtoft
 12108  084E                     ___awtoft:	
 12109                           
 12110                           ;incstack = 0
 12111                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 12112  084E  01FD               	clrf	___awtoft@sign
 12113  084F  1FF9               	btfss	___awtoft@c+1,7
 12114  0850  2858               	goto	l2647
 12115  0851  09F8               	comf	___awtoft@c,f
 12116  0852  09F9               	comf	___awtoft@c+1,f
 12117  0853  0AF8               	incf	___awtoft@c,f
 12118  0854  1903               	skipnz
 12119  0855  0AF9               	incf	___awtoft@c+1,f
 12120  0856  01FD               	clrf	___awtoft@sign
 12121  0857  0AFD               	incf	___awtoft@sign,f
 12122  0858                     l2647:	
 12123  0858  0878               	movf	___awtoft@c,w
 12124  0859  00F0               	movwf	___ftpack@arg
 12125  085A  0879               	movf	___awtoft@c+1,w
 12126  085B  00F1               	movwf	___ftpack@arg+1
 12127  085C  01F2               	clrf	___ftpack@arg+2
 12128  085D  308E               	movlw	142
 12129  085E  00FB               	movwf	??___awtoft
 12130  085F  087B               	movf	??___awtoft,w
 12131  0860  00F3               	movwf	___ftpack@exp
 12132  0861  087D               	movf	___awtoft@sign,w
 12133  0862  00FC               	movwf	??___awtoft+1
 12134  0863  087C               	movf	??___awtoft+1,w
 12135  0864  00F4               	movwf	___ftpack@sign
 12136  0865  3180  200C         	fcall	___ftpack
 12137  0867  0870               	movf	?___ftpack,w
 12138  0868  00F8               	movwf	?___awtoft
 12139  0869  0871               	movf	?___ftpack+1,w
 12140  086A  00F9               	movwf	?___awtoft+1
 12141  086B  0872               	movf	?___ftpack+2,w
 12142  086C  00FA               	movwf	?___awtoft+2
 12143  086D  0008               	return
 12144  086E                     __end_of___awtoft:	
 12145                           
 12146                           	psect	text40
 12147  000C                     __ptext40:	
 12148 ;; *************** function ___ftpack *****************
 12149 ;; Defined at:
 12150 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  arg             3    0[COMMON] unsigned um
 12153 ;;  exp             1    3[COMMON] unsigned char 
 12154 ;;  sign            1    4[COMMON] unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;		None
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  3    0[COMMON] float 
 12159 ;; Registers used:
 12160 ;;		wreg, status,2, status,0
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12166 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;Total ram usage:        8 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; This function calls:
 12173 ;;		Nothing
 12174 ;; This function is called by:
 12175 ;;		___awtoft
 12176 ;;		___ftadd
 12177 ;;		___ftdiv
 12178 ;;		___ftmul
 12179 ;;		___lbtoft
 12180 ;;		___lwtoft
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           
 12185                           ;psect for function ___ftpack
 12186  000C                     ___ftpack:	
 12187                           
 12188                           ;incstack = 0
 12189                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12190  000C  0873               	movf	___ftpack@exp,w
 12191  000D  1903               	btfsc	3,2
 12192  000E  2814               	goto	l2093
 12193  000F  0872               	movf	___ftpack@arg+2,w
 12194  0010  0471               	iorwf	___ftpack@arg+1,w
 12195  0011  0470               	iorwf	___ftpack@arg,w
 12196  0012  1D03               	skipz
 12197  0013  2825               	goto	l2099
 12198  0014                     l2093:	
 12199  0014  3000               	movlw	0
 12200  0015  00F0               	movwf	?___ftpack
 12201  0016  3000               	movlw	0
 12202  0017  00F1               	movwf	?___ftpack+1
 12203  0018  3000               	movlw	0
 12204  0019  00F2               	movwf	?___ftpack+2
 12205  001A  0008               	return
 12206  001B                     l2097:	
 12207  001B  3001               	movlw	1
 12208  001C  00F5               	movwf	??___ftpack
 12209  001D  0875               	movf	??___ftpack,w
 12210  001E  07F3               	addwf	___ftpack@exp,f
 12211  001F  3001               	movlw	1
 12212  0020                     u1765:	
 12213  0020  36F2               	lsrf	___ftpack@arg+2,f
 12214  0021  0CF1               	rrf	___ftpack@arg+1,f
 12215  0022  0CF0               	rrf	___ftpack@arg,f
 12216  0023  0B89               	decfsz	9,f
 12217  0024  2820               	goto	u1765
 12218  0025                     l2099:	
 12219  0025  30FE               	movlw	254
 12220  0026  0572               	andwf	___ftpack@arg+2,w
 12221  0027  1903               	btfsc	3,2
 12222  0028  283E               	goto	l650
 12223  0029  281B               	goto	l2097
 12224  002A                     l2101:	
 12225  002A  3001               	movlw	1
 12226  002B  00F5               	movwf	??___ftpack
 12227  002C  0875               	movf	??___ftpack,w
 12228  002D  07F3               	addwf	___ftpack@exp,f
 12229  002E  3001               	movlw	1
 12230  002F  07F0               	addwf	___ftpack@arg,f
 12231  0030  3000               	movlw	0
 12232  0031  1803               	skipnc
 12233  0032  3001               	movlw	1
 12234  0033  07F1               	addwf	___ftpack@arg+1,f
 12235  0034  3000               	movlw	0
 12236  0035  1803               	skipnc
 12237  0036  3001               	movlw	1
 12238  0037  07F2               	addwf	___ftpack@arg+2,f
 12239  0038  3001               	movlw	1
 12240  0039                     u1785:	
 12241  0039  36F2               	lsrf	___ftpack@arg+2,f
 12242  003A  0CF1               	rrf	___ftpack@arg+1,f
 12243  003B  0CF0               	rrf	___ftpack@arg,f
 12244  003C  0B89               	decfsz	9,f
 12245  003D  2839               	goto	u1785
 12246  003E                     l650:	
 12247  003E  30FF               	movlw	255
 12248  003F  0572               	andwf	___ftpack@arg+2,w
 12249  0040  1903               	btfsc	3,2
 12250  0041  284B               	goto	l2109
 12251  0042  282A               	goto	l2101
 12252  0043                     l2107:	
 12253  0043  3001               	movlw	1
 12254  0044  02F3               	subwf	___ftpack@exp,f
 12255  0045  3001               	movlw	1
 12256  0046                     u1805:	
 12257  0046  35F0               	lslf	___ftpack@arg,f
 12258  0047  0DF1               	rlf	___ftpack@arg+1,f
 12259  0048  0DF2               	rlf	___ftpack@arg+2,f
 12260  0049  0B89               	decfsz	9,f
 12261  004A  2846               	goto	u1805
 12262  004B                     l2109:	
 12263  004B  1BF1               	btfsc	___ftpack@arg+1,7
 12264  004C  2851               	goto	l657
 12265  004D  3002               	movlw	2
 12266  004E  0273               	subwf	___ftpack@exp,w
 12267  004F  1803               	skipnc
 12268  0050  2843               	goto	l2107
 12269  0051                     l657:	
 12270  0051  1873               	btfsc	___ftpack@exp,0
 12271  0052  2859               	goto	l658
 12272  0053  30FF               	movlw	255
 12273  0054  05F0               	andwf	___ftpack@arg,f
 12274  0055  307F               	movlw	127
 12275  0056  05F1               	andwf	___ftpack@arg+1,f
 12276  0057  30FF               	movlw	255
 12277  0058  05F2               	andwf	___ftpack@arg+2,f
 12278  0059                     l658:	
 12279  0059  1003               	clrc
 12280  005A  0CF3               	rrf	___ftpack@exp,f
 12281  005B  0873               	movf	___ftpack@exp,w
 12282  005C  00F5               	movwf	??___ftpack
 12283  005D  01F6               	clrf	??___ftpack+1
 12284  005E  01F7               	clrf	??___ftpack+2
 12285  005F  3010               	movlw	16
 12286  0060                     u1845:	
 12287  0060  35F5               	lslf	??___ftpack,f
 12288  0061  0DF6               	rlf	??___ftpack+1,f
 12289  0062  0DF7               	rlf	??___ftpack+2,f
 12290  0063  0B89               	decfsz	9,f
 12291  0064  2860               	goto	u1845
 12292  0065  0875               	movf	??___ftpack,w
 12293  0066  04F0               	iorwf	___ftpack@arg,f
 12294  0067  0876               	movf	??___ftpack+1,w
 12295  0068  04F1               	iorwf	___ftpack@arg+1,f
 12296  0069  0877               	movf	??___ftpack+2,w
 12297  006A  04F2               	iorwf	___ftpack@arg+2,f
 12298  006B  0874               	movf	___ftpack@sign,w
 12299  006C  1903               	btfsc	3,2
 12300  006D  0008               	return
 12301  006E  17F2               	bsf	___ftpack@arg+2,7
 12302  006F  0008               	return
 12303  0070                     __end_of___ftpack:	
 12304                           
 12305                           	psect	text41
 12306  172F                     __ptext41:	
 12307 ;; *************** function _ADCC_GetSingleConversion *****************
 12308 ;; Defined at:
 12309 ;;		line 52 in file "adcc.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  channel         1    wreg     enum E13559
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;  channel         1    3[COMMON] enum E13559
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  2    0[COMMON] unsigned int 
 12316 ;; Registers used:
 12317 ;;		wreg
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12323 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;Total ram usage:        4 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_main
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _ADCC_GetSingleConversion
 12338  172F                     _ADCC_GetSingleConversion:	
 12339                           
 12340                           ;incstack = 0
 12341                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12342                           ;ADCC_GetSingleConversion@channel stored from wreg
 12343  172F  00F3               	movwf	ADCC_GetSingleConversion@channel
 12344                           
 12345                           ;adcc.c: 55: ADPCH = channel;
 12346  1730  0873               	movf	ADCC_GetSingleConversion@channel,w
 12347  1731  0021               	movlb	1	; select bank1
 12348  1732  009E               	movwf	30	;volatile
 12349                           
 12350                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 12351  1733  1793               	bsf	19,7	;volatile
 12352                           
 12353                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 12354  1734  1313               	bcf	19,6	;volatile
 12355                           
 12356                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 12357  1735  1413               	bsf	19,0	;volatile
 12358  1736                     l224:	
 12359                           ;adcc.c: 68: {
 12360                           
 12361                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 12362                           
 12363  1736  1813               	btfsc	19,0	;volatile
 12364  1737  2F36               	goto	l224
 12365                           
 12366                           ;adcc.c: 69: }
 12367                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 12368  1738  080D               	movf	13,w	;volatile
 12369  1739  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12370  173A  080C               	movf	12,w	;volatile
 12371  173B  00F0               	movwf	?_ADCC_GetSingleConversion
 12372  173C  0008               	return
 12373  173D                     __end_of_ADCC_GetSingleConversion:	
 12374  007E                     btemp	set	126	;btemp
 12375  007E                     wtemp	set	126
 12376  007E                     wtemp0	set	126
 12377  0080                     wtemp1	set	128
 12378  0082                     wtemp2	set	130
 12379  0084                     wtemp3	set	132
 12380  0086                     wtemp4	set	134
 12381  0088                     wtemp5	set	136
 12382  007F                     wtemp6	set	127
 12383  007E                     ttemp	set	126
 12384  007E                     ttemp0	set	126
 12385  0081                     ttemp1	set	129
 12386  0084                     ttemp2	set	132
 12387  0087                     ttemp3	set	135
 12388  007F                     ttemp4	set	127
 12389  007E                     ltemp	set	126
 12390  007E                     ltemp0	set	126
 12391  0082                     ltemp1	set	130
 12392  0086                     ltemp2	set	134
 12393  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        32
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80     30      74
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   68690
                                             60 BANK0     10    10      0
                                              0 BANK1     30    30      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18571
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7683
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4176
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        8     3      5   10770
                                             38 BANK0      8     3      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     297
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     958
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4003
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Sep 10 19:13:22 2017

                                _x 006C                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                     _PID_Prev_Error 00BA  
                   _PID_Prev_Input 00BD                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l111 1794  
                              l113 1799                                l107 1789  
                              l109 178F                                l224 1736  
                              l350 031B                                l351 03D2  
                              l349 02EC                                l544 0C41  
                              l650 003E                                l396 050E  
                              l741 0D1F                                l397 051A  
                              l657 0051                                l681 01D8  
                              l489 081D                                l658 0059  
                              _GIE 005F                                _RB0 0068  
                              _RB1 0069                                _RA3 0063  
                              _RB2 006A                                _RA4 0064  
                              _RB3 006B                                _RB4 006C  
                              _RB5 006D                       __CFG_CPD$OFF 0000  
                              _Err 00A8                                _log 0DE2  
                     ___awmod@sign 0076                    _TMR2_Initialize 174C  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 176D                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 09FF  
                     ___ftdiv@sign 002F                               l2101 002A  
                             l2107 0043                               l2051 1790  
                             l2109 004B                               l2303 0161  
                             l2055 1795                               l2047 178B  
                             l3015 093E                               l3007 0920  
                             l2215 0A1F                               l2135 0A98  
                             l2231 17E8                               l2313 0177  
                             l3009 092C                               l2161 0ACF  
                             l2153 0ABE                               l2145 0AA0  
                             l2129 0A8D                               l3105 06A3  
                             l2331 01A4                               l2307 0168  
                             l2403 0F16                               l3019 0947  
                             l2147 0AAC                               l2093 0014  
                             l2333 01AE                               l2325 0191  
                             l2157 0AC7                               l2173 0A48  
                             l2261 00C9                               l2245 0091  
                             l3045 0426                               l2343 01CA  
                             l2335 01B3                               l2407 0F1E  
                             l2191 0A6D                               l2263 00CE  
                             l2255 0098                               l3055 04D7  
                             l2097 001B                               l2353 01FC  
                             l2345 01D4                               l2337 01B7  
                             l2185 0A55                               l2177 0A4F  
                             l2273 00EC                               l2265 00D7  
                             l2257 00C5                               l3153 07B2  
                             l3145 0773                               l3137 075C  
                             l3073 0524                               l2099 0025  
                             l2363 0217                               l2187 0A61  
                             l2195 0A76                               l2275 0118  
                             l2267 00E8                               l3139 0764  
                             l3067 0502                               l2349 01EA  
                             l2373 0EA9                               l2285 0817  
                             l2391 0EFA                               l2199 0A7E  
                             l2279 0125                               l2705 0B2D  
                             l2395 0F02                               l2379 0EBF  
                             l2563 087B                               l2627 0C1E  
                             l2619 0C0E                               l2637 0C2E  
                             l2629 0C1F                               l2647 0858  
                             l2655 099E                               l2807 0FE6  
                             l2569 088C                               l2913 0D66  
                             l2659 09B4                               l2835 0400  
                             l2907 0D50                               l2851 0E14  
                             l2845 0E01                               l2781 0F9B  
                             l2871 0C52                               l2935 0DC0  
                             l2927 0DA7                               l2687 095E  
                             l2759 0F5C                               l2881 0C70  
                             l2947 0838                               l2787 0FA6  
                             l2779 0F4C                               l2893 0C9B  
                             l2957 0CCB                               l2879 0C62  
                             l2983 0D16                               l2975 0CFB  
                             l2897 0CA9                               l2889 0C90  
                             l2985 0D22                               l2977 0D09  
                             l2989 0D30                               ?_log 0047  
                             STR_1 101B                               STR_2 101B  
                             STR_3 101B                               STR_4 1025  
                             u2100 007B                               u2015 0A67  
                             u2025 0A6E                               u2205 081E  
                             _LATA 0016                               _LATB 0017  
                             u2215 0823                               _LATC 0018  
                             u3025 0D78                               u3105 0CD2  
                             u2065 0A0B                               u3035 0D88  
                             u2325 0192                               u3045 0DA8  
                             u3205 0923                               u2085 0A2A  
                             u2165 0106                               u2415 01CB  
                             u3055 0DB7                               u3135 0CFC  
                             u3065 0DC1                               u3225 092D  
                             u3305 0514                               _T2PR 028D  
                             u2355 01A5                               u2515 0F03  
                             u3235 0937                               u1805 0046  
                             u2525 0F09                               u3165 0D17  
                             u3245 093F                               u1735 08CC  
                             u3407 0C02                               u2385 01B8  
                             u3417 09DF                        main@counter 00D4  
                             u2555 0F1F                               u3507 0B81  
                             u3427 09EB                               u1915 0AAD  
                             u2580 0916                               u1845 0060  
                             u1765 0020                               u2565 0F25  
                             u2485 0ECB                               u3517 0B8E  
                             u3437 09F7                               u1925 0AB7  
                             u2495 0EDB                               u3527 0B9D  
                             u3447 0B3D                               u1935 0ABF  
                             u3295 0508                               u1785 0039  
                             u3537 0BAB                               u3457 0B4A  
                             u3377 0F92                               u3547 08D8  
                             u3467 0B55                               u3387 0FDE  
                             u3557 08E3                               u3477 0B5E  
                             u3397 0FF6                               u2775 177C  
                             u3567 1767                               u3487 0B67  
                             u2935 0C65                               u1895 0AA3  
                             u3497 0B74                               u2955 0C71  
                             u1995 0A58                               u2965 0C85  
                             u2975 0C91                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00CD                        main@seconds 00D1  
                             _main 040D                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             ltemp 007E                               start 0002  
               ??_LCD_Write_String 0077                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 0070                       ___ftmul@sign 002F  
                     ___fttol@exp1 005B                       ___fttol@lval 0057  
                            ??_log 004A            __end_of_TMR0_Initialize 174C  
                 __end_of_LCD_Init 0BAF                   __end_of_LCD_Port 179B  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 000C                    __end_of___aldiv 0CB2  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0AD4  
                            _ADPRE 009C                    __end_of___ftadd 022F  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0A83  
                            _ADRPT 010D                    __end_of___ftdiv 0DE2  
                  __end_of___ftneg 1702                    __end_of___ftmul 0F46  
                  ___awdiv@divisor 0070                    __end_of___ftsub 084E  
                  __end_of___fttol 0D39                              _T2CON 028E  
              main@readTemperature 00E0                              _T2HLT 028F  
                  __end_of___lwdiv 094C                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 1722             __end_of_LCD_Set_Cursor 0A3E  
                    ___awtoft@sign 007D                              _frexp 094C  
                            _errno 00C3                      ___ftpack@sign 0074  
                            main@R 00C7                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 08BC  
                  __initialization 07B9                        log@exponent 004B  
                     __end_of_main 07B9                   __end_of_Init_PID 08BC  
          __end_of_TMR2_Initialize 175B                             ??_main 005C  
                    ___fttol@sign1 0056                  __end_of_LCD_Clear 170A  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 086E  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0070  
                 __end_of___lbtoft 17E6                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0815  
                           _PID_Kd 00B1                             _PID_Ki 00B4  
                           _PID_Kp 00B7                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 08E6  
                   __CFG_PWRTE$OFF 0000                             _Result 00C0  
                     _CCPTMRS1bits 021F                             ___ftge 0987  
           LCD_Write_Int@numPlaces 007C                          ??___aldiv 0078  
                           ___wmul 0815                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0026  
                        ??___ftneg 0073                          ??___ftmul 0026  
                        ??___ftsub 007E                          ??___fttol 0052  
                        ??___lwdiv 007A                   ?_TMR0_Initialize 0070  
          __end_of_PWM6_Initialize 172F                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
            ___ftmul@f3_as_product 002B                    _ADCC_Initialize 17B3  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                 LCD_Write_Int@str 0025                      main@steinhart 00E2  
                  _InitCustomChars 086E                    LCD_Set_Cursor@w 0078  
                  LCD_Set_Cursor@x 0076                    LCD_Set_Cursor@y 0073  
                  LCD_Set_Cursor@z 0077                  _SYSTEM_Initialize 09C3  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 004E  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK0 16F2                       __pidataBANK1 16F5  
                     __pidataBANK2 179B                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0987                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0081  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 09FF  
                       __pbssBANK0 0066                         __pbssBANK1 00A0  
               __size_of_eval_poly 0060                          ?_Init_PID 0070  
                       ??_LCD_Init 0073                         ??_LCD_Port 0070  
           __size_of_PID_Calculate 01DE                         __pmaintext 040D  
                          ?___ftge 003D                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 17CC  
       __end_of_PWM6_LoadDutyValue 1783          __size_of_LCD_Write_String 001A  
                 ?_PWM6_Initialize 0070                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0894  
                          _LCD_Cmd 175B                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
                       ??_Init_PID 0070              PID_Calculate@setpoint 0046  
                    ?_tempSetpoint 0070               __CFG_SCANE$available 0000  
                          ___aldiv 0C30                            ___cgram 0120  
                  __size_of___ftge 003C                            ___awdiv 0A83  
                          ___ftadd 0139                            ___awmod 0A3E  
                          ___ftdiv 0D39                            ___ftneg 16FA  
                  __size_of___wmul 001B                            ___ftmul 0E92  
                          ___ftsub 0830                            ___fttol 0CB2  
                          ___lwdiv 0918                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 0020  
                __end_of_eval_poly 0B34                   ??_LCD_Set_Cursor 0074  
                          __ptext1 0F46                            __ptext2 0BAF  
                          __ptext3 17E6                            __ptext4 0070  
                          __ptext5 0A3E                            __ptext6 0A83  
                          __ptext7 09FF                            __ptext8 0DE2  
                          __ptext9 094C                         ??___lwtoft 007B  
                    _PID_Calculate 022F              _OSCILLATOR_Initialize 0004  
                        _T2CONbits 028E                       __size_of_log 00B0  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _upCount 006B  
                          _samples 238C                          _LCD_Clear 1702  
                          _presets 00E5         __size_of_SYSTEM_Initialize 003C  
                          clrloop0 170B               end_of_initialization 07FD  
                          init_ram 1716                            initloop 1717  
                   ??_tempSetpoint 0031                      _PID_MaxOutput 006D  
                 ___aldiv@quotient 0022                  LCD_Write_Int@sign 007D  
                    _PID_MinOutput 0066                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 173D              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0046                 _PID_Calculate$1056 004B  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 007B  
                       main@toggle 00D7                  __size_of_LCD_Port 0018  
                       main@totals 00DA                        ___ftmul@exp 002A  
                   __end_of___ftge 09C3                     __end_of___wmul 0830  
                 _LCD_Write_String 17E6             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07B9                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 0E92                         frexp@value 0070  
                  _DerivativeValue 00A5           LCD_Write_Int@fieldLength 007B  
                __size_of_Init_PID 0028              __end_of_LCD_Write_Int 0139  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0043  
                         ??___wmul 0074                        __pdataBANK0 006D  
                      __pdataBANK1 00E5                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                         ?_LCD_Cmd 0070                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 172F                  __size_of___ftpack 0064  
                __size_of___lbtoft 001A                        __pbssBIGRAM 238C  
                         LCD_Cmd@a 0072                          ___latbits 0002  
                __size_of___lwtoft 0013                      __pcstackBANK0 0020  
                    __pcstackBANK1 00C7               __end_of_tempSetpoint 1000  
               _PWM6_LoadDutyValue 176D           __size_of_TMR2_Initialize 000F  
                      ??_LCD_Clear 0073                ?_PWM6_LoadDutyValue 0070  
                        _main$1057 00CA                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 08E6                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0030                           ?___awmod 0070  
                         ?___ftdiv 0020                           ?___ftneg 0070  
                         ?___ftmul 0020                           ?___ftsub 003D  
                         ?___fttol 004E                           ?___lwdiv 0076  
                  main@displayTemp 00D8               ??_PWM6_LoadDutyValue 0072  
                        _downCount 0068                          _eval_poly 0AD4  
              __end_of_readButtons 0C30           __size_of_PWM6_Initialize 000D  
                 ___lwdiv@quotient 007B                     __size_of_frexp 003B  
                         _T2CLKCON 0290             main@readTemperatureOld 00DE  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0B34  
                   ___wmul@product 0074                           _LCD_Port 1783  
                        clear_ram0 170A                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
                         _ErrValue 00AB           __end_of_LCD_Write_String 1800  
                         _Init_PID 0894                  ??_TMR2_Initialize 0070  
                        frexp@eptr 0073               main@firstTimeThrough 00D3  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0BAF  
                         ___awtoft 084E                           ___ftpack 000C  
                         ___lbtoft 17CC              __size_of_tempSetpoint 00BA  
                         ___lwtoft 0802                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00C5  
                  ___lwdiv@divisor 0076                        _oldSetpoint 0069  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0AD4                           __ptext11 0815  
                         __ptext20 174C                           __ptext12 0802  
                         __ptext21 173D                           __ptext13 0918  
                         __ptext30 175B                           __ptext22 1722  
                         __ptext14 17CC                           __ptext31 1783  
                         __ptext23 08E6                           __ptext15 0CB2  
                         __ptext40 000C                           __ptext32 17B3  
                         __ptext24 0004                           __ptext16 0830  
                         __ptext41 172F                           __ptext33 176D  
                         __ptext25 0B34                           __ptext17 0D39  
                         __ptext34 022F                           __ptext26 1702  
                         __ptext18 0C30                           __ptext35 16FA  
                         __ptext27 0894                           __ptext19 09C3  
                         __ptext36 0E92                           __ptext28 086E  
                         __ptext37 0987                           __ptext29 08BC  
                         __ptext38 0139                           __ptext39 084E  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F13695 00A0                  ??_PWM6_Initialize 0070  
                    __size_of_main 03AC               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 0F46         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 006F        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                   main@startupTimer 00D6  
               LCD_Set_Cursor@temp 0079                 LCD_Write_Int@value 0079  
            __end_of_PID_Calculate 040D                    _TMR0_Initialize 173D  
                   _PID_Integrated 00AE                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 0918                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00CF                        _toggleCount 006A  
                ??_InitCustomChars 0075  
