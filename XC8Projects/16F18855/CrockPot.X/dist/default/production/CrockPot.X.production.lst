

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 06 10:38:16 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5BC,52
    63                           	dabs	1,0x238C,0,_samples
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  001C                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0110                     	;# 
   120  0110                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0119                     	;# 
   132  0119                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011A                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  011C                     	;# 
   144  011C                     	;# 
   145  011D                     	;# 
   146  011D                     	;# 
   147  011D                     	;# 
   148  011E                     	;# 
   149  011E                     	;# 
   150  011E                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  018F                     	;# 
   160  0190                     	;# 
   161  0191                     	;# 
   162  0192                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0198                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  020F                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0218                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  028C                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  028F                     	;# 
   205  0290                     	;# 
   206  0290                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0293                     	;# 
   212  0294                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0296                     	;# 
   216  0297                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029B                     	;# 
   223  029C                     	;# 
   224  029C                     	;# 
   225  029D                     	;# 
   226  030C                     	;# 
   227  030C                     	;# 
   228  030D                     	;# 
   229  030E                     	;# 
   230  030F                     	;# 
   231  0310                     	;# 
   232  0310                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0314                     	;# 
   237  0314                     	;# 
   238  0315                     	;# 
   239  0316                     	;# 
   240  0317                     	;# 
   241  0318                     	;# 
   242  0318                     	;# 
   243  0319                     	;# 
   244  031A                     	;# 
   245  031B                     	;# 
   246  031C                     	;# 
   247  031C                     	;# 
   248  031D                     	;# 
   249  031E                     	;# 
   250  031F                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0390                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  040C                     	;# 
   258  040D                     	;# 
   259  040E                     	;# 
   260  040F                     	;# 
   261  0410                     	;# 
   262  0411                     	;# 
   263  0416                     	;# 
   264  0416                     	;# 
   265  0417                     	;# 
   266  0418                     	;# 
   267  0418                     	;# 
   268  0419                     	;# 
   269  041A                     	;# 
   270  041A                     	;# 
   271  041B                     	;# 
   272  041C                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  041F                     	;# 
   277  048C                     	;# 
   278  048C                     	;# 
   279  048D                     	;# 
   280  048E                     	;# 
   281  048F                     	;# 
   282  048F                     	;# 
   283  0490                     	;# 
   284  0491                     	;# 
   285  0492                     	;# 
   286  0492                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0495                     	;# 
   290  0495                     	;# 
   291  0496                     	;# 
   292  0497                     	;# 
   293  0498                     	;# 
   294  0499                     	;# 
   295  049A                     	;# 
   296  049B                     	;# 
   297  049C                     	;# 
   298  049D                     	;# 
   299  050C                     	;# 
   300  050C                     	;# 
   301  050D                     	;# 
   302  050E                     	;# 
   303  050F                     	;# 
   304  050F                     	;# 
   305  0510                     	;# 
   306  0511                     	;# 
   307  0512                     	;# 
   308  0512                     	;# 
   309  0513                     	;# 
   310  0514                     	;# 
   311  0515                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  051B                     	;# 
   319  051C                     	;# 
   320  051D                     	;# 
   321  058C                     	;# 
   322  058C                     	;# 
   323  058D                     	;# 
   324  058E                     	;# 
   325  058F                     	;# 
   326  058F                     	;# 
   327  0590                     	;# 
   328  0591                     	;# 
   329  0592                     	;# 
   330  0593                     	;# 
   331  060C                     	;# 
   332  060D                     	;# 
   333  060E                     	;# 
   334  060F                     	;# 
   335  0610                     	;# 
   336  0611                     	;# 
   337  0612                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0616                     	;# 
   341  0617                     	;# 
   342  0618                     	;# 
   343  0619                     	;# 
   344  061A                     	;# 
   345  061B                     	;# 
   346  061C                     	;# 
   347  061D                     	;# 
   348  061E                     	;# 
   349  068C                     	;# 
   350  068D                     	;# 
   351  068E                     	;# 
   352  068F                     	;# 
   353  0690                     	;# 
   354  0691                     	;# 
   355  0692                     	;# 
   356  0693                     	;# 
   357  0694                     	;# 
   358  070C                     	;# 
   359  070D                     	;# 
   360  070E                     	;# 
   361  070F                     	;# 
   362  0710                     	;# 
   363  0711                     	;# 
   364  0712                     	;# 
   365  0713                     	;# 
   366  0714                     	;# 
   367  0716                     	;# 
   368  0717                     	;# 
   369  0718                     	;# 
   370  0719                     	;# 
   371  071A                     	;# 
   372  071B                     	;# 
   373  071C                     	;# 
   374  071D                     	;# 
   375  071E                     	;# 
   376  0796                     	;# 
   377  0797                     	;# 
   378  0798                     	;# 
   379  0799                     	;# 
   380  079A                     	;# 
   381  079B                     	;# 
   382  080C                     	;# 
   383  080D                     	;# 
   384  080E                     	;# 
   385  080F                     	;# 
   386  0810                     	;# 
   387  0811                     	;# 
   388  0812                     	;# 
   389  0813                     	;# 
   390  0814                     	;# 
   391  081A                     	;# 
   392  081B                     	;# 
   393  081C                     	;# 
   394  081D                     	;# 
   395  081E                     	;# 
   396  081F                     	;# 
   397  088C                     	;# 
   398  088D                     	;# 
   399  088E                     	;# 
   400  088F                     	;# 
   401  0890                     	;# 
   402  0891                     	;# 
   403  0892                     	;# 
   404  0893                     	;# 
   405  0895                     	;# 
   406  0896                     	;# 
   407  0897                     	;# 
   408  0898                     	;# 
   409  0899                     	;# 
   410  089A                     	;# 
   411  089B                     	;# 
   412  090C                     	;# 
   413  090E                     	;# 
   414  090F                     	;# 
   415  091F                     	;# 
   416  091F                     	;# 
   417  098F                     	;# 
   418  098F                     	;# 
   419  0990                     	;# 
   420  0991                     	;# 
   421  0992                     	;# 
   422  0993                     	;# 
   423  0994                     	;# 
   424  0995                     	;# 
   425  0996                     	;# 
   426  0997                     	;# 
   427  0E0F                     	;# 
   428  0E10                     	;# 
   429  0E11                     	;# 
   430  0E12                     	;# 
   431  0E13                     	;# 
   432  0E14                     	;# 
   433  0E15                     	;# 
   434  0E16                     	;# 
   435  0E17                     	;# 
   436  0E18                     	;# 
   437  0E19                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E1D                     	;# 
   442  0E1E                     	;# 
   443  0E1F                     	;# 
   444  0E20                     	;# 
   445  0E21                     	;# 
   446  0E22                     	;# 
   447  0E23                     	;# 
   448  0E24                     	;# 
   449  0E25                     	;# 
   450  0E26                     	;# 
   451  0E27                     	;# 
   452  0E28                     	;# 
   453  0E29                     	;# 
   454  0E2A                     	;# 
   455  0E2B                     	;# 
   456  0E2C                     	;# 
   457  0E2D                     	;# 
   458  0E2E                     	;# 
   459  0E2F                     	;# 
   460  0E30                     	;# 
   461  0E31                     	;# 
   462  0E32                     	;# 
   463  0E33                     	;# 
   464  0E34                     	;# 
   465  0E35                     	;# 
   466  0E36                     	;# 
   467  0E37                     	;# 
   468  0E8F                     	;# 
   469  0E90                     	;# 
   470  0E91                     	;# 
   471  0E92                     	;# 
   472  0E93                     	;# 
   473  0E94                     	;# 
   474  0E95                     	;# 
   475  0E96                     	;# 
   476  0E97                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0EA1                     	;# 
   481  0EA2                     	;# 
   482  0EA3                     	;# 
   483  0EA4                     	;# 
   484  0EA5                     	;# 
   485  0EA9                     	;# 
   486  0EAA                     	;# 
   487  0EAB                     	;# 
   488  0EAC                     	;# 
   489  0EB1                     	;# 
   490  0EB2                     	;# 
   491  0EB3                     	;# 
   492  0EB8                     	;# 
   493  0EB9                     	;# 
   494  0EBA                     	;# 
   495  0EBB                     	;# 
   496  0EBC                     	;# 
   497  0EBD                     	;# 
   498  0EBE                     	;# 
   499  0EC3                     	;# 
   500  0EC5                     	;# 
   501  0EC6                     	;# 
   502  0EC7                     	;# 
   503  0EC8                     	;# 
   504  0EC9                     	;# 
   505  0ECA                     	;# 
   506  0ECB                     	;# 
   507  0ECC                     	;# 
   508  0F10                     	;# 
   509  0F11                     	;# 
   510  0F12                     	;# 
   511  0F13                     	;# 
   512  0F14                     	;# 
   513  0F15                     	;# 
   514  0F16                     	;# 
   515  0F17                     	;# 
   516  0F18                     	;# 
   517  0F19                     	;# 
   518  0F1A                     	;# 
   519  0F1B                     	;# 
   520  0F1C                     	;# 
   521  0F1D                     	;# 
   522  0F1E                     	;# 
   523  0F1F                     	;# 
   524  0F20                     	;# 
   525  0F21                     	;# 
   526  0F22                     	;# 
   527  0F23                     	;# 
   528  0F24                     	;# 
   529  0F25                     	;# 
   530  0F26                     	;# 
   531  0F27                     	;# 
   532  0F38                     	;# 
   533  0F39                     	;# 
   534  0F3A                     	;# 
   535  0F3B                     	;# 
   536  0F3C                     	;# 
   537  0F3D                     	;# 
   538  0F3E                     	;# 
   539  0F3F                     	;# 
   540  0F40                     	;# 
   541  0F41                     	;# 
   542  0F43                     	;# 
   543  0F44                     	;# 
   544  0F45                     	;# 
   545  0F46                     	;# 
   546  0F47                     	;# 
   547  0F48                     	;# 
   548  0F49                     	;# 
   549  0F4A                     	;# 
   550  0F4B                     	;# 
   551  0F4C                     	;# 
   552  0F4E                     	;# 
   553  0F4F                     	;# 
   554  0F50                     	;# 
   555  0F51                     	;# 
   556  0F52                     	;# 
   557  0F53                     	;# 
   558  0F54                     	;# 
   559  0F55                     	;# 
   560  0F56                     	;# 
   561  0F57                     	;# 
   562  0F65                     	;# 
   563  0F68                     	;# 
   564  0F69                     	;# 
   565  0F6A                     	;# 
   566  0F6B                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000D                     	;# 
   592  000E                     	;# 
   593  0010                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  001C                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001D                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0090                     	;# 
   614  0091                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0110                     	;# 
   633  0110                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  0119                     	;# 
   645  0119                     	;# 
   646  0119                     	;# 
   647  011A                     	;# 
   648  011A                     	;# 
   649  011A                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011C                     	;# 
   656  011C                     	;# 
   657  011C                     	;# 
   658  011D                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  011E                     	;# 
   662  011E                     	;# 
   663  011E                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  018E                     	;# 
   672  018F                     	;# 
   673  0190                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0196                     	;# 
   677  0197                     	;# 
   678  0198                     	;# 
   679  0199                     	;# 
   680  019A                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  020C                     	;# 
   684  020D                     	;# 
   685  020E                     	;# 
   686  020F                     	;# 
   687  020F                     	;# 
   688  0210                     	;# 
   689  0210                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0215                     	;# 
   696  0215                     	;# 
   697  0216                     	;# 
   698  0216                     	;# 
   699  0217                     	;# 
   700  0217                     	;# 
   701  0218                     	;# 
   702  0219                     	;# 
   703  021A                     	;# 
   704  021B                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021D                     	;# 
   710  021E                     	;# 
   711  021F                     	;# 
   712  028C                     	;# 
   713  028C                     	;# 
   714  028D                     	;# 
   715  028D                     	;# 
   716  028E                     	;# 
   717  028F                     	;# 
   718  0290                     	;# 
   719  0290                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0292                     	;# 
   723  0293                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0296                     	;# 
   728  0296                     	;# 
   729  0297                     	;# 
   730  0298                     	;# 
   731  0298                     	;# 
   732  0299                     	;# 
   733  0299                     	;# 
   734  029A                     	;# 
   735  029B                     	;# 
   736  029C                     	;# 
   737  029C                     	;# 
   738  029D                     	;# 
   739  030C                     	;# 
   740  030C                     	;# 
   741  030D                     	;# 
   742  030E                     	;# 
   743  030F                     	;# 
   744  0310                     	;# 
   745  0310                     	;# 
   746  0311                     	;# 
   747  0312                     	;# 
   748  0313                     	;# 
   749  0314                     	;# 
   750  0314                     	;# 
   751  0315                     	;# 
   752  0316                     	;# 
   753  0317                     	;# 
   754  0318                     	;# 
   755  0318                     	;# 
   756  0319                     	;# 
   757  031A                     	;# 
   758  031B                     	;# 
   759  031C                     	;# 
   760  031C                     	;# 
   761  031D                     	;# 
   762  031E                     	;# 
   763  031F                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  040C                     	;# 
   771  040D                     	;# 
   772  040E                     	;# 
   773  040F                     	;# 
   774  0410                     	;# 
   775  0411                     	;# 
   776  0416                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  0418                     	;# 
   780  0418                     	;# 
   781  0419                     	;# 
   782  041A                     	;# 
   783  041A                     	;# 
   784  041B                     	;# 
   785  041C                     	;# 
   786  041C                     	;# 
   787  041D                     	;# 
   788  041E                     	;# 
   789  041F                     	;# 
   790  048C                     	;# 
   791  048C                     	;# 
   792  048D                     	;# 
   793  048E                     	;# 
   794  048F                     	;# 
   795  048F                     	;# 
   796  0490                     	;# 
   797  0491                     	;# 
   798  0492                     	;# 
   799  0492                     	;# 
   800  0493                     	;# 
   801  0494                     	;# 
   802  0495                     	;# 
   803  0495                     	;# 
   804  0496                     	;# 
   805  0497                     	;# 
   806  0498                     	;# 
   807  0499                     	;# 
   808  049A                     	;# 
   809  049B                     	;# 
   810  049C                     	;# 
   811  049D                     	;# 
   812  050C                     	;# 
   813  050C                     	;# 
   814  050D                     	;# 
   815  050E                     	;# 
   816  050F                     	;# 
   817  050F                     	;# 
   818  0510                     	;# 
   819  0511                     	;# 
   820  0512                     	;# 
   821  0512                     	;# 
   822  0513                     	;# 
   823  0514                     	;# 
   824  0515                     	;# 
   825  0515                     	;# 
   826  0516                     	;# 
   827  0517                     	;# 
   828  0518                     	;# 
   829  0519                     	;# 
   830  051A                     	;# 
   831  051B                     	;# 
   832  051C                     	;# 
   833  051D                     	;# 
   834  058C                     	;# 
   835  058C                     	;# 
   836  058D                     	;# 
   837  058E                     	;# 
   838  058F                     	;# 
   839  058F                     	;# 
   840  0590                     	;# 
   841  0591                     	;# 
   842  0592                     	;# 
   843  0593                     	;# 
   844  060C                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  0616                     	;# 
   854  0617                     	;# 
   855  0618                     	;# 
   856  0619                     	;# 
   857  061A                     	;# 
   858  061B                     	;# 
   859  061C                     	;# 
   860  061D                     	;# 
   861  061E                     	;# 
   862  068C                     	;# 
   863  068D                     	;# 
   864  068E                     	;# 
   865  068F                     	;# 
   866  0690                     	;# 
   867  0691                     	;# 
   868  0692                     	;# 
   869  0693                     	;# 
   870  0694                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  080C                     	;# 
   896  080D                     	;# 
   897  080E                     	;# 
   898  080F                     	;# 
   899  0810                     	;# 
   900  0811                     	;# 
   901  0812                     	;# 
   902  0813                     	;# 
   903  0814                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081D                     	;# 
   908  081E                     	;# 
   909  081F                     	;# 
   910  088C                     	;# 
   911  088D                     	;# 
   912  088E                     	;# 
   913  088F                     	;# 
   914  0890                     	;# 
   915  0891                     	;# 
   916  0892                     	;# 
   917  0893                     	;# 
   918  0895                     	;# 
   919  0896                     	;# 
   920  0897                     	;# 
   921  0898                     	;# 
   922  0899                     	;# 
   923  089A                     	;# 
   924  089B                     	;# 
   925  090C                     	;# 
   926  090E                     	;# 
   927  090F                     	;# 
   928  091F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  0E0F                     	;# 
   941  0E10                     	;# 
   942  0E11                     	;# 
   943  0E12                     	;# 
   944  0E13                     	;# 
   945  0E14                     	;# 
   946  0E15                     	;# 
   947  0E16                     	;# 
   948  0E17                     	;# 
   949  0E18                     	;# 
   950  0E19                     	;# 
   951  0E1A                     	;# 
   952  0E1B                     	;# 
   953  0E1C                     	;# 
   954  0E1D                     	;# 
   955  0E1E                     	;# 
   956  0E1F                     	;# 
   957  0E20                     	;# 
   958  0E21                     	;# 
   959  0E22                     	;# 
   960  0E23                     	;# 
   961  0E24                     	;# 
   962  0E25                     	;# 
   963  0E26                     	;# 
   964  0E27                     	;# 
   965  0E28                     	;# 
   966  0E29                     	;# 
   967  0E2A                     	;# 
   968  0E2B                     	;# 
   969  0E2C                     	;# 
   970  0E2D                     	;# 
   971  0E2E                     	;# 
   972  0E2F                     	;# 
   973  0E30                     	;# 
   974  0E31                     	;# 
   975  0E32                     	;# 
   976  0E33                     	;# 
   977  0E34                     	;# 
   978  0E35                     	;# 
   979  0E36                     	;# 
   980  0E37                     	;# 
   981  0E8F                     	;# 
   982  0E90                     	;# 
   983  0E91                     	;# 
   984  0E92                     	;# 
   985  0E93                     	;# 
   986  0E94                     	;# 
   987  0E95                     	;# 
   988  0E96                     	;# 
   989  0E97                     	;# 
   990  0E9C                     	;# 
   991  0E9D                     	;# 
   992  0E9E                     	;# 
   993  0EA1                     	;# 
   994  0EA2                     	;# 
   995  0EA3                     	;# 
   996  0EA4                     	;# 
   997  0EA5                     	;# 
   998  0EA9                     	;# 
   999  0EAA                     	;# 
  1000  0EAB                     	;# 
  1001  0EAC                     	;# 
  1002  0EB1                     	;# 
  1003  0EB2                     	;# 
  1004  0EB3                     	;# 
  1005  0EB8                     	;# 
  1006  0EB9                     	;# 
  1007  0EBA                     	;# 
  1008  0EBB                     	;# 
  1009  0EBC                     	;# 
  1010  0EBD                     	;# 
  1011  0EBE                     	;# 
  1012  0EC3                     	;# 
  1013  0EC5                     	;# 
  1014  0EC6                     	;# 
  1015  0EC7                     	;# 
  1016  0EC8                     	;# 
  1017  0EC9                     	;# 
  1018  0ECA                     	;# 
  1019  0ECB                     	;# 
  1020  0ECC                     	;# 
  1021  0F10                     	;# 
  1022  0F11                     	;# 
  1023  0F12                     	;# 
  1024  0F13                     	;# 
  1025  0F14                     	;# 
  1026  0F15                     	;# 
  1027  0F16                     	;# 
  1028  0F17                     	;# 
  1029  0F18                     	;# 
  1030  0F19                     	;# 
  1031  0F1A                     	;# 
  1032  0F1B                     	;# 
  1033  0F1C                     	;# 
  1034  0F1D                     	;# 
  1035  0F1E                     	;# 
  1036  0F1F                     	;# 
  1037  0F20                     	;# 
  1038  0F21                     	;# 
  1039  0F22                     	;# 
  1040  0F23                     	;# 
  1041  0F24                     	;# 
  1042  0F25                     	;# 
  1043  0F26                     	;# 
  1044  0F27                     	;# 
  1045  0F38                     	;# 
  1046  0F39                     	;# 
  1047  0F3A                     	;# 
  1048  0F3B                     	;# 
  1049  0F3C                     	;# 
  1050  0F3D                     	;# 
  1051  0F3E                     	;# 
  1052  0F3F                     	;# 
  1053  0F40                     	;# 
  1054  0F41                     	;# 
  1055  0F43                     	;# 
  1056  0F44                     	;# 
  1057  0F45                     	;# 
  1058  0F46                     	;# 
  1059  0F47                     	;# 
  1060  0F48                     	;# 
  1061  0F49                     	;# 
  1062  0F4A                     	;# 
  1063  0F4B                     	;# 
  1064  0F4C                     	;# 
  1065  0F4E                     	;# 
  1066  0F4F                     	;# 
  1067  0F50                     	;# 
  1068  0F51                     	;# 
  1069  0F52                     	;# 
  1070  0F53                     	;# 
  1071  0F54                     	;# 
  1072  0F55                     	;# 
  1073  0F56                     	;# 
  1074  0F57                     	;# 
  1075  0F65                     	;# 
  1076  0F68                     	;# 
  1077  0F69                     	;# 
  1078  0F6A                     	;# 
  1079  0F6B                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0016                     	;# 
  1111  0017                     	;# 
  1112  0018                     	;# 
  1113  001C                     	;# 
  1114  001C                     	;# 
  1115  001D                     	;# 
  1116  001D                     	;# 
  1117  001E                     	;# 
  1118  001F                     	;# 
  1119  008C                     	;# 
  1120  008C                     	;# 
  1121  008D                     	;# 
  1122  008E                     	;# 
  1123  008E                     	;# 
  1124  008F                     	;# 
  1125  0090                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0093                     	;# 
  1129  0094                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0097                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009A                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  010C                     	;# 
  1141  010D                     	;# 
  1142  010E                     	;# 
  1143  010E                     	;# 
  1144  010F                     	;# 
  1145  0110                     	;# 
  1146  0110                     	;# 
  1147  0111                     	;# 
  1148  0112                     	;# 
  1149  0112                     	;# 
  1150  0113                     	;# 
  1151  0114                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0119                     	;# 
  1158  0119                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011A                     	;# 
  1162  011A                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011B                     	;# 
  1167  011B                     	;# 
  1168  011C                     	;# 
  1169  011C                     	;# 
  1170  011C                     	;# 
  1171  011D                     	;# 
  1172  011D                     	;# 
  1173  011D                     	;# 
  1174  011E                     	;# 
  1175  011E                     	;# 
  1176  011E                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  011F                     	;# 
  1181  011F                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0196                     	;# 
  1190  0197                     	;# 
  1191  0198                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  020C                     	;# 
  1197  020D                     	;# 
  1198  020E                     	;# 
  1199  020F                     	;# 
  1200  020F                     	;# 
  1201  0210                     	;# 
  1202  0210                     	;# 
  1203  0211                     	;# 
  1204  0211                     	;# 
  1205  0212                     	;# 
  1206  0213                     	;# 
  1207  0214                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0216                     	;# 
  1211  0216                     	;# 
  1212  0217                     	;# 
  1213  0217                     	;# 
  1214  0218                     	;# 
  1215  0219                     	;# 
  1216  021A                     	;# 
  1217  021B                     	;# 
  1218  021B                     	;# 
  1219  021C                     	;# 
  1220  021C                     	;# 
  1221  021D                     	;# 
  1222  021D                     	;# 
  1223  021E                     	;# 
  1224  021F                     	;# 
  1225  028C                     	;# 
  1226  028C                     	;# 
  1227  028D                     	;# 
  1228  028D                     	;# 
  1229  028E                     	;# 
  1230  028F                     	;# 
  1231  0290                     	;# 
  1232  0290                     	;# 
  1233  0291                     	;# 
  1234  0292                     	;# 
  1235  0292                     	;# 
  1236  0293                     	;# 
  1237  0293                     	;# 
  1238  0294                     	;# 
  1239  0295                     	;# 
  1240  0296                     	;# 
  1241  0296                     	;# 
  1242  0297                     	;# 
  1243  0298                     	;# 
  1244  0298                     	;# 
  1245  0299                     	;# 
  1246  0299                     	;# 
  1247  029A                     	;# 
  1248  029B                     	;# 
  1249  029C                     	;# 
  1250  029C                     	;# 
  1251  029D                     	;# 
  1252  030C                     	;# 
  1253  030C                     	;# 
  1254  030D                     	;# 
  1255  030E                     	;# 
  1256  030F                     	;# 
  1257  0310                     	;# 
  1258  0310                     	;# 
  1259  0311                     	;# 
  1260  0312                     	;# 
  1261  0313                     	;# 
  1262  0314                     	;# 
  1263  0314                     	;# 
  1264  0315                     	;# 
  1265  0316                     	;# 
  1266  0317                     	;# 
  1267  0318                     	;# 
  1268  0318                     	;# 
  1269  0319                     	;# 
  1270  031A                     	;# 
  1271  031B                     	;# 
  1272  031C                     	;# 
  1273  031C                     	;# 
  1274  031D                     	;# 
  1275  031E                     	;# 
  1276  031F                     	;# 
  1277  038C                     	;# 
  1278  038D                     	;# 
  1279  038E                     	;# 
  1280  0390                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  040C                     	;# 
  1284  040D                     	;# 
  1285  040E                     	;# 
  1286  040F                     	;# 
  1287  0410                     	;# 
  1288  0411                     	;# 
  1289  0416                     	;# 
  1290  0416                     	;# 
  1291  0417                     	;# 
  1292  0418                     	;# 
  1293  0418                     	;# 
  1294  0419                     	;# 
  1295  041A                     	;# 
  1296  041A                     	;# 
  1297  041B                     	;# 
  1298  041C                     	;# 
  1299  041C                     	;# 
  1300  041D                     	;# 
  1301  041E                     	;# 
  1302  041F                     	;# 
  1303  048C                     	;# 
  1304  048C                     	;# 
  1305  048D                     	;# 
  1306  048E                     	;# 
  1307  048F                     	;# 
  1308  048F                     	;# 
  1309  0490                     	;# 
  1310  0491                     	;# 
  1311  0492                     	;# 
  1312  0492                     	;# 
  1313  0493                     	;# 
  1314  0494                     	;# 
  1315  0495                     	;# 
  1316  0495                     	;# 
  1317  0496                     	;# 
  1318  0497                     	;# 
  1319  0498                     	;# 
  1320  0499                     	;# 
  1321  049A                     	;# 
  1322  049B                     	;# 
  1323  049C                     	;# 
  1324  049D                     	;# 
  1325  050C                     	;# 
  1326  050C                     	;# 
  1327  050D                     	;# 
  1328  050E                     	;# 
  1329  050F                     	;# 
  1330  050F                     	;# 
  1331  0510                     	;# 
  1332  0511                     	;# 
  1333  0512                     	;# 
  1334  0512                     	;# 
  1335  0513                     	;# 
  1336  0514                     	;# 
  1337  0515                     	;# 
  1338  0515                     	;# 
  1339  0516                     	;# 
  1340  0517                     	;# 
  1341  0518                     	;# 
  1342  0519                     	;# 
  1343  051A                     	;# 
  1344  051B                     	;# 
  1345  051C                     	;# 
  1346  051D                     	;# 
  1347  058C                     	;# 
  1348  058C                     	;# 
  1349  058D                     	;# 
  1350  058E                     	;# 
  1351  058F                     	;# 
  1352  058F                     	;# 
  1353  0590                     	;# 
  1354  0591                     	;# 
  1355  0592                     	;# 
  1356  0593                     	;# 
  1357  060C                     	;# 
  1358  060D                     	;# 
  1359  060E                     	;# 
  1360  060F                     	;# 
  1361  0610                     	;# 
  1362  0611                     	;# 
  1363  0612                     	;# 
  1364  0613                     	;# 
  1365  0614                     	;# 
  1366  0616                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  061A                     	;# 
  1371  061B                     	;# 
  1372  061C                     	;# 
  1373  061D                     	;# 
  1374  061E                     	;# 
  1375  068C                     	;# 
  1376  068D                     	;# 
  1377  068E                     	;# 
  1378  068F                     	;# 
  1379  0690                     	;# 
  1380  0691                     	;# 
  1381  0692                     	;# 
  1382  0693                     	;# 
  1383  0694                     	;# 
  1384  070C                     	;# 
  1385  070D                     	;# 
  1386  070E                     	;# 
  1387  070F                     	;# 
  1388  0710                     	;# 
  1389  0711                     	;# 
  1390  0712                     	;# 
  1391  0713                     	;# 
  1392  0714                     	;# 
  1393  0716                     	;# 
  1394  0717                     	;# 
  1395  0718                     	;# 
  1396  0719                     	;# 
  1397  071A                     	;# 
  1398  071B                     	;# 
  1399  071C                     	;# 
  1400  071D                     	;# 
  1401  071E                     	;# 
  1402  0796                     	;# 
  1403  0797                     	;# 
  1404  0798                     	;# 
  1405  0799                     	;# 
  1406  079A                     	;# 
  1407  079B                     	;# 
  1408  080C                     	;# 
  1409  080D                     	;# 
  1410  080E                     	;# 
  1411  080F                     	;# 
  1412  0810                     	;# 
  1413  0811                     	;# 
  1414  0812                     	;# 
  1415  0813                     	;# 
  1416  0814                     	;# 
  1417  081A                     	;# 
  1418  081B                     	;# 
  1419  081C                     	;# 
  1420  081D                     	;# 
  1421  081E                     	;# 
  1422  081F                     	;# 
  1423  088C                     	;# 
  1424  088D                     	;# 
  1425  088E                     	;# 
  1426  088F                     	;# 
  1427  0890                     	;# 
  1428  0891                     	;# 
  1429  0892                     	;# 
  1430  0893                     	;# 
  1431  0895                     	;# 
  1432  0896                     	;# 
  1433  0897                     	;# 
  1434  0898                     	;# 
  1435  0899                     	;# 
  1436  089A                     	;# 
  1437  089B                     	;# 
  1438  090C                     	;# 
  1439  090E                     	;# 
  1440  090F                     	;# 
  1441  091F                     	;# 
  1442  091F                     	;# 
  1443  098F                     	;# 
  1444  098F                     	;# 
  1445  0990                     	;# 
  1446  0991                     	;# 
  1447  0992                     	;# 
  1448  0993                     	;# 
  1449  0994                     	;# 
  1450  0995                     	;# 
  1451  0996                     	;# 
  1452  0997                     	;# 
  1453  0E0F                     	;# 
  1454  0E10                     	;# 
  1455  0E11                     	;# 
  1456  0E12                     	;# 
  1457  0E13                     	;# 
  1458  0E14                     	;# 
  1459  0E15                     	;# 
  1460  0E16                     	;# 
  1461  0E17                     	;# 
  1462  0E18                     	;# 
  1463  0E19                     	;# 
  1464  0E1A                     	;# 
  1465  0E1B                     	;# 
  1466  0E1C                     	;# 
  1467  0E1D                     	;# 
  1468  0E1E                     	;# 
  1469  0E1F                     	;# 
  1470  0E20                     	;# 
  1471  0E21                     	;# 
  1472  0E22                     	;# 
  1473  0E23                     	;# 
  1474  0E24                     	;# 
  1475  0E25                     	;# 
  1476  0E26                     	;# 
  1477  0E27                     	;# 
  1478  0E28                     	;# 
  1479  0E29                     	;# 
  1480  0E2A                     	;# 
  1481  0E2B                     	;# 
  1482  0E2C                     	;# 
  1483  0E2D                     	;# 
  1484  0E2E                     	;# 
  1485  0E2F                     	;# 
  1486  0E30                     	;# 
  1487  0E31                     	;# 
  1488  0E32                     	;# 
  1489  0E33                     	;# 
  1490  0E34                     	;# 
  1491  0E35                     	;# 
  1492  0E36                     	;# 
  1493  0E37                     	;# 
  1494  0E8F                     	;# 
  1495  0E90                     	;# 
  1496  0E91                     	;# 
  1497  0E92                     	;# 
  1498  0E93                     	;# 
  1499  0E94                     	;# 
  1500  0E95                     	;# 
  1501  0E96                     	;# 
  1502  0E97                     	;# 
  1503  0E9C                     	;# 
  1504  0E9D                     	;# 
  1505  0E9E                     	;# 
  1506  0EA1                     	;# 
  1507  0EA2                     	;# 
  1508  0EA3                     	;# 
  1509  0EA4                     	;# 
  1510  0EA5                     	;# 
  1511  0EA9                     	;# 
  1512  0EAA                     	;# 
  1513  0EAB                     	;# 
  1514  0EAC                     	;# 
  1515  0EB1                     	;# 
  1516  0EB2                     	;# 
  1517  0EB3                     	;# 
  1518  0EB8                     	;# 
  1519  0EB9                     	;# 
  1520  0EBA                     	;# 
  1521  0EBB                     	;# 
  1522  0EBC                     	;# 
  1523  0EBD                     	;# 
  1524  0EBE                     	;# 
  1525  0EC3                     	;# 
  1526  0EC5                     	;# 
  1527  0EC6                     	;# 
  1528  0EC7                     	;# 
  1529  0EC8                     	;# 
  1530  0EC9                     	;# 
  1531  0ECA                     	;# 
  1532  0ECB                     	;# 
  1533  0ECC                     	;# 
  1534  0F10                     	;# 
  1535  0F11                     	;# 
  1536  0F12                     	;# 
  1537  0F13                     	;# 
  1538  0F14                     	;# 
  1539  0F15                     	;# 
  1540  0F16                     	;# 
  1541  0F17                     	;# 
  1542  0F18                     	;# 
  1543  0F19                     	;# 
  1544  0F1A                     	;# 
  1545  0F1B                     	;# 
  1546  0F1C                     	;# 
  1547  0F1D                     	;# 
  1548  0F1E                     	;# 
  1549  0F1F                     	;# 
  1550  0F20                     	;# 
  1551  0F21                     	;# 
  1552  0F22                     	;# 
  1553  0F23                     	;# 
  1554  0F24                     	;# 
  1555  0F25                     	;# 
  1556  0F26                     	;# 
  1557  0F27                     	;# 
  1558  0F38                     	;# 
  1559  0F39                     	;# 
  1560  0F3A                     	;# 
  1561  0F3B                     	;# 
  1562  0F3C                     	;# 
  1563  0F3D                     	;# 
  1564  0F3E                     	;# 
  1565  0F3F                     	;# 
  1566  0F40                     	;# 
  1567  0F41                     	;# 
  1568  0F43                     	;# 
  1569  0F44                     	;# 
  1570  0F45                     	;# 
  1571  0F46                     	;# 
  1572  0F47                     	;# 
  1573  0F48                     	;# 
  1574  0F49                     	;# 
  1575  0F4A                     	;# 
  1576  0F4B                     	;# 
  1577  0F4C                     	;# 
  1578  0F4E                     	;# 
  1579  0F4F                     	;# 
  1580  0F50                     	;# 
  1581  0F51                     	;# 
  1582  0F52                     	;# 
  1583  0F53                     	;# 
  1584  0F54                     	;# 
  1585  0F55                     	;# 
  1586  0F56                     	;# 
  1587  0F57                     	;# 
  1588  0F65                     	;# 
  1589  0F68                     	;# 
  1590  0F69                     	;# 
  1591  0F6A                     	;# 
  1592  0F6B                     	;# 
  1593  0FE4                     	;# 
  1594  0FE5                     	;# 
  1595  0FE6                     	;# 
  1596  0FE7                     	;# 
  1597  0FE8                     	;# 
  1598  0FE9                     	;# 
  1599  0FEA                     	;# 
  1600  0FEB                     	;# 
  1601  0FED                     	;# 
  1602  0FEE                     	;# 
  1603  0FEF                     	;# 
  1604  0000                     	;# 
  1605  0001                     	;# 
  1606  0002                     	;# 
  1607  0003                     	;# 
  1608  0004                     	;# 
  1609  0005                     	;# 
  1610  0006                     	;# 
  1611  0007                     	;# 
  1612  0008                     	;# 
  1613  0009                     	;# 
  1614  000A                     	;# 
  1615  000B                     	;# 
  1616  000C                     	;# 
  1617  000D                     	;# 
  1618  000E                     	;# 
  1619  0010                     	;# 
  1620  0011                     	;# 
  1621  0012                     	;# 
  1622  0013                     	;# 
  1623  0016                     	;# 
  1624  0017                     	;# 
  1625  0018                     	;# 
  1626  001C                     	;# 
  1627  001C                     	;# 
  1628  001D                     	;# 
  1629  001D                     	;# 
  1630  001E                     	;# 
  1631  001F                     	;# 
  1632  008C                     	;# 
  1633  008C                     	;# 
  1634  008D                     	;# 
  1635  008E                     	;# 
  1636  008E                     	;# 
  1637  008F                     	;# 
  1638  0090                     	;# 
  1639  0090                     	;# 
  1640  0091                     	;# 
  1641  0093                     	;# 
  1642  0094                     	;# 
  1643  0095                     	;# 
  1644  0096                     	;# 
  1645  0097                     	;# 
  1646  0098                     	;# 
  1647  0099                     	;# 
  1648  009A                     	;# 
  1649  009B                     	;# 
  1650  009C                     	;# 
  1651  009D                     	;# 
  1652  009E                     	;# 
  1653  010C                     	;# 
  1654  010D                     	;# 
  1655  010E                     	;# 
  1656  010E                     	;# 
  1657  010F                     	;# 
  1658  0110                     	;# 
  1659  0110                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0112                     	;# 
  1663  0113                     	;# 
  1664  0114                     	;# 
  1665  0114                     	;# 
  1666  0115                     	;# 
  1667  0116                     	;# 
  1668  0116                     	;# 
  1669  0117                     	;# 
  1670  0119                     	;# 
  1671  0119                     	;# 
  1672  0119                     	;# 
  1673  011A                     	;# 
  1674  011A                     	;# 
  1675  011A                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011B                     	;# 
  1680  011B                     	;# 
  1681  011C                     	;# 
  1682  011C                     	;# 
  1683  011C                     	;# 
  1684  011D                     	;# 
  1685  011D                     	;# 
  1686  011D                     	;# 
  1687  011E                     	;# 
  1688  011E                     	;# 
  1689  011E                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  011F                     	;# 
  1694  011F                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018E                     	;# 
  1698  018F                     	;# 
  1699  0190                     	;# 
  1700  0191                     	;# 
  1701  0192                     	;# 
  1702  0196                     	;# 
  1703  0197                     	;# 
  1704  0198                     	;# 
  1705  0199                     	;# 
  1706  019A                     	;# 
  1707  019B                     	;# 
  1708  019C                     	;# 
  1709  020C                     	;# 
  1710  020D                     	;# 
  1711  020E                     	;# 
  1712  020F                     	;# 
  1713  020F                     	;# 
  1714  0210                     	;# 
  1715  0210                     	;# 
  1716  0211                     	;# 
  1717  0211                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0214                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0218                     	;# 
  1728  0219                     	;# 
  1729  021A                     	;# 
  1730  021B                     	;# 
  1731  021B                     	;# 
  1732  021C                     	;# 
  1733  021C                     	;# 
  1734  021D                     	;# 
  1735  021D                     	;# 
  1736  021E                     	;# 
  1737  021F                     	;# 
  1738  028C                     	;# 
  1739  028C                     	;# 
  1740  028D                     	;# 
  1741  028D                     	;# 
  1742  028E                     	;# 
  1743  028F                     	;# 
  1744  0290                     	;# 
  1745  0290                     	;# 
  1746  0291                     	;# 
  1747  0292                     	;# 
  1748  0292                     	;# 
  1749  0293                     	;# 
  1750  0293                     	;# 
  1751  0294                     	;# 
  1752  0295                     	;# 
  1753  0296                     	;# 
  1754  0296                     	;# 
  1755  0297                     	;# 
  1756  0298                     	;# 
  1757  0298                     	;# 
  1758  0299                     	;# 
  1759  0299                     	;# 
  1760  029A                     	;# 
  1761  029B                     	;# 
  1762  029C                     	;# 
  1763  029C                     	;# 
  1764  029D                     	;# 
  1765  030C                     	;# 
  1766  030C                     	;# 
  1767  030D                     	;# 
  1768  030E                     	;# 
  1769  030F                     	;# 
  1770  0310                     	;# 
  1771  0310                     	;# 
  1772  0311                     	;# 
  1773  0312                     	;# 
  1774  0313                     	;# 
  1775  0314                     	;# 
  1776  0314                     	;# 
  1777  0315                     	;# 
  1778  0316                     	;# 
  1779  0317                     	;# 
  1780  0318                     	;# 
  1781  0318                     	;# 
  1782  0319                     	;# 
  1783  031A                     	;# 
  1784  031B                     	;# 
  1785  031C                     	;# 
  1786  031C                     	;# 
  1787  031D                     	;# 
  1788  031E                     	;# 
  1789  031F                     	;# 
  1790  038C                     	;# 
  1791  038D                     	;# 
  1792  038E                     	;# 
  1793  0390                     	;# 
  1794  0391                     	;# 
  1795  0392                     	;# 
  1796  040C                     	;# 
  1797  040D                     	;# 
  1798  040E                     	;# 
  1799  040F                     	;# 
  1800  0410                     	;# 
  1801  0411                     	;# 
  1802  0416                     	;# 
  1803  0416                     	;# 
  1804  0417                     	;# 
  1805  0418                     	;# 
  1806  0418                     	;# 
  1807  0419                     	;# 
  1808  041A                     	;# 
  1809  041A                     	;# 
  1810  041B                     	;# 
  1811  041C                     	;# 
  1812  041C                     	;# 
  1813  041D                     	;# 
  1814  041E                     	;# 
  1815  041F                     	;# 
  1816  048C                     	;# 
  1817  048C                     	;# 
  1818  048D                     	;# 
  1819  048E                     	;# 
  1820  048F                     	;# 
  1821  048F                     	;# 
  1822  0490                     	;# 
  1823  0491                     	;# 
  1824  0492                     	;# 
  1825  0492                     	;# 
  1826  0493                     	;# 
  1827  0494                     	;# 
  1828  0495                     	;# 
  1829  0495                     	;# 
  1830  0496                     	;# 
  1831  0497                     	;# 
  1832  0498                     	;# 
  1833  0499                     	;# 
  1834  049A                     	;# 
  1835  049B                     	;# 
  1836  049C                     	;# 
  1837  049D                     	;# 
  1838  050C                     	;# 
  1839  050C                     	;# 
  1840  050D                     	;# 
  1841  050E                     	;# 
  1842  050F                     	;# 
  1843  050F                     	;# 
  1844  0510                     	;# 
  1845  0511                     	;# 
  1846  0512                     	;# 
  1847  0512                     	;# 
  1848  0513                     	;# 
  1849  0514                     	;# 
  1850  0515                     	;# 
  1851  0515                     	;# 
  1852  0516                     	;# 
  1853  0517                     	;# 
  1854  0518                     	;# 
  1855  0519                     	;# 
  1856  051A                     	;# 
  1857  051B                     	;# 
  1858  051C                     	;# 
  1859  051D                     	;# 
  1860  058C                     	;# 
  1861  058C                     	;# 
  1862  058D                     	;# 
  1863  058E                     	;# 
  1864  058F                     	;# 
  1865  058F                     	;# 
  1866  0590                     	;# 
  1867  0591                     	;# 
  1868  0592                     	;# 
  1869  0593                     	;# 
  1870  060C                     	;# 
  1871  060D                     	;# 
  1872  060E                     	;# 
  1873  060F                     	;# 
  1874  0610                     	;# 
  1875  0611                     	;# 
  1876  0612                     	;# 
  1877  0613                     	;# 
  1878  0614                     	;# 
  1879  0616                     	;# 
  1880  0617                     	;# 
  1881  0618                     	;# 
  1882  0619                     	;# 
  1883  061A                     	;# 
  1884  061B                     	;# 
  1885  061C                     	;# 
  1886  061D                     	;# 
  1887  061E                     	;# 
  1888  068C                     	;# 
  1889  068D                     	;# 
  1890  068E                     	;# 
  1891  068F                     	;# 
  1892  0690                     	;# 
  1893  0691                     	;# 
  1894  0692                     	;# 
  1895  0693                     	;# 
  1896  0694                     	;# 
  1897  070C                     	;# 
  1898  070D                     	;# 
  1899  070E                     	;# 
  1900  070F                     	;# 
  1901  0710                     	;# 
  1902  0711                     	;# 
  1903  0712                     	;# 
  1904  0713                     	;# 
  1905  0714                     	;# 
  1906  0716                     	;# 
  1907  0717                     	;# 
  1908  0718                     	;# 
  1909  0719                     	;# 
  1910  071A                     	;# 
  1911  071B                     	;# 
  1912  071C                     	;# 
  1913  071D                     	;# 
  1914  071E                     	;# 
  1915  0796                     	;# 
  1916  0797                     	;# 
  1917  0798                     	;# 
  1918  0799                     	;# 
  1919  079A                     	;# 
  1920  079B                     	;# 
  1921  080C                     	;# 
  1922  080D                     	;# 
  1923  080E                     	;# 
  1924  080F                     	;# 
  1925  0810                     	;# 
  1926  0811                     	;# 
  1927  0812                     	;# 
  1928  0813                     	;# 
  1929  0814                     	;# 
  1930  081A                     	;# 
  1931  081B                     	;# 
  1932  081C                     	;# 
  1933  081D                     	;# 
  1934  081E                     	;# 
  1935  081F                     	;# 
  1936  088C                     	;# 
  1937  088D                     	;# 
  1938  088E                     	;# 
  1939  088F                     	;# 
  1940  0890                     	;# 
  1941  0891                     	;# 
  1942  0892                     	;# 
  1943  0893                     	;# 
  1944  0895                     	;# 
  1945  0896                     	;# 
  1946  0897                     	;# 
  1947  0898                     	;# 
  1948  0899                     	;# 
  1949  089A                     	;# 
  1950  089B                     	;# 
  1951  090C                     	;# 
  1952  090E                     	;# 
  1953  090F                     	;# 
  1954  091F                     	;# 
  1955  091F                     	;# 
  1956  098F                     	;# 
  1957  098F                     	;# 
  1958  0990                     	;# 
  1959  0991                     	;# 
  1960  0992                     	;# 
  1961  0993                     	;# 
  1962  0994                     	;# 
  1963  0995                     	;# 
  1964  0996                     	;# 
  1965  0997                     	;# 
  1966  0E0F                     	;# 
  1967  0E10                     	;# 
  1968  0E11                     	;# 
  1969  0E12                     	;# 
  1970  0E13                     	;# 
  1971  0E14                     	;# 
  1972  0E15                     	;# 
  1973  0E16                     	;# 
  1974  0E17                     	;# 
  1975  0E18                     	;# 
  1976  0E19                     	;# 
  1977  0E1A                     	;# 
  1978  0E1B                     	;# 
  1979  0E1C                     	;# 
  1980  0E1D                     	;# 
  1981  0E1E                     	;# 
  1982  0E1F                     	;# 
  1983  0E20                     	;# 
  1984  0E21                     	;# 
  1985  0E22                     	;# 
  1986  0E23                     	;# 
  1987  0E24                     	;# 
  1988  0E25                     	;# 
  1989  0E26                     	;# 
  1990  0E27                     	;# 
  1991  0E28                     	;# 
  1992  0E29                     	;# 
  1993  0E2A                     	;# 
  1994  0E2B                     	;# 
  1995  0E2C                     	;# 
  1996  0E2D                     	;# 
  1997  0E2E                     	;# 
  1998  0E2F                     	;# 
  1999  0E30                     	;# 
  2000  0E31                     	;# 
  2001  0E32                     	;# 
  2002  0E33                     	;# 
  2003  0E34                     	;# 
  2004  0E35                     	;# 
  2005  0E36                     	;# 
  2006  0E37                     	;# 
  2007  0E8F                     	;# 
  2008  0E90                     	;# 
  2009  0E91                     	;# 
  2010  0E92                     	;# 
  2011  0E93                     	;# 
  2012  0E94                     	;# 
  2013  0E95                     	;# 
  2014  0E96                     	;# 
  2015  0E97                     	;# 
  2016  0E9C                     	;# 
  2017  0E9D                     	;# 
  2018  0E9E                     	;# 
  2019  0EA1                     	;# 
  2020  0EA2                     	;# 
  2021  0EA3                     	;# 
  2022  0EA4                     	;# 
  2023  0EA5                     	;# 
  2024  0EA9                     	;# 
  2025  0EAA                     	;# 
  2026  0EAB                     	;# 
  2027  0EAC                     	;# 
  2028  0EB1                     	;# 
  2029  0EB2                     	;# 
  2030  0EB3                     	;# 
  2031  0EB8                     	;# 
  2032  0EB9                     	;# 
  2033  0EBA                     	;# 
  2034  0EBB                     	;# 
  2035  0EBC                     	;# 
  2036  0EBD                     	;# 
  2037  0EBE                     	;# 
  2038  0EC3                     	;# 
  2039  0EC5                     	;# 
  2040  0EC6                     	;# 
  2041  0EC7                     	;# 
  2042  0EC8                     	;# 
  2043  0EC9                     	;# 
  2044  0ECA                     	;# 
  2045  0ECB                     	;# 
  2046  0ECC                     	;# 
  2047  0F10                     	;# 
  2048  0F11                     	;# 
  2049  0F12                     	;# 
  2050  0F13                     	;# 
  2051  0F14                     	;# 
  2052  0F15                     	;# 
  2053  0F16                     	;# 
  2054  0F17                     	;# 
  2055  0F18                     	;# 
  2056  0F19                     	;# 
  2057  0F1A                     	;# 
  2058  0F1B                     	;# 
  2059  0F1C                     	;# 
  2060  0F1D                     	;# 
  2061  0F1E                     	;# 
  2062  0F1F                     	;# 
  2063  0F20                     	;# 
  2064  0F21                     	;# 
  2065  0F22                     	;# 
  2066  0F23                     	;# 
  2067  0F24                     	;# 
  2068  0F25                     	;# 
  2069  0F26                     	;# 
  2070  0F27                     	;# 
  2071  0F38                     	;# 
  2072  0F39                     	;# 
  2073  0F3A                     	;# 
  2074  0F3B                     	;# 
  2075  0F3C                     	;# 
  2076  0F3D                     	;# 
  2077  0F3E                     	;# 
  2078  0F3F                     	;# 
  2079  0F40                     	;# 
  2080  0F41                     	;# 
  2081  0F43                     	;# 
  2082  0F44                     	;# 
  2083  0F45                     	;# 
  2084  0F46                     	;# 
  2085  0F47                     	;# 
  2086  0F48                     	;# 
  2087  0F49                     	;# 
  2088  0F4A                     	;# 
  2089  0F4B                     	;# 
  2090  0F4C                     	;# 
  2091  0F4E                     	;# 
  2092  0F4F                     	;# 
  2093  0F50                     	;# 
  2094  0F51                     	;# 
  2095  0F52                     	;# 
  2096  0F53                     	;# 
  2097  0F54                     	;# 
  2098  0F55                     	;# 
  2099  0F56                     	;# 
  2100  0F57                     	;# 
  2101  0F65                     	;# 
  2102  0F68                     	;# 
  2103  0F69                     	;# 
  2104  0F6A                     	;# 
  2105  0F6B                     	;# 
  2106  0FE4                     	;# 
  2107  0FE5                     	;# 
  2108  0FE6                     	;# 
  2109  0FE7                     	;# 
  2110  0FE8                     	;# 
  2111  0FE9                     	;# 
  2112  0FEA                     	;# 
  2113  0FEB                     	;# 
  2114  0FED                     	;# 
  2115  0FEE                     	;# 
  2116  0FEF                     	;# 
  2117  0000                     	;# 
  2118  0001                     	;# 
  2119  0002                     	;# 
  2120  0003                     	;# 
  2121  0004                     	;# 
  2122  0005                     	;# 
  2123  0006                     	;# 
  2124  0007                     	;# 
  2125  0008                     	;# 
  2126  0009                     	;# 
  2127  000A                     	;# 
  2128  000B                     	;# 
  2129  000C                     	;# 
  2130  000D                     	;# 
  2131  000E                     	;# 
  2132  0010                     	;# 
  2133  0011                     	;# 
  2134  0012                     	;# 
  2135  0013                     	;# 
  2136  0016                     	;# 
  2137  0017                     	;# 
  2138  0018                     	;# 
  2139  001C                     	;# 
  2140  001C                     	;# 
  2141  001D                     	;# 
  2142  001D                     	;# 
  2143  001E                     	;# 
  2144  001F                     	;# 
  2145  008C                     	;# 
  2146  008C                     	;# 
  2147  008D                     	;# 
  2148  008E                     	;# 
  2149  008E                     	;# 
  2150  008F                     	;# 
  2151  0090                     	;# 
  2152  0090                     	;# 
  2153  0091                     	;# 
  2154  0093                     	;# 
  2155  0094                     	;# 
  2156  0095                     	;# 
  2157  0096                     	;# 
  2158  0097                     	;# 
  2159  0098                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009C                     	;# 
  2164  009D                     	;# 
  2165  009E                     	;# 
  2166  010C                     	;# 
  2167  010D                     	;# 
  2168  010E                     	;# 
  2169  010E                     	;# 
  2170  010F                     	;# 
  2171  0110                     	;# 
  2172  0110                     	;# 
  2173  0111                     	;# 
  2174  0112                     	;# 
  2175  0112                     	;# 
  2176  0113                     	;# 
  2177  0114                     	;# 
  2178  0114                     	;# 
  2179  0115                     	;# 
  2180  0116                     	;# 
  2181  0116                     	;# 
  2182  0117                     	;# 
  2183  0119                     	;# 
  2184  0119                     	;# 
  2185  0119                     	;# 
  2186  011A                     	;# 
  2187  011A                     	;# 
  2188  011A                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011B                     	;# 
  2193  011B                     	;# 
  2194  011C                     	;# 
  2195  011C                     	;# 
  2196  011C                     	;# 
  2197  011D                     	;# 
  2198  011D                     	;# 
  2199  011D                     	;# 
  2200  011E                     	;# 
  2201  011E                     	;# 
  2202  011E                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  011F                     	;# 
  2207  011F                     	;# 
  2208  018C                     	;# 
  2209  018D                     	;# 
  2210  018E                     	;# 
  2211  018F                     	;# 
  2212  0190                     	;# 
  2213  0191                     	;# 
  2214  0192                     	;# 
  2215  0196                     	;# 
  2216  0197                     	;# 
  2217  0198                     	;# 
  2218  0199                     	;# 
  2219  019A                     	;# 
  2220  019B                     	;# 
  2221  019C                     	;# 
  2222  020C                     	;# 
  2223  020D                     	;# 
  2224  020E                     	;# 
  2225  020F                     	;# 
  2226  020F                     	;# 
  2227  0210                     	;# 
  2228  0210                     	;# 
  2229  0211                     	;# 
  2230  0211                     	;# 
  2231  0212                     	;# 
  2232  0213                     	;# 
  2233  0214                     	;# 
  2234  0215                     	;# 
  2235  0215                     	;# 
  2236  0216                     	;# 
  2237  0216                     	;# 
  2238  0217                     	;# 
  2239  0217                     	;# 
  2240  0218                     	;# 
  2241  0219                     	;# 
  2242  021A                     	;# 
  2243  021B                     	;# 
  2244  021B                     	;# 
  2245  021C                     	;# 
  2246  021C                     	;# 
  2247  021D                     	;# 
  2248  021D                     	;# 
  2249  021E                     	;# 
  2250  021F                     	;# 
  2251  028C                     	;# 
  2252  028C                     	;# 
  2253  028D                     	;# 
  2254  028D                     	;# 
  2255  028E                     	;# 
  2256  028F                     	;# 
  2257  0290                     	;# 
  2258  0290                     	;# 
  2259  0291                     	;# 
  2260  0292                     	;# 
  2261  0292                     	;# 
  2262  0293                     	;# 
  2263  0293                     	;# 
  2264  0294                     	;# 
  2265  0295                     	;# 
  2266  0296                     	;# 
  2267  0296                     	;# 
  2268  0297                     	;# 
  2269  0298                     	;# 
  2270  0298                     	;# 
  2271  0299                     	;# 
  2272  0299                     	;# 
  2273  029A                     	;# 
  2274  029B                     	;# 
  2275  029C                     	;# 
  2276  029C                     	;# 
  2277  029D                     	;# 
  2278  030C                     	;# 
  2279  030C                     	;# 
  2280  030D                     	;# 
  2281  030E                     	;# 
  2282  030F                     	;# 
  2283  0310                     	;# 
  2284  0310                     	;# 
  2285  0311                     	;# 
  2286  0312                     	;# 
  2287  0313                     	;# 
  2288  0314                     	;# 
  2289  0314                     	;# 
  2290  0315                     	;# 
  2291  0316                     	;# 
  2292  0317                     	;# 
  2293  0318                     	;# 
  2294  0318                     	;# 
  2295  0319                     	;# 
  2296  031A                     	;# 
  2297  031B                     	;# 
  2298  031C                     	;# 
  2299  031C                     	;# 
  2300  031D                     	;# 
  2301  031E                     	;# 
  2302  031F                     	;# 
  2303  038C                     	;# 
  2304  038D                     	;# 
  2305  038E                     	;# 
  2306  0390                     	;# 
  2307  0391                     	;# 
  2308  0392                     	;# 
  2309  040C                     	;# 
  2310  040D                     	;# 
  2311  040E                     	;# 
  2312  040F                     	;# 
  2313  0410                     	;# 
  2314  0411                     	;# 
  2315  0416                     	;# 
  2316  0416                     	;# 
  2317  0417                     	;# 
  2318  0418                     	;# 
  2319  0418                     	;# 
  2320  0419                     	;# 
  2321  041A                     	;# 
  2322  041A                     	;# 
  2323  041B                     	;# 
  2324  041C                     	;# 
  2325  041C                     	;# 
  2326  041D                     	;# 
  2327  041E                     	;# 
  2328  041F                     	;# 
  2329  048C                     	;# 
  2330  048C                     	;# 
  2331  048D                     	;# 
  2332  048E                     	;# 
  2333  048F                     	;# 
  2334  048F                     	;# 
  2335  0490                     	;# 
  2336  0491                     	;# 
  2337  0492                     	;# 
  2338  0492                     	;# 
  2339  0493                     	;# 
  2340  0494                     	;# 
  2341  0495                     	;# 
  2342  0495                     	;# 
  2343  0496                     	;# 
  2344  0497                     	;# 
  2345  0498                     	;# 
  2346  0499                     	;# 
  2347  049A                     	;# 
  2348  049B                     	;# 
  2349  049C                     	;# 
  2350  049D                     	;# 
  2351  050C                     	;# 
  2352  050C                     	;# 
  2353  050D                     	;# 
  2354  050E                     	;# 
  2355  050F                     	;# 
  2356  050F                     	;# 
  2357  0510                     	;# 
  2358  0511                     	;# 
  2359  0512                     	;# 
  2360  0512                     	;# 
  2361  0513                     	;# 
  2362  0514                     	;# 
  2363  0515                     	;# 
  2364  0515                     	;# 
  2365  0516                     	;# 
  2366  0517                     	;# 
  2367  0518                     	;# 
  2368  0519                     	;# 
  2369  051A                     	;# 
  2370  051B                     	;# 
  2371  051C                     	;# 
  2372  051D                     	;# 
  2373  058C                     	;# 
  2374  058C                     	;# 
  2375  058D                     	;# 
  2376  058E                     	;# 
  2377  058F                     	;# 
  2378  058F                     	;# 
  2379  0590                     	;# 
  2380  0591                     	;# 
  2381  0592                     	;# 
  2382  0593                     	;# 
  2383  060C                     	;# 
  2384  060D                     	;# 
  2385  060E                     	;# 
  2386  060F                     	;# 
  2387  0610                     	;# 
  2388  0611                     	;# 
  2389  0612                     	;# 
  2390  0613                     	;# 
  2391  0614                     	;# 
  2392  0616                     	;# 
  2393  0617                     	;# 
  2394  0618                     	;# 
  2395  0619                     	;# 
  2396  061A                     	;# 
  2397  061B                     	;# 
  2398  061C                     	;# 
  2399  061D                     	;# 
  2400  061E                     	;# 
  2401  068C                     	;# 
  2402  068D                     	;# 
  2403  068E                     	;# 
  2404  068F                     	;# 
  2405  0690                     	;# 
  2406  0691                     	;# 
  2407  0692                     	;# 
  2408  0693                     	;# 
  2409  0694                     	;# 
  2410  070C                     	;# 
  2411  070D                     	;# 
  2412  070E                     	;# 
  2413  070F                     	;# 
  2414  0710                     	;# 
  2415  0711                     	;# 
  2416  0712                     	;# 
  2417  0713                     	;# 
  2418  0714                     	;# 
  2419  0716                     	;# 
  2420  0717                     	;# 
  2421  0718                     	;# 
  2422  0719                     	;# 
  2423  071A                     	;# 
  2424  071B                     	;# 
  2425  071C                     	;# 
  2426  071D                     	;# 
  2427  071E                     	;# 
  2428  0796                     	;# 
  2429  0797                     	;# 
  2430  0798                     	;# 
  2431  0799                     	;# 
  2432  079A                     	;# 
  2433  079B                     	;# 
  2434  080C                     	;# 
  2435  080D                     	;# 
  2436  080E                     	;# 
  2437  080F                     	;# 
  2438  0810                     	;# 
  2439  0811                     	;# 
  2440  0812                     	;# 
  2441  0813                     	;# 
  2442  0814                     	;# 
  2443  081A                     	;# 
  2444  081B                     	;# 
  2445  081C                     	;# 
  2446  081D                     	;# 
  2447  081E                     	;# 
  2448  081F                     	;# 
  2449  088C                     	;# 
  2450  088D                     	;# 
  2451  088E                     	;# 
  2452  088F                     	;# 
  2453  0890                     	;# 
  2454  0891                     	;# 
  2455  0892                     	;# 
  2456  0893                     	;# 
  2457  0895                     	;# 
  2458  0896                     	;# 
  2459  0897                     	;# 
  2460  0898                     	;# 
  2461  0899                     	;# 
  2462  089A                     	;# 
  2463  089B                     	;# 
  2464  090C                     	;# 
  2465  090E                     	;# 
  2466  090F                     	;# 
  2467  091F                     	;# 
  2468  091F                     	;# 
  2469  098F                     	;# 
  2470  098F                     	;# 
  2471  0990                     	;# 
  2472  0991                     	;# 
  2473  0992                     	;# 
  2474  0993                     	;# 
  2475  0994                     	;# 
  2476  0995                     	;# 
  2477  0996                     	;# 
  2478  0997                     	;# 
  2479  0E0F                     	;# 
  2480  0E10                     	;# 
  2481  0E11                     	;# 
  2482  0E12                     	;# 
  2483  0E13                     	;# 
  2484  0E14                     	;# 
  2485  0E15                     	;# 
  2486  0E16                     	;# 
  2487  0E17                     	;# 
  2488  0E18                     	;# 
  2489  0E19                     	;# 
  2490  0E1A                     	;# 
  2491  0E1B                     	;# 
  2492  0E1C                     	;# 
  2493  0E1D                     	;# 
  2494  0E1E                     	;# 
  2495  0E1F                     	;# 
  2496  0E20                     	;# 
  2497  0E21                     	;# 
  2498  0E22                     	;# 
  2499  0E23                     	;# 
  2500  0E24                     	;# 
  2501  0E25                     	;# 
  2502  0E26                     	;# 
  2503  0E27                     	;# 
  2504  0E28                     	;# 
  2505  0E29                     	;# 
  2506  0E2A                     	;# 
  2507  0E2B                     	;# 
  2508  0E2C                     	;# 
  2509  0E2D                     	;# 
  2510  0E2E                     	;# 
  2511  0E2F                     	;# 
  2512  0E30                     	;# 
  2513  0E31                     	;# 
  2514  0E32                     	;# 
  2515  0E33                     	;# 
  2516  0E34                     	;# 
  2517  0E35                     	;# 
  2518  0E36                     	;# 
  2519  0E37                     	;# 
  2520  0E8F                     	;# 
  2521  0E90                     	;# 
  2522  0E91                     	;# 
  2523  0E92                     	;# 
  2524  0E93                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E96                     	;# 
  2528  0E97                     	;# 
  2529  0E9C                     	;# 
  2530  0E9D                     	;# 
  2531  0E9E                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA9                     	;# 
  2538  0EAA                     	;# 
  2539  0EAB                     	;# 
  2540  0EAC                     	;# 
  2541  0EB1                     	;# 
  2542  0EB2                     	;# 
  2543  0EB3                     	;# 
  2544  0EB8                     	;# 
  2545  0EB9                     	;# 
  2546  0EBA                     	;# 
  2547  0EBB                     	;# 
  2548  0EBC                     	;# 
  2549  0EBD                     	;# 
  2550  0EBE                     	;# 
  2551  0EC3                     	;# 
  2552  0EC5                     	;# 
  2553  0EC6                     	;# 
  2554  0EC7                     	;# 
  2555  0EC8                     	;# 
  2556  0EC9                     	;# 
  2557  0ECA                     	;# 
  2558  0ECB                     	;# 
  2559  0ECC                     	;# 
  2560  0F10                     	;# 
  2561  0F11                     	;# 
  2562  0F12                     	;# 
  2563  0F13                     	;# 
  2564  0F14                     	;# 
  2565  0F15                     	;# 
  2566  0F16                     	;# 
  2567  0F17                     	;# 
  2568  0F18                     	;# 
  2569  0F19                     	;# 
  2570  0F1A                     	;# 
  2571  0F1B                     	;# 
  2572  0F1C                     	;# 
  2573  0F1D                     	;# 
  2574  0F1E                     	;# 
  2575  0F1F                     	;# 
  2576  0F20                     	;# 
  2577  0F21                     	;# 
  2578  0F22                     	;# 
  2579  0F23                     	;# 
  2580  0F24                     	;# 
  2581  0F25                     	;# 
  2582  0F26                     	;# 
  2583  0F27                     	;# 
  2584  0F38                     	;# 
  2585  0F39                     	;# 
  2586  0F3A                     	;# 
  2587  0F3B                     	;# 
  2588  0F3C                     	;# 
  2589  0F3D                     	;# 
  2590  0F3E                     	;# 
  2591  0F3F                     	;# 
  2592  0F40                     	;# 
  2593  0F41                     	;# 
  2594  0F43                     	;# 
  2595  0F44                     	;# 
  2596  0F45                     	;# 
  2597  0F46                     	;# 
  2598  0F47                     	;# 
  2599  0F48                     	;# 
  2600  0F49                     	;# 
  2601  0F4A                     	;# 
  2602  0F4B                     	;# 
  2603  0F4C                     	;# 
  2604  0F4E                     	;# 
  2605  0F4F                     	;# 
  2606  0F50                     	;# 
  2607  0F51                     	;# 
  2608  0F52                     	;# 
  2609  0F53                     	;# 
  2610  0F54                     	;# 
  2611  0F55                     	;# 
  2612  0F56                     	;# 
  2613  0F57                     	;# 
  2614  0F65                     	;# 
  2615  0F68                     	;# 
  2616  0F69                     	;# 
  2617  0F6A                     	;# 
  2618  0F6B                     	;# 
  2619  0FE4                     	;# 
  2620  0FE5                     	;# 
  2621  0FE6                     	;# 
  2622  0FE7                     	;# 
  2623  0FE8                     	;# 
  2624  0FE9                     	;# 
  2625  0FEA                     	;# 
  2626  0FEB                     	;# 
  2627  0FED                     	;# 
  2628  0FEE                     	;# 
  2629  0FEF                     	;# 
  2630  0000                     	;# 
  2631  0001                     	;# 
  2632  0002                     	;# 
  2633  0003                     	;# 
  2634  0004                     	;# 
  2635  0005                     	;# 
  2636  0006                     	;# 
  2637  0007                     	;# 
  2638  0008                     	;# 
  2639  0009                     	;# 
  2640  000A                     	;# 
  2641  000B                     	;# 
  2642  000C                     	;# 
  2643  000D                     	;# 
  2644  000E                     	;# 
  2645  0010                     	;# 
  2646  0011                     	;# 
  2647  0012                     	;# 
  2648  0013                     	;# 
  2649  0016                     	;# 
  2650  0017                     	;# 
  2651  0018                     	;# 
  2652  001C                     	;# 
  2653  001C                     	;# 
  2654  001D                     	;# 
  2655  001D                     	;# 
  2656  001E                     	;# 
  2657  001F                     	;# 
  2658  008C                     	;# 
  2659  008C                     	;# 
  2660  008D                     	;# 
  2661  008E                     	;# 
  2662  008E                     	;# 
  2663  008F                     	;# 
  2664  0090                     	;# 
  2665  0090                     	;# 
  2666  0091                     	;# 
  2667  0093                     	;# 
  2668  0094                     	;# 
  2669  0095                     	;# 
  2670  0096                     	;# 
  2671  0097                     	;# 
  2672  0098                     	;# 
  2673  0099                     	;# 
  2674  009A                     	;# 
  2675  009B                     	;# 
  2676  009C                     	;# 
  2677  009D                     	;# 
  2678  009E                     	;# 
  2679  010C                     	;# 
  2680  010D                     	;# 
  2681  010E                     	;# 
  2682  010E                     	;# 
  2683  010F                     	;# 
  2684  0110                     	;# 
  2685  0110                     	;# 
  2686  0111                     	;# 
  2687  0112                     	;# 
  2688  0112                     	;# 
  2689  0113                     	;# 
  2690  0114                     	;# 
  2691  0114                     	;# 
  2692  0115                     	;# 
  2693  0116                     	;# 
  2694  0116                     	;# 
  2695  0117                     	;# 
  2696  0119                     	;# 
  2697  0119                     	;# 
  2698  0119                     	;# 
  2699  011A                     	;# 
  2700  011A                     	;# 
  2701  011A                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011B                     	;# 
  2706  011B                     	;# 
  2707  011C                     	;# 
  2708  011C                     	;# 
  2709  011C                     	;# 
  2710  011D                     	;# 
  2711  011D                     	;# 
  2712  011D                     	;# 
  2713  011E                     	;# 
  2714  011E                     	;# 
  2715  011E                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  011F                     	;# 
  2720  011F                     	;# 
  2721  018C                     	;# 
  2722  018D                     	;# 
  2723  018E                     	;# 
  2724  018F                     	;# 
  2725  0190                     	;# 
  2726  0191                     	;# 
  2727  0192                     	;# 
  2728  0196                     	;# 
  2729  0197                     	;# 
  2730  0198                     	;# 
  2731  0199                     	;# 
  2732  019A                     	;# 
  2733  019B                     	;# 
  2734  019C                     	;# 
  2735  020C                     	;# 
  2736  020D                     	;# 
  2737  020E                     	;# 
  2738  020F                     	;# 
  2739  020F                     	;# 
  2740  0210                     	;# 
  2741  0210                     	;# 
  2742  0211                     	;# 
  2743  0211                     	;# 
  2744  0212                     	;# 
  2745  0213                     	;# 
  2746  0214                     	;# 
  2747  0215                     	;# 
  2748  0215                     	;# 
  2749  0216                     	;# 
  2750  0216                     	;# 
  2751  0217                     	;# 
  2752  0217                     	;# 
  2753  0218                     	;# 
  2754  0219                     	;# 
  2755  021A                     	;# 
  2756  021B                     	;# 
  2757  021B                     	;# 
  2758  021C                     	;# 
  2759  021C                     	;# 
  2760  021D                     	;# 
  2761  021D                     	;# 
  2762  021E                     	;# 
  2763  021F                     	;# 
  2764  028C                     	;# 
  2765  028C                     	;# 
  2766  028D                     	;# 
  2767  028D                     	;# 
  2768  028E                     	;# 
  2769  028F                     	;# 
  2770  0290                     	;# 
  2771  0290                     	;# 
  2772  0291                     	;# 
  2773  0292                     	;# 
  2774  0292                     	;# 
  2775  0293                     	;# 
  2776  0293                     	;# 
  2777  0294                     	;# 
  2778  0295                     	;# 
  2779  0296                     	;# 
  2780  0296                     	;# 
  2781  0297                     	;# 
  2782  0298                     	;# 
  2783  0298                     	;# 
  2784  0299                     	;# 
  2785  0299                     	;# 
  2786  029A                     	;# 
  2787  029B                     	;# 
  2788  029C                     	;# 
  2789  029C                     	;# 
  2790  029D                     	;# 
  2791  030C                     	;# 
  2792  030C                     	;# 
  2793  030D                     	;# 
  2794  030E                     	;# 
  2795  030F                     	;# 
  2796  0310                     	;# 
  2797  0310                     	;# 
  2798  0311                     	;# 
  2799  0312                     	;# 
  2800  0313                     	;# 
  2801  0314                     	;# 
  2802  0314                     	;# 
  2803  0315                     	;# 
  2804  0316                     	;# 
  2805  0317                     	;# 
  2806  0318                     	;# 
  2807  0318                     	;# 
  2808  0319                     	;# 
  2809  031A                     	;# 
  2810  031B                     	;# 
  2811  031C                     	;# 
  2812  031C                     	;# 
  2813  031D                     	;# 
  2814  031E                     	;# 
  2815  031F                     	;# 
  2816  038C                     	;# 
  2817  038D                     	;# 
  2818  038E                     	;# 
  2819  0390                     	;# 
  2820  0391                     	;# 
  2821  0392                     	;# 
  2822  040C                     	;# 
  2823  040D                     	;# 
  2824  040E                     	;# 
  2825  040F                     	;# 
  2826  0410                     	;# 
  2827  0411                     	;# 
  2828  0416                     	;# 
  2829  0416                     	;# 
  2830  0417                     	;# 
  2831  0418                     	;# 
  2832  0418                     	;# 
  2833  0419                     	;# 
  2834  041A                     	;# 
  2835  041A                     	;# 
  2836  041B                     	;# 
  2837  041C                     	;# 
  2838  041C                     	;# 
  2839  041D                     	;# 
  2840  041E                     	;# 
  2841  041F                     	;# 
  2842  048C                     	;# 
  2843  048C                     	;# 
  2844  048D                     	;# 
  2845  048E                     	;# 
  2846  048F                     	;# 
  2847  048F                     	;# 
  2848  0490                     	;# 
  2849  0491                     	;# 
  2850  0492                     	;# 
  2851  0492                     	;# 
  2852  0493                     	;# 
  2853  0494                     	;# 
  2854  0495                     	;# 
  2855  0495                     	;# 
  2856  0496                     	;# 
  2857  0497                     	;# 
  2858  0498                     	;# 
  2859  0499                     	;# 
  2860  049A                     	;# 
  2861  049B                     	;# 
  2862  049C                     	;# 
  2863  049D                     	;# 
  2864  050C                     	;# 
  2865  050C                     	;# 
  2866  050D                     	;# 
  2867  050E                     	;# 
  2868  050F                     	;# 
  2869  050F                     	;# 
  2870  0510                     	;# 
  2871  0511                     	;# 
  2872  0512                     	;# 
  2873  0512                     	;# 
  2874  0513                     	;# 
  2875  0514                     	;# 
  2876  0515                     	;# 
  2877  0515                     	;# 
  2878  0516                     	;# 
  2879  0517                     	;# 
  2880  0518                     	;# 
  2881  0519                     	;# 
  2882  051A                     	;# 
  2883  051B                     	;# 
  2884  051C                     	;# 
  2885  051D                     	;# 
  2886  058C                     	;# 
  2887  058C                     	;# 
  2888  058D                     	;# 
  2889  058E                     	;# 
  2890  058F                     	;# 
  2891  058F                     	;# 
  2892  0590                     	;# 
  2893  0591                     	;# 
  2894  0592                     	;# 
  2895  0593                     	;# 
  2896  060C                     	;# 
  2897  060D                     	;# 
  2898  060E                     	;# 
  2899  060F                     	;# 
  2900  0610                     	;# 
  2901  0611                     	;# 
  2902  0612                     	;# 
  2903  0613                     	;# 
  2904  0614                     	;# 
  2905  0616                     	;# 
  2906  0617                     	;# 
  2907  0618                     	;# 
  2908  0619                     	;# 
  2909  061A                     	;# 
  2910  061B                     	;# 
  2911  061C                     	;# 
  2912  061D                     	;# 
  2913  061E                     	;# 
  2914  068C                     	;# 
  2915  068D                     	;# 
  2916  068E                     	;# 
  2917  068F                     	;# 
  2918  0690                     	;# 
  2919  0691                     	;# 
  2920  0692                     	;# 
  2921  0693                     	;# 
  2922  0694                     	;# 
  2923  070C                     	;# 
  2924  070D                     	;# 
  2925  070E                     	;# 
  2926  070F                     	;# 
  2927  0710                     	;# 
  2928  0711                     	;# 
  2929  0712                     	;# 
  2930  0713                     	;# 
  2931  0714                     	;# 
  2932  0716                     	;# 
  2933  0717                     	;# 
  2934  0718                     	;# 
  2935  0719                     	;# 
  2936  071A                     	;# 
  2937  071B                     	;# 
  2938  071C                     	;# 
  2939  071D                     	;# 
  2940  071E                     	;# 
  2941  0796                     	;# 
  2942  0797                     	;# 
  2943  0798                     	;# 
  2944  0799                     	;# 
  2945  079A                     	;# 
  2946  079B                     	;# 
  2947  080C                     	;# 
  2948  080D                     	;# 
  2949  080E                     	;# 
  2950  080F                     	;# 
  2951  0810                     	;# 
  2952  0811                     	;# 
  2953  0812                     	;# 
  2954  0813                     	;# 
  2955  0814                     	;# 
  2956  081A                     	;# 
  2957  081B                     	;# 
  2958  081C                     	;# 
  2959  081D                     	;# 
  2960  081E                     	;# 
  2961  081F                     	;# 
  2962  088C                     	;# 
  2963  088D                     	;# 
  2964  088E                     	;# 
  2965  088F                     	;# 
  2966  0890                     	;# 
  2967  0891                     	;# 
  2968  0892                     	;# 
  2969  0893                     	;# 
  2970  0895                     	;# 
  2971  0896                     	;# 
  2972  0897                     	;# 
  2973  0898                     	;# 
  2974  0899                     	;# 
  2975  089A                     	;# 
  2976  089B                     	;# 
  2977  090C                     	;# 
  2978  090E                     	;# 
  2979  090F                     	;# 
  2980  091F                     	;# 
  2981  091F                     	;# 
  2982  098F                     	;# 
  2983  098F                     	;# 
  2984  0990                     	;# 
  2985  0991                     	;# 
  2986  0992                     	;# 
  2987  0993                     	;# 
  2988  0994                     	;# 
  2989  0995                     	;# 
  2990  0996                     	;# 
  2991  0997                     	;# 
  2992  0E0F                     	;# 
  2993  0E10                     	;# 
  2994  0E11                     	;# 
  2995  0E12                     	;# 
  2996  0E13                     	;# 
  2997  0E14                     	;# 
  2998  0E15                     	;# 
  2999  0E16                     	;# 
  3000  0E17                     	;# 
  3001  0E18                     	;# 
  3002  0E19                     	;# 
  3003  0E1A                     	;# 
  3004  0E1B                     	;# 
  3005  0E1C                     	;# 
  3006  0E1D                     	;# 
  3007  0E1E                     	;# 
  3008  0E1F                     	;# 
  3009  0E20                     	;# 
  3010  0E21                     	;# 
  3011  0E22                     	;# 
  3012  0E23                     	;# 
  3013  0E24                     	;# 
  3014  0E25                     	;# 
  3015  0E26                     	;# 
  3016  0E27                     	;# 
  3017  0E28                     	;# 
  3018  0E29                     	;# 
  3019  0E2A                     	;# 
  3020  0E2B                     	;# 
  3021  0E2C                     	;# 
  3022  0E2D                     	;# 
  3023  0E2E                     	;# 
  3024  0E2F                     	;# 
  3025  0E30                     	;# 
  3026  0E31                     	;# 
  3027  0E32                     	;# 
  3028  0E33                     	;# 
  3029  0E34                     	;# 
  3030  0E35                     	;# 
  3031  0E36                     	;# 
  3032  0E37                     	;# 
  3033  0E8F                     	;# 
  3034  0E90                     	;# 
  3035  0E91                     	;# 
  3036  0E92                     	;# 
  3037  0E93                     	;# 
  3038  0E94                     	;# 
  3039  0E95                     	;# 
  3040  0E96                     	;# 
  3041  0E97                     	;# 
  3042  0E9C                     	;# 
  3043  0E9D                     	;# 
  3044  0E9E                     	;# 
  3045  0EA1                     	;# 
  3046  0EA2                     	;# 
  3047  0EA3                     	;# 
  3048  0EA4                     	;# 
  3049  0EA5                     	;# 
  3050  0EA9                     	;# 
  3051  0EAA                     	;# 
  3052  0EAB                     	;# 
  3053  0EAC                     	;# 
  3054  0EB1                     	;# 
  3055  0EB2                     	;# 
  3056  0EB3                     	;# 
  3057  0EB8                     	;# 
  3058  0EB9                     	;# 
  3059  0EBA                     	;# 
  3060  0EBB                     	;# 
  3061  0EBC                     	;# 
  3062  0EBD                     	;# 
  3063  0EBE                     	;# 
  3064  0EC3                     	;# 
  3065  0EC5                     	;# 
  3066  0EC6                     	;# 
  3067  0EC7                     	;# 
  3068  0EC8                     	;# 
  3069  0EC9                     	;# 
  3070  0ECA                     	;# 
  3071  0ECB                     	;# 
  3072  0ECC                     	;# 
  3073  0F10                     	;# 
  3074  0F11                     	;# 
  3075  0F12                     	;# 
  3076  0F13                     	;# 
  3077  0F14                     	;# 
  3078  0F15                     	;# 
  3079  0F16                     	;# 
  3080  0F17                     	;# 
  3081  0F18                     	;# 
  3082  0F19                     	;# 
  3083  0F1A                     	;# 
  3084  0F1B                     	;# 
  3085  0F1C                     	;# 
  3086  0F1D                     	;# 
  3087  0F1E                     	;# 
  3088  0F1F                     	;# 
  3089  0F20                     	;# 
  3090  0F21                     	;# 
  3091  0F22                     	;# 
  3092  0F23                     	;# 
  3093  0F24                     	;# 
  3094  0F25                     	;# 
  3095  0F26                     	;# 
  3096  0F27                     	;# 
  3097  0F38                     	;# 
  3098  0F39                     	;# 
  3099  0F3A                     	;# 
  3100  0F3B                     	;# 
  3101  0F3C                     	;# 
  3102  0F3D                     	;# 
  3103  0F3E                     	;# 
  3104  0F3F                     	;# 
  3105  0F40                     	;# 
  3106  0F41                     	;# 
  3107  0F43                     	;# 
  3108  0F44                     	;# 
  3109  0F45                     	;# 
  3110  0F46                     	;# 
  3111  0F47                     	;# 
  3112  0F48                     	;# 
  3113  0F49                     	;# 
  3114  0F4A                     	;# 
  3115  0F4B                     	;# 
  3116  0F4C                     	;# 
  3117  0F4E                     	;# 
  3118  0F4F                     	;# 
  3119  0F50                     	;# 
  3120  0F51                     	;# 
  3121  0F52                     	;# 
  3122  0F53                     	;# 
  3123  0F54                     	;# 
  3124  0F55                     	;# 
  3125  0F56                     	;# 
  3126  0F57                     	;# 
  3127  0F65                     	;# 
  3128  0F68                     	;# 
  3129  0F69                     	;# 
  3130  0F6A                     	;# 
  3131  0F6B                     	;# 
  3132  0FE4                     	;# 
  3133  0FE5                     	;# 
  3134  0FE6                     	;# 
  3135  0FE7                     	;# 
  3136  0FE8                     	;# 
  3137  0FE9                     	;# 
  3138  0FEA                     	;# 
  3139  0FEB                     	;# 
  3140  0FED                     	;# 
  3141  0FEE                     	;# 
  3142  0FEF                     	;# 
  3143  0000                     	;# 
  3144  0001                     	;# 
  3145  0002                     	;# 
  3146  0003                     	;# 
  3147  0004                     	;# 
  3148  0005                     	;# 
  3149  0006                     	;# 
  3150  0007                     	;# 
  3151  0008                     	;# 
  3152  0009                     	;# 
  3153  000A                     	;# 
  3154  000B                     	;# 
  3155  000C                     	;# 
  3156  000D                     	;# 
  3157  000E                     	;# 
  3158  0010                     	;# 
  3159  0011                     	;# 
  3160  0012                     	;# 
  3161  0013                     	;# 
  3162  0016                     	;# 
  3163  0017                     	;# 
  3164  0018                     	;# 
  3165  001C                     	;# 
  3166  001C                     	;# 
  3167  001D                     	;# 
  3168  001D                     	;# 
  3169  001E                     	;# 
  3170  001F                     	;# 
  3171  008C                     	;# 
  3172  008C                     	;# 
  3173  008D                     	;# 
  3174  008E                     	;# 
  3175  008E                     	;# 
  3176  008F                     	;# 
  3177  0090                     	;# 
  3178  0090                     	;# 
  3179  0091                     	;# 
  3180  0093                     	;# 
  3181  0094                     	;# 
  3182  0095                     	;# 
  3183  0096                     	;# 
  3184  0097                     	;# 
  3185  0098                     	;# 
  3186  0099                     	;# 
  3187  009A                     	;# 
  3188  009B                     	;# 
  3189  009C                     	;# 
  3190  009D                     	;# 
  3191  009E                     	;# 
  3192  010C                     	;# 
  3193  010D                     	;# 
  3194  010E                     	;# 
  3195  010E                     	;# 
  3196  010F                     	;# 
  3197  0110                     	;# 
  3198  0110                     	;# 
  3199  0111                     	;# 
  3200  0112                     	;# 
  3201  0112                     	;# 
  3202  0113                     	;# 
  3203  0114                     	;# 
  3204  0114                     	;# 
  3205  0115                     	;# 
  3206  0116                     	;# 
  3207  0116                     	;# 
  3208  0117                     	;# 
  3209  0119                     	;# 
  3210  0119                     	;# 
  3211  0119                     	;# 
  3212  011A                     	;# 
  3213  011A                     	;# 
  3214  011A                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011B                     	;# 
  3219  011B                     	;# 
  3220  011C                     	;# 
  3221  011C                     	;# 
  3222  011C                     	;# 
  3223  011D                     	;# 
  3224  011D                     	;# 
  3225  011D                     	;# 
  3226  011E                     	;# 
  3227  011E                     	;# 
  3228  011E                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  011F                     	;# 
  3233  011F                     	;# 
  3234  018C                     	;# 
  3235  018D                     	;# 
  3236  018E                     	;# 
  3237  018F                     	;# 
  3238  0190                     	;# 
  3239  0191                     	;# 
  3240  0192                     	;# 
  3241  0196                     	;# 
  3242  0197                     	;# 
  3243  0198                     	;# 
  3244  0199                     	;# 
  3245  019A                     	;# 
  3246  019B                     	;# 
  3247  019C                     	;# 
  3248  020C                     	;# 
  3249  020D                     	;# 
  3250  020E                     	;# 
  3251  020F                     	;# 
  3252  020F                     	;# 
  3253  0210                     	;# 
  3254  0210                     	;# 
  3255  0211                     	;# 
  3256  0211                     	;# 
  3257  0212                     	;# 
  3258  0213                     	;# 
  3259  0214                     	;# 
  3260  0215                     	;# 
  3261  0215                     	;# 
  3262  0216                     	;# 
  3263  0216                     	;# 
  3264  0217                     	;# 
  3265  0217                     	;# 
  3266  0218                     	;# 
  3267  0219                     	;# 
  3268  021A                     	;# 
  3269  021B                     	;# 
  3270  021B                     	;# 
  3271  021C                     	;# 
  3272  021C                     	;# 
  3273  021D                     	;# 
  3274  021D                     	;# 
  3275  021E                     	;# 
  3276  021F                     	;# 
  3277  028C                     	;# 
  3278  028C                     	;# 
  3279  028D                     	;# 
  3280  028D                     	;# 
  3281  028E                     	;# 
  3282  028F                     	;# 
  3283  0290                     	;# 
  3284  0290                     	;# 
  3285  0291                     	;# 
  3286  0292                     	;# 
  3287  0292                     	;# 
  3288  0293                     	;# 
  3289  0293                     	;# 
  3290  0294                     	;# 
  3291  0295                     	;# 
  3292  0296                     	;# 
  3293  0296                     	;# 
  3294  0297                     	;# 
  3295  0298                     	;# 
  3296  0298                     	;# 
  3297  0299                     	;# 
  3298  0299                     	;# 
  3299  029A                     	;# 
  3300  029B                     	;# 
  3301  029C                     	;# 
  3302  029C                     	;# 
  3303  029D                     	;# 
  3304  030C                     	;# 
  3305  030C                     	;# 
  3306  030D                     	;# 
  3307  030E                     	;# 
  3308  030F                     	;# 
  3309  0310                     	;# 
  3310  0310                     	;# 
  3311  0311                     	;# 
  3312  0312                     	;# 
  3313  0313                     	;# 
  3314  0314                     	;# 
  3315  0314                     	;# 
  3316  0315                     	;# 
  3317  0316                     	;# 
  3318  0317                     	;# 
  3319  0318                     	;# 
  3320  0318                     	;# 
  3321  0319                     	;# 
  3322  031A                     	;# 
  3323  031B                     	;# 
  3324  031C                     	;# 
  3325  031C                     	;# 
  3326  031D                     	;# 
  3327  031E                     	;# 
  3328  031F                     	;# 
  3329  038C                     	;# 
  3330  038D                     	;# 
  3331  038E                     	;# 
  3332  0390                     	;# 
  3333  0391                     	;# 
  3334  0392                     	;# 
  3335  040C                     	;# 
  3336  040D                     	;# 
  3337  040E                     	;# 
  3338  040F                     	;# 
  3339  0410                     	;# 
  3340  0411                     	;# 
  3341  0416                     	;# 
  3342  0416                     	;# 
  3343  0417                     	;# 
  3344  0418                     	;# 
  3345  0418                     	;# 
  3346  0419                     	;# 
  3347  041A                     	;# 
  3348  041A                     	;# 
  3349  041B                     	;# 
  3350  041C                     	;# 
  3351  041C                     	;# 
  3352  041D                     	;# 
  3353  041E                     	;# 
  3354  041F                     	;# 
  3355  048C                     	;# 
  3356  048C                     	;# 
  3357  048D                     	;# 
  3358  048E                     	;# 
  3359  048F                     	;# 
  3360  048F                     	;# 
  3361  0490                     	;# 
  3362  0491                     	;# 
  3363  0492                     	;# 
  3364  0492                     	;# 
  3365  0493                     	;# 
  3366  0494                     	;# 
  3367  0495                     	;# 
  3368  0495                     	;# 
  3369  0496                     	;# 
  3370  0497                     	;# 
  3371  0498                     	;# 
  3372  0499                     	;# 
  3373  049A                     	;# 
  3374  049B                     	;# 
  3375  049C                     	;# 
  3376  049D                     	;# 
  3377  050C                     	;# 
  3378  050C                     	;# 
  3379  050D                     	;# 
  3380  050E                     	;# 
  3381  050F                     	;# 
  3382  050F                     	;# 
  3383  0510                     	;# 
  3384  0511                     	;# 
  3385  0512                     	;# 
  3386  0512                     	;# 
  3387  0513                     	;# 
  3388  0514                     	;# 
  3389  0515                     	;# 
  3390  0515                     	;# 
  3391  0516                     	;# 
  3392  0517                     	;# 
  3393  0518                     	;# 
  3394  0519                     	;# 
  3395  051A                     	;# 
  3396  051B                     	;# 
  3397  051C                     	;# 
  3398  051D                     	;# 
  3399  058C                     	;# 
  3400  058C                     	;# 
  3401  058D                     	;# 
  3402  058E                     	;# 
  3403  058F                     	;# 
  3404  058F                     	;# 
  3405  0590                     	;# 
  3406  0591                     	;# 
  3407  0592                     	;# 
  3408  0593                     	;# 
  3409  060C                     	;# 
  3410  060D                     	;# 
  3411  060E                     	;# 
  3412  060F                     	;# 
  3413  0610                     	;# 
  3414  0611                     	;# 
  3415  0612                     	;# 
  3416  0613                     	;# 
  3417  0614                     	;# 
  3418  0616                     	;# 
  3419  0617                     	;# 
  3420  0618                     	;# 
  3421  0619                     	;# 
  3422  061A                     	;# 
  3423  061B                     	;# 
  3424  061C                     	;# 
  3425  061D                     	;# 
  3426  061E                     	;# 
  3427  068C                     	;# 
  3428  068D                     	;# 
  3429  068E                     	;# 
  3430  068F                     	;# 
  3431  0690                     	;# 
  3432  0691                     	;# 
  3433  0692                     	;# 
  3434  0693                     	;# 
  3435  0694                     	;# 
  3436  070C                     	;# 
  3437  070D                     	;# 
  3438  070E                     	;# 
  3439  070F                     	;# 
  3440  0710                     	;# 
  3441  0711                     	;# 
  3442  0712                     	;# 
  3443  0713                     	;# 
  3444  0714                     	;# 
  3445  0716                     	;# 
  3446  0717                     	;# 
  3447  0718                     	;# 
  3448  0719                     	;# 
  3449  071A                     	;# 
  3450  071B                     	;# 
  3451  071C                     	;# 
  3452  071D                     	;# 
  3453  071E                     	;# 
  3454  0796                     	;# 
  3455  0797                     	;# 
  3456  0798                     	;# 
  3457  0799                     	;# 
  3458  079A                     	;# 
  3459  079B                     	;# 
  3460  080C                     	;# 
  3461  080D                     	;# 
  3462  080E                     	;# 
  3463  080F                     	;# 
  3464  0810                     	;# 
  3465  0811                     	;# 
  3466  0812                     	;# 
  3467  0813                     	;# 
  3468  0814                     	;# 
  3469  081A                     	;# 
  3470  081B                     	;# 
  3471  081C                     	;# 
  3472  081D                     	;# 
  3473  081E                     	;# 
  3474  081F                     	;# 
  3475  088C                     	;# 
  3476  088D                     	;# 
  3477  088E                     	;# 
  3478  088F                     	;# 
  3479  0890                     	;# 
  3480  0891                     	;# 
  3481  0892                     	;# 
  3482  0893                     	;# 
  3483  0895                     	;# 
  3484  0896                     	;# 
  3485  0897                     	;# 
  3486  0898                     	;# 
  3487  0899                     	;# 
  3488  089A                     	;# 
  3489  089B                     	;# 
  3490  090C                     	;# 
  3491  090E                     	;# 
  3492  090F                     	;# 
  3493  091F                     	;# 
  3494  091F                     	;# 
  3495  098F                     	;# 
  3496  098F                     	;# 
  3497  0990                     	;# 
  3498  0991                     	;# 
  3499  0992                     	;# 
  3500  0993                     	;# 
  3501  0994                     	;# 
  3502  0995                     	;# 
  3503  0996                     	;# 
  3504  0997                     	;# 
  3505  0E0F                     	;# 
  3506  0E10                     	;# 
  3507  0E11                     	;# 
  3508  0E12                     	;# 
  3509  0E13                     	;# 
  3510  0E14                     	;# 
  3511  0E15                     	;# 
  3512  0E16                     	;# 
  3513  0E17                     	;# 
  3514  0E18                     	;# 
  3515  0E19                     	;# 
  3516  0E1A                     	;# 
  3517  0E1B                     	;# 
  3518  0E1C                     	;# 
  3519  0E1D                     	;# 
  3520  0E1E                     	;# 
  3521  0E1F                     	;# 
  3522  0E20                     	;# 
  3523  0E21                     	;# 
  3524  0E22                     	;# 
  3525  0E23                     	;# 
  3526  0E24                     	;# 
  3527  0E25                     	;# 
  3528  0E26                     	;# 
  3529  0E27                     	;# 
  3530  0E28                     	;# 
  3531  0E29                     	;# 
  3532  0E2A                     	;# 
  3533  0E2B                     	;# 
  3534  0E2C                     	;# 
  3535  0E2D                     	;# 
  3536  0E2E                     	;# 
  3537  0E2F                     	;# 
  3538  0E30                     	;# 
  3539  0E31                     	;# 
  3540  0E32                     	;# 
  3541  0E33                     	;# 
  3542  0E34                     	;# 
  3543  0E35                     	;# 
  3544  0E36                     	;# 
  3545  0E37                     	;# 
  3546  0E8F                     	;# 
  3547  0E90                     	;# 
  3548  0E91                     	;# 
  3549  0E92                     	;# 
  3550  0E93                     	;# 
  3551  0E94                     	;# 
  3552  0E95                     	;# 
  3553  0E96                     	;# 
  3554  0E97                     	;# 
  3555  0E9C                     	;# 
  3556  0E9D                     	;# 
  3557  0E9E                     	;# 
  3558  0EA1                     	;# 
  3559  0EA2                     	;# 
  3560  0EA3                     	;# 
  3561  0EA4                     	;# 
  3562  0EA5                     	;# 
  3563  0EA9                     	;# 
  3564  0EAA                     	;# 
  3565  0EAB                     	;# 
  3566  0EAC                     	;# 
  3567  0EB1                     	;# 
  3568  0EB2                     	;# 
  3569  0EB3                     	;# 
  3570  0EB8                     	;# 
  3571  0EB9                     	;# 
  3572  0EBA                     	;# 
  3573  0EBB                     	;# 
  3574  0EBC                     	;# 
  3575  0EBD                     	;# 
  3576  0EBE                     	;# 
  3577  0EC3                     	;# 
  3578  0EC5                     	;# 
  3579  0EC6                     	;# 
  3580  0EC7                     	;# 
  3581  0EC8                     	;# 
  3582  0EC9                     	;# 
  3583  0ECA                     	;# 
  3584  0ECB                     	;# 
  3585  0ECC                     	;# 
  3586  0F10                     	;# 
  3587  0F11                     	;# 
  3588  0F12                     	;# 
  3589  0F13                     	;# 
  3590  0F14                     	;# 
  3591  0F15                     	;# 
  3592  0F16                     	;# 
  3593  0F17                     	;# 
  3594  0F18                     	;# 
  3595  0F19                     	;# 
  3596  0F1A                     	;# 
  3597  0F1B                     	;# 
  3598  0F1C                     	;# 
  3599  0F1D                     	;# 
  3600  0F1E                     	;# 
  3601  0F1F                     	;# 
  3602  0F20                     	;# 
  3603  0F21                     	;# 
  3604  0F22                     	;# 
  3605  0F23                     	;# 
  3606  0F24                     	;# 
  3607  0F25                     	;# 
  3608  0F26                     	;# 
  3609  0F27                     	;# 
  3610  0F38                     	;# 
  3611  0F39                     	;# 
  3612  0F3A                     	;# 
  3613  0F3B                     	;# 
  3614  0F3C                     	;# 
  3615  0F3D                     	;# 
  3616  0F3E                     	;# 
  3617  0F3F                     	;# 
  3618  0F40                     	;# 
  3619  0F41                     	;# 
  3620  0F43                     	;# 
  3621  0F44                     	;# 
  3622  0F45                     	;# 
  3623  0F46                     	;# 
  3624  0F47                     	;# 
  3625  0F48                     	;# 
  3626  0F49                     	;# 
  3627  0F4A                     	;# 
  3628  0F4B                     	;# 
  3629  0F4C                     	;# 
  3630  0F4E                     	;# 
  3631  0F4F                     	;# 
  3632  0F50                     	;# 
  3633  0F51                     	;# 
  3634  0F52                     	;# 
  3635  0F53                     	;# 
  3636  0F54                     	;# 
  3637  0F55                     	;# 
  3638  0F56                     	;# 
  3639  0F57                     	;# 
  3640  0F65                     	;# 
  3641  0F68                     	;# 
  3642  0F69                     	;# 
  3643  0F6A                     	;# 
  3644  0F6B                     	;# 
  3645  0FE4                     	;# 
  3646  0FE5                     	;# 
  3647  0FE6                     	;# 
  3648  0FE7                     	;# 
  3649  0FE8                     	;# 
  3650  0FE9                     	;# 
  3651  0FEA                     	;# 
  3652  0FEB                     	;# 
  3653  0FED                     	;# 
  3654  0FEE                     	;# 
  3655  0FEF                     	;# 
  3656  0000                     	;# 
  3657  0001                     	;# 
  3658  0002                     	;# 
  3659  0003                     	;# 
  3660  0004                     	;# 
  3661  0005                     	;# 
  3662  0006                     	;# 
  3663  0007                     	;# 
  3664  0008                     	;# 
  3665  0009                     	;# 
  3666  000A                     	;# 
  3667  000B                     	;# 
  3668  000C                     	;# 
  3669  000D                     	;# 
  3670  000E                     	;# 
  3671  0010                     	;# 
  3672  0011                     	;# 
  3673  0012                     	;# 
  3674  0013                     	;# 
  3675  0016                     	;# 
  3676  0017                     	;# 
  3677  0018                     	;# 
  3678  001C                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008C                     	;# 
  3686  008D                     	;# 
  3687  008E                     	;# 
  3688  008E                     	;# 
  3689  008F                     	;# 
  3690  0090                     	;# 
  3691  0090                     	;# 
  3692  0091                     	;# 
  3693  0093                     	;# 
  3694  0094                     	;# 
  3695  0095                     	;# 
  3696  0096                     	;# 
  3697  0097                     	;# 
  3698  0098                     	;# 
  3699  0099                     	;# 
  3700  009A                     	;# 
  3701  009B                     	;# 
  3702  009C                     	;# 
  3703  009D                     	;# 
  3704  009E                     	;# 
  3705  010C                     	;# 
  3706  010D                     	;# 
  3707  010E                     	;# 
  3708  010E                     	;# 
  3709  010F                     	;# 
  3710  0110                     	;# 
  3711  0110                     	;# 
  3712  0111                     	;# 
  3713  0112                     	;# 
  3714  0112                     	;# 
  3715  0113                     	;# 
  3716  0114                     	;# 
  3717  0114                     	;# 
  3718  0115                     	;# 
  3719  0116                     	;# 
  3720  0116                     	;# 
  3721  0117                     	;# 
  3722  0119                     	;# 
  3723  0119                     	;# 
  3724  0119                     	;# 
  3725  011A                     	;# 
  3726  011A                     	;# 
  3727  011A                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011B                     	;# 
  3732  011B                     	;# 
  3733  011C                     	;# 
  3734  011C                     	;# 
  3735  011C                     	;# 
  3736  011D                     	;# 
  3737  011D                     	;# 
  3738  011D                     	;# 
  3739  011E                     	;# 
  3740  011E                     	;# 
  3741  011E                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  011F                     	;# 
  3746  011F                     	;# 
  3747  018C                     	;# 
  3748  018D                     	;# 
  3749  018E                     	;# 
  3750  018F                     	;# 
  3751  0190                     	;# 
  3752  0191                     	;# 
  3753  0192                     	;# 
  3754  0196                     	;# 
  3755  0197                     	;# 
  3756  0198                     	;# 
  3757  0199                     	;# 
  3758  019A                     	;# 
  3759  019B                     	;# 
  3760  019C                     	;# 
  3761  020C                     	;# 
  3762  020D                     	;# 
  3763  020E                     	;# 
  3764  020F                     	;# 
  3765  020F                     	;# 
  3766  0210                     	;# 
  3767  0210                     	;# 
  3768  0211                     	;# 
  3769  0211                     	;# 
  3770  0212                     	;# 
  3771  0213                     	;# 
  3772  0214                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0216                     	;# 
  3776  0216                     	;# 
  3777  0217                     	;# 
  3778  0217                     	;# 
  3779  0218                     	;# 
  3780  0219                     	;# 
  3781  021A                     	;# 
  3782  021B                     	;# 
  3783  021B                     	;# 
  3784  021C                     	;# 
  3785  021C                     	;# 
  3786  021D                     	;# 
  3787  021D                     	;# 
  3788  021E                     	;# 
  3789  021F                     	;# 
  3790  028C                     	;# 
  3791  028C                     	;# 
  3792  028D                     	;# 
  3793  028D                     	;# 
  3794  028E                     	;# 
  3795  028F                     	;# 
  3796  0290                     	;# 
  3797  0290                     	;# 
  3798  0291                     	;# 
  3799  0292                     	;# 
  3800  0292                     	;# 
  3801  0293                     	;# 
  3802  0293                     	;# 
  3803  0294                     	;# 
  3804  0295                     	;# 
  3805  0296                     	;# 
  3806  0296                     	;# 
  3807  0297                     	;# 
  3808  0298                     	;# 
  3809  0298                     	;# 
  3810  0299                     	;# 
  3811  0299                     	;# 
  3812  029A                     	;# 
  3813  029B                     	;# 
  3814  029C                     	;# 
  3815  029C                     	;# 
  3816  029D                     	;# 
  3817  030C                     	;# 
  3818  030C                     	;# 
  3819  030D                     	;# 
  3820  030E                     	;# 
  3821  030F                     	;# 
  3822  0310                     	;# 
  3823  0310                     	;# 
  3824  0311                     	;# 
  3825  0312                     	;# 
  3826  0313                     	;# 
  3827  0314                     	;# 
  3828  0314                     	;# 
  3829  0315                     	;# 
  3830  0316                     	;# 
  3831  0317                     	;# 
  3832  0318                     	;# 
  3833  0318                     	;# 
  3834  0319                     	;# 
  3835  031A                     	;# 
  3836  031B                     	;# 
  3837  031C                     	;# 
  3838  031C                     	;# 
  3839  031D                     	;# 
  3840  031E                     	;# 
  3841  031F                     	;# 
  3842  038C                     	;# 
  3843  038D                     	;# 
  3844  038E                     	;# 
  3845  0390                     	;# 
  3846  0391                     	;# 
  3847  0392                     	;# 
  3848  040C                     	;# 
  3849  040D                     	;# 
  3850  040E                     	;# 
  3851  040F                     	;# 
  3852  0410                     	;# 
  3853  0411                     	;# 
  3854  0416                     	;# 
  3855  0416                     	;# 
  3856  0417                     	;# 
  3857  0418                     	;# 
  3858  0418                     	;# 
  3859  0419                     	;# 
  3860  041A                     	;# 
  3861  041A                     	;# 
  3862  041B                     	;# 
  3863  041C                     	;# 
  3864  041C                     	;# 
  3865  041D                     	;# 
  3866  041E                     	;# 
  3867  041F                     	;# 
  3868  048C                     	;# 
  3869  048C                     	;# 
  3870  048D                     	;# 
  3871  048E                     	;# 
  3872  048F                     	;# 
  3873  048F                     	;# 
  3874  0490                     	;# 
  3875  0491                     	;# 
  3876  0492                     	;# 
  3877  0492                     	;# 
  3878  0493                     	;# 
  3879  0494                     	;# 
  3880  0495                     	;# 
  3881  0495                     	;# 
  3882  0496                     	;# 
  3883  0497                     	;# 
  3884  0498                     	;# 
  3885  0499                     	;# 
  3886  049A                     	;# 
  3887  049B                     	;# 
  3888  049C                     	;# 
  3889  049D                     	;# 
  3890  050C                     	;# 
  3891  050C                     	;# 
  3892  050D                     	;# 
  3893  050E                     	;# 
  3894  050F                     	;# 
  3895  050F                     	;# 
  3896  0510                     	;# 
  3897  0511                     	;# 
  3898  0512                     	;# 
  3899  0512                     	;# 
  3900  0513                     	;# 
  3901  0514                     	;# 
  3902  0515                     	;# 
  3903  0515                     	;# 
  3904  0516                     	;# 
  3905  0517                     	;# 
  3906  0518                     	;# 
  3907  0519                     	;# 
  3908  051A                     	;# 
  3909  051B                     	;# 
  3910  051C                     	;# 
  3911  051D                     	;# 
  3912  058C                     	;# 
  3913  058C                     	;# 
  3914  058D                     	;# 
  3915  058E                     	;# 
  3916  058F                     	;# 
  3917  058F                     	;# 
  3918  0590                     	;# 
  3919  0591                     	;# 
  3920  0592                     	;# 
  3921  0593                     	;# 
  3922  060C                     	;# 
  3923  060D                     	;# 
  3924  060E                     	;# 
  3925  060F                     	;# 
  3926  0610                     	;# 
  3927  0611                     	;# 
  3928  0612                     	;# 
  3929  0613                     	;# 
  3930  0614                     	;# 
  3931  0616                     	;# 
  3932  0617                     	;# 
  3933  0618                     	;# 
  3934  0619                     	;# 
  3935  061A                     	;# 
  3936  061B                     	;# 
  3937  061C                     	;# 
  3938  061D                     	;# 
  3939  061E                     	;# 
  3940  068C                     	;# 
  3941  068D                     	;# 
  3942  068E                     	;# 
  3943  068F                     	;# 
  3944  0690                     	;# 
  3945  0691                     	;# 
  3946  0692                     	;# 
  3947  0693                     	;# 
  3948  0694                     	;# 
  3949  070C                     	;# 
  3950  070D                     	;# 
  3951  070E                     	;# 
  3952  070F                     	;# 
  3953  0710                     	;# 
  3954  0711                     	;# 
  3955  0712                     	;# 
  3956  0713                     	;# 
  3957  0714                     	;# 
  3958  0716                     	;# 
  3959  0717                     	;# 
  3960  0718                     	;# 
  3961  0719                     	;# 
  3962  071A                     	;# 
  3963  071B                     	;# 
  3964  071C                     	;# 
  3965  071D                     	;# 
  3966  071E                     	;# 
  3967  0796                     	;# 
  3968  0797                     	;# 
  3969  0798                     	;# 
  3970  0799                     	;# 
  3971  079A                     	;# 
  3972  079B                     	;# 
  3973  080C                     	;# 
  3974  080D                     	;# 
  3975  080E                     	;# 
  3976  080F                     	;# 
  3977  0810                     	;# 
  3978  0811                     	;# 
  3979  0812                     	;# 
  3980  0813                     	;# 
  3981  0814                     	;# 
  3982  081A                     	;# 
  3983  081B                     	;# 
  3984  081C                     	;# 
  3985  081D                     	;# 
  3986  081E                     	;# 
  3987  081F                     	;# 
  3988  088C                     	;# 
  3989  088D                     	;# 
  3990  088E                     	;# 
  3991  088F                     	;# 
  3992  0890                     	;# 
  3993  0891                     	;# 
  3994  0892                     	;# 
  3995  0893                     	;# 
  3996  0895                     	;# 
  3997  0896                     	;# 
  3998  0897                     	;# 
  3999  0898                     	;# 
  4000  0899                     	;# 
  4001  089A                     	;# 
  4002  089B                     	;# 
  4003  090C                     	;# 
  4004  090E                     	;# 
  4005  090F                     	;# 
  4006  091F                     	;# 
  4007  091F                     	;# 
  4008  098F                     	;# 
  4009  098F                     	;# 
  4010  0990                     	;# 
  4011  0991                     	;# 
  4012  0992                     	;# 
  4013  0993                     	;# 
  4014  0994                     	;# 
  4015  0995                     	;# 
  4016  0996                     	;# 
  4017  0997                     	;# 
  4018  0E0F                     	;# 
  4019  0E10                     	;# 
  4020  0E11                     	;# 
  4021  0E12                     	;# 
  4022  0E13                     	;# 
  4023  0E14                     	;# 
  4024  0E15                     	;# 
  4025  0E16                     	;# 
  4026  0E17                     	;# 
  4027  0E18                     	;# 
  4028  0E19                     	;# 
  4029  0E1A                     	;# 
  4030  0E1B                     	;# 
  4031  0E1C                     	;# 
  4032  0E1D                     	;# 
  4033  0E1E                     	;# 
  4034  0E1F                     	;# 
  4035  0E20                     	;# 
  4036  0E21                     	;# 
  4037  0E22                     	;# 
  4038  0E23                     	;# 
  4039  0E24                     	;# 
  4040  0E25                     	;# 
  4041  0E26                     	;# 
  4042  0E27                     	;# 
  4043  0E28                     	;# 
  4044  0E29                     	;# 
  4045  0E2A                     	;# 
  4046  0E2B                     	;# 
  4047  0E2C                     	;# 
  4048  0E2D                     	;# 
  4049  0E2E                     	;# 
  4050  0E2F                     	;# 
  4051  0E30                     	;# 
  4052  0E31                     	;# 
  4053  0E32                     	;# 
  4054  0E33                     	;# 
  4055  0E34                     	;# 
  4056  0E35                     	;# 
  4057  0E36                     	;# 
  4058  0E37                     	;# 
  4059  0E8F                     	;# 
  4060  0E90                     	;# 
  4061  0E91                     	;# 
  4062  0E92                     	;# 
  4063  0E93                     	;# 
  4064  0E94                     	;# 
  4065  0E95                     	;# 
  4066  0E96                     	;# 
  4067  0E97                     	;# 
  4068  0E9C                     	;# 
  4069  0E9D                     	;# 
  4070  0E9E                     	;# 
  4071  0EA1                     	;# 
  4072  0EA2                     	;# 
  4073  0EA3                     	;# 
  4074  0EA4                     	;# 
  4075  0EA5                     	;# 
  4076  0EA9                     	;# 
  4077  0EAA                     	;# 
  4078  0EAB                     	;# 
  4079  0EAC                     	;# 
  4080  0EB1                     	;# 
  4081  0EB2                     	;# 
  4082  0EB3                     	;# 
  4083  0EB8                     	;# 
  4084  0EB9                     	;# 
  4085  0EBA                     	;# 
  4086  0EBB                     	;# 
  4087  0EBC                     	;# 
  4088  0EBD                     	;# 
  4089  0EBE                     	;# 
  4090  0EC3                     	;# 
  4091  0EC5                     	;# 
  4092  0EC6                     	;# 
  4093  0EC7                     	;# 
  4094  0EC8                     	;# 
  4095  0EC9                     	;# 
  4096  0ECA                     	;# 
  4097  0ECB                     	;# 
  4098  0ECC                     	;# 
  4099  0F10                     	;# 
  4100  0F11                     	;# 
  4101  0F12                     	;# 
  4102  0F13                     	;# 
  4103  0F14                     	;# 
  4104  0F15                     	;# 
  4105  0F16                     	;# 
  4106  0F17                     	;# 
  4107  0F18                     	;# 
  4108  0F19                     	;# 
  4109  0F1A                     	;# 
  4110  0F1B                     	;# 
  4111  0F1C                     	;# 
  4112  0F1D                     	;# 
  4113  0F1E                     	;# 
  4114  0F1F                     	;# 
  4115  0F20                     	;# 
  4116  0F21                     	;# 
  4117  0F22                     	;# 
  4118  0F23                     	;# 
  4119  0F24                     	;# 
  4120  0F25                     	;# 
  4121  0F26                     	;# 
  4122  0F27                     	;# 
  4123  0F38                     	;# 
  4124  0F39                     	;# 
  4125  0F3A                     	;# 
  4126  0F3B                     	;# 
  4127  0F3C                     	;# 
  4128  0F3D                     	;# 
  4129  0F3E                     	;# 
  4130  0F3F                     	;# 
  4131  0F40                     	;# 
  4132  0F41                     	;# 
  4133  0F43                     	;# 
  4134  0F44                     	;# 
  4135  0F45                     	;# 
  4136  0F46                     	;# 
  4137  0F47                     	;# 
  4138  0F48                     	;# 
  4139  0F49                     	;# 
  4140  0F4A                     	;# 
  4141  0F4B                     	;# 
  4142  0F4C                     	;# 
  4143  0F4E                     	;# 
  4144  0F4F                     	;# 
  4145  0F50                     	;# 
  4146  0F51                     	;# 
  4147  0F52                     	;# 
  4148  0F53                     	;# 
  4149  0F54                     	;# 
  4150  0F55                     	;# 
  4151  0F56                     	;# 
  4152  0F57                     	;# 
  4153  0F65                     	;# 
  4154  0F68                     	;# 
  4155  0F69                     	;# 
  4156  0F6A                     	;# 
  4157  0F6B                     	;# 
  4158  0FE4                     	;# 
  4159  0FE5                     	;# 
  4160  0FE6                     	;# 
  4161  0FE7                     	;# 
  4162  0FE8                     	;# 
  4163  0FE9                     	;# 
  4164  0FEA                     	;# 
  4165  0FEB                     	;# 
  4166  0FED                     	;# 
  4167  0FEE                     	;# 
  4168  0FEF                     	;_samples
  4169                           
  4170                           	psect	idataBANK0
  4171  17D6                     __pidataBANK0:	
  4172                           
  4173                           ;initializer for _setpoint
  4174  17D6  3446               	retlw	70
  4175                           
  4176                           	psect	idataBANK1
  4177  17D7                     __pidataBANK1:	
  4178                           ;initializer for _presets
  4179                           
  4180  17D7  3400               	retlw	0
  4181  17D8  3446               	retlw	70
  4182  17D9  345F               	retlw	95
  4183  17DA  3469               	retlw	105
  4184  17DB  3478               	retlw	120
  4185                           
  4186                           	psect	idataBANK2
  4187  088B                     __pidataBANK2:	
  4188                           
  4189                           ;initializer for ___cgram
  4190  088B  340C               	retlw	12
  4191  088C  3412               	retlw	18
  4192  088D  3412               	retlw	18
  4193  088E  340C               	retlw	12
  4194  088F  3400               	retlw	0
  4195  0890  3400               	retlw	0
  4196  0891  3400               	retlw	0
  4197  0892  3400               	retlw	0
  4198  0893  340A               	retlw	10
  4199  0894  3415               	retlw	21
  4200  0895  3411               	retlw	17
  4201  0896  340A               	retlw	10
  4202  0897  3404               	retlw	4
  4203  0898  3400               	retlw	0
  4204  0899  3400               	retlw	0
  4205  089A  3400               	retlw	0
  4206  089B  340A               	retlw	10
  4207  089C  341F               	retlw	31
  4208  089D  341F               	retlw	31
  4209  089E  340E               	retlw	14
  4210  089F  3404               	retlw	4
  4211  08A0  3400               	retlw	0
  4212  08A1  3400               	retlw	0
  4213  08A2  3400               	retlw	0
  4214                           
  4215                           	psect	stringtext
  4216  1000                     __pstringtext:	
  4217  1000                     log@coeff:	
  4218  1000  3400               	retlw	0
  4219  1001  3400               	retlw	0
  4220  1002  3400               	retlw	0
  4221  1003  3400               	retlw	0
  4222  1004  3480               	retlw	128
  4223  1005  343F               	retlw	63
  4224  1006  34F0               	retlw	240
  4225  1007  34FF               	retlw	255
  4226  1008  34BE               	retlw	190
  4227  1009  34E2               	retlw	226
  4228  100A  34A9               	retlw	169
  4229  100B  343E               	retlw	62
  4230  100C  3483               	retlw	131
  4231  100D  3476               	retlw	118
  4232  100E  34BE               	retlw	190
  4233  100F  34AE               	retlw	174
  4234  1010  342B               	retlw	43
  4235  1011  343E               	retlw	62
  4236  1012  343C               	retlw	60
  4237  1013  34C3               	retlw	195
  4238  1014  34BD               	retlw	189
  4239  1015  34D2               	retlw	210
  4240  1016  3413               	retlw	19
  4241  1017  343D               	retlw	61
  4242  1018  3478               	retlw	120
  4243  1019  34D3               	retlw	211
  4244  101A  34BB               	retlw	187
  4245  101B                     __end_oflog@coeff:	
  4246  0016                     _LATA	set	22
  4247  0017                     _LATB	set	23
  4248  0018                     _LATC	set	24
  4249  001E                     _T0CON0	set	30
  4250  001E                     _T0CON0bits	set	30
  4251  001F                     _T0CON1	set	31
  4252  001D                     _TMR0H	set	29
  4253  001C                     _TMR0L	set	28
  4254  0011                     _TRISA	set	17
  4255  0012                     _TRISB	set	18
  4256  0013                     _TRISC	set	19
  4257  005F                     _GIE	set	95
  4258  0063                     _RA3	set	99
  4259  0064                     _RA4	set	100
  4260  0068                     _RB0	set	104
  4261  0069                     _RB1	set	105
  4262  006A                     _RB2	set	106
  4263  006B                     _RB3	set	107
  4264  006C                     _RB4	set	108
  4265  006D                     _RB5	set	109
  4266  009D                     _ADACQ	set	157
  4267  0099                     _ADACT	set	153
  4268  009B                     _ADCAP	set	155
  4269  0098                     _ADCLK	set	152
  4270  0093                     _ADCON0	set	147
  4271  0093                     _ADCON0bits	set	147
  4272  0094                     _ADCON1	set	148
  4273  0095                     _ADCON2	set	149
  4274  0096                     _ADCON3	set	150
  4275  009E                     _ADPCH	set	158
  4276  009C                     _ADPRE	set	156
  4277  009A                     _ADREF	set	154
  4278  008D                     _ADRESH	set	141
  4279  008C                     _ADRESL	set	140
  4280  0097                     _ADSTAT	set	151
  4281  010F                     _ADLTHH	set	271
  4282  010E                     _ADLTHL	set	270
  4283  010D                     _ADRPT	set	269
  4284  0113                     _ADSTPTH	set	275
  4285  0112                     _ADSTPTL	set	274
  4286  0111                     _ADUTHH	set	273
  4287  0110                     _ADUTHL	set	272
  4288  021F                     _CCPTMRS1bits	set	543
  4289  0290                     _T2CLKCON	set	656
  4290  028E                     _T2CON	set	654
  4291  028E                     _T2CONbits	set	654
  4292  028F                     _T2HLT	set	655
  4293  028D                     _T2PR	set	653
  4294  0291                     _T2RST	set	657
  4295  028C                     _T2TMR	set	652
  4296  038E                     _PWM6CON	set	910
  4297  038D                     _PWM6DCH	set	909
  4298  038C                     _PWM6DCL	set	908
  4299  0716                     _PIE0bits	set	1814
  4300  070C                     _PIR0bits	set	1804
  4301  0710                     _PIR4bits	set	1808
  4302  3865                     _TMR0IF	set	14437
  4303  088D                     _OSCCON1	set	2189
  4304  088F                     _OSCCON3	set	2191
  4305  0891                     _OSCEN	set	2193
  4306  0893                     _OSCFRQ	set	2195
  4307  0892                     _OSCTUNE	set	2194
  4308  090C                     _FVRCON	set	2316
  4309  0E8F                     _PPSLOCK	set	3727
  4310  0E8F                     _PPSLOCKbits	set	3727
  4311  0F38                     _ANSELA	set	3896
  4312  0F43                     _ANSELB	set	3907
  4313  0F4E                     _ANSELC	set	3918
  4314  0F11                     _RA1PPS	set	3857
  4315  0F39                     _WPUA	set	3897
  4316  0F44                     _WPUB	set	3908
  4317  0F4F                     _WPUC	set	3919
  4318  0F65                     _WPUE	set	3941
  4319  101B                     STR_1:	
  4320  101B  3453               	retlw	83	;'S'
  4321  101C  3465               	retlw	101	;'e'
  4322  101D  3474               	retlw	116	;'t'
  4323  101E  3470               	retlw	112	;'p'
  4324  101F  346F               	retlw	111	;'o'
  4325  1020  3469               	retlw	105	;'i'
  4326  1021  346E               	retlw	110	;'n'
  4327  1022  3474               	retlw	116	;'t'
  4328  1023  343F               	retlw	63	;'?'
  4329  1024  3400               	retlw	0
  4330  1025                     STR_4:	
  4331  1025  3454               	retlw	84	;'T'
  4332  1026  3469               	retlw	105	;'i'
  4333  1027  346D               	retlw	109	;'m'
  4334  1028  3465               	retlw	101	;'e'
  4335  1029  343A               	retlw	58	;':'
  4336  102A  3400               	retlw	0
  4337  101B                     
  4338                           ; #config settings
  4339  0000                     
  4340                           	psect	cinit
  4341  07C4                     start_initialization:	
  4342  07C4                     __initialization:		;BIGRAM
  4343                           
  4344                           ; Initialize objects allocated to BANK0
  4345  07C4  3197  27D6  3187   	fcall	__pidataBANK0	;fetch initializer
  4346  07C7  00EF               	movwf	__pdataBANK0& (0+127)
  4347                           
  4348                           ; Initialize objects allocated to BANK1
  4349  07C8  30D7               	movlw	low __pidataBANK1
  4350  07C9  0084               	movwf	4
  4351  07CA  3097               	movlw	(high __pidataBANK1)| (0+128)
  4352  07CB  0085               	movwf	5
  4353  07CC  30E1               	movlw	low __pdataBANK1
  4354  07CD  0086               	movwf	6
  4355  07CE  3000               	movlw	high __pdataBANK1
  4356  07CF  0087               	movwf	7
  4357  07D0  3000               	movlw	0
  4358  07D1  00FF               	movwf	btemp+1
  4359  07D2  3005               	movlw	5
  4360  07D3  3188  2000  3187   	fcall	init_ram
  4361                           
  4362                           ; Initialize objects allocated to BANK2
  4363  07D6  308B               	movlw	low __pidataBANK2
  4364  07D7  0084               	movwf	4
  4365  07D8  3088               	movlw	(high __pidataBANK2)| (0+128)
  4366  07D9  0085               	movwf	5
  4367  07DA  3020               	movlw	low __pdataBANK2
  4368  07DB  0086               	movwf	6
  4369  07DC  3001               	movlw	high __pdataBANK2
  4370  07DD  0087               	movwf	7
  4371  07DE  3000               	movlw	0
  4372  07DF  00FF               	movwf	btemp+1
  4373  07E0  3018               	movlw	24
  4374  07E1  3188  2000  3187   	fcall	init_ram
  4375                           
  4376                           ; Clear objects allocated to BIGRAM
  4377  07E4  308C               	movlw	low (0+9100)
  4378  07E5  0084               	movwf	4
  4379  07E6  3023               	movlw	high (0+9100)
  4380  07E7  0085               	movwf	5
  4381  07E8  3064               	movlw	100
  4382  07E9  00FE               	movwf	btemp
  4383  07EA  3000               	movlw	0
  4384  07EB  00FF               	movwf	btemp+1
  4385  07EC  3197  27F4  3187   	fcall	clear_ram0
  4386                           
  4387                           ; Clear objects allocated to BANK0
  4388  07EF  01EB               	clrf	__pbssBANK0& (0+127)
  4389  07F0  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4390  07F1  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4391  07F2  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4392                           
  4393                           ; Clear objects allocated to BANK1
  4394  07F3  30C4               	movlw	low __pbssBANK1
  4395  07F4  0084               	movwf	4
  4396  07F5  3000               	movlw	high __pbssBANK1
  4397  07F6  0085               	movwf	5
  4398  07F7  301D               	movlw	29
  4399  07F8  00FE               	movwf	btemp
  4400  07F9  3000               	movlw	0
  4401  07FA  00FF               	movwf	btemp+1
  4402  07FB  3197  27F4         	fcall	clear_ram0
  4403  07FD                     end_of_initialization:	
  4404                           ;End of C runtime variable initialization code
  4405                           
  4406  07FD                     __end_of__initialization:	
  4407  07FD  0020               	movlb	0
  4408  07FE  3184  2CBD         	ljmp	_main	;jump to C main() function
  4409                           
  4410                           	psect	bssBANK0
  4411  006B                     __pbssBANK0:	
  4412  006B                     _downCount:	
  4413  006B                     	ds	1
  4414  006C                     _oldSetpoint:	
  4415  006C                     	ds	1
  4416  006D                     _upCount:	
  4417  006D                     	ds	1
  4418  006E                     _x:	
  4419  006E                     	ds	1
  4420                           
  4421                           	psect	dataBANK0
  4422  006F                     __pdataBANK0:	
  4423  006F                     _setpoint:	
  4424  006F                     	ds	1
  4425                           
  4426                           	psect	bssBANK1
  4427  00C4                     __pbssBANK1:	
  4428  00C4                     LCD_Write_Int@F13694:	
  4429  00C4                     	ds	5
  4430  00C9                     _PID_Kd:	
  4431  00C9                     	ds	3
  4432  00CC                     _PID_Ki:	
  4433  00CC                     	ds	3
  4434  00CF                     _PID_Kp:	
  4435  00CF                     	ds	3
  4436  00D2                     _pidIntegrated:	
  4437  00D2                     	ds	3
  4438  00D5                     _pidPrevInput:	
  4439  00D5                     	ds	3
  4440  00D8                     _errno:	
  4441  00D8                     	ds	2
  4442  00DA                     _pidMaxOutput:	
  4443  00DA                     	ds	2
  4444  00DC                     _pidMinOutput:	
  4445  00DC                     	ds	2
  4446  00DE                     main@sampleIndex:	
  4447  00DE                     	ds	2
  4448  00E0                     _toggleCount:	
  4449  00E0                     	ds	1
  4450                           
  4451                           	psect	dataBANK1
  4452  00E1                     __pdataBANK1:	
  4453  00E1                     _presets:	
  4454  00E1                     	ds	5
  4455                           
  4456                           	psect	dataBANK2
  4457  0120                     __pdataBANK2:	
  4458  0120                     ___cgram:	
  4459  0120                     	ds	24
  4460                           
  4461                           	psect	inittext
  4462  0800                     init_ram:	
  4463  0800  00FE               	movwf	126
  4464  0801                     initloop:	
  4465  0801  0012               	moviw fsr0++
  4466  0802  001E               	movwi fsr1++
  4467  0803  3001               	movlw	1
  4468  0804  02FE               	subwf	126,f
  4469  0805  3000               	movlw	0
  4470  0806  3BFF               	subwfb	127,f
  4471  0807  087F               	movf	127,w
  4472  0808  047E               	iorwf	126,w
  4473  0809  1903               	btfsc	3,2
  4474  080A  3400               	retlw	0
  4475  080B  2801               	goto	initloop
  4476                           
  4477                           	psect	clrtext
  4478  17F4                     clear_ram0:	
  4479                           ;	Called with FSR0 containing the base address, and
  4480                           ;	btemp/btemp+1 has the size to clear
  4481                           
  4482  17F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4483  17F5                     clrloop0:	
  4484  17F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4485  17F6  3101               	addfsr 0,1
  4486  17F7  3001               	movlw	1
  4487  17F8  02FE               	subwf	126,f
  4488  17F9  3000               	movlw	0
  4489  17FA  3BFF               	subwfb	127,f
  4490  17FB  087F               	movf	127,w
  4491  17FC  047E               	iorwf	126,w
  4492  17FD  1903               	btfsc	3,2
  4493  17FE  3400               	retlw	0	;all done for this memory range, return
  4494  17FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  4495                           
  4496                           	psect	cstackBANK1
  4497  00A0                     __pcstackBANK1:	
  4498  00A0                     ??_main:	
  4499                           
  4500                           ; 1 bytes @ 0x0
  4501  00A0                     	ds	10
  4502  00AA                     main@R:	
  4503                           
  4504                           ; 3 bytes @ 0xA
  4505  00AA                     	ds	3
  4506  00AD                     _main$1054:	
  4507                           
  4508                           ; 3 bytes @ 0xD
  4509  00AD                     	ds	3
  4510  00B0                     main@PWM_Output:	
  4511                           
  4512                           ; 2 bytes @ 0x10
  4513  00B0                     	ds	2
  4514  00B2                     main@minutes:	
  4515                           
  4516                           ; 2 bytes @ 0x12
  4517  00B2                     	ds	2
  4518  00B4                     main@seconds:	
  4519                           
  4520                           ; 2 bytes @ 0x14
  4521  00B4                     	ds	2
  4522  00B6                     main@counter:	
  4523                           
  4524                           ; 2 bytes @ 0x16
  4525  00B6                     	ds	2
  4526  00B8                     main@readTemperature:	
  4527                           
  4528                           ; 2 bytes @ 0x18
  4529  00B8                     	ds	2
  4530  00BA                     main@toggle:	
  4531                           
  4532                           ; 1 bytes @ 0x1A
  4533  00BA                     	ds	1
  4534  00BB                     main@displayTemp:	
  4535                           
  4536                           ; 2 bytes @ 0x1B
  4537  00BB                     	ds	2
  4538  00BD                     main@totals:	
  4539                           
  4540                           ; 4 bytes @ 0x1D
  4541  00BD                     	ds	4
  4542  00C1                     main@steinhart:	
  4543                           
  4544                           ; 3 bytes @ 0x21
  4545  00C1                     	ds	3
  4546                           
  4547                           	psect	cstackCOMMON
  4548  0070                     __pcstackCOMMON:	
  4549  0070                     ?_OSCILLATOR_Initialize:	
  4550  0070                     ??_OSCILLATOR_Initialize:	
  4551                           ; 1 bytes @ 0x0
  4552                           
  4553  0070                     ?_ADCC_Initialize:	
  4554                           ; 1 bytes @ 0x0
  4555                           
  4556  0070                     ??_ADCC_Initialize:	
  4557                           ; 1 bytes @ 0x0
  4558                           
  4559  0070                     ?_PWM6_Initialize:	
  4560                           ; 1 bytes @ 0x0
  4561                           
  4562  0070                     ??_PWM6_Initialize:	
  4563                           ; 1 bytes @ 0x0
  4564                           
  4565  0070                     ?_TMR0_Initialize:	
  4566                           ; 1 bytes @ 0x0
  4567                           
  4568  0070                     ??_TMR0_Initialize:	
  4569                           ; 1 bytes @ 0x0
  4570                           
  4571  0070                     ?_TMR2_Initialize:	
  4572                           ; 1 bytes @ 0x0
  4573                           
  4574  0070                     ??_TMR2_Initialize:	
  4575                           ; 1 bytes @ 0x0
  4576                           
  4577  0070                     ?_LCD_Init:	
  4578                           ; 1 bytes @ 0x0
  4579                           
  4580  0070                     ?_LCD_Clear:	
  4581                           ; 1 bytes @ 0x0
  4582                           
  4583  0070                     ?_InitCustomChars:	
  4584                           ; 1 bytes @ 0x0
  4585                           
  4586  0070                     ?_Init_PID:	
  4587                           ; 1 bytes @ 0x0
  4588                           
  4589  0070                     ??_Init_PID:	
  4590                           ; 1 bytes @ 0x0
  4591                           
  4592  0070                     ?_LCD_Cmd:	
  4593                           ; 1 bytes @ 0x0
  4594                           
  4595  0070                     ?_LCD_Write_Char:	
  4596                           ; 1 bytes @ 0x0
  4597                           
  4598  0070                     ?_readButtons:	
  4599                           ; 1 bytes @ 0x0
  4600                           
  4601  0070                     ?_PIN_MANAGER_Initialize:	
  4602                           ; 1 bytes @ 0x0
  4603                           
  4604  0070                     ??_PIN_MANAGER_Initialize:	
  4605                           ; 1 bytes @ 0x0
  4606                           
  4607  0070                     ?_SYSTEM_Initialize:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0070                     ?_LCD_Port:	
  4611                           ; 1 bytes @ 0x0
  4612                           
  4613  0070                     ??_LCD_Port:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0070                     ?_PWM6_LoadDutyValue:	
  4617                           ; 1 bytes @ 0x0
  4618                           
  4619  0070                     ?_tempSetpoint:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0070                     ?_main:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0070                     ?_ADCC_GetSingleConversion:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     ?___wmul:	
  4629                           ; 2 bytes @ 0x0
  4630                           
  4631  0070                     ?___awdiv:	
  4632                           ; 2 bytes @ 0x0
  4633                           
  4634  0070                     ?___awmod:	
  4635                           ; 2 bytes @ 0x0
  4636                           
  4637  0070                     ?___ftpack:	
  4638                           ; 2 bytes @ 0x0
  4639                           
  4640  0070                     ?_frexp:	
  4641                           ; 3 bytes @ 0x0
  4642                           
  4643  0070                     ?___ftneg:	
  4644                           ; 3 bytes @ 0x0
  4645                           
  4646  0070                     ?___aldiv:	
  4647                           ; 3 bytes @ 0x0
  4648                           
  4649  0070                     PIN_MANAGER_Initialize@state:	
  4650                           ; 4 bytes @ 0x0
  4651                           
  4652  0070                     LCD_Port@a:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     PWM6_LoadDutyValue@dutyValue:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ___wmul@multiplier:	
  4659                           ; 2 bytes @ 0x0
  4660                           
  4661  0070                     ___awdiv@divisor:	
  4662                           ; 2 bytes @ 0x0
  4663                           
  4664  0070                     ___awmod@divisor:	
  4665                           ; 2 bytes @ 0x0
  4666                           
  4667  0070                     ___ftpack@arg:	
  4668                           ; 2 bytes @ 0x0
  4669                           
  4670  0070                     ___ftneg@f1:	
  4671                           ; 3 bytes @ 0x0
  4672                           
  4673  0070                     frexp@value:	
  4674                           ; 3 bytes @ 0x0
  4675                           
  4676  0070                     ___aldiv@divisor:	
  4677                           ; 3 bytes @ 0x0
  4678                           
  4679                           
  4680                           ; 4 bytes @ 0x0
  4681  0070                     	ds	1
  4682  0071                     ??_LCD_Cmd:	
  4683  0071                     ??_LCD_Write_Char:	
  4684                           ; 1 bytes @ 0x1
  4685                           
  4686                           
  4687                           ; 1 bytes @ 0x1
  4688  0071                     	ds	1
  4689  0072                     ??_PWM6_LoadDutyValue:	
  4690  0072                     LCD_Cmd@a:	
  4691                           ; 1 bytes @ 0x2
  4692                           
  4693  0072                     LCD_Write_Char@temp:	
  4694                           ; 1 bytes @ 0x2
  4695                           
  4696  0072                     ___wmul@multiplicand:	
  4697                           ; 1 bytes @ 0x2
  4698                           
  4699  0072                     ___awdiv@dividend:	
  4700                           ; 2 bytes @ 0x2
  4701                           
  4702  0072                     ___awmod@dividend:	
  4703                           ; 2 bytes @ 0x2
  4704                           
  4705                           
  4706                           ; 2 bytes @ 0x2
  4707  0072                     	ds	1
  4708  0073                     ??_LCD_Init:	
  4709  0073                     ??_LCD_Clear:	
  4710                           ; 1 bytes @ 0x3
  4711                           
  4712  0073                     ?_LCD_Set_Cursor:	
  4713                           ; 1 bytes @ 0x3
  4714                           
  4715  0073                     ??_ADCC_GetSingleConversion:	
  4716                           ; 1 bytes @ 0x3
  4717                           
  4718  0073                     ??___ftneg:	
  4719                           ; 1 bytes @ 0x3
  4720                           
  4721  0073                     LCD_Set_Cursor@y:	
  4722                           ; 1 bytes @ 0x3
  4723                           
  4724  0073                     LCD_Write_Char@y:	
  4725                           ; 1 bytes @ 0x3
  4726                           
  4727  0073                     ADCC_GetSingleConversion@channel:	
  4728                           ; 1 bytes @ 0x3
  4729                           
  4730  0073                     ___ftpack@exp:	
  4731                           ; 1 bytes @ 0x3
  4732                           
  4733  0073                     frexp@eptr:	
  4734                           ; 1 bytes @ 0x3
  4735                           
  4736                           
  4737                           ; 1 bytes @ 0x3
  4738  0073                     	ds	1
  4739  0074                     ??_frexp:	
  4740  0074                     ??_LCD_Set_Cursor:	
  4741                           ; 1 bytes @ 0x4
  4742                           
  4743  0074                     ??___wmul:	
  4744                           ; 1 bytes @ 0x4
  4745                           
  4746  0074                     ??___awdiv:	
  4747                           ; 1 bytes @ 0x4
  4748                           
  4749  0074                     ??___awmod:	
  4750                           ; 1 bytes @ 0x4
  4751                           
  4752  0074                     LCD_Write_Char@a:	
  4753                           ; 1 bytes @ 0x4
  4754                           
  4755  0074                     ___ftpack@sign:	
  4756                           ; 1 bytes @ 0x4
  4757                           
  4758  0074                     ___wmul@product:	
  4759                           ; 1 bytes @ 0x4
  4760                           
  4761  0074                     ___aldiv@dividend:	
  4762                           ; 2 bytes @ 0x4
  4763                           
  4764                           
  4765                           ; 4 bytes @ 0x4
  4766  0074                     	ds	1
  4767  0075                     ??_InitCustomChars:	
  4768  0075                     ??___ftpack:	
  4769                           ; 1 bytes @ 0x5
  4770                           
  4771  0075                     ?_LCD_Write_String:	
  4772                           ; 1 bytes @ 0x5
  4773                           
  4774  0075                     LCD_Init@style:	
  4775                           ; 1 bytes @ 0x5
  4776                           
  4777  0075                     ___awdiv@counter:	
  4778                           ; 1 bytes @ 0x5
  4779                           
  4780  0075                     ___awmod@counter:	
  4781                           ; 1 bytes @ 0x5
  4782                           
  4783  0075                     LCD_Write_String@a:	
  4784                           ; 1 bytes @ 0x5
  4785                           
  4786                           
  4787                           ; 2 bytes @ 0x5
  4788  0075                     	ds	1
  4789  0076                     ?___lwdiv:	
  4790  0076                     InitCustomChars@i:	
  4791                           ; 2 bytes @ 0x6
  4792                           
  4793  0076                     LCD_Set_Cursor@x:	
  4794                           ; 1 bytes @ 0x6
  4795                           
  4796  0076                     ___awdiv@sign:	
  4797                           ; 1 bytes @ 0x6
  4798                           
  4799  0076                     ___awmod@sign:	
  4800                           ; 1 bytes @ 0x6
  4801                           
  4802  0076                     ___lwdiv@divisor:	
  4803                           ; 1 bytes @ 0x6
  4804                           
  4805                           
  4806                           ; 2 bytes @ 0x6
  4807  0076                     	ds	1
  4808  0077                     ??_SYSTEM_Initialize:	
  4809  0077                     ??_LCD_Write_String:	
  4810                           ; 1 bytes @ 0x7
  4811                           
  4812  0077                     LCD_Set_Cursor@z:	
  4813                           ; 1 bytes @ 0x7
  4814                           
  4815  0077                     ___awdiv@quotient:	
  4816                           ; 1 bytes @ 0x7
  4817                           
  4818                           
  4819                           ; 2 bytes @ 0x7
  4820  0077                     	ds	1
  4821  0078                     ??___aldiv:	
  4822  0078                     ?___awtoft:	
  4823                           ; 1 bytes @ 0x8
  4824                           
  4825  0078                     ?___lbtoft:	
  4826                           ; 3 bytes @ 0x8
  4827                           
  4828  0078                     ?___lwtoft:	
  4829                           ; 3 bytes @ 0x8
  4830                           
  4831  0078                     LCD_Set_Cursor@w:	
  4832                           ; 3 bytes @ 0x8
  4833                           
  4834  0078                     LCD_Write_String@i:	
  4835                           ; 1 bytes @ 0x8
  4836                           
  4837  0078                     ___awtoft@c:	
  4838                           ; 2 bytes @ 0x8
  4839                           
  4840  0078                     ___lwdiv@dividend:	
  4841                           ; 2 bytes @ 0x8
  4842                           
  4843  0078                     ___lwtoft@c:	
  4844                           ; 2 bytes @ 0x8
  4845                           
  4846                           
  4847                           ; 2 bytes @ 0x8
  4848  0078                     	ds	1
  4849  0079                     ?_LCD_Write_Int:	
  4850  0079                     LCD_Set_Cursor@temp:	
  4851                           ; 1 bytes @ 0x9
  4852                           
  4853  0079                     LCD_Write_Int@value:	
  4854                           ; 1 bytes @ 0x9
  4855                           
  4856                           
  4857                           ; 2 bytes @ 0x9
  4858  0079                     	ds	1
  4859  007A                     ??___lwdiv:	
  4860                           
  4861                           ; 1 bytes @ 0xA
  4862  007A                     	ds	1
  4863  007B                     ??___awtoft:	
  4864  007B                     ??___lwtoft:	
  4865                           ; 1 bytes @ 0xB
  4866                           
  4867  007B                     LCD_Write_Int@fieldLength:	
  4868                           ; 1 bytes @ 0xB
  4869                           
  4870  007B                     ___lbtoft@c:	
  4871                           ; 1 bytes @ 0xB
  4872                           
  4873  007B                     ___lwdiv@quotient:	
  4874                           ; 1 bytes @ 0xB
  4875                           
  4876                           
  4877                           ; 2 bytes @ 0xB
  4878  007B                     	ds	1
  4879  007C                     LCD_Write_Int@numPlaces:	
  4880                           
  4881                           ; 1 bytes @ 0xC
  4882  007C                     	ds	1
  4883  007D                     LCD_Write_Int@sign:	
  4884  007D                     ___awtoft@sign:	
  4885                           ; 1 bytes @ 0xD
  4886                           
  4887  007D                     ___lwdiv@counter:	
  4888                           ; 1 bytes @ 0xD
  4889                           
  4890                           
  4891                           ; 1 bytes @ 0xD
  4892  007D                     	ds	1
  4893  007E                     ??_eval_poly:	
  4894  007E                     ??_PID_Calculate:	
  4895                           ; 1 bytes @ 0xE
  4896                           
  4897  007E                     ??___ftsub:	
  4898                           ; 1 bytes @ 0xE
  4899                           
  4900                           
  4901                           	psect	cstackBANK0
  4902  0020                     __pcstackBANK0:	
  4903                           ; 1 bytes @ 0xE
  4904                           
  4905  0020                     ??_LCD_Write_Int:	
  4906  0020                     ??___lbtoft:	
  4907                           ; 1 bytes @ 0x0
  4908                           
  4909  0020                     ?___ftdiv:	
  4910                           ; 1 bytes @ 0x0
  4911                           
  4912  0020                     ?___ftmul:	
  4913                           ; 3 bytes @ 0x0
  4914                           
  4915  0020                     ___aldiv@counter:	
  4916                           ; 3 bytes @ 0x0
  4917                           
  4918  0020                     ___ftdiv@f2:	
  4919                           ; 1 bytes @ 0x0
  4920                           
  4921  0020                     ___ftmul@f1:	
  4922                           ; 3 bytes @ 0x0
  4923                           
  4924                           
  4925                           ; 3 bytes @ 0x0
  4926  0020                     	ds	1
  4927  0021                     ___aldiv@sign:	
  4928                           
  4929                           ; 1 bytes @ 0x1
  4930  0021                     	ds	1
  4931  0022                     ___aldiv@quotient:	
  4932                           
  4933                           ; 4 bytes @ 0x2
  4934  0022                     	ds	1
  4935  0023                     ___ftdiv@f1:	
  4936  0023                     ___ftmul@f2:	
  4937                           ; 3 bytes @ 0x3
  4938                           
  4939                           
  4940                           ; 3 bytes @ 0x3
  4941  0023                     	ds	2
  4942  0025                     LCD_Write_Int@str:	
  4943                           
  4944                           ; 5 bytes @ 0x5
  4945  0025                     	ds	1
  4946  0026                     ??___ftdiv:	
  4947  0026                     ??___ftmul:	
  4948                           ; 1 bytes @ 0x6
  4949                           
  4950                           
  4951                           ; 1 bytes @ 0x6
  4952  0026                     	ds	4
  4953  002A                     ___ftdiv@cntr:	
  4954  002A                     ___ftmul@exp:	
  4955                           ; 1 bytes @ 0xA
  4956                           
  4957  002A                     LCD_Write_Int@j:	
  4958                           ; 1 bytes @ 0xA
  4959                           
  4960                           
  4961                           ; 2 bytes @ 0xA
  4962  002A                     	ds	1
  4963  002B                     ___ftdiv@f3:	
  4964  002B                     ___ftmul@f3_as_product:	
  4965                           ; 3 bytes @ 0xB
  4966                           
  4967                           
  4968                           ; 3 bytes @ 0xB
  4969  002B                     	ds	1
  4970  002C                     LCD_Write_Int@i:	
  4971                           
  4972                           ; 2 bytes @ 0xC
  4973  002C                     	ds	2
  4974  002E                     ??_readButtons:	
  4975  002E                     ___ftdiv@exp:	
  4976                           ; 1 bytes @ 0xE
  4977                           
  4978  002E                     ___ftmul@cntr:	
  4979                           ; 1 bytes @ 0xE
  4980                           
  4981                           
  4982                           ; 1 bytes @ 0xE
  4983  002E                     	ds	1
  4984  002F                     ___ftdiv@sign:	
  4985  002F                     ___ftmul@sign:	
  4986                           ; 1 bytes @ 0xF
  4987                           
  4988                           
  4989                           ; 1 bytes @ 0xF
  4990  002F                     	ds	1
  4991  0030                     ?___ftadd:	
  4992  0030                     ___ftadd@f1:	
  4993                           ; 3 bytes @ 0x10
  4994                           
  4995                           
  4996                           ; 3 bytes @ 0x10
  4997  0030                     	ds	1
  4998  0031                     ??_tempSetpoint:	
  4999                           
  5000                           ; 1 bytes @ 0x11
  5001  0031                     	ds	2
  5002  0033                     ___ftadd@f2:	
  5003                           
  5004                           ; 3 bytes @ 0x13
  5005  0033                     	ds	1
  5006  0034                     tempSetpoint@counter:	
  5007                           
  5008                           ; 1 bytes @ 0x14
  5009  0034                     	ds	2
  5010  0036                     ??___ftadd:	
  5011                           
  5012                           ; 1 bytes @ 0x16
  5013  0036                     	ds	4
  5014  003A                     ___ftadd@sign:	
  5015                           
  5016                           ; 1 bytes @ 0x1A
  5017  003A                     	ds	1
  5018  003B                     ___ftadd@exp2:	
  5019                           
  5020                           ; 1 bytes @ 0x1B
  5021  003B                     	ds	1
  5022  003C                     ___ftadd@exp1:	
  5023                           
  5024                           ; 1 bytes @ 0x1C
  5025  003C                     	ds	1
  5026  003D                     ?___ftge:	
  5027  003D                     ?_eval_poly:	
  5028                           ; 1 bit 
  5029                           
  5030  003D                     ?___ftsub:	
  5031                           ; 3 bytes @ 0x1D
  5032                           
  5033  003D                     ___ftge@ff1:	
  5034                           ; 3 bytes @ 0x1D
  5035                           
  5036  003D                     ___ftsub@f2:	
  5037                           ; 3 bytes @ 0x1D
  5038                           
  5039  003D                     eval_poly@x:	
  5040                           ; 3 bytes @ 0x1D
  5041                           
  5042                           
  5043                           ; 3 bytes @ 0x1D
  5044  003D                     	ds	3
  5045  0040                     eval_poly@d:	
  5046  0040                     ___ftge@ff2:	
  5047                           ; 2 bytes @ 0x20
  5048                           
  5049  0040                     ___ftsub@f1:	
  5050                           ; 3 bytes @ 0x20
  5051                           
  5052                           
  5053                           ; 3 bytes @ 0x20
  5054  0040                     	ds	2
  5055  0042                     eval_poly@n:	
  5056                           
  5057                           ; 2 bytes @ 0x22
  5058  0042                     	ds	1
  5059  0043                     ??___ftge:	
  5060                           
  5061                           ; 1 bytes @ 0x23
  5062  0043                     	ds	1
  5063  0044                     eval_poly@res:	
  5064                           
  5065                           ; 3 bytes @ 0x24
  5066  0044                     	ds	2
  5067  0046                     ?_PID_Calculate:	
  5068  0046                     PID_Calculate@setpoint:	
  5069                           ; 3 bytes @ 0x26
  5070                           
  5071                           
  5072                           ; 2 bytes @ 0x26
  5073  0046                     	ds	1
  5074  0047                     ?_log:	
  5075  0047                     log@x:	
  5076                           ; 3 bytes @ 0x27
  5077                           
  5078                           
  5079                           ; 3 bytes @ 0x27
  5080  0047                     	ds	1
  5081  0048                     PID_Calculate@temp:	
  5082                           
  5083                           ; 3 bytes @ 0x28
  5084  0048                     	ds	2
  5085  004A                     ??_log:	
  5086                           
  5087                           ; 1 bytes @ 0x2A
  5088  004A                     	ds	1
  5089  004B                     log@exponent:	
  5090  004B                     PID_Calculate@errorValue:	
  5091                           ; 2 bytes @ 0x2B
  5092                           
  5093                           
  5094                           ; 3 bytes @ 0x2B
  5095  004B                     	ds	3
  5096  004E                     _PID_Calculate$1053:	
  5097                           
  5098                           ; 3 bytes @ 0x2E
  5099  004E                     	ds	3
  5100  0051                     PID_Calculate@derivativeValue:	
  5101                           
  5102                           ; 3 bytes @ 0x31
  5103  0051                     	ds	3
  5104  0054                     PID_Calculate@pidPrevError:	
  5105                           
  5106                           ; 3 bytes @ 0x34
  5107  0054                     	ds	3
  5108  0057                     PID_Calculate@Result:	
  5109                           
  5110                           ; 3 bytes @ 0x37
  5111  0057                     	ds	3
  5112  005A                     PID_Calculate@error:	
  5113                           
  5114                           ; 3 bytes @ 0x3A
  5115  005A                     	ds	3
  5116  005D                     ?___fttol:	
  5117  005D                     ___fttol@f1:	
  5118                           ; 4 bytes @ 0x3D
  5119                           
  5120                           
  5121                           ; 3 bytes @ 0x3D
  5122  005D                     	ds	4
  5123  0061                     ??___fttol:	
  5124                           
  5125                           ; 1 bytes @ 0x41
  5126  0061                     	ds	4
  5127  0065                     ___fttol@sign1:	
  5128                           
  5129                           ; 1 bytes @ 0x45
  5130  0065                     	ds	1
  5131  0066                     ___fttol@lval:	
  5132                           
  5133                           ; 4 bytes @ 0x46
  5134  0066                     	ds	4
  5135  006A                     ___fttol@exp1:	
  5136                           
  5137                           ; 1 bytes @ 0x4A
  5138  006A                     	ds	1
  5139                           
  5140                           	psect	maintext
  5141  04BD                     __pmaintext:	
  5142 ;;
  5143 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5144 ;;
  5145 ;; *************** function _main *****************
  5146 ;; Defined at:
  5147 ;;		line 13 in file "main.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  totals          4   29[BANK1 ] long 
  5152 ;;  steinhart       3   33[BANK1 ] float 
  5153 ;;  R               3   10[BANK1 ] float 
  5154 ;;  displayTemp     2   27[BANK1 ] unsigned int 
  5155 ;;  readTemperat    2   24[BANK1 ] unsigned int 
  5156 ;;  counter         2   22[BANK1 ] unsigned int 
  5157 ;;  seconds         2   20[BANK1 ] unsigned int 
  5158 ;;  minutes         2   18[BANK1 ] unsigned int 
  5159 ;;  PWM_Output      2   16[BANK1 ] unsigned int 
  5160 ;;  readTemperat    2    0        unsigned int 
  5161 ;;  toggle          1   26[BANK1 ] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : B1F/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:       36 bytes
  5176 ;; Hardware stack levels required when called:    5
  5177 ;; This function calls:
  5178 ;;		_ADCC_GetSingleConversion
  5179 ;;		_LCD_Set_Cursor
  5180 ;;		_LCD_Write_Char
  5181 ;;		_LCD_Write_Int
  5182 ;;		_LCD_Write_String
  5183 ;;		_PID_Calculate
  5184 ;;		_PWM6_LoadDutyValue
  5185 ;;		_SYSTEM_Initialize
  5186 ;;		___aldiv
  5187 ;;		___ftadd
  5188 ;;		___ftdiv
  5189 ;;		___ftge
  5190 ;;		___ftmul
  5191 ;;		___ftneg
  5192 ;;		___ftsub
  5193 ;;		___fttol
  5194 ;;		___lbtoft
  5195 ;;		___lwdiv
  5196 ;;		___lwtoft
  5197 ;;		___wmul
  5198 ;;		_log
  5199 ;;		_readButtons
  5200 ;;		_tempSetpoint
  5201 ;; This function is called by:
  5202 ;;		Startup code after reset
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _main
  5208  04BD                     _main:	
  5209                           
  5210                           ;main.c: 15: SYSTEM_Initialize();
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5214  04BD  318A  229C  3184   	fcall	_SYSTEM_Initialize
  5215                           
  5216                           ;main.c: 17: uint16_t readTemperature, PWM_Output = 0, readTemperatureOld, displayTemp, 
      +                          seconds = 0, counter = 0, minutes = 0;
  5217  04C0  0021               	movlb	1	; select bank1
  5218  04C1  01B0               	clrf	main@PWM_Output^(0+128)
  5219  04C2  01B1               	clrf	(main@PWM_Output+1)^(0+128)
  5220  04C3  01B4               	clrf	main@seconds^(0+128)
  5221  04C4  01B5               	clrf	(main@seconds+1)^(0+128)
  5222  04C5  01B6               	clrf	main@counter^(0+128)
  5223  04C6  01B7               	clrf	(main@counter+1)^(0+128)
  5224  04C7  01B2               	clrf	main@minutes^(0+128)
  5225  04C8  01B3               	clrf	(main@minutes+1)^(0+128)
  5226                           
  5227                           ;main.c: 19: uint8_t toggle = 0;
  5228  04C9  01BA               	clrf	main@toggle^(0+128)
  5229                           
  5230                           ;main.c: 21: float R, steinhart;
  5231                           ;main.c: 23: static uint16_t sampleIndex = 0;
  5232                           ;main.c: 25: int32_t totals = 0;
  5233  04CA  3000               	movlw	0
  5234  04CB  00C0               	movwf	(main@totals+3)^(0+128)
  5235  04CC  3000               	movlw	0
  5236  04CD  00BF               	movwf	(main@totals+2)^(0+128)
  5237  04CE  3000               	movlw	0
  5238  04CF  00BE               	movwf	(main@totals+1)^(0+128)
  5239  04D0  3000               	movlw	0
  5240  04D1  00BD               	movwf	main@totals^(0+128)
  5241  04D2                     l3024:	
  5242                           ;main.c: 28: while (1)
  5243                           
  5244                           
  5245                           ;main.c: 29: {
  5246                           ;main.c: 30: readTemperature = ADCC_GetSingleConversion(2);
  5247  04D2  3002               	movlw	2
  5248  04D3  3188  200C  3184   	fcall	_ADCC_GetSingleConversion
  5249  04D6  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5250  04D7  0021               	movlb	1	; select bank1
  5251  04D8  00B9               	movwf	(main@readTemperature+1)^(0+128)
  5252  04D9  0870               	movf	?_ADCC_GetSingleConversion,w
  5253  04DA  00B8               	movwf	main@readTemperature^(0+128)
  5254                           
  5255                           ;main.c: 32: totals = totals - samples[sampleIndex];
  5256  04DB  083D               	movf	main@totals^(0+128),w
  5257  04DC  00A0               	movwf	??_main^(0+128)
  5258  04DD  083E               	movf	(main@totals+1)^(0+128),w
  5259  04DE  00A1               	movwf	(??_main^(0+128)+1)
  5260  04DF  083F               	movf	(main@totals+2)^(0+128),w
  5261  04E0  00A2               	movwf	(??_main^(0+128)+2)
  5262  04E1  0840               	movf	(main@totals+3)^(0+128),w
  5263  04E2  00A3               	movwf	(??_main^(0+128)+3)
  5264  04E3  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5265  04E4  00A5               	movwf	((??_main+4)^(0+128)+1)
  5266  04E5  085E               	movf	main@sampleIndex^(0+128),w
  5267  04E6  00A4               	movwf	(??_main+4)^(0+128)
  5268  04E7  35A4               	lslf	(??_main+4)^(0+128),f
  5269  04E8  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5270  04E9  308C               	movlw	140
  5271  04EA  0724               	addwf	(??_main+4)^(0+128),w
  5272  04EB  0084               	movwf	4
  5273  04EC  3023               	movlw	35
  5274  04ED  3D25               	addwfc	(??_main+5)^(0+128),w
  5275  04EE  0085               	movwf	5
  5276  04EF  3F00               	moviw [0]fsr0
  5277  04F0  00A6               	movwf	(??_main+6)^(0+128)
  5278  04F1  3F01               	moviw [1]fsr0
  5279  04F2  00A7               	movwf	((??_main+6)^(0+128)+1)
  5280  04F3  01A8               	clrf	((??_main+6)^(0+128)+2)
  5281  04F4  01A9               	clrf	((??_main+6)^(0+128)+3)
  5282  04F5  09A6               	comf	(??_main+6)^(0+128),f
  5283  04F6  09A7               	comf	((??_main+6)^(0+128)+1),f
  5284  04F7  09A8               	comf	((??_main+6)^(0+128)+2),f
  5285  04F8  09A9               	comf	((??_main+6)^(0+128)+3),f
  5286  04F9  0AA6               	incf	(??_main+6)^(0+128),f
  5287  04FA  1903               	skipnz
  5288  04FB  0AA7               	incf	((??_main+6)^(0+128)+1),f
  5289  04FC  1903               	skipnz
  5290  04FD  0AA8               	incf	((??_main+6)^(0+128)+2),f
  5291  04FE  1903               	skipnz
  5292  04FF  0AA9               	incf	((??_main+6)^(0+128)+3),f
  5293  0500  0826               	movf	(??_main+6)^(0+128),w
  5294  0501  07A0               	addwf	??_main^(0+128),f
  5295  0502  0827               	movf	(??_main+7)^(0+128),w
  5296  0503  3DA1               	addwfc	(??_main^(0+128)+1),f
  5297  0504  0828               	movf	(??_main+8)^(0+128),w
  5298  0505  3DA2               	addwfc	(??_main^(0+128)+2),f
  5299  0506  0829               	movf	(??_main+9)^(0+128),w
  5300  0507  3DA3               	addwfc	(??_main^(0+128)+3),f
  5301  0508  0823               	movf	(??_main+3)^(0+128),w
  5302  0509  00C0               	movwf	(main@totals+3)^(0+128)
  5303  050A  0822               	movf	(??_main+2)^(0+128),w
  5304  050B  00BF               	movwf	(main@totals+2)^(0+128)
  5305  050C  0821               	movf	(??_main+1)^(0+128),w
  5306  050D  00BE               	movwf	(main@totals+1)^(0+128)
  5307  050E  0820               	movf	??_main^(0+128),w
  5308  050F  00BD               	movwf	main@totals^(0+128)
  5309                           
  5310                           ;main.c: 34: samples[sampleIndex] = readTemperature;
  5311  0510  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5312  0511  00A1               	movwf	(??_main^(0+128)+1)
  5313  0512  085E               	movf	main@sampleIndex^(0+128),w
  5314  0513  00A0               	movwf	??_main^(0+128)
  5315  0514  35A0               	lslf	??_main^(0+128),f
  5316  0515  0DA1               	rlf	(??_main^(0+128)+1),f
  5317  0516  308C               	movlw	140
  5318  0517  00A2               	movwf	(??_main+2)^(0+128)
  5319  0518  3023               	movlw	35
  5320  0519  00A3               	movwf	((??_main+2)^(0+128)+1)
  5321  051A  0820               	movf	??_main^(0+128),w
  5322  051B  0722               	addwf	(??_main+2)^(0+128),w
  5323  051C  0086               	movwf	6
  5324  051D  0821               	movf	(??_main+1)^(0+128),w
  5325  051E  3D23               	addwfc	(??_main+3)^(0+128),w
  5326  051F  0087               	movwf	7
  5327  0520  0838               	movf	main@readTemperature^(0+128),w
  5328  0521  3FC0               	movwi [0]fsr1
  5329  0522  0839               	movf	(main@readTemperature+1)^(0+128),w
  5330  0523  3FC1               	movwi [1]fsr1
  5331                           
  5332                           ;main.c: 36: totals = totals + samples[sampleIndex];
  5333  0524  083D               	movf	main@totals^(0+128),w
  5334  0525  00A0               	movwf	??_main^(0+128)
  5335  0526  083E               	movf	(main@totals+1)^(0+128),w
  5336  0527  00A1               	movwf	(??_main^(0+128)+1)
  5337  0528  083F               	movf	(main@totals+2)^(0+128),w
  5338  0529  00A2               	movwf	(??_main^(0+128)+2)
  5339  052A  0840               	movf	(main@totals+3)^(0+128),w
  5340  052B  00A3               	movwf	(??_main^(0+128)+3)
  5341  052C  085F               	movf	(main@sampleIndex+1)^(0+128),w
  5342  052D  00A5               	movwf	((??_main+4)^(0+128)+1)
  5343  052E  085E               	movf	main@sampleIndex^(0+128),w
  5344  052F  00A4               	movwf	(??_main+4)^(0+128)
  5345  0530  35A4               	lslf	(??_main+4)^(0+128),f
  5346  0531  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  5347  0532  308C               	movlw	140
  5348  0533  0724               	addwf	(??_main+4)^(0+128),w
  5349  0534  0084               	movwf	4
  5350  0535  3023               	movlw	35
  5351  0536  3D25               	addwfc	(??_main+5)^(0+128),w
  5352  0537  0085               	movwf	5
  5353  0538  3F00               	moviw [0]fsr0
  5354  0539  00A6               	movwf	(??_main+6)^(0+128)
  5355  053A  3F01               	moviw [1]fsr0
  5356  053B  00A7               	movwf	((??_main+6)^(0+128)+1)
  5357  053C  01A8               	clrf	((??_main+6)^(0+128)+2)
  5358  053D  01A9               	clrf	((??_main+6)^(0+128)+3)
  5359  053E  0826               	movf	(??_main+6)^(0+128),w
  5360  053F  07A0               	addwf	??_main^(0+128),f
  5361  0540  0827               	movf	(??_main+7)^(0+128),w
  5362  0541  3DA1               	addwfc	(??_main^(0+128)+1),f
  5363  0542  0828               	movf	(??_main+8)^(0+128),w
  5364  0543  3DA2               	addwfc	(??_main^(0+128)+2),f
  5365  0544  0829               	movf	(??_main+9)^(0+128),w
  5366  0545  3DA3               	addwfc	(??_main^(0+128)+3),f
  5367  0546  0823               	movf	(??_main+3)^(0+128),w
  5368  0547  00C0               	movwf	(main@totals+3)^(0+128)
  5369  0548  0822               	movf	(??_main+2)^(0+128),w
  5370  0549  00BF               	movwf	(main@totals+2)^(0+128)
  5371  054A  0821               	movf	(??_main+1)^(0+128),w
  5372  054B  00BE               	movwf	(main@totals+1)^(0+128)
  5373  054C  0820               	movf	??_main^(0+128),w
  5374  054D  00BD               	movwf	main@totals^(0+128)
  5375                           
  5376                           ;main.c: 38: sampleIndex += 1;
  5377  054E  3001               	movlw	1
  5378  054F  07DE               	addwf	main@sampleIndex^(0+128),f
  5379  0550  3000               	movlw	0
  5380  0551  3DDF               	addwfc	(main@sampleIndex+1)^(0+128),f
  5381                           
  5382                           ;main.c: 40: if(sampleIndex >= 50)
  5383  0552  3000               	movlw	0
  5384  0553  025F               	subwf	(main@sampleIndex+1)^(0+128),w
  5385  0554  3032               	movlw	50
  5386  0555  1903               	skipnz
  5387  0556  025E               	subwf	main@sampleIndex^(0+128),w
  5388  0557  1C03               	skipc
  5389  0558  2D5B               	goto	l3038
  5390                           
  5391                           ;main.c: 41: {
  5392                           ;main.c: 42: sampleIndex = 0;
  5393  0559  01DE               	clrf	main@sampleIndex^(0+128)
  5394  055A  01DF               	clrf	(main@sampleIndex+1)^(0+128)
  5395  055B                     l3038:	
  5396                           
  5397                           ;main.c: 43: }
  5398                           ;main.c: 45: readTemperature = totals / 50;
  5399  055B  3000               	movlw	0
  5400  055C  00F3               	movwf	___aldiv@divisor+3
  5401  055D  3000               	movlw	0
  5402  055E  00F2               	movwf	___aldiv@divisor+2
  5403  055F  3000               	movlw	0
  5404  0560  00F1               	movwf	___aldiv@divisor+1
  5405  0561  3032               	movlw	50
  5406  0562  00F0               	movwf	___aldiv@divisor
  5407  0563  0840               	movf	(main@totals+3)^(0+128),w
  5408  0564  00F7               	movwf	___aldiv@dividend+3
  5409  0565  083F               	movf	(main@totals+2)^(0+128),w
  5410  0566  00F6               	movwf	___aldiv@dividend+2
  5411  0567  083E               	movf	(main@totals+1)^(0+128),w
  5412  0568  00F5               	movwf	___aldiv@dividend+1
  5413  0569  083D               	movf	main@totals^(0+128),w
  5414  056A  00F4               	movwf	___aldiv@dividend
  5415  056B  318C  24EC  3184   	fcall	___aldiv
  5416  056E  0871               	movf	?___aldiv+1,w
  5417  056F  0021               	movlb	1	; select bank1
  5418  0570  00B9               	movwf	(main@readTemperature+1)^(0+128)
  5419  0571  0870               	movf	?___aldiv,w
  5420  0572  00B8               	movwf	main@readTemperature^(0+128)
  5421                           
  5422                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5423  0573  3000               	movlw	0
  5424  0574  0020               	movlb	0	; select bank0
  5425  0575  00B0               	movwf	___ftadd@f1
  5426  0576  3080               	movlw	128
  5427  0577  00B1               	movwf	___ftadd@f1+1
  5428  0578  30BF               	movlw	191
  5429  0579  00B2               	movwf	___ftadd@f1+2
  5430  057A  0021               	movlb	1	; select bank1
  5431  057B  0839               	movf	(main@readTemperature+1)^(0+128),w
  5432  057C  00F9               	movwf	___lwtoft@c+1
  5433  057D  0838               	movf	main@readTemperature^(0+128),w
  5434  057E  00F8               	movwf	___lwtoft@c
  5435  057F  3188  204A  3184   	fcall	___lwtoft
  5436  0582  0878               	movf	?___lwtoft,w
  5437  0583  0020               	movlb	0	; select bank0
  5438  0584  00A0               	movwf	___ftdiv@f2
  5439  0585  0879               	movf	?___lwtoft+1,w
  5440  0586  00A1               	movwf	___ftdiv@f2+1
  5441  0587  087A               	movf	?___lwtoft+2,w
  5442  0588  00A2               	movwf	___ftdiv@f2+2
  5443  0589  30C0               	movlw	192
  5444  058A  00A3               	movwf	___ftdiv@f1
  5445  058B  307F               	movlw	127
  5446  058C  00A4               	movwf	___ftdiv@f1+1
  5447  058D  3044               	movlw	68
  5448  058E  00A5               	movwf	___ftdiv@f1+2
  5449  058F  318D  25F3  3184   	fcall	___ftdiv
  5450  0592  0020               	movlb	0	; select bank0
  5451  0593  0820               	movf	?___ftdiv,w
  5452  0594  00B3               	movwf	___ftadd@f2
  5453  0595  0821               	movf	?___ftdiv+1,w
  5454  0596  00B4               	movwf	___ftadd@f2+1
  5455  0597  0822               	movf	?___ftdiv+2,w
  5456  0598  00B5               	movwf	___ftadd@f2+2
  5457  0599  3182  221B  3184   	fcall	___ftadd
  5458  059C  0020               	movlb	0	; select bank0
  5459  059D  0830               	movf	?___ftadd,w
  5460  059E  0021               	movlb	1	; select bank1
  5461  059F  00AD               	movwf	_main$1054^(0+128)
  5462  05A0  0020               	movlb	0	; select bank0
  5463  05A1  0831               	movf	?___ftadd+1,w
  5464  05A2  0021               	movlb	1	; select bank1
  5465  05A3  00AE               	movwf	(_main$1054+1)^(0+128)
  5466  05A4  0020               	movlb	0	; select bank0
  5467  05A5  0832               	movf	?___ftadd+2,w
  5468  05A6  0021               	movlb	1	; select bank1
  5469  05A7  00AF               	movwf	(_main$1054+2)^(0+128)
  5470                           
  5471                           ;main.c: 48: R = 10200/(1023/(float)readTemperature - 1);
  5472  05A8  082D               	movf	_main$1054^(0+128),w
  5473  05A9  0020               	movlb	0	; select bank0
  5474  05AA  00A0               	movwf	___ftdiv@f2
  5475  05AB  0021               	movlb	1	; select bank1
  5476  05AC  082E               	movf	(_main$1054+1)^(0+128),w
  5477  05AD  0020               	movlb	0	; select bank0
  5478  05AE  00A1               	movwf	___ftdiv@f2+1
  5479  05AF  0021               	movlb	1	; select bank1
  5480  05B0  082F               	movf	(_main$1054+2)^(0+128),w
  5481  05B1  0020               	movlb	0	; select bank0
  5482  05B2  00A2               	movwf	___ftdiv@f2+2
  5483  05B3  3060               	movlw	96
  5484  05B4  00A3               	movwf	___ftdiv@f1
  5485  05B5  301F               	movlw	31
  5486  05B6  00A4               	movwf	___ftdiv@f1+1
  5487  05B7  3046               	movlw	70
  5488  05B8  00A5               	movwf	___ftdiv@f1+2
  5489  05B9  318D  25F3  3184   	fcall	___ftdiv
  5490  05BC  0020               	movlb	0	; select bank0
  5491  05BD  0820               	movf	?___ftdiv,w
  5492  05BE  0021               	movlb	1	; select bank1
  5493  05BF  00AA               	movwf	main@R^(0+128)
  5494  05C0  0020               	movlb	0	; select bank0
  5495  05C1  0821               	movf	?___ftdiv+1,w
  5496  05C2  0021               	movlb	1	; select bank1
  5497  05C3  00AB               	movwf	(main@R+1)^(0+128)
  5498  05C4  0020               	movlb	0	; select bank0
  5499  05C5  0822               	movf	?___ftdiv+2,w
  5500  05C6  0021               	movlb	1	; select bank1
  5501  05C7  00AC               	movwf	(main@R+2)^(0+128)
  5502                           
  5503                           ;main.c: 50: steinhart = R /10061;
  5504  05C8  3034               	movlw	52
  5505  05C9  0020               	movlb	0	; select bank0
  5506  05CA  00A0               	movwf	___ftdiv@f2
  5507  05CB  301D               	movlw	29
  5508  05CC  00A1               	movwf	___ftdiv@f2+1
  5509  05CD  3046               	movlw	70
  5510  05CE  00A2               	movwf	___ftdiv@f2+2
  5511  05CF  0021               	movlb	1	; select bank1
  5512  05D0  082A               	movf	main@R^(0+128),w
  5513  05D1  0020               	movlb	0	; select bank0
  5514  05D2  00A3               	movwf	___ftdiv@f1
  5515  05D3  0021               	movlb	1	; select bank1
  5516  05D4  082B               	movf	(main@R+1)^(0+128),w
  5517  05D5  0020               	movlb	0	; select bank0
  5518  05D6  00A4               	movwf	___ftdiv@f1+1
  5519  05D7  0021               	movlb	1	; select bank1
  5520  05D8  082C               	movf	(main@R+2)^(0+128),w
  5521  05D9  0020               	movlb	0	; select bank0
  5522  05DA  00A5               	movwf	___ftdiv@f1+2
  5523  05DB  318D  25F3  3184   	fcall	___ftdiv
  5524  05DE  0020               	movlb	0	; select bank0
  5525  05DF  0820               	movf	?___ftdiv,w
  5526  05E0  0021               	movlb	1	; select bank1
  5527  05E1  00C1               	movwf	main@steinhart^(0+128)
  5528  05E2  0020               	movlb	0	; select bank0
  5529  05E3  0821               	movf	?___ftdiv+1,w
  5530  05E4  0021               	movlb	1	; select bank1
  5531  05E5  00C2               	movwf	(main@steinhart+1)^(0+128)
  5532  05E6  0020               	movlb	0	; select bank0
  5533  05E7  0822               	movf	?___ftdiv+2,w
  5534  05E8  0021               	movlb	1	; select bank1
  5535  05E9  00C3               	movwf	(main@steinhart+2)^(0+128)
  5536                           
  5537                           ;main.c: 51: steinhart = log(steinhart);
  5538  05EA  0841               	movf	main@steinhart^(0+128),w
  5539  05EB  0020               	movlb	0	; select bank0
  5540  05EC  00C7               	movwf	log@x
  5541  05ED  0021               	movlb	1	; select bank1
  5542  05EE  0842               	movf	(main@steinhart+1)^(0+128),w
  5543  05EF  0020               	movlb	0	; select bank0
  5544  05F0  00C8               	movwf	log@x+1
  5545  05F1  0021               	movlb	1	; select bank1
  5546  05F2  0843               	movf	(main@steinhart+2)^(0+128),w
  5547  05F3  0020               	movlb	0	; select bank0
  5548  05F4  00C9               	movwf	log@x+2
  5549  05F5  318E  269C  3184   	fcall	_log
  5550  05F8  0020               	movlb	0	; select bank0
  5551  05F9  0847               	movf	?_log,w
  5552  05FA  0021               	movlb	1	; select bank1
  5553  05FB  00C1               	movwf	main@steinhart^(0+128)
  5554  05FC  0020               	movlb	0	; select bank0
  5555  05FD  0848               	movf	?_log+1,w
  5556  05FE  0021               	movlb	1	; select bank1
  5557  05FF  00C2               	movwf	(main@steinhart+1)^(0+128)
  5558  0600  0020               	movlb	0	; select bank0
  5559  0601  0849               	movf	?_log+2,w
  5560  0602  0021               	movlb	1	; select bank1
  5561  0603  00C3               	movwf	(main@steinhart+2)^(0+128)
  5562                           
  5563                           ;main.c: 52: steinhart /= 3995;
  5564  0604  30B0               	movlw	176
  5565  0605  0020               	movlb	0	; select bank0
  5566  0606  00A0               	movwf	___ftdiv@f2
  5567  0607  3079               	movlw	121
  5568  0608  00A1               	movwf	___ftdiv@f2+1
  5569  0609  3045               	movlw	69
  5570  060A  00A2               	movwf	___ftdiv@f2+2
  5571  060B  0021               	movlb	1	; select bank1
  5572  060C  0841               	movf	main@steinhart^(0+128),w
  5573  060D  0020               	movlb	0	; select bank0
  5574  060E  00A3               	movwf	___ftdiv@f1
  5575  060F  0021               	movlb	1	; select bank1
  5576  0610  0842               	movf	(main@steinhart+1)^(0+128),w
  5577  0611  0020               	movlb	0	; select bank0
  5578  0612  00A4               	movwf	___ftdiv@f1+1
  5579  0613  0021               	movlb	1	; select bank1
  5580  0614  0843               	movf	(main@steinhart+2)^(0+128),w
  5581  0615  0020               	movlb	0	; select bank0
  5582  0616  00A5               	movwf	___ftdiv@f1+2
  5583  0617  318D  25F3  3184   	fcall	___ftdiv
  5584  061A  0020               	movlb	0	; select bank0
  5585  061B  0820               	movf	?___ftdiv,w
  5586  061C  0021               	movlb	1	; select bank1
  5587  061D  00C1               	movwf	main@steinhart^(0+128)
  5588  061E  0020               	movlb	0	; select bank0
  5589  061F  0821               	movf	?___ftdiv+1,w
  5590  0620  0021               	movlb	1	; select bank1
  5591  0621  00C2               	movwf	(main@steinhart+1)^(0+128)
  5592  0622  0020               	movlb	0	; select bank0
  5593  0623  0822               	movf	?___ftdiv+2,w
  5594  0624  0021               	movlb	1	; select bank1
  5595  0625  00C3               	movwf	(main@steinhart+2)^(0+128)
  5596                           
  5597                           ;main.c: 53: steinhart += 1.0 / (25 + 273.15);
  5598  0626  30CF               	movlw	207
  5599  0627  0020               	movlb	0	; select bank0
  5600  0628  00B0               	movwf	___ftadd@f1
  5601  0629  305B               	movlw	91
  5602  062A  00B1               	movwf	___ftadd@f1+1
  5603  062B  303B               	movlw	59
  5604  062C  00B2               	movwf	___ftadd@f1+2
  5605  062D  0021               	movlb	1	; select bank1
  5606  062E  0841               	movf	main@steinhart^(0+128),w
  5607  062F  0020               	movlb	0	; select bank0
  5608  0630  00B3               	movwf	___ftadd@f2
  5609  0631  0021               	movlb	1	; select bank1
  5610  0632  0842               	movf	(main@steinhart+1)^(0+128),w
  5611  0633  0020               	movlb	0	; select bank0
  5612  0634  00B4               	movwf	___ftadd@f2+1
  5613  0635  0021               	movlb	1	; select bank1
  5614  0636  0843               	movf	(main@steinhart+2)^(0+128),w
  5615  0637  0020               	movlb	0	; select bank0
  5616  0638  00B5               	movwf	___ftadd@f2+2
  5617  0639  3182  221B  3184   	fcall	___ftadd
  5618  063C  0020               	movlb	0	; select bank0
  5619  063D  0830               	movf	?___ftadd,w
  5620  063E  0021               	movlb	1	; select bank1
  5621  063F  00C1               	movwf	main@steinhart^(0+128)
  5622  0640  0020               	movlb	0	; select bank0
  5623  0641  0831               	movf	?___ftadd+1,w
  5624  0642  0021               	movlb	1	; select bank1
  5625  0643  00C2               	movwf	(main@steinhart+1)^(0+128)
  5626  0644  0020               	movlb	0	; select bank0
  5627  0645  0832               	movf	?___ftadd+2,w
  5628  0646  0021               	movlb	1	; select bank1
  5629  0647  00C3               	movwf	(main@steinhart+2)^(0+128)
  5630                           
  5631                           ;main.c: 54: steinhart = 1.0 / steinhart;
  5632  0648  0841               	movf	main@steinhart^(0+128),w
  5633  0649  0020               	movlb	0	; select bank0
  5634  064A  00A0               	movwf	___ftdiv@f2
  5635  064B  0021               	movlb	1	; select bank1
  5636  064C  0842               	movf	(main@steinhart+1)^(0+128),w
  5637  064D  0020               	movlb	0	; select bank0
  5638  064E  00A1               	movwf	___ftdiv@f2+1
  5639  064F  0021               	movlb	1	; select bank1
  5640  0650  0843               	movf	(main@steinhart+2)^(0+128),w
  5641  0651  0020               	movlb	0	; select bank0
  5642  0652  00A2               	movwf	___ftdiv@f2+2
  5643  0653  3000               	movlw	0
  5644  0654  00A3               	movwf	___ftdiv@f1
  5645  0655  3080               	movlw	128
  5646  0656  00A4               	movwf	___ftdiv@f1+1
  5647  0657  303F               	movlw	63
  5648  0658  00A5               	movwf	___ftdiv@f1+2
  5649  0659  318D  25F3  3184   	fcall	___ftdiv
  5650  065C  0020               	movlb	0	; select bank0
  5651  065D  0820               	movf	?___ftdiv,w
  5652  065E  0021               	movlb	1	; select bank1
  5653  065F  00C1               	movwf	main@steinhart^(0+128)
  5654  0660  0020               	movlb	0	; select bank0
  5655  0661  0821               	movf	?___ftdiv+1,w
  5656  0662  0021               	movlb	1	; select bank1
  5657  0663  00C2               	movwf	(main@steinhart+1)^(0+128)
  5658  0664  0020               	movlb	0	; select bank0
  5659  0665  0822               	movf	?___ftdiv+2,w
  5660  0666  0021               	movlb	1	; select bank1
  5661  0667  00C3               	movwf	(main@steinhart+2)^(0+128)
  5662                           
  5663                           ;main.c: 55: steinhart -= 273.15;
  5664  0668  3093               	movlw	147
  5665  0669  0020               	movlb	0	; select bank0
  5666  066A  00BD               	movwf	___ftsub@f2
  5667  066B  3088               	movlw	136
  5668  066C  00BE               	movwf	___ftsub@f2+1
  5669  066D  3043               	movlw	67
  5670  066E  00BF               	movwf	___ftsub@f2+2
  5671  066F  0021               	movlb	1	; select bank1
  5672  0670  0841               	movf	main@steinhart^(0+128),w
  5673  0671  0020               	movlb	0	; select bank0
  5674  0672  00C0               	movwf	___ftsub@f1
  5675  0673  0021               	movlb	1	; select bank1
  5676  0674  0842               	movf	(main@steinhart+1)^(0+128),w
  5677  0675  0020               	movlb	0	; select bank0
  5678  0676  00C1               	movwf	___ftsub@f1+1
  5679  0677  0021               	movlb	1	; select bank1
  5680  0678  0843               	movf	(main@steinhart+2)^(0+128),w
  5681  0679  0020               	movlb	0	; select bank0
  5682  067A  00C2               	movwf	___ftsub@f1+2
  5683  067B  3189  210B  3184   	fcall	___ftsub
  5684  067E  0020               	movlb	0	; select bank0
  5685  067F  083D               	movf	?___ftsub,w
  5686  0680  0021               	movlb	1	; select bank1
  5687  0681  00C1               	movwf	main@steinhart^(0+128)
  5688  0682  0020               	movlb	0	; select bank0
  5689  0683  083E               	movf	?___ftsub+1,w
  5690  0684  0021               	movlb	1	; select bank1
  5691  0685  00C2               	movwf	(main@steinhart+1)^(0+128)
  5692  0686  0020               	movlb	0	; select bank0
  5693  0687  083F               	movf	?___ftsub+2,w
  5694  0688  0021               	movlb	1	; select bank1
  5695  0689  00C3               	movwf	(main@steinhart+2)^(0+128)
  5696                           
  5697                           ;main.c: 58: displayTemp = (uint16_t)(steinhart*10);
  5698  068A  0841               	movf	main@steinhart^(0+128),w
  5699  068B  0020               	movlb	0	; select bank0
  5700  068C  00A3               	movwf	___ftmul@f2
  5701  068D  0021               	movlb	1	; select bank1
  5702  068E  0842               	movf	(main@steinhart+1)^(0+128),w
  5703  068F  0020               	movlb	0	; select bank0
  5704  0690  00A4               	movwf	___ftmul@f2+1
  5705  0691  0021               	movlb	1	; select bank1
  5706  0692  0843               	movf	(main@steinhart+2)^(0+128),w
  5707  0693  0020               	movlb	0	; select bank0
  5708  0694  00A5               	movwf	___ftmul@f2+2
  5709  0695  3000               	movlw	0
  5710  0696  00A0               	movwf	___ftmul@f1
  5711  0697  3020               	movlw	32
  5712  0698  00A1               	movwf	___ftmul@f1+1
  5713  0699  3041               	movlw	65
  5714  069A  00A2               	movwf	___ftmul@f1+2
  5715  069B  318F  274C  3184   	fcall	___ftmul
  5716  069E  0020               	movlb	0	; select bank0
  5717  069F  0820               	movf	?___ftmul,w
  5718  06A0  00DD               	movwf	___fttol@f1
  5719  06A1  0821               	movf	?___ftmul+1,w
  5720  06A2  00DE               	movwf	___fttol@f1+1
  5721  06A3  0822               	movf	?___ftmul+2,w
  5722  06A4  00DF               	movwf	___fttol@f1+2
  5723  06A5  3180  2011  3184   	fcall	___fttol
  5724  06A8  0020               	movlb	0	; select bank0
  5725  06A9  085E               	movf	?___fttol+1,w
  5726  06AA  0021               	movlb	1	; select bank1
  5727  06AB  00BC               	movwf	(main@displayTemp+1)^(0+128)
  5728  06AC  0020               	movlb	0	; select bank0
  5729  06AD  085D               	movf	?___fttol,w
  5730  06AE  0021               	movlb	1	; select bank1
  5731  06AF  00BB               	movwf	main@displayTemp^(0+128)
  5732                           
  5733                           ;main.c: 60: if(toggle == 1)
  5734  06B0  033A               	decf	main@toggle^(0+128),w
  5735  06B1  1D03               	btfss	3,2
  5736  06B2  2EE8               	goto	l3070
  5737                           
  5738                           ;main.c: 61: {
  5739                           ;main.c: 62: displayTemp = displayTemp*9/5+320;
  5740  06B3  3005               	movlw	5
  5741  06B4  00F6               	movwf	___lwdiv@divisor
  5742  06B5  3000               	movlw	0
  5743  06B6  00F7               	movwf	___lwdiv@divisor+1
  5744  06B7  083C               	movf	(main@displayTemp+1)^(0+128),w
  5745  06B8  00F1               	movwf	___wmul@multiplier+1
  5746  06B9  083B               	movf	main@displayTemp^(0+128),w
  5747  06BA  00F0               	movwf	___wmul@multiplier
  5748  06BB  3009               	movlw	9
  5749  06BC  00F2               	movwf	___wmul@multiplicand
  5750  06BD  3000               	movlw	0
  5751  06BE  00F3               	movwf	___wmul@multiplicand+1
  5752  06BF  3188  20F0  3184   	fcall	___wmul
  5753  06C2  0871               	movf	?___wmul+1,w
  5754  06C3  00F9               	movwf	___lwdiv@dividend+1
  5755  06C4  0870               	movf	?___wmul,w
  5756  06C5  00F8               	movwf	___lwdiv@dividend
  5757  06C6  3189  21F1  3184   	fcall	___lwdiv
  5758  06C9  0876               	movf	?___lwdiv,w
  5759  06CA  3E40               	addlw	64
  5760  06CB  0021               	movlb	1	; select bank1
  5761  06CC  00BB               	movwf	main@displayTemp^(0+128)
  5762  06CD  3001               	movlw	1
  5763  06CE  3D77               	addwfc	?___lwdiv+1,w
  5764  06CF  00BC               	movwf	(main@displayTemp+1)^(0+128)
  5765                           
  5766                           ;main.c: 64: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5767  06D0  01F3               	clrf	LCD_Set_Cursor@y
  5768  06D1  3000               	movlw	0
  5769  06D2  318A  22D8  3184   	fcall	_LCD_Set_Cursor
  5770  06D5  0021               	movlb	1	; select bank1
  5771  06D6  083C               	movf	(main@displayTemp+1)^(0+128),w
  5772  06D7  00FA               	movwf	LCD_Write_Int@value+1
  5773  06D8  083B               	movf	main@displayTemp^(0+128),w
  5774  06D9  00F9               	movwf	LCD_Write_Int@value
  5775  06DA  01FB               	clrf	LCD_Write_Int@fieldLength
  5776  06DB  03FB               	decf	LCD_Write_Int@fieldLength,f
  5777  06DC  01FC               	clrf	LCD_Write_Int@numPlaces
  5778  06DD  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5779  06DE  01FD               	clrf	LCD_Write_Int@sign
  5780  06DF  3181  2152  3184   	fcall	_LCD_Write_Int
  5781                           
  5782                           ;main.c: 65: LCD_Write_Char(0);
  5783  06E2  3000               	movlw	0
  5784  06E3  3189  2195  3184   	fcall	_LCD_Write_Char
  5785                           
  5786                           ;main.c: 66: LCD_Write_Char('F');
  5787  06E6  3046               	movlw	70
  5788  06E7  2EFF               	goto	L1
  5789  06E8                     l3070:	
  5790                           ;main.c: 68: }
  5791                           
  5792                           ;main.c: 67: LCD_Write_Char(' ');
  5793                           
  5794                           
  5795                           ;main.c: 69: else
  5796                           ;main.c: 70: {
  5797                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_Int(displayTemp,-1, 1, 0);};
  5798  06E8  01F3               	clrf	LCD_Set_Cursor@y
  5799  06E9  3000               	movlw	0
  5800  06EA  318A  22D8  3184   	fcall	_LCD_Set_Cursor
  5801  06ED  0021               	movlb	1	; select bank1
  5802  06EE  083C               	movf	(main@displayTemp+1)^(0+128),w
  5803  06EF  00FA               	movwf	LCD_Write_Int@value+1
  5804  06F0  083B               	movf	main@displayTemp^(0+128),w
  5805  06F1  00F9               	movwf	LCD_Write_Int@value
  5806  06F2  01FB               	clrf	LCD_Write_Int@fieldLength
  5807  06F3  03FB               	decf	LCD_Write_Int@fieldLength,f
  5808  06F4  01FC               	clrf	LCD_Write_Int@numPlaces
  5809  06F5  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5810  06F6  01FD               	clrf	LCD_Write_Int@sign
  5811  06F7  3181  2152  3184   	fcall	_LCD_Write_Int
  5812                           
  5813                           ;main.c: 72: LCD_Write_Char(0);
  5814  06FA  3000               	movlw	0
  5815  06FB  3189  2195  3184   	fcall	_LCD_Write_Char
  5816                           
  5817                           ;main.c: 73: LCD_Write_Char('C');
  5818  06FE  3043               	movlw	67
  5819  06FF                     L1:	
  5820  06FF  3189  2195  3184   	fcall	_LCD_Write_Char
  5821                           
  5822                           ;main.c: 74: LCD_Write_Char(' ');
  5823  0702  3020               	movlw	32
  5824  0703  3189  2195  3184   	fcall	_LCD_Write_Char
  5825                           
  5826                           ;main.c: 75: }
  5827                           ;main.c: 77: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  5828  0706  01F3               	clrf	LCD_Set_Cursor@y
  5829  0707  3001               	movlw	1
  5830  0708  318A  22D8  3184   	fcall	_LCD_Set_Cursor
  5831  070B  3025               	movlw	low (STR_4| (0+32768))
  5832  070C  00F5               	movwf	LCD_Write_String@a
  5833  070D  3090               	movlw	high (STR_4| (0+32768))
  5834  070E  00F6               	movwf	LCD_Write_String@a+1
  5835  070F  3188  20D6  3184   	fcall	_LCD_Write_String
  5836                           
  5837                           ;main.c: 78: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,3, 0, 0);};
  5838  0712  3005               	movlw	5
  5839  0713  0021               	movlb	1	; select bank1
  5840  0714  00A0               	movwf	??_main^(0+128)
  5841  0715  0820               	movf	??_main^(0+128),w
  5842  0716  00F3               	movwf	LCD_Set_Cursor@y
  5843  0717  3001               	movlw	1
  5844  0718  318A  22D8  3184   	fcall	_LCD_Set_Cursor
  5845  071B  0021               	movlb	1	; select bank1
  5846  071C  0833               	movf	(main@minutes+1)^(0+128),w
  5847  071D  00FA               	movwf	LCD_Write_Int@value+1
  5848  071E  0832               	movf	main@minutes^(0+128),w
  5849  071F  00F9               	movwf	LCD_Write_Int@value
  5850  0720  3003               	movlw	3
  5851  0721  00A0               	movwf	??_main^(0+128)
  5852  0722  0820               	movf	??_main^(0+128),w
  5853  0723  00FB               	movwf	LCD_Write_Int@fieldLength
  5854  0724  01FC               	clrf	LCD_Write_Int@numPlaces
  5855  0725  01FD               	clrf	LCD_Write_Int@sign
  5856  0726  3181  2152  3184   	fcall	_LCD_Write_Int
  5857                           
  5858                           ;main.c: 81: counter +=1;
  5859  0729  3001               	movlw	1
  5860  072A  0021               	movlb	1	; select bank1
  5861  072B  07B6               	addwf	main@counter^(0+128),f
  5862  072C  3000               	movlw	0
  5863  072D  3DB7               	addwfc	(main@counter+1)^(0+128),f
  5864                           
  5865                           ;main.c: 83: if(counter>12)
  5866  072E  3000               	movlw	0
  5867  072F  0237               	subwf	(main@counter+1)^(0+128),w
  5868  0730  300D               	movlw	13
  5869  0731  1903               	skipnz
  5870  0732  0236               	subwf	main@counter^(0+128),w
  5871  0733  1C03               	skipc
  5872  0734  2F6F               	goto	l3100
  5873                           
  5874                           ;main.c: 84: {
  5875                           ;main.c: 85: toggle = 1-toggle;
  5876  0735  033A               	decf	main@toggle^(0+128),w
  5877  0736  3AFF               	xorlw	255
  5878  0737  3E01               	addlw	1
  5879  0738  00A0               	movwf	??_main^(0+128)
  5880  0739  0820               	movf	??_main^(0+128),w
  5881  073A  00BA               	movwf	main@toggle^(0+128)
  5882                           
  5883                           ;main.c: 86: counter = 0;
  5884  073B  01B6               	clrf	main@counter^(0+128)
  5885  073C  01B7               	clrf	(main@counter+1)^(0+128)
  5886                           
  5887                           ;main.c: 87: PWM_Output = (int)PID_Calculate(setpoint, steinhart);
  5888  073D  0841               	movf	main@steinhart^(0+128),w
  5889  073E  0020               	movlb	0	; select bank0
  5890  073F  00C8               	movwf	PID_Calculate@temp
  5891  0740  0021               	movlb	1	; select bank1
  5892  0741  0842               	movf	(main@steinhart+1)^(0+128),w
  5893  0742  0020               	movlb	0	; select bank0
  5894  0743  00C9               	movwf	PID_Calculate@temp+1
  5895  0744  0021               	movlb	1	; select bank1
  5896  0745  0843               	movf	(main@steinhart+2)^(0+128),w
  5897  0746  0020               	movlb	0	; select bank0
  5898  0747  00CA               	movwf	PID_Calculate@temp+2
  5899  0748  086F               	movf	_setpoint,w
  5900  0749  0021               	movlb	1	; select bank1
  5901  074A  00A0               	movwf	??_main^(0+128)
  5902  074B  01A1               	clrf	(??_main^(0+128)+1)
  5903  074C  0820               	movf	??_main^(0+128),w
  5904  074D  0020               	movlb	0	; select bank0
  5905  074E  00C6               	movwf	PID_Calculate@setpoint
  5906  074F  0021               	movlb	1	; select bank1
  5907  0750  0821               	movf	(??_main+1)^(0+128),w
  5908  0751  0020               	movlb	0	; select bank0
  5909  0752  00C7               	movwf	PID_Calculate@setpoint+1
  5910  0753  3183  2311  3184   	fcall	_PID_Calculate
  5911  0756  0020               	movlb	0	; select bank0
  5912  0757  0846               	movf	?_PID_Calculate,w
  5913  0758  00DD               	movwf	___fttol@f1
  5914  0759  0847               	movf	?_PID_Calculate+1,w
  5915  075A  00DE               	movwf	___fttol@f1+1
  5916  075B  0848               	movf	?_PID_Calculate+2,w
  5917  075C  00DF               	movwf	___fttol@f1+2
  5918  075D  3180  2011  3184   	fcall	___fttol
  5919  0760  0020               	movlb	0	; select bank0
  5920  0761  085E               	movf	?___fttol+1,w
  5921  0762  0021               	movlb	1	; select bank1
  5922  0763  00B1               	movwf	(main@PWM_Output+1)^(0+128)
  5923  0764  0020               	movlb	0	; select bank0
  5924  0765  085D               	movf	?___fttol,w
  5925  0766  0021               	movlb	1	; select bank1
  5926  0767  00B0               	movwf	main@PWM_Output^(0+128)
  5927                           
  5928                           ;main.c: 88: PWM6_LoadDutyValue(PWM_Output);
  5929  0768  0831               	movf	(main@PWM_Output+1)^(0+128),w
  5930  0769  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5931  076A  0830               	movf	main@PWM_Output^(0+128),w
  5932  076B  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5933  076C  3188  205D  3184   	fcall	_PWM6_LoadDutyValue
  5934  076F                     l3100:	
  5935                           
  5936                           ;main.c: 89: }
  5937                           ;main.c: 92: if(TMR0IF)
  5938  076F  002E               	movlb	14	; select bank14
  5939  0770  1E8C               	btfss	12,5	;volatile
  5940  0771  2F7E               	goto	l3106
  5941                           
  5942                           ;main.c: 93: {
  5943                           ;main.c: 94: TMR0H = 0x24;
  5944  0772  3024               	movlw	36
  5945  0773  0020               	movlb	0	; select bank0
  5946  0774  009D               	movwf	29	;volatile
  5947                           
  5948                           ;main.c: 95: TMR0L = 0x9F;
  5949  0775  309F               	movlw	159
  5950  0776  009C               	movwf	28	;volatile
  5951                           
  5952                           ;main.c: 96: TMR0IF = 0;
  5953  0777  002E               	movlb	14	; select bank14
  5954  0778  128C               	bcf	12,5	;volatile
  5955                           
  5956                           ;main.c: 97: seconds+=1;
  5957  0779  3001               	movlw	1
  5958  077A  0021               	movlb	1	; select bank1
  5959  077B  07B4               	addwf	main@seconds^(0+128),f
  5960  077C  3000               	movlw	0
  5961  077D  3DB5               	addwfc	(main@seconds+1)^(0+128),f
  5962  077E                     l3106:	
  5963                           
  5964                           ;main.c: 98: }
  5965                           ;main.c: 100: if(setpoint - steinhart < 2)
  5966  077E  0021               	movlb	1	; select bank1
  5967  077F  0841               	movf	main@steinhart^(0+128),w
  5968  0780  00F0               	movwf	___ftneg@f1
  5969  0781  0842               	movf	(main@steinhart+1)^(0+128),w
  5970  0782  00F1               	movwf	___ftneg@f1+1
  5971  0783  0843               	movf	(main@steinhart+2)^(0+128),w
  5972  0784  00F2               	movwf	___ftneg@f1+2
  5973  0785  3197  27DC  3184   	fcall	___ftneg
  5974  0788  0870               	movf	?___ftneg,w
  5975  0789  0020               	movlb	0	; select bank0
  5976  078A  00B0               	movwf	___ftadd@f1
  5977  078B  0871               	movf	?___ftneg+1,w
  5978  078C  00B1               	movwf	___ftadd@f1+1
  5979  078D  0872               	movf	?___ftneg+2,w
  5980  078E  00B2               	movwf	___ftadd@f1+2
  5981  078F  086F               	movf	_setpoint,w
  5982  0790  3188  20BC  3184   	fcall	___lbtoft
  5983  0793  0878               	movf	?___lbtoft,w
  5984  0794  0020               	movlb	0	; select bank0
  5985  0795  00B3               	movwf	___ftadd@f2
  5986  0796  0879               	movf	?___lbtoft+1,w
  5987  0797  00B4               	movwf	___ftadd@f2+1
  5988  0798  087A               	movf	?___lbtoft+2,w
  5989  0799  00B5               	movwf	___ftadd@f2+2
  5990  079A  3182  221B  3184   	fcall	___ftadd
  5991  079D  0020               	movlb	0	; select bank0
  5992  079E  0830               	movf	?___ftadd,w
  5993  079F  00BD               	movwf	___ftge@ff1
  5994  07A0  0831               	movf	?___ftadd+1,w
  5995  07A1  00BE               	movwf	___ftge@ff1+1
  5996  07A2  0832               	movf	?___ftadd+2,w
  5997  07A3  00BF               	movwf	___ftge@ff1+2
  5998  07A4  3000               	movlw	0
  5999  07A5  00C0               	movwf	___ftge@ff2
  6000  07A6  3000               	movlw	0
  6001  07A7  00C1               	movwf	___ftge@ff2+1
  6002  07A8  3040               	movlw	64
  6003  07A9  00C2               	movwf	___ftge@ff2+2
  6004  07AA  318A  2260  3184   	fcall	___ftge
  6005  07AD  1803               	btfsc	3,0
  6006  07AE  2FBD               	goto	l3114
  6007                           
  6008                           ;main.c: 101: {
  6009                           ;main.c: 102: if(seconds>63)
  6010  07AF  3000               	movlw	0
  6011  07B0  0021               	movlb	1	; select bank1
  6012  07B1  0235               	subwf	(main@seconds+1)^(0+128),w
  6013  07B2  3040               	movlw	64
  6014  07B3  1903               	skipnz
  6015  07B4  0234               	subwf	main@seconds^(0+128),w
  6016  07B5  1C03               	skipc
  6017  07B6  2FBD               	goto	l3114
  6018                           
  6019                           ;main.c: 103: {
  6020                           ;main.c: 104: minutes+=1;
  6021  07B7  3001               	movlw	1
  6022  07B8  07B2               	addwf	main@minutes^(0+128),f
  6023  07B9  3000               	movlw	0
  6024  07BA  3DB3               	addwfc	(main@minutes+1)^(0+128),f
  6025                           
  6026                           ;main.c: 105: seconds = 0;
  6027  07BB  01B4               	clrf	main@seconds^(0+128)
  6028  07BC  01B5               	clrf	(main@seconds+1)^(0+128)
  6029  07BD                     l3114:	
  6030                           
  6031                           ;main.c: 106: }
  6032                           ;main.c: 107: }
  6033                           ;main.c: 109: readButtons();
  6034  07BD  318D  256E  3184   	fcall	_readButtons
  6035                           
  6036                           ;main.c: 110: tempSetpoint();
  6037  07C0  3180  2098  3184   	fcall	_tempSetpoint
  6038  07C3  2CD2               	goto	l3024
  6039  07C4                     __end_of_main:	
  6040                           
  6041                           	psect	text1
  6042  0098                     __ptext1:	
  6043 ;; *************** function _tempSetpoint *****************
  6044 ;; Defined at:
  6045 ;;		line 12 in file "buttons.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  counter         1   20[BANK0 ] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        4 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    4
  6066 ;; This function calls:
  6067 ;;		_LCD_Clear
  6068 ;;		_LCD_Set_Cursor
  6069 ;;		_LCD_Write_Char
  6070 ;;		_LCD_Write_Int
  6071 ;;		_LCD_Write_String
  6072 ;;		_readButtons
  6073 ;; This function is called by:
  6074 ;;		_main
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           
  6079                           ;psect for function _tempSetpoint
  6080  0098                     _tempSetpoint:	
  6081                           
  6082                           ;buttons.c: 14: uint8_t counter = 0;
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6086  0098  0020               	movlb	0	; select bank0
  6087  0099  01B4               	clrf	tempSetpoint@counter
  6088                           
  6089                           ;buttons.c: 16: oldSetpoint = setpoint;
  6090  009A  086F               	movf	_setpoint,w
  6091  009B  00B1               	movwf	??_tempSetpoint
  6092  009C  0831               	movf	??_tempSetpoint,w
  6093  009D  00EC               	movwf	_oldSetpoint
  6094  009E                     l2784:	
  6095                           ;buttons.c: 18: while(downCount >= 5)
  6096                           
  6097  009E  3005               	movlw	5
  6098  009F  0020               	movlb	0	; select bank0
  6099  00A0  026B               	subwf	_downCount,w
  6100  00A1  1C03               	btfss	3,0
  6101  00A2  2938               	goto	l2812
  6102                           
  6103                           ;buttons.c: 19: {
  6104                           ;buttons.c: 20: counter+=1;
  6105  00A3  3001               	movlw	1
  6106  00A4  00B1               	movwf	??_tempSetpoint
  6107  00A5  0831               	movf	??_tempSetpoint,w
  6108  00A6  07B4               	addwf	tempSetpoint@counter,f
  6109                           
  6110                           ;buttons.c: 21: if(counter<=1)
  6111  00A7  3002               	movlw	2
  6112  00A8  0234               	subwf	tempSetpoint@counter,w
  6113  00A9  1803               	skipnc
  6114  00AA  28AE               	goto	l2764
  6115                           
  6116                           ;buttons.c: 22: {
  6117                           ;buttons.c: 23: LCD_Clear();
  6118  00AB  3197  27E4  3180   	fcall	_LCD_Clear
  6119  00AE                     l2764:	
  6120                           
  6121                           ;buttons.c: 24: }
  6122                           ;buttons.c: 25: setpoint-=1;
  6123  00AE  3001               	movlw	1
  6124  00AF  0020               	movlb	0	; select bank0
  6125  00B0  02EF               	subwf	_setpoint,f
  6126                           
  6127                           ;buttons.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6128  00B1  01F3               	clrf	LCD_Set_Cursor@y
  6129  00B2  3000               	movlw	0
  6130  00B3  318A  22D8  3180   	fcall	_LCD_Set_Cursor
  6131  00B6  301B               	movlw	low (STR_1| (0+32768))
  6132  00B7  00F5               	movwf	LCD_Write_String@a
  6133  00B8  3090               	movlw	high (STR_1| (0+32768))
  6134  00B9  00F6               	movwf	LCD_Write_String@a+1
  6135  00BA  3188  20D6  3180   	fcall	_LCD_Write_String
  6136                           
  6137                           ;buttons.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6138  00BD  01F3               	clrf	LCD_Set_Cursor@y
  6139  00BE  3001               	movlw	1
  6140  00BF  318A  22D8  3180   	fcall	_LCD_Set_Cursor
  6141  00C2  0020               	movlb	0	; select bank0
  6142  00C3  086F               	movf	_setpoint,w
  6143  00C4  00B1               	movwf	??_tempSetpoint
  6144  00C5  01B2               	clrf	??_tempSetpoint+1
  6145  00C6  0831               	movf	??_tempSetpoint,w
  6146  00C7  00F9               	movwf	LCD_Write_Int@value
  6147  00C8  0832               	movf	??_tempSetpoint+1,w
  6148  00C9  00FA               	movwf	LCD_Write_Int@value+1
  6149  00CA  3003               	movlw	3
  6150  00CB  00B3               	movwf	??_tempSetpoint+2
  6151  00CC  0833               	movf	??_tempSetpoint+2,w
  6152  00CD  00FB               	movwf	LCD_Write_Int@fieldLength
  6153  00CE  01FC               	clrf	LCD_Write_Int@numPlaces
  6154  00CF  01FD               	clrf	LCD_Write_Int@sign
  6155  00D0  3181  2152  3180   	fcall	_LCD_Write_Int
  6156                           
  6157                           ;buttons.c: 28: LCD_Write_Char(0);
  6158  00D3  3000               	movlw	0
  6159  00D4  3189  2195  3180   	fcall	_LCD_Write_Char
  6160                           
  6161                           ;buttons.c: 29: LCD_Write_Char('C');
  6162  00D7  3043               	movlw	67
  6163  00D8  3189  2195  3180   	fcall	_LCD_Write_Char
  6164                           
  6165                           ;buttons.c: 30: LCD_Write_Char(' ');
  6166  00DB  3020               	movlw	32
  6167  00DC  3189  2195  3180   	fcall	_LCD_Write_Char
  6168                           
  6169                           ;buttons.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6170  00DF  3072               	movlw	114
  6171  00E0  0020               	movlb	0	; select bank0
  6172  00E1  00B2               	movwf	??_tempSetpoint+1
  6173  00E2  30A1               	movlw	161
  6174  00E3  00B1               	movwf	??_tempSetpoint
  6175  00E4                     u3277:	
  6176  00E4  0BB1               	decfsz	??_tempSetpoint,f
  6177  00E5  28E4               	goto	u3277
  6178  00E6  0BB2               	decfsz	??_tempSetpoint+1,f
  6179  00E7  28E4               	goto	u3277
  6180  00E8  3200               	nop2
  6181                           
  6182                           ;buttons.c: 32: readButtons();
  6183  00E9  318D  256E  3180   	fcall	_readButtons
  6184  00EC  289E               	goto	l2784
  6185  00ED                     l2786:	
  6186                           ;buttons.c: 33: }
  6187                           ;buttons.c: 35: while(upCount >= 5)
  6188                           
  6189                           
  6190                           ;buttons.c: 36: {
  6191                           ;buttons.c: 37: counter+=1;
  6192  00ED  3001               	movlw	1
  6193  00EE  00B1               	movwf	??_tempSetpoint
  6194  00EF  0831               	movf	??_tempSetpoint,w
  6195  00F0  07B4               	addwf	tempSetpoint@counter,f
  6196                           
  6197                           ;buttons.c: 38: if(counter<=1)
  6198  00F1  3002               	movlw	2
  6199  00F2  0234               	subwf	tempSetpoint@counter,w
  6200  00F3  1803               	skipnc
  6201  00F4  28F8               	goto	l2792
  6202                           
  6203                           ;buttons.c: 39: {
  6204                           ;buttons.c: 40: LCD_Clear();
  6205  00F5  3197  27E4  3180   	fcall	_LCD_Clear
  6206  00F8                     l2792:	
  6207                           
  6208                           ;buttons.c: 41: }
  6209                           ;buttons.c: 42: setpoint+=1;
  6210  00F8  3001               	movlw	1
  6211  00F9  0020               	movlb	0	; select bank0
  6212  00FA  00B1               	movwf	??_tempSetpoint
  6213  00FB  0831               	movf	??_tempSetpoint,w
  6214  00FC  07EF               	addwf	_setpoint,f
  6215                           
  6216                           ;buttons.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6217  00FD  01F3               	clrf	LCD_Set_Cursor@y
  6218  00FE  3000               	movlw	0
  6219  00FF  318A  22D8  3180   	fcall	_LCD_Set_Cursor
  6220  0102  301B               	movlw	low (STR_1| (0+32768))
  6221  0103  00F5               	movwf	LCD_Write_String@a
  6222  0104  3090               	movlw	high (STR_1| (0+32768))
  6223  0105  00F6               	movwf	LCD_Write_String@a+1
  6224  0106  3188  20D6  3180   	fcall	_LCD_Write_String
  6225                           
  6226                           ;buttons.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6227  0109  01F3               	clrf	LCD_Set_Cursor@y
  6228  010A  3001               	movlw	1
  6229  010B  318A  22D8  3180   	fcall	_LCD_Set_Cursor
  6230  010E  0020               	movlb	0	; select bank0
  6231  010F  086F               	movf	_setpoint,w
  6232  0110  00B1               	movwf	??_tempSetpoint
  6233  0111  01B2               	clrf	??_tempSetpoint+1
  6234  0112  0831               	movf	??_tempSetpoint,w
  6235  0113  00F9               	movwf	LCD_Write_Int@value
  6236  0114  0832               	movf	??_tempSetpoint+1,w
  6237  0115  00FA               	movwf	LCD_Write_Int@value+1
  6238  0116  3003               	movlw	3
  6239  0117  00B3               	movwf	??_tempSetpoint+2
  6240  0118  0833               	movf	??_tempSetpoint+2,w
  6241  0119  00FB               	movwf	LCD_Write_Int@fieldLength
  6242  011A  01FC               	clrf	LCD_Write_Int@numPlaces
  6243  011B  01FD               	clrf	LCD_Write_Int@sign
  6244  011C  3181  2152  3180   	fcall	_LCD_Write_Int
  6245                           
  6246                           ;buttons.c: 45: LCD_Write_Char(0);
  6247  011F  3000               	movlw	0
  6248  0120  3189  2195  3180   	fcall	_LCD_Write_Char
  6249                           
  6250                           ;buttons.c: 46: LCD_Write_Char('C');
  6251  0123  3043               	movlw	67
  6252  0124  3189  2195  3180   	fcall	_LCD_Write_Char
  6253                           
  6254                           ;buttons.c: 47: LCD_Write_Char(' ');
  6255  0127  3020               	movlw	32
  6256  0128  3189  2195  3180   	fcall	_LCD_Write_Char
  6257                           
  6258                           ;buttons.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6259  012B  3072               	movlw	114
  6260  012C  0020               	movlb	0	; select bank0
  6261  012D  00B2               	movwf	??_tempSetpoint+1
  6262  012E  30A1               	movlw	161
  6263  012F  00B1               	movwf	??_tempSetpoint
  6264  0130                     u3287:	
  6265  0130  0BB1               	decfsz	??_tempSetpoint,f
  6266  0131  2930               	goto	u3287
  6267  0132  0BB2               	decfsz	??_tempSetpoint+1,f
  6268  0133  2930               	goto	u3287
  6269  0134  3200               	nop2
  6270                           
  6271                           ;buttons.c: 49: readButtons();
  6272  0135  318D  256E  3180   	fcall	_readButtons
  6273  0138                     l2812:	
  6274  0138  3005               	movlw	5
  6275  0139  0020               	movlb	0	; select bank0
  6276  013A  026D               	subwf	_upCount,w
  6277  013B  1803               	skipnc
  6278  013C  28ED               	goto	l2786
  6279                           
  6280                           ;buttons.c: 50: }
  6281                           ;buttons.c: 52: counter = 0;
  6282  013D  01B4               	clrf	tempSetpoint@counter
  6283                           
  6284                           ;buttons.c: 54: if(oldSetpoint!=setpoint)
  6285  013E  086C               	movf	_oldSetpoint,w
  6286  013F  066F               	xorwf	_setpoint,w
  6287  0140  1903               	skipnz
  6288  0141  0008               	return
  6289                           
  6290                           ;buttons.c: 55: {
  6291                           ;buttons.c: 56: _delay((unsigned long)((2000)*(1000000/4000.0)));
  6292  0142  3003               	movlw	3
  6293  0143  00B3               	movwf	??_tempSetpoint+2
  6294  0144  308A               	movlw	138
  6295  0145  00B2               	movwf	??_tempSetpoint+1
  6296  0146  3056               	movlw	86
  6297  0147  00B1               	movwf	??_tempSetpoint
  6298  0148                     u3297:	
  6299  0148  0BB1               	decfsz	??_tempSetpoint,f
  6300  0149  2948               	goto	u3297
  6301  014A  0BB2               	decfsz	??_tempSetpoint+1,f
  6302  014B  2948               	goto	u3297
  6303  014C  0BB3               	decfsz	??_tempSetpoint+2,f
  6304  014D  2948               	goto	u3297
  6305  014E  3200               	nop2
  6306                           
  6307                           ;buttons.c: 57: LCD_Clear();
  6308  014F  3197  27E4         	fcall	_LCD_Clear
  6309  0151  0008               	return
  6310  0152                     __end_of_tempSetpoint:	
  6311                           
  6312                           	psect	text2
  6313  0D6E                     __ptext2:	
  6314 ;; *************** function _readButtons *****************
  6315 ;; Defined at:
  6316 ;;		line 62 in file "buttons.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;Total ram usage:        3 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    3
  6337 ;; This function calls:
  6338 ;;		_LCD_Clear
  6339 ;;		_LCD_Set_Cursor
  6340 ;;		_LCD_Write_Char
  6341 ;;		_LCD_Write_Int
  6342 ;;		_LCD_Write_String
  6343 ;; This function is called by:
  6344 ;;		_tempSetpoint
  6345 ;;		_main
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _readButtons
  6351  0D6E                     _readButtons:	
  6352                           
  6353                           ;buttons.c: 64: while(RA3 == 0 && RA4 == 0)
  6354                           
  6355                           ;incstack = 0
  6356                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6357  0D6E  2DCD               	goto	l2592
  6358  0D6F                     l2558:	
  6359                           
  6360                           ;buttons.c: 65: {
  6361                           ;buttons.c: 66: downCount = 0;
  6362  0D6F  0020               	movlb	0	; select bank0
  6363  0D70  01EB               	clrf	_downCount
  6364                           
  6365                           ;buttons.c: 67: upCount = 0;
  6366  0D71  01ED               	clrf	_upCount
  6367                           
  6368                           ;buttons.c: 68: toggleCount+=1;
  6369  0D72  3001               	movlw	1
  6370  0D73  00AE               	movwf	??_readButtons
  6371  0D74  082E               	movf	??_readButtons,w
  6372  0D75  0021               	movlb	1	; select bank1
  6373  0D76  07E0               	addwf	_toggleCount^(0+128),f
  6374                           
  6375                           ;buttons.c: 69: if(toggleCount >=6)
  6376  0D77  3006               	movlw	6
  6377  0D78  0260               	subwf	_toggleCount^(0+128),w
  6378  0D79  1C03               	skipc
  6379  0D7A  2DCD               	goto	l2592
  6380                           
  6381                           ;buttons.c: 70: {
  6382                           ;buttons.c: 71: x+=1;
  6383  0D7B  3001               	movlw	1
  6384  0D7C  0020               	movlb	0	; select bank0
  6385  0D7D  00AE               	movwf	??_readButtons
  6386  0D7E  082E               	movf	??_readButtons,w
  6387  0D7F  07EE               	addwf	_x,f
  6388                           
  6389                           ;buttons.c: 72: if(x>4)
  6390  0D80  3005               	movlw	5
  6391  0D81  026E               	subwf	_x,w
  6392  0D82  1803               	btfsc	3,0
  6393                           
  6394                           ;buttons.c: 73: {
  6395                           ;buttons.c: 74: x=0;
  6396  0D83  01EE               	clrf	_x
  6397                           
  6398                           ;buttons.c: 75: }
  6399                           ;buttons.c: 76: setpoint = presets[x];
  6400  0D84  086E               	movf	_x,w
  6401  0D85  3EE1               	addlw	(low (_presets| 0))& (0+255)
  6402  0D86  0086               	movwf	6
  6403  0D87  0187               	clrf	7
  6404  0D88  0801               	movf	1,w
  6405  0D89  00AE               	movwf	??_readButtons
  6406  0D8A  082E               	movf	??_readButtons,w
  6407  0D8B  00EF               	movwf	_setpoint
  6408                           
  6409                           ;buttons.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6410  0D8C  01F3               	clrf	LCD_Set_Cursor@y
  6411  0D8D  3000               	movlw	0
  6412  0D8E  318A  22D8  318D   	fcall	_LCD_Set_Cursor
  6413  0D91  301B               	movlw	low (STR_1| (0+32768))
  6414  0D92  00F5               	movwf	LCD_Write_String@a
  6415  0D93  3090               	movlw	high (STR_1| (0+32768))
  6416  0D94  00F6               	movwf	LCD_Write_String@a+1
  6417  0D95  3188  20D6  318D   	fcall	_LCD_Write_String
  6418                           
  6419                           ;buttons.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6420  0D98  01F3               	clrf	LCD_Set_Cursor@y
  6421  0D99  3001               	movlw	1
  6422  0D9A  318A  22D8  318D   	fcall	_LCD_Set_Cursor
  6423  0D9D  0020               	movlb	0	; select bank0
  6424  0D9E  086F               	movf	_setpoint,w
  6425  0D9F  00AE               	movwf	??_readButtons
  6426  0DA0  01AF               	clrf	??_readButtons+1
  6427  0DA1  082E               	movf	??_readButtons,w
  6428  0DA2  00F9               	movwf	LCD_Write_Int@value
  6429  0DA3  082F               	movf	??_readButtons+1,w
  6430  0DA4  00FA               	movwf	LCD_Write_Int@value+1
  6431  0DA5  3003               	movlw	3
  6432  0DA6  00B0               	movwf	??_readButtons+2
  6433  0DA7  0830               	movf	??_readButtons+2,w
  6434  0DA8  00FB               	movwf	LCD_Write_Int@fieldLength
  6435  0DA9  01FC               	clrf	LCD_Write_Int@numPlaces
  6436  0DAA  01FD               	clrf	LCD_Write_Int@sign
  6437  0DAB  3181  2152  318D   	fcall	_LCD_Write_Int
  6438                           
  6439                           ;buttons.c: 79: LCD_Write_Char(0);
  6440  0DAE  3000               	movlw	0
  6441  0DAF  3189  2195  318D   	fcall	_LCD_Write_Char
  6442                           
  6443                           ;buttons.c: 80: LCD_Write_Char('C');
  6444  0DB2  3043               	movlw	67
  6445  0DB3  3189  2195  318D   	fcall	_LCD_Write_Char
  6446                           
  6447                           ;buttons.c: 81: LCD_Write_Char(' ');
  6448  0DB6  3020               	movlw	32
  6449  0DB7  3189  2195  318D   	fcall	_LCD_Write_Char
  6450                           
  6451                           ;buttons.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  6452  0DBA  3002               	movlw	2
  6453  0DBB  0020               	movlb	0	; select bank0
  6454  0DBC  00B0               	movwf	??_readButtons+2
  6455  0DBD  30E7               	movlw	231
  6456  0DBE  00AF               	movwf	??_readButtons+1
  6457  0DBF  3000               	movlw	0
  6458  0DC0  00AE               	movwf	??_readButtons
  6459  0DC1                     u3307:	
  6460  0DC1  0BAE               	decfsz	??_readButtons,f
  6461  0DC2  2DC1               	goto	u3307
  6462  0DC3  0BAF               	decfsz	??_readButtons+1,f
  6463  0DC4  2DC1               	goto	u3307
  6464  0DC5  0BB0               	decfsz	??_readButtons+2,f
  6465  0DC6  2DC1               	goto	u3307
  6466  0DC7  0000               	nop
  6467                           
  6468                           ;buttons.c: 83: toggleCount = 0;
  6469  0DC8  0021               	movlb	1	; select bank1
  6470  0DC9  01E0               	clrf	_toggleCount^(0+128)
  6471                           
  6472                           ;buttons.c: 84: LCD_Clear();
  6473  0DCA  3197  27E4  318D   	fcall	_LCD_Clear
  6474  0DCD                     l2592:	
  6475  0DCD  0020               	movlb	0	; select bank0
  6476  0DCE  198C               	btfsc	12,3	;volatile
  6477  0DCF  2DD2               	goto	l340
  6478  0DD0  1E0C               	btfss	12,4	;volatile
  6479  0DD1  2D6F               	goto	l2558
  6480  0DD2                     l340:	
  6481                           
  6482                           ;buttons.c: 85: }
  6483                           ;buttons.c: 86: }
  6484                           ;buttons.c: 88: if(RA3 == 0)
  6485  0DD2  198C               	btfsc	12,3	;volatile
  6486  0DD3  2DE1               	goto	l2602
  6487                           
  6488                           ;buttons.c: 89: {
  6489                           ;buttons.c: 90: downCount +=1;
  6490  0DD4  3001               	movlw	1
  6491  0DD5  00AE               	movwf	??_readButtons
  6492  0DD6  082E               	movf	??_readButtons,w
  6493  0DD7  07EB               	addwf	_downCount,f
  6494                           
  6495                           ;buttons.c: 91: if(downCount>5)
  6496  0DD8  3006               	movlw	6
  6497  0DD9  026B               	subwf	_downCount,w
  6498  0DDA  1C03               	skipc
  6499  0DDB  2DE2               	goto	l2604
  6500                           
  6501                           ;buttons.c: 92: {
  6502                           ;buttons.c: 93: downCount = 5;
  6503  0DDC  3005               	movlw	5
  6504  0DDD  00AE               	movwf	??_readButtons
  6505  0DDE  082E               	movf	??_readButtons,w
  6506  0DDF  00EB               	movwf	_downCount
  6507                           
  6508                           ;buttons.c: 94: }
  6509                           ;buttons.c: 95: }
  6510  0DE0  2DE2               	goto	l2604
  6511  0DE1                     l2602:	
  6512                           
  6513                           ;buttons.c: 96: else
  6514                           ;buttons.c: 97: {
  6515                           ;buttons.c: 98: downCount = 0;
  6516  0DE1  01EB               	clrf	_downCount
  6517  0DE2                     l2604:	
  6518                           
  6519                           ;buttons.c: 99: }
  6520                           ;buttons.c: 101: if(RA4 == 0)
  6521  0DE2  1A0C               	btfsc	12,4	;volatile
  6522  0DE3  2DF1               	goto	l2612
  6523                           
  6524                           ;buttons.c: 102: {
  6525                           ;buttons.c: 103: upCount +=1;
  6526  0DE4  3001               	movlw	1
  6527  0DE5  00AE               	movwf	??_readButtons
  6528  0DE6  082E               	movf	??_readButtons,w
  6529  0DE7  07ED               	addwf	_upCount,f
  6530                           
  6531                           ;buttons.c: 104: if(upCount>5)
  6532  0DE8  3006               	movlw	6
  6533  0DE9  026D               	subwf	_upCount,w
  6534  0DEA  1C03               	skipc
  6535  0DEB  0008               	return
  6536                           
  6537                           ;buttons.c: 105: {
  6538                           ;buttons.c: 106: upCount = 5;
  6539  0DEC  3005               	movlw	5
  6540  0DED  00AE               	movwf	??_readButtons
  6541  0DEE  082E               	movf	??_readButtons,w
  6542  0DEF  00ED               	movwf	_upCount
  6543                           
  6544                           ;buttons.c: 107: }
  6545                           ;buttons.c: 108: }
  6546  0DF0  0008               	return
  6547  0DF1                     l2612:	
  6548                           
  6549                           ;buttons.c: 109: else
  6550                           ;buttons.c: 110: {
  6551                           ;buttons.c: 111: upCount = 0;
  6552  0DF1  01ED               	clrf	_upCount
  6553  0DF2  0008               	return
  6554  0DF3                     __end_of_readButtons:	
  6555                           
  6556                           	psect	text3
  6557  08D6                     __ptext3:	
  6558 ;; *************** function _LCD_Write_String *****************
  6559 ;; Defined at:
  6560 ;;		line 239 in file "lcd.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  a               2    5[COMMON] PTR const unsigned char 
  6563 ;;		 -> STR_4(6), STR_3(10), STR_2(10), STR_1(10), 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  i               2    8[COMMON] int 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;Total ram usage:        5 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    2
  6582 ;; This function calls:
  6583 ;;		_LCD_Write_Char
  6584 ;; This function is called by:
  6585 ;;		_tempSetpoint
  6586 ;;		_readButtons
  6587 ;;		_main
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function _LCD_Write_String
  6593  08D6                     _LCD_Write_String:	
  6594                           
  6595                           ;lcd.c: 241: int i;
  6596                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6600  08D6  01F8               	clrf	LCD_Write_String@i
  6601  08D7  01F9               	clrf	LCD_Write_String@i+1
  6602  08D8                     l2206:	
  6603  08D8  0875               	movf	LCD_Write_String@a,w
  6604  08D9  0778               	addwf	LCD_Write_String@i,w
  6605  08DA  0084               	movwf	4
  6606  08DB  0876               	movf	LCD_Write_String@a+1,w
  6607  08DC  3D79               	addwfc	LCD_Write_String@i+1,w
  6608  08DD  0085               	movwf	5
  6609  08DE  0012               	moviw fsr0++
  6610  08DF  1903               	btfsc	3,2
  6611  08E0  0008               	return
  6612                           
  6613                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  6614  08E1  0875               	movf	LCD_Write_String@a,w
  6615  08E2  0778               	addwf	LCD_Write_String@i,w
  6616  08E3  0084               	movwf	4
  6617  08E4  0876               	movf	LCD_Write_String@a+1,w
  6618  08E5  3D79               	addwfc	LCD_Write_String@i+1,w
  6619  08E6  0085               	movwf	5
  6620  08E7  0800               	movf	0,w	;code access
  6621  08E8  3189  2195  3188   	fcall	_LCD_Write_Char
  6622  08EB  3001               	movlw	1
  6623  08EC  07F8               	addwf	LCD_Write_String@i,f
  6624  08ED  3000               	movlw	0
  6625  08EE  3DF9               	addwfc	LCD_Write_String@i+1,f
  6626  08EF  28D8               	goto	l2206
  6627  08F0                     __end_of_LCD_Write_String:	
  6628                           
  6629                           	psect	text4
  6630  0152                     __ptext4:	
  6631 ;; *************** function _LCD_Write_Int *****************
  6632 ;; Defined at:
  6633 ;;		line 246 in file "lcd.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  value           2    9[COMMON] int 
  6636 ;;  fieldLength     1   11[COMMON] char 
  6637 ;;  numPlaces       1   12[COMMON] char 
  6638 ;;  sign            1   13[COMMON] char 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  str             5    5[BANK0 ] unsigned char [5]
  6641 ;;  i               2   12[BANK0 ] int 
  6642 ;;  j               2   10[BANK0 ] int 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6652 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;Total ram usage:       19 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    2
  6659 ;; This function calls:
  6660 ;;		_LCD_Write_Char
  6661 ;;		___awdiv
  6662 ;;		___awmod
  6663 ;; This function is called by:
  6664 ;;		_tempSetpoint
  6665 ;;		_readButtons
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _LCD_Write_Int
  6672  0152                     _LCD_Write_Int:	
  6673                           
  6674                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6678  0152  30C4               	movlw	low LCD_Write_Int@F13694
  6679  0153  0086               	movwf	6
  6680  0154  3000               	movlw	high LCD_Write_Int@F13694
  6681  0155  0087               	movwf	7
  6682  0156  3025               	movlw	low LCD_Write_Int@str
  6683  0157  0084               	movwf	4
  6684  0158  3000               	movlw	high LCD_Write_Int@str
  6685  0159  0085               	movwf	5
  6686  015A  3005               	movlw	5
  6687  015B  0020               	movlb	0	; select bank0
  6688  015C  00A0               	movwf	??_LCD_Write_Int
  6689  015D                     u2050:	
  6690  015D  0016               	moviw fsr1++
  6691  015E  001A               	movwi fsr0++
  6692  015F  0BA0               	decfsz	??_LCD_Write_Int,f
  6693  0160  295D               	goto	u2050
  6694                           
  6695                           ;lcd.c: 249: int i=4,j=0;
  6696  0161  3004               	movlw	4
  6697  0162  00AC               	movwf	LCD_Write_Int@i
  6698  0163  3000               	movlw	0
  6699  0164  00AD               	movwf	LCD_Write_Int@i+1
  6700  0165  01AA               	clrf	LCD_Write_Int@j
  6701  0166  01AB               	clrf	LCD_Write_Int@j+1
  6702                           
  6703                           ;lcd.c: 251: if(value<0)
  6704  0167  1FFA               	btfss	LCD_Write_Int@value+1,7
  6705  0168  2973               	goto	l2220
  6706                           
  6707                           ;lcd.c: 252: {
  6708                           ;lcd.c: 253: LCD_Write_Char('-');
  6709  0169  302D               	movlw	45
  6710  016A  3189  2195  3181   	fcall	_LCD_Write_Char
  6711                           
  6712                           ;lcd.c: 254: value=value*-1;
  6713  016D  09F9               	comf	LCD_Write_Int@value,f
  6714  016E  09FA               	comf	LCD_Write_Int@value+1,f
  6715  016F  0AF9               	incf	LCD_Write_Int@value,f
  6716  0170  1903               	skipnz
  6717  0171  0AFA               	incf	LCD_Write_Int@value+1,f
  6718                           
  6719                           ;lcd.c: 255: }
  6720  0172  297A               	goto	l2230
  6721  0173                     l2220:	
  6722                           
  6723                           ;lcd.c: 257: else
  6724                           ;lcd.c: 258: {
  6725                           ;lcd.c: 259: if(sign == 1)
  6726  0173  037D               	decf	LCD_Write_Int@sign,w
  6727  0174  1D03               	btfss	3,2
  6728  0175  297A               	goto	l2230
  6729                           
  6730                           ;lcd.c: 260: {
  6731                           ;lcd.c: 261: LCD_Write_Char('+');
  6732  0176  302B               	movlw	43
  6733  0177  3189  2195  3181   	fcall	_LCD_Write_Char
  6734  017A                     l2230:	
  6735                           ;lcd.c: 262: }
  6736                           ;lcd.c: 263: }
  6737                           ;lcd.c: 265: while(value)
  6738                           
  6739  017A  0879               	movf	LCD_Write_Int@value,w
  6740  017B  047A               	iorwf	LCD_Write_Int@value+1,w
  6741  017C  1903               	btfsc	3,2
  6742  017D  29A7               	goto	l2232
  6743                           
  6744                           ;lcd.c: 266: {
  6745                           ;lcd.c: 267: str[i]=value%10;
  6746  017E  300A               	movlw	10
  6747  017F  00F0               	movwf	___awmod@divisor
  6748  0180  3000               	movlw	0
  6749  0181  00F1               	movwf	___awmod@divisor+1
  6750  0182  087A               	movf	LCD_Write_Int@value+1,w
  6751  0183  00F3               	movwf	___awmod@dividend+1
  6752  0184  0879               	movf	LCD_Write_Int@value,w
  6753  0185  00F2               	movwf	___awmod@dividend
  6754  0186  318B  2317  3181   	fcall	___awmod
  6755  0189  0870               	movf	?___awmod,w
  6756  018A  0020               	movlb	0	; select bank0
  6757  018B  00A0               	movwf	??_LCD_Write_Int
  6758  018C  082C               	movf	LCD_Write_Int@i,w
  6759  018D  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6760  018E  0086               	movwf	6
  6761  018F  0187               	clrf	7
  6762  0190  0820               	movf	??_LCD_Write_Int,w
  6763  0191  0081               	movwf	1
  6764                           
  6765                           ;lcd.c: 268: value=value/10;
  6766  0192  300A               	movlw	10
  6767  0193  00F0               	movwf	___awdiv@divisor
  6768  0194  3000               	movlw	0
  6769  0195  00F1               	movwf	___awdiv@divisor+1
  6770  0196  087A               	movf	LCD_Write_Int@value+1,w
  6771  0197  00F3               	movwf	___awdiv@dividend+1
  6772  0198  0879               	movf	LCD_Write_Int@value,w
  6773  0199  00F2               	movwf	___awdiv@dividend
  6774  019A  318B  235C  3181   	fcall	___awdiv
  6775  019D  0871               	movf	?___awdiv+1,w
  6776  019E  00FA               	movwf	LCD_Write_Int@value+1
  6777  019F  0870               	movf	?___awdiv,w
  6778  01A0  00F9               	movwf	LCD_Write_Int@value
  6779                           
  6780                           ;lcd.c: 269: i--;
  6781  01A1  30FF               	movlw	255
  6782  01A2  0020               	movlb	0	; select bank0
  6783  01A3  07AC               	addwf	LCD_Write_Int@i,f
  6784  01A4  30FF               	movlw	255
  6785  01A5  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6786  01A6  297A               	goto	l2230
  6787  01A7                     l2232:	
  6788                           
  6789                           ;lcd.c: 270: }
  6790                           ;lcd.c: 271: if(fieldLength==-1)
  6791  01A7  0A7B               	incf	LCD_Write_Int@fieldLength,w
  6792  01A8  1903               	btfsc	3,2
  6793  01A9  29B0               	goto	l2238
  6794  01AA  29B9               	goto	l2240
  6795  01AB                     l2236:	
  6796                           ;lcd.c: 272: {
  6797                           ;lcd.c: 273: while(str[j]==0)
  6798                           
  6799                           
  6800                           ;lcd.c: 274: {
  6801                           ;lcd.c: 275: j++;
  6802  01AB  3001               	movlw	1
  6803  01AC  0020               	movlb	0	; select bank0
  6804  01AD  07AA               	addwf	LCD_Write_Int@j,f
  6805  01AE  3000               	movlw	0
  6806  01AF  3DAB               	addwfc	LCD_Write_Int@j+1,f
  6807  01B0                     l2238:	
  6808  01B0  0020               	movlb	0	; select bank0
  6809  01B1  082A               	movf	LCD_Write_Int@j,w
  6810  01B2  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6811  01B3  0086               	movwf	6
  6812  01B4  0187               	clrf	7
  6813  01B5  0801               	movf	1,w
  6814  01B6  1D03               	btfss	3,2
  6815  01B7  29CA               	goto	l2242
  6816  01B8  29AB               	goto	l2236
  6817  01B9                     l2240:	
  6818                           ;lcd.c: 276: }
  6819                           ;lcd.c: 277: }
  6820                           
  6821                           
  6822                           ;lcd.c: 278: else
  6823                           ;lcd.c: 279: {
  6824                           ;lcd.c: 280: j=5-fieldLength;
  6825  01B9  087B               	movf	LCD_Write_Int@fieldLength,w
  6826  01BA  0020               	movlb	0	; select bank0
  6827  01BB  00A0               	movwf	??_LCD_Write_Int
  6828  01BC  01A1               	clrf	??_LCD_Write_Int+1
  6829  01BD  1BA0               	btfsc	??_LCD_Write_Int,7
  6830  01BE  03A1               	decf	??_LCD_Write_Int+1,f
  6831  01BF  09A0               	comf	??_LCD_Write_Int,f
  6832  01C0  09A1               	comf	??_LCD_Write_Int+1,f
  6833  01C1  0AA0               	incf	??_LCD_Write_Int,f
  6834  01C2  1903               	skipnz
  6835  01C3  0AA1               	incf	??_LCD_Write_Int+1,f
  6836  01C4  0820               	movf	??_LCD_Write_Int,w
  6837  01C5  3E05               	addlw	5
  6838  01C6  00AA               	movwf	LCD_Write_Int@j
  6839  01C7  3000               	movlw	0
  6840  01C8  3D21               	addwfc	??_LCD_Write_Int+1,w
  6841  01C9  00AB               	movwf	LCD_Write_Int@j+1
  6842  01CA                     l2242:	
  6843                           
  6844                           ;lcd.c: 281: }
  6845                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  6846  01CA  082B               	movf	LCD_Write_Int@j+1,w
  6847  01CB  00AD               	movwf	LCD_Write_Int@i+1
  6848  01CC  082A               	movf	LCD_Write_Int@j,w
  6849  01CD  00AC               	movwf	LCD_Write_Int@i
  6850  01CE                     l2248:	
  6851  01CE  087C               	movf	LCD_Write_Int@numPlaces,w
  6852  01CF  00A0               	movwf	??_LCD_Write_Int
  6853  01D0  01A1               	clrf	??_LCD_Write_Int+1
  6854  01D1  1BA0               	btfsc	??_LCD_Write_Int,7
  6855  01D2  03A1               	decf	??_LCD_Write_Int+1,f
  6856  01D3  09A0               	comf	??_LCD_Write_Int,f
  6857  01D4  09A1               	comf	??_LCD_Write_Int+1,f
  6858  01D5  0AA0               	incf	??_LCD_Write_Int,f
  6859  01D6  1903               	skipnz
  6860  01D7  0AA1               	incf	??_LCD_Write_Int+1,f
  6861  01D8  0820               	movf	??_LCD_Write_Int,w
  6862  01D9  3E05               	addlw	5
  6863  01DA  00A2               	movwf	??_LCD_Write_Int+2
  6864  01DB  3000               	movlw	0
  6865  01DC  3D21               	addwfc	??_LCD_Write_Int+1,w
  6866  01DD  00A3               	movwf	??_LCD_Write_Int+3
  6867  01DE  082D               	movf	LCD_Write_Int@i+1,w
  6868  01DF  3A80               	xorlw	128
  6869  01E0  00A4               	movwf	??_LCD_Write_Int+4
  6870  01E1  0823               	movf	??_LCD_Write_Int+3,w
  6871  01E2  3A80               	xorlw	128
  6872  01E3  0224               	subwf	??_LCD_Write_Int+4,w
  6873  01E4  1D03               	skipz
  6874  01E5  29E8               	goto	u2115
  6875  01E6  0822               	movf	??_LCD_Write_Int+2,w
  6876  01E7  022C               	subwf	LCD_Write_Int@i,w
  6877  01E8                     u2115:	
  6878  01E8  1803               	btfsc	3,0
  6879  01E9  29FA               	goto	l2250
  6880                           
  6881                           ;lcd.c: 284: {
  6882                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  6883  01EA  0020               	movlb	0	; select bank0
  6884  01EB  082C               	movf	LCD_Write_Int@i,w
  6885  01EC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  6886  01ED  0086               	movwf	6
  6887  01EE  0187               	clrf	7
  6888  01EF  0801               	movf	1,w
  6889  01F0  3E30               	addlw	48
  6890  01F1  3189  2195  3181   	fcall	_LCD_Write_Char
  6891  01F4  3001               	movlw	1
  6892  01F5  0020               	movlb	0	; select bank0
  6893  01F6  07AC               	addwf	LCD_Write_Int@i,f
  6894  01F7  3000               	movlw	0
  6895  01F8  3DAD               	addwfc	LCD_Write_Int@i+1,f
  6896  01F9  29CE               	goto	l2248
  6897  01FA                     l2250:	
  6898                           
  6899                           ;lcd.c: 286: }
  6900                           ;lcd.c: 288: if(numPlaces == 1)
  6901  01FA  037C               	decf	LCD_Write_Int@numPlaces,w
  6902  01FB  1D03               	btfss	3,2
  6903  01FC  2A07               	goto	l2254
  6904                           
  6905                           ;lcd.c: 289: {
  6906                           ;lcd.c: 290: LCD_Write_Char(46);
  6907  01FD  302E               	movlw	46
  6908  01FE  3189  2195  3181   	fcall	_LCD_Write_Char
  6909                           
  6910                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  6911  0201  0020               	movlb	0	; select bank0
  6912  0202  0829               	movf	LCD_Write_Int@str+4,w
  6913  0203  3E30               	addlw	48
  6914  0204  3189  2195  3181   	fcall	_LCD_Write_Char
  6915  0207                     l2254:	
  6916                           
  6917                           ;lcd.c: 292: }
  6918                           ;lcd.c: 294: if(numPlaces == 2)
  6919  0207  3002               	movlw	2
  6920  0208  067C               	xorwf	LCD_Write_Int@numPlaces,w
  6921  0209  1D03               	btfss	3,2
  6922  020A  0008               	return
  6923                           
  6924                           ;lcd.c: 295: {
  6925                           ;lcd.c: 296: LCD_Write_Char(46);
  6926  020B  302E               	movlw	46
  6927  020C  3189  2195  3181   	fcall	_LCD_Write_Char
  6928                           
  6929                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  6930  020F  0020               	movlb	0	; select bank0
  6931  0210  0828               	movf	LCD_Write_Int@str+3,w
  6932  0211  3E30               	addlw	48
  6933  0212  3189  2195  3181   	fcall	_LCD_Write_Char
  6934                           
  6935                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  6936  0215  0020               	movlb	0	; select bank0
  6937  0216  0829               	movf	LCD_Write_Int@str+4,w
  6938  0217  3E30               	addlw	48
  6939  0218  3189  2195         	fcall	_LCD_Write_Char
  6940  021A  0008               	return
  6941  021B                     __end_of_LCD_Write_Int:	
  6942                           
  6943                           	psect	text5
  6944  0B17                     __ptext5:	
  6945 ;; *************** function ___awmod *****************
  6946 ;; Defined at:
  6947 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  divisor         2    0[COMMON] int 
  6950 ;;  dividend        2    2[COMMON] int 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  sign            1    6[COMMON] unsigned char 
  6953 ;;  counter         1    5[COMMON] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  2    0[COMMON] int 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;Total ram usage:        7 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_LCD_Write_Int
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           
  6977                           ;psect for function ___awmod
  6978  0B17                     ___awmod:	
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6982  0B17  01F6               	clrf	___awmod@sign
  6983  0B18  1FF3               	btfss	___awmod@dividend+1,7
  6984  0B19  2B21               	goto	l2148
  6985  0B1A  09F2               	comf	___awmod@dividend,f
  6986  0B1B  09F3               	comf	___awmod@dividend+1,f
  6987  0B1C  0AF2               	incf	___awmod@dividend,f
  6988  0B1D  1903               	skipnz
  6989  0B1E  0AF3               	incf	___awmod@dividend+1,f
  6990  0B1F  01F6               	clrf	___awmod@sign
  6991  0B20  0AF6               	incf	___awmod@sign,f
  6992  0B21                     l2148:	
  6993  0B21  1FF1               	btfss	___awmod@divisor+1,7
  6994  0B22  2B28               	goto	l2152
  6995  0B23  09F0               	comf	___awmod@divisor,f
  6996  0B24  09F1               	comf	___awmod@divisor+1,f
  6997  0B25  0AF0               	incf	___awmod@divisor,f
  6998  0B26  1903               	skipnz
  6999  0B27  0AF1               	incf	___awmod@divisor+1,f
  7000  0B28                     l2152:	
  7001  0B28  0870               	movf	___awmod@divisor,w
  7002  0B29  0471               	iorwf	___awmod@divisor+1,w
  7003  0B2A  1903               	btfsc	3,2
  7004  0B2B  2B4F               	goto	l2170
  7005  0B2C  01F5               	clrf	___awmod@counter
  7006  0B2D  0AF5               	incf	___awmod@counter,f
  7007  0B2E                     l2160:	
  7008  0B2E  1BF1               	btfsc	___awmod@divisor+1,7
  7009  0B2F  2B3A               	goto	l2162
  7010  0B30  3001               	movlw	1
  7011  0B31                     u1945:	
  7012  0B31  35F0               	lslf	___awmod@divisor,f
  7013  0B32  0DF1               	rlf	___awmod@divisor+1,f
  7014  0B33  0B89               	decfsz	9,f
  7015  0B34  2B31               	goto	u1945
  7016  0B35  3001               	movlw	1
  7017  0B36  00F4               	movwf	??___awmod
  7018  0B37  0874               	movf	??___awmod,w
  7019  0B38  07F5               	addwf	___awmod@counter,f
  7020  0B39  2B2E               	goto	l2160
  7021  0B3A                     l2162:	
  7022  0B3A  0871               	movf	___awmod@divisor+1,w
  7023  0B3B  0273               	subwf	___awmod@dividend+1,w
  7024  0B3C  1D03               	skipz
  7025  0B3D  2B40               	goto	u1965
  7026  0B3E  0870               	movf	___awmod@divisor,w
  7027  0B3F  0272               	subwf	___awmod@dividend,w
  7028  0B40                     u1965:	
  7029  0B40  1C03               	skipc
  7030  0B41  2B46               	goto	l2166
  7031  0B42  0870               	movf	___awmod@divisor,w
  7032  0B43  02F2               	subwf	___awmod@dividend,f
  7033  0B44  0871               	movf	___awmod@divisor+1,w
  7034  0B45  3BF3               	subwfb	___awmod@dividend+1,f
  7035  0B46                     l2166:	
  7036  0B46  3001               	movlw	1
  7037  0B47                     u1975:	
  7038  0B47  36F1               	lsrf	___awmod@divisor+1,f
  7039  0B48  0CF0               	rrf	___awmod@divisor,f
  7040  0B49  0B89               	decfsz	9,f
  7041  0B4A  2B47               	goto	u1975
  7042  0B4B  3001               	movlw	1
  7043  0B4C  02F5               	subwf	___awmod@counter,f
  7044  0B4D  1D03               	btfss	3,2
  7045  0B4E  2B3A               	goto	l2162
  7046  0B4F                     l2170:	
  7047  0B4F  0876               	movf	___awmod@sign,w
  7048  0B50  1903               	btfsc	3,2
  7049  0B51  2B57               	goto	l2174
  7050  0B52  09F2               	comf	___awmod@dividend,f
  7051  0B53  09F3               	comf	___awmod@dividend+1,f
  7052  0B54  0AF2               	incf	___awmod@dividend,f
  7053  0B55  1903               	skipnz
  7054  0B56  0AF3               	incf	___awmod@dividend+1,f
  7055  0B57                     l2174:	
  7056  0B57  0873               	movf	___awmod@dividend+1,w
  7057  0B58  00F1               	movwf	?___awmod+1
  7058  0B59  0872               	movf	___awmod@dividend,w
  7059  0B5A  00F0               	movwf	?___awmod
  7060  0B5B  0008               	return
  7061  0B5C                     __end_of___awmod:	
  7062                           
  7063                           	psect	text6
  7064  0B5C                     __ptext6:	
  7065 ;; *************** function ___awdiv *****************
  7066 ;; Defined at:
  7067 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  divisor         2    0[COMMON] int 
  7070 ;;  dividend        2    2[COMMON] int 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  quotient        2    7[COMMON] int 
  7073 ;;  sign            1    6[COMMON] unsigned char 
  7074 ;;  counter         1    5[COMMON] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2    0[COMMON] int 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;Total ram usage:        9 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_LCD_Write_Int
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function ___awdiv
  7099  0B5C                     ___awdiv:	
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7103  0B5C  01F6               	clrf	___awdiv@sign
  7104  0B5D  1FF1               	btfss	___awdiv@divisor+1,7
  7105  0B5E  2B66               	goto	l2104
  7106  0B5F  09F0               	comf	___awdiv@divisor,f
  7107  0B60  09F1               	comf	___awdiv@divisor+1,f
  7108  0B61  0AF0               	incf	___awdiv@divisor,f
  7109  0B62  1903               	skipnz
  7110  0B63  0AF1               	incf	___awdiv@divisor+1,f
  7111  0B64  01F6               	clrf	___awdiv@sign
  7112  0B65  0AF6               	incf	___awdiv@sign,f
  7113  0B66                     l2104:	
  7114  0B66  1FF3               	btfss	___awdiv@dividend+1,7
  7115  0B67  2B71               	goto	l2110
  7116  0B68  09F2               	comf	___awdiv@dividend,f
  7117  0B69  09F3               	comf	___awdiv@dividend+1,f
  7118  0B6A  0AF2               	incf	___awdiv@dividend,f
  7119  0B6B  1903               	skipnz
  7120  0B6C  0AF3               	incf	___awdiv@dividend+1,f
  7121  0B6D  3001               	movlw	1
  7122  0B6E  00F4               	movwf	??___awdiv
  7123  0B6F  0874               	movf	??___awdiv,w
  7124  0B70  06F6               	xorwf	___awdiv@sign,f
  7125  0B71                     l2110:	
  7126  0B71  01F7               	clrf	___awdiv@quotient
  7127  0B72  01F8               	clrf	___awdiv@quotient+1
  7128  0B73  0870               	movf	___awdiv@divisor,w
  7129  0B74  0471               	iorwf	___awdiv@divisor+1,w
  7130  0B75  1903               	btfsc	3,2
  7131  0B76  2BA0               	goto	l2132
  7132  0B77  01F5               	clrf	___awdiv@counter
  7133  0B78  0AF5               	incf	___awdiv@counter,f
  7134  0B79                     l2120:	
  7135  0B79  1BF1               	btfsc	___awdiv@divisor+1,7
  7136  0B7A  2B85               	goto	l2122
  7137  0B7B  3001               	movlw	1
  7138  0B7C                     u1845:	
  7139  0B7C  35F0               	lslf	___awdiv@divisor,f
  7140  0B7D  0DF1               	rlf	___awdiv@divisor+1,f
  7141  0B7E  0B89               	decfsz	9,f
  7142  0B7F  2B7C               	goto	u1845
  7143  0B80  3001               	movlw	1
  7144  0B81  00F4               	movwf	??___awdiv
  7145  0B82  0874               	movf	??___awdiv,w
  7146  0B83  07F5               	addwf	___awdiv@counter,f
  7147  0B84  2B79               	goto	l2120
  7148  0B85                     l2122:	
  7149  0B85  3001               	movlw	1
  7150  0B86                     u1865:	
  7151  0B86  35F7               	lslf	___awdiv@quotient,f
  7152  0B87  0DF8               	rlf	___awdiv@quotient+1,f
  7153  0B88  0B89               	decfsz	9,f
  7154  0B89  2B86               	goto	u1865
  7155  0B8A  0871               	movf	___awdiv@divisor+1,w
  7156  0B8B  0273               	subwf	___awdiv@dividend+1,w
  7157  0B8C  1D03               	skipz
  7158  0B8D  2B90               	goto	u1875
  7159  0B8E  0870               	movf	___awdiv@divisor,w
  7160  0B8F  0272               	subwf	___awdiv@dividend,w
  7161  0B90                     u1875:	
  7162  0B90  1C03               	skipc
  7163  0B91  2B97               	goto	l2128
  7164  0B92  0870               	movf	___awdiv@divisor,w
  7165  0B93  02F2               	subwf	___awdiv@dividend,f
  7166  0B94  0871               	movf	___awdiv@divisor+1,w
  7167  0B95  3BF3               	subwfb	___awdiv@dividend+1,f
  7168  0B96  1477               	bsf	___awdiv@quotient,0
  7169  0B97                     l2128:	
  7170  0B97  3001               	movlw	1
  7171  0B98                     u1885:	
  7172  0B98  36F1               	lsrf	___awdiv@divisor+1,f
  7173  0B99  0CF0               	rrf	___awdiv@divisor,f
  7174  0B9A  0B89               	decfsz	9,f
  7175  0B9B  2B98               	goto	u1885
  7176  0B9C  3001               	movlw	1
  7177  0B9D  02F5               	subwf	___awdiv@counter,f
  7178  0B9E  1D03               	btfss	3,2
  7179  0B9F  2B85               	goto	l2122
  7180  0BA0                     l2132:	
  7181  0BA0  0876               	movf	___awdiv@sign,w
  7182  0BA1  1903               	btfsc	3,2
  7183  0BA2  2BA8               	goto	l2136
  7184  0BA3  09F7               	comf	___awdiv@quotient,f
  7185  0BA4  09F8               	comf	___awdiv@quotient+1,f
  7186  0BA5  0AF7               	incf	___awdiv@quotient,f
  7187  0BA6  1903               	skipnz
  7188  0BA7  0AF8               	incf	___awdiv@quotient+1,f
  7189  0BA8                     l2136:	
  7190  0BA8  0878               	movf	___awdiv@quotient+1,w
  7191  0BA9  00F1               	movwf	?___awdiv+1
  7192  0BAA  0877               	movf	___awdiv@quotient,w
  7193  0BAB  00F0               	movwf	?___awdiv
  7194  0BAC  0008               	return
  7195  0BAD                     __end_of___awdiv:	
  7196                           
  7197                           	psect	text7
  7198  0AD8                     __ptext7:	
  7199 ;; *************** function _LCD_Set_Cursor *****************
  7200 ;; Defined at:
  7201 ;;		line 82 in file "lcd.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  x               1    wreg     unsigned char 
  7204 ;;  y               1    3[COMMON] unsigned char 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  x               1    6[COMMON] unsigned char 
  7207 ;;  temp            1    9[COMMON] unsigned char 
  7208 ;;  w               1    8[COMMON] unsigned char 
  7209 ;;  z               1    7[COMMON] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, pclath, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;Total ram usage:        7 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    2
  7226 ;; This function calls:
  7227 ;;		_LCD_Cmd
  7228 ;; This function is called by:
  7229 ;;		_tempSetpoint
  7230 ;;		_readButtons
  7231 ;;		_main
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           
  7236                           ;psect for function _LCD_Set_Cursor
  7237  0AD8                     _LCD_Set_Cursor:	
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7241                           ;LCD_Set_Cursor@x stored from wreg
  7242  0AD8  00F6               	movwf	LCD_Set_Cursor@x
  7243                           
  7244                           ;lcd.c: 86: char temp,z,w;
  7245                           ;lcd.c: 88: if(x == 0)
  7246  0AD9  0876               	movf	LCD_Set_Cursor@x,w
  7247  0ADA  1D03               	btfss	3,2
  7248  0ADB  2AF8               	goto	l2190
  7249                           
  7250                           ;lcd.c: 89: {
  7251                           ;lcd.c: 90: temp = 0x80 + y;
  7252  0ADC  0873               	movf	LCD_Set_Cursor@y,w
  7253  0ADD  3E80               	addlw	128
  7254  0ADE  00F4               	movwf	??_LCD_Set_Cursor
  7255  0ADF  0874               	movf	??_LCD_Set_Cursor,w
  7256  0AE0  00F9               	movwf	LCD_Set_Cursor@temp
  7257                           
  7258                           ;lcd.c: 91: z = temp>>4;
  7259  0AE1  0879               	movf	LCD_Set_Cursor@temp,w
  7260  0AE2  00F4               	movwf	??_LCD_Set_Cursor
  7261  0AE3  3004               	movlw	4
  7262  0AE4                     u2015:	
  7263  0AE4  36F4               	lsrf	??_LCD_Set_Cursor,f
  7264  0AE5  0B89               	decfsz	9,f
  7265  0AE6  2AE4               	goto	u2015
  7266  0AE7  0874               	movf	??_LCD_Set_Cursor,w
  7267  0AE8  00F5               	movwf	??_LCD_Set_Cursor+1
  7268  0AE9  0875               	movf	??_LCD_Set_Cursor+1,w
  7269  0AEA  00F7               	movwf	LCD_Set_Cursor@z
  7270                           
  7271                           ;lcd.c: 92: w = temp & 0x0F;
  7272  0AEB  0879               	movf	LCD_Set_Cursor@temp,w
  7273  0AEC  390F               	andlw	15
  7274  0AED  00F4               	movwf	??_LCD_Set_Cursor
  7275  0AEE  0874               	movf	??_LCD_Set_Cursor,w
  7276  0AEF  00F8               	movwf	LCD_Set_Cursor@w
  7277                           
  7278                           ;lcd.c: 93: LCD_Cmd(z);
  7279  0AF0  0877               	movf	LCD_Set_Cursor@z,w
  7280  0AF1  3188  2038  318A   	fcall	_LCD_Cmd
  7281                           
  7282                           ;lcd.c: 94: LCD_Cmd(w);
  7283  0AF4  0878               	movf	LCD_Set_Cursor@w,w
  7284  0AF5  3188  2038         	fcall	_LCD_Cmd
  7285                           
  7286                           ;lcd.c: 95: }
  7287  0AF7  0008               	return
  7288  0AF8                     l2190:	
  7289                           
  7290                           ;lcd.c: 97: else if(x == 1)
  7291  0AF8  0376               	decf	LCD_Set_Cursor@x,w
  7292  0AF9  1D03               	btfss	3,2
  7293  0AFA  0008               	return
  7294                           
  7295                           ;lcd.c: 98: {
  7296                           ;lcd.c: 99: temp = 0xC0 + y;
  7297  0AFB  0873               	movf	LCD_Set_Cursor@y,w
  7298  0AFC  3EC0               	addlw	192
  7299  0AFD  00F4               	movwf	??_LCD_Set_Cursor
  7300  0AFE  0874               	movf	??_LCD_Set_Cursor,w
  7301  0AFF  00F9               	movwf	LCD_Set_Cursor@temp
  7302                           
  7303                           ;lcd.c: 100: z = temp>>4;
  7304  0B00  0879               	movf	LCD_Set_Cursor@temp,w
  7305  0B01  00F4               	movwf	??_LCD_Set_Cursor
  7306  0B02  3004               	movlw	4
  7307  0B03                     u2035:	
  7308  0B03  36F4               	lsrf	??_LCD_Set_Cursor,f
  7309  0B04  0B89               	decfsz	9,f
  7310  0B05  2B03               	goto	u2035
  7311  0B06  0874               	movf	??_LCD_Set_Cursor,w
  7312  0B07  00F5               	movwf	??_LCD_Set_Cursor+1
  7313  0B08  0875               	movf	??_LCD_Set_Cursor+1,w
  7314  0B09  00F7               	movwf	LCD_Set_Cursor@z
  7315                           
  7316                           ;lcd.c: 101: w = temp & 0x0F;
  7317  0B0A  0879               	movf	LCD_Set_Cursor@temp,w
  7318  0B0B  390F               	andlw	15
  7319  0B0C  00F4               	movwf	??_LCD_Set_Cursor
  7320  0B0D  0874               	movf	??_LCD_Set_Cursor,w
  7321  0B0E  00F8               	movwf	LCD_Set_Cursor@w
  7322                           
  7323                           ;lcd.c: 102: LCD_Cmd(z);
  7324  0B0F  0877               	movf	LCD_Set_Cursor@z,w
  7325  0B10  3188  2038  318A   	fcall	_LCD_Cmd
  7326                           
  7327                           ;lcd.c: 103: LCD_Cmd(w);
  7328  0B13  0878               	movf	LCD_Set_Cursor@w,w
  7329  0B14  3188  2038         	fcall	_LCD_Cmd
  7330  0B16  0008               	return
  7331  0B17                     __end_of_LCD_Set_Cursor:	
  7332                           
  7333                           	psect	text8
  7334  0E9C                     __ptext8:	
  7335 ;; *************** function _log *****************
  7336 ;; Defined at:
  7337 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  x               3   39[BANK0 ] void 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  exponent        2   43[BANK0 ] int 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  3   39[BANK0 ] int 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7351 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;Total ram usage:        6 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    3
  7358 ;; This function calls:
  7359 ;;		___awtoft
  7360 ;;		___ftadd
  7361 ;;		___ftge
  7362 ;;		___ftmul
  7363 ;;		_eval_poly
  7364 ;;		_frexp
  7365 ;; This function is called by:
  7366 ;;		_main
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _log
  7372  0E9C                     _log:	
  7373                           
  7374                           ;incstack = 0
  7375                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7376  0E9C  0020               	movlb	0	; select bank0
  7377  0E9D  0847               	movf	log@x,w
  7378  0E9E  00BD               	movwf	___ftge@ff1
  7379  0E9F  0848               	movf	log@x+1,w
  7380  0EA0  00BE               	movwf	___ftge@ff1+1
  7381  0EA1  0849               	movf	log@x+2,w
  7382  0EA2  00BF               	movwf	___ftge@ff1+2
  7383  0EA3  3000               	movlw	0
  7384  0EA4  00C0               	movwf	___ftge@ff2
  7385  0EA5  3000               	movlw	0
  7386  0EA6  00C1               	movwf	___ftge@ff2+1
  7387  0EA7  3000               	movlw	0
  7388  0EA8  00C2               	movwf	___ftge@ff2+2
  7389  0EA9  318A  2260  318E   	fcall	___ftge
  7390  0EAC  1803               	btfsc	3,0
  7391  0EAD  2EBB               	goto	l2828
  7392  0EAE  3021               	movlw	33
  7393  0EAF  0021               	movlb	1	; select bank1
  7394  0EB0  00D8               	movwf	_errno^(0+128)
  7395  0EB1  3000               	movlw	0
  7396  0EB2  00D9               	movwf	(_errno^(0+128)+1)
  7397  0EB3  3000               	movlw	0
  7398  0EB4  0020               	movlb	0	; select bank0
  7399  0EB5  00C7               	movwf	?_log
  7400  0EB6  3000               	movlw	0
  7401  0EB7  00C8               	movwf	?_log+1
  7402  0EB8  3000               	movlw	0
  7403  0EB9  00C9               	movwf	?_log+2
  7404  0EBA  0008               	return
  7405  0EBB                     l2828:	
  7406  0EBB  0020               	movlb	0	; select bank0
  7407  0EBC  0849               	movf	log@x+2,w
  7408  0EBD  0448               	iorwf	log@x+1,w
  7409  0EBE  0447               	iorwf	log@x,w
  7410  0EBF  1D03               	skipz
  7411  0EC0  2ECE               	goto	l2834
  7412  0EC1  3022               	movlw	34
  7413  0EC2  0021               	movlb	1	; select bank1
  7414  0EC3  00D8               	movwf	_errno^(0+128)
  7415  0EC4  3000               	movlw	0
  7416  0EC5  00D9               	movwf	(_errno^(0+128)+1)
  7417  0EC6  3000               	movlw	0
  7418  0EC7  0020               	movlb	0	; select bank0
  7419  0EC8  00C7               	movwf	?_log
  7420  0EC9  3000               	movlw	0
  7421  0ECA  00C8               	movwf	?_log+1
  7422  0ECB  3000               	movlw	0
  7423  0ECC  00C9               	movwf	?_log+2
  7424  0ECD  0008               	return
  7425  0ECE                     l2834:	
  7426  0ECE  3000               	movlw	0
  7427  0ECF  00B0               	movwf	___ftadd@f1
  7428  0ED0  3080               	movlw	128
  7429  0ED1  00B1               	movwf	___ftadd@f1+1
  7430  0ED2  30BF               	movlw	191
  7431  0ED3  00B2               	movwf	___ftadd@f1+2
  7432  0ED4  3000               	movlw	0
  7433  0ED5  00A0               	movwf	___ftmul@f1
  7434  0ED6  3000               	movlw	0
  7435  0ED7  00A1               	movwf	___ftmul@f1+1
  7436  0ED8  3040               	movlw	64
  7437  0ED9  00A2               	movwf	___ftmul@f1+2
  7438  0EDA  304B               	movlw	(low (log@exponent| 0))& (0+255)
  7439  0EDB  00CA               	movwf	??_log
  7440  0EDC  084A               	movf	??_log,w
  7441  0EDD  00F3               	movwf	frexp@eptr
  7442  0EDE  0847               	movf	log@x,w
  7443  0EDF  00F0               	movwf	frexp@value
  7444  0EE0  0848               	movf	log@x+1,w
  7445  0EE1  00F1               	movwf	frexp@value+1
  7446  0EE2  0849               	movf	log@x+2,w
  7447  0EE3  00F2               	movwf	frexp@value+2
  7448  0EE4  318A  2225  318E   	fcall	_frexp
  7449  0EE7  0870               	movf	?_frexp,w
  7450  0EE8  0020               	movlb	0	; select bank0
  7451  0EE9  00A3               	movwf	___ftmul@f2
  7452  0EEA  0871               	movf	?_frexp+1,w
  7453  0EEB  00A4               	movwf	___ftmul@f2+1
  7454  0EEC  0872               	movf	?_frexp+2,w
  7455  0EED  00A5               	movwf	___ftmul@f2+2
  7456  0EEE  318F  274C  318E   	fcall	___ftmul
  7457  0EF1  0020               	movlb	0	; select bank0
  7458  0EF2  0820               	movf	?___ftmul,w
  7459  0EF3  00B3               	movwf	___ftadd@f2
  7460  0EF4  0821               	movf	?___ftmul+1,w
  7461  0EF5  00B4               	movwf	___ftadd@f2+1
  7462  0EF6  0822               	movf	?___ftmul+2,w
  7463  0EF7  00B5               	movwf	___ftadd@f2+2
  7464  0EF8  3182  221B  318E   	fcall	___ftadd
  7465  0EFB  0020               	movlb	0	; select bank0
  7466  0EFC  0830               	movf	?___ftadd,w
  7467  0EFD  00C7               	movwf	log@x
  7468  0EFE  0831               	movf	?___ftadd+1,w
  7469  0EFF  00C8               	movwf	log@x+1
  7470  0F00  0832               	movf	?___ftadd+2,w
  7471  0F01  00C9               	movwf	log@x+2
  7472  0F02  30FF               	movlw	255
  7473  0F03  07CB               	addwf	log@exponent,f
  7474  0F04  30FF               	movlw	255
  7475  0F05  3DCC               	addwfc	log@exponent+1,f
  7476  0F06  0847               	movf	log@x,w
  7477  0F07  00BD               	movwf	eval_poly@x
  7478  0F08  0848               	movf	log@x+1,w
  7479  0F09  00BE               	movwf	eval_poly@x+1
  7480  0F0A  0849               	movf	log@x+2,w
  7481  0F0B  00BF               	movwf	eval_poly@x+2
  7482  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  7483  0F0D  00C0               	movwf	eval_poly@d
  7484  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  7485  0F0F  00C1               	movwf	eval_poly@d+1
  7486  0F10  3008               	movlw	8
  7487  0F11  00C2               	movwf	eval_poly@n
  7488  0F12  3000               	movlw	0
  7489  0F13  00C3               	movwf	eval_poly@n+1
  7490  0F14  318B  23AD  318E   	fcall	_eval_poly
  7491  0F17  0020               	movlb	0	; select bank0
  7492  0F18  083D               	movf	?_eval_poly,w
  7493  0F19  00C7               	movwf	log@x
  7494  0F1A  083E               	movf	?_eval_poly+1,w
  7495  0F1B  00C8               	movwf	log@x+1
  7496  0F1C  083F               	movf	?_eval_poly+2,w
  7497  0F1D  00C9               	movwf	log@x+2
  7498  0F1E  0847               	movf	log@x,w
  7499  0F1F  00B0               	movwf	___ftadd@f1
  7500  0F20  0848               	movf	log@x+1,w
  7501  0F21  00B1               	movwf	___ftadd@f1+1
  7502  0F22  0849               	movf	log@x+2,w
  7503  0F23  00B2               	movwf	___ftadd@f1+2
  7504  0F24  3072               	movlw	114
  7505  0F25  00A0               	movwf	___ftmul@f1
  7506  0F26  3031               	movlw	49
  7507  0F27  00A1               	movwf	___ftmul@f1+1
  7508  0F28  303F               	movlw	63
  7509  0F29  00A2               	movwf	___ftmul@f1+2
  7510  0F2A  084C               	movf	log@exponent+1,w
  7511  0F2B  00F9               	movwf	___awtoft@c+1
  7512  0F2C  084B               	movf	log@exponent,w
  7513  0F2D  00F8               	movwf	___awtoft@c
  7514  0F2E  3189  2129  318E   	fcall	___awtoft
  7515  0F31  0878               	movf	?___awtoft,w
  7516  0F32  0020               	movlb	0	; select bank0
  7517  0F33  00A3               	movwf	___ftmul@f2
  7518  0F34  0879               	movf	?___awtoft+1,w
  7519  0F35  00A4               	movwf	___ftmul@f2+1
  7520  0F36  087A               	movf	?___awtoft+2,w
  7521  0F37  00A5               	movwf	___ftmul@f2+2
  7522  0F38  318F  274C  318E   	fcall	___ftmul
  7523  0F3B  0020               	movlb	0	; select bank0
  7524  0F3C  0820               	movf	?___ftmul,w
  7525  0F3D  00B3               	movwf	___ftadd@f2
  7526  0F3E  0821               	movf	?___ftmul+1,w
  7527  0F3F  00B4               	movwf	___ftadd@f2+1
  7528  0F40  0822               	movf	?___ftmul+2,w
  7529  0F41  00B5               	movwf	___ftadd@f2+2
  7530  0F42  3182  221B         	fcall	___ftadd
  7531  0F44  0020               	movlb	0	; select bank0
  7532  0F45  0830               	movf	?___ftadd,w
  7533  0F46  00C7               	movwf	?_log
  7534  0F47  0831               	movf	?___ftadd+1,w
  7535  0F48  00C8               	movwf	?_log+1
  7536  0F49  0832               	movf	?___ftadd+2,w
  7537  0F4A  00C9               	movwf	?_log+2
  7538  0F4B  0008               	return
  7539  0F4C                     __end_of_log:	
  7540                           
  7541                           	psect	text9
  7542  0A25                     __ptext9:	
  7543 ;; *************** function _frexp *****************
  7544 ;; Defined at:
  7545 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  value           3    0[COMMON] int 
  7548 ;;  eptr            1    3[COMMON] PTR int 
  7549 ;;		 -> log@exponent(2), 
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  3    0[COMMON] PTR int 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;Total ram usage:        6 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_log
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _frexp
  7576  0A25                     _frexp:	
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7580  0A25  0872               	movf	frexp@value+2,w
  7581  0A26  0471               	iorwf	frexp@value+1,w
  7582  0A27  0470               	iorwf	frexp@value,w
  7583  0A28  1D03               	skipz
  7584  0A29  2A37               	goto	l2662
  7585  0A2A  0873               	movf	frexp@eptr,w
  7586  0A2B  0086               	movwf	6
  7587  0A2C  0187               	clrf	7
  7588  0A2D  3000               	movlw	0
  7589  0A2E  3FC0               	movwi [0]fsr1
  7590  0A2F  3FC1               	movwi [1]fsr1
  7591  0A30  3000               	movlw	0
  7592  0A31  00F0               	movwf	?_frexp
  7593  0A32  3000               	movlw	0
  7594  0A33  00F1               	movwf	?_frexp+1
  7595  0A34  3000               	movlw	0
  7596  0A35  00F2               	movwf	?_frexp+2
  7597  0A36  0008               	return
  7598  0A37                     l2662:	
  7599  0A37  0872               	movf	frexp@value+2,w
  7600  0A38  397F               	andlw	127
  7601  0A39  00F4               	movwf	??_frexp
  7602  0A3A  01F5               	clrf	??_frexp+1
  7603  0A3B  35F4               	lslf	??_frexp,f
  7604  0A3C  0DF5               	rlf	??_frexp+1,f
  7605  0A3D  0873               	movf	frexp@eptr,w
  7606  0A3E  0086               	movwf	6
  7607  0A3F  0187               	clrf	7
  7608  0A40  0874               	movf	??_frexp,w
  7609  0A41  3FC0               	movwi [0]fsr1
  7610  0A42  0875               	movf	??_frexp+1,w
  7611  0A43  3FC1               	movwi [1]fsr1
  7612  0A44  0D71               	rlf	frexp@value+1,w
  7613  0A45  0D71               	rlf	frexp@value+1,w
  7614  0A46  3901               	andlw	1
  7615  0A47  00F4               	movwf	??_frexp
  7616  0A48  01F5               	clrf	??_frexp+1
  7617  0A49  0873               	movf	frexp@eptr,w
  7618  0A4A  0086               	movwf	6
  7619  0A4B  0187               	clrf	7
  7620  0A4C  0874               	movf	??_frexp,w
  7621  0A4D  0481               	iorwf	1,f
  7622  0A4E  3141               	addfsr 1,1
  7623  0A4F  0875               	movf	??_frexp+1,w
  7624  0A50  0481               	iorwf	1,f
  7625  0A51  0873               	movf	frexp@eptr,w
  7626  0A52  0086               	movwf	6
  7627  0A53  0187               	clrf	7
  7628  0A54  3082               	movlw	130
  7629  0A55  0781               	addwf	1,f
  7630  0A56  3141               	addfsr 1,1
  7631  0A57  30FF               	movlw	255
  7632  0A58  3D81               	addwfc	1,f
  7633  0A59  317F               	addfsr 1,-1
  7634  0A5A  0872               	movf	frexp@value+2,w
  7635  0A5B  3980               	andlw	-128
  7636  0A5C  383F               	iorlw	63
  7637  0A5D  00F2               	movwf	frexp@value+2
  7638  0A5E  13F1               	bcf	frexp@value+1,7
  7639  0A5F  0008               	return
  7640  0A60                     __end_of_frexp:	
  7641                           
  7642                           	psect	text10
  7643  0BAD                     __ptext10:	
  7644 ;; *************** function _eval_poly *****************
  7645 ;; Defined at:
  7646 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  x               3   29[BANK0 ] PTR int 
  7649 ;;  d               2   32[BANK0 ] PTR const 
  7650 ;;		 -> log@coeff(27), 
  7651 ;;  n               2   34[BANK0 ] int 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;  res             3   36[BANK0 ] int 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  3   29[BANK0 ] int 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7663 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;Total ram usage:       10 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    2
  7670 ;; This function calls:
  7671 ;;		___ftadd
  7672 ;;		___ftmul
  7673 ;;		___wmul
  7674 ;; This function is called by:
  7675 ;;		_log
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           
  7680                           ;psect for function _eval_poly
  7681  0BAD                     _eval_poly:	
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7685  0BAD  0020               	movlb	0	; select bank0
  7686  0BAE  0843               	movf	eval_poly@n+1,w
  7687  0BAF  00F1               	movwf	___wmul@multiplier+1
  7688  0BB0  0842               	movf	eval_poly@n,w
  7689  0BB1  00F0               	movwf	___wmul@multiplier
  7690  0BB2  3003               	movlw	3
  7691  0BB3  00F2               	movwf	___wmul@multiplicand
  7692  0BB4  3000               	movlw	0
  7693  0BB5  00F3               	movwf	___wmul@multiplicand+1
  7694  0BB6  3188  20F0  318B   	fcall	___wmul
  7695  0BB9  0020               	movlb	0	; select bank0
  7696  0BBA  0840               	movf	eval_poly@d,w
  7697  0BBB  0770               	addwf	?___wmul,w
  7698  0BBC  0084               	movwf	4
  7699  0BBD  0841               	movf	eval_poly@d+1,w
  7700  0BBE  3D71               	addwfc	?___wmul+1,w
  7701  0BBF  0085               	movwf	5
  7702  0BC0  3F00               	moviw [0]fsr0
  7703  0BC1  00C4               	movwf	eval_poly@res
  7704  0BC2  3F01               	moviw [1]fsr0
  7705  0BC3  00C5               	movwf	eval_poly@res+1
  7706  0BC4  3F02               	moviw [2]fsr0
  7707  0BC5                     L2:	
  7708  0BC5  00C6               	movwf	eval_poly@res+2
  7709  0BC6  0842               	movf	eval_poly@n,w
  7710  0BC7  0443               	iorwf	eval_poly@n+1,w
  7711  0BC8  1903               	btfsc	3,2
  7712  0BC9  2C06               	goto	l2680
  7713  0BCA  30FF               	movlw	255
  7714  0BCB  07C2               	addwf	eval_poly@n,f
  7715  0BCC  30FF               	movlw	255
  7716  0BCD  3DC3               	addwfc	eval_poly@n+1,f
  7717  0BCE  0843               	movf	eval_poly@n+1,w
  7718  0BCF  00F1               	movwf	___wmul@multiplier+1
  7719  0BD0  0842               	movf	eval_poly@n,w
  7720  0BD1  00F0               	movwf	___wmul@multiplier
  7721  0BD2  3003               	movlw	3
  7722  0BD3  00F2               	movwf	___wmul@multiplicand
  7723  0BD4  3000               	movlw	0
  7724  0BD5  00F3               	movwf	___wmul@multiplicand+1
  7725  0BD6  3188  20F0  318B   	fcall	___wmul
  7726  0BD9  0020               	movlb	0	; select bank0
  7727  0BDA  0840               	movf	eval_poly@d,w
  7728  0BDB  0770               	addwf	?___wmul,w
  7729  0BDC  0084               	movwf	4
  7730  0BDD  0841               	movf	eval_poly@d+1,w
  7731  0BDE  3D71               	addwfc	?___wmul+1,w
  7732  0BDF  0085               	movwf	5
  7733  0BE0  3F00               	moviw [0]fsr0
  7734  0BE1  00B0               	movwf	___ftadd@f1
  7735  0BE2  3F01               	moviw [1]fsr0
  7736  0BE3  00B1               	movwf	___ftadd@f1+1
  7737  0BE4  3F02               	moviw [2]fsr0
  7738  0BE5  00B2               	movwf	___ftadd@f1+2
  7739  0BE6  0844               	movf	eval_poly@res,w
  7740  0BE7  00A0               	movwf	___ftmul@f1
  7741  0BE8  0845               	movf	eval_poly@res+1,w
  7742  0BE9  00A1               	movwf	___ftmul@f1+1
  7743  0BEA  0846               	movf	eval_poly@res+2,w
  7744  0BEB  00A2               	movwf	___ftmul@f1+2
  7745  0BEC  083D               	movf	eval_poly@x,w
  7746  0BED  00A3               	movwf	___ftmul@f2
  7747  0BEE  083E               	movf	eval_poly@x+1,w
  7748  0BEF  00A4               	movwf	___ftmul@f2+1
  7749  0BF0  083F               	movf	eval_poly@x+2,w
  7750  0BF1  00A5               	movwf	___ftmul@f2+2
  7751  0BF2  318F  274C  318B   	fcall	___ftmul
  7752  0BF5  0020               	movlb	0	; select bank0
  7753  0BF6  0820               	movf	?___ftmul,w
  7754  0BF7  00B3               	movwf	___ftadd@f2
  7755  0BF8  0821               	movf	?___ftmul+1,w
  7756  0BF9  00B4               	movwf	___ftadd@f2+1
  7757  0BFA  0822               	movf	?___ftmul+2,w
  7758  0BFB  00B5               	movwf	___ftadd@f2+2
  7759  0BFC  3182  221B  318B   	fcall	___ftadd
  7760  0BFF  0020               	movlb	0	; select bank0
  7761  0C00  0830               	movf	?___ftadd,w
  7762  0C01  00C4               	movwf	eval_poly@res
  7763  0C02  0831               	movf	?___ftadd+1,w
  7764  0C03  00C5               	movwf	eval_poly@res+1
  7765  0C04  0832               	movf	?___ftadd+2,w
  7766  0C05  2BC5               	goto	L2
  7767  0C06                     l2680:	
  7768  0C06  0844               	movf	eval_poly@res,w
  7769  0C07  00BD               	movwf	?_eval_poly
  7770  0C08  0845               	movf	eval_poly@res+1,w
  7771  0C09  00BE               	movwf	?_eval_poly+1
  7772  0C0A  0846               	movf	eval_poly@res+2,w
  7773  0C0B  00BF               	movwf	?_eval_poly+2
  7774  0C0C  0008               	return
  7775  0C0D                     __end_of_eval_poly:	
  7776                           
  7777                           	psect	text11
  7778  08F0                     __ptext11:	
  7779 ;; *************** function ___wmul *****************
  7780 ;; Defined at:
  7781 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  multiplier      2    0[COMMON] unsigned int 
  7784 ;;  multiplicand    2    2[COMMON] unsigned int 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  product         2    4[COMMON] unsigned int 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2    0[COMMON] unsigned int 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;Total ram usage:        6 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;;		_eval_poly
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function ___wmul
  7812  08F0                     ___wmul:	
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7816  08F0  01F4               	clrf	___wmul@product
  7817  08F1  01F5               	clrf	___wmul@product+1
  7818  08F2                     l2260:	
  7819  08F2  1C70               	btfss	___wmul@multiplier,0
  7820  08F3  28F8               	goto	l478
  7821  08F4  0872               	movf	___wmul@multiplicand,w
  7822  08F5  07F4               	addwf	___wmul@product,f
  7823  08F6  0873               	movf	___wmul@multiplicand+1,w
  7824  08F7  3DF5               	addwfc	___wmul@product+1,f
  7825  08F8                     l478:	
  7826  08F8  3001               	movlw	1
  7827  08F9                     u2155:	
  7828  08F9  35F2               	lslf	___wmul@multiplicand,f
  7829  08FA  0DF3               	rlf	___wmul@multiplicand+1,f
  7830  08FB  0B89               	decfsz	9,f
  7831  08FC  28F9               	goto	u2155
  7832  08FD  3001               	movlw	1
  7833  08FE                     u2165:	
  7834  08FE  36F1               	lsrf	___wmul@multiplier+1,f
  7835  08FF  0CF0               	rrf	___wmul@multiplier,f
  7836  0900  0B89               	decfsz	9,f
  7837  0901  28FE               	goto	u2165
  7838  0902  0870               	movf	___wmul@multiplier,w
  7839  0903  0471               	iorwf	___wmul@multiplier+1,w
  7840  0904  1D03               	btfss	3,2
  7841  0905  28F2               	goto	l2260
  7842  0906  0875               	movf	___wmul@product+1,w
  7843  0907  00F1               	movwf	?___wmul+1
  7844  0908  0874               	movf	___wmul@product,w
  7845  0909  00F0               	movwf	?___wmul
  7846  090A  0008               	return
  7847  090B                     __end_of___wmul:	
  7848                           
  7849                           	psect	text12
  7850  084A                     __ptext12:	
  7851 ;; *************** function ___lwtoft *****************
  7852 ;; Defined at:
  7853 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  c               2    8[COMMON] unsigned int 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  3    8[COMMON] float 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7867 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;Total ram usage:        4 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    1
  7874 ;; This function calls:
  7875 ;;		___ftpack
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___lwtoft
  7883  084A                     ___lwtoft:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7887  084A  0878               	movf	___lwtoft@c,w
  7888  084B  00F0               	movwf	___ftpack@arg
  7889  084C  0879               	movf	___lwtoft@c+1,w
  7890  084D  00F1               	movwf	___ftpack@arg+1
  7891  084E  01F2               	clrf	___ftpack@arg+2
  7892  084F  308E               	movlw	142
  7893  0850  00FB               	movwf	??___lwtoft
  7894  0851  087B               	movf	??___lwtoft,w
  7895  0852  00F3               	movwf	___ftpack@exp
  7896  0853  01F4               	clrf	___ftpack@sign
  7897  0854  318C  240D         	fcall	___ftpack
  7898  0856  0870               	movf	?___ftpack,w
  7899  0857  00F8               	movwf	?___lwtoft
  7900  0858  0871               	movf	?___ftpack+1,w
  7901  0859  00F9               	movwf	?___lwtoft+1
  7902  085A  0872               	movf	?___ftpack+2,w
  7903  085B  00FA               	movwf	?___lwtoft+2
  7904  085C  0008               	return
  7905  085D                     __end_of___lwtoft:	
  7906                           
  7907                           	psect	text13
  7908  09F1                     __ptext13:	
  7909 ;; *************** function ___lwdiv *****************
  7910 ;; Defined at:
  7911 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  divisor         2    6[COMMON] unsigned int 
  7914 ;;  dividend        2    8[COMMON] unsigned int 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  quotient        2   11[COMMON] unsigned int 
  7917 ;;  counter         1   13[COMMON] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2    6[COMMON] unsigned int 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;Total ram usage:        8 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		_main
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           
  7941                           ;psect for function ___lwdiv
  7942  09F1                     ___lwdiv:	
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7946  09F1  01FB               	clrf	___lwdiv@quotient
  7947  09F2  01FC               	clrf	___lwdiv@quotient+1
  7948  09F3  0876               	movf	___lwdiv@divisor,w
  7949  09F4  0477               	iorwf	___lwdiv@divisor+1,w
  7950  09F5  1903               	btfsc	3,2
  7951  09F6  2A20               	goto	l3002
  7952  09F7  01FD               	clrf	___lwdiv@counter
  7953  09F8  0AFD               	incf	___lwdiv@counter,f
  7954  09F9                     l2990:	
  7955  09F9  1BF7               	btfsc	___lwdiv@divisor+1,7
  7956  09FA  2A05               	goto	l2992
  7957  09FB  3001               	movlw	1
  7958  09FC                     u3155:	
  7959  09FC  35F6               	lslf	___lwdiv@divisor,f
  7960  09FD  0DF7               	rlf	___lwdiv@divisor+1,f
  7961  09FE  0B89               	decfsz	9,f
  7962  09FF  29FC               	goto	u3155
  7963  0A00  3001               	movlw	1
  7964  0A01  00FA               	movwf	??___lwdiv
  7965  0A02  087A               	movf	??___lwdiv,w
  7966  0A03  07FD               	addwf	___lwdiv@counter,f
  7967  0A04  29F9               	goto	l2990
  7968  0A05                     l2992:	
  7969  0A05  3001               	movlw	1
  7970  0A06                     u3175:	
  7971  0A06  35FB               	lslf	___lwdiv@quotient,f
  7972  0A07  0DFC               	rlf	___lwdiv@quotient+1,f
  7973  0A08  0B89               	decfsz	9,f
  7974  0A09  2A06               	goto	u3175
  7975  0A0A  0877               	movf	___lwdiv@divisor+1,w
  7976  0A0B  0279               	subwf	___lwdiv@dividend+1,w
  7977  0A0C  1D03               	skipz
  7978  0A0D  2A10               	goto	u3185
  7979  0A0E  0876               	movf	___lwdiv@divisor,w
  7980  0A0F  0278               	subwf	___lwdiv@dividend,w
  7981  0A10                     u3185:	
  7982  0A10  1C03               	skipc
  7983  0A11  2A17               	goto	l2998
  7984  0A12  0876               	movf	___lwdiv@divisor,w
  7985  0A13  02F8               	subwf	___lwdiv@dividend,f
  7986  0A14  0877               	movf	___lwdiv@divisor+1,w
  7987  0A15  3BF9               	subwfb	___lwdiv@dividend+1,f
  7988  0A16  147B               	bsf	___lwdiv@quotient,0
  7989  0A17                     l2998:	
  7990  0A17  3001               	movlw	1
  7991  0A18                     u3195:	
  7992  0A18  36F7               	lsrf	___lwdiv@divisor+1,f
  7993  0A19  0CF6               	rrf	___lwdiv@divisor,f
  7994  0A1A  0B89               	decfsz	9,f
  7995  0A1B  2A18               	goto	u3195
  7996  0A1C  3001               	movlw	1
  7997  0A1D  02FD               	subwf	___lwdiv@counter,f
  7998  0A1E  1D03               	btfss	3,2
  7999  0A1F  2A05               	goto	l2992
  8000  0A20                     l3002:	
  8001  0A20  087C               	movf	___lwdiv@quotient+1,w
  8002  0A21  00F7               	movwf	?___lwdiv+1
  8003  0A22  087B               	movf	___lwdiv@quotient,w
  8004  0A23  00F6               	movwf	?___lwdiv
  8005  0A24  0008               	return
  8006  0A25                     __end_of___lwdiv:	
  8007                           
  8008                           	psect	text14
  8009  08BC                     __ptext14:	
  8010 ;; *************** function ___lbtoft *****************
  8011 ;; Defined at:
  8012 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  c               1    wreg     unsigned char 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  c               1   11[COMMON] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  3    8[COMMON] float 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;Total ram usage:        8 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    1
  8033 ;; This function calls:
  8034 ;;		___ftpack
  8035 ;; This function is called by:
  8036 ;;		_main
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           
  8041                           ;psect for function ___lbtoft
  8042  08BC                     ___lbtoft:	
  8043                           
  8044                           ;incstack = 0
  8045                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8046                           ;___lbtoft@c stored from wreg
  8047  08BC  00FB               	movwf	___lbtoft@c
  8048  08BD  087B               	movf	___lbtoft@c,w
  8049  08BE  0020               	movlb	0	; select bank0
  8050  08BF  00A0               	movwf	??___lbtoft
  8051  08C0  01A1               	clrf	??___lbtoft+1
  8052  08C1  01A2               	clrf	??___lbtoft+2
  8053  08C2  0820               	movf	??___lbtoft,w
  8054  08C3  00F0               	movwf	___ftpack@arg
  8055  08C4  0821               	movf	??___lbtoft+1,w
  8056  08C5  00F1               	movwf	___ftpack@arg+1
  8057  08C6  0822               	movf	??___lbtoft+2,w
  8058  08C7  00F2               	movwf	___ftpack@arg+2
  8059  08C8  308E               	movlw	142
  8060  08C9  00A3               	movwf	??___lbtoft+3
  8061  08CA  0823               	movf	??___lbtoft+3,w
  8062  08CB  00F3               	movwf	___ftpack@exp
  8063  08CC  01F4               	clrf	___ftpack@sign
  8064  08CD  318C  240D         	fcall	___ftpack
  8065  08CF  0870               	movf	?___ftpack,w
  8066  08D0  00F8               	movwf	?___lbtoft
  8067  08D1  0871               	movf	?___ftpack+1,w
  8068  08D2  00F9               	movwf	?___lbtoft+1
  8069  08D3  0872               	movf	?___ftpack+2,w
  8070  08D4  00FA               	movwf	?___lbtoft+2
  8071  08D5  0008               	return
  8072  08D6                     __end_of___lbtoft:	
  8073                           
  8074                           	psect	text15
  8075  0011                     __ptext15:	
  8076 ;; *************** function ___fttol *****************
  8077 ;; Defined at:
  8078 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  f1              3   61[BANK0 ] float 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  lval            4   70[BANK0 ] unsigned long 
  8083 ;;  exp1            1   74[BANK0 ] unsigned char 
  8084 ;;  sign1           1   69[BANK0 ] unsigned char 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  4   61[BANK0 ] long 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;Total ram usage:       14 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_main
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function ___fttol
  8109  0011                     ___fttol:	
  8110                           
  8111                           ;incstack = 0
  8112                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8113  0011  0020               	movlb	0	; select bank0
  8114  0012  085D               	movf	___fttol@f1,w
  8115  0013  00E1               	movwf	??___fttol
  8116  0014  085E               	movf	___fttol@f1+1,w
  8117  0015  00E2               	movwf	??___fttol+1
  8118  0016  085F               	movf	___fttol@f1+2,w
  8119  0017  00E3               	movwf	??___fttol+2
  8120  0018  1003               	clrc
  8121  0019  0D62               	rlf	??___fttol+1,w
  8122  001A  0D63               	rlf	??___fttol+2,w
  8123  001B  00E4               	movwf	??___fttol+3
  8124  001C  0864               	movf	??___fttol+3,w
  8125  001D  00EA               	movwf	___fttol@exp1
  8126  001E  086A               	movf	___fttol@exp1,w
  8127  001F  1D03               	btfss	3,2
  8128  0020  282A               	goto	l2940
  8129  0021  3000               	movlw	0
  8130  0022  00E0               	movwf	?___fttol+3
  8131  0023  3000               	movlw	0
  8132  0024  00DF               	movwf	?___fttol+2
  8133  0025  3000               	movlw	0
  8134  0026  00DE               	movwf	?___fttol+1
  8135  0027  3000               	movlw	0
  8136  0028  00DD               	movwf	?___fttol
  8137  0029  0008               	return
  8138  002A                     l2940:	
  8139  002A  085D               	movf	___fttol@f1,w
  8140  002B  00E1               	movwf	??___fttol
  8141  002C  085E               	movf	___fttol@f1+1,w
  8142  002D  00E2               	movwf	??___fttol+1
  8143  002E  085F               	movf	___fttol@f1+2,w
  8144  002F  00E3               	movwf	??___fttol+2
  8145  0030  3017               	movlw	23
  8146  0031                     u3055:	
  8147  0031  36E3               	lsrf	??___fttol+2,f
  8148  0032  0CE2               	rrf	??___fttol+1,f
  8149  0033  0CE1               	rrf	??___fttol,f
  8150  0034  0B89               	decfsz	9,f
  8151  0035  2831               	goto	u3055
  8152  0036  0861               	movf	??___fttol,w
  8153  0037  00E4               	movwf	??___fttol+3
  8154  0038  0864               	movf	??___fttol+3,w
  8155  0039  00E5               	movwf	___fttol@sign1
  8156  003A  17DE               	bsf	___fttol@f1+1,7
  8157  003B  30FF               	movlw	255
  8158  003C  05DD               	andwf	___fttol@f1,f
  8159  003D  30FF               	movlw	255
  8160  003E  05DE               	andwf	___fttol@f1+1,f
  8161  003F  3000               	movlw	0
  8162  0040  05DF               	andwf	___fttol@f1+2,f
  8163  0041  085D               	movf	___fttol@f1,w
  8164  0042  00E6               	movwf	___fttol@lval
  8165  0043  085E               	movf	___fttol@f1+1,w
  8166  0044  00E7               	movwf	___fttol@lval+1
  8167  0045  085F               	movf	___fttol@f1+2,w
  8168  0046  00E8               	movwf	___fttol@lval+2
  8169  0047  01E9               	clrf	___fttol@lval+3
  8170  0048  308E               	movlw	142
  8171  0049  02EA               	subwf	___fttol@exp1,f
  8172  004A  1FEA               	btfss	___fttol@exp1,7
  8173  004B  2868               	goto	l2960
  8174  004C  086A               	movf	___fttol@exp1,w
  8175  004D  3A80               	xorlw	128
  8176  004E  3E8F               	addlw	143
  8177  004F  1803               	skipnc
  8178  0050  285A               	goto	l2958
  8179  0051  3000               	movlw	0
  8180  0052  00E0               	movwf	?___fttol+3
  8181  0053  3000               	movlw	0
  8182  0054  00DF               	movwf	?___fttol+2
  8183  0055  3000               	movlw	0
  8184  0056  00DE               	movwf	?___fttol+1
  8185  0057  3000               	movlw	0
  8186  0058  00DD               	movwf	?___fttol
  8187  0059  0008               	return
  8188  005A                     l2958:	
  8189  005A  3001               	movlw	1
  8190  005B                     u3085:	
  8191  005B  36E9               	lsrf	___fttol@lval+3,f
  8192  005C  0CE8               	rrf	___fttol@lval+2,f
  8193  005D  0CE7               	rrf	___fttol@lval+1,f
  8194  005E  0CE6               	rrf	___fttol@lval,f
  8195  005F  0B89               	decfsz	9,f
  8196  0060  285B               	goto	u3085
  8197  0061  3001               	movlw	1
  8198  0062  00E1               	movwf	??___fttol
  8199  0063  0861               	movf	??___fttol,w
  8200  0064  07EA               	addwf	___fttol@exp1,f
  8201  0065  1903               	btfsc	3,2
  8202  0066  2881               	goto	l2968
  8203  0067  285A               	goto	l2958
  8204  0068                     l2960:	
  8205  0068  3018               	movlw	24
  8206  0069  026A               	subwf	___fttol@exp1,w
  8207  006A  1C03               	skipc
  8208  006B  287E               	goto	l730
  8209  006C  3000               	movlw	0
  8210  006D  00E0               	movwf	?___fttol+3
  8211  006E  3000               	movlw	0
  8212  006F  00DF               	movwf	?___fttol+2
  8213  0070  3000               	movlw	0
  8214  0071  00DE               	movwf	?___fttol+1
  8215  0072  3000               	movlw	0
  8216  0073  00DD               	movwf	?___fttol
  8217  0074  0008               	return
  8218  0075                     l2966:	
  8219  0075  3001               	movlw	1
  8220  0076                     u3115:	
  8221  0076  35E6               	lslf	___fttol@lval,f
  8222  0077  0DE7               	rlf	___fttol@lval+1,f
  8223  0078  0DE8               	rlf	___fttol@lval+2,f
  8224  0079  0DE9               	rlf	___fttol@lval+3,f
  8225  007A  0B89               	decfsz	9,f
  8226  007B  2876               	goto	u3115
  8227  007C  3001               	movlw	1
  8228  007D  02EA               	subwf	___fttol@exp1,f
  8229  007E                     l730:	
  8230  007E  086A               	movf	___fttol@exp1,w
  8231  007F  1D03               	btfss	3,2
  8232  0080  2875               	goto	l2966
  8233  0081                     l2968:	
  8234  0081  0865               	movf	___fttol@sign1,w
  8235  0082  1903               	btfsc	3,2
  8236  0083  288F               	goto	l2972
  8237  0084  09E6               	comf	___fttol@lval,f
  8238  0085  09E7               	comf	___fttol@lval+1,f
  8239  0086  09E8               	comf	___fttol@lval+2,f
  8240  0087  09E9               	comf	___fttol@lval+3,f
  8241  0088  0AE6               	incf	___fttol@lval,f
  8242  0089  1903               	skipnz
  8243  008A  0AE7               	incf	___fttol@lval+1,f
  8244  008B  1903               	skipnz
  8245  008C  0AE8               	incf	___fttol@lval+2,f
  8246  008D  1903               	skipnz
  8247  008E  0AE9               	incf	___fttol@lval+3,f
  8248  008F                     l2972:	
  8249  008F  0869               	movf	___fttol@lval+3,w
  8250  0090  00E0               	movwf	?___fttol+3
  8251  0091  0868               	movf	___fttol@lval+2,w
  8252  0092  00DF               	movwf	?___fttol+2
  8253  0093  0867               	movf	___fttol@lval+1,w
  8254  0094  00DE               	movwf	?___fttol+1
  8255  0095  0866               	movf	___fttol@lval,w
  8256  0096  00DD               	movwf	?___fttol
  8257  0097  0008               	return
  8258  0098                     __end_of___fttol:	
  8259                           
  8260                           	psect	text16
  8261  090B                     __ptext16:	
  8262 ;; *************** function ___ftsub *****************
  8263 ;; Defined at:
  8264 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  f2              3   29[BANK0 ] float 
  8267 ;;  f1              3   32[BANK0 ] float 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  3   29[BANK0 ] float 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0, pclath, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:        6 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    2
  8286 ;; This function calls:
  8287 ;;		___ftadd
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function ___ftsub
  8295  090B                     ___ftsub:	
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8299  090B  0020               	movlb	0	; select bank0
  8300  090C  083F               	movf	___ftsub@f2+2,w
  8301  090D  043E               	iorwf	___ftsub@f2+1,w
  8302  090E  043D               	iorwf	___ftsub@f2,w
  8303  090F  1903               	skipnz
  8304  0910  2913               	goto	l2930
  8305  0911  3080               	movlw	128
  8306  0912  06BF               	xorwf	___ftsub@f2+2,f
  8307  0913                     l2930:	
  8308  0913  0840               	movf	___ftsub@f1,w
  8309  0914  00B0               	movwf	___ftadd@f1
  8310  0915  0841               	movf	___ftsub@f1+1,w
  8311  0916  00B1               	movwf	___ftadd@f1+1
  8312  0917  0842               	movf	___ftsub@f1+2,w
  8313  0918  00B2               	movwf	___ftadd@f1+2
  8314  0919  083D               	movf	___ftsub@f2,w
  8315  091A  00B3               	movwf	___ftadd@f2
  8316  091B  083E               	movf	___ftsub@f2+1,w
  8317  091C  00B4               	movwf	___ftadd@f2+1
  8318  091D  083F               	movf	___ftsub@f2+2,w
  8319  091E  00B5               	movwf	___ftadd@f2+2
  8320  091F  3182  221B         	fcall	___ftadd
  8321  0921  0020               	movlb	0	; select bank0
  8322  0922  0830               	movf	?___ftadd,w
  8323  0923  00BD               	movwf	?___ftsub
  8324  0924  0831               	movf	?___ftadd+1,w
  8325  0925  00BE               	movwf	?___ftsub+1
  8326  0926  0832               	movf	?___ftadd+2,w
  8327  0927  00BF               	movwf	?___ftsub+2
  8328  0928  0008               	return
  8329  0929                     __end_of___ftsub:	
  8330                           
  8331                           	psect	text17
  8332  0DF3                     __ptext17:	
  8333 ;; *************** function ___ftdiv *****************
  8334 ;; Defined at:
  8335 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  f2              3    0[BANK0 ] float 
  8338 ;;  f1              3    3[BANK0 ] float 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  f3              3   11[BANK0 ] float 
  8341 ;;  sign            1   15[BANK0 ] unsigned char 
  8342 ;;  exp             1   14[BANK0 ] unsigned char 
  8343 ;;  cntr            1   10[BANK0 ] unsigned char 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  3    0[BANK0 ] float 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8353 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;Total ram usage:       16 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    1
  8360 ;; This function calls:
  8361 ;;		___ftpack
  8362 ;; This function is called by:
  8363 ;;		_main
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function ___ftdiv
  8369  0DF3                     ___ftdiv:	
  8370                           
  8371                           ;incstack = 0
  8372                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8373  0DF3  0020               	movlb	0	; select bank0
  8374  0DF4  0823               	movf	___ftdiv@f1,w
  8375  0DF5  00A6               	movwf	??___ftdiv
  8376  0DF6  0824               	movf	___ftdiv@f1+1,w
  8377  0DF7  00A7               	movwf	??___ftdiv+1
  8378  0DF8  0825               	movf	___ftdiv@f1+2,w
  8379  0DF9  00A8               	movwf	??___ftdiv+2
  8380  0DFA  1003               	clrc
  8381  0DFB  0D27               	rlf	??___ftdiv+1,w
  8382  0DFC  0D28               	rlf	??___ftdiv+2,w
  8383  0DFD  00A9               	movwf	??___ftdiv+3
  8384  0DFE  0829               	movf	??___ftdiv+3,w
  8385  0DFF  00AE               	movwf	___ftdiv@exp
  8386  0E00  082E               	movf	___ftdiv@exp,w
  8387  0E01  1D03               	btfss	3,2
  8388  0E02  2E0A               	goto	l2890
  8389  0E03  3000               	movlw	0
  8390  0E04  00A0               	movwf	?___ftdiv
  8391  0E05  3000               	movlw	0
  8392  0E06  00A1               	movwf	?___ftdiv+1
  8393  0E07  3000               	movlw	0
  8394  0E08  00A2               	movwf	?___ftdiv+2
  8395  0E09  0008               	return
  8396  0E0A                     l2890:	
  8397  0E0A  0820               	movf	___ftdiv@f2,w
  8398  0E0B  00A6               	movwf	??___ftdiv
  8399  0E0C  0821               	movf	___ftdiv@f2+1,w
  8400  0E0D  00A7               	movwf	??___ftdiv+1
  8401  0E0E  0822               	movf	___ftdiv@f2+2,w
  8402  0E0F  00A8               	movwf	??___ftdiv+2
  8403  0E10  1003               	clrc
  8404  0E11  0D27               	rlf	??___ftdiv+1,w
  8405  0E12  0D28               	rlf	??___ftdiv+2,w
  8406  0E13  00A9               	movwf	??___ftdiv+3
  8407  0E14  0829               	movf	??___ftdiv+3,w
  8408  0E15  00AF               	movwf	___ftdiv@sign
  8409  0E16  082F               	movf	___ftdiv@sign,w
  8410  0E17  1D03               	btfss	3,2
  8411  0E18  2E20               	goto	l2896
  8412  0E19  3000               	movlw	0
  8413  0E1A  00A0               	movwf	?___ftdiv
  8414  0E1B  3000               	movlw	0
  8415  0E1C  00A1               	movwf	?___ftdiv+1
  8416  0E1D  3000               	movlw	0
  8417  0E1E  00A2               	movwf	?___ftdiv+2
  8418  0E1F  0008               	return
  8419  0E20                     l2896:	
  8420  0E20  3000               	movlw	0
  8421  0E21  00AB               	movwf	___ftdiv@f3
  8422  0E22  3000               	movlw	0
  8423  0E23  00AC               	movwf	___ftdiv@f3+1
  8424  0E24  3000               	movlw	0
  8425  0E25  00AD               	movwf	___ftdiv@f3+2
  8426  0E26  3089               	movlw	137
  8427  0E27  072F               	addwf	___ftdiv@sign,w
  8428  0E28  00A6               	movwf	??___ftdiv
  8429  0E29  0826               	movf	??___ftdiv,w
  8430  0E2A  02AE               	subwf	___ftdiv@exp,f
  8431  0E2B  0823               	movf	___ftdiv@f1,w
  8432  0E2C  00A6               	movwf	??___ftdiv
  8433  0E2D  0824               	movf	___ftdiv@f1+1,w
  8434  0E2E  00A7               	movwf	??___ftdiv+1
  8435  0E2F  0825               	movf	___ftdiv@f1+2,w
  8436  0E30  00A8               	movwf	??___ftdiv+2
  8437  0E31  3010               	movlw	16
  8438  0E32                     u2975:	
  8439  0E32  36A8               	lsrf	??___ftdiv+2,f
  8440  0E33  0CA7               	rrf	??___ftdiv+1,f
  8441  0E34  0CA6               	rrf	??___ftdiv,f
  8442  0E35  0B89               	decfsz	9,f
  8443  0E36  2E32               	goto	u2975
  8444  0E37  0826               	movf	??___ftdiv,w
  8445  0E38  00A9               	movwf	??___ftdiv+3
  8446  0E39  0829               	movf	??___ftdiv+3,w
  8447  0E3A  00AF               	movwf	___ftdiv@sign
  8448  0E3B  0820               	movf	___ftdiv@f2,w
  8449  0E3C  00A6               	movwf	??___ftdiv
  8450  0E3D  0821               	movf	___ftdiv@f2+1,w
  8451  0E3E  00A7               	movwf	??___ftdiv+1
  8452  0E3F  0822               	movf	___ftdiv@f2+2,w
  8453  0E40  00A8               	movwf	??___ftdiv+2
  8454  0E41  3010               	movlw	16
  8455  0E42                     u2985:	
  8456  0E42  36A8               	lsrf	??___ftdiv+2,f
  8457  0E43  0CA7               	rrf	??___ftdiv+1,f
  8458  0E44  0CA6               	rrf	??___ftdiv,f
  8459  0E45  0B89               	decfsz	9,f
  8460  0E46  2E42               	goto	u2985
  8461  0E47  0826               	movf	??___ftdiv,w
  8462  0E48  00A9               	movwf	??___ftdiv+3
  8463  0E49  0829               	movf	??___ftdiv+3,w
  8464  0E4A  06AF               	xorwf	___ftdiv@sign,f
  8465  0E4B  3080               	movlw	128
  8466  0E4C  00A6               	movwf	??___ftdiv
  8467  0E4D  0826               	movf	??___ftdiv,w
  8468  0E4E  05AF               	andwf	___ftdiv@sign,f
  8469  0E4F  17A4               	bsf	___ftdiv@f1+1,7
  8470  0E50  30FF               	movlw	255
  8471  0E51  05A3               	andwf	___ftdiv@f1,f
  8472  0E52  30FF               	movlw	255
  8473  0E53  05A4               	andwf	___ftdiv@f1+1,f
  8474  0E54  3000               	movlw	0
  8475  0E55  05A5               	andwf	___ftdiv@f1+2,f
  8476  0E56  17A1               	bsf	___ftdiv@f2+1,7
  8477  0E57  30FF               	movlw	255
  8478  0E58  05A0               	andwf	___ftdiv@f2,f
  8479  0E59  30FF               	movlw	255
  8480  0E5A  05A1               	andwf	___ftdiv@f2+1,f
  8481  0E5B  3000               	movlw	0
  8482  0E5C  05A2               	andwf	___ftdiv@f2+2,f
  8483  0E5D  3018               	movlw	24
  8484  0E5E  00A6               	movwf	??___ftdiv
  8485  0E5F  0826               	movf	??___ftdiv,w
  8486  0E60  00AA               	movwf	___ftdiv@cntr
  8487  0E61                     l2910:	
  8488  0E61  3001               	movlw	1
  8489  0E62                     u2995:	
  8490  0E62  35AB               	lslf	___ftdiv@f3,f
  8491  0E63  0DAC               	rlf	___ftdiv@f3+1,f
  8492  0E64  0DAD               	rlf	___ftdiv@f3+2,f
  8493  0E65  0B89               	decfsz	9,f
  8494  0E66  2E62               	goto	u2995
  8495  0E67  0822               	movf	___ftdiv@f2+2,w
  8496  0E68  0225               	subwf	___ftdiv@f1+2,w
  8497  0E69  1D03               	skipz
  8498  0E6A  2E71               	goto	u3005
  8499  0E6B  0821               	movf	___ftdiv@f2+1,w
  8500  0E6C  0224               	subwf	___ftdiv@f1+1,w
  8501  0E6D  1D03               	skipz
  8502  0E6E  2E71               	goto	u3005
  8503  0E6F  0820               	movf	___ftdiv@f2,w
  8504  0E70  0223               	subwf	___ftdiv@f1,w
  8505  0E71                     u3005:	
  8506  0E71  1C03               	skipc
  8507  0E72  2E7A               	goto	l2918
  8508  0E73  0820               	movf	___ftdiv@f2,w
  8509  0E74  02A3               	subwf	___ftdiv@f1,f
  8510  0E75  0821               	movf	___ftdiv@f2+1,w
  8511  0E76  3BA4               	subwfb	___ftdiv@f1+1,f
  8512  0E77  0822               	movf	___ftdiv@f2+2,w
  8513  0E78  3BA5               	subwfb	___ftdiv@f1+2,f
  8514  0E79  142B               	bsf	___ftdiv@f3,0
  8515  0E7A                     l2918:	
  8516  0E7A  3001               	movlw	1
  8517  0E7B                     u3015:	
  8518  0E7B  35A3               	lslf	___ftdiv@f1,f
  8519  0E7C  0DA4               	rlf	___ftdiv@f1+1,f
  8520  0E7D  0DA5               	rlf	___ftdiv@f1+2,f
  8521  0E7E  0B89               	decfsz	9,f
  8522  0E7F  2E7B               	goto	u3015
  8523  0E80  3001               	movlw	1
  8524  0E81  02AA               	subwf	___ftdiv@cntr,f
  8525  0E82  1D03               	btfss	3,2
  8526  0E83  2E61               	goto	l2910
  8527  0E84  082B               	movf	___ftdiv@f3,w
  8528  0E85  00F0               	movwf	___ftpack@arg
  8529  0E86  082C               	movf	___ftdiv@f3+1,w
  8530  0E87  00F1               	movwf	___ftpack@arg+1
  8531  0E88  082D               	movf	___ftdiv@f3+2,w
  8532  0E89  00F2               	movwf	___ftpack@arg+2
  8533  0E8A  082E               	movf	___ftdiv@exp,w
  8534  0E8B  00A6               	movwf	??___ftdiv
  8535  0E8C  0826               	movf	??___ftdiv,w
  8536  0E8D  00F3               	movwf	___ftpack@exp
  8537  0E8E  082F               	movf	___ftdiv@sign,w
  8538  0E8F  00A7               	movwf	??___ftdiv+1
  8539  0E90  0827               	movf	??___ftdiv+1,w
  8540  0E91  00F4               	movwf	___ftpack@sign
  8541  0E92  318C  240D         	fcall	___ftpack
  8542  0E94  0870               	movf	?___ftpack,w
  8543  0E95  0020               	movlb	0	; select bank0
  8544  0E96  00A0               	movwf	?___ftdiv
  8545  0E97  0871               	movf	?___ftpack+1,w
  8546  0E98  00A1               	movwf	?___ftdiv+1
  8547  0E99  0872               	movf	?___ftpack+2,w
  8548  0E9A  00A2               	movwf	?___ftdiv+2
  8549  0E9B  0008               	return
  8550  0E9C                     __end_of___ftdiv:	
  8551                           
  8552                           	psect	text18
  8553  0CEC                     __ptext18:	
  8554 ;; *************** function ___aldiv *****************
  8555 ;; Defined at:
  8556 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  divisor         4    0[COMMON] long 
  8559 ;;  dividend        4    4[COMMON] long 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  quotient        4    2[BANK0 ] long 
  8562 ;;  sign            1    1[BANK0 ] unsigned char 
  8563 ;;  counter         1    0[BANK0 ] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  4    0[COMMON] long 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;Total ram usage:       15 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_main
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           
  8587                           ;psect for function ___aldiv
  8588  0CEC                     ___aldiv:	
  8589                           
  8590                           ;incstack = 0
  8591                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8592  0CEC  0020               	movlb	0	; select bank0
  8593  0CED  01A1               	clrf	___aldiv@sign
  8594  0CEE  1FF3               	btfss	___aldiv@divisor+3,7
  8595  0CEF  2CFD               	goto	l533
  8596  0CF0  09F0               	comf	___aldiv@divisor,f
  8597  0CF1  09F1               	comf	___aldiv@divisor+1,f
  8598  0CF2  09F2               	comf	___aldiv@divisor+2,f
  8599  0CF3  09F3               	comf	___aldiv@divisor+3,f
  8600  0CF4  0AF0               	incf	___aldiv@divisor,f
  8601  0CF5  1903               	skipnz
  8602  0CF6  0AF1               	incf	___aldiv@divisor+1,f
  8603  0CF7  1903               	skipnz
  8604  0CF8  0AF2               	incf	___aldiv@divisor+2,f
  8605  0CF9  1903               	skipnz
  8606  0CFA  0AF3               	incf	___aldiv@divisor+3,f
  8607  0CFB  01A1               	clrf	___aldiv@sign
  8608  0CFC  0AA1               	incf	___aldiv@sign,f
  8609  0CFD                     l533:	
  8610  0CFD  1FF7               	btfss	___aldiv@dividend+3,7
  8611  0CFE  2D0E               	goto	l2854
  8612  0CFF  09F4               	comf	___aldiv@dividend,f
  8613  0D00  09F5               	comf	___aldiv@dividend+1,f
  8614  0D01  09F6               	comf	___aldiv@dividend+2,f
  8615  0D02  09F7               	comf	___aldiv@dividend+3,f
  8616  0D03  0AF4               	incf	___aldiv@dividend,f
  8617  0D04  1903               	skipnz
  8618  0D05  0AF5               	incf	___aldiv@dividend+1,f
  8619  0D06  1903               	skipnz
  8620  0D07  0AF6               	incf	___aldiv@dividend+2,f
  8621  0D08  1903               	skipnz
  8622  0D09  0AF7               	incf	___aldiv@dividend+3,f
  8623  0D0A  3001               	movlw	1
  8624  0D0B  00F8               	movwf	??___aldiv
  8625  0D0C  0878               	movf	??___aldiv,w
  8626  0D0D  06A1               	xorwf	___aldiv@sign,f
  8627  0D0E                     l2854:	
  8628  0D0E  3000               	movlw	0
  8629  0D0F  00A5               	movwf	___aldiv@quotient+3
  8630  0D10  3000               	movlw	0
  8631  0D11  00A4               	movwf	___aldiv@quotient+2
  8632  0D12  3000               	movlw	0
  8633  0D13  00A3               	movwf	___aldiv@quotient+1
  8634  0D14  3000               	movlw	0
  8635  0D15  00A2               	movwf	___aldiv@quotient
  8636  0D16  0873               	movf	___aldiv@divisor+3,w
  8637  0D17  0472               	iorwf	___aldiv@divisor+2,w
  8638  0D18  0471               	iorwf	___aldiv@divisor+1,w
  8639  0D19  0470               	iorwf	___aldiv@divisor,w
  8640  0D1A  1903               	skipnz
  8641  0D1B  2D57               	goto	l2876
  8642  0D1C  01A0               	clrf	___aldiv@counter
  8643  0D1D  0AA0               	incf	___aldiv@counter,f
  8644  0D1E                     l2862:	
  8645  0D1E  1BF3               	btfsc	___aldiv@divisor+3,7
  8646  0D1F  2D2C               	goto	l2864
  8647  0D20  3001               	movlw	1
  8648  0D21                     u2885:	
  8649  0D21  35F0               	lslf	___aldiv@divisor,f
  8650  0D22  0DF1               	rlf	___aldiv@divisor+1,f
  8651  0D23  0DF2               	rlf	___aldiv@divisor+2,f
  8652  0D24  0DF3               	rlf	___aldiv@divisor+3,f
  8653  0D25  0B89               	decfsz	9,f
  8654  0D26  2D21               	goto	u2885
  8655  0D27  3001               	movlw	1
  8656  0D28  00F8               	movwf	??___aldiv
  8657  0D29  0878               	movf	??___aldiv,w
  8658  0D2A  07A0               	addwf	___aldiv@counter,f
  8659  0D2B  2D1E               	goto	l2862
  8660  0D2C                     l2864:	
  8661  0D2C  3001               	movlw	1
  8662  0D2D                     u2905:	
  8663  0D2D  35A2               	lslf	___aldiv@quotient,f
  8664  0D2E  0DA3               	rlf	___aldiv@quotient+1,f
  8665  0D2F  0DA4               	rlf	___aldiv@quotient+2,f
  8666  0D30  0DA5               	rlf	___aldiv@quotient+3,f
  8667  0D31  0B89               	decfsz	9,f
  8668  0D32  2D2D               	goto	u2905
  8669  0D33  0873               	movf	___aldiv@divisor+3,w
  8670  0D34  0277               	subwf	___aldiv@dividend+3,w
  8671  0D35  1D03               	skipz
  8672  0D36  2D41               	goto	u2915
  8673  0D37  0872               	movf	___aldiv@divisor+2,w
  8674  0D38  0276               	subwf	___aldiv@dividend+2,w
  8675  0D39  1D03               	skipz
  8676  0D3A  2D41               	goto	u2915
  8677  0D3B  0871               	movf	___aldiv@divisor+1,w
  8678  0D3C  0275               	subwf	___aldiv@dividend+1,w
  8679  0D3D  1D03               	skipz
  8680  0D3E  2D41               	goto	u2915
  8681  0D3F  0870               	movf	___aldiv@divisor,w
  8682  0D40  0274               	subwf	___aldiv@dividend,w
  8683  0D41                     u2915:	
  8684  0D41  1C03               	skipc
  8685  0D42  2D4C               	goto	l2872
  8686  0D43  0870               	movf	___aldiv@divisor,w
  8687  0D44  02F4               	subwf	___aldiv@dividend,f
  8688  0D45  0871               	movf	___aldiv@divisor+1,w
  8689  0D46  3BF5               	subwfb	___aldiv@dividend+1,f
  8690  0D47  0872               	movf	___aldiv@divisor+2,w
  8691  0D48  3BF6               	subwfb	___aldiv@dividend+2,f
  8692  0D49  0873               	movf	___aldiv@divisor+3,w
  8693  0D4A  3BF7               	subwfb	___aldiv@dividend+3,f
  8694  0D4B  1422               	bsf	___aldiv@quotient,0
  8695  0D4C                     l2872:	
  8696  0D4C  3001               	movlw	1
  8697  0D4D                     u2925:	
  8698  0D4D  36F3               	lsrf	___aldiv@divisor+3,f
  8699  0D4E  0CF2               	rrf	___aldiv@divisor+2,f
  8700  0D4F  0CF1               	rrf	___aldiv@divisor+1,f
  8701  0D50  0CF0               	rrf	___aldiv@divisor,f
  8702  0D51  0B89               	decfsz	9,f
  8703  0D52  2D4D               	goto	u2925
  8704  0D53  3001               	movlw	1
  8705  0D54  02A0               	subwf	___aldiv@counter,f
  8706  0D55  1D03               	btfss	3,2
  8707  0D56  2D2C               	goto	l2864
  8708  0D57                     l2876:	
  8709  0D57  0821               	movf	___aldiv@sign,w
  8710  0D58  1903               	btfsc	3,2
  8711  0D59  2D65               	goto	l2880
  8712  0D5A  09A2               	comf	___aldiv@quotient,f
  8713  0D5B  09A3               	comf	___aldiv@quotient+1,f
  8714  0D5C  09A4               	comf	___aldiv@quotient+2,f
  8715  0D5D  09A5               	comf	___aldiv@quotient+3,f
  8716  0D5E  0AA2               	incf	___aldiv@quotient,f
  8717  0D5F  1903               	skipnz
  8718  0D60  0AA3               	incf	___aldiv@quotient+1,f
  8719  0D61  1903               	skipnz
  8720  0D62  0AA4               	incf	___aldiv@quotient+2,f
  8721  0D63  1903               	skipnz
  8722  0D64  0AA5               	incf	___aldiv@quotient+3,f
  8723  0D65                     l2880:	
  8724  0D65  0825               	movf	___aldiv@quotient+3,w
  8725  0D66  00F3               	movwf	?___aldiv+3
  8726  0D67  0824               	movf	___aldiv@quotient+2,w
  8727  0D68  00F2               	movwf	?___aldiv+2
  8728  0D69  0823               	movf	___aldiv@quotient+1,w
  8729  0D6A  00F1               	movwf	?___aldiv+1
  8730  0D6B  0822               	movf	___aldiv@quotient,w
  8731  0D6C  00F0               	movwf	?___aldiv
  8732  0D6D  0008               	return
  8733  0D6E                     __end_of___aldiv:	
  8734                           
  8735                           	psect	text19
  8736  0A9C                     __ptext19:	
  8737 ;; *************** function _SYSTEM_Initialize *****************
  8738 ;; Defined at:
  8739 ;;		line 37 in file "system.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;Total ram usage:        2 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    3
  8760 ;; This function calls:
  8761 ;;		_ADCC_Initialize
  8762 ;;		_InitCustomChars
  8763 ;;		_Init_PID
  8764 ;;		_LCD_Clear
  8765 ;;		_LCD_Init
  8766 ;;		_OSCILLATOR_Initialize
  8767 ;;		_PIN_MANAGER_Initialize
  8768 ;;		_PWM6_Initialize
  8769 ;;		_TMR0_Initialize
  8770 ;;		_TMR2_Initialize
  8771 ;; This function is called by:
  8772 ;;		_main
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           
  8777                           ;psect for function _SYSTEM_Initialize
  8778  0A9C                     _SYSTEM_Initialize:	
  8779                           
  8780                           ;system.c: 39: PIN_MANAGER_Initialize();
  8781                           
  8782                           ;incstack = 0
  8783                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8784  0A9C  3189  21BF  318A   	fcall	_PIN_MANAGER_Initialize
  8785                           
  8786                           ;system.c: 40: OSCILLATOR_Initialize();
  8787  0A9F  3197  27EC  318A   	fcall	_OSCILLATOR_Initialize
  8788                           
  8789                           ;system.c: 41: FVRCON = 0x00;
  8790  0AA2  0032               	movlb	18	; select bank18
  8791  0AA3  018C               	clrf	12	;volatile
  8792                           
  8793                           ;system.c: 42: ADCC_Initialize();
  8794  0AA4  3188  20A3  318A   	fcall	_ADCC_Initialize
  8795                           
  8796                           ;system.c: 43: PWM6_Initialize();
  8797  0AA7  3180  2004  318A   	fcall	_PWM6_Initialize
  8798                           
  8799                           ;system.c: 44: TMR0_Initialize();
  8800  0AAA  3188  201A  318A   	fcall	_TMR0_Initialize
  8801                           
  8802                           ;system.c: 45: TMR2_Initialize();
  8803  0AAD  3188  2029  318A   	fcall	_TMR2_Initialize
  8804                           
  8805                           ;system.c: 46: LCD_Init(0X00);
  8806  0AB0  3000               	movlw	0
  8807  0AB1  318C  2471  318A   	fcall	_LCD_Init
  8808                           
  8809                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8810  0AB4  3041               	movlw	65
  8811  0AB5  00F8               	movwf	??_SYSTEM_Initialize+1
  8812  0AB6  30EE               	movlw	238
  8813  0AB7  00F7               	movwf	??_SYSTEM_Initialize
  8814  0AB8                     u3317:	
  8815  0AB8  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8816  0AB9  2AB8               	goto	u3317
  8817  0ABA  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8818  0ABB  2AB8               	goto	u3317
  8819  0ABC  0000               	nop
  8820                           
  8821                           ;system.c: 48: LCD_Clear();
  8822  0ABD  3197  27E4  318A   	fcall	_LCD_Clear
  8823                           
  8824                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8825  0AC0  3021               	movlw	33
  8826  0AC1  00F8               	movwf	??_SYSTEM_Initialize+1
  8827  0AC2  3076               	movlw	118
  8828  0AC3  00F7               	movwf	??_SYSTEM_Initialize
  8829  0AC4                     u3327:	
  8830  0AC4  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8831  0AC5  2AC4               	goto	u3327
  8832  0AC6  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8833  0AC7  2AC4               	goto	u3327
  8834  0AC8  0000               	nop
  8835                           
  8836                           ;system.c: 50: InitCustomChars();
  8837  0AC9  3189  2149  318A   	fcall	_InitCustomChars
  8838                           
  8839                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8840  0ACC  3041               	movlw	65
  8841  0ACD  00F8               	movwf	??_SYSTEM_Initialize+1
  8842  0ACE  30EE               	movlw	238
  8843  0ACF  00F7               	movwf	??_SYSTEM_Initialize
  8844  0AD0                     u3337:	
  8845  0AD0  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8846  0AD1  2AD0               	goto	u3337
  8847  0AD2  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8848  0AD3  2AD0               	goto	u3337
  8849  0AD4  0000               	nop
  8850                           
  8851                           ;system.c: 52: Init_PID();
  8852  0AD5  3189  216F         	fcall	_Init_PID
  8853  0AD7  0008               	return
  8854  0AD8                     __end_of_SYSTEM_Initialize:	
  8855                           
  8856                           	psect	text20
  8857  0829                     __ptext20:	
  8858 ;; *************** function _TMR2_Initialize *****************
  8859 ;; Defined at:
  8860 ;;		line 15 in file "timers.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_SYSTEM_Initialize
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function _TMR2_Initialize
  8889  0829                     _TMR2_Initialize:	
  8890                           
  8891                           ;timers.c: 17: T2CON = 0x7F;
  8892                           
  8893                           ;incstack = 0
  8894                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8895  0829  307F               	movlw	127
  8896  082A  0025               	movlb	5	; select bank5
  8897  082B  008E               	movwf	14	;volatile
  8898                           
  8899                           ;timers.c: 18: T2CLKCON = 0x01;
  8900  082C  3001               	movlw	1
  8901  082D  0090               	movwf	16	;volatile
  8902                           
  8903                           ;timers.c: 19: T2HLT = 0x00;
  8904  082E  018F               	clrf	15	;volatile
  8905                           
  8906                           ;timers.c: 20: T2RST = 0x00;
  8907  082F  0191               	clrf	17	;volatile
  8908                           
  8909                           ;timers.c: 21: T2PR = 0xFF;
  8910  0830  30FF               	movlw	255
  8911  0831  008D               	movwf	13	;volatile
  8912                           
  8913                           ;timers.c: 22: T2TMR = 0x00;
  8914  0832  018C               	clrf	12	;volatile
  8915                           
  8916                           ;timers.c: 23: PIR4bits.TMR2IF = 0;
  8917  0833  002E               	movlb	14	; select bank14
  8918  0834  1090               	bcf	16,1	;volatile
  8919                           
  8920                           ;timers.c: 24: T2CONbits.TMR2ON = 1;
  8921  0835  0025               	movlb	5	; select bank5
  8922  0836  178E               	bsf	14,7	;volatile
  8923  0837  0008               	return
  8924  0838                     __end_of_TMR2_Initialize:	
  8925                           
  8926                           	psect	text21
  8927  081A                     __ptext21:	
  8928 ;; *************** function _TMR0_Initialize *****************
  8929 ;; Defined at:
  8930 ;;		line 3 in file "timers.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;		None
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;Total ram usage:        0 bytes
  8949 ;; Hardware stack levels used:    1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_SYSTEM_Initialize
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           
  8958                           ;psect for function _TMR0_Initialize
  8959  081A                     _TMR0_Initialize:	
  8960                           
  8961                           ;timers.c: 5: T0CON0 = 0x10;
  8962                           
  8963                           ;incstack = 0
  8964                           ; Regs used in _TMR0_Initialize: [wreg]
  8965  081A  3010               	movlw	16
  8966  081B  0020               	movlb	0	; select bank0
  8967  081C  009E               	movwf	30	;volatile
  8968                           
  8969                           ;timers.c: 6: T0CON1 = 0x42;
  8970  081D  3042               	movlw	66
  8971  081E  009F               	movwf	31	;volatile
  8972                           
  8973                           ;timers.c: 7: TMR0H = 0x24;
  8974  081F  3024               	movlw	36
  8975  0820  009D               	movwf	29	;volatile
  8976                           
  8977                           ;timers.c: 8: TMR0L = 0x9F;
  8978  0821  309F               	movlw	159
  8979  0822  009C               	movwf	28	;volatile
  8980                           
  8981                           ;timers.c: 9: PIE0bits.TMR0IE = 1;
  8982  0823  002E               	movlb	14	; select bank14
  8983  0824  1696               	bsf	22,5	;volatile
  8984                           
  8985                           ;timers.c: 10: PIR0bits.TMR0IF = 0;
  8986  0825  128C               	bcf	12,5	;volatile
  8987                           
  8988                           ;timers.c: 11: T0CON0bits.T0EN = 1;
  8989  0826  0020               	movlb	0	; select bank0
  8990  0827  179E               	bsf	30,7	;volatile
  8991  0828  0008               	return
  8992  0829                     __end_of_TMR0_Initialize:	
  8993                           
  8994                           	psect	text22
  8995  0004                     __ptext22:	
  8996 ;; *************** function _PWM6_Initialize *****************
  8997 ;; Defined at:
  8998 ;;		line 4 in file "pwm6.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;Total ram usage:        0 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_SYSTEM_Initialize
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _PWM6_Initialize
  9027  0004                     _PWM6_Initialize:	
  9028                           
  9029                           ;pwm6.c: 6: PWM6CON = 0x80;
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9033  0004  3080               	movlw	128
  9034  0005  0027               	movlb	7	; select bank7
  9035  0006  008E               	movwf	14	;volatile
  9036                           
  9037                           ;pwm6.c: 8: PWM6DCH = 0xFF;
  9038  0007  30FF               	movlw	255
  9039  0008  008D               	movwf	13	;volatile
  9040                           
  9041                           ;pwm6.c: 10: PWM6DCL = 0xC0;
  9042  0009  30C0               	movlw	192
  9043  000A  008C               	movwf	12	;volatile
  9044                           
  9045                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  9046  000B  0024               	movlb	4	; select bank4
  9047  000C  081F               	movf	31,w	;volatile
  9048  000D  39F3               	andlw	-13
  9049  000E  3804               	iorlw	4
  9050  000F  009F               	movwf	31	;volatile
  9051  0010  0008               	return
  9052  0011                     __end_of_PWM6_Initialize:	
  9053                           
  9054                           	psect	text23
  9055  09BF                     __ptext23:	
  9056 ;; *************** function _PIN_MANAGER_Initialize *****************
  9057 ;; Defined at:
  9058 ;;		line 5 in file "pin_manager.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  state           1    0[COMMON] unsigned char 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:        1 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_SYSTEM_Initialize
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _PIN_MANAGER_Initialize
  9087  09BF                     _PIN_MANAGER_Initialize:	
  9088                           
  9089                           ;pin_manager.c: 7: LATA = 0x00;
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9093  09BF  0020               	movlb	0	; select bank0
  9094  09C0  0196               	clrf	22	;volatile
  9095                           
  9096                           ;pin_manager.c: 8: LATB = 0x0;
  9097  09C1  0197               	clrf	23	;volatile
  9098                           
  9099                           ;pin_manager.c: 9: LATC = 0x0;
  9100  09C2  0198               	clrf	24	;volatile
  9101                           
  9102                           ;pin_manager.c: 11: WPUA = 0x18;
  9103  09C3  3018               	movlw	24
  9104  09C4  003E               	movlb	30	; select bank30
  9105  09C5  00B9               	movwf	57	;volatile
  9106                           
  9107                           ;pin_manager.c: 12: WPUB = 0x00;
  9108  09C6  01C4               	clrf	68	;volatile
  9109                           
  9110                           ;pin_manager.c: 13: WPUC = 0x00;
  9111  09C7  01CF               	clrf	79	;volatile
  9112                           
  9113                           ;pin_manager.c: 14: WPUE = 0x8;
  9114  09C8  3008               	movlw	8
  9115  09C9  00E5               	movwf	101	;volatile
  9116                           
  9117                           ;pin_manager.c: 16: TRISA = 0x1C;
  9118  09CA  301C               	movlw	28
  9119  09CB  0020               	movlb	0	; select bank0
  9120  09CC  0091               	movwf	17	;volatile
  9121                           
  9122                           ;pin_manager.c: 17: TRISB = 0x00;
  9123  09CD  0192               	clrf	18	;volatile
  9124                           
  9125                           ;pin_manager.c: 18: TRISC = 0x10;
  9126  09CE  3010               	movlw	16
  9127  09CF  0093               	movwf	19	;volatile
  9128                           
  9129                           ;pin_manager.c: 20: ANSELA = 0x04;
  9130  09D0  3004               	movlw	4
  9131  09D1  003E               	movlb	30	; select bank30
  9132  09D2  00B8               	movwf	56	;volatile
  9133                           
  9134                           ;pin_manager.c: 21: ANSELB = 0x00;
  9135  09D3  01C3               	clrf	67	;volatile
  9136                           
  9137                           ;pin_manager.c: 22: ANSELC = 0x00;
  9138  09D4  01CE               	clrf	78	;volatile
  9139                           
  9140                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9141  09D5  002E               	movlb	14	; select bank14
  9142  09D6  1216               	bcf	22,4	;volatile
  9143                           
  9144                           ;pin_manager.c: 25: bool state = GIE;
  9145  09D7  3000               	movlw	0
  9146  09D8  1B8B               	btfsc	11,7	;volatile
  9147  09D9  3001               	movlw	1
  9148  09DA  00F0               	movwf	PIN_MANAGER_Initialize@state
  9149                           
  9150                           ;pin_manager.c: 26: GIE = 0;
  9151  09DB  138B               	bcf	11,7	;volatile
  9152                           
  9153                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9154  09DC  3055               	movlw	85
  9155  09DD  003D               	movlb	29	; select bank29
  9156  09DE  008F               	movwf	15	;volatile
  9157                           
  9158                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9159  09DF  30AA               	movlw	170
  9160  09E0  008F               	movwf	15	;volatile
  9161                           
  9162                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9163  09E1  100F               	bcf	15,0	;volatile
  9164                           
  9165                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  9166  09E2  300E               	movlw	14
  9167  09E3  003E               	movlb	30	; select bank30
  9168  09E4  0091               	movwf	17	;volatile
  9169                           
  9170                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  9171  09E5  3055               	movlw	85
  9172  09E6  003D               	movlb	29	; select bank29
  9173  09E7  008F               	movwf	15	;volatile
  9174                           
  9175                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  9176  09E8  30AA               	movlw	170
  9177  09E9  008F               	movwf	15	;volatile
  9178                           
  9179                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  9180  09EA  140F               	bsf	15,0	;volatile
  9181                           
  9182                           ;pin_manager.c: 39: GIE = state;
  9183  09EB  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9184  09EC  29EF               	goto	u2530
  9185  09ED  178B               	bsf	11,7	;volatile
  9186  09EE  0008               	return
  9187  09EF                     u2530:	
  9188  09EF  138B               	bcf	11,7	;volatile
  9189  09F0  0008               	return
  9190  09F1                     __end_of_PIN_MANAGER_Initialize:	
  9191                           
  9192                           	psect	text24
  9193  17EC                     __ptext24:	
  9194 ;; *************** function _OSCILLATOR_Initialize *****************
  9195 ;; Defined at:
  9196 ;;		line 55 in file "system.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_SYSTEM_Initialize
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function _OSCILLATOR_Initialize
  9225  17EC                     _OSCILLATOR_Initialize:	
  9226                           
  9227                           ;system.c: 57: OSCCON1 = 0x60;
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9231  17EC  3060               	movlw	96
  9232  17ED  0031               	movlb	17	; select bank17
  9233  17EE  008D               	movwf	13	;volatile
  9234                           
  9235                           ;system.c: 58: OSCCON3 = 0x00;
  9236  17EF  018F               	clrf	15	;volatile
  9237                           
  9238                           ;system.c: 59: OSCEN = 0x00;
  9239  17F0  0191               	clrf	17	;volatile
  9240                           
  9241                           ;system.c: 60: OSCFRQ = 0x00;
  9242  17F1  0193               	clrf	19	;volatile
  9243                           
  9244                           ;system.c: 61: OSCTUNE = 0x00;
  9245  17F2  0192               	clrf	18	;volatile
  9246  17F3  0008               	return
  9247  17F4                     __end_of_OSCILLATOR_Initialize:	
  9248                           
  9249                           	psect	text25
  9250  0C71                     __ptext25:	
  9251 ;; *************** function _LCD_Init *****************
  9252 ;; Defined at:
  9253 ;;		line 154 in file "lcd.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  style           1    wreg     unsigned char 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  style           1    5[COMMON] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;Total ram usage:        3 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    2
  9274 ;; This function calls:
  9275 ;;		_LCD_Cmd
  9276 ;;		_LCD_Port
  9277 ;; This function is called by:
  9278 ;;		_SYSTEM_Initialize
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _LCD_Init
  9284  0C71                     _LCD_Init:	
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9288                           ;LCD_Init@style stored from wreg
  9289  0C71  00F5               	movwf	LCD_Init@style
  9290                           
  9291                           ;lcd.c: 156: LCD_Port(0x00);
  9292  0C72  3000               	movlw	0
  9293  0C73  3188  2073  318C   	fcall	_LCD_Port
  9294                           
  9295                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  9296  0C76  3021               	movlw	33
  9297  0C77  00F4               	movwf	??_LCD_Init+1
  9298  0C78  3076               	movlw	118
  9299  0C79  00F3               	movwf	??_LCD_Init
  9300  0C7A                     u3347:	
  9301  0C7A  0BF3               	decfsz	??_LCD_Init,f
  9302  0C7B  2C7A               	goto	u3347
  9303  0C7C  0BF4               	decfsz	??_LCD_Init+1,f
  9304  0C7D  2C7A               	goto	u3347
  9305  0C7E  0000               	nop
  9306                           
  9307                           ;lcd.c: 160: LCD_Cmd(0x03);
  9308  0C7F  3003               	movlw	3
  9309  0C80  3188  2038  318C   	fcall	_LCD_Cmd
  9310                           
  9311                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  9312  0C83  3004               	movlw	4
  9313  0C84  00F4               	movwf	??_LCD_Init+1
  9314  0C85  303D               	movlw	61
  9315  0C86  00F3               	movwf	??_LCD_Init
  9316  0C87                     u3357:	
  9317  0C87  0BF3               	decfsz	??_LCD_Init,f
  9318  0C88  2C87               	goto	u3357
  9319  0C89  0BF4               	decfsz	??_LCD_Init+1,f
  9320  0C8A  2C87               	goto	u3357
  9321  0C8B  3200               	nop2
  9322                           
  9323                           ;lcd.c: 164: LCD_Cmd(0x03);
  9324  0C8C  3003               	movlw	3
  9325  0C8D  3188  2038  318C   	fcall	_LCD_Cmd
  9326                           
  9327                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9328  0C90  3009               	movlw	9
  9329  0C91  00F3               	movwf	??_LCD_Init
  9330  0C92                     u3367:	
  9331  0C92  0BF3               	decfsz	??_LCD_Init,f
  9332  0C93  2C92               	goto	u3367
  9333  0C94  3200               	nop2	;nop
  9334                           
  9335                           ;lcd.c: 168: LCD_Cmd(0x03);
  9336  0C95  3003               	movlw	3
  9337  0C96  3188  2038  318C   	fcall	_LCD_Cmd
  9338                           
  9339                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9340  0C99  3009               	movlw	9
  9341  0C9A  00F3               	movwf	??_LCD_Init
  9342  0C9B                     u3377:	
  9343  0C9B  0BF3               	decfsz	??_LCD_Init,f
  9344  0C9C  2C9B               	goto	u3377
  9345  0C9D  3200               	nop2	;nop
  9346                           
  9347                           ;lcd.c: 172: LCD_Cmd(0x02);
  9348  0C9E  3002               	movlw	2
  9349  0C9F  3188  2038  318C   	fcall	_LCD_Cmd
  9350                           
  9351                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9352  0CA2  3009               	movlw	9
  9353  0CA3  00F3               	movwf	??_LCD_Init
  9354  0CA4                     u3387:	
  9355  0CA4  0BF3               	decfsz	??_LCD_Init,f
  9356  0CA5  2CA4               	goto	u3387
  9357  0CA6  3200               	nop2	;nop
  9358                           
  9359                           ;lcd.c: 176: LCD_Cmd(0x2);
  9360  0CA7  3002               	movlw	2
  9361  0CA8  3188  2038  318C   	fcall	_LCD_Cmd
  9362                           
  9363                           ;lcd.c: 178: LCD_Cmd(0x8);
  9364  0CAB  3008               	movlw	8
  9365  0CAC  3188  2038  318C   	fcall	_LCD_Cmd
  9366                           
  9367                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9368  0CAF  3009               	movlw	9
  9369  0CB0  00F3               	movwf	??_LCD_Init
  9370  0CB1                     u3397:	
  9371  0CB1  0BF3               	decfsz	??_LCD_Init,f
  9372  0CB2  2CB1               	goto	u3397
  9373  0CB3  3200               	nop2	;nop
  9374                           
  9375                           ;lcd.c: 182: LCD_Cmd(0x0);
  9376  0CB4  3000               	movlw	0
  9377  0CB5  3188  2038  318C   	fcall	_LCD_Cmd
  9378                           
  9379                           ;lcd.c: 184: LCD_Cmd(0x8);
  9380  0CB8  3008               	movlw	8
  9381  0CB9  3188  2038  318C   	fcall	_LCD_Cmd
  9382                           
  9383                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9384  0CBC  3009               	movlw	9
  9385  0CBD  00F3               	movwf	??_LCD_Init
  9386  0CBE                     u3407:	
  9387  0CBE  0BF3               	decfsz	??_LCD_Init,f
  9388  0CBF  2CBE               	goto	u3407
  9389  0CC0  3200               	nop2	;nop
  9390                           
  9391                           ;lcd.c: 188: LCD_Cmd(0x0);
  9392  0CC1  3000               	movlw	0
  9393  0CC2  3188  2038  318C   	fcall	_LCD_Cmd
  9394                           
  9395                           ;lcd.c: 190: LCD_Cmd(0x1);
  9396  0CC5  3001               	movlw	1
  9397  0CC6  3188  2038  318C   	fcall	_LCD_Cmd
  9398                           
  9399                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  9400  0CC9  30F9               	movlw	249
  9401  0CCA  00F3               	movwf	??_LCD_Init
  9402  0CCB                     u3417:	
  9403  0CCB  3200               	nop2
  9404  0CCC  0BF3               	decfsz	??_LCD_Init,f
  9405  0CCD  2CCB               	goto	u3417
  9406  0CCE  3200               	nop2	;nop
  9407  0CCF  3200               	nop2	;nop
  9408                           
  9409                           ;lcd.c: 194: LCD_Cmd(0x0);
  9410  0CD0  3000               	movlw	0
  9411  0CD1  3188  2038  318C   	fcall	_LCD_Cmd
  9412                           
  9413                           ;lcd.c: 196: LCD_Cmd(0x6);
  9414  0CD4  3006               	movlw	6
  9415  0CD5  3188  2038  318C   	fcall	_LCD_Cmd
  9416                           
  9417                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9418  0CD8  3009               	movlw	9
  9419  0CD9  00F3               	movwf	??_LCD_Init
  9420  0CDA                     u3427:	
  9421  0CDA  0BF3               	decfsz	??_LCD_Init,f
  9422  0CDB  2CDA               	goto	u3427
  9423  0CDC  3200               	nop2	;nop
  9424                           
  9425                           ;lcd.c: 200: LCD_Cmd(0x0);
  9426  0CDD  3000               	movlw	0
  9427  0CDE  3188  2038  318C   	fcall	_LCD_Cmd
  9428                           
  9429                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9430  0CE1  0875               	movf	LCD_Init@style,w
  9431  0CE2  380C               	iorlw	12
  9432  0CE3  3188  2038  318C   	fcall	_LCD_Cmd
  9433                           
  9434                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  9435  0CE6  3009               	movlw	9
  9436  0CE7  00F3               	movwf	??_LCD_Init
  9437  0CE8                     u3437:	
  9438  0CE8  0BF3               	decfsz	??_LCD_Init,f
  9439  0CE9  2CE8               	goto	u3437
  9440  0CEA  3200               	nop2	;nop
  9441  0CEB  0008               	return
  9442  0CEC                     __end_of_LCD_Init:	
  9443                           
  9444                           	psect	text26
  9445  17E4                     __ptext26:	
  9446 ;; *************** function _LCD_Clear *****************
  9447 ;; Defined at:
  9448 ;;		line 75 in file "lcd.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0, pclath, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;Total ram usage:        0 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    2
  9469 ;; This function calls:
  9470 ;;		_LCD_Cmd
  9471 ;; This function is called by:
  9472 ;;		_SYSTEM_Initialize
  9473 ;;		_tempSetpoint
  9474 ;;		_readButtons
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           
  9479                           ;psect for function _LCD_Clear
  9480  17E4                     _LCD_Clear:	
  9481                           
  9482                           ;lcd.c: 77: LCD_Cmd(0);
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9486  17E4  3000               	movlw	0
  9487  17E5  3188  2038  3197   	fcall	_LCD_Cmd
  9488                           
  9489                           ;lcd.c: 78: LCD_Cmd(1);
  9490  17E8  3001               	movlw	1
  9491  17E9  3188  2038         	fcall	_LCD_Cmd
  9492  17EB  0008               	return
  9493  17EC                     __end_of_LCD_Clear:	
  9494                           
  9495                           	psect	text27
  9496  096F                     __ptext27:	
  9497 ;; *************** function _Init_PID *****************
  9498 ;; Defined at:
  9499 ;;		line 12 in file "pid.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_SYSTEM_Initialize
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function _Init_PID
  9528  096F                     _Init_PID:	
  9529                           
  9530                           ;pid.c: 14: PID_Kp = 50;
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _Init_PID: [wreg+status,2]
  9534  096F  3000               	movlw	0
  9535  0970  0021               	movlb	1	; select bank1
  9536  0971  00CF               	movwf	_PID_Kp^(0+128)
  9537  0972  3048               	movlw	72
  9538  0973  00D0               	movwf	(_PID_Kp+1)^(0+128)
  9539  0974  3042               	movlw	66
  9540  0975  00D1               	movwf	(_PID_Kp+2)^(0+128)
  9541                           
  9542                           ;pid.c: 15: PID_Ki = 1;
  9543  0976  3000               	movlw	0
  9544  0977  00CC               	movwf	_PID_Ki^(0+128)
  9545  0978  3080               	movlw	128
  9546  0979  00CD               	movwf	(_PID_Ki+1)^(0+128)
  9547  097A  303F               	movlw	63
  9548  097B  00CE               	movwf	(_PID_Ki+2)^(0+128)
  9549                           
  9550                           ;pid.c: 16: PID_Kd = 300;
  9551  097C  3000               	movlw	0
  9552  097D  00C9               	movwf	_PID_Kd^(0+128)
  9553  097E  3096               	movlw	150
  9554  097F  00CA               	movwf	(_PID_Kd+1)^(0+128)
  9555  0980  3043               	movlw	67
  9556  0981  00CB               	movwf	(_PID_Kd+2)^(0+128)
  9557                           
  9558                           ;pid.c: 17: pidMinOutput = 0;
  9559  0982  01DC               	clrf	_pidMinOutput^(0+128)
  9560  0983  01DD               	clrf	(_pidMinOutput+1)^(0+128)
  9561                           
  9562                           ;pid.c: 18: pidMaxOutput = 1023;
  9563  0984  30FF               	movlw	255
  9564  0985  00DA               	movwf	_pidMaxOutput^(0+128)
  9565  0986  3003               	movlw	3
  9566  0987  00DB               	movwf	(_pidMaxOutput^(0+128)+1)
  9567                           
  9568                           ;pid.c: 19: pidIntegrated = 0;
  9569  0988  3000               	movlw	0
  9570  0989  00D2               	movwf	_pidIntegrated^(0+128)
  9571  098A  3000               	movlw	0
  9572  098B  00D3               	movwf	(_pidIntegrated+1)^(0+128)
  9573  098C  3000               	movlw	0
  9574  098D  00D4               	movwf	(_pidIntegrated+2)^(0+128)
  9575                           
  9576                           ;pid.c: 20: pidPrevInput = 0;
  9577  098E  3000               	movlw	0
  9578  098F  00D5               	movwf	_pidPrevInput^(0+128)
  9579  0990  3000               	movlw	0
  9580  0991  00D6               	movwf	(_pidPrevInput+1)^(0+128)
  9581  0992  3000               	movlw	0
  9582  0993  00D7               	movwf	(_pidPrevInput+2)^(0+128)
  9583  0994  0008               	return
  9584  0995                     __end_of_Init_PID:	
  9585                           
  9586                           	psect	text28
  9587  0949                     __ptext28:	
  9588 ;; *************** function _InitCustomChars *****************
  9589 ;; Defined at:
  9590 ;;		line 29 in file "lcd.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  i               1    6[COMMON] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;Total ram usage:        2 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    2
  9611 ;; This function calls:
  9612 ;;		_LCD_Cmd
  9613 ;;		_LCD_Write_Char
  9614 ;; This function is called by:
  9615 ;;		_SYSTEM_Initialize
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           
  9620                           ;psect for function _InitCustomChars
  9621  0949                     _InitCustomChars:	
  9622                           
  9623                           ;lcd.c: 31: uint8_t i;
  9624                           ;lcd.c: 32: LCD_Cmd(0x04);
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9628  0949  3004               	movlw	4
  9629  094A  3188  2038  3189   	fcall	_LCD_Cmd
  9630                           
  9631                           ;lcd.c: 33: LCD_Cmd(0x00);
  9632  094D  3000               	movlw	0
  9633  094E  3188  2038  3189   	fcall	_LCD_Cmd
  9634                           
  9635                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9636  0951  01F6               	clrf	InitCustomChars@i
  9637  0952  3018               	movlw	24
  9638  0953  0276               	subwf	InitCustomChars@i,w
  9639  0954  1803               	btfsc	3,0
  9640  0955  2967               	goto	l2544
  9641  0956                     l2538:	
  9642                           
  9643                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9644  0956  0876               	movf	InitCustomChars@i,w
  9645  0957  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9646  0958  0086               	movwf	6
  9647  0959  3001               	movlw	1	; select bank2/3
  9648  095A  0087               	movwf	7
  9649  095B  0801               	movf	1,w
  9650  095C  3189  2195  3189   	fcall	_LCD_Write_Char
  9651  095F  3001               	movlw	1
  9652  0960  00F5               	movwf	??_InitCustomChars
  9653  0961  0875               	movf	??_InitCustomChars,w
  9654  0962  07F6               	addwf	InitCustomChars@i,f
  9655  0963  3018               	movlw	24
  9656  0964  0276               	subwf	InitCustomChars@i,w
  9657  0965  1C03               	skipc
  9658  0966  2956               	goto	l2538
  9659  0967                     l2544:	
  9660                           
  9661                           ;lcd.c: 36: LCD_Cmd(0);
  9662  0967  3000               	movlw	0
  9663  0968  3188  2038  3189   	fcall	_LCD_Cmd
  9664                           
  9665                           ;lcd.c: 37: LCD_Cmd(2);
  9666  096B  3002               	movlw	2
  9667  096C  3188  2038         	fcall	_LCD_Cmd
  9668  096E  0008               	return
  9669  096F                     __end_of_InitCustomChars:	
  9670                           
  9671                           	psect	text29
  9672  0995                     __ptext29:	
  9673 ;; *************** function _LCD_Write_Char *****************
  9674 ;; Defined at:
  9675 ;;		line 223 in file "lcd.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  a               1    wreg     const unsigned char 
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;  a               1    4[COMMON] const unsigned char 
  9680 ;;  y               1    3[COMMON] unsigned char 
  9681 ;;  temp            1    2[COMMON] unsigned char 
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  1    wreg      void 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0, pclath, cstack
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;Total ram usage:        4 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    1
  9698 ;; This function calls:
  9699 ;;		_LCD_Port
  9700 ;; This function is called by:
  9701 ;;		_InitCustomChars
  9702 ;;		_LCD_Write_String
  9703 ;;		_LCD_Write_Int
  9704 ;;		_tempSetpoint
  9705 ;;		_readButtons
  9706 ;;		_main
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function _LCD_Write_Char
  9712  0995                     _LCD_Write_Char:	
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9716                           ;LCD_Write_Char@a stored from wreg
  9717  0995  00F4               	movwf	LCD_Write_Char@a
  9718                           
  9719                           ;lcd.c: 225: char temp,y;
  9720                           ;lcd.c: 226: temp = a&0x0F;
  9721  0996  0874               	movf	LCD_Write_Char@a,w
  9722  0997  390F               	andlw	15
  9723  0998  00F1               	movwf	??_LCD_Write_Char
  9724  0999  0871               	movf	??_LCD_Write_Char,w
  9725  099A  00F2               	movwf	LCD_Write_Char@temp
  9726                           
  9727                           ;lcd.c: 227: y = a&0xF0;
  9728  099B  0874               	movf	LCD_Write_Char@a,w
  9729  099C  39F0               	andlw	240
  9730  099D  00F1               	movwf	??_LCD_Write_Char
  9731  099E  0871               	movf	??_LCD_Write_Char,w
  9732  099F  00F3               	movwf	LCD_Write_Char@y
  9733                           
  9734                           ;lcd.c: 228: RB0 = 1;
  9735  09A0  0020               	movlb	0	; select bank0
  9736  09A1  140D               	bsf	13,0	;volatile
  9737                           
  9738                           ;lcd.c: 229: LCD_Port(y>>4);
  9739  09A2  0873               	movf	LCD_Write_Char@y,w
  9740  09A3  00F1               	movwf	??_LCD_Write_Char
  9741  09A4  3004               	movlw	4
  9742  09A5                     u1685:	
  9743  09A5  36F1               	lsrf	??_LCD_Write_Char,f
  9744  09A6  0B89               	decfsz	9,f
  9745  09A7  29A5               	goto	u1685
  9746  09A8  0871               	movf	??_LCD_Write_Char,w
  9747  09A9  3188  2073  3189   	fcall	_LCD_Port
  9748                           
  9749                           ;lcd.c: 230: RB1 = 1;
  9750  09AC  0020               	movlb	0	; select bank0
  9751  09AD  148D               	bsf	13,1	;volatile
  9752                           
  9753                           ;lcd.c: 231: RB1 = 0;
  9754  09AE  108D               	bcf	13,1	;volatile
  9755                           
  9756                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9757  09AF  3003               	movlw	3
  9758  09B0  00F1               	movwf	??_LCD_Write_Char
  9759  09B1                     u3447:	
  9760  09B1  0BF1               	decfsz	??_LCD_Write_Char,f
  9761  09B2  29B1               	goto	u3447
  9762                           
  9763                           ;lcd.c: 233: LCD_Port(temp);
  9764  09B3  0872               	movf	LCD_Write_Char@temp,w
  9765  09B4  3188  2073  3189   	fcall	_LCD_Port
  9766                           
  9767                           ;lcd.c: 234: RB1 = 1;
  9768  09B7  0020               	movlb	0	; select bank0
  9769  09B8  148D               	bsf	13,1	;volatile
  9770                           
  9771                           ;lcd.c: 235: RB1 = 0;
  9772  09B9  108D               	bcf	13,1	;volatile
  9773                           
  9774                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9775  09BA  3003               	movlw	3
  9776  09BB  00F1               	movwf	??_LCD_Write_Char
  9777  09BC                     u3457:	
  9778  09BC  0BF1               	decfsz	??_LCD_Write_Char,f
  9779  09BD  29BC               	goto	u3457
  9780  09BE  0008               	return
  9781  09BF                     __end_of_LCD_Write_Char:	
  9782                           
  9783                           	psect	text30
  9784  0838                     __ptext30:	
  9785 ;; *************** function _LCD_Cmd *****************
  9786 ;; Defined at:
  9787 ;;		line 65 in file "lcd.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  a               1    wreg     unsigned char 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  a               1    2[COMMON] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0, pclath, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;Total ram usage:        2 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    1
  9808 ;; This function calls:
  9809 ;;		_LCD_Port
  9810 ;; This function is called by:
  9811 ;;		_InitCustomChars
  9812 ;;		_LCD_Clear
  9813 ;;		_LCD_Set_Cursor
  9814 ;;		_LCD_Init
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           
  9819                           ;psect for function _LCD_Cmd
  9820  0838                     _LCD_Cmd:	
  9821                           
  9822                           ;incstack = 0
  9823                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9824                           ;LCD_Cmd@a stored from wreg
  9825  0838  00F2               	movwf	LCD_Cmd@a
  9826                           
  9827                           ;lcd.c: 67: RB0 = 0;
  9828  0839  0020               	movlb	0	; select bank0
  9829  083A  100D               	bcf	13,0	;volatile
  9830                           
  9831                           ;lcd.c: 68: LCD_Port(a);
  9832  083B  0872               	movf	LCD_Cmd@a,w
  9833  083C  3188  2073  3188   	fcall	_LCD_Port
  9834                           
  9835                           ;lcd.c: 69: RB1 = 1;
  9836  083F  0020               	movlb	0	; select bank0
  9837  0840  148D               	bsf	13,1	;volatile
  9838                           
  9839                           ;lcd.c: 70: RB1 = 0;
  9840  0841  108D               	bcf	13,1	;volatile
  9841                           
  9842                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9843  0842  30F9               	movlw	249
  9844  0843  00F1               	movwf	??_LCD_Cmd
  9845  0844                     u3467:	
  9846  0844  0000               	nop
  9847  0845  0BF1               	decfsz	??_LCD_Cmd,f
  9848  0846  2844               	goto	u3467
  9849  0847  3200               	nop2	;nop
  9850  0848  0000               	nop
  9851  0849  0008               	return
  9852  084A                     __end_of_LCD_Cmd:	
  9853                           
  9854                           	psect	text31
  9855  0873                     __ptext31:	
  9856 ;; *************** function _LCD_Port *****************
  9857 ;; Defined at:
  9858 ;;		line 41 in file "lcd.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  a               1    wreg     unsigned char 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  a               1    0[COMMON] unsigned char 
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		wreg
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;Total ram usage:        1 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; This function calls:
  9879 ;;		Nothing
  9880 ;; This function is called by:
  9881 ;;		_LCD_Cmd
  9882 ;;		_LCD_Init
  9883 ;;		_LCD_Write_Char
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _LCD_Port
  9889  0873                     _LCD_Port:	
  9890                           
  9891                           ;incstack = 0
  9892                           ; Regs used in _LCD_Port: [wreg]
  9893                           ;LCD_Port@a stored from wreg
  9894  0873  00F0               	movwf	LCD_Port@a
  9895                           
  9896                           ;lcd.c: 43: if(a & 1)
  9897  0874  1C70               	btfss	LCD_Port@a,0
  9898  0875  2879               	goto	l107
  9899                           
  9900                           ;lcd.c: 44: RB2 = 1;
  9901  0876  0020               	movlb	0	; select bank0
  9902  0877  150D               	bsf	13,2	;volatile
  9903  0878  287B               	goto	l2022
  9904  0879                     l107:	
  9905                           
  9906                           ;lcd.c: 45: else
  9907                           ;lcd.c: 46: RB2 = 0;
  9908  0879  0020               	movlb	0	; select bank0
  9909  087A  110D               	bcf	13,2	;volatile
  9910  087B                     l2022:	
  9911                           
  9912                           ;lcd.c: 48: if(a & 2)
  9913  087B  1CF0               	btfss	LCD_Port@a,1
  9914  087C  287F               	goto	l109
  9915                           
  9916                           ;lcd.c: 49: RB3 = 1;
  9917  087D  158D               	bsf	13,3	;volatile
  9918  087E  2880               	goto	l2026
  9919  087F                     l109:	
  9920                           
  9921                           ;lcd.c: 50: else
  9922                           ;lcd.c: 51: RB3 = 0;
  9923  087F  118D               	bcf	13,3	;volatile
  9924  0880                     l2026:	
  9925                           
  9926                           ;lcd.c: 53: if(a & 4)
  9927  0880  1D70               	btfss	LCD_Port@a,2
  9928  0881  2884               	goto	l111
  9929                           
  9930                           ;lcd.c: 54: RB4 = 1;
  9931  0882  160D               	bsf	13,4	;volatile
  9932  0883  2885               	goto	l2030
  9933  0884                     l111:	
  9934                           
  9935                           ;lcd.c: 55: else
  9936                           ;lcd.c: 56: RB4 = 0;
  9937  0884  120D               	bcf	13,4	;volatile
  9938  0885                     l2030:	
  9939                           
  9940                           ;lcd.c: 58: if(a & 8)
  9941  0885  1DF0               	btfss	LCD_Port@a,3
  9942  0886  2889               	goto	l113
  9943                           
  9944                           ;lcd.c: 59: RB5 = 1;
  9945  0887  168D               	bsf	13,5	;volatile
  9946  0888  0008               	return
  9947  0889                     l113:	
  9948                           
  9949                           ;lcd.c: 60: else
  9950                           ;lcd.c: 61: RB5 = 0;
  9951  0889  128D               	bcf	13,5	;volatile
  9952  088A  0008               	return
  9953  088B                     __end_of_LCD_Port:	
  9954                           
  9955                           	psect	text32
  9956  08A3                     __ptext32:	
  9957 ;; *************** function _ADCC_Initialize *****************
  9958 ;; Defined at:
  9959 ;;		line 5 in file "adcc.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;		None
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;Total ram usage:        0 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; This function calls:
  9980 ;;		Nothing
  9981 ;; This function is called by:
  9982 ;;		_SYSTEM_Initialize
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           
  9987                           ;psect for function _ADCC_Initialize
  9988  08A3                     _ADCC_Initialize:	
  9989                           
  9990                           ;adcc.c: 8: ADCON1 = 0x00;
  9991                           
  9992                           ;incstack = 0
  9993                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9994  08A3  0021               	movlb	1	; select bank1
  9995  08A4  0194               	clrf	20	;volatile
  9996                           
  9997                           ;adcc.c: 10: ADCON2 = 0x00;
  9998  08A5  0195               	clrf	21	;volatile
  9999                           
 10000                           ;adcc.c: 12: ADCON3 = 0x00;
 10001  08A6  0196               	clrf	22	;volatile
 10002                           
 10003                           ;adcc.c: 14: ADACT = 0x00;
 10004  08A7  0199               	clrf	25	;volatile
 10005                           
 10006                           ;adcc.c: 16: ADSTAT = 0x00;
 10007  08A8  0197               	clrf	23	;volatile
 10008                           
 10009                           ;adcc.c: 18: ADCLK = 0x0F;
 10010  08A9  300F               	movlw	15
 10011  08AA  0098               	movwf	24	;volatile
 10012                           
 10013                           ;adcc.c: 21: ADREF = 0x00;
 10014  08AB  019A               	clrf	26	;volatile
 10015                           
 10016                           ;adcc.c: 23: ADCAP = 0x00;
 10017  08AC  019B               	clrf	27	;volatile
 10018                           
 10019                           ;adcc.c: 25: ADPRE = 0x00;
 10020  08AD  019C               	clrf	28	;volatile
 10021                           
 10022                           ;adcc.c: 27: ADACQ = 0x00;
 10023  08AE  019D               	clrf	29	;volatile
 10024                           
 10025                           ;adcc.c: 29: ADPCH = 0x00;
 10026  08AF  019E               	clrf	30	;volatile
 10027                           
 10028                           ;adcc.c: 31: ADRPT = 0x00;
 10029  08B0  0022               	movlb	2	; select bank2
 10030  08B1  018D               	clrf	13	;volatile
 10031                           
 10032                           ;adcc.c: 33: ADLTHL = 0x00;
 10033  08B2  018E               	clrf	14	;volatile
 10034                           
 10035                           ;adcc.c: 35: ADLTHH = 0x00;
 10036  08B3  018F               	clrf	15	;volatile
 10037                           
 10038                           ;adcc.c: 37: ADUTHL = 0x00;
 10039  08B4  0190               	clrf	16	;volatile
 10040                           
 10041                           ;adcc.c: 39: ADUTHH = 0x00;
 10042  08B5  0191               	clrf	17	;volatile
 10043                           
 10044                           ;adcc.c: 41: ADSTPTL = 0x00;
 10045  08B6  0192               	clrf	18	;volatile
 10046                           
 10047                           ;adcc.c: 43: ADSTPTH = 0x00;
 10048  08B7  0193               	clrf	19	;volatile
 10049                           
 10050                           ;adcc.c: 46: ADCON0 = 0x84;
 10051  08B8  3084               	movlw	132
 10052  08B9  0021               	movlb	1	; select bank1
 10053  08BA  0093               	movwf	19	;volatile
 10054  08BB  0008               	return
 10055  08BC                     __end_of_ADCC_Initialize:	
 10056                           
 10057                           	psect	text33
 10058  085D                     __ptext33:	
 10059 ;; *************** function _PWM6_LoadDutyValue *****************
 10060 ;; Defined at:
 10061 ;;		line 15 in file "pwm6.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  dutyValue       2    0[COMMON] unsigned int 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1    wreg      void 
 10068 ;; Registers used:
 10069 ;;		wreg, status,2, status,0
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;Total ram usage:        4 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_main
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           
 10089                           ;psect for function _PWM6_LoadDutyValue
 10090  085D                     _PWM6_LoadDutyValue:	
 10091                           
 10092                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10093                           
 10094                           ;incstack = 0
 10095                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10096  085D  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 10097  085E  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10098  085F  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10099  0860  00F2               	movwf	??_PWM6_LoadDutyValue
 10100  0861  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10101  0862  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10102  0863  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10103  0864  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10104  0865  0872               	movf	??_PWM6_LoadDutyValue,w
 10105  0866  0027               	movlb	7	; select bank7
 10106  0867  008D               	movwf	13	;volatile
 10107                           
 10108                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 10109  0868  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 10110  0869  3903               	andlw	3
 10111  086A  00F2               	movwf	??_PWM6_LoadDutyValue
 10112  086B  3005               	movlw	5
 10113  086C                     u2725:	
 10114  086C  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10115  086D  3EFF               	addlw	-1
 10116  086E  1D03               	skipz
 10117  086F  286C               	goto	u2725
 10118  0870  3572               	lslf	??_PWM6_LoadDutyValue,w
 10119  0871  008C               	movwf	12	;volatile
 10120  0872  0008               	return
 10121  0873                     __end_of_PWM6_LoadDutyValue:	
 10122                           
 10123                           	psect	text34
 10124  0311                     __ptext34:	
 10125 ;; *************** function _PID_Calculate *****************
 10126 ;; Defined at:
 10127 ;;		line 24 in file "pid.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  setpoint        2   38[BANK0 ] const int 
 10130 ;;  temp            3   40[BANK0 ] float 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  error           3   58[BANK0 ] float 
 10133 ;;  Result          3   55[BANK0 ] float 
 10134 ;;  pidPrevError    3   52[BANK0 ] float 
 10135 ;;  derivativeVa    3   49[BANK0 ] float 
 10136 ;;  errorValue      3   43[BANK0 ] float 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  3   38[BANK0 ] float 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2, status,0, pclath, cstack
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10146 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;Total ram usage:       23 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; Hardware stack levels required when called:    2
 10153 ;; This function calls:
 10154 ;;		___awtoft
 10155 ;;		___ftadd
 10156 ;;		___ftge
 10157 ;;		___ftmul
 10158 ;;		___ftneg
 10159 ;; This function is called by:
 10160 ;;		_main
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           
 10165                           ;psect for function _PID_Calculate
 10166  0311                     _PID_Calculate:	
 10167                           
 10168                           ;pid.c: 26: float error, errorValue, derivativeValue = 0, pidPrevError = 0, Result;
 10169                           
 10170                           ;incstack = 0
 10171                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10172  0311  3000               	movlw	0
 10173  0312  0020               	movlb	0	; select bank0
 10174  0313  00D1               	movwf	PID_Calculate@derivativeValue
 10175  0314  3000               	movlw	0
 10176  0315  00D2               	movwf	PID_Calculate@derivativeValue+1
 10177  0316  3000               	movlw	0
 10178  0317  00D3               	movwf	PID_Calculate@derivativeValue+2
 10179  0318  3000               	movlw	0
 10180  0319  00D4               	movwf	PID_Calculate@pidPrevError
 10181  031A  3000               	movlw	0
 10182  031B  00D5               	movwf	PID_Calculate@pidPrevError+1
 10183  031C  3000               	movlw	0
 10184  031D  00D6               	movwf	PID_Calculate@pidPrevError+2
 10185                           
 10186                           ;pid.c: 29: error = setpoint - temp;
 10187  031E  0848               	movf	PID_Calculate@temp,w
 10188  031F  00F0               	movwf	___ftneg@f1
 10189  0320  0849               	movf	PID_Calculate@temp+1,w
 10190  0321  00F1               	movwf	___ftneg@f1+1
 10191  0322  084A               	movf	PID_Calculate@temp+2,w
 10192  0323  00F2               	movwf	___ftneg@f1+2
 10193  0324  3197  27DC  3183   	fcall	___ftneg
 10194  0327  0870               	movf	?___ftneg,w
 10195  0328  0020               	movlb	0	; select bank0
 10196  0329  00B0               	movwf	___ftadd@f1
 10197  032A  0871               	movf	?___ftneg+1,w
 10198  032B  00B1               	movwf	___ftadd@f1+1
 10199  032C  0872               	movf	?___ftneg+2,w
 10200  032D  00B2               	movwf	___ftadd@f1+2
 10201  032E  0847               	movf	PID_Calculate@setpoint+1,w
 10202  032F  00F9               	movwf	___awtoft@c+1
 10203  0330  0846               	movf	PID_Calculate@setpoint,w
 10204  0331  00F8               	movwf	___awtoft@c
 10205  0332  3189  2129  3183   	fcall	___awtoft
 10206  0335  0878               	movf	?___awtoft,w
 10207  0336  0020               	movlb	0	; select bank0
 10208  0337  00B3               	movwf	___ftadd@f2
 10209  0338  0879               	movf	?___awtoft+1,w
 10210  0339  00B4               	movwf	___ftadd@f2+1
 10211  033A  087A               	movf	?___awtoft+2,w
 10212  033B  00B5               	movwf	___ftadd@f2+2
 10213  033C  3182  221B  3183   	fcall	___ftadd
 10214  033F  0020               	movlb	0	; select bank0
 10215  0340  0830               	movf	?___ftadd,w
 10216  0341  00DA               	movwf	PID_Calculate@error
 10217  0342  0831               	movf	?___ftadd+1,w
 10218  0343  00DB               	movwf	PID_Calculate@error+1
 10219  0344  0832               	movf	?___ftadd+2,w
 10220  0345  00DC               	movwf	PID_Calculate@error+2
 10221                           
 10222                           ;pid.c: 31: errorValue = error * PID_Kp;
 10223  0346  0021               	movlb	1	; select bank1
 10224  0347  084F               	movf	_PID_Kp^(0+128),w
 10225  0348  0020               	movlb	0	; select bank0
 10226  0349  00A0               	movwf	___ftmul@f1
 10227  034A  0021               	movlb	1	; select bank1
 10228  034B  0850               	movf	(_PID_Kp+1)^(0+128),w
 10229  034C  0020               	movlb	0	; select bank0
 10230  034D  00A1               	movwf	___ftmul@f1+1
 10231  034E  0021               	movlb	1	; select bank1
 10232  034F  0851               	movf	(_PID_Kp+2)^(0+128),w
 10233  0350  0020               	movlb	0	; select bank0
 10234  0351  00A2               	movwf	___ftmul@f1+2
 10235  0352  085A               	movf	PID_Calculate@error,w
 10236  0353  00A3               	movwf	___ftmul@f2
 10237  0354  085B               	movf	PID_Calculate@error+1,w
 10238  0355  00A4               	movwf	___ftmul@f2+1
 10239  0356  085C               	movf	PID_Calculate@error+2,w
 10240  0357  00A5               	movwf	___ftmul@f2+2
 10241  0358  318F  274C  3183   	fcall	___ftmul
 10242  035B  0020               	movlb	0	; select bank0
 10243  035C  0820               	movf	?___ftmul,w
 10244  035D  00CB               	movwf	PID_Calculate@errorValue
 10245  035E  0821               	movf	?___ftmul+1,w
 10246  035F  00CC               	movwf	PID_Calculate@errorValue+1
 10247  0360  0822               	movf	?___ftmul+2,w
 10248  0361  00CD               	movwf	PID_Calculate@errorValue+2
 10249                           
 10250                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * PID_Ki);
 10251  0362  0021               	movlb	1	; select bank1
 10252  0363  0852               	movf	_pidIntegrated^(0+128),w
 10253  0364  0020               	movlb	0	; select bank0
 10254  0365  00B0               	movwf	___ftadd@f1
 10255  0366  0021               	movlb	1	; select bank1
 10256  0367  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10257  0368  0020               	movlb	0	; select bank0
 10258  0369  00B1               	movwf	___ftadd@f1+1
 10259  036A  0021               	movlb	1	; select bank1
 10260  036B  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10261  036C  0020               	movlb	0	; select bank0
 10262  036D  00B2               	movwf	___ftadd@f1+2
 10263  036E  0021               	movlb	1	; select bank1
 10264  036F  084C               	movf	_PID_Ki^(0+128),w
 10265  0370  0020               	movlb	0	; select bank0
 10266  0371  00A0               	movwf	___ftmul@f1
 10267  0372  0021               	movlb	1	; select bank1
 10268  0373  084D               	movf	(_PID_Ki+1)^(0+128),w
 10269  0374  0020               	movlb	0	; select bank0
 10270  0375  00A1               	movwf	___ftmul@f1+1
 10271  0376  0021               	movlb	1	; select bank1
 10272  0377  084E               	movf	(_PID_Ki+2)^(0+128),w
 10273  0378  0020               	movlb	0	; select bank0
 10274  0379  00A2               	movwf	___ftmul@f1+2
 10275  037A  085A               	movf	PID_Calculate@error,w
 10276  037B  00A3               	movwf	___ftmul@f2
 10277  037C  085B               	movf	PID_Calculate@error+1,w
 10278  037D  00A4               	movwf	___ftmul@f2+1
 10279  037E  085C               	movf	PID_Calculate@error+2,w
 10280  037F  00A5               	movwf	___ftmul@f2+2
 10281  0380  318F  274C  3183   	fcall	___ftmul
 10282  0383  0020               	movlb	0	; select bank0
 10283  0384  0820               	movf	?___ftmul,w
 10284  0385  00B3               	movwf	___ftadd@f2
 10285  0386  0821               	movf	?___ftmul+1,w
 10286  0387  00B4               	movwf	___ftadd@f2+1
 10287  0388  0822               	movf	?___ftmul+2,w
 10288  0389  00B5               	movwf	___ftadd@f2+2
 10289  038A  3182  221B  3183   	fcall	___ftadd
 10290  038D  0020               	movlb	0	; select bank0
 10291  038E  0830               	movf	?___ftadd,w
 10292  038F  0021               	movlb	1	; select bank1
 10293  0390  00D2               	movwf	_pidIntegrated^(0+128)
 10294  0391  0020               	movlb	0	; select bank0
 10295  0392  0831               	movf	?___ftadd+1,w
 10296  0393  0021               	movlb	1	; select bank1
 10297  0394  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10298  0395  0020               	movlb	0	; select bank0
 10299  0396  0832               	movf	?___ftadd+2,w
 10300  0397  0021               	movlb	1	; select bank1
 10301  0398  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10302                           
 10303                           ;pid.c: 36: if (pidIntegrated< pidMinOutput)
 10304  0399  0852               	movf	_pidIntegrated^(0+128),w
 10305  039A  0020               	movlb	0	; select bank0
 10306  039B  00BD               	movwf	___ftge@ff1
 10307  039C  0021               	movlb	1	; select bank1
 10308  039D  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10309  039E  0020               	movlb	0	; select bank0
 10310  039F  00BE               	movwf	___ftge@ff1+1
 10311  03A0  0021               	movlb	1	; select bank1
 10312  03A1  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10313  03A2  0020               	movlb	0	; select bank0
 10314  03A3  00BF               	movwf	___ftge@ff1+2
 10315  03A4  0021               	movlb	1	; select bank1
 10316  03A5  085D               	movf	(_pidMinOutput+1)^(0+128),w
 10317  03A6  00F9               	movwf	___awtoft@c+1
 10318  03A7  085C               	movf	_pidMinOutput^(0+128),w
 10319  03A8  00F8               	movwf	___awtoft@c
 10320  03A9  3189  2129  3183   	fcall	___awtoft
 10321  03AC  0878               	movf	?___awtoft,w
 10322  03AD  0020               	movlb	0	; select bank0
 10323  03AE  00C0               	movwf	___ftge@ff2
 10324  03AF  0879               	movf	?___awtoft+1,w
 10325  03B0  00C1               	movwf	___ftge@ff2+1
 10326  03B1  087A               	movf	?___awtoft+2,w
 10327  03B2  00C2               	movwf	___ftge@ff2+2
 10328  03B3  318A  2260  3183   	fcall	___ftge
 10329  03B6  1803               	btfsc	3,0
 10330  03B7  2BC7               	goto	l283
 10331                           
 10332                           ;pid.c: 37: {
 10333                           ;pid.c: 38: pidIntegrated= pidMinOutput;
 10334  03B8  0021               	movlb	1	; select bank1
 10335  03B9  085D               	movf	(_pidMinOutput+1)^(0+128),w
 10336  03BA  00F9               	movwf	___awtoft@c+1
 10337  03BB  085C               	movf	_pidMinOutput^(0+128),w
 10338  03BC  00F8               	movwf	___awtoft@c
 10339  03BD  3189  2129  3183   	fcall	___awtoft
 10340  03C0  0878               	movf	?___awtoft,w
 10341  03C1  0021               	movlb	1	; select bank1
 10342  03C2  00D2               	movwf	_pidIntegrated^(0+128)
 10343  03C3  0879               	movf	?___awtoft+1,w
 10344  03C4  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10345  03C5  087A               	movf	?___awtoft+2,w
 10346  03C6  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10347  03C7                     l283:	
 10348                           
 10349                           ;pid.c: 39: }
 10350                           ;pid.c: 41: if (pidIntegrated> pidMaxOutput)
 10351  03C7  0021               	movlb	1	; select bank1
 10352  03C8  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10353  03C9  00F9               	movwf	___awtoft@c+1
 10354  03CA  085A               	movf	_pidMaxOutput^(0+128),w
 10355  03CB  00F8               	movwf	___awtoft@c
 10356  03CC  3189  2129  3183   	fcall	___awtoft
 10357  03CF  0878               	movf	?___awtoft,w
 10358  03D0  0020               	movlb	0	; select bank0
 10359  03D1  00BD               	movwf	___ftge@ff1
 10360  03D2  0879               	movf	?___awtoft+1,w
 10361  03D3  00BE               	movwf	___ftge@ff1+1
 10362  03D4  087A               	movf	?___awtoft+2,w
 10363  03D5  00BF               	movwf	___ftge@ff1+2
 10364  03D6  0021               	movlb	1	; select bank1
 10365  03D7  0852               	movf	_pidIntegrated^(0+128),w
 10366  03D8  0020               	movlb	0	; select bank0
 10367  03D9  00C0               	movwf	___ftge@ff2
 10368  03DA  0021               	movlb	1	; select bank1
 10369  03DB  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10370  03DC  0020               	movlb	0	; select bank0
 10371  03DD  00C1               	movwf	___ftge@ff2+1
 10372  03DE  0021               	movlb	1	; select bank1
 10373  03DF  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10374  03E0  0020               	movlb	0	; select bank0
 10375  03E1  00C2               	movwf	___ftge@ff2+2
 10376  03E2  318A  2260  3183   	fcall	___ftge
 10377  03E5  1803               	btfsc	3,0
 10378  03E6  2BF6               	goto	l284
 10379                           
 10380                           ;pid.c: 42: {
 10381                           ;pid.c: 43: pidIntegrated= pidMaxOutput;
 10382  03E7  0021               	movlb	1	; select bank1
 10383  03E8  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10384  03E9  00F9               	movwf	___awtoft@c+1
 10385  03EA  085A               	movf	_pidMaxOutput^(0+128),w
 10386  03EB  00F8               	movwf	___awtoft@c
 10387  03EC  3189  2129  3183   	fcall	___awtoft
 10388  03EF  0878               	movf	?___awtoft,w
 10389  03F0  0021               	movlb	1	; select bank1
 10390  03F1  00D2               	movwf	_pidIntegrated^(0+128)
 10391  03F2  0879               	movf	?___awtoft+1,w
 10392  03F3  00D3               	movwf	(_pidIntegrated+1)^(0+128)
 10393  03F4  087A               	movf	?___awtoft+2,w
 10394  03F5  00D4               	movwf	(_pidIntegrated+2)^(0+128)
 10395  03F6                     l284:	
 10396                           
 10397                           ;pid.c: 44: }
 10398                           ;pid.c: 47: derivativeValue=(error-pidPrevError)*PID_Kd;
 10399  03F6  0021               	movlb	1	; select bank1
 10400  03F7  0849               	movf	_PID_Kd^(0+128),w
 10401  03F8  0020               	movlb	0	; select bank0
 10402  03F9  00A0               	movwf	___ftmul@f1
 10403  03FA  0021               	movlb	1	; select bank1
 10404  03FB  084A               	movf	(_PID_Kd+1)^(0+128),w
 10405  03FC  0020               	movlb	0	; select bank0
 10406  03FD  00A1               	movwf	___ftmul@f1+1
 10407  03FE  0021               	movlb	1	; select bank1
 10408  03FF  084B               	movf	(_PID_Kd+2)^(0+128),w
 10409  0400  0020               	movlb	0	; select bank0
 10410  0401  00A2               	movwf	___ftmul@f1+2
 10411  0402  085A               	movf	PID_Calculate@error,w
 10412  0403  00B0               	movwf	___ftadd@f1
 10413  0404  085B               	movf	PID_Calculate@error+1,w
 10414  0405  00B1               	movwf	___ftadd@f1+1
 10415  0406  085C               	movf	PID_Calculate@error+2,w
 10416  0407  00B2               	movwf	___ftadd@f1+2
 10417  0408  0854               	movf	PID_Calculate@pidPrevError,w
 10418  0409  00F0               	movwf	___ftneg@f1
 10419  040A  0855               	movf	PID_Calculate@pidPrevError+1,w
 10420  040B  00F1               	movwf	___ftneg@f1+1
 10421  040C  0856               	movf	PID_Calculate@pidPrevError+2,w
 10422  040D  00F2               	movwf	___ftneg@f1+2
 10423  040E  3197  27DC  3183   	fcall	___ftneg
 10424  0411  0870               	movf	?___ftneg,w
 10425  0412  0020               	movlb	0	; select bank0
 10426  0413  00B3               	movwf	___ftadd@f2
 10427  0414  0871               	movf	?___ftneg+1,w
 10428  0415  00B4               	movwf	___ftadd@f2+1
 10429  0416  0872               	movf	?___ftneg+2,w
 10430  0417  00B5               	movwf	___ftadd@f2+2
 10431  0418  3182  221B  3183   	fcall	___ftadd
 10432  041B  0020               	movlb	0	; select bank0
 10433  041C  0830               	movf	?___ftadd,w
 10434  041D  00A3               	movwf	___ftmul@f2
 10435  041E  0831               	movf	?___ftadd+1,w
 10436  041F  00A4               	movwf	___ftmul@f2+1
 10437  0420  0832               	movf	?___ftadd+2,w
 10438  0421  00A5               	movwf	___ftmul@f2+2
 10439  0422  318F  274C  3183   	fcall	___ftmul
 10440  0425  0020               	movlb	0	; select bank0
 10441  0426  0820               	movf	?___ftmul,w
 10442  0427  00D1               	movwf	PID_Calculate@derivativeValue
 10443  0428  0821               	movf	?___ftmul+1,w
 10444  0429  00D2               	movwf	PID_Calculate@derivativeValue+1
 10445  042A  0822               	movf	?___ftmul+2,w
 10446  042B  00D3               	movwf	PID_Calculate@derivativeValue+2
 10447                           
 10448                           ;pid.c: 48: pidPrevError = error;
 10449  042C  085A               	movf	PID_Calculate@error,w
 10450  042D  00D4               	movwf	PID_Calculate@pidPrevError
 10451  042E  085B               	movf	PID_Calculate@error+1,w
 10452  042F  00D5               	movwf	PID_Calculate@pidPrevError+1
 10453  0430  085C               	movf	PID_Calculate@error+2,w
 10454  0431  00D6               	movwf	PID_Calculate@pidPrevError+2
 10455                           
 10456                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10457  0432  0021               	movlb	1	; select bank1
 10458  0433  0852               	movf	_pidIntegrated^(0+128),w
 10459  0434  0020               	movlb	0	; select bank0
 10460  0435  00B0               	movwf	___ftadd@f1
 10461  0436  0021               	movlb	1	; select bank1
 10462  0437  0853               	movf	(_pidIntegrated+1)^(0+128),w
 10463  0438  0020               	movlb	0	; select bank0
 10464  0439  00B1               	movwf	___ftadd@f1+1
 10465  043A  0021               	movlb	1	; select bank1
 10466  043B  0854               	movf	(_pidIntegrated+2)^(0+128),w
 10467  043C  0020               	movlb	0	; select bank0
 10468  043D  00B2               	movwf	___ftadd@f1+2
 10469  043E  084B               	movf	PID_Calculate@errorValue,w
 10470  043F  00B3               	movwf	___ftadd@f2
 10471  0440  084C               	movf	PID_Calculate@errorValue+1,w
 10472  0441  00B4               	movwf	___ftadd@f2+1
 10473  0442  084D               	movf	PID_Calculate@errorValue+2,w
 10474  0443  00B5               	movwf	___ftadd@f2+2
 10475  0444  3182  221B  3183   	fcall	___ftadd
 10476  0447  0020               	movlb	0	; select bank0
 10477  0448  0830               	movf	?___ftadd,w
 10478  0449  00CE               	movwf	_PID_Calculate$1053
 10479  044A  0831               	movf	?___ftadd+1,w
 10480  044B  00CF               	movwf	_PID_Calculate$1053+1
 10481  044C  0832               	movf	?___ftadd+2,w
 10482  044D  00D0               	movwf	_PID_Calculate$1053+2
 10483                           
 10484                           ;pid.c: 51: Result = errorValue + pidIntegrated+ derivativeValue;
 10485  044E  0851               	movf	PID_Calculate@derivativeValue,w
 10486  044F  00B0               	movwf	___ftadd@f1
 10487  0450  0852               	movf	PID_Calculate@derivativeValue+1,w
 10488  0451  00B1               	movwf	___ftadd@f1+1
 10489  0452  0853               	movf	PID_Calculate@derivativeValue+2,w
 10490  0453  00B2               	movwf	___ftadd@f1+2
 10491  0454  084E               	movf	_PID_Calculate$1053,w
 10492  0455  00B3               	movwf	___ftadd@f2
 10493  0456  084F               	movf	_PID_Calculate$1053+1,w
 10494  0457  00B4               	movwf	___ftadd@f2+1
 10495  0458  0850               	movf	_PID_Calculate$1053+2,w
 10496  0459  00B5               	movwf	___ftadd@f2+2
 10497  045A  3182  221B  3183   	fcall	___ftadd
 10498  045D  0020               	movlb	0	; select bank0
 10499  045E  0830               	movf	?___ftadd,w
 10500  045F  00D7               	movwf	PID_Calculate@Result
 10501  0460  0831               	movf	?___ftadd+1,w
 10502  0461  00D8               	movwf	PID_Calculate@Result+1
 10503  0462  0832               	movf	?___ftadd+2,w
 10504  0463  00D9               	movwf	PID_Calculate@Result+2
 10505                           
 10506                           ;pid.c: 53: if (Result < pidMinOutput)
 10507  0464  0857               	movf	PID_Calculate@Result,w
 10508  0465  00BD               	movwf	___ftge@ff1
 10509  0466  0858               	movf	PID_Calculate@Result+1,w
 10510  0467  00BE               	movwf	___ftge@ff1+1
 10511  0468  0859               	movf	PID_Calculate@Result+2,w
 10512  0469  00BF               	movwf	___ftge@ff1+2
 10513  046A  0021               	movlb	1	; select bank1
 10514  046B  085D               	movf	(_pidMinOutput+1)^(0+128),w
 10515  046C  00F9               	movwf	___awtoft@c+1
 10516  046D  085C               	movf	_pidMinOutput^(0+128),w
 10517  046E  00F8               	movwf	___awtoft@c
 10518  046F  3189  2129  3183   	fcall	___awtoft
 10519  0472  0878               	movf	?___awtoft,w
 10520  0473  0020               	movlb	0	; select bank0
 10521  0474  00C0               	movwf	___ftge@ff2
 10522  0475  0879               	movf	?___awtoft+1,w
 10523  0476  00C1               	movwf	___ftge@ff2+1
 10524  0477  087A               	movf	?___awtoft+2,w
 10525  0478  00C2               	movwf	___ftge@ff2+2
 10526  0479  318A  2260  3183   	fcall	___ftge
 10527  047C  1803               	btfsc	3,0
 10528  047D  2C8D               	goto	l285
 10529                           
 10530                           ;pid.c: 54: {
 10531                           ;pid.c: 55: Result = pidMinOutput;
 10532  047E  0021               	movlb	1	; select bank1
 10533  047F  085D               	movf	(_pidMinOutput+1)^(0+128),w
 10534  0480  00F9               	movwf	___awtoft@c+1
 10535  0481  085C               	movf	_pidMinOutput^(0+128),w
 10536  0482  00F8               	movwf	___awtoft@c
 10537  0483  3189  2129  3183   	fcall	___awtoft
 10538  0486  0878               	movf	?___awtoft,w
 10539  0487  0020               	movlb	0	; select bank0
 10540  0488  00D7               	movwf	PID_Calculate@Result
 10541  0489  0879               	movf	?___awtoft+1,w
 10542  048A  00D8               	movwf	PID_Calculate@Result+1
 10543  048B  087A               	movf	?___awtoft+2,w
 10544  048C  00D9               	movwf	PID_Calculate@Result+2
 10545  048D                     l285:	
 10546                           
 10547                           ;pid.c: 56: }
 10548                           ;pid.c: 58: if (Result > pidMaxOutput)
 10549  048D  0021               	movlb	1	; select bank1
 10550  048E  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10551  048F  00F9               	movwf	___awtoft@c+1
 10552  0490  085A               	movf	_pidMaxOutput^(0+128),w
 10553  0491  00F8               	movwf	___awtoft@c
 10554  0492  3189  2129  3183   	fcall	___awtoft
 10555  0495  0878               	movf	?___awtoft,w
 10556  0496  0020               	movlb	0	; select bank0
 10557  0497  00BD               	movwf	___ftge@ff1
 10558  0498  0879               	movf	?___awtoft+1,w
 10559  0499  00BE               	movwf	___ftge@ff1+1
 10560  049A  087A               	movf	?___awtoft+2,w
 10561  049B  00BF               	movwf	___ftge@ff1+2
 10562  049C  0857               	movf	PID_Calculate@Result,w
 10563  049D  00C0               	movwf	___ftge@ff2
 10564  049E  0858               	movf	PID_Calculate@Result+1,w
 10565  049F  00C1               	movwf	___ftge@ff2+1
 10566  04A0  0859               	movf	PID_Calculate@Result+2,w
 10567  04A1  00C2               	movwf	___ftge@ff2+2
 10568  04A2  318A  2260  3183   	fcall	___ftge
 10569  04A5  1803               	btfsc	3,0
 10570  04A6  2CB5               	goto	l2750
 10571                           
 10572                           ;pid.c: 59: {
 10573                           ;pid.c: 60: Result = pidMaxOutput;
 10574  04A7  0021               	movlb	1	; select bank1
 10575  04A8  085B               	movf	(_pidMaxOutput+1)^(0+128),w
 10576  04A9  00F9               	movwf	___awtoft@c+1
 10577  04AA  085A               	movf	_pidMaxOutput^(0+128),w
 10578  04AB  00F8               	movwf	___awtoft@c
 10579  04AC  3189  2129         	fcall	___awtoft
 10580  04AE  0878               	movf	?___awtoft,w
 10581  04AF  0020               	movlb	0	; select bank0
 10582  04B0  00D7               	movwf	PID_Calculate@Result
 10583  04B1  0879               	movf	?___awtoft+1,w
 10584  04B2  00D8               	movwf	PID_Calculate@Result+1
 10585  04B3  087A               	movf	?___awtoft+2,w
 10586  04B4  00D9               	movwf	PID_Calculate@Result+2
 10587  04B5                     l2750:	
 10588                           
 10589                           ;pid.c: 61: }
 10590                           ;pid.c: 63: return (Result);
 10591  04B5  0020               	movlb	0	; select bank0
 10592  04B6  0857               	movf	PID_Calculate@Result,w
 10593  04B7  00C6               	movwf	?_PID_Calculate
 10594  04B8  0858               	movf	PID_Calculate@Result+1,w
 10595  04B9  00C7               	movwf	?_PID_Calculate+1
 10596  04BA  0859               	movf	PID_Calculate@Result+2,w
 10597  04BB  00C8               	movwf	?_PID_Calculate+2
 10598  04BC  0008               	return
 10599  04BD                     __end_of_PID_Calculate:	
 10600                           
 10601                           	psect	text35
 10602  17DC                     __ptext35:	
 10603 ;; *************** function ___ftneg *****************
 10604 ;; Defined at:
 10605 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  f1              3    0[COMMON] float 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  3    0[COMMON] float 
 10612 ;; Registers used:
 10613 ;;		wreg
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10619 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;Total ram usage:        3 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_PID_Calculate
 10629 ;;		_main
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function ___ftneg
 10635  17DC                     ___ftneg:	
 10636                           
 10637                           ;incstack = 0
 10638                           ; Regs used in ___ftneg: [wreg]
 10639  17DC  0872               	movf	___ftneg@f1+2,w
 10640  17DD  0471               	iorwf	___ftneg@f1+1,w
 10641  17DE  0470               	iorwf	___ftneg@f1,w
 10642  17DF  1903               	skipnz
 10643  17E0  0008               	return
 10644  17E1  3080               	movlw	128
 10645  17E2  06F2               	xorwf	___ftneg@f1+2,f
 10646  17E3  0008               	return
 10647  17E4                     __end_of___ftneg:	
 10648                           
 10649                           	psect	text36
 10650  0F4C                     __ptext36:	
 10651 ;; *************** function ___ftmul *****************
 10652 ;; Defined at:
 10653 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  f1              3    0[BANK0 ] float 
 10656 ;;  f2              3    3[BANK0 ] float 
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 10659 ;;  sign            1   15[BANK0 ] unsigned char 
 10660 ;;  cntr            1   14[BANK0 ] unsigned char 
 10661 ;;  exp             1   10[BANK0 ] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  3    0[BANK0 ] float 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0, pclath, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10671 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;Total ram usage:       16 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    1
 10678 ;; This function calls:
 10679 ;;		___ftpack
 10680 ;; This function is called by:
 10681 ;;		_PID_Calculate
 10682 ;;		_main
 10683 ;;		_log
 10684 ;;		_eval_poly
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           
 10689                           ;psect for function ___ftmul
 10690  0F4C                     ___ftmul:	
 10691                           
 10692                           ;incstack = 0
 10693                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10694  0F4C  0020               	movlb	0	; select bank0
 10695  0F4D  0820               	movf	___ftmul@f1,w
 10696  0F4E  00A6               	movwf	??___ftmul
 10697  0F4F  0821               	movf	___ftmul@f1+1,w
 10698  0F50  00A7               	movwf	??___ftmul+1
 10699  0F51  0822               	movf	___ftmul@f1+2,w
 10700  0F52  00A8               	movwf	??___ftmul+2
 10701  0F53  1003               	clrc
 10702  0F54  0D27               	rlf	??___ftmul+1,w
 10703  0F55  0D28               	rlf	??___ftmul+2,w
 10704  0F56  00A9               	movwf	??___ftmul+3
 10705  0F57  0829               	movf	??___ftmul+3,w
 10706  0F58  00AA               	movwf	___ftmul@exp
 10707  0F59  082A               	movf	___ftmul@exp,w
 10708  0F5A  1D03               	btfss	3,2
 10709  0F5B  2F63               	goto	l2348
 10710  0F5C  3000               	movlw	0
 10711  0F5D  00A0               	movwf	?___ftmul
 10712  0F5E  3000               	movlw	0
 10713  0F5F  00A1               	movwf	?___ftmul+1
 10714  0F60  3000               	movlw	0
 10715  0F61  00A2               	movwf	?___ftmul+2
 10716  0F62  0008               	return
 10717  0F63                     l2348:	
 10718  0F63  0823               	movf	___ftmul@f2,w
 10719  0F64  00A6               	movwf	??___ftmul
 10720  0F65  0824               	movf	___ftmul@f2+1,w
 10721  0F66  00A7               	movwf	??___ftmul+1
 10722  0F67  0825               	movf	___ftmul@f2+2,w
 10723  0F68  00A8               	movwf	??___ftmul+2
 10724  0F69  1003               	clrc
 10725  0F6A  0D27               	rlf	??___ftmul+1,w
 10726  0F6B  0D28               	rlf	??___ftmul+2,w
 10727  0F6C  00A9               	movwf	??___ftmul+3
 10728  0F6D  0829               	movf	??___ftmul+3,w
 10729  0F6E  00AF               	movwf	___ftmul@sign
 10730  0F6F  082F               	movf	___ftmul@sign,w
 10731  0F70  1D03               	btfss	3,2
 10732  0F71  2F79               	goto	l2354
 10733  0F72  3000               	movlw	0
 10734  0F73  00A0               	movwf	?___ftmul
 10735  0F74  3000               	movlw	0
 10736  0F75  00A1               	movwf	?___ftmul+1
 10737  0F76  3000               	movlw	0
 10738  0F77  00A2               	movwf	?___ftmul+2
 10739  0F78  0008               	return
 10740  0F79                     l2354:	
 10741  0F79  082F               	movf	___ftmul@sign,w
 10742  0F7A  3E7B               	addlw	123
 10743  0F7B  00A6               	movwf	??___ftmul
 10744  0F7C  0826               	movf	??___ftmul,w
 10745  0F7D  07AA               	addwf	___ftmul@exp,f
 10746  0F7E  0820               	movf	___ftmul@f1,w
 10747  0F7F  00A6               	movwf	??___ftmul
 10748  0F80  0821               	movf	___ftmul@f1+1,w
 10749  0F81  00A7               	movwf	??___ftmul+1
 10750  0F82  0822               	movf	___ftmul@f1+2,w
 10751  0F83  00A8               	movwf	??___ftmul+2
 10752  0F84  3010               	movlw	16
 10753  0F85                     u2435:	
 10754  0F85  36A8               	lsrf	??___ftmul+2,f
 10755  0F86  0CA7               	rrf	??___ftmul+1,f
 10756  0F87  0CA6               	rrf	??___ftmul,f
 10757  0F88  0B89               	decfsz	9,f
 10758  0F89  2F85               	goto	u2435
 10759  0F8A  0826               	movf	??___ftmul,w
 10760  0F8B  00A9               	movwf	??___ftmul+3
 10761  0F8C  0829               	movf	??___ftmul+3,w
 10762  0F8D  00AF               	movwf	___ftmul@sign
 10763  0F8E  0823               	movf	___ftmul@f2,w
 10764  0F8F  00A6               	movwf	??___ftmul
 10765  0F90  0824               	movf	___ftmul@f2+1,w
 10766  0F91  00A7               	movwf	??___ftmul+1
 10767  0F92  0825               	movf	___ftmul@f2+2,w
 10768  0F93  00A8               	movwf	??___ftmul+2
 10769  0F94  3010               	movlw	16
 10770  0F95                     u2445:	
 10771  0F95  36A8               	lsrf	??___ftmul+2,f
 10772  0F96  0CA7               	rrf	??___ftmul+1,f
 10773  0F97  0CA6               	rrf	??___ftmul,f
 10774  0F98  0B89               	decfsz	9,f
 10775  0F99  2F95               	goto	u2445
 10776  0F9A  0826               	movf	??___ftmul,w
 10777  0F9B  00A9               	movwf	??___ftmul+3
 10778  0F9C  0829               	movf	??___ftmul+3,w
 10779  0F9D  06AF               	xorwf	___ftmul@sign,f
 10780  0F9E  3080               	movlw	128
 10781  0F9F  00A6               	movwf	??___ftmul
 10782  0FA0  0826               	movf	??___ftmul,w
 10783  0FA1  05AF               	andwf	___ftmul@sign,f
 10784  0FA2  17A1               	bsf	___ftmul@f1+1,7
 10785  0FA3  17A4               	bsf	___ftmul@f2+1,7
 10786  0FA4  30FF               	movlw	255
 10787  0FA5  05A3               	andwf	___ftmul@f2,f
 10788  0FA6  30FF               	movlw	255
 10789  0FA7  05A4               	andwf	___ftmul@f2+1,f
 10790  0FA8  3000               	movlw	0
 10791  0FA9  05A5               	andwf	___ftmul@f2+2,f
 10792  0FAA  3000               	movlw	0
 10793  0FAB  00AB               	movwf	___ftmul@f3_as_product
 10794  0FAC  3000               	movlw	0
 10795  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
 10796  0FAE  3000               	movlw	0
 10797  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
 10798  0FB0  3007               	movlw	7
 10799  0FB1  00A6               	movwf	??___ftmul
 10800  0FB2  0826               	movf	??___ftmul,w
 10801  0FB3  00AE               	movwf	___ftmul@cntr
 10802  0FB4                     l2366:	
 10803  0FB4  1C20               	btfss	___ftmul@f1,0
 10804  0FB5  2FBC               	goto	l2370
 10805  0FB6  0823               	movf	___ftmul@f2,w
 10806  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
 10807  0FB8  0824               	movf	___ftmul@f2+1,w
 10808  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10809  0FBA  0825               	movf	___ftmul@f2+2,w
 10810  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10811  0FBC                     l2370:	
 10812  0FBC  3001               	movlw	1
 10813  0FBD                     u2465:	
 10814  0FBD  36A2               	lsrf	___ftmul@f1+2,f
 10815  0FBE  0CA1               	rrf	___ftmul@f1+1,f
 10816  0FBF  0CA0               	rrf	___ftmul@f1,f
 10817  0FC0  0B89               	decfsz	9,f
 10818  0FC1  2FBD               	goto	u2465
 10819  0FC2  3001               	movlw	1
 10820  0FC3                     u2475:	
 10821  0FC3  35A3               	lslf	___ftmul@f2,f
 10822  0FC4  0DA4               	rlf	___ftmul@f2+1,f
 10823  0FC5  0DA5               	rlf	___ftmul@f2+2,f
 10824  0FC6  0B89               	decfsz	9,f
 10825  0FC7  2FC3               	goto	u2475
 10826  0FC8  3001               	movlw	1
 10827  0FC9  02AE               	subwf	___ftmul@cntr,f
 10828  0FCA  1D03               	btfss	3,2
 10829  0FCB  2FB4               	goto	l2366
 10830  0FCC  3009               	movlw	9
 10831  0FCD  00A6               	movwf	??___ftmul
 10832  0FCE  0826               	movf	??___ftmul,w
 10833  0FCF  00AE               	movwf	___ftmul@cntr
 10834  0FD0                     l2378:	
 10835  0FD0  1C20               	btfss	___ftmul@f1,0
 10836  0FD1  2FD8               	goto	l2382
 10837  0FD2  0823               	movf	___ftmul@f2,w
 10838  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
 10839  0FD4  0824               	movf	___ftmul@f2+1,w
 10840  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 10841  0FD6  0825               	movf	___ftmul@f2+2,w
 10842  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 10843  0FD8                     l2382:	
 10844  0FD8  3001               	movlw	1
 10845  0FD9                     u2505:	
 10846  0FD9  36A2               	lsrf	___ftmul@f1+2,f
 10847  0FDA  0CA1               	rrf	___ftmul@f1+1,f
 10848  0FDB  0CA0               	rrf	___ftmul@f1,f
 10849  0FDC  0B89               	decfsz	9,f
 10850  0FDD  2FD9               	goto	u2505
 10851  0FDE  3001               	movlw	1
 10852  0FDF                     u2515:	
 10853  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
 10854  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
 10855  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
 10856  0FE2  0B89               	decfsz	9,f
 10857  0FE3  2FDF               	goto	u2515
 10858  0FE4  3001               	movlw	1
 10859  0FE5  02AE               	subwf	___ftmul@cntr,f
 10860  0FE6  1D03               	btfss	3,2
 10861  0FE7  2FD0               	goto	l2378
 10862  0FE8  082B               	movf	___ftmul@f3_as_product,w
 10863  0FE9  00F0               	movwf	___ftpack@arg
 10864  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
 10865  0FEB  00F1               	movwf	___ftpack@arg+1
 10866  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
 10867  0FED  00F2               	movwf	___ftpack@arg+2
 10868  0FEE  082A               	movf	___ftmul@exp,w
 10869  0FEF  00A6               	movwf	??___ftmul
 10870  0FF0  0826               	movf	??___ftmul,w
 10871  0FF1  00F3               	movwf	___ftpack@exp
 10872  0FF2  082F               	movf	___ftmul@sign,w
 10873  0FF3  00A7               	movwf	??___ftmul+1
 10874  0FF4  0827               	movf	??___ftmul+1,w
 10875  0FF5  00F4               	movwf	___ftpack@sign
 10876  0FF6  318C  240D         	fcall	___ftpack
 10877  0FF8  0870               	movf	?___ftpack,w
 10878  0FF9  0020               	movlb	0	; select bank0
 10879  0FFA  00A0               	movwf	?___ftmul
 10880  0FFB  0871               	movf	?___ftpack+1,w
 10881  0FFC  00A1               	movwf	?___ftmul+1
 10882  0FFD  0872               	movf	?___ftpack+2,w
 10883  0FFE  00A2               	movwf	?___ftmul+2
 10884  0FFF  0008               	return
 10885  1000                     __end_of___ftmul:	
 10886                           
 10887                           	psect	text37
 10888  0A60                     __ptext37:	
 10889 ;; *************** function ___ftge *****************
 10890 ;; Defined at:
 10891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  ff1             3   29[BANK0 ] float 
 10894 ;;  ff2             3   32[BANK0 ] float 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;		None               void
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;Total ram usage:        9 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_PID_Calculate
 10916 ;;		_main
 10917 ;;		_log
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           
 10922                           ;psect for function ___ftge
 10923  0A60                     ___ftge:	
 10924                           
 10925                           ;incstack = 0
 10926                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10927  0A60  0020               	movlb	0	; select bank0
 10928  0A61  1FBF               	btfss	___ftge@ff1+2,7
 10929  0A62  2A77               	goto	l2630
 10930  0A63  093D               	comf	___ftge@ff1,w
 10931  0A64  00C3               	movwf	??___ftge
 10932  0A65  093E               	comf	___ftge@ff1+1,w
 10933  0A66  00C4               	movwf	??___ftge+1
 10934  0A67  093F               	comf	___ftge@ff1+2,w
 10935  0A68  00C5               	movwf	??___ftge+2
 10936  0A69  0AC3               	incf	??___ftge,f
 10937  0A6A  1903               	skipnz
 10938  0A6B  0AC4               	incf	??___ftge+1,f
 10939  0A6C  1903               	skipnz
 10940  0A6D  0AC5               	incf	??___ftge+2,f
 10941  0A6E  3000               	movlw	0
 10942  0A6F  0743               	addwf	??___ftge,w
 10943  0A70  00BD               	movwf	___ftge@ff1
 10944  0A71  3000               	movlw	0
 10945  0A72  3D44               	addwfc	??___ftge+1,w
 10946  0A73  00BE               	movwf	___ftge@ff1+1
 10947  0A74  3080               	movlw	128
 10948  0A75  3D45               	addwfc	??___ftge+2,w
 10949  0A76  00BF               	movwf	___ftge@ff1+2
 10950  0A77                     l2630:	
 10951  0A77  1FC2               	btfss	___ftge@ff2+2,7
 10952  0A78  2A8D               	goto	l2634
 10953  0A79  0940               	comf	___ftge@ff2,w
 10954  0A7A  00C3               	movwf	??___ftge
 10955  0A7B  0941               	comf	___ftge@ff2+1,w
 10956  0A7C  00C4               	movwf	??___ftge+1
 10957  0A7D  0942               	comf	___ftge@ff2+2,w
 10958  0A7E  00C5               	movwf	??___ftge+2
 10959  0A7F  0AC3               	incf	??___ftge,f
 10960  0A80  1903               	skipnz
 10961  0A81  0AC4               	incf	??___ftge+1,f
 10962  0A82  1903               	skipnz
 10963  0A83  0AC5               	incf	??___ftge+2,f
 10964  0A84  3000               	movlw	0
 10965  0A85  0743               	addwf	??___ftge,w
 10966  0A86  00C0               	movwf	___ftge@ff2
 10967  0A87  3000               	movlw	0
 10968  0A88  3D44               	addwfc	??___ftge+1,w
 10969  0A89  00C1               	movwf	___ftge@ff2+1
 10970  0A8A  3080               	movlw	128
 10971  0A8B  3D45               	addwfc	??___ftge+2,w
 10972  0A8C  00C2               	movwf	___ftge@ff2+2
 10973  0A8D                     l2634:	
 10974  0A8D  3080               	movlw	128
 10975  0A8E  06BF               	xorwf	___ftge@ff1+2,f
 10976  0A8F  3080               	movlw	128
 10977  0A90  06C2               	xorwf	___ftge@ff2+2,f
 10978  0A91  0842               	movf	___ftge@ff2+2,w
 10979  0A92  023F               	subwf	___ftge@ff1+2,w
 10980  0A93  1D03               	skipz
 10981  0A94  0008               	return
 10982  0A95  0841               	movf	___ftge@ff2+1,w
 10983  0A96  023E               	subwf	___ftge@ff1+1,w
 10984  0A97  1D03               	skipz
 10985  0A98  0008               	return
 10986  0A99  0840               	movf	___ftge@ff2,w
 10987  0A9A  023D               	subwf	___ftge@ff1,w
 10988  0A9B  0008               	return
 10989  0A9C                     __end_of___ftge:	
 10990                           
 10991                           	psect	text38
 10992  021B                     __ptext38:	
 10993 ;; *************** function ___ftadd *****************
 10994 ;; Defined at:
 10995 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;  f1              3   16[BANK0 ] float 
 10998 ;;  f2              3   19[BANK0 ] float 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;  exp1            1   28[BANK0 ] unsigned char 
 11001 ;;  exp2            1   27[BANK0 ] unsigned char 
 11002 ;;  sign            1   26[BANK0 ] unsigned char 
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  3   16[BANK0 ] float 
 11005 ;; Registers used:
 11006 ;;		wreg, status,2, status,0, pclath, cstack
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11012 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;Total ram usage:       13 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    1
 11019 ;; This function calls:
 11020 ;;		___ftpack
 11021 ;; This function is called by:
 11022 ;;		_PID_Calculate
 11023 ;;		_main
 11024 ;;		___ftsub
 11025 ;;		_log
 11026 ;;		_eval_poly
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           
 11031                           ;psect for function ___ftadd
 11032  021B                     ___ftadd:	
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11036  021B  0020               	movlb	0	; select bank0
 11037  021C  0830               	movf	___ftadd@f1,w
 11038  021D  00B6               	movwf	??___ftadd
 11039  021E  0831               	movf	___ftadd@f1+1,w
 11040  021F  00B7               	movwf	??___ftadd+1
 11041  0220  0832               	movf	___ftadd@f1+2,w
 11042  0221  00B8               	movwf	??___ftadd+2
 11043  0222  1003               	clrc
 11044  0223  0D37               	rlf	??___ftadd+1,w
 11045  0224  0D38               	rlf	??___ftadd+2,w
 11046  0225  00B9               	movwf	??___ftadd+3
 11047  0226  0839               	movf	??___ftadd+3,w
 11048  0227  00BC               	movwf	___ftadd@exp1
 11049  0228  0833               	movf	___ftadd@f2,w
 11050  0229  00B6               	movwf	??___ftadd
 11051  022A  0834               	movf	___ftadd@f2+1,w
 11052  022B  00B7               	movwf	??___ftadd+1
 11053  022C  0835               	movf	___ftadd@f2+2,w
 11054  022D  00B8               	movwf	??___ftadd+2
 11055  022E  1003               	clrc
 11056  022F  0D37               	rlf	??___ftadd+1,w
 11057  0230  0D38               	rlf	??___ftadd+2,w
 11058  0231  00B9               	movwf	??___ftadd+3
 11059  0232  0839               	movf	??___ftadd+3,w
 11060  0233  00BB               	movwf	___ftadd@exp2
 11061  0234  083C               	movf	___ftadd@exp1,w
 11062  0235  1903               	btfsc	3,2
 11063  0236  2A43               	goto	l2278
 11064  0237  083B               	movf	___ftadd@exp2,w
 11065  0238  023C               	subwf	___ftadd@exp1,w
 11066  0239  1803               	skipnc
 11067  023A  2A4A               	goto	l2282
 11068  023B  033C               	decf	___ftadd@exp1,w
 11069  023C  3AFF               	xorlw	255
 11070  023D  073B               	addwf	___ftadd@exp2,w
 11071  023E  00B6               	movwf	??___ftadd
 11072  023F  3019               	movlw	25
 11073  0240  0236               	subwf	??___ftadd,w
 11074  0241  1C03               	skipc
 11075  0242  2A4A               	goto	l2282
 11076  0243                     l2278:	
 11077  0243  0833               	movf	___ftadd@f2,w
 11078  0244  00B0               	movwf	?___ftadd
 11079  0245  0834               	movf	___ftadd@f2+1,w
 11080  0246  00B1               	movwf	?___ftadd+1
 11081  0247  0835               	movf	___ftadd@f2+2,w
 11082  0248  00B2               	movwf	?___ftadd+2
 11083  0249  0008               	return
 11084  024A                     l2282:	
 11085  024A  083B               	movf	___ftadd@exp2,w
 11086  024B  1903               	btfsc	3,2
 11087  024C  0008               	return
 11088  024D  083C               	movf	___ftadd@exp1,w
 11089  024E  023B               	subwf	___ftadd@exp2,w
 11090  024F  1803               	skipnc
 11091  0250  2A59               	goto	l2288
 11092  0251  033B               	decf	___ftadd@exp2,w
 11093  0252  3AFF               	xorlw	255
 11094  0253  073C               	addwf	___ftadd@exp1,w
 11095  0254  00B6               	movwf	??___ftadd
 11096  0255  3019               	movlw	25
 11097  0256  0236               	subwf	??___ftadd,w
 11098  0257  1803               	btfsc	3,0
 11099  0258  0008               	return
 11100  0259                     l2288:	
 11101  0259  3006               	movlw	6
 11102  025A  00B6               	movwf	??___ftadd
 11103  025B  0836               	movf	??___ftadd,w
 11104  025C  00BA               	movwf	___ftadd@sign
 11105  025D  1BB2               	btfsc	___ftadd@f1+2,7
 11106  025E  17BA               	bsf	___ftadd@sign,7
 11107  025F  1BB5               	btfsc	___ftadd@f2+2,7
 11108  0260  173A               	bsf	___ftadd@sign,6
 11109  0261  17B1               	bsf	___ftadd@f1+1,7
 11110  0262  30FF               	movlw	255
 11111  0263  05B0               	andwf	___ftadd@f1,f
 11112  0264  30FF               	movlw	255
 11113  0265  05B1               	andwf	___ftadd@f1+1,f
 11114  0266  3000               	movlw	0
 11115  0267  05B2               	andwf	___ftadd@f1+2,f
 11116  0268  17B4               	bsf	___ftadd@f2+1,7
 11117  0269  30FF               	movlw	255
 11118  026A  05B3               	andwf	___ftadd@f2,f
 11119  026B  30FF               	movlw	255
 11120  026C  05B4               	andwf	___ftadd@f2+1,f
 11121  026D  3000               	movlw	0
 11122  026E  05B5               	andwf	___ftadd@f2+2,f
 11123  026F  083B               	movf	___ftadd@exp2,w
 11124  0270  023C               	subwf	___ftadd@exp1,w
 11125  0271  1803               	skipnc
 11126  0272  2A95               	goto	l2310
 11127  0273                     l2300:	
 11128  0273  3001               	movlw	1
 11129  0274                     u2275:	
 11130  0274  35B3               	lslf	___ftadd@f2,f
 11131  0275  0DB4               	rlf	___ftadd@f2+1,f
 11132  0276  0DB5               	rlf	___ftadd@f2+2,f
 11133  0277  0B89               	decfsz	9,f
 11134  0278  2A74               	goto	u2275
 11135  0279  3001               	movlw	1
 11136  027A  02BB               	subwf	___ftadd@exp2,f
 11137  027B  083B               	movf	___ftadd@exp2,w
 11138  027C  063C               	xorwf	___ftadd@exp1,w
 11139  027D  1903               	skipnz
 11140  027E  2A90               	goto	l2308
 11141  027F  3001               	movlw	1
 11142  0280  02BA               	subwf	___ftadd@sign,f
 11143  0281  083A               	movf	___ftadd@sign,w
 11144  0282  3907               	andlw	7
 11145  0283  1903               	btfsc	3,2
 11146  0284  2A90               	goto	l2308
 11147  0285  2A73               	goto	l2300
 11148  0286                     l2306:	
 11149  0286  3001               	movlw	1
 11150  0287                     u2305:	
 11151  0287  36B2               	lsrf	___ftadd@f1+2,f
 11152  0288  0CB1               	rrf	___ftadd@f1+1,f
 11153  0289  0CB0               	rrf	___ftadd@f1,f
 11154  028A  0B89               	decfsz	9,f
 11155  028B  2A87               	goto	u2305
 11156  028C  3001               	movlw	1
 11157  028D  00B6               	movwf	??___ftadd
 11158  028E  0836               	movf	??___ftadd,w
 11159  028F  07BC               	addwf	___ftadd@exp1,f
 11160  0290                     l2308:	
 11161  0290  083C               	movf	___ftadd@exp1,w
 11162  0291  063B               	xorwf	___ftadd@exp2,w
 11163  0292  1903               	btfsc	3,2
 11164  0293  2ABA               	goto	l670
 11165  0294  2A86               	goto	l2306
 11166  0295                     l2310:	
 11167  0295  083C               	movf	___ftadd@exp1,w
 11168  0296  023B               	subwf	___ftadd@exp2,w
 11169  0297  1803               	skipnc
 11170  0298  2ABA               	goto	l670
 11171  0299                     l2312:	
 11172  0299  3001               	movlw	1
 11173  029A                     u2335:	
 11174  029A  35B0               	lslf	___ftadd@f1,f
 11175  029B  0DB1               	rlf	___ftadd@f1+1,f
 11176  029C  0DB2               	rlf	___ftadd@f1+2,f
 11177  029D  0B89               	decfsz	9,f
 11178  029E  2A9A               	goto	u2335
 11179  029F  3001               	movlw	1
 11180  02A0  02BC               	subwf	___ftadd@exp1,f
 11181  02A1  083B               	movf	___ftadd@exp2,w
 11182  02A2  063C               	xorwf	___ftadd@exp1,w
 11183  02A3  1903               	skipnz
 11184  02A4  2AB6               	goto	l2320
 11185  02A5  3001               	movlw	1
 11186  02A6  02BA               	subwf	___ftadd@sign,f
 11187  02A7  083A               	movf	___ftadd@sign,w
 11188  02A8  3907               	andlw	7
 11189  02A9  1903               	btfsc	3,2
 11190  02AA  2AB6               	goto	l2320
 11191  02AB  2A99               	goto	l2312
 11192  02AC                     l2318:	
 11193  02AC  3001               	movlw	1
 11194  02AD                     u2365:	
 11195  02AD  36B5               	lsrf	___ftadd@f2+2,f
 11196  02AE  0CB4               	rrf	___ftadd@f2+1,f
 11197  02AF  0CB3               	rrf	___ftadd@f2,f
 11198  02B0  0B89               	decfsz	9,f
 11199  02B1  2AAD               	goto	u2365
 11200  02B2  3001               	movlw	1
 11201  02B3  00B6               	movwf	??___ftadd
 11202  02B4  0836               	movf	??___ftadd,w
 11203  02B5  07BB               	addwf	___ftadd@exp2,f
 11204  02B6                     l2320:	
 11205  02B6  083C               	movf	___ftadd@exp1,w
 11206  02B7  063B               	xorwf	___ftadd@exp2,w
 11207  02B8  1D03               	skipz
 11208  02B9  2AAC               	goto	l2318
 11209  02BA                     l670:	
 11210  02BA  1FBA               	btfss	___ftadd@sign,7
 11211  02BB  2ACC               	goto	l2324
 11212  02BC  30FF               	movlw	255
 11213  02BD  06B0               	xorwf	___ftadd@f1,f
 11214  02BE  30FF               	movlw	255
 11215  02BF  06B1               	xorwf	___ftadd@f1+1,f
 11216  02C0  30FF               	movlw	255
 11217  02C1  06B2               	xorwf	___ftadd@f1+2,f
 11218  02C2  3001               	movlw	1
 11219  02C3  07B0               	addwf	___ftadd@f1,f
 11220  02C4  3000               	movlw	0
 11221  02C5  1803               	skipnc
 11222  02C6  3001               	movlw	1
 11223  02C7  07B1               	addwf	___ftadd@f1+1,f
 11224  02C8  3000               	movlw	0
 11225  02C9  1803               	skipnc
 11226  02CA  3001               	movlw	1
 11227  02CB  07B2               	addwf	___ftadd@f1+2,f
 11228  02CC                     l2324:	
 11229  02CC  1F3A               	btfss	___ftadd@sign,6
 11230  02CD  2ADE               	goto	l2328
 11231  02CE  30FF               	movlw	255
 11232  02CF  06B3               	xorwf	___ftadd@f2,f
 11233  02D0  30FF               	movlw	255
 11234  02D1  06B4               	xorwf	___ftadd@f2+1,f
 11235  02D2  30FF               	movlw	255
 11236  02D3  06B5               	xorwf	___ftadd@f2+2,f
 11237  02D4  3001               	movlw	1
 11238  02D5  07B3               	addwf	___ftadd@f2,f
 11239  02D6  3000               	movlw	0
 11240  02D7  1803               	skipnc
 11241  02D8  3001               	movlw	1
 11242  02D9  07B4               	addwf	___ftadd@f2+1,f
 11243  02DA  3000               	movlw	0
 11244  02DB  1803               	skipnc
 11245  02DC  3001               	movlw	1
 11246  02DD  07B5               	addwf	___ftadd@f2+2,f
 11247  02DE                     l2328:	
 11248  02DE  01BA               	clrf	___ftadd@sign
 11249  02DF  0830               	movf	___ftadd@f1,w
 11250  02E0  07B3               	addwf	___ftadd@f2,f
 11251  02E1  0831               	movf	___ftadd@f1+1,w
 11252  02E2  3DB4               	addwfc	___ftadd@f2+1,f
 11253  02E3  0832               	movf	___ftadd@f1+2,w
 11254  02E4  3DB5               	addwfc	___ftadd@f2+2,f
 11255  02E5  1FB5               	btfss	___ftadd@f2+2,7
 11256  02E6  2AF9               	goto	l2338
 11257  02E7  30FF               	movlw	255
 11258  02E8  06B3               	xorwf	___ftadd@f2,f
 11259  02E9  30FF               	movlw	255
 11260  02EA  06B4               	xorwf	___ftadd@f2+1,f
 11261  02EB  30FF               	movlw	255
 11262  02EC  06B5               	xorwf	___ftadd@f2+2,f
 11263  02ED  3001               	movlw	1
 11264  02EE  07B3               	addwf	___ftadd@f2,f
 11265  02EF  3000               	movlw	0
 11266  02F0  1803               	skipnc
 11267  02F1  3001               	movlw	1
 11268  02F2  07B4               	addwf	___ftadd@f2+1,f
 11269  02F3  3000               	movlw	0
 11270  02F4  1803               	skipnc
 11271  02F5  3001               	movlw	1
 11272  02F6  07B5               	addwf	___ftadd@f2+2,f
 11273  02F7  01BA               	clrf	___ftadd@sign
 11274  02F8  0ABA               	incf	___ftadd@sign,f
 11275  02F9                     l2338:	
 11276  02F9  0833               	movf	___ftadd@f2,w
 11277  02FA  00F0               	movwf	___ftpack@arg
 11278  02FB  0834               	movf	___ftadd@f2+1,w
 11279  02FC  00F1               	movwf	___ftpack@arg+1
 11280  02FD  0835               	movf	___ftadd@f2+2,w
 11281  02FE  00F2               	movwf	___ftpack@arg+2
 11282  02FF  083C               	movf	___ftadd@exp1,w
 11283  0300  00B6               	movwf	??___ftadd
 11284  0301  0836               	movf	??___ftadd,w
 11285  0302  00F3               	movwf	___ftpack@exp
 11286  0303  083A               	movf	___ftadd@sign,w
 11287  0304  00B7               	movwf	??___ftadd+1
 11288  0305  0837               	movf	??___ftadd+1,w
 11289  0306  00F4               	movwf	___ftpack@sign
 11290  0307  318C  240D         	fcall	___ftpack
 11291  0309  0870               	movf	?___ftpack,w
 11292  030A  0020               	movlb	0	; select bank0
 11293  030B  00B0               	movwf	?___ftadd
 11294  030C  0871               	movf	?___ftpack+1,w
 11295  030D  00B1               	movwf	?___ftadd+1
 11296  030E  0872               	movf	?___ftpack+2,w
 11297  030F  00B2               	movwf	?___ftadd+2
 11298  0310  0008               	return
 11299  0311                     __end_of___ftadd:	
 11300                           
 11301                           	psect	text39
 11302  0929                     __ptext39:	
 11303 ;; *************** function ___awtoft *****************
 11304 ;; Defined at:
 11305 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  c               2    8[COMMON] int 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;  sign            1   13[COMMON] unsigned char 
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  3    8[COMMON] float 
 11312 ;; Registers used:
 11313 ;;		wreg, status,2, status,0, pclath, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11319 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;Total ram usage:        6 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:    1
 11326 ;; This function calls:
 11327 ;;		___ftpack
 11328 ;; This function is called by:
 11329 ;;		_PID_Calculate
 11330 ;;		_log
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           
 11335                           ;psect for function ___awtoft
 11336  0929                     ___awtoft:	
 11337                           
 11338                           ;incstack = 0
 11339                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11340  0929  01FD               	clrf	___awtoft@sign
 11341  092A  1FF9               	btfss	___awtoft@c+1,7
 11342  092B  2933               	goto	l2622
 11343  092C  09F8               	comf	___awtoft@c,f
 11344  092D  09F9               	comf	___awtoft@c+1,f
 11345  092E  0AF8               	incf	___awtoft@c,f
 11346  092F  1903               	skipnz
 11347  0930  0AF9               	incf	___awtoft@c+1,f
 11348  0931  01FD               	clrf	___awtoft@sign
 11349  0932  0AFD               	incf	___awtoft@sign,f
 11350  0933                     l2622:	
 11351  0933  0878               	movf	___awtoft@c,w
 11352  0934  00F0               	movwf	___ftpack@arg
 11353  0935  0879               	movf	___awtoft@c+1,w
 11354  0936  00F1               	movwf	___ftpack@arg+1
 11355  0937  01F2               	clrf	___ftpack@arg+2
 11356  0938  308E               	movlw	142
 11357  0939  00FB               	movwf	??___awtoft
 11358  093A  087B               	movf	??___awtoft,w
 11359  093B  00F3               	movwf	___ftpack@exp
 11360  093C  087D               	movf	___awtoft@sign,w
 11361  093D  00FC               	movwf	??___awtoft+1
 11362  093E  087C               	movf	??___awtoft+1,w
 11363  093F  00F4               	movwf	___ftpack@sign
 11364  0940  318C  240D         	fcall	___ftpack
 11365  0942  0870               	movf	?___ftpack,w
 11366  0943  00F8               	movwf	?___awtoft
 11367  0944  0871               	movf	?___ftpack+1,w
 11368  0945  00F9               	movwf	?___awtoft+1
 11369  0946  0872               	movf	?___ftpack+2,w
 11370  0947  00FA               	movwf	?___awtoft+2
 11371  0948  0008               	return
 11372  0949                     __end_of___awtoft:	
 11373                           
 11374                           	psect	text40
 11375  0C0D                     __ptext40:	
 11376 ;; *************** function ___ftpack *****************
 11377 ;; Defined at:
 11378 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;  arg             3    0[COMMON] unsigned um
 11381 ;;  exp             1    3[COMMON] unsigned char 
 11382 ;;  sign            1    4[COMMON] unsigned char 
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  3    0[COMMON] float 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11394 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;Total ram usage:        8 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; This function calls:
 11401 ;;		Nothing
 11402 ;; This function is called by:
 11403 ;;		___awtoft
 11404 ;;		___ftadd
 11405 ;;		___ftdiv
 11406 ;;		___ftmul
 11407 ;;		___lbtoft
 11408 ;;		___lwtoft
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           
 11413                           ;psect for function ___ftpack
 11414  0C0D                     ___ftpack:	
 11415                           
 11416                           ;incstack = 0
 11417                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11418  0C0D  0873               	movf	___ftpack@exp,w
 11419  0C0E  1903               	btfsc	3,2
 11420  0C0F  2C15               	goto	l2068
 11421  0C10  0872               	movf	___ftpack@arg+2,w
 11422  0C11  0471               	iorwf	___ftpack@arg+1,w
 11423  0C12  0470               	iorwf	___ftpack@arg,w
 11424  0C13  1D03               	skipz
 11425  0C14  2C26               	goto	l2074
 11426  0C15                     l2068:	
 11427  0C15  3000               	movlw	0
 11428  0C16  00F0               	movwf	?___ftpack
 11429  0C17  3000               	movlw	0
 11430  0C18  00F1               	movwf	?___ftpack+1
 11431  0C19  3000               	movlw	0
 11432  0C1A  00F2               	movwf	?___ftpack+2
 11433  0C1B  0008               	return
 11434  0C1C                     l2072:	
 11435  0C1C  3001               	movlw	1
 11436  0C1D  00F5               	movwf	??___ftpack
 11437  0C1E  0875               	movf	??___ftpack,w
 11438  0C1F  07F3               	addwf	___ftpack@exp,f
 11439  0C20  3001               	movlw	1
 11440  0C21                     u1715:	
 11441  0C21  36F2               	lsrf	___ftpack@arg+2,f
 11442  0C22  0CF1               	rrf	___ftpack@arg+1,f
 11443  0C23  0CF0               	rrf	___ftpack@arg,f
 11444  0C24  0B89               	decfsz	9,f
 11445  0C25  2C21               	goto	u1715
 11446  0C26                     l2074:	
 11447  0C26  30FE               	movlw	254
 11448  0C27  0572               	andwf	___ftpack@arg+2,w
 11449  0C28  1903               	btfsc	3,2
 11450  0C29  2C3F               	goto	l639
 11451  0C2A  2C1C               	goto	l2072
 11452  0C2B                     l2076:	
 11453  0C2B  3001               	movlw	1
 11454  0C2C  00F5               	movwf	??___ftpack
 11455  0C2D  0875               	movf	??___ftpack,w
 11456  0C2E  07F3               	addwf	___ftpack@exp,f
 11457  0C2F  3001               	movlw	1
 11458  0C30  07F0               	addwf	___ftpack@arg,f
 11459  0C31  3000               	movlw	0
 11460  0C32  1803               	skipnc
 11461  0C33  3001               	movlw	1
 11462  0C34  07F1               	addwf	___ftpack@arg+1,f
 11463  0C35  3000               	movlw	0
 11464  0C36  1803               	skipnc
 11465  0C37  3001               	movlw	1
 11466  0C38  07F2               	addwf	___ftpack@arg+2,f
 11467  0C39  3001               	movlw	1
 11468  0C3A                     u1735:	
 11469  0C3A  36F2               	lsrf	___ftpack@arg+2,f
 11470  0C3B  0CF1               	rrf	___ftpack@arg+1,f
 11471  0C3C  0CF0               	rrf	___ftpack@arg,f
 11472  0C3D  0B89               	decfsz	9,f
 11473  0C3E  2C3A               	goto	u1735
 11474  0C3F                     l639:	
 11475  0C3F  30FF               	movlw	255
 11476  0C40  0572               	andwf	___ftpack@arg+2,w
 11477  0C41  1903               	btfsc	3,2
 11478  0C42  2C4C               	goto	l2084
 11479  0C43  2C2B               	goto	l2076
 11480  0C44                     l2082:	
 11481  0C44  3001               	movlw	1
 11482  0C45  02F3               	subwf	___ftpack@exp,f
 11483  0C46  3001               	movlw	1
 11484  0C47                     u1755:	
 11485  0C47  35F0               	lslf	___ftpack@arg,f
 11486  0C48  0DF1               	rlf	___ftpack@arg+1,f
 11487  0C49  0DF2               	rlf	___ftpack@arg+2,f
 11488  0C4A  0B89               	decfsz	9,f
 11489  0C4B  2C47               	goto	u1755
 11490  0C4C                     l2084:	
 11491  0C4C  1BF1               	btfsc	___ftpack@arg+1,7
 11492  0C4D  2C52               	goto	l646
 11493  0C4E  3002               	movlw	2
 11494  0C4F  0273               	subwf	___ftpack@exp,w
 11495  0C50  1803               	skipnc
 11496  0C51  2C44               	goto	l2082
 11497  0C52                     l646:	
 11498  0C52  1873               	btfsc	___ftpack@exp,0
 11499  0C53  2C5A               	goto	l647
 11500  0C54  30FF               	movlw	255
 11501  0C55  05F0               	andwf	___ftpack@arg,f
 11502  0C56  307F               	movlw	127
 11503  0C57  05F1               	andwf	___ftpack@arg+1,f
 11504  0C58  30FF               	movlw	255
 11505  0C59  05F2               	andwf	___ftpack@arg+2,f
 11506  0C5A                     l647:	
 11507  0C5A  1003               	clrc
 11508  0C5B  0CF3               	rrf	___ftpack@exp,f
 11509  0C5C  0873               	movf	___ftpack@exp,w
 11510  0C5D  00F5               	movwf	??___ftpack
 11511  0C5E  01F6               	clrf	??___ftpack+1
 11512  0C5F  01F7               	clrf	??___ftpack+2
 11513  0C60  3010               	movlw	16
 11514  0C61                     u1795:	
 11515  0C61  35F5               	lslf	??___ftpack,f
 11516  0C62  0DF6               	rlf	??___ftpack+1,f
 11517  0C63  0DF7               	rlf	??___ftpack+2,f
 11518  0C64  0B89               	decfsz	9,f
 11519  0C65  2C61               	goto	u1795
 11520  0C66  0875               	movf	??___ftpack,w
 11521  0C67  04F0               	iorwf	___ftpack@arg,f
 11522  0C68  0876               	movf	??___ftpack+1,w
 11523  0C69  04F1               	iorwf	___ftpack@arg+1,f
 11524  0C6A  0877               	movf	??___ftpack+2,w
 11525  0C6B  04F2               	iorwf	___ftpack@arg+2,f
 11526  0C6C  0874               	movf	___ftpack@sign,w
 11527  0C6D  1903               	btfsc	3,2
 11528  0C6E  0008               	return
 11529  0C6F  17F2               	bsf	___ftpack@arg+2,7
 11530  0C70  0008               	return
 11531  0C71                     __end_of___ftpack:	
 11532                           
 11533                           	psect	text41
 11534  080C                     __ptext41:	
 11535 ;; *************** function _ADCC_GetSingleConversion *****************
 11536 ;; Defined at:
 11537 ;;		line 52 in file "adcc.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;  channel         1    wreg     enum E13559
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;  channel         1    3[COMMON] enum E13559
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  2    0[COMMON] unsigned int 
 11544 ;; Registers used:
 11545 ;;		wreg
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;Total ram usage:        4 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_main
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _ADCC_GetSingleConversion
 11566  080C                     _ADCC_GetSingleConversion:	
 11567                           
 11568                           ;incstack = 0
 11569                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11570                           ;ADCC_GetSingleConversion@channel stored from wreg
 11571  080C  00F3               	movwf	ADCC_GetSingleConversion@channel
 11572                           
 11573                           ;adcc.c: 55: ADPCH = channel;
 11574  080D  0873               	movf	ADCC_GetSingleConversion@channel,w
 11575  080E  0021               	movlb	1	; select bank1
 11576  080F  009E               	movwf	30	;volatile
 11577                           
 11578                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 11579  0810  1793               	bsf	19,7	;volatile
 11580                           
 11581                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 11582  0811  1313               	bcf	19,6	;volatile
 11583                           
 11584                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 11585  0812  1413               	bsf	19,0	;volatile
 11586  0813                     l224:	
 11587                           ;adcc.c: 68: {
 11588                           
 11589                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 11590                           
 11591  0813  1813               	btfsc	19,0	;volatile
 11592  0814  2813               	goto	l224
 11593                           
 11594                           ;adcc.c: 69: }
 11595                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 11596  0815  080D               	movf	13,w	;volatile
 11597  0816  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11598  0817  080C               	movf	12,w	;volatile
 11599  0818  00F0               	movwf	?_ADCC_GetSingleConversion
 11600  0819  0008               	return
 11601  081A                     __end_of_ADCC_GetSingleConversion:	
 11602  007E                     btemp	set	126	;btemp
 11603  007E                     wtemp	set	126
 11604  007E                     wtemp0	set	126
 11605  0080                     wtemp1	set	128
 11606  0082                     wtemp2	set	130
 11607  0084                     wtemp3	set	132
 11608  0086                     wtemp4	set	134
 11609  0088                     wtemp5	set	136
 11610  007F                     wtemp6	set	127
 11611  007E                     ttemp	set	126
 11612  007E                     ttemp0	set	126
 11613  0081                     ttemp1	set	129
 11614  0084                     ttemp2	set	132
 11615  0087                     ttemp3	set	135
 11616  007F                     ttemp4	set	127
 11617  007E                     ltemp	set	126
 11618  007E                     ltemp0	set	126
 11619  0082                     ltemp1	set	130
 11620  0086                     ltemp2	set	134
 11621  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     36      70
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___fttol->_PID_Calculate
    ___ftsub->___ftadd
    _PID_Calculate->___ftge
    ___ftge->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   67756
                                              0 BANK1     36    36      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   18253
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7577
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             61 BANK0     14    10      4
                      _PID_Calculate (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4070
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       23    18      5   10734
                                             38 BANK0     23    18      5
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     244
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2933
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     852
                                             29 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2406
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 06 10:38:16 2017

                                _x 006E                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                ___wmul@multiplicand 0072  
      __size_of_PWM6_LoadDutyValue 0016                       ___ftadd@exp1 003C  
                     ___ftadd@exp2 003B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003A                                l111 0884  
                              l113 0889                                l107 0879  
                              l109 087F                                l224 0813  
                              l340 0DD2                                l283 03C7  
                              l284 03F6                                l285 048D  
                              l533 0CFD                                l730 007E  
                              l646 0C52                                l670 02BA  
                              l478 08F8                                l647 0C5A  
                              l639 0C3F                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0E9C  
                     ___awmod@sign 0076                    _TMR2_Initialize 0829  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 084A                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 002A                     _LCD_Set_Cursor 0AD8  
                     ___ftdiv@sign 002F                               l2030 0885  
                             l2022 087B                               l2110 0B71  
                             l2120 0B79                               l2104 0B66  
                             l2026 0880                               l3002 0A20  
                             l2122 0B85                               l2300 0273  
                             l2132 0BA0                               l2220 0173  
                             l3100 076F                               l2310 0295  
                             l2230 017A                               l2206 08D8  
                             l2072 0C1C                               l2320 02B6  
                             l2312 0299                               l2136 0BA8  
                             l2128 0B97                               l2160 0B2E  
                             l2152 0B28                               l2240 01B9  
                             l2232 01A7                               l3024 04D2  
                             l2082 0C44                               l2074 0C26  
                             l2306 0286                               l2162 0B3A  
                             l2170 0B4F                               l2250 01FA  
                             l2242 01CA                               l3114 07BD  
                             l3106 077E                               l2084 0C4C  
                             l2076 0C2B                               l2068 0C15  
                             l2324 02CC                               l2308 0290  
                             l2260 08F2                               l2148 0B21  
                             l2236 01AB                               l2318 02AC  
                             l2190 0AF8                               l2174 0B57  
                             l2166 0B46                               l2254 0207  
                             l2238 01B0                               l3070 06E8  
                             l3038 055B                               l2328 02DE  
                             l2248 01CE                               l2338 02F9  
                             l2282 024A                               l2370 0FBC  
                             l2354 0F79                               l2602 0DE1  
                             l2348 0F63                               l2612 0DF1  
                             l2604 0DE2                               l2622 0933  
                             l2278 0243                               l2630 0A77  
                             l2382 0FD8                               l2366 0FB4  
                             l2288 0259                               l2544 0967  
                             l2634 0A8D                               l2378 0FD0  
                             l2538 0956                               l2812 0138  
                             l2750 04B5                               l2910 0E61  
                             l2662 0A37                               l2558 0D6F  
                             l2680 0C06                               l2592 0DCD  
                             l2930 0913                               l2834 0ECE  
                             l2940 002A                               l2828 0EBB  
                             l2764 00AE                               l2862 0D1E  
                             l2854 0D0E                               l2918 0E7A  
                             l2880 0D65                               l2872 0D4C  
                             l2864 0D2C                               l2960 0068  
                             l2792 00F8                               l2784 009E  
                             l2890 0E0A                               l2786 00ED  
                             l2876 0D57                               l2972 008F  
                             l2966 0075                               l2958 005A  
                             l2990 09F9                               l2896 0E20  
                             l2968 0081                               l2992 0A05  
                             ?_log 0047                               l2998 0A17  
                             STR_1 101B                               STR_2 101B  
                             STR_3 101B                               STR_4 1025  
                             u2015 0AE4                               u2050 015D  
                             u2035 0B03                               u2115 01E8  
                             u3005 0E71                               _LATA 0016  
                             _LATB 0017                               u3015 0E7B  
                             _LATC 0018                               u2305 0287  
                             u3115 0076                               u2155 08F9  
                             u2165 08FE                               u2335 029A  
                             u3055 0031                               u2505 0FD9  
                             u2530 09EF                               _T2PR 028D  
                             u1715 0C21                               u2275 0274  
                             u2515 0FDF                               u2435 0F85  
                             u3155 09FC                               u3307 0DC1  
                             u2365 02AD                               u2445 0F95  
                             u3317 0AB8                               u3085 005B  
                             u1735 0C3A                               u3407 0CBE  
                             u3327 0AC4                               u3175 0A06  
                             u2465 0FBD                               u3417 0CCB  
                             u3337 0AD0                               u3185 0A10  
                      main@counter 00B6                               u1755 0C47  
                             u2475 0FC3                               u3427 0CDA  
                             u3347 0C7A                               u3195 0A18  
                             u2725 086C                               u1685 09A5  
                             u3437 0CE8                               u3357 0C87  
                             u1845 0B7C                               u3277 00E4  
                             u3447 09B1                               u3367 0C92  
                             u3287 0130                               u3457 09BC  
                             u3377 0C9B                               u2905 0D2D  
                             u1865 0B86                               u1945 0B31  
                             u3297 0148                               u1795 0C61  
                             u3467 0844                               u3387 0CA4  
                             u2915 0D41                               u1875 0B90  
                             u3397 0CB1                               u2925 0D4D  
                             u1885 0B98                               u1965 0B40  
                             u1975 0B47                               u2885 0D21  
                             u2975 0E32                               u2985 0E42  
                             u2995 0E62                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                  ?_LCD_Write_String 0075  
                      main@minutes 00B2                        main@seconds 00B4  
                             _main 04BD                       ___ftpack@arg 0070  
               __size_of_LCD_Clear 0008                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               log@x 0047  
                             ltemp 007E                               start 0002  
               ??_LCD_Write_String 0077                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 0152                       ___ftmul@sign 002F  
                     ___fttol@exp1 006A                       ___fttol@lval 0066  
                            ??_log 004A            __end_of_TMR0_Initialize 0829  
                 __end_of_LCD_Init 0CEC                   __end_of_LCD_Port 088B  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
    __end_of_OSCILLATOR_Initialize 17F4                    __end_of___aldiv 0D6E  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0BAD  
                            _ADPRE 009C                    __end_of___ftadd 0311  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0B5C  
                            _ADRPT 010D                    __end_of___ftdiv 0E9C  
                  __end_of___ftneg 17E4                    __end_of___ftmul 1000  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0929  
                  __end_of___fttol 0098                              _T2CON 028E  
              main@readTemperature 00B8                              _T2HLT 028F  
                  __end_of___lwdiv 0A25                              _T2TMR 028C  
                            _T2RST 0291                    ___awdiv@counter 0075  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                  _PWM6_Initialize 0004             __end_of_LCD_Set_Cursor 0B17  
                    ___awtoft@sign 007D                              _frexp 0A25  
                            _errno 00D8                      ___ftpack@sign 0074  
                            main@R 00AA                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                   InitCustomChars@i 0076  
                   ?_LCD_Write_Int 0079                     _LCD_Write_Char 0995  
                  __initialization 07C4                        log@exponent 004B  
                     __end_of_main 07C4                   __end_of_Init_PID 0995  
          __end_of_TMR2_Initialize 0838                             ??_main 00A0  
                    ___fttol@sign1 0065                  __end_of_LCD_Clear 17EC  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0949  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 0C71  
                 __end_of___lbtoft 08D6                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 085D  
                           _PID_Kd 00C9                             _PID_Ki 00CC  
                           _PID_Kp 00CF                             _OSCFRQ 0893  
                           _TMR0IF 3865             __end_of_LCD_Write_Char 09BF  
                   __CFG_PWRTE$OFF 0000                       _CCPTMRS1bits 021F  
                           ___ftge 0A60             LCD_Write_Int@numPlaces 007C  
                        ??___aldiv 0078                             ___wmul 08F0  
                        ??___awdiv 0074                          ??___ftadd 0036  
                   __CFG_STVREN$ON 0000                          ??___awmod 0074  
                        ??___ftdiv 0026                          ??___ftneg 0073  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0061                          ??___lwdiv 007A  
                 ?_TMR0_Initialize 0070            __end_of_PWM6_Initialize 0011  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 08A3  __size_of_ADCC_GetSingleConversion 000E  
        ?_ADCC_GetSingleConversion 0070                   LCD_Write_Int@str 0025  
                    main@steinhart 00C1                    _InitCustomChars 0949  
                  LCD_Set_Cursor@w 0078                    LCD_Set_Cursor@x 0076  
                  LCD_Set_Cursor@y 0073                    LCD_Set_Cursor@z 0077  
                    _pidIntegrated 00D2                  _SYSTEM_Initialize 0A9C  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 005D  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK0 17D6                       __pidataBANK1 17D7  
                     __pidataBANK2 088B                ??_SYSTEM_Initialize 0077  
                    __end_of_frexp 0A60                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078               __size_of_readButtons 0085  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0AD8  
                       __pbssBANK0 006B                         __pbssBANK1 00C4  
               __size_of_eval_poly 0060                          ?_Init_PID 0070  
                       ??_LCD_Init 0073                         ??_LCD_Port 0070  
           __size_of_PID_Calculate 01AC                PID_Calculate@Result 0057  
                       __pmaintext 04BD                            ?___ftge 003D  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 08BC         __end_of_PWM6_LoadDutyValue 0873  
        __size_of_LCD_Write_String 001A                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                        ?___lbtoft 0078                            _ADSTPTH 0113  
                          _ADSTPTL 0112                          ?___lwtoft 0078  
          __end_of_InitCustomChars 096F                            _LCD_Cmd 0838  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PWM6DCH 038D  
                          _PWM6DCL 038C                            _PWM6CON 038E  
                          _PPSLOCK 0E8F                         ??_Init_PID 0070  
            PID_Calculate@setpoint 0046                      ?_tempSetpoint 0070  
             __CFG_SCANE$available 0000                            ___aldiv 0CEC  
                          ___cgram 0120                    __size_of___ftge 003C  
                          ___awdiv 0B5C                            ___ftadd 021B  
                          ___awmod 0B17                            ___ftdiv 0DF3  
                          ___ftneg 17DC                    __size_of___wmul 001B  
                          ___ftmul 0F4C                            ___ftsub 090B  
                          ___fttol 0011                            ___lwdiv 09F1  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 0020                  __end_of_eval_poly 0C0D  
                 ??_LCD_Set_Cursor 0074                            __ptext1 0098  
                          __ptext2 0D6E                            __ptext3 08D6  
                          __ptext4 0152                            __ptext5 0B17  
                          __ptext6 0B5C                            __ptext7 0AD8  
                          __ptext8 0E9C                            __ptext9 0A25  
                       ??___lwtoft 007B                      _PID_Calculate 0311  
     PID_Calculate@derivativeValue 0051              _OSCILLATOR_Initialize 17EC  
                        _T2CONbits 028E                       __size_of_log 00B0  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _upCount 006D  
                          _samples 238C                          _LCD_Clear 17E4  
                          _presets 00E1         __size_of_SYSTEM_Initialize 003C  
                          clrloop0 17F5               end_of_initialization 07FD  
                          init_ram 0800                            initloop 0801  
                   ??_tempSetpoint 0031          PID_Calculate@pidPrevError 0054  
                 ___aldiv@quotient 0022            PID_Calculate@errorValue 004B  
                LCD_Write_Int@sign 007D                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 081A              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 0046                 _PID_Calculate$1053 004E  
                 ?_InitCustomChars 0070                         ?_LCD_Clear 0070  
                 __CFG_FEXTOSC$OFF 0000                  LCD_Write_String@a 0075  
                LCD_Write_String@i 0078                   ??_LCD_Write_Char 0071  
                      ___ftdiv@exp 002E                  __size_of_LCD_Init 007B  
                       main@toggle 00BA                  __size_of_LCD_Port 0018  
                       main@totals 00BD                        ___ftmul@exp 002A  
                   __end_of___ftge 0A9C                     __end_of___wmul 090B  
                 _LCD_Write_String 08D6             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07C4                         eval_poly@d 0040  
                       eval_poly@n 0042                         eval_poly@x 003D  
         __size_of_TMR0_Initialize 000F    __size_of_PIN_MANAGER_Initialize 0032  
                      __end_of_log 0F4C                         frexp@value 0070  
         LCD_Write_Int@fieldLength 007B                  __size_of_Init_PID 0026  
            __end_of_LCD_Write_Int 021B                   __CFG_LPBOREN$OFF 0000  
                         ??___ftge 0043                           ??___wmul 0074  
                     _pidMaxOutput 00DA                        __pdataBANK0 006F  
                      __pdataBANK1 00E1                        __pdataBANK2 0120  
                  ??_PID_Calculate 007E                      ??_readButtons 002E  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                     _pidMinOutput 00DC                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 080C  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 0152                 _PWM6_LoadDutyValue 085D  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
                     _pidPrevInput 00D5                ?_PWM6_LoadDutyValue 0070  
                        _main$1054 00AD                   ___lwdiv@dividend 0078  
           _PIN_MANAGER_Initialize 09BF                 PID_Calculate@error 005A  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 005D  
                         ?___lwdiv 0076                    main@displayTemp 00BB  
             ??_PWM6_LoadDutyValue 0072                          _downCount 006B  
                        _eval_poly 0BAD                __end_of_readButtons 0DF3  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
                  ___aldiv@divisor 0070                  ??_TMR0_Initialize 0070  
                  ___aldiv@counter 0020                           _LCD_Init 0C71  
                   ___wmul@product 0074                           _LCD_Port 0873  
                        clear_ram0 17F4                           _PIE0bits 0716  
                         _PIR0bits 070C                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 08F0                           _Init_PID 096F  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 002C  
                   LCD_Write_Int@j 002A                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0008                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0087  
                 __size_of___lwdiv 0034                        _readButtons 0D6E  
                         ___awtoft 0929                           ___ftpack 0C0D  
                         ___lbtoft 08BC              __size_of_tempSetpoint 00BA  
                         ___lwtoft 084A                         _T0CON0bits 001E  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00DE  
                  ___lwdiv@divisor 0076                        _oldSetpoint 006C  
                  ___lwdiv@counter 007D                  PID_Calculate@temp 0048  
                         __ptext10 0BAD                           __ptext11 08F0  
                         __ptext20 0829                           __ptext12 084A  
                         __ptext21 081A                           __ptext13 09F1  
                         __ptext30 0838                           __ptext22 0004  
                         __ptext14 08BC                           __ptext31 0873  
                         __ptext23 09BF                           __ptext15 0011  
                         __ptext40 0C0D                           __ptext32 08A3  
                         __ptext24 17EC                           __ptext16 090B  
                         __ptext41 080C                           __ptext33 085D  
                         __ptext25 0C71                           __ptext17 0DF3  
                         __ptext34 0311                           __ptext26 17E4  
                         __ptext18 0CEC                           __ptext35 17DC  
                         __ptext27 096F                           __ptext19 0A9C  
                         __ptext36 0F4C                           __ptext28 0949  
                         __ptext37 0A60                           __ptext29 0995  
                         __ptext38 021B                           __ptext39 0929  
          __size_of_LCD_Set_Cursor 003F           __size_of_InitCustomChars 0026  
              LCD_Write_Int@F13694 00C4                  ??_PWM6_Initialize 0070  
                    __size_of_main 0307               __CFG_WDTCWS$WDTCWS_7 0000  
                     _tempSetpoint 0098         ??_ADCC_GetSingleConversion 0073  
                         _setpoint 006F        PIN_MANAGER_Initialize@state 0070  
                         log@coeff 1000                        ??_eval_poly 007E  
               LCD_Write_Char@temp 0072            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
          __size_of_LCD_Write_Char 002A                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 04BD  
                  _TMR0_Initialize 081A                       ___aldiv@sign 0021  
           __size_of_LCD_Write_Int 00C9        PWM6_LoadDutyValue@dutyValue 0070  
   __end_of_PIN_MANAGER_Initialize 09F1                  ??_ADCC_Initialize 0070  
                   main@PWM_Output 00B0                        _toggleCount 00E0  
                ??_InitCustomChars 0075  
