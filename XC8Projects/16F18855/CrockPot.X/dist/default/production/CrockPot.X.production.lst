

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 08 20:54:28 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x620,48
    60                           	dabs	1,0x5BC,52
    61                           	dabs	1,0x238C,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  001C                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0198                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  020F                     	;# 
   172  020F                     	;# 
   173  0210                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021B                     	;# 
   191  021C                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  028C                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  028F                     	;# 
   203  0290                     	;# 
   204  0290                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0296                     	;# 
   214  0297                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029C                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  030C                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  030E                     	;# 
   228  030F                     	;# 
   229  0310                     	;# 
   230  0310                     	;# 
   231  0311                     	;# 
   232  0312                     	;# 
   233  0313                     	;# 
   234  0314                     	;# 
   235  0314                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  031B                     	;# 
   244  031C                     	;# 
   245  031C                     	;# 
   246  031D                     	;# 
   247  031E                     	;# 
   248  031F                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0390                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  040C                     	;# 
   256  040D                     	;# 
   257  040E                     	;# 
   258  040F                     	;# 
   259  0410                     	;# 
   260  0411                     	;# 
   261  0416                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041C                     	;# 
   272  041D                     	;# 
   273  041E                     	;# 
   274  041F                     	;# 
   275  048C                     	;# 
   276  048C                     	;# 
   277  048D                     	;# 
   278  048E                     	;# 
   279  048F                     	;# 
   280  048F                     	;# 
   281  0490                     	;# 
   282  0491                     	;# 
   283  0492                     	;# 
   284  0492                     	;# 
   285  0493                     	;# 
   286  0494                     	;# 
   287  0495                     	;# 
   288  0495                     	;# 
   289  0496                     	;# 
   290  0497                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  050C                     	;# 
   298  050C                     	;# 
   299  050D                     	;# 
   300  050E                     	;# 
   301  050F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0512                     	;# 
   307  0513                     	;# 
   308  0514                     	;# 
   309  0515                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  051B                     	;# 
   317  051C                     	;# 
   318  051D                     	;# 
   319  058C                     	;# 
   320  058C                     	;# 
   321  058D                     	;# 
   322  058E                     	;# 
   323  058F                     	;# 
   324  058F                     	;# 
   325  0590                     	;# 
   326  0591                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  060C                     	;# 
   330  060D                     	;# 
   331  060E                     	;# 
   332  060F                     	;# 
   333  0610                     	;# 
   334  0611                     	;# 
   335  0612                     	;# 
   336  0613                     	;# 
   337  0614                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0618                     	;# 
   341  0619                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  061D                     	;# 
   346  061E                     	;# 
   347  068C                     	;# 
   348  068D                     	;# 
   349  068E                     	;# 
   350  068F                     	;# 
   351  0690                     	;# 
   352  0691                     	;# 
   353  0692                     	;# 
   354  0693                     	;# 
   355  0694                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  070F                     	;# 
   360  0710                     	;# 
   361  0711                     	;# 
   362  0712                     	;# 
   363  0713                     	;# 
   364  0714                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  0796                     	;# 
   375  0797                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  079A                     	;# 
   379  079B                     	;# 
   380  080C                     	;# 
   381  080D                     	;# 
   382  080E                     	;# 
   383  080F                     	;# 
   384  0810                     	;# 
   385  0811                     	;# 
   386  0812                     	;# 
   387  0813                     	;# 
   388  0814                     	;# 
   389  081A                     	;# 
   390  081B                     	;# 
   391  081C                     	;# 
   392  081D                     	;# 
   393  081E                     	;# 
   394  081F                     	;# 
   395  088C                     	;# 
   396  088D                     	;# 
   397  088E                     	;# 
   398  088F                     	;# 
   399  0890                     	;# 
   400  0891                     	;# 
   401  0892                     	;# 
   402  0893                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0897                     	;# 
   406  0898                     	;# 
   407  0899                     	;# 
   408  089A                     	;# 
   409  089B                     	;# 
   410  090C                     	;# 
   411  090E                     	;# 
   412  090F                     	;# 
   413  091F                     	;# 
   414  091F                     	;# 
   415  098F                     	;# 
   416  098F                     	;# 
   417  0990                     	;# 
   418  0991                     	;# 
   419  0992                     	;# 
   420  0993                     	;# 
   421  0994                     	;# 
   422  0995                     	;# 
   423  0996                     	;# 
   424  0997                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E23                     	;# 
   446  0E24                     	;# 
   447  0E25                     	;# 
   448  0E26                     	;# 
   449  0E27                     	;# 
   450  0E28                     	;# 
   451  0E29                     	;# 
   452  0E2A                     	;# 
   453  0E2B                     	;# 
   454  0E2C                     	;# 
   455  0E2D                     	;# 
   456  0E2E                     	;# 
   457  0E2F                     	;# 
   458  0E30                     	;# 
   459  0E31                     	;# 
   460  0E32                     	;# 
   461  0E33                     	;# 
   462  0E34                     	;# 
   463  0E35                     	;# 
   464  0E36                     	;# 
   465  0E37                     	;# 
   466  0E8F                     	;# 
   467  0E90                     	;# 
   468  0E91                     	;# 
   469  0E92                     	;# 
   470  0E93                     	;# 
   471  0E94                     	;# 
   472  0E95                     	;# 
   473  0E96                     	;# 
   474  0E97                     	;# 
   475  0E9C                     	;# 
   476  0E9D                     	;# 
   477  0E9E                     	;# 
   478  0EA1                     	;# 
   479  0EA2                     	;# 
   480  0EA3                     	;# 
   481  0EA4                     	;# 
   482  0EA5                     	;# 
   483  0EA9                     	;# 
   484  0EAA                     	;# 
   485  0EAB                     	;# 
   486  0EAC                     	;# 
   487  0EB1                     	;# 
   488  0EB2                     	;# 
   489  0EB3                     	;# 
   490  0EB8                     	;# 
   491  0EB9                     	;# 
   492  0EBA                     	;# 
   493  0EBB                     	;# 
   494  0EBC                     	;# 
   495  0EBD                     	;# 
   496  0EBE                     	;# 
   497  0EC3                     	;# 
   498  0EC5                     	;# 
   499  0EC6                     	;# 
   500  0EC7                     	;# 
   501  0EC8                     	;# 
   502  0EC9                     	;# 
   503  0ECA                     	;# 
   504  0ECB                     	;# 
   505  0ECC                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F38                     	;# 
   531  0F39                     	;# 
   532  0F3A                     	;# 
   533  0F3B                     	;# 
   534  0F3C                     	;# 
   535  0F3D                     	;# 
   536  0F3E                     	;# 
   537  0F3F                     	;# 
   538  0F40                     	;# 
   539  0F41                     	;# 
   540  0F43                     	;# 
   541  0F44                     	;# 
   542  0F45                     	;# 
   543  0F46                     	;# 
   544  0F47                     	;# 
   545  0F48                     	;# 
   546  0F49                     	;# 
   547  0F4A                     	;# 
   548  0F4B                     	;# 
   549  0F4C                     	;# 
   550  0F4E                     	;# 
   551  0F4F                     	;# 
   552  0F50                     	;# 
   553  0F51                     	;# 
   554  0F52                     	;# 
   555  0F53                     	;# 
   556  0F54                     	;# 
   557  0F55                     	;# 
   558  0F56                     	;# 
   559  0F57                     	;# 
   560  0F65                     	;# 
   561  0F68                     	;# 
   562  0F69                     	;# 
   563  0F6A                     	;# 
   564  0F6B                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  001C                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0110                     	;# 
   631  0110                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011A                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011C                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011D                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011E                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  018E                     	;# 
   670  018F                     	;# 
   671  0190                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0196                     	;# 
   675  0197                     	;# 
   676  0198                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0218                     	;# 
   700  0219                     	;# 
   701  021A                     	;# 
   702  021B                     	;# 
   703  021B                     	;# 
   704  021C                     	;# 
   705  021C                     	;# 
   706  021D                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  028C                     	;# 
   711  028C                     	;# 
   712  028D                     	;# 
   713  028D                     	;# 
   714  028E                     	;# 
   715  028F                     	;# 
   716  0290                     	;# 
   717  0290                     	;# 
   718  0291                     	;# 
   719  0292                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0296                     	;# 
   726  0296                     	;# 
   727  0297                     	;# 
   728  0298                     	;# 
   729  0298                     	;# 
   730  0299                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  030C                     	;# 
   738  030C                     	;# 
   739  030D                     	;# 
   740  030E                     	;# 
   741  030F                     	;# 
   742  0310                     	;# 
   743  0310                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0317                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031B                     	;# 
   757  031C                     	;# 
   758  031C                     	;# 
   759  031D                     	;# 
   760  031E                     	;# 
   761  031F                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  040C                     	;# 
   769  040D                     	;# 
   770  040E                     	;# 
   771  040F                     	;# 
   772  0410                     	;# 
   773  0411                     	;# 
   774  0416                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  0418                     	;# 
   778  0418                     	;# 
   779  0419                     	;# 
   780  041A                     	;# 
   781  041A                     	;# 
   782  041B                     	;# 
   783  041C                     	;# 
   784  041C                     	;# 
   785  041D                     	;# 
   786  041E                     	;# 
   787  041F                     	;# 
   788  048C                     	;# 
   789  048C                     	;# 
   790  048D                     	;# 
   791  048E                     	;# 
   792  048F                     	;# 
   793  048F                     	;# 
   794  0490                     	;# 
   795  0491                     	;# 
   796  0492                     	;# 
   797  0492                     	;# 
   798  0493                     	;# 
   799  0494                     	;# 
   800  0495                     	;# 
   801  0495                     	;# 
   802  0496                     	;# 
   803  0497                     	;# 
   804  0498                     	;# 
   805  0499                     	;# 
   806  049A                     	;# 
   807  049B                     	;# 
   808  049C                     	;# 
   809  049D                     	;# 
   810  050C                     	;# 
   811  050C                     	;# 
   812  050D                     	;# 
   813  050E                     	;# 
   814  050F                     	;# 
   815  050F                     	;# 
   816  0510                     	;# 
   817  0511                     	;# 
   818  0512                     	;# 
   819  0512                     	;# 
   820  0513                     	;# 
   821  0514                     	;# 
   822  0515                     	;# 
   823  0515                     	;# 
   824  0516                     	;# 
   825  0517                     	;# 
   826  0518                     	;# 
   827  0519                     	;# 
   828  051A                     	;# 
   829  051B                     	;# 
   830  051C                     	;# 
   831  051D                     	;# 
   832  058C                     	;# 
   833  058C                     	;# 
   834  058D                     	;# 
   835  058E                     	;# 
   836  058F                     	;# 
   837  058F                     	;# 
   838  0590                     	;# 
   839  0591                     	;# 
   840  0592                     	;# 
   841  0593                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0618                     	;# 
   854  0619                     	;# 
   855  061A                     	;# 
   856  061B                     	;# 
   857  061C                     	;# 
   858  061D                     	;# 
   859  061E                     	;# 
   860  068C                     	;# 
   861  068D                     	;# 
   862  068E                     	;# 
   863  068F                     	;# 
   864  0690                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  070C                     	;# 
   870  070D                     	;# 
   871  070E                     	;# 
   872  070F                     	;# 
   873  0710                     	;# 
   874  0711                     	;# 
   875  0712                     	;# 
   876  0713                     	;# 
   877  0714                     	;# 
   878  0716                     	;# 
   879  0717                     	;# 
   880  0718                     	;# 
   881  0719                     	;# 
   882  071A                     	;# 
   883  071B                     	;# 
   884  071C                     	;# 
   885  071D                     	;# 
   886  071E                     	;# 
   887  0796                     	;# 
   888  0797                     	;# 
   889  0798                     	;# 
   890  0799                     	;# 
   891  079A                     	;# 
   892  079B                     	;# 
   893  080C                     	;# 
   894  080D                     	;# 
   895  080E                     	;# 
   896  080F                     	;# 
   897  0810                     	;# 
   898  0811                     	;# 
   899  0812                     	;# 
   900  0813                     	;# 
   901  0814                     	;# 
   902  081A                     	;# 
   903  081B                     	;# 
   904  081C                     	;# 
   905  081D                     	;# 
   906  081E                     	;# 
   907  081F                     	;# 
   908  088C                     	;# 
   909  088D                     	;# 
   910  088E                     	;# 
   911  088F                     	;# 
   912  0890                     	;# 
   913  0891                     	;# 
   914  0892                     	;# 
   915  0893                     	;# 
   916  0895                     	;# 
   917  0896                     	;# 
   918  0897                     	;# 
   919  0898                     	;# 
   920  0899                     	;# 
   921  089A                     	;# 
   922  089B                     	;# 
   923  090C                     	;# 
   924  090E                     	;# 
   925  090F                     	;# 
   926  091F                     	;# 
   927  091F                     	;# 
   928  098F                     	;# 
   929  098F                     	;# 
   930  0990                     	;# 
   931  0991                     	;# 
   932  0992                     	;# 
   933  0993                     	;# 
   934  0994                     	;# 
   935  0995                     	;# 
   936  0996                     	;# 
   937  0997                     	;# 
   938  0E0F                     	;# 
   939  0E10                     	;# 
   940  0E11                     	;# 
   941  0E12                     	;# 
   942  0E13                     	;# 
   943  0E14                     	;# 
   944  0E15                     	;# 
   945  0E16                     	;# 
   946  0E17                     	;# 
   947  0E18                     	;# 
   948  0E19                     	;# 
   949  0E1A                     	;# 
   950  0E1B                     	;# 
   951  0E1C                     	;# 
   952  0E1D                     	;# 
   953  0E1E                     	;# 
   954  0E1F                     	;# 
   955  0E20                     	;# 
   956  0E21                     	;# 
   957  0E22                     	;# 
   958  0E23                     	;# 
   959  0E24                     	;# 
   960  0E25                     	;# 
   961  0E26                     	;# 
   962  0E27                     	;# 
   963  0E28                     	;# 
   964  0E29                     	;# 
   965  0E2A                     	;# 
   966  0E2B                     	;# 
   967  0E2C                     	;# 
   968  0E2D                     	;# 
   969  0E2E                     	;# 
   970  0E2F                     	;# 
   971  0E30                     	;# 
   972  0E31                     	;# 
   973  0E32                     	;# 
   974  0E33                     	;# 
   975  0E34                     	;# 
   976  0E35                     	;# 
   977  0E36                     	;# 
   978  0E37                     	;# 
   979  0E8F                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E95                     	;# 
   986  0E96                     	;# 
   987  0E97                     	;# 
   988  0E9C                     	;# 
   989  0E9D                     	;# 
   990  0E9E                     	;# 
   991  0EA1                     	;# 
   992  0EA2                     	;# 
   993  0EA3                     	;# 
   994  0EA4                     	;# 
   995  0EA5                     	;# 
   996  0EA9                     	;# 
   997  0EAA                     	;# 
   998  0EAB                     	;# 
   999  0EAC                     	;# 
  1000  0EB1                     	;# 
  1001  0EB2                     	;# 
  1002  0EB3                     	;# 
  1003  0EB8                     	;# 
  1004  0EB9                     	;# 
  1005  0EBA                     	;# 
  1006  0EBB                     	;# 
  1007  0EBC                     	;# 
  1008  0EBD                     	;# 
  1009  0EBE                     	;# 
  1010  0EC3                     	;# 
  1011  0EC5                     	;# 
  1012  0EC6                     	;# 
  1013  0EC7                     	;# 
  1014  0EC8                     	;# 
  1015  0EC9                     	;# 
  1016  0ECA                     	;# 
  1017  0ECB                     	;# 
  1018  0ECC                     	;# 
  1019  0F10                     	;# 
  1020  0F11                     	;# 
  1021  0F12                     	;# 
  1022  0F13                     	;# 
  1023  0F14                     	;# 
  1024  0F15                     	;# 
  1025  0F16                     	;# 
  1026  0F17                     	;# 
  1027  0F18                     	;# 
  1028  0F19                     	;# 
  1029  0F1A                     	;# 
  1030  0F1B                     	;# 
  1031  0F1C                     	;# 
  1032  0F1D                     	;# 
  1033  0F1E                     	;# 
  1034  0F1F                     	;# 
  1035  0F20                     	;# 
  1036  0F21                     	;# 
  1037  0F22                     	;# 
  1038  0F23                     	;# 
  1039  0F24                     	;# 
  1040  0F25                     	;# 
  1041  0F26                     	;# 
  1042  0F27                     	;# 
  1043  0F38                     	;# 
  1044  0F39                     	;# 
  1045  0F3A                     	;# 
  1046  0F3B                     	;# 
  1047  0F3C                     	;# 
  1048  0F3D                     	;# 
  1049  0F3E                     	;# 
  1050  0F3F                     	;# 
  1051  0F40                     	;# 
  1052  0F41                     	;# 
  1053  0F43                     	;# 
  1054  0F44                     	;# 
  1055  0F45                     	;# 
  1056  0F46                     	;# 
  1057  0F47                     	;# 
  1058  0F48                     	;# 
  1059  0F49                     	;# 
  1060  0F4A                     	;# 
  1061  0F4B                     	;# 
  1062  0F4C                     	;# 
  1063  0F4E                     	;# 
  1064  0F4F                     	;# 
  1065  0F50                     	;# 
  1066  0F51                     	;# 
  1067  0F52                     	;# 
  1068  0F53                     	;# 
  1069  0F54                     	;# 
  1070  0F55                     	;# 
  1071  0F56                     	;# 
  1072  0F57                     	;# 
  1073  0F65                     	;# 
  1074  0F68                     	;# 
  1075  0F69                     	;# 
  1076  0F6A                     	;# 
  1077  0F6B                     	;# 
  1078  0FE4                     	;# 
  1079  0FE5                     	;# 
  1080  0FE6                     	;# 
  1081  0FE7                     	;# 
  1082  0FE8                     	;# 
  1083  0FE9                     	;# 
  1084  0FEA                     	;# 
  1085  0FEB                     	;# 
  1086  0FED                     	;# 
  1087  0FEE                     	;# 
  1088  0FEF                     	;# 
  1089  0000                     	;# 
  1090  0001                     	;# 
  1091  0002                     	;# 
  1092  0003                     	;# 
  1093  0004                     	;# 
  1094  0005                     	;# 
  1095  0006                     	;# 
  1096  0007                     	;# 
  1097  0008                     	;# 
  1098  0009                     	;# 
  1099  000A                     	;# 
  1100  000B                     	;# 
  1101  000C                     	;# 
  1102  000D                     	;# 
  1103  000E                     	;# 
  1104  0010                     	;# 
  1105  0011                     	;# 
  1106  0012                     	;# 
  1107  0013                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  001C                     	;# 
  1112  001C                     	;# 
  1113  001D                     	;# 
  1114  001D                     	;# 
  1115  001E                     	;# 
  1116  001F                     	;# 
  1117  008C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0090                     	;# 
  1125  0091                     	;# 
  1126  0093                     	;# 
  1127  0094                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0097                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009A                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  010C                     	;# 
  1139  010D                     	;# 
  1140  010E                     	;# 
  1141  010E                     	;# 
  1142  010F                     	;# 
  1143  0110                     	;# 
  1144  0110                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0114                     	;# 
  1151  0115                     	;# 
  1152  0116                     	;# 
  1153  0116                     	;# 
  1154  0117                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  0119                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011C                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011D                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011E                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182  018E                     	;# 
  1183  018F                     	;# 
  1184  0190                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0196                     	;# 
  1188  0197                     	;# 
  1189  0198                     	;# 
  1190  0199                     	;# 
  1191  019A                     	;# 
  1192  019B                     	;# 
  1193  019C                     	;# 
  1194  020C                     	;# 
  1195  020D                     	;# 
  1196  020E                     	;# 
  1197  020F                     	;# 
  1198  020F                     	;# 
  1199  0210                     	;# 
  1200  0210                     	;# 
  1201  0211                     	;# 
  1202  0211                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0216                     	;# 
  1209  0216                     	;# 
  1210  0217                     	;# 
  1211  0217                     	;# 
  1212  0218                     	;# 
  1213  0219                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0290                     	;# 
  1231  0291                     	;# 
  1232  0292                     	;# 
  1233  0292                     	;# 
  1234  0293                     	;# 
  1235  0293                     	;# 
  1236  0294                     	;# 
  1237  0295                     	;# 
  1238  0296                     	;# 
  1239  0296                     	;# 
  1240  0297                     	;# 
  1241  0298                     	;# 
  1242  0298                     	;# 
  1243  0299                     	;# 
  1244  0299                     	;# 
  1245  029A                     	;# 
  1246  029B                     	;# 
  1247  029C                     	;# 
  1248  029C                     	;# 
  1249  029D                     	;# 
  1250  030C                     	;# 
  1251  030C                     	;# 
  1252  030D                     	;# 
  1253  030E                     	;# 
  1254  030F                     	;# 
  1255  0310                     	;# 
  1256  0310                     	;# 
  1257  0311                     	;# 
  1258  0312                     	;# 
  1259  0313                     	;# 
  1260  0314                     	;# 
  1261  0314                     	;# 
  1262  0315                     	;# 
  1263  0316                     	;# 
  1264  0317                     	;# 
  1265  0318                     	;# 
  1266  0318                     	;# 
  1267  0319                     	;# 
  1268  031A                     	;# 
  1269  031B                     	;# 
  1270  031C                     	;# 
  1271  031C                     	;# 
  1272  031D                     	;# 
  1273  031E                     	;# 
  1274  031F                     	;# 
  1275  038C                     	;# 
  1276  038D                     	;# 
  1277  038E                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  040C                     	;# 
  1282  040D                     	;# 
  1283  040E                     	;# 
  1284  040F                     	;# 
  1285  0410                     	;# 
  1286  0411                     	;# 
  1287  0416                     	;# 
  1288  0416                     	;# 
  1289  0417                     	;# 
  1290  0418                     	;# 
  1291  0418                     	;# 
  1292  0419                     	;# 
  1293  041A                     	;# 
  1294  041A                     	;# 
  1295  041B                     	;# 
  1296  041C                     	;# 
  1297  041C                     	;# 
  1298  041D                     	;# 
  1299  041E                     	;# 
  1300  041F                     	;# 
  1301  048C                     	;# 
  1302  048C                     	;# 
  1303  048D                     	;# 
  1304  048E                     	;# 
  1305  048F                     	;# 
  1306  048F                     	;# 
  1307  0490                     	;# 
  1308  0491                     	;# 
  1309  0492                     	;# 
  1310  0492                     	;# 
  1311  0493                     	;# 
  1312  0494                     	;# 
  1313  0495                     	;# 
  1314  0495                     	;# 
  1315  0496                     	;# 
  1316  0497                     	;# 
  1317  0498                     	;# 
  1318  0499                     	;# 
  1319  049A                     	;# 
  1320  049B                     	;# 
  1321  049C                     	;# 
  1322  049D                     	;# 
  1323  050C                     	;# 
  1324  050C                     	;# 
  1325  050D                     	;# 
  1326  050E                     	;# 
  1327  050F                     	;# 
  1328  050F                     	;# 
  1329  0510                     	;# 
  1330  0511                     	;# 
  1331  0512                     	;# 
  1332  0512                     	;# 
  1333  0513                     	;# 
  1334  0514                     	;# 
  1335  0515                     	;# 
  1336  0515                     	;# 
  1337  0516                     	;# 
  1338  0517                     	;# 
  1339  0518                     	;# 
  1340  0519                     	;# 
  1341  051A                     	;# 
  1342  051B                     	;# 
  1343  051C                     	;# 
  1344  051D                     	;# 
  1345  058C                     	;# 
  1346  058C                     	;# 
  1347  058D                     	;# 
  1348  058E                     	;# 
  1349  058F                     	;# 
  1350  058F                     	;# 
  1351  0590                     	;# 
  1352  0591                     	;# 
  1353  0592                     	;# 
  1354  0593                     	;# 
  1355  060C                     	;# 
  1356  060D                     	;# 
  1357  060E                     	;# 
  1358  060F                     	;# 
  1359  0610                     	;# 
  1360  0611                     	;# 
  1361  0612                     	;# 
  1362  0613                     	;# 
  1363  0614                     	;# 
  1364  0616                     	;# 
  1365  0617                     	;# 
  1366  0618                     	;# 
  1367  0619                     	;# 
  1368  061A                     	;# 
  1369  061B                     	;# 
  1370  061C                     	;# 
  1371  061D                     	;# 
  1372  061E                     	;# 
  1373  068C                     	;# 
  1374  068D                     	;# 
  1375  068E                     	;# 
  1376  068F                     	;# 
  1377  0690                     	;# 
  1378  0691                     	;# 
  1379  0692                     	;# 
  1380  0693                     	;# 
  1381  0694                     	;# 
  1382  070C                     	;# 
  1383  070D                     	;# 
  1384  070E                     	;# 
  1385  070F                     	;# 
  1386  0710                     	;# 
  1387  0711                     	;# 
  1388  0712                     	;# 
  1389  0713                     	;# 
  1390  0714                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  071A                     	;# 
  1396  071B                     	;# 
  1397  071C                     	;# 
  1398  071D                     	;# 
  1399  071E                     	;# 
  1400  0796                     	;# 
  1401  0797                     	;# 
  1402  0798                     	;# 
  1403  0799                     	;# 
  1404  079A                     	;# 
  1405  079B                     	;# 
  1406  080C                     	;# 
  1407  080D                     	;# 
  1408  080E                     	;# 
  1409  080F                     	;# 
  1410  0810                     	;# 
  1411  0811                     	;# 
  1412  0812                     	;# 
  1413  0813                     	;# 
  1414  0814                     	;# 
  1415  081A                     	;# 
  1416  081B                     	;# 
  1417  081C                     	;# 
  1418  081D                     	;# 
  1419  081E                     	;# 
  1420  081F                     	;# 
  1421  088C                     	;# 
  1422  088D                     	;# 
  1423  088E                     	;# 
  1424  088F                     	;# 
  1425  0890                     	;# 
  1426  0891                     	;# 
  1427  0892                     	;# 
  1428  0893                     	;# 
  1429  0895                     	;# 
  1430  0896                     	;# 
  1431  0897                     	;# 
  1432  0898                     	;# 
  1433  0899                     	;# 
  1434  089A                     	;# 
  1435  089B                     	;# 
  1436  090C                     	;# 
  1437  090E                     	;# 
  1438  090F                     	;# 
  1439  091F                     	;# 
  1440  091F                     	;# 
  1441  098F                     	;# 
  1442  098F                     	;# 
  1443  0990                     	;# 
  1444  0991                     	;# 
  1445  0992                     	;# 
  1446  0993                     	;# 
  1447  0994                     	;# 
  1448  0995                     	;# 
  1449  0996                     	;# 
  1450  0997                     	;# 
  1451  0E0F                     	;# 
  1452  0E10                     	;# 
  1453  0E11                     	;# 
  1454  0E12                     	;# 
  1455  0E13                     	;# 
  1456  0E14                     	;# 
  1457  0E15                     	;# 
  1458  0E16                     	;# 
  1459  0E17                     	;# 
  1460  0E18                     	;# 
  1461  0E19                     	;# 
  1462  0E1A                     	;# 
  1463  0E1B                     	;# 
  1464  0E1C                     	;# 
  1465  0E1D                     	;# 
  1466  0E1E                     	;# 
  1467  0E1F                     	;# 
  1468  0E20                     	;# 
  1469  0E21                     	;# 
  1470  0E22                     	;# 
  1471  0E23                     	;# 
  1472  0E24                     	;# 
  1473  0E25                     	;# 
  1474  0E26                     	;# 
  1475  0E27                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E30                     	;# 
  1485  0E31                     	;# 
  1486  0E32                     	;# 
  1487  0E33                     	;# 
  1488  0E34                     	;# 
  1489  0E35                     	;# 
  1490  0E36                     	;# 
  1491  0E37                     	;# 
  1492  0E8F                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E93                     	;# 
  1497  0E94                     	;# 
  1498  0E95                     	;# 
  1499  0E96                     	;# 
  1500  0E97                     	;# 
  1501  0E9C                     	;# 
  1502  0E9D                     	;# 
  1503  0E9E                     	;# 
  1504  0EA1                     	;# 
  1505  0EA2                     	;# 
  1506  0EA3                     	;# 
  1507  0EA4                     	;# 
  1508  0EA5                     	;# 
  1509  0EA9                     	;# 
  1510  0EAA                     	;# 
  1511  0EAB                     	;# 
  1512  0EAC                     	;# 
  1513  0EB1                     	;# 
  1514  0EB2                     	;# 
  1515  0EB3                     	;# 
  1516  0EB8                     	;# 
  1517  0EB9                     	;# 
  1518  0EBA                     	;# 
  1519  0EBB                     	;# 
  1520  0EBC                     	;# 
  1521  0EBD                     	;# 
  1522  0EBE                     	;# 
  1523  0EC3                     	;# 
  1524  0EC5                     	;# 
  1525  0EC6                     	;# 
  1526  0EC7                     	;# 
  1527  0EC8                     	;# 
  1528  0EC9                     	;# 
  1529  0ECA                     	;# 
  1530  0ECB                     	;# 
  1531  0ECC                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F38                     	;# 
  1557  0F39                     	;# 
  1558  0F3A                     	;# 
  1559  0F3B                     	;# 
  1560  0F3C                     	;# 
  1561  0F3D                     	;# 
  1562  0F3E                     	;# 
  1563  0F3F                     	;# 
  1564  0F40                     	;# 
  1565  0F41                     	;# 
  1566  0F43                     	;# 
  1567  0F44                     	;# 
  1568  0F45                     	;# 
  1569  0F46                     	;# 
  1570  0F47                     	;# 
  1571  0F48                     	;# 
  1572  0F49                     	;# 
  1573  0F4A                     	;# 
  1574  0F4B                     	;# 
  1575  0F4C                     	;# 
  1576  0F4E                     	;# 
  1577  0F4F                     	;# 
  1578  0F50                     	;# 
  1579  0F51                     	;# 
  1580  0F52                     	;# 
  1581  0F53                     	;# 
  1582  0F54                     	;# 
  1583  0F55                     	;# 
  1584  0F56                     	;# 
  1585  0F57                     	;# 
  1586  0F65                     	;# 
  1587  0F68                     	;# 
  1588  0F69                     	;# 
  1589  0F6A                     	;# 
  1590  0F6B                     	;# 
  1591  0FE4                     	;# 
  1592  0FE5                     	;# 
  1593  0FE6                     	;# 
  1594  0FE7                     	;# 
  1595  0FE8                     	;# 
  1596  0FE9                     	;# 
  1597  0FEA                     	;# 
  1598  0FEB                     	;# 
  1599  0FED                     	;# 
  1600  0FEE                     	;# 
  1601  0FEF                     	;# 
  1602  0000                     	;# 
  1603  0001                     	;# 
  1604  0002                     	;# 
  1605  0003                     	;# 
  1606  0004                     	;# 
  1607  0005                     	;# 
  1608  0006                     	;# 
  1609  0007                     	;# 
  1610  0008                     	;# 
  1611  0009                     	;# 
  1612  000A                     	;# 
  1613  000B                     	;# 
  1614  000C                     	;# 
  1615  000D                     	;# 
  1616  000E                     	;# 
  1617  0010                     	;# 
  1618  0011                     	;# 
  1619  0012                     	;# 
  1620  0013                     	;# 
  1621  0016                     	;# 
  1622  0017                     	;# 
  1623  0018                     	;# 
  1624  001C                     	;# 
  1625  001C                     	;# 
  1626  001D                     	;# 
  1627  001D                     	;# 
  1628  001E                     	;# 
  1629  001F                     	;# 
  1630  008C                     	;# 
  1631  008C                     	;# 
  1632  008D                     	;# 
  1633  008E                     	;# 
  1634  008E                     	;# 
  1635  008F                     	;# 
  1636  0090                     	;# 
  1637  0090                     	;# 
  1638  0091                     	;# 
  1639  0093                     	;# 
  1640  0094                     	;# 
  1641  0095                     	;# 
  1642  0096                     	;# 
  1643  0097                     	;# 
  1644  0098                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009C                     	;# 
  1649  009D                     	;# 
  1650  009E                     	;# 
  1651  010C                     	;# 
  1652  010D                     	;# 
  1653  010E                     	;# 
  1654  010E                     	;# 
  1655  010F                     	;# 
  1656  0110                     	;# 
  1657  0110                     	;# 
  1658  0111                     	;# 
  1659  0112                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0116                     	;# 
  1667  0117                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  0119                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011A                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011C                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011D                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011E                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  018F                     	;# 
  1697  0190                     	;# 
  1698  0191                     	;# 
  1699  0192                     	;# 
  1700  0196                     	;# 
  1701  0197                     	;# 
  1702  0198                     	;# 
  1703  0199                     	;# 
  1704  019A                     	;# 
  1705  019B                     	;# 
  1706  019C                     	;# 
  1707  020C                     	;# 
  1708  020D                     	;# 
  1709  020E                     	;# 
  1710  020F                     	;# 
  1711  020F                     	;# 
  1712  0210                     	;# 
  1713  0210                     	;# 
  1714  0211                     	;# 
  1715  0211                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0215                     	;# 
  1720  0215                     	;# 
  1721  0216                     	;# 
  1722  0216                     	;# 
  1723  0217                     	;# 
  1724  0217                     	;# 
  1725  0218                     	;# 
  1726  0219                     	;# 
  1727  021A                     	;# 
  1728  021B                     	;# 
  1729  021B                     	;# 
  1730  021C                     	;# 
  1731  021C                     	;# 
  1732  021D                     	;# 
  1733  021D                     	;# 
  1734  021E                     	;# 
  1735  021F                     	;# 
  1736  028C                     	;# 
  1737  028C                     	;# 
  1738  028D                     	;# 
  1739  028D                     	;# 
  1740  028E                     	;# 
  1741  028F                     	;# 
  1742  0290                     	;# 
  1743  0290                     	;# 
  1744  0291                     	;# 
  1745  0292                     	;# 
  1746  0292                     	;# 
  1747  0293                     	;# 
  1748  0293                     	;# 
  1749  0294                     	;# 
  1750  0295                     	;# 
  1751  0296                     	;# 
  1752  0296                     	;# 
  1753  0297                     	;# 
  1754  0298                     	;# 
  1755  0298                     	;# 
  1756  0299                     	;# 
  1757  0299                     	;# 
  1758  029A                     	;# 
  1759  029B                     	;# 
  1760  029C                     	;# 
  1761  029C                     	;# 
  1762  029D                     	;# 
  1763  030C                     	;# 
  1764  030C                     	;# 
  1765  030D                     	;# 
  1766  030E                     	;# 
  1767  030F                     	;# 
  1768  0310                     	;# 
  1769  0310                     	;# 
  1770  0311                     	;# 
  1771  0312                     	;# 
  1772  0313                     	;# 
  1773  0314                     	;# 
  1774  0314                     	;# 
  1775  0315                     	;# 
  1776  0316                     	;# 
  1777  0317                     	;# 
  1778  0318                     	;# 
  1779  0318                     	;# 
  1780  0319                     	;# 
  1781  031A                     	;# 
  1782  031B                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  031F                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  0390                     	;# 
  1792  0391                     	;# 
  1793  0392                     	;# 
  1794  040C                     	;# 
  1795  040D                     	;# 
  1796  040E                     	;# 
  1797  040F                     	;# 
  1798  0410                     	;# 
  1799  0411                     	;# 
  1800  0416                     	;# 
  1801  0416                     	;# 
  1802  0417                     	;# 
  1803  0418                     	;# 
  1804  0418                     	;# 
  1805  0419                     	;# 
  1806  041A                     	;# 
  1807  041A                     	;# 
  1808  041B                     	;# 
  1809  041C                     	;# 
  1810  041C                     	;# 
  1811  041D                     	;# 
  1812  041E                     	;# 
  1813  041F                     	;# 
  1814  048C                     	;# 
  1815  048C                     	;# 
  1816  048D                     	;# 
  1817  048E                     	;# 
  1818  048F                     	;# 
  1819  048F                     	;# 
  1820  0490                     	;# 
  1821  0491                     	;# 
  1822  0492                     	;# 
  1823  0492                     	;# 
  1824  0493                     	;# 
  1825  0494                     	;# 
  1826  0495                     	;# 
  1827  0495                     	;# 
  1828  0496                     	;# 
  1829  0497                     	;# 
  1830  0498                     	;# 
  1831  0499                     	;# 
  1832  049A                     	;# 
  1833  049B                     	;# 
  1834  049C                     	;# 
  1835  049D                     	;# 
  1836  050C                     	;# 
  1837  050C                     	;# 
  1838  050D                     	;# 
  1839  050E                     	;# 
  1840  050F                     	;# 
  1841  050F                     	;# 
  1842  0510                     	;# 
  1843  0511                     	;# 
  1844  0512                     	;# 
  1845  0512                     	;# 
  1846  0513                     	;# 
  1847  0514                     	;# 
  1848  0515                     	;# 
  1849  0515                     	;# 
  1850  0516                     	;# 
  1851  0517                     	;# 
  1852  0518                     	;# 
  1853  0519                     	;# 
  1854  051A                     	;# 
  1855  051B                     	;# 
  1856  051C                     	;# 
  1857  051D                     	;# 
  1858  058C                     	;# 
  1859  058C                     	;# 
  1860  058D                     	;# 
  1861  058E                     	;# 
  1862  058F                     	;# 
  1863  058F                     	;# 
  1864  0590                     	;# 
  1865  0591                     	;# 
  1866  0592                     	;# 
  1867  0593                     	;# 
  1868  060C                     	;# 
  1869  060D                     	;# 
  1870  060E                     	;# 
  1871  060F                     	;# 
  1872  0610                     	;# 
  1873  0611                     	;# 
  1874  0612                     	;# 
  1875  0613                     	;# 
  1876  0614                     	;# 
  1877  0616                     	;# 
  1878  0617                     	;# 
  1879  0618                     	;# 
  1880  0619                     	;# 
  1881  061A                     	;# 
  1882  061B                     	;# 
  1883  061C                     	;# 
  1884  061D                     	;# 
  1885  061E                     	;# 
  1886  068C                     	;# 
  1887  068D                     	;# 
  1888  068E                     	;# 
  1889  068F                     	;# 
  1890  0690                     	;# 
  1891  0691                     	;# 
  1892  0692                     	;# 
  1893  0693                     	;# 
  1894  0694                     	;# 
  1895  070C                     	;# 
  1896  070D                     	;# 
  1897  070E                     	;# 
  1898  070F                     	;# 
  1899  0710                     	;# 
  1900  0711                     	;# 
  1901  0712                     	;# 
  1902  0713                     	;# 
  1903  0714                     	;# 
  1904  0716                     	;# 
  1905  0717                     	;# 
  1906  0718                     	;# 
  1907  0719                     	;# 
  1908  071A                     	;# 
  1909  071B                     	;# 
  1910  071C                     	;# 
  1911  071D                     	;# 
  1912  071E                     	;# 
  1913  0796                     	;# 
  1914  0797                     	;# 
  1915  0798                     	;# 
  1916  0799                     	;# 
  1917  079A                     	;# 
  1918  079B                     	;# 
  1919  080C                     	;# 
  1920  080D                     	;# 
  1921  080E                     	;# 
  1922  080F                     	;# 
  1923  0810                     	;# 
  1924  0811                     	;# 
  1925  0812                     	;# 
  1926  0813                     	;# 
  1927  0814                     	;# 
  1928  081A                     	;# 
  1929  081B                     	;# 
  1930  081C                     	;# 
  1931  081D                     	;# 
  1932  081E                     	;# 
  1933  081F                     	;# 
  1934  088C                     	;# 
  1935  088D                     	;# 
  1936  088E                     	;# 
  1937  088F                     	;# 
  1938  0890                     	;# 
  1939  0891                     	;# 
  1940  0892                     	;# 
  1941  0893                     	;# 
  1942  0895                     	;# 
  1943  0896                     	;# 
  1944  0897                     	;# 
  1945  0898                     	;# 
  1946  0899                     	;# 
  1947  089A                     	;# 
  1948  089B                     	;# 
  1949  090C                     	;# 
  1950  090E                     	;# 
  1951  090F                     	;# 
  1952  091F                     	;# 
  1953  091F                     	;# 
  1954  098F                     	;# 
  1955  098F                     	;# 
  1956  0990                     	;# 
  1957  0991                     	;# 
  1958  0992                     	;# 
  1959  0993                     	;# 
  1960  0994                     	;# 
  1961  0995                     	;# 
  1962  0996                     	;# 
  1963  0997                     	;# 
  1964  0E0F                     	;# 
  1965  0E10                     	;# 
  1966  0E11                     	;# 
  1967  0E12                     	;# 
  1968  0E13                     	;# 
  1969  0E14                     	;# 
  1970  0E15                     	;# 
  1971  0E16                     	;# 
  1972  0E17                     	;# 
  1973  0E18                     	;# 
  1974  0E19                     	;# 
  1975  0E1A                     	;# 
  1976  0E1B                     	;# 
  1977  0E1C                     	;# 
  1978  0E1D                     	;# 
  1979  0E1E                     	;# 
  1980  0E1F                     	;# 
  1981  0E20                     	;# 
  1982  0E21                     	;# 
  1983  0E22                     	;# 
  1984  0E23                     	;# 
  1985  0E24                     	;# 
  1986  0E25                     	;# 
  1987  0E26                     	;# 
  1988  0E27                     	;# 
  1989  0E28                     	;# 
  1990  0E29                     	;# 
  1991  0E2A                     	;# 
  1992  0E2B                     	;# 
  1993  0E2C                     	;# 
  1994  0E2D                     	;# 
  1995  0E2E                     	;# 
  1996  0E2F                     	;# 
  1997  0E30                     	;# 
  1998  0E31                     	;# 
  1999  0E32                     	;# 
  2000  0E33                     	;# 
  2001  0E34                     	;# 
  2002  0E35                     	;# 
  2003  0E36                     	;# 
  2004  0E37                     	;# 
  2005  0E8F                     	;# 
  2006  0E90                     	;# 
  2007  0E91                     	;# 
  2008  0E92                     	;# 
  2009  0E93                     	;# 
  2010  0E94                     	;# 
  2011  0E95                     	;# 
  2012  0E96                     	;# 
  2013  0E97                     	;# 
  2014  0E9C                     	;# 
  2015  0E9D                     	;# 
  2016  0E9E                     	;# 
  2017  0EA1                     	;# 
  2018  0EA2                     	;# 
  2019  0EA3                     	;# 
  2020  0EA4                     	;# 
  2021  0EA5                     	;# 
  2022  0EA9                     	;# 
  2023  0EAA                     	;# 
  2024  0EAB                     	;# 
  2025  0EAC                     	;# 
  2026  0EB1                     	;# 
  2027  0EB2                     	;# 
  2028  0EB3                     	;# 
  2029  0EB8                     	;# 
  2030  0EB9                     	;# 
  2031  0EBA                     	;# 
  2032  0EBB                     	;# 
  2033  0EBC                     	;# 
  2034  0EBD                     	;# 
  2035  0EBE                     	;# 
  2036  0EC3                     	;# 
  2037  0EC5                     	;# 
  2038  0EC6                     	;# 
  2039  0EC7                     	;# 
  2040  0EC8                     	;# 
  2041  0EC9                     	;# 
  2042  0ECA                     	;# 
  2043  0ECB                     	;# 
  2044  0ECC                     	;# 
  2045  0F10                     	;# 
  2046  0F11                     	;# 
  2047  0F12                     	;# 
  2048  0F13                     	;# 
  2049  0F14                     	;# 
  2050  0F15                     	;# 
  2051  0F16                     	;# 
  2052  0F17                     	;# 
  2053  0F18                     	;# 
  2054  0F19                     	;# 
  2055  0F1A                     	;# 
  2056  0F1B                     	;# 
  2057  0F1C                     	;# 
  2058  0F1D                     	;# 
  2059  0F1E                     	;# 
  2060  0F1F                     	;# 
  2061  0F20                     	;# 
  2062  0F21                     	;# 
  2063  0F22                     	;# 
  2064  0F23                     	;# 
  2065  0F24                     	;# 
  2066  0F25                     	;# 
  2067  0F26                     	;# 
  2068  0F27                     	;# 
  2069  0F38                     	;# 
  2070  0F39                     	;# 
  2071  0F3A                     	;# 
  2072  0F3B                     	;# 
  2073  0F3C                     	;# 
  2074  0F3D                     	;# 
  2075  0F3E                     	;# 
  2076  0F3F                     	;# 
  2077  0F40                     	;# 
  2078  0F41                     	;# 
  2079  0F43                     	;# 
  2080  0F44                     	;# 
  2081  0F45                     	;# 
  2082  0F46                     	;# 
  2083  0F47                     	;# 
  2084  0F48                     	;# 
  2085  0F49                     	;# 
  2086  0F4A                     	;# 
  2087  0F4B                     	;# 
  2088  0F4C                     	;# 
  2089  0F4E                     	;# 
  2090  0F4F                     	;# 
  2091  0F50                     	;# 
  2092  0F51                     	;# 
  2093  0F52                     	;# 
  2094  0F53                     	;# 
  2095  0F54                     	;# 
  2096  0F55                     	;# 
  2097  0F56                     	;# 
  2098  0F57                     	;# 
  2099  0F65                     	;# 
  2100  0F68                     	;# 
  2101  0F69                     	;# 
  2102  0F6A                     	;# 
  2103  0F6B                     	;# 
  2104  0FE4                     	;# 
  2105  0FE5                     	;# 
  2106  0FE6                     	;# 
  2107  0FE7                     	;# 
  2108  0FE8                     	;# 
  2109  0FE9                     	;# 
  2110  0FEA                     	;# 
  2111  0FEB                     	;# 
  2112  0FED                     	;# 
  2113  0FEE                     	;# 
  2114  0FEF                     	;# 
  2115  0000                     	;# 
  2116  0001                     	;# 
  2117  0002                     	;# 
  2118  0003                     	;# 
  2119  0004                     	;# 
  2120  0005                     	;# 
  2121  0006                     	;# 
  2122  0007                     	;# 
  2123  0008                     	;# 
  2124  0009                     	;# 
  2125  000A                     	;# 
  2126  000B                     	;# 
  2127  000C                     	;# 
  2128  000D                     	;# 
  2129  000E                     	;# 
  2130  0010                     	;# 
  2131  0011                     	;# 
  2132  0012                     	;# 
  2133  0013                     	;# 
  2134  0016                     	;# 
  2135  0017                     	;# 
  2136  0018                     	;# 
  2137  001C                     	;# 
  2138  001C                     	;# 
  2139  001D                     	;# 
  2140  001D                     	;# 
  2141  001E                     	;# 
  2142  001F                     	;# 
  2143  008C                     	;# 
  2144  008C                     	;# 
  2145  008D                     	;# 
  2146  008E                     	;# 
  2147  008E                     	;# 
  2148  008F                     	;# 
  2149  0090                     	;# 
  2150  0090                     	;# 
  2151  0091                     	;# 
  2152  0093                     	;# 
  2153  0094                     	;# 
  2154  0095                     	;# 
  2155  0096                     	;# 
  2156  0097                     	;# 
  2157  0098                     	;# 
  2158  0099                     	;# 
  2159  009A                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  010C                     	;# 
  2165  010D                     	;# 
  2166  010E                     	;# 
  2167  010E                     	;# 
  2168  010F                     	;# 
  2169  0110                     	;# 
  2170  0110                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0114                     	;# 
  2177  0115                     	;# 
  2178  0116                     	;# 
  2179  0116                     	;# 
  2180  0117                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  0119                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011C                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011D                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011E                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  018C                     	;# 
  2207  018D                     	;# 
  2208  018E                     	;# 
  2209  018F                     	;# 
  2210  0190                     	;# 
  2211  0191                     	;# 
  2212  0192                     	;# 
  2213  0196                     	;# 
  2214  0197                     	;# 
  2215  0198                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019B                     	;# 
  2219  019C                     	;# 
  2220  020C                     	;# 
  2221  020D                     	;# 
  2222  020E                     	;# 
  2223  020F                     	;# 
  2224  020F                     	;# 
  2225  0210                     	;# 
  2226  0210                     	;# 
  2227  0211                     	;# 
  2228  0211                     	;# 
  2229  0212                     	;# 
  2230  0213                     	;# 
  2231  0214                     	;# 
  2232  0215                     	;# 
  2233  0215                     	;# 
  2234  0216                     	;# 
  2235  0216                     	;# 
  2236  0217                     	;# 
  2237  0217                     	;# 
  2238  0218                     	;# 
  2239  0219                     	;# 
  2240  021A                     	;# 
  2241  021B                     	;# 
  2242  021B                     	;# 
  2243  021C                     	;# 
  2244  021C                     	;# 
  2245  021D                     	;# 
  2246  021D                     	;# 
  2247  021E                     	;# 
  2248  021F                     	;# 
  2249  028C                     	;# 
  2250  028C                     	;# 
  2251  028D                     	;# 
  2252  028D                     	;# 
  2253  028E                     	;# 
  2254  028F                     	;# 
  2255  0290                     	;# 
  2256  0290                     	;# 
  2257  0291                     	;# 
  2258  0292                     	;# 
  2259  0292                     	;# 
  2260  0293                     	;# 
  2261  0293                     	;# 
  2262  0294                     	;# 
  2263  0295                     	;# 
  2264  0296                     	;# 
  2265  0296                     	;# 
  2266  0297                     	;# 
  2267  0298                     	;# 
  2268  0298                     	;# 
  2269  0299                     	;# 
  2270  0299                     	;# 
  2271  029A                     	;# 
  2272  029B                     	;# 
  2273  029C                     	;# 
  2274  029C                     	;# 
  2275  029D                     	;# 
  2276  030C                     	;# 
  2277  030C                     	;# 
  2278  030D                     	;# 
  2279  030E                     	;# 
  2280  030F                     	;# 
  2281  0310                     	;# 
  2282  0310                     	;# 
  2283  0311                     	;# 
  2284  0312                     	;# 
  2285  0313                     	;# 
  2286  0314                     	;# 
  2287  0314                     	;# 
  2288  0315                     	;# 
  2289  0316                     	;# 
  2290  0317                     	;# 
  2291  0318                     	;# 
  2292  0318                     	;# 
  2293  0319                     	;# 
  2294  031A                     	;# 
  2295  031B                     	;# 
  2296  031C                     	;# 
  2297  031C                     	;# 
  2298  031D                     	;# 
  2299  031E                     	;# 
  2300  031F                     	;# 
  2301  038C                     	;# 
  2302  038D                     	;# 
  2303  038E                     	;# 
  2304  0390                     	;# 
  2305  0391                     	;# 
  2306  0392                     	;# 
  2307  040C                     	;# 
  2308  040D                     	;# 
  2309  040E                     	;# 
  2310  040F                     	;# 
  2311  0410                     	;# 
  2312  0411                     	;# 
  2313  0416                     	;# 
  2314  0416                     	;# 
  2315  0417                     	;# 
  2316  0418                     	;# 
  2317  0418                     	;# 
  2318  0419                     	;# 
  2319  041A                     	;# 
  2320  041A                     	;# 
  2321  041B                     	;# 
  2322  041C                     	;# 
  2323  041C                     	;# 
  2324  041D                     	;# 
  2325  041E                     	;# 
  2326  041F                     	;# 
  2327  048C                     	;# 
  2328  048C                     	;# 
  2329  048D                     	;# 
  2330  048E                     	;# 
  2331  048F                     	;# 
  2332  048F                     	;# 
  2333  0490                     	;# 
  2334  0491                     	;# 
  2335  0492                     	;# 
  2336  0492                     	;# 
  2337  0493                     	;# 
  2338  0494                     	;# 
  2339  0495                     	;# 
  2340  0495                     	;# 
  2341  0496                     	;# 
  2342  0497                     	;# 
  2343  0498                     	;# 
  2344  0499                     	;# 
  2345  049A                     	;# 
  2346  049B                     	;# 
  2347  049C                     	;# 
  2348  049D                     	;# 
  2349  050C                     	;# 
  2350  050C                     	;# 
  2351  050D                     	;# 
  2352  050E                     	;# 
  2353  050F                     	;# 
  2354  050F                     	;# 
  2355  0510                     	;# 
  2356  0511                     	;# 
  2357  0512                     	;# 
  2358  0512                     	;# 
  2359  0513                     	;# 
  2360  0514                     	;# 
  2361  0515                     	;# 
  2362  0515                     	;# 
  2363  0516                     	;# 
  2364  0517                     	;# 
  2365  0518                     	;# 
  2366  0519                     	;# 
  2367  051A                     	;# 
  2368  051B                     	;# 
  2369  051C                     	;# 
  2370  051D                     	;# 
  2371  058C                     	;# 
  2372  058C                     	;# 
  2373  058D                     	;# 
  2374  058E                     	;# 
  2375  058F                     	;# 
  2376  058F                     	;# 
  2377  0590                     	;# 
  2378  0591                     	;# 
  2379  0592                     	;# 
  2380  0593                     	;# 
  2381  060C                     	;# 
  2382  060D                     	;# 
  2383  060E                     	;# 
  2384  060F                     	;# 
  2385  0610                     	;# 
  2386  0611                     	;# 
  2387  0612                     	;# 
  2388  0613                     	;# 
  2389  0614                     	;# 
  2390  0616                     	;# 
  2391  0617                     	;# 
  2392  0618                     	;# 
  2393  0619                     	;# 
  2394  061A                     	;# 
  2395  061B                     	;# 
  2396  061C                     	;# 
  2397  061D                     	;# 
  2398  061E                     	;# 
  2399  068C                     	;# 
  2400  068D                     	;# 
  2401  068E                     	;# 
  2402  068F                     	;# 
  2403  0690                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  070C                     	;# 
  2409  070D                     	;# 
  2410  070E                     	;# 
  2411  070F                     	;# 
  2412  0710                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0716                     	;# 
  2418  0717                     	;# 
  2419  0718                     	;# 
  2420  0719                     	;# 
  2421  071A                     	;# 
  2422  071B                     	;# 
  2423  071C                     	;# 
  2424  071D                     	;# 
  2425  071E                     	;# 
  2426  0796                     	;# 
  2427  0797                     	;# 
  2428  0798                     	;# 
  2429  0799                     	;# 
  2430  079A                     	;# 
  2431  079B                     	;# 
  2432  080C                     	;# 
  2433  080D                     	;# 
  2434  080E                     	;# 
  2435  080F                     	;# 
  2436  0810                     	;# 
  2437  0811                     	;# 
  2438  0812                     	;# 
  2439  0813                     	;# 
  2440  0814                     	;# 
  2441  081A                     	;# 
  2442  081B                     	;# 
  2443  081C                     	;# 
  2444  081D                     	;# 
  2445  081E                     	;# 
  2446  081F                     	;# 
  2447  088C                     	;# 
  2448  088D                     	;# 
  2449  088E                     	;# 
  2450  088F                     	;# 
  2451  0890                     	;# 
  2452  0891                     	;# 
  2453  0892                     	;# 
  2454  0893                     	;# 
  2455  0895                     	;# 
  2456  0896                     	;# 
  2457  0897                     	;# 
  2458  0898                     	;# 
  2459  0899                     	;# 
  2460  089A                     	;# 
  2461  089B                     	;# 
  2462  090C                     	;# 
  2463  090E                     	;# 
  2464  090F                     	;# 
  2465  091F                     	;# 
  2466  091F                     	;# 
  2467  098F                     	;# 
  2468  098F                     	;# 
  2469  0990                     	;# 
  2470  0991                     	;# 
  2471  0992                     	;# 
  2472  0993                     	;# 
  2473  0994                     	;# 
  2474  0995                     	;# 
  2475  0996                     	;# 
  2476  0997                     	;# 
  2477  0E0F                     	;# 
  2478  0E10                     	;# 
  2479  0E11                     	;# 
  2480  0E12                     	;# 
  2481  0E13                     	;# 
  2482  0E14                     	;# 
  2483  0E15                     	;# 
  2484  0E16                     	;# 
  2485  0E17                     	;# 
  2486  0E18                     	;# 
  2487  0E19                     	;# 
  2488  0E1A                     	;# 
  2489  0E1B                     	;# 
  2490  0E1C                     	;# 
  2491  0E1D                     	;# 
  2492  0E1E                     	;# 
  2493  0E1F                     	;# 
  2494  0E20                     	;# 
  2495  0E21                     	;# 
  2496  0E22                     	;# 
  2497  0E23                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E26                     	;# 
  2501  0E27                     	;# 
  2502  0E28                     	;# 
  2503  0E29                     	;# 
  2504  0E2A                     	;# 
  2505  0E2B                     	;# 
  2506  0E2C                     	;# 
  2507  0E2D                     	;# 
  2508  0E2E                     	;# 
  2509  0E2F                     	;# 
  2510  0E30                     	;# 
  2511  0E31                     	;# 
  2512  0E32                     	;# 
  2513  0E33                     	;# 
  2514  0E34                     	;# 
  2515  0E35                     	;# 
  2516  0E36                     	;# 
  2517  0E37                     	;# 
  2518  0E8F                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E93                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E96                     	;# 
  2526  0E97                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA9                     	;# 
  2536  0EAA                     	;# 
  2537  0EAB                     	;# 
  2538  0EAC                     	;# 
  2539  0EB1                     	;# 
  2540  0EB2                     	;# 
  2541  0EB3                     	;# 
  2542  0EB8                     	;# 
  2543  0EB9                     	;# 
  2544  0EBA                     	;# 
  2545  0EBB                     	;# 
  2546  0EBC                     	;# 
  2547  0EBD                     	;# 
  2548  0EBE                     	;# 
  2549  0EC3                     	;# 
  2550  0EC5                     	;# 
  2551  0EC6                     	;# 
  2552  0EC7                     	;# 
  2553  0EC8                     	;# 
  2554  0EC9                     	;# 
  2555  0ECA                     	;# 
  2556  0ECB                     	;# 
  2557  0ECC                     	;# 
  2558  0F10                     	;# 
  2559  0F11                     	;# 
  2560  0F12                     	;# 
  2561  0F13                     	;# 
  2562  0F14                     	;# 
  2563  0F15                     	;# 
  2564  0F16                     	;# 
  2565  0F17                     	;# 
  2566  0F18                     	;# 
  2567  0F19                     	;# 
  2568  0F1A                     	;# 
  2569  0F1B                     	;# 
  2570  0F1C                     	;# 
  2571  0F1D                     	;# 
  2572  0F1E                     	;# 
  2573  0F1F                     	;# 
  2574  0F20                     	;# 
  2575  0F21                     	;# 
  2576  0F22                     	;# 
  2577  0F23                     	;# 
  2578  0F24                     	;# 
  2579  0F25                     	;# 
  2580  0F26                     	;# 
  2581  0F27                     	;# 
  2582  0F38                     	;# 
  2583  0F39                     	;# 
  2584  0F3A                     	;# 
  2585  0F3B                     	;# 
  2586  0F3C                     	;# 
  2587  0F3D                     	;# 
  2588  0F3E                     	;# 
  2589  0F3F                     	;# 
  2590  0F40                     	;# 
  2591  0F41                     	;# 
  2592  0F43                     	;# 
  2593  0F44                     	;# 
  2594  0F45                     	;# 
  2595  0F46                     	;# 
  2596  0F47                     	;# 
  2597  0F48                     	;# 
  2598  0F49                     	;# 
  2599  0F4A                     	;# 
  2600  0F4B                     	;# 
  2601  0F4C                     	;# 
  2602  0F4E                     	;# 
  2603  0F4F                     	;# 
  2604  0F50                     	;# 
  2605  0F51                     	;# 
  2606  0F52                     	;# 
  2607  0F53                     	;# 
  2608  0F54                     	;# 
  2609  0F55                     	;# 
  2610  0F56                     	;# 
  2611  0F57                     	;# 
  2612  0F65                     	;# 
  2613  0F68                     	;# 
  2614  0F69                     	;# 
  2615  0F6A                     	;# 
  2616  0F6B                     	;# 
  2617  0FE4                     	;# 
  2618  0FE5                     	;# 
  2619  0FE6                     	;# 
  2620  0FE7                     	;# 
  2621  0FE8                     	;# 
  2622  0FE9                     	;# 
  2623  0FEA                     	;# 
  2624  0FEB                     	;# 
  2625  0FED                     	;# 
  2626  0FEE                     	;# 
  2627  0FEF                     	;# 
  2628  0000                     	;# 
  2629  0001                     	;# 
  2630  0002                     	;# 
  2631  0003                     	;# 
  2632  0004                     	;# 
  2633  0005                     	;# 
  2634  0006                     	;# 
  2635  0007                     	;# 
  2636  0008                     	;# 
  2637  0009                     	;# 
  2638  000A                     	;# 
  2639  000B                     	;# 
  2640  000C                     	;# 
  2641  000D                     	;# 
  2642  000E                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0016                     	;# 
  2648  0017                     	;# 
  2649  0018                     	;# 
  2650  001C                     	;# 
  2651  001C                     	;# 
  2652  001D                     	;# 
  2653  001D                     	;# 
  2654  001E                     	;# 
  2655  001F                     	;# 
  2656  008C                     	;# 
  2657  008C                     	;# 
  2658  008D                     	;# 
  2659  008E                     	;# 
  2660  008E                     	;# 
  2661  008F                     	;# 
  2662  0090                     	;# 
  2663  0090                     	;# 
  2664  0091                     	;# 
  2665  0093                     	;# 
  2666  0094                     	;# 
  2667  0095                     	;# 
  2668  0096                     	;# 
  2669  0097                     	;# 
  2670  0098                     	;# 
  2671  0099                     	;# 
  2672  009A                     	;# 
  2673  009B                     	;# 
  2674  009C                     	;# 
  2675  009D                     	;# 
  2676  009E                     	;# 
  2677  010C                     	;# 
  2678  010D                     	;# 
  2679  010E                     	;# 
  2680  010E                     	;# 
  2681  010F                     	;# 
  2682  0110                     	;# 
  2683  0110                     	;# 
  2684  0111                     	;# 
  2685  0112                     	;# 
  2686  0112                     	;# 
  2687  0113                     	;# 
  2688  0114                     	;# 
  2689  0114                     	;# 
  2690  0115                     	;# 
  2691  0116                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  0119                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011A                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011C                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011D                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011E                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  018C                     	;# 
  2720  018D                     	;# 
  2721  018E                     	;# 
  2722  018F                     	;# 
  2723  0190                     	;# 
  2724  0191                     	;# 
  2725  0192                     	;# 
  2726  0196                     	;# 
  2727  0197                     	;# 
  2728  0198                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019B                     	;# 
  2732  019C                     	;# 
  2733  020C                     	;# 
  2734  020D                     	;# 
  2735  020E                     	;# 
  2736  020F                     	;# 
  2737  020F                     	;# 
  2738  0210                     	;# 
  2739  0210                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0213                     	;# 
  2744  0214                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0218                     	;# 
  2752  0219                     	;# 
  2753  021A                     	;# 
  2754  021B                     	;# 
  2755  021B                     	;# 
  2756  021C                     	;# 
  2757  021C                     	;# 
  2758  021D                     	;# 
  2759  021D                     	;# 
  2760  021E                     	;# 
  2761  021F                     	;# 
  2762  028C                     	;# 
  2763  028C                     	;# 
  2764  028D                     	;# 
  2765  028D                     	;# 
  2766  028E                     	;# 
  2767  028F                     	;# 
  2768  0290                     	;# 
  2769  0290                     	;# 
  2770  0291                     	;# 
  2771  0292                     	;# 
  2772  0292                     	;# 
  2773  0293                     	;# 
  2774  0293                     	;# 
  2775  0294                     	;# 
  2776  0295                     	;# 
  2777  0296                     	;# 
  2778  0296                     	;# 
  2779  0297                     	;# 
  2780  0298                     	;# 
  2781  0298                     	;# 
  2782  0299                     	;# 
  2783  0299                     	;# 
  2784  029A                     	;# 
  2785  029B                     	;# 
  2786  029C                     	;# 
  2787  029C                     	;# 
  2788  029D                     	;# 
  2789  030C                     	;# 
  2790  030C                     	;# 
  2791  030D                     	;# 
  2792  030E                     	;# 
  2793  030F                     	;# 
  2794  0310                     	;# 
  2795  0310                     	;# 
  2796  0311                     	;# 
  2797  0312                     	;# 
  2798  0313                     	;# 
  2799  0314                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0316                     	;# 
  2803  0317                     	;# 
  2804  0318                     	;# 
  2805  0318                     	;# 
  2806  0319                     	;# 
  2807  031A                     	;# 
  2808  031B                     	;# 
  2809  031C                     	;# 
  2810  031C                     	;# 
  2811  031D                     	;# 
  2812  031E                     	;# 
  2813  031F                     	;# 
  2814  038C                     	;# 
  2815  038D                     	;# 
  2816  038E                     	;# 
  2817  0390                     	;# 
  2818  0391                     	;# 
  2819  0392                     	;# 
  2820  040C                     	;# 
  2821  040D                     	;# 
  2822  040E                     	;# 
  2823  040F                     	;# 
  2824  0410                     	;# 
  2825  0411                     	;# 
  2826  0416                     	;# 
  2827  0416                     	;# 
  2828  0417                     	;# 
  2829  0418                     	;# 
  2830  0418                     	;# 
  2831  0419                     	;# 
  2832  041A                     	;# 
  2833  041A                     	;# 
  2834  041B                     	;# 
  2835  041C                     	;# 
  2836  041C                     	;# 
  2837  041D                     	;# 
  2838  041E                     	;# 
  2839  041F                     	;# 
  2840  048C                     	;# 
  2841  048C                     	;# 
  2842  048D                     	;# 
  2843  048E                     	;# 
  2844  048F                     	;# 
  2845  048F                     	;# 
  2846  0490                     	;# 
  2847  0491                     	;# 
  2848  0492                     	;# 
  2849  0492                     	;# 
  2850  0493                     	;# 
  2851  0494                     	;# 
  2852  0495                     	;# 
  2853  0495                     	;# 
  2854  0496                     	;# 
  2855  0497                     	;# 
  2856  0498                     	;# 
  2857  0499                     	;# 
  2858  049A                     	;# 
  2859  049B                     	;# 
  2860  049C                     	;# 
  2861  049D                     	;# 
  2862  050C                     	;# 
  2863  050C                     	;# 
  2864  050D                     	;# 
  2865  050E                     	;# 
  2866  050F                     	;# 
  2867  050F                     	;# 
  2868  0510                     	;# 
  2869  0511                     	;# 
  2870  0512                     	;# 
  2871  0512                     	;# 
  2872  0513                     	;# 
  2873  0514                     	;# 
  2874  0515                     	;# 
  2875  0515                     	;# 
  2876  0516                     	;# 
  2877  0517                     	;# 
  2878  0518                     	;# 
  2879  0519                     	;# 
  2880  051A                     	;# 
  2881  051B                     	;# 
  2882  051C                     	;# 
  2883  051D                     	;# 
  2884  058C                     	;# 
  2885  058C                     	;# 
  2886  058D                     	;# 
  2887  058E                     	;# 
  2888  058F                     	;# 
  2889  058F                     	;# 
  2890  0590                     	;# 
  2891  0591                     	;# 
  2892  0592                     	;# 
  2893  0593                     	;# 
  2894  060C                     	;# 
  2895  060D                     	;# 
  2896  060E                     	;# 
  2897  060F                     	;# 
  2898  0610                     	;# 
  2899  0611                     	;# 
  2900  0612                     	;# 
  2901  0613                     	;# 
  2902  0614                     	;# 
  2903  0616                     	;# 
  2904  0617                     	;# 
  2905  0618                     	;# 
  2906  0619                     	;# 
  2907  061A                     	;# 
  2908  061B                     	;# 
  2909  061C                     	;# 
  2910  061D                     	;# 
  2911  061E                     	;# 
  2912  068C                     	;# 
  2913  068D                     	;# 
  2914  068E                     	;# 
  2915  068F                     	;# 
  2916  0690                     	;# 
  2917  0691                     	;# 
  2918  0692                     	;# 
  2919  0693                     	;# 
  2920  0694                     	;# 
  2921  070C                     	;# 
  2922  070D                     	;# 
  2923  070E                     	;# 
  2924  070F                     	;# 
  2925  0710                     	;# 
  2926  0711                     	;# 
  2927  0712                     	;# 
  2928  0713                     	;# 
  2929  0714                     	;# 
  2930  0716                     	;# 
  2931  0717                     	;# 
  2932  0718                     	;# 
  2933  0719                     	;# 
  2934  071A                     	;# 
  2935  071B                     	;# 
  2936  071C                     	;# 
  2937  071D                     	;# 
  2938  071E                     	;# 
  2939  0796                     	;# 
  2940  0797                     	;# 
  2941  0798                     	;# 
  2942  0799                     	;# 
  2943  079A                     	;# 
  2944  079B                     	;# 
  2945  080C                     	;# 
  2946  080D                     	;# 
  2947  080E                     	;# 
  2948  080F                     	;# 
  2949  0810                     	;# 
  2950  0811                     	;# 
  2951  0812                     	;# 
  2952  0813                     	;# 
  2953  0814                     	;# 
  2954  081A                     	;# 
  2955  081B                     	;# 
  2956  081C                     	;# 
  2957  081D                     	;# 
  2958  081E                     	;# 
  2959  081F                     	;# 
  2960  088C                     	;# 
  2961  088D                     	;# 
  2962  088E                     	;# 
  2963  088F                     	;# 
  2964  0890                     	;# 
  2965  0891                     	;# 
  2966  0892                     	;# 
  2967  0893                     	;# 
  2968  0895                     	;# 
  2969  0896                     	;# 
  2970  0897                     	;# 
  2971  0898                     	;# 
  2972  0899                     	;# 
  2973  089A                     	;# 
  2974  089B                     	;# 
  2975  090C                     	;# 
  2976  090E                     	;# 
  2977  090F                     	;# 
  2978  091F                     	;# 
  2979  091F                     	;# 
  2980  098F                     	;# 
  2981  098F                     	;# 
  2982  0990                     	;# 
  2983  0991                     	;# 
  2984  0992                     	;# 
  2985  0993                     	;# 
  2986  0994                     	;# 
  2987  0995                     	;# 
  2988  0996                     	;# 
  2989  0997                     	;# 
  2990  0E0F                     	;# 
  2991  0E10                     	;# 
  2992  0E11                     	;# 
  2993  0E12                     	;# 
  2994  0E13                     	;# 
  2995  0E14                     	;# 
  2996  0E15                     	;# 
  2997  0E16                     	;# 
  2998  0E17                     	;# 
  2999  0E18                     	;# 
  3000  0E19                     	;# 
  3001  0E1A                     	;# 
  3002  0E1B                     	;# 
  3003  0E1C                     	;# 
  3004  0E1D                     	;# 
  3005  0E1E                     	;# 
  3006  0E1F                     	;# 
  3007  0E20                     	;# 
  3008  0E21                     	;# 
  3009  0E22                     	;# 
  3010  0E23                     	;# 
  3011  0E24                     	;# 
  3012  0E25                     	;# 
  3013  0E26                     	;# 
  3014  0E27                     	;# 
  3015  0E28                     	;# 
  3016  0E29                     	;# 
  3017  0E2A                     	;# 
  3018  0E2B                     	;# 
  3019  0E2C                     	;# 
  3020  0E2D                     	;# 
  3021  0E2E                     	;# 
  3022  0E2F                     	;# 
  3023  0E30                     	;# 
  3024  0E31                     	;# 
  3025  0E32                     	;# 
  3026  0E33                     	;# 
  3027  0E34                     	;# 
  3028  0E35                     	;# 
  3029  0E36                     	;# 
  3030  0E37                     	;# 
  3031  0E8F                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E93                     	;# 
  3036  0E94                     	;# 
  3037  0E95                     	;# 
  3038  0E96                     	;# 
  3039  0E97                     	;# 
  3040  0E9C                     	;# 
  3041  0E9D                     	;# 
  3042  0E9E                     	;# 
  3043  0EA1                     	;# 
  3044  0EA2                     	;# 
  3045  0EA3                     	;# 
  3046  0EA4                     	;# 
  3047  0EA5                     	;# 
  3048  0EA9                     	;# 
  3049  0EAA                     	;# 
  3050  0EAB                     	;# 
  3051  0EAC                     	;# 
  3052  0EB1                     	;# 
  3053  0EB2                     	;# 
  3054  0EB3                     	;# 
  3055  0EB8                     	;# 
  3056  0EB9                     	;# 
  3057  0EBA                     	;# 
  3058  0EBB                     	;# 
  3059  0EBC                     	;# 
  3060  0EBD                     	;# 
  3061  0EBE                     	;# 
  3062  0EC3                     	;# 
  3063  0EC5                     	;# 
  3064  0EC6                     	;# 
  3065  0EC7                     	;# 
  3066  0EC8                     	;# 
  3067  0EC9                     	;# 
  3068  0ECA                     	;# 
  3069  0ECB                     	;# 
  3070  0ECC                     	;# 
  3071  0F10                     	;# 
  3072  0F11                     	;# 
  3073  0F12                     	;# 
  3074  0F13                     	;# 
  3075  0F14                     	;# 
  3076  0F15                     	;# 
  3077  0F16                     	;# 
  3078  0F17                     	;# 
  3079  0F18                     	;# 
  3080  0F19                     	;# 
  3081  0F1A                     	;# 
  3082  0F1B                     	;# 
  3083  0F1C                     	;# 
  3084  0F1D                     	;# 
  3085  0F1E                     	;# 
  3086  0F1F                     	;# 
  3087  0F20                     	;# 
  3088  0F21                     	;# 
  3089  0F22                     	;# 
  3090  0F23                     	;# 
  3091  0F24                     	;# 
  3092  0F25                     	;# 
  3093  0F26                     	;# 
  3094  0F27                     	;# 
  3095  0F38                     	;# 
  3096  0F39                     	;# 
  3097  0F3A                     	;# 
  3098  0F3B                     	;# 
  3099  0F3C                     	;# 
  3100  0F3D                     	;# 
  3101  0F3E                     	;# 
  3102  0F3F                     	;# 
  3103  0F40                     	;# 
  3104  0F41                     	;# 
  3105  0F43                     	;# 
  3106  0F44                     	;# 
  3107  0F45                     	;# 
  3108  0F46                     	;# 
  3109  0F47                     	;# 
  3110  0F48                     	;# 
  3111  0F49                     	;# 
  3112  0F4A                     	;# 
  3113  0F4B                     	;# 
  3114  0F4C                     	;# 
  3115  0F4E                     	;# 
  3116  0F4F                     	;# 
  3117  0F50                     	;# 
  3118  0F51                     	;# 
  3119  0F52                     	;# 
  3120  0F53                     	;# 
  3121  0F54                     	;# 
  3122  0F55                     	;# 
  3123  0F56                     	;# 
  3124  0F57                     	;# 
  3125  0F65                     	;# 
  3126  0F68                     	;# 
  3127  0F69                     	;# 
  3128  0F6A                     	;# 
  3129  0F6B                     	;# 
  3130  0FE4                     	;# 
  3131  0FE5                     	;# 
  3132  0FE6                     	;# 
  3133  0FE7                     	;# 
  3134  0FE8                     	;# 
  3135  0FE9                     	;# 
  3136  0FEA                     	;# 
  3137  0FEB                     	;# 
  3138  0FED                     	;# 
  3139  0FEE                     	;# 
  3140  0FEF                     	;# 
  3141  0000                     	;# 
  3142  0001                     	;# 
  3143  0002                     	;# 
  3144  0003                     	;# 
  3145  0004                     	;# 
  3146  0005                     	;# 
  3147  0006                     	;# 
  3148  0007                     	;# 
  3149  0008                     	;# 
  3150  0009                     	;# 
  3151  000A                     	;# 
  3152  000B                     	;# 
  3153  000C                     	;# 
  3154  000D                     	;# 
  3155  000E                     	;# 
  3156  0010                     	;# 
  3157  0011                     	;# 
  3158  0012                     	;# 
  3159  0013                     	;# 
  3160  0016                     	;# 
  3161  0017                     	;# 
  3162  0018                     	;# 
  3163  001C                     	;# 
  3164  001C                     	;# 
  3165  001D                     	;# 
  3166  001D                     	;# 
  3167  001E                     	;# 
  3168  001F                     	;# 
  3169  008C                     	;# 
  3170  008C                     	;# 
  3171  008D                     	;# 
  3172  008E                     	;# 
  3173  008E                     	;# 
  3174  008F                     	;# 
  3175  0090                     	;# 
  3176  0090                     	;# 
  3177  0091                     	;# 
  3178  0093                     	;# 
  3179  0094                     	;# 
  3180  0095                     	;# 
  3181  0096                     	;# 
  3182  0097                     	;# 
  3183  0098                     	;# 
  3184  0099                     	;# 
  3185  009A                     	;# 
  3186  009B                     	;# 
  3187  009C                     	;# 
  3188  009D                     	;# 
  3189  009E                     	;# 
  3190  010C                     	;# 
  3191  010D                     	;# 
  3192  010E                     	;# 
  3193  010E                     	;# 
  3194  010F                     	;# 
  3195  0110                     	;# 
  3196  0110                     	;# 
  3197  0111                     	;# 
  3198  0112                     	;# 
  3199  0112                     	;# 
  3200  0113                     	;# 
  3201  0114                     	;# 
  3202  0114                     	;# 
  3203  0115                     	;# 
  3204  0116                     	;# 
  3205  0116                     	;# 
  3206  0117                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  0119                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011A                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011C                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011D                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011E                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  018C                     	;# 
  3233  018D                     	;# 
  3234  018E                     	;# 
  3235  018F                     	;# 
  3236  0190                     	;# 
  3237  0191                     	;# 
  3238  0192                     	;# 
  3239  0196                     	;# 
  3240  0197                     	;# 
  3241  0198                     	;# 
  3242  0199                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019C                     	;# 
  3246  020C                     	;# 
  3247  020D                     	;# 
  3248  020E                     	;# 
  3249  020F                     	;# 
  3250  020F                     	;# 
  3251  0210                     	;# 
  3252  0210                     	;# 
  3253  0211                     	;# 
  3254  0211                     	;# 
  3255  0212                     	;# 
  3256  0213                     	;# 
  3257  0214                     	;# 
  3258  0215                     	;# 
  3259  0215                     	;# 
  3260  0216                     	;# 
  3261  0216                     	;# 
  3262  0217                     	;# 
  3263  0217                     	;# 
  3264  0218                     	;# 
  3265  0219                     	;# 
  3266  021A                     	;# 
  3267  021B                     	;# 
  3268  021B                     	;# 
  3269  021C                     	;# 
  3270  021C                     	;# 
  3271  021D                     	;# 
  3272  021D                     	;# 
  3273  021E                     	;# 
  3274  021F                     	;# 
  3275  028C                     	;# 
  3276  028C                     	;# 
  3277  028D                     	;# 
  3278  028D                     	;# 
  3279  028E                     	;# 
  3280  028F                     	;# 
  3281  0290                     	;# 
  3282  0290                     	;# 
  3283  0291                     	;# 
  3284  0292                     	;# 
  3285  0292                     	;# 
  3286  0293                     	;# 
  3287  0293                     	;# 
  3288  0294                     	;# 
  3289  0295                     	;# 
  3290  0296                     	;# 
  3291  0296                     	;# 
  3292  0297                     	;# 
  3293  0298                     	;# 
  3294  0298                     	;# 
  3295  0299                     	;# 
  3296  0299                     	;# 
  3297  029A                     	;# 
  3298  029B                     	;# 
  3299  029C                     	;# 
  3300  029C                     	;# 
  3301  029D                     	;# 
  3302  030C                     	;# 
  3303  030C                     	;# 
  3304  030D                     	;# 
  3305  030E                     	;# 
  3306  030F                     	;# 
  3307  0310                     	;# 
  3308  0310                     	;# 
  3309  0311                     	;# 
  3310  0312                     	;# 
  3311  0313                     	;# 
  3312  0314                     	;# 
  3313  0314                     	;# 
  3314  0315                     	;# 
  3315  0316                     	;# 
  3316  0317                     	;# 
  3317  0318                     	;# 
  3318  0318                     	;# 
  3319  0319                     	;# 
  3320  031A                     	;# 
  3321  031B                     	;# 
  3322  031C                     	;# 
  3323  031C                     	;# 
  3324  031D                     	;# 
  3325  031E                     	;# 
  3326  031F                     	;# 
  3327  038C                     	;# 
  3328  038D                     	;# 
  3329  038E                     	;# 
  3330  0390                     	;# 
  3331  0391                     	;# 
  3332  0392                     	;# 
  3333  040C                     	;# 
  3334  040D                     	;# 
  3335  040E                     	;# 
  3336  040F                     	;# 
  3337  0410                     	;# 
  3338  0411                     	;# 
  3339  0416                     	;# 
  3340  0416                     	;# 
  3341  0417                     	;# 
  3342  0418                     	;# 
  3343  0418                     	;# 
  3344  0419                     	;# 
  3345  041A                     	;# 
  3346  041A                     	;# 
  3347  041B                     	;# 
  3348  041C                     	;# 
  3349  041C                     	;# 
  3350  041D                     	;# 
  3351  041E                     	;# 
  3352  041F                     	;# 
  3353  048C                     	;# 
  3354  048C                     	;# 
  3355  048D                     	;# 
  3356  048E                     	;# 
  3357  048F                     	;# 
  3358  048F                     	;# 
  3359  0490                     	;# 
  3360  0491                     	;# 
  3361  0492                     	;# 
  3362  0492                     	;# 
  3363  0493                     	;# 
  3364  0494                     	;# 
  3365  0495                     	;# 
  3366  0495                     	;# 
  3367  0496                     	;# 
  3368  0497                     	;# 
  3369  0498                     	;# 
  3370  0499                     	;# 
  3371  049A                     	;# 
  3372  049B                     	;# 
  3373  049C                     	;# 
  3374  049D                     	;# 
  3375  050C                     	;# 
  3376  050C                     	;# 
  3377  050D                     	;# 
  3378  050E                     	;# 
  3379  050F                     	;# 
  3380  050F                     	;# 
  3381  0510                     	;# 
  3382  0511                     	;# 
  3383  0512                     	;# 
  3384  0512                     	;# 
  3385  0513                     	;# 
  3386  0514                     	;# 
  3387  0515                     	;# 
  3388  0515                     	;# 
  3389  0516                     	;# 
  3390  0517                     	;# 
  3391  0518                     	;# 
  3392  0519                     	;# 
  3393  051A                     	;# 
  3394  051B                     	;# 
  3395  051C                     	;# 
  3396  051D                     	;# 
  3397  058C                     	;# 
  3398  058C                     	;# 
  3399  058D                     	;# 
  3400  058E                     	;# 
  3401  058F                     	;# 
  3402  058F                     	;# 
  3403  0590                     	;# 
  3404  0591                     	;# 
  3405  0592                     	;# 
  3406  0593                     	;# 
  3407  060C                     	;# 
  3408  060D                     	;# 
  3409  060E                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0616                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061B                     	;# 
  3422  061C                     	;# 
  3423  061D                     	;# 
  3424  061E                     	;# 
  3425  068C                     	;# 
  3426  068D                     	;# 
  3427  068E                     	;# 
  3428  068F                     	;# 
  3429  0690                     	;# 
  3430  0691                     	;# 
  3431  0692                     	;# 
  3432  0693                     	;# 
  3433  0694                     	;# 
  3434  070C                     	;# 
  3435  070D                     	;# 
  3436  070E                     	;# 
  3437  070F                     	;# 
  3438  0710                     	;# 
  3439  0711                     	;# 
  3440  0712                     	;# 
  3441  0713                     	;# 
  3442  0714                     	;# 
  3443  0716                     	;# 
  3444  0717                     	;# 
  3445  0718                     	;# 
  3446  0719                     	;# 
  3447  071A                     	;# 
  3448  071B                     	;# 
  3449  071C                     	;# 
  3450  071D                     	;# 
  3451  071E                     	;# 
  3452  0796                     	;# 
  3453  0797                     	;# 
  3454  0798                     	;# 
  3455  0799                     	;# 
  3456  079A                     	;# 
  3457  079B                     	;# 
  3458  080C                     	;# 
  3459  080D                     	;# 
  3460  080E                     	;# 
  3461  080F                     	;# 
  3462  0810                     	;# 
  3463  0811                     	;# 
  3464  0812                     	;# 
  3465  0813                     	;# 
  3466  0814                     	;# 
  3467  081A                     	;# 
  3468  081B                     	;# 
  3469  081C                     	;# 
  3470  081D                     	;# 
  3471  081E                     	;# 
  3472  081F                     	;# 
  3473  088C                     	;# 
  3474  088D                     	;# 
  3475  088E                     	;# 
  3476  088F                     	;# 
  3477  0890                     	;# 
  3478  0891                     	;# 
  3479  0892                     	;# 
  3480  0893                     	;# 
  3481  0895                     	;# 
  3482  0896                     	;# 
  3483  0897                     	;# 
  3484  0898                     	;# 
  3485  0899                     	;# 
  3486  089A                     	;# 
  3487  089B                     	;# 
  3488  090C                     	;# 
  3489  090E                     	;# 
  3490  090F                     	;# 
  3491  091F                     	;# 
  3492  091F                     	;# 
  3493  098F                     	;# 
  3494  098F                     	;# 
  3495  0990                     	;# 
  3496  0991                     	;# 
  3497  0992                     	;# 
  3498  0993                     	;# 
  3499  0994                     	;# 
  3500  0995                     	;# 
  3501  0996                     	;# 
  3502  0997                     	;# 
  3503  0E0F                     	;# 
  3504  0E10                     	;# 
  3505  0E11                     	;# 
  3506  0E12                     	;# 
  3507  0E13                     	;# 
  3508  0E14                     	;# 
  3509  0E15                     	;# 
  3510  0E16                     	;# 
  3511  0E17                     	;# 
  3512  0E18                     	;# 
  3513  0E19                     	;# 
  3514  0E1A                     	;# 
  3515  0E1B                     	;# 
  3516  0E1C                     	;# 
  3517  0E1D                     	;# 
  3518  0E1E                     	;# 
  3519  0E1F                     	;# 
  3520  0E20                     	;# 
  3521  0E21                     	;# 
  3522  0E22                     	;# 
  3523  0E23                     	;# 
  3524  0E24                     	;# 
  3525  0E25                     	;# 
  3526  0E26                     	;# 
  3527  0E27                     	;# 
  3528  0E28                     	;# 
  3529  0E29                     	;# 
  3530  0E2A                     	;# 
  3531  0E2B                     	;# 
  3532  0E2C                     	;# 
  3533  0E2D                     	;# 
  3534  0E2E                     	;# 
  3535  0E2F                     	;# 
  3536  0E30                     	;# 
  3537  0E31                     	;# 
  3538  0E32                     	;# 
  3539  0E33                     	;# 
  3540  0E34                     	;# 
  3541  0E35                     	;# 
  3542  0E36                     	;# 
  3543  0E37                     	;# 
  3544  0E8F                     	;# 
  3545  0E90                     	;# 
  3546  0E91                     	;# 
  3547  0E92                     	;# 
  3548  0E93                     	;# 
  3549  0E94                     	;# 
  3550  0E95                     	;# 
  3551  0E96                     	;# 
  3552  0E97                     	;# 
  3553  0E9C                     	;# 
  3554  0E9D                     	;# 
  3555  0E9E                     	;# 
  3556  0EA1                     	;# 
  3557  0EA2                     	;# 
  3558  0EA3                     	;# 
  3559  0EA4                     	;# 
  3560  0EA5                     	;# 
  3561  0EA9                     	;# 
  3562  0EAA                     	;# 
  3563  0EAB                     	;# 
  3564  0EAC                     	;# 
  3565  0EB1                     	;# 
  3566  0EB2                     	;# 
  3567  0EB3                     	;# 
  3568  0EB8                     	;# 
  3569  0EB9                     	;# 
  3570  0EBA                     	;# 
  3571  0EBB                     	;# 
  3572  0EBC                     	;# 
  3573  0EBD                     	;# 
  3574  0EBE                     	;# 
  3575  0EC3                     	;# 
  3576  0EC5                     	;# 
  3577  0EC6                     	;# 
  3578  0EC7                     	;# 
  3579  0EC8                     	;# 
  3580  0EC9                     	;# 
  3581  0ECA                     	;# 
  3582  0ECB                     	;# 
  3583  0ECC                     	;# 
  3584  0F10                     	;# 
  3585  0F11                     	;# 
  3586  0F12                     	;# 
  3587  0F13                     	;# 
  3588  0F14                     	;# 
  3589  0F15                     	;# 
  3590  0F16                     	;# 
  3591  0F17                     	;# 
  3592  0F18                     	;# 
  3593  0F19                     	;# 
  3594  0F1A                     	;# 
  3595  0F1B                     	;# 
  3596  0F1C                     	;# 
  3597  0F1D                     	;# 
  3598  0F1E                     	;# 
  3599  0F1F                     	;# 
  3600  0F20                     	;# 
  3601  0F21                     	;# 
  3602  0F22                     	;# 
  3603  0F23                     	;# 
  3604  0F24                     	;# 
  3605  0F25                     	;# 
  3606  0F26                     	;# 
  3607  0F27                     	;# 
  3608  0F38                     	;# 
  3609  0F39                     	;# 
  3610  0F3A                     	;# 
  3611  0F3B                     	;# 
  3612  0F3C                     	;# 
  3613  0F3D                     	;# 
  3614  0F3E                     	;# 
  3615  0F3F                     	;# 
  3616  0F40                     	;# 
  3617  0F41                     	;# 
  3618  0F43                     	;# 
  3619  0F44                     	;# 
  3620  0F45                     	;# 
  3621  0F46                     	;# 
  3622  0F47                     	;# 
  3623  0F48                     	;# 
  3624  0F49                     	;# 
  3625  0F4A                     	;# 
  3626  0F4B                     	;# 
  3627  0F4C                     	;# 
  3628  0F4E                     	;# 
  3629  0F4F                     	;# 
  3630  0F50                     	;# 
  3631  0F51                     	;# 
  3632  0F52                     	;# 
  3633  0F53                     	;# 
  3634  0F54                     	;# 
  3635  0F55                     	;# 
  3636  0F56                     	;# 
  3637  0F57                     	;# 
  3638  0F65                     	;# 
  3639  0F68                     	;# 
  3640  0F69                     	;# 
  3641  0F6A                     	;# 
  3642  0F6B                     	;# 
  3643  0FE4                     	;# 
  3644  0FE5                     	;# 
  3645  0FE6                     	;# 
  3646  0FE7                     	;# 
  3647  0FE8                     	;# 
  3648  0FE9                     	;# 
  3649  0FEA                     	;# 
  3650  0FEB                     	;# 
  3651  0FED                     	;# 
  3652  0FEE                     	;# 
  3653  0FEF                     	;# 
  3654  0000                     	;# 
  3655  0001                     	;# 
  3656  0002                     	;# 
  3657  0003                     	;# 
  3658  0004                     	;# 
  3659  0005                     	;# 
  3660  0006                     	;# 
  3661  0007                     	;# 
  3662  0008                     	;# 
  3663  0009                     	;# 
  3664  000A                     	;# 
  3665  000B                     	;# 
  3666  000C                     	;# 
  3667  000D                     	;# 
  3668  000E                     	;# 
  3669  0010                     	;# 
  3670  0011                     	;# 
  3671  0012                     	;# 
  3672  0013                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  001C                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001D                     	;# 
  3680  001E                     	;# 
  3681  001F                     	;# 
  3682  008C                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  008E                     	;# 
  3687  008F                     	;# 
  3688  0090                     	;# 
  3689  0090                     	;# 
  3690  0091                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0095                     	;# 
  3694  0096                     	;# 
  3695  0097                     	;# 
  3696  0098                     	;# 
  3697  0099                     	;# 
  3698  009A                     	;# 
  3699  009B                     	;# 
  3700  009C                     	;# 
  3701  009D                     	;# 
  3702  009E                     	;# 
  3703  010C                     	;# 
  3704  010D                     	;# 
  3705  010E                     	;# 
  3706  010E                     	;# 
  3707  010F                     	;# 
  3708  0110                     	;# 
  3709  0110                     	;# 
  3710  0111                     	;# 
  3711  0112                     	;# 
  3712  0112                     	;# 
  3713  0113                     	;# 
  3714  0114                     	;# 
  3715  0114                     	;# 
  3716  0115                     	;# 
  3717  0116                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  0119                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011A                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011C                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011D                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011E                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  018C                     	;# 
  3746  018D                     	;# 
  3747  018E                     	;# 
  3748  018F                     	;# 
  3749  0190                     	;# 
  3750  0191                     	;# 
  3751  0192                     	;# 
  3752  0196                     	;# 
  3753  0197                     	;# 
  3754  0198                     	;# 
  3755  0199                     	;# 
  3756  019A                     	;# 
  3757  019B                     	;# 
  3758  019C                     	;# 
  3759  020C                     	;# 
  3760  020D                     	;# 
  3761  020E                     	;# 
  3762  020F                     	;# 
  3763  020F                     	;# 
  3764  0210                     	;# 
  3765  0210                     	;# 
  3766  0211                     	;# 
  3767  0211                     	;# 
  3768  0212                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0216                     	;# 
  3774  0216                     	;# 
  3775  0217                     	;# 
  3776  0217                     	;# 
  3777  0218                     	;# 
  3778  0219                     	;# 
  3779  021A                     	;# 
  3780  021B                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028C                     	;# 
  3790  028D                     	;# 
  3791  028D                     	;# 
  3792  028E                     	;# 
  3793  028F                     	;# 
  3794  0290                     	;# 
  3795  0290                     	;# 
  3796  0291                     	;# 
  3797  0292                     	;# 
  3798  0292                     	;# 
  3799  0293                     	;# 
  3800  0293                     	;# 
  3801  0294                     	;# 
  3802  0295                     	;# 
  3803  0296                     	;# 
  3804  0296                     	;# 
  3805  0297                     	;# 
  3806  0298                     	;# 
  3807  0298                     	;# 
  3808  0299                     	;# 
  3809  0299                     	;# 
  3810  029A                     	;# 
  3811  029B                     	;# 
  3812  029C                     	;# 
  3813  029C                     	;# 
  3814  029D                     	;# 
  3815  030C                     	;# 
  3816  030C                     	;# 
  3817  030D                     	;# 
  3818  030E                     	;# 
  3819  030F                     	;# 
  3820  0310                     	;# 
  3821  0310                     	;# 
  3822  0311                     	;# 
  3823  0312                     	;# 
  3824  0313                     	;# 
  3825  0314                     	;# 
  3826  0314                     	;# 
  3827  0315                     	;# 
  3828  0316                     	;# 
  3829  0317                     	;# 
  3830  0318                     	;# 
  3831  0318                     	;# 
  3832  0319                     	;# 
  3833  031A                     	;# 
  3834  031B                     	;# 
  3835  031C                     	;# 
  3836  031C                     	;# 
  3837  031D                     	;# 
  3838  031E                     	;# 
  3839  031F                     	;# 
  3840  038C                     	;# 
  3841  038D                     	;# 
  3842  038E                     	;# 
  3843  0390                     	;# 
  3844  0391                     	;# 
  3845  0392                     	;# 
  3846  040C                     	;# 
  3847  040D                     	;# 
  3848  040E                     	;# 
  3849  040F                     	;# 
  3850  0410                     	;# 
  3851  0411                     	;# 
  3852  0416                     	;# 
  3853  0416                     	;# 
  3854  0417                     	;# 
  3855  0418                     	;# 
  3856  0418                     	;# 
  3857  0419                     	;# 
  3858  041A                     	;# 
  3859  041A                     	;# 
  3860  041B                     	;# 
  3861  041C                     	;# 
  3862  041C                     	;# 
  3863  041D                     	;# 
  3864  041E                     	;# 
  3865  041F                     	;# 
  3866  048C                     	;# 
  3867  048C                     	;# 
  3868  048D                     	;# 
  3869  048E                     	;# 
  3870  048F                     	;# 
  3871  048F                     	;# 
  3872  0490                     	;# 
  3873  0491                     	;# 
  3874  0492                     	;# 
  3875  0492                     	;# 
  3876  0493                     	;# 
  3877  0494                     	;# 
  3878  0495                     	;# 
  3879  0495                     	;# 
  3880  0496                     	;# 
  3881  0497                     	;# 
  3882  0498                     	;# 
  3883  0499                     	;# 
  3884  049A                     	;# 
  3885  049B                     	;# 
  3886  049C                     	;# 
  3887  049D                     	;# 
  3888  050C                     	;# 
  3889  050C                     	;# 
  3890  050D                     	;# 
  3891  050E                     	;# 
  3892  050F                     	;# 
  3893  050F                     	;# 
  3894  0510                     	;# 
  3895  0511                     	;# 
  3896  0512                     	;# 
  3897  0512                     	;# 
  3898  0513                     	;# 
  3899  0514                     	;# 
  3900  0515                     	;# 
  3901  0515                     	;# 
  3902  0516                     	;# 
  3903  0517                     	;# 
  3904  0518                     	;# 
  3905  0519                     	;# 
  3906  051A                     	;# 
  3907  051B                     	;# 
  3908  051C                     	;# 
  3909  051D                     	;# 
  3910  058C                     	;# 
  3911  058C                     	;# 
  3912  058D                     	;# 
  3913  058E                     	;# 
  3914  058F                     	;# 
  3915  058F                     	;# 
  3916  0590                     	;# 
  3917  0591                     	;# 
  3918  0592                     	;# 
  3919  0593                     	;# 
  3920  060C                     	;# 
  3921  060D                     	;# 
  3922  060E                     	;# 
  3923  060F                     	;# 
  3924  0610                     	;# 
  3925  0611                     	;# 
  3926  0612                     	;# 
  3927  0613                     	;# 
  3928  0614                     	;# 
  3929  0616                     	;# 
  3930  0617                     	;# 
  3931  0618                     	;# 
  3932  0619                     	;# 
  3933  061A                     	;# 
  3934  061B                     	;# 
  3935  061C                     	;# 
  3936  061D                     	;# 
  3937  061E                     	;# 
  3938  068C                     	;# 
  3939  068D                     	;# 
  3940  068E                     	;# 
  3941  068F                     	;# 
  3942  0690                     	;# 
  3943  0691                     	;# 
  3944  0692                     	;# 
  3945  0693                     	;# 
  3946  0694                     	;# 
  3947  070C                     	;# 
  3948  070D                     	;# 
  3949  070E                     	;# 
  3950  070F                     	;# 
  3951  0710                     	;# 
  3952  0711                     	;# 
  3953  0712                     	;# 
  3954  0713                     	;# 
  3955  0714                     	;# 
  3956  0716                     	;# 
  3957  0717                     	;# 
  3958  0718                     	;# 
  3959  0719                     	;# 
  3960  071A                     	;# 
  3961  071B                     	;# 
  3962  071C                     	;# 
  3963  071D                     	;# 
  3964  071E                     	;# 
  3965  0796                     	;# 
  3966  0797                     	;# 
  3967  0798                     	;# 
  3968  0799                     	;# 
  3969  079A                     	;# 
  3970  079B                     	;# 
  3971  080C                     	;# 
  3972  080D                     	;# 
  3973  080E                     	;# 
  3974  080F                     	;# 
  3975  0810                     	;# 
  3976  0811                     	;# 
  3977  0812                     	;# 
  3978  0813                     	;# 
  3979  0814                     	;# 
  3980  081A                     	;# 
  3981  081B                     	;# 
  3982  081C                     	;# 
  3983  081D                     	;# 
  3984  081E                     	;# 
  3985  081F                     	;# 
  3986  088C                     	;# 
  3987  088D                     	;# 
  3988  088E                     	;# 
  3989  088F                     	;# 
  3990  0890                     	;# 
  3991  0891                     	;# 
  3992  0892                     	;# 
  3993  0893                     	;# 
  3994  0895                     	;# 
  3995  0896                     	;# 
  3996  0897                     	;# 
  3997  0898                     	;# 
  3998  0899                     	;# 
  3999  089A                     	;# 
  4000  089B                     	;# 
  4001  090C                     	;# 
  4002  090E                     	;# 
  4003  090F                     	;# 
  4004  091F                     	;# 
  4005  091F                     	;# 
  4006  098F                     	;# 
  4007  098F                     	;# 
  4008  0990                     	;# 
  4009  0991                     	;# 
  4010  0992                     	;# 
  4011  0993                     	;# 
  4012  0994                     	;# 
  4013  0995                     	;# 
  4014  0996                     	;# 
  4015  0997                     	;# 
  4016  0E0F                     	;# 
  4017  0E10                     	;# 
  4018  0E11                     	;# 
  4019  0E12                     	;# 
  4020  0E13                     	;# 
  4021  0E14                     	;# 
  4022  0E15                     	;# 
  4023  0E16                     	;# 
  4024  0E17                     	;# 
  4025  0E18                     	;# 
  4026  0E19                     	;# 
  4027  0E1A                     	;# 
  4028  0E1B                     	;# 
  4029  0E1C                     	;# 
  4030  0E1D                     	;# 
  4031  0E1E                     	;# 
  4032  0E1F                     	;# 
  4033  0E20                     	;# 
  4034  0E21                     	;# 
  4035  0E22                     	;# 
  4036  0E23                     	;# 
  4037  0E24                     	;# 
  4038  0E25                     	;# 
  4039  0E26                     	;# 
  4040  0E27                     	;# 
  4041  0E28                     	;# 
  4042  0E29                     	;# 
  4043  0E2A                     	;# 
  4044  0E2B                     	;# 
  4045  0E2C                     	;# 
  4046  0E2D                     	;# 
  4047  0E2E                     	;# 
  4048  0E2F                     	;# 
  4049  0E30                     	;# 
  4050  0E31                     	;# 
  4051  0E32                     	;# 
  4052  0E33                     	;# 
  4053  0E34                     	;# 
  4054  0E35                     	;# 
  4055  0E36                     	;# 
  4056  0E37                     	;# 
  4057  0E8F                     	;# 
  4058  0E90                     	;# 
  4059  0E91                     	;# 
  4060  0E92                     	;# 
  4061  0E93                     	;# 
  4062  0E94                     	;# 
  4063  0E95                     	;# 
  4064  0E96                     	;# 
  4065  0E97                     	;# 
  4066  0E9C                     	;# 
  4067  0E9D                     	;# 
  4068  0E9E                     	;# 
  4069  0EA1                     	;# 
  4070  0EA2                     	;# 
  4071  0EA3                     	;# 
  4072  0EA4                     	;# 
  4073  0EA5                     	;# 
  4074  0EA9                     	;# 
  4075  0EAA                     	;# 
  4076  0EAB                     	;# 
  4077  0EAC                     	;# 
  4078  0EB1                     	;# 
  4079  0EB2                     	;# 
  4080  0EB3                     	;# 
  4081  0EB8                     	;# 
  4082  0EB9                     	;# 
  4083  0EBA                     	;# 
  4084  0EBB                     	;# 
  4085  0EBC                     	;# 
  4086  0EBD                     	;# 
  4087  0EBE                     	;# 
  4088  0EC3                     	;# 
  4089  0EC5                     	;# 
  4090  0EC6                     	;# 
  4091  0EC7                     	;# 
  4092  0EC8                     	;# 
  4093  0EC9                     	;# 
  4094  0ECA                     	;# 
  4095  0ECB                     	;# 
  4096  0ECC                     	;# 
  4097  0F10                     	;# 
  4098  0F11                     	;# 
  4099  0F12                     	;# 
  4100  0F13                     	;# 
  4101  0F14                     	;# 
  4102  0F15                     	;# 
  4103  0F16                     	;# 
  4104  0F17                     	;# 
  4105  0F18                     	;# 
  4106  0F19                     	;# 
  4107  0F1A                     	;# 
  4108  0F1B                     	;# 
  4109  0F1C                     	;# 
  4110  0F1D                     	;# 
  4111  0F1E                     	;# 
  4112  0F1F                     	;# 
  4113  0F20                     	;# 
  4114  0F21                     	;# 
  4115  0F22                     	;# 
  4116  0F23                     	;# 
  4117  0F24                     	;# 
  4118  0F25                     	;# 
  4119  0F26                     	;# 
  4120  0F27                     	;# 
  4121  0F38                     	;# 
  4122  0F39                     	;# 
  4123  0F3A                     	;# 
  4124  0F3B                     	;# 
  4125  0F3C                     	;# 
  4126  0F3D                     	;# 
  4127  0F3E                     	;# 
  4128  0F3F                     	;# 
  4129  0F40                     	;# 
  4130  0F41                     	;# 
  4131  0F43                     	;# 
  4132  0F44                     	;# 
  4133  0F45                     	;# 
  4134  0F46                     	;# 
  4135  0F47                     	;# 
  4136  0F48                     	;# 
  4137  0F49                     	;# 
  4138  0F4A                     	;# 
  4139  0F4B                     	;# 
  4140  0F4C                     	;# 
  4141  0F4E                     	;# 
  4142  0F4F                     	;# 
  4143  0F50                     	;# 
  4144  0F51                     	;# 
  4145  0F52                     	;# 
  4146  0F53                     	;# 
  4147  0F54                     	;# 
  4148  0F55                     	;# 
  4149  0F56                     	;# 
  4150  0F57                     	;# 
  4151  0F65                     	;# 
  4152  0F68                     	;# 
  4153  0F69                     	;# 
  4154  0F6A                     	;# 
  4155  0F6B                     	;# 
  4156  0FE4                     	;# 
  4157  0FE5                     	;# 
  4158  0FE6                     	;# 
  4159  0FE7                     	;# 
  4160  0FE8                     	;# 
  4161  0FE9                     	;# 
  4162  0FEA                     	;# 
  4163  0FEB                     	;# 
  4164  0FED                     	;# 
  4165  0FEE                     	;# 
  4166  0FEF                     	;# 
  4167  0000                     	;# 
  4168  0001                     	;# 
  4169  0002                     	;# 
  4170  0003                     	;# 
  4171  0004                     	;# 
  4172  0005                     	;# 
  4173  0006                     	;# 
  4174  0007                     	;# 
  4175  0008                     	;# 
  4176  0009                     	;# 
  4177  000A                     	;# 
  4178  000B                     	;# 
  4179  000C                     	;# 
  4180  000D                     	;# 
  4181  000E                     	;# 
  4182  0010                     	;# 
  4183  0011                     	;# 
  4184  0012                     	;# 
  4185  0013                     	;# 
  4186  0016                     	;# 
  4187  0017                     	;# 
  4188  0018                     	;# 
  4189  001C                     	;# 
  4190  001C                     	;# 
  4191  001D                     	;# 
  4192  001D                     	;# 
  4193  001E                     	;# 
  4194  001F                     	;# 
  4195  008C                     	;# 
  4196  008C                     	;# 
  4197  008D                     	;# 
  4198  008E                     	;# 
  4199  008E                     	;# 
  4200  008F                     	;# 
  4201  0090                     	;# 
  4202  0090                     	;# 
  4203  0091                     	;# 
  4204  0093                     	;# 
  4205  0094                     	;# 
  4206  0095                     	;# 
  4207  0096                     	;# 
  4208  0097                     	;# 
  4209  0098                     	;# 
  4210  0099                     	;# 
  4211  009A                     	;# 
  4212  009B                     	;# 
  4213  009C                     	;# 
  4214  009D                     	;# 
  4215  009E                     	;# 
  4216  010C                     	;# 
  4217  010D                     	;# 
  4218  010E                     	;# 
  4219  010E                     	;# 
  4220  010F                     	;# 
  4221  0110                     	;# 
  4222  0110                     	;# 
  4223  0111                     	;# 
  4224  0112                     	;# 
  4225  0112                     	;# 
  4226  0113                     	;# 
  4227  0114                     	;# 
  4228  0114                     	;# 
  4229  0115                     	;# 
  4230  0116                     	;# 
  4231  0116                     	;# 
  4232  0117                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  0119                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011A                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011B                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011C                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011D                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011E                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  011F                     	;# 
  4258  018C                     	;# 
  4259  018D                     	;# 
  4260  018E                     	;# 
  4261  018F                     	;# 
  4262  0190                     	;# 
  4263  0191                     	;# 
  4264  0192                     	;# 
  4265  0196                     	;# 
  4266  0197                     	;# 
  4267  0198                     	;# 
  4268  0199                     	;# 
  4269  019A                     	;# 
  4270  019B                     	;# 
  4271  019C                     	;# 
  4272  020C                     	;# 
  4273  020D                     	;# 
  4274  020E                     	;# 
  4275  020F                     	;# 
  4276  020F                     	;# 
  4277  0210                     	;# 
  4278  0210                     	;# 
  4279  0211                     	;# 
  4280  0211                     	;# 
  4281  0212                     	;# 
  4282  0213                     	;# 
  4283  0214                     	;# 
  4284  0215                     	;# 
  4285  0215                     	;# 
  4286  0216                     	;# 
  4287  0216                     	;# 
  4288  0217                     	;# 
  4289  0217                     	;# 
  4290  0218                     	;# 
  4291  0219                     	;# 
  4292  021A                     	;# 
  4293  021B                     	;# 
  4294  021B                     	;# 
  4295  021C                     	;# 
  4296  021C                     	;# 
  4297  021D                     	;# 
  4298  021D                     	;# 
  4299  021E                     	;# 
  4300  021F                     	;# 
  4301  028C                     	;# 
  4302  028C                     	;# 
  4303  028D                     	;# 
  4304  028D                     	;# 
  4305  028E                     	;# 
  4306  028F                     	;# 
  4307  0290                     	;# 
  4308  0290                     	;# 
  4309  0291                     	;# 
  4310  0292                     	;# 
  4311  0292                     	;# 
  4312  0293                     	;# 
  4313  0293                     	;# 
  4314  0294                     	;# 
  4315  0295                     	;# 
  4316  0296                     	;# 
  4317  0296                     	;# 
  4318  0297                     	;# 
  4319  0298                     	;# 
  4320  0298                     	;# 
  4321  0299                     	;# 
  4322  0299                     	;# 
  4323  029A                     	;# 
  4324  029B                     	;# 
  4325  029C                     	;# 
  4326  029C                     	;# 
  4327  029D                     	;# 
  4328  030C                     	;# 
  4329  030C                     	;# 
  4330  030D                     	;# 
  4331  030E                     	;# 
  4332  030F                     	;# 
  4333  0310                     	;# 
  4334  0310                     	;# 
  4335  0311                     	;# 
  4336  0312                     	;# 
  4337  0313                     	;# 
  4338  0314                     	;# 
  4339  0314                     	;# 
  4340  0315                     	;# 
  4341  0316                     	;# 
  4342  0317                     	;# 
  4343  0318                     	;# 
  4344  0318                     	;# 
  4345  0319                     	;# 
  4346  031A                     	;# 
  4347  031B                     	;# 
  4348  031C                     	;# 
  4349  031C                     	;# 
  4350  031D                     	;# 
  4351  031E                     	;# 
  4352  031F                     	;# 
  4353  038C                     	;# 
  4354  038D                     	;# 
  4355  038E                     	;# 
  4356  0390                     	;# 
  4357  0391                     	;# 
  4358  0392                     	;# 
  4359  040C                     	;# 
  4360  040D                     	;# 
  4361  040E                     	;# 
  4362  040F                     	;# 
  4363  0410                     	;# 
  4364  0411                     	;# 
  4365  0416                     	;# 
  4366  0416                     	;# 
  4367  0417                     	;# 
  4368  0418                     	;# 
  4369  0418                     	;# 
  4370  0419                     	;# 
  4371  041A                     	;# 
  4372  041A                     	;# 
  4373  041B                     	;# 
  4374  041C                     	;# 
  4375  041C                     	;# 
  4376  041D                     	;# 
  4377  041E                     	;# 
  4378  041F                     	;# 
  4379  048C                     	;# 
  4380  048C                     	;# 
  4381  048D                     	;# 
  4382  048E                     	;# 
  4383  048F                     	;# 
  4384  048F                     	;# 
  4385  0490                     	;# 
  4386  0491                     	;# 
  4387  0492                     	;# 
  4388  0492                     	;# 
  4389  0493                     	;# 
  4390  0494                     	;# 
  4391  0495                     	;# 
  4392  0495                     	;# 
  4393  0496                     	;# 
  4394  0497                     	;# 
  4395  0498                     	;# 
  4396  0499                     	;# 
  4397  049A                     	;# 
  4398  049B                     	;# 
  4399  049C                     	;# 
  4400  049D                     	;# 
  4401  050C                     	;# 
  4402  050C                     	;# 
  4403  050D                     	;# 
  4404  050E                     	;# 
  4405  050F                     	;# 
  4406  050F                     	;# 
  4407  0510                     	;# 
  4408  0511                     	;# 
  4409  0512                     	;# 
  4410  0512                     	;# 
  4411  0513                     	;# 
  4412  0514                     	;# 
  4413  0515                     	;# 
  4414  0515                     	;# 
  4415  0516                     	;# 
  4416  0517                     	;# 
  4417  0518                     	;# 
  4418  0519                     	;# 
  4419  051A                     	;# 
  4420  051B                     	;# 
  4421  051C                     	;# 
  4422  051D                     	;# 
  4423  058C                     	;# 
  4424  058C                     	;# 
  4425  058D                     	;# 
  4426  058E                     	;# 
  4427  058F                     	;# 
  4428  058F                     	;# 
  4429  0590                     	;# 
  4430  0591                     	;# 
  4431  0592                     	;# 
  4432  0593                     	;# 
  4433  060C                     	;# 
  4434  060D                     	;# 
  4435  060E                     	;# 
  4436  060F                     	;# 
  4437  0610                     	;# 
  4438  0611                     	;# 
  4439  0612                     	;# 
  4440  0613                     	;# 
  4441  0614                     	;# 
  4442  0616                     	;# 
  4443  0617                     	;# 
  4444  0618                     	;# 
  4445  0619                     	;# 
  4446  061A                     	;# 
  4447  061B                     	;# 
  4448  061C                     	;# 
  4449  061D                     	;# 
  4450  061E                     	;# 
  4451  068C                     	;# 
  4452  068D                     	;# 
  4453  068E                     	;# 
  4454  068F                     	;# 
  4455  0690                     	;# 
  4456  0691                     	;# 
  4457  0692                     	;# 
  4458  0693                     	;# 
  4459  0694                     	;# 
  4460  070C                     	;# 
  4461  070D                     	;# 
  4462  070E                     	;# 
  4463  070F                     	;# 
  4464  0710                     	;# 
  4465  0711                     	;# 
  4466  0712                     	;# 
  4467  0713                     	;# 
  4468  0714                     	;# 
  4469  0716                     	;# 
  4470  0717                     	;# 
  4471  0718                     	;# 
  4472  0719                     	;# 
  4473  071A                     	;# 
  4474  071B                     	;# 
  4475  071C                     	;# 
  4476  071D                     	;# 
  4477  071E                     	;# 
  4478  0796                     	;# 
  4479  0797                     	;# 
  4480  0798                     	;# 
  4481  0799                     	;# 
  4482  079A                     	;# 
  4483  079B                     	;# 
  4484  080C                     	;# 
  4485  080D                     	;# 
  4486  080E                     	;# 
  4487  080F                     	;# 
  4488  0810                     	;# 
  4489  0811                     	;# 
  4490  0812                     	;# 
  4491  0813                     	;# 
  4492  0814                     	;# 
  4493  081A                     	;# 
  4494  081B                     	;# 
  4495  081C                     	;# 
  4496  081D                     	;# 
  4497  081E                     	;# 
  4498  081F                     	;# 
  4499  088C                     	;# 
  4500  088D                     	;# 
  4501  088E                     	;# 
  4502  088F                     	;# 
  4503  0890                     	;# 
  4504  0891                     	;# 
  4505  0892                     	;# 
  4506  0893                     	;# 
  4507  0895                     	;# 
  4508  0896                     	;# 
  4509  0897                     	;# 
  4510  0898                     	;# 
  4511  0899                     	;# 
  4512  089A                     	;# 
  4513  089B                     	;# 
  4514  090C                     	;# 
  4515  090E                     	;# 
  4516  090F                     	;# 
  4517  091F                     	;# 
  4518  091F                     	;# 
  4519  098F                     	;# 
  4520  098F                     	;# 
  4521  0990                     	;# 
  4522  0991                     	;# 
  4523  0992                     	;# 
  4524  0993                     	;# 
  4525  0994                     	;# 
  4526  0995                     	;# 
  4527  0996                     	;# 
  4528  0997                     	;# 
  4529  0E0F                     	;# 
  4530  0E10                     	;# 
  4531  0E11                     	;# 
  4532  0E12                     	;# 
  4533  0E13                     	;# 
  4534  0E14                     	;# 
  4535  0E15                     	;# 
  4536  0E16                     	;# 
  4537  0E17                     	;# 
  4538  0E18                     	;# 
  4539  0E19                     	;# 
  4540  0E1A                     	;# 
  4541  0E1B                     	;# 
  4542  0E1C                     	;# 
  4543  0E1D                     	;# 
  4544  0E1E                     	;# 
  4545  0E1F                     	;# 
  4546  0E20                     	;# 
  4547  0E21                     	;# 
  4548  0E22                     	;# 
  4549  0E23                     	;# 
  4550  0E24                     	;# 
  4551  0E25                     	;# 
  4552  0E26                     	;# 
  4553  0E27                     	;# 
  4554  0E28                     	;# 
  4555  0E29                     	;# 
  4556  0E2A                     	;# 
  4557  0E2B                     	;# 
  4558  0E2C                     	;# 
  4559  0E2D                     	;# 
  4560  0E2E                     	;# 
  4561  0E2F                     	;# 
  4562  0E30                     	;# 
  4563  0E31                     	;# 
  4564  0E32                     	;# 
  4565  0E33                     	;# 
  4566  0E34                     	;# 
  4567  0E35                     	;# 
  4568  0E36                     	;# 
  4569  0E37                     	;# 
  4570  0E8F                     	;# 
  4571  0E90                     	;# 
  4572  0E91                     	;# 
  4573  0E92                     	;# 
  4574  0E93                     	;# 
  4575  0E94                     	;# 
  4576  0E95                     	;# 
  4577  0E96                     	;# 
  4578  0E97                     	;# 
  4579  0E9C                     	;# 
  4580  0E9D                     	;# 
  4581  0E9E                     	;# 
  4582  0EA1                     	;# 
  4583  0EA2                     	;# 
  4584  0EA3                     	;# 
  4585  0EA4                     	;# 
  4586  0EA5                     	;# 
  4587  0EA9                     	;# 
  4588  0EAA                     	;# 
  4589  0EAB                     	;# 
  4590  0EAC                     	;# 
  4591  0EB1                     	;# 
  4592  0EB2                     	;# 
  4593  0EB3                     	;# 
  4594  0EB8                     	;# 
  4595  0EB9                     	;# 
  4596  0EBA                     	;# 
  4597  0EBB                     	;# 
  4598  0EBC                     	;# 
  4599  0EBD                     	;# 
  4600  0EBE                     	;# 
  4601  0EC3                     	;# 
  4602  0EC5                     	;# 
  4603  0EC6                     	;# 
  4604  0EC7                     	;# 
  4605  0EC8                     	;# 
  4606  0EC9                     	;# 
  4607  0ECA                     	;# 
  4608  0ECB                     	;# 
  4609  0ECC                     	;# 
  4610  0F10                     	;# 
  4611  0F11                     	;# 
  4612  0F12                     	;# 
  4613  0F13                     	;# 
  4614  0F14                     	;# 
  4615  0F15                     	;# 
  4616  0F16                     	;# 
  4617  0F17                     	;# 
  4618  0F18                     	;# 
  4619  0F19                     	;# 
  4620  0F1A                     	;# 
  4621  0F1B                     	;# 
  4622  0F1C                     	;# 
  4623  0F1D                     	;# 
  4624  0F1E                     	;# 
  4625  0F1F                     	;# 
  4626  0F20                     	;# 
  4627  0F21                     	;# 
  4628  0F22                     	;# 
  4629  0F23                     	;# 
  4630  0F24                     	;# 
  4631  0F25                     	;# 
  4632  0F26                     	;# 
  4633  0F27                     	;# 
  4634  0F38                     	;# 
  4635  0F39                     	;# 
  4636  0F3A                     	;# 
  4637  0F3B                     	;# 
  4638  0F3C                     	;# 
  4639  0F3D                     	;# 
  4640  0F3E                     	;# 
  4641  0F3F                     	;# 
  4642  0F40                     	;# 
  4643  0F41                     	;# 
  4644  0F43                     	;# 
  4645  0F44                     	;# 
  4646  0F45                     	;# 
  4647  0F46                     	;# 
  4648  0F47                     	;# 
  4649  0F48                     	;# 
  4650  0F49                     	;# 
  4651  0F4A                     	;# 
  4652  0F4B                     	;# 
  4653  0F4C                     	;# 
  4654  0F4E                     	;# 
  4655  0F4F                     	;# 
  4656  0F50                     	;# 
  4657  0F51                     	;# 
  4658  0F52                     	;# 
  4659  0F53                     	;# 
  4660  0F54                     	;# 
  4661  0F55                     	;# 
  4662  0F56                     	;# 
  4663  0F57                     	;# 
  4664  0F65                     	;# 
  4665  0F68                     	;# 
  4666  0F69                     	;# 
  4667  0F6A                     	;# 
  4668  0F6B                     	;# 
  4669  0FE4                     	;# 
  4670  0FE5                     	;# 
  4671  0FE6                     	;# 
  4672  0FE7                     	;# 
  4673  0FE8                     	;# 
  4674  0FE9                     	;# 
  4675  0FEA                     	;# 
  4676  0FEB                     	;# 
  4677  0FED                     	;# 
  4678  0FEE                     	;# 
  4679  0FEF                     	;_samples
  4680                           
  4681                           	psect	idataBANK0
  4682  0868                     __pidataBANK0:	
  4683                           
  4684                           ;initializer for _setpoint
  4685  0868  3446               	retlw	70
  4686                           
  4687                           	psect	idataBANK1
  4688  099C                     __pidataBANK1:	
  4689                           
  4690                           ;initializer for ___cgram
  4691  099C  340C               	retlw	12
  4692  099D  3412               	retlw	18
  4693  099E  3412               	retlw	18
  4694  099F  340C               	retlw	12
  4695  09A0  3400               	retlw	0
  4696  09A1  3400               	retlw	0
  4697  09A2  3400               	retlw	0
  4698  09A3  3400               	retlw	0
  4699  09A4  340A               	retlw	10
  4700  09A5  3415               	retlw	21
  4701  09A6  3411               	retlw	17
  4702  09A7  340A               	retlw	10
  4703  09A8  3404               	retlw	4
  4704  09A9  3400               	retlw	0
  4705  09AA  3400               	retlw	0
  4706  09AB  3400               	retlw	0
  4707  09AC  340A               	retlw	10
  4708  09AD  341F               	retlw	31
  4709  09AE  341F               	retlw	31
  4710  09AF  340E               	retlw	14
  4711  09B0  3404               	retlw	4
  4712  09B1  3400               	retlw	0
  4713  09B2  3400               	retlw	0
  4714  09B3  3400               	retlw	0
  4715                           
  4716                           ;initializer for _presets
  4717  09B4  3400               	retlw	0
  4718  09B5  3446               	retlw	70
  4719  09B6  345F               	retlw	95
  4720  09B7  3469               	retlw	105
  4721  09B8  3478               	retlw	120
  4722                           
  4723                           	psect	stringtext
  4724  1000                     __pstringtext:	
  4725  1000                     log@coeff:	
  4726  1000  3400               	retlw	0
  4727  1001  3400               	retlw	0
  4728  1002  3400               	retlw	0
  4729  1003  3400               	retlw	0
  4730  1004  3480               	retlw	128
  4731  1005  343F               	retlw	63
  4732  1006  34F0               	retlw	240
  4733  1007  34FF               	retlw	255
  4734  1008  34BE               	retlw	190
  4735  1009  34E2               	retlw	226
  4736  100A  34A9               	retlw	169
  4737  100B  343E               	retlw	62
  4738  100C  3483               	retlw	131
  4739  100D  3476               	retlw	118
  4740  100E  34BE               	retlw	190
  4741  100F  34AE               	retlw	174
  4742  1010  342B               	retlw	43
  4743  1011  343E               	retlw	62
  4744  1012  343C               	retlw	60
  4745  1013  34C3               	retlw	195
  4746  1014  34BD               	retlw	189
  4747  1015  34D2               	retlw	210
  4748  1016  3413               	retlw	19
  4749  1017  343D               	retlw	61
  4750  1018  3478               	retlw	120
  4751  1019  34D3               	retlw	211
  4752  101A  34BB               	retlw	187
  4753  101B                     __end_oflog@coeff:	
  4754  0016                     _LATA	set	22
  4755  0017                     _LATB	set	23
  4756  0018                     _LATC	set	24
  4757  001E                     _T0CON0	set	30
  4758  001E                     _T0CON0bits	set	30
  4759  001F                     _T0CON1	set	31
  4760  001D                     _TMR0H	set	29
  4761  001C                     _TMR0L	set	28
  4762  0011                     _TRISA	set	17
  4763  0012                     _TRISB	set	18
  4764  0013                     _TRISC	set	19
  4765  005F                     _GIE	set	95
  4766  0063                     _RA3	set	99
  4767  0064                     _RA4	set	100
  4768  0068                     _RB0	set	104
  4769  0069                     _RB1	set	105
  4770  006A                     _RB2	set	106
  4771  006B                     _RB3	set	107
  4772  006C                     _RB4	set	108
  4773  006D                     _RB5	set	109
  4774  009D                     _ADACQ	set	157
  4775  0099                     _ADACT	set	153
  4776  009B                     _ADCAP	set	155
  4777  0098                     _ADCLK	set	152
  4778  0093                     _ADCON0	set	147
  4779  0093                     _ADCON0bits	set	147
  4780  0094                     _ADCON1	set	148
  4781  0095                     _ADCON2	set	149
  4782  0096                     _ADCON3	set	150
  4783  009E                     _ADPCH	set	158
  4784  009C                     _ADPRE	set	156
  4785  009A                     _ADREF	set	154
  4786  008D                     _ADRESH	set	141
  4787  008C                     _ADRESL	set	140
  4788  0097                     _ADSTAT	set	151
  4789  010F                     _ADLTHH	set	271
  4790  010E                     _ADLTHL	set	270
  4791  010D                     _ADRPT	set	269
  4792  0113                     _ADSTPTH	set	275
  4793  0112                     _ADSTPTL	set	274
  4794  0111                     _ADUTHH	set	273
  4795  0110                     _ADUTHL	set	272
  4796  021F                     _CCPTMRS1bits	set	543
  4797  0290                     _T2CLKCON	set	656
  4798  028E                     _T2CON	set	654
  4799  028E                     _T2CONbits	set	654
  4800  028F                     _T2HLT	set	655
  4801  028D                     _T2PR	set	653
  4802  0291                     _T2RST	set	657
  4803  028C                     _T2TMR	set	652
  4804  038E                     _PWM6CON	set	910
  4805  038D                     _PWM6DCH	set	909
  4806  038C                     _PWM6DCL	set	908
  4807  0716                     _PIE0bits	set	1814
  4808  070C                     _PIR0bits	set	1804
  4809  0710                     _PIR4bits	set	1808
  4810  3865                     _TMR0IF	set	14437
  4811  088D                     _OSCCON1	set	2189
  4812  088F                     _OSCCON3	set	2191
  4813  0891                     _OSCEN	set	2193
  4814  0893                     _OSCFRQ	set	2195
  4815  0892                     _OSCTUNE	set	2194
  4816  090C                     _FVRCON	set	2316
  4817  0E8F                     _PPSLOCK	set	3727
  4818  0E8F                     _PPSLOCKbits	set	3727
  4819  0F38                     _ANSELA	set	3896
  4820  0F43                     _ANSELB	set	3907
  4821  0F4E                     _ANSELC	set	3918
  4822  0F11                     _RA1PPS	set	3857
  4823  0F39                     _WPUA	set	3897
  4824  0F44                     _WPUB	set	3908
  4825  0F4F                     _WPUC	set	3919
  4826  0F65                     _WPUE	set	3941
  4827  101B                     STR_1:	
  4828  101B  3453               	retlw	83	;'S'
  4829  101C  3465               	retlw	101	;'e'
  4830  101D  3474               	retlw	116	;'t'
  4831  101E  3470               	retlw	112	;'p'
  4832  101F  346F               	retlw	111	;'o'
  4833  1020  3469               	retlw	105	;'i'
  4834  1021  346E               	retlw	110	;'n'
  4835  1022  3474               	retlw	116	;'t'
  4836  1023  343F               	retlw	63	;'?'
  4837  1024  3400               	retlw	0
  4838  1025                     STR_4:	
  4839  1025  3454               	retlw	84	;'T'
  4840  1026  3469               	retlw	105	;'i'
  4841  1027  346D               	retlw	109	;'m'
  4842  1028  3465               	retlw	101	;'e'
  4843  1029  343A               	retlw	58	;':'
  4844  102A  3400               	retlw	0
  4845  101B                     
  4846                           ; #config settings
  4847  0000                     
  4848                           	psect	cinit
  4849  07CE                     start_initialization:	
  4850  07CE                     __initialization:		;BIGRAM
  4851                           
  4852                           ; Initialize objects allocated to BANK0
  4853  07CE  3188  2068  3187   	fcall	__pidataBANK0	;fetch initializer
  4854  07D1  00ED               	movwf	__pdataBANK0& (0+127)
  4855                           
  4856                           ; Initialize objects allocated to BANK1
  4857  07D2  309C               	movlw	low __pidataBANK1
  4858  07D3  0084               	movwf	4
  4859  07D4  3089               	movlw	(high __pidataBANK1)| (0+128)
  4860  07D5  0085               	movwf	5
  4861  07D6  30BE               	movlw	low __pdataBANK1
  4862  07D7  0086               	movwf	6
  4863  07D8  3000               	movlw	high __pdataBANK1
  4864  07D9  0087               	movwf	7
  4865  07DA  3000               	movlw	0
  4866  07DB  00FF               	movwf	btemp+1
  4867  07DC  301D               	movlw	29
  4868  07DD  3188  208D  3187   	fcall	init_ram
  4869                           
  4870                           ; Clear objects allocated to BIGRAM
  4871  07E0  308C               	movlw	low (0+9100)
  4872  07E1  0084               	movwf	4
  4873  07E2  3023               	movlw	high (0+9100)
  4874  07E3  0085               	movwf	5
  4875  07E4  3064               	movlw	100
  4876  07E5  00FE               	movwf	btemp
  4877  07E6  3000               	movlw	0
  4878  07E7  00FF               	movwf	btemp+1
  4879  07E8  3188  2081  3187   	fcall	clear_ram0
  4880                           
  4881                           ; Clear objects allocated to BANK0
  4882  07EB  3058               	movlw	low __pbssBANK0
  4883  07EC  0084               	movwf	4
  4884  07ED  3000               	movlw	high __pbssBANK0
  4885  07EE  0085               	movwf	5
  4886  07EF  3015               	movlw	21
  4887  07F0  00FE               	movwf	btemp
  4888  07F1  3000               	movlw	0
  4889  07F2  00FF               	movwf	btemp+1
  4890  07F3  3188  2081         	fcall	clear_ram0
  4891                           
  4892                           ; Clear objects allocated to BANK1
  4893  07F5  0021               	movlb	1	; select bank1
  4894  07F6  01DB               	clrf	__pbssBANK1& (0+127)
  4895  07F7  01DC               	clrf	(__pbssBANK1+1)& (0+127)
  4896  07F8  01DD               	clrf	(__pbssBANK1+2)& (0+127)
  4897  07F9  01DE               	clrf	(__pbssBANK1+3)& (0+127)
  4898  07FA  01DF               	clrf	(__pbssBANK1+4)& (0+127)
  4899  07FB  01E0               	clrf	(__pbssBANK1+5)& (0+127)
  4900  07FC  01E1               	clrf	(__pbssBANK1+6)& (0+127)
  4901  07FD                     end_of_initialization:	
  4902                           ;End of C runtime variable initialization code
  4903                           
  4904  07FD                     __end_of__initialization:	
  4905  07FD  0020               	movlb	0
  4906  07FE  3184  2C5A         	ljmp	_main	;jump to C main() function
  4907                           
  4908                           	psect	bssBANK0
  4909  0058                     __pbssBANK0:	
  4910  0058                     _PID_Integrated:	
  4911  0058                     	ds	2
  4912  005A                     _PID_Ki:	
  4913  005A                     	ds	2
  4914  005C                     _PID_Kp:	
  4915  005C                     	ds	2
  4916  005E                     _PID_MaxOutput:	
  4917  005E                     	ds	2
  4918  0060                     _PID_MinOutput:	
  4919  0060                     	ds	2
  4920  0062                     _PID_Prev_Input:	
  4921  0062                     	ds	2
  4922  0064                     _errno:	
  4923  0064                     	ds	2
  4924  0066                     _PID_First_Time:	
  4925  0066                     	ds	1
  4926  0067                     _PID_Kd:	
  4927  0067                     	ds	1
  4928  0068                     _downCount:	
  4929  0068                     	ds	1
  4930  0069                     _oldSetpoint:	
  4931  0069                     	ds	1
  4932  006A                     _toggleCount:	
  4933  006A                     	ds	1
  4934  006B                     _upCount:	
  4935  006B                     	ds	1
  4936  006C                     _x:	
  4937  006C                     	ds	1
  4938                           
  4939                           	psect	dataBANK0
  4940  006D                     __pdataBANK0:	
  4941  006D                     _setpoint:	
  4942  006D                     	ds	1
  4943                           
  4944                           	psect	bssBANK1
  4945  00DB                     __pbssBANK1:	
  4946  00DB                     LCD_Write_Int@F13699:	
  4947  00DB                     	ds	5
  4948  00E0                     main@sampleIndex:	
  4949  00E0                     	ds	2
  4950                           
  4951                           	psect	dataBANK1
  4952  00BE                     __pdataBANK1:	
  4953  00BE                     ___cgram:	
  4954  00BE                     	ds	24
  4955  00D6                     _presets:	
  4956  00D6                     	ds	5
  4957                           
  4958                           	psect	inittext
  4959  088D                     init_ram:	
  4960  088D  00FE               	movwf	126
  4961  088E                     initloop:	
  4962  088E  0012               	moviw fsr0++
  4963  088F  001E               	movwi fsr1++
  4964  0890  3001               	movlw	1
  4965  0891  02FE               	subwf	126,f
  4966  0892  3000               	movlw	0
  4967  0893  3BFF               	subwfb	127,f
  4968  0894  087F               	movf	127,w
  4969  0895  047E               	iorwf	126,w
  4970  0896  1903               	btfsc	3,2
  4971  0897  3400               	retlw	0
  4972  0898  288E               	goto	initloop
  4973                           
  4974                           	psect	clrtext
  4975  0881                     clear_ram0:	
  4976                           ;	Called with FSR0 containing the base address, and
  4977                           ;	btemp/btemp+1 has the size to clear
  4978                           
  4979  0881  0064               	clrwdt	;clear the watchdog before getting into this loop
  4980  0882                     clrloop0:	
  4981  0882  0180               	clrf	0	;clear RAM location pointed to by FSR
  4982  0883  3101               	addfsr 0,1
  4983  0884  3001               	movlw	1
  4984  0885  02FE               	subwf	126,f
  4985  0886  3000               	movlw	0
  4986  0887  3BFF               	subwfb	127,f
  4987  0888  087F               	movf	127,w
  4988  0889  047E               	iorwf	126,w
  4989  088A  1903               	btfsc	3,2
  4990  088B  3400               	retlw	0	;all done for this memory range, return
  4991  088C  2882               	goto	clrloop0	;have we reached the end yet?
  4992                           
  4993                           	psect	cstackBANK1
  4994  00A0                     __pcstackBANK1:	
  4995  00A0                     main@R:	
  4996                           
  4997                           ; 3 bytes @ 0x0
  4998  00A0                     	ds	3
  4999  00A3                     _main$1066:	
  5000                           
  5001                           ; 3 bytes @ 0x3
  5002  00A3                     	ds	3
  5003  00A6                     main@outCurrent:	
  5004                           
  5005                           ; 2 bytes @ 0x6
  5006  00A6                     	ds	2
  5007  00A8                     main@minutes:	
  5008                           
  5009                           ; 2 bytes @ 0x8
  5010  00A8                     	ds	2
  5011  00AA                     main@seconds:	
  5012                           
  5013                           ; 2 bytes @ 0xA
  5014  00AA                     	ds	2
  5015  00AC                     main@firstTimeThrough:	
  5016                           
  5017                           ; 1 bytes @ 0xC
  5018  00AC                     	ds	1
  5019  00AD                     main@counter:	
  5020                           
  5021                           ; 2 bytes @ 0xD
  5022  00AD                     	ds	2
  5023  00AF                     main@startupTimer:	
  5024                           
  5025                           ; 1 bytes @ 0xF
  5026  00AF                     	ds	1
  5027  00B0                     main@toggle:	
  5028                           
  5029                           ; 1 bytes @ 0x10
  5030  00B0                     	ds	1
  5031  00B1                     main@totals:	
  5032                           
  5033                           ; 4 bytes @ 0x11
  5034  00B1                     	ds	4
  5035  00B5                     main@readTemperatureOld:	
  5036                           
  5037                           ; 2 bytes @ 0x15
  5038  00B5                     	ds	2
  5039  00B7                     main@displayTemp:	
  5040                           
  5041                           ; 2 bytes @ 0x17
  5042  00B7                     	ds	2
  5043  00B9                     main@readTemperature:	
  5044                           
  5045                           ; 2 bytes @ 0x19
  5046  00B9                     	ds	2
  5047  00BB                     main@steinhart:	
  5048                           
  5049                           ; 3 bytes @ 0x1B
  5050  00BB                     	ds	3
  5051                           
  5052                           	psect	cstackCOMMON
  5053  0070                     __pcstackCOMMON:	
  5054  0070                     ?_LCD_Cmd:	
  5055  0070                     ?_LCD_Write_Char:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     ?_OSCILLATOR_Initialize:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     ??_OSCILLATOR_Initialize:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     ?_ADCC_Initialize:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     ??_ADCC_Initialize:	
  5068                           ; 1 bytes @ 0x0
  5069                           
  5070  0070                     ?_PWM6_Initialize:	
  5071                           ; 1 bytes @ 0x0
  5072                           
  5073  0070                     ??_PWM6_Initialize:	
  5074                           ; 1 bytes @ 0x0
  5075                           
  5076  0070                     ?_TMR0_Initialize:	
  5077                           ; 1 bytes @ 0x0
  5078                           
  5079  0070                     ??_TMR0_Initialize:	
  5080                           ; 1 bytes @ 0x0
  5081                           
  5082  0070                     ?_TMR2_Initialize:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ??_TMR2_Initialize:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ?_Init_PID:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ?_readButtons:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ?_InitCustomChars:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ?_LCD_Port:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  0070                     ??_LCD_Port:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  0070                     ?_LCD_Clear:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     ?_LCD_Init:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     ?_PIN_MANAGER_Initialize:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     ??_PIN_MANAGER_Initialize:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     ?_SYSTEM_Initialize:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?_PWM6_LoadDutyValue:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ?_tempSetpoint:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?_main:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ?_ADCC_GetSingleConversion:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?___wmul:	
  5131                           ; 2 bytes @ 0x0
  5132                           
  5133  0070                     ?___awdiv:	
  5134                           ; 2 bytes @ 0x0
  5135                           
  5136  0070                     ?___awmod:	
  5137                           ; 2 bytes @ 0x0
  5138                           
  5139  0070                     ?___ftpack:	
  5140                           ; 2 bytes @ 0x0
  5141                           
  5142  0070                     ?_frexp:	
  5143                           ; 3 bytes @ 0x0
  5144                           
  5145  0070                     ?___ftneg:	
  5146                           ; 3 bytes @ 0x0
  5147                           
  5148  0070                     ?___aldiv:	
  5149                           ; 3 bytes @ 0x0
  5150                           
  5151  0070                     LCD_Port@a:	
  5152                           ; 4 bytes @ 0x0
  5153                           
  5154  0070                     PIN_MANAGER_Initialize@state:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     PWM6_LoadDutyValue@dutyValue:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     Init_PID@Kp:	
  5161                           ; 2 bytes @ 0x0
  5162                           
  5163  0070                     ___wmul@multiplier:	
  5164                           ; 2 bytes @ 0x0
  5165                           
  5166  0070                     ___awdiv@divisor:	
  5167                           ; 2 bytes @ 0x0
  5168                           
  5169  0070                     ___awmod@divisor:	
  5170                           ; 2 bytes @ 0x0
  5171                           
  5172  0070                     ___ftpack@arg:	
  5173                           ; 2 bytes @ 0x0
  5174                           
  5175  0070                     ___ftneg@f1:	
  5176                           ; 3 bytes @ 0x0
  5177                           
  5178  0070                     frexp@value:	
  5179                           ; 3 bytes @ 0x0
  5180                           
  5181  0070                     ___aldiv@divisor:	
  5182                           ; 3 bytes @ 0x0
  5183                           
  5184                           
  5185                           ; 4 bytes @ 0x0
  5186  0070                     	ds	1
  5187  0071                     ??_LCD_Cmd:	
  5188  0071                     ??_LCD_Write_Char:	
  5189                           ; 1 bytes @ 0x1
  5190                           
  5191                           
  5192                           ; 1 bytes @ 0x1
  5193  0071                     	ds	1
  5194  0072                     ??_PWM6_LoadDutyValue:	
  5195  0072                     LCD_Cmd@a:	
  5196                           ; 1 bytes @ 0x2
  5197                           
  5198  0072                     LCD_Write_Char@temp:	
  5199                           ; 1 bytes @ 0x2
  5200                           
  5201  0072                     Init_PID@Ki:	
  5202                           ; 1 bytes @ 0x2
  5203                           
  5204  0072                     ___wmul@multiplicand:	
  5205                           ; 2 bytes @ 0x2
  5206                           
  5207  0072                     ___awdiv@dividend:	
  5208                           ; 2 bytes @ 0x2
  5209                           
  5210  0072                     ___awmod@dividend:	
  5211                           ; 2 bytes @ 0x2
  5212                           
  5213                           
  5214                           ; 2 bytes @ 0x2
  5215  0072                     	ds	1
  5216  0073                     ??_LCD_Clear:	
  5217  0073                     ?_LCD_Set_Cursor:	
  5218                           ; 1 bytes @ 0x3
  5219                           
  5220  0073                     ??_LCD_Init:	
  5221                           ; 1 bytes @ 0x3
  5222                           
  5223  0073                     ??_ADCC_GetSingleConversion:	
  5224                           ; 1 bytes @ 0x3
  5225                           
  5226  0073                     ??___ftneg:	
  5227                           ; 1 bytes @ 0x3
  5228                           
  5229  0073                     LCD_Set_Cursor@y:	
  5230                           ; 1 bytes @ 0x3
  5231                           
  5232  0073                     LCD_Write_Char@y:	
  5233                           ; 1 bytes @ 0x3
  5234                           
  5235  0073                     ADCC_GetSingleConversion@channel:	
  5236                           ; 1 bytes @ 0x3
  5237                           
  5238  0073                     ___ftpack@exp:	
  5239                           ; 1 bytes @ 0x3
  5240                           
  5241  0073                     frexp@eptr:	
  5242                           ; 1 bytes @ 0x3
  5243                           
  5244                           
  5245                           ; 1 bytes @ 0x3
  5246  0073                     	ds	1
  5247  0074                     ??_frexp:	
  5248  0074                     ??_LCD_Set_Cursor:	
  5249                           ; 1 bytes @ 0x4
  5250                           
  5251  0074                     ??___wmul:	
  5252                           ; 1 bytes @ 0x4
  5253                           
  5254  0074                     ??___awdiv:	
  5255                           ; 1 bytes @ 0x4
  5256                           
  5257  0074                     ??___awmod:	
  5258                           ; 1 bytes @ 0x4
  5259                           
  5260  0074                     LCD_Write_Char@a:	
  5261                           ; 1 bytes @ 0x4
  5262                           
  5263  0074                     Init_PID@Kd:	
  5264                           ; 1 bytes @ 0x4
  5265                           
  5266  0074                     ___ftpack@sign:	
  5267                           ; 1 bytes @ 0x4
  5268                           
  5269  0074                     ___wmul@product:	
  5270                           ; 1 bytes @ 0x4
  5271                           
  5272  0074                     ___aldiv@dividend:	
  5273                           ; 2 bytes @ 0x4
  5274                           
  5275                           
  5276                           ; 4 bytes @ 0x4
  5277  0074                     	ds	1
  5278  0075                     ??___ftpack:	
  5279  0075                     ??_InitCustomChars:	
  5280                           ; 1 bytes @ 0x5
  5281                           
  5282  0075                     ?_LCD_Write_String:	
  5283                           ; 1 bytes @ 0x5
  5284                           
  5285  0075                     LCD_Init@style:	
  5286                           ; 1 bytes @ 0x5
  5287                           
  5288  0075                     ___awdiv@counter:	
  5289                           ; 1 bytes @ 0x5
  5290                           
  5291  0075                     ___awmod@counter:	
  5292                           ; 1 bytes @ 0x5
  5293                           
  5294  0075                     LCD_Write_String@a:	
  5295                           ; 1 bytes @ 0x5
  5296                           
  5297  0075                     Init_PID@minOutput:	
  5298                           ; 2 bytes @ 0x5
  5299                           
  5300                           
  5301                           ; 2 bytes @ 0x5
  5302  0075                     	ds	1
  5303  0076                     ?___lwdiv:	
  5304  0076                     InitCustomChars@i:	
  5305                           ; 2 bytes @ 0x6
  5306                           
  5307  0076                     LCD_Set_Cursor@x:	
  5308                           ; 1 bytes @ 0x6
  5309                           
  5310  0076                     ___awdiv@sign:	
  5311                           ; 1 bytes @ 0x6
  5312                           
  5313  0076                     ___awmod@sign:	
  5314                           ; 1 bytes @ 0x6
  5315                           
  5316  0076                     ___lwdiv@divisor:	
  5317                           ; 1 bytes @ 0x6
  5318                           
  5319                           
  5320                           ; 2 bytes @ 0x6
  5321  0076                     	ds	1
  5322  0077                     ??_LCD_Write_String:	
  5323  0077                     LCD_Set_Cursor@z:	
  5324                           ; 1 bytes @ 0x7
  5325                           
  5326  0077                     Init_PID@maxOutput:	
  5327                           ; 1 bytes @ 0x7
  5328                           
  5329  0077                     ___awdiv@quotient:	
  5330                           ; 2 bytes @ 0x7
  5331                           
  5332                           
  5333                           ; 2 bytes @ 0x7
  5334  0077                     	ds	1
  5335  0078                     ??___aldiv:	
  5336  0078                     ?___awtoft:	
  5337                           ; 1 bytes @ 0x8
  5338                           
  5339  0078                     ?___lbtoft:	
  5340                           ; 3 bytes @ 0x8
  5341                           
  5342  0078                     ?___lwtoft:	
  5343                           ; 3 bytes @ 0x8
  5344                           
  5345  0078                     LCD_Set_Cursor@w:	
  5346                           ; 3 bytes @ 0x8
  5347                           
  5348  0078                     LCD_Write_String@i:	
  5349                           ; 1 bytes @ 0x8
  5350                           
  5351  0078                     ___awtoft@c:	
  5352                           ; 2 bytes @ 0x8
  5353                           
  5354  0078                     ___lwdiv@dividend:	
  5355                           ; 2 bytes @ 0x8
  5356                           
  5357  0078                     ___lwtoft@c:	
  5358                           ; 2 bytes @ 0x8
  5359                           
  5360                           
  5361                           ; 2 bytes @ 0x8
  5362  0078                     	ds	1
  5363  0079                     ??_Init_PID:	
  5364  0079                     ?_LCD_Write_Int:	
  5365                           ; 1 bytes @ 0x9
  5366                           
  5367  0079                     LCD_Set_Cursor@temp:	
  5368                           ; 1 bytes @ 0x9
  5369                           
  5370  0079                     LCD_Write_Int@value:	
  5371                           ; 1 bytes @ 0x9
  5372                           
  5373                           
  5374                           ; 2 bytes @ 0x9
  5375  0079                     	ds	1
  5376  007A                     ??_SYSTEM_Initialize:	
  5377  007A                     ??___lwdiv:	
  5378                           ; 1 bytes @ 0xA
  5379                           
  5380                           
  5381                           ; 1 bytes @ 0xA
  5382  007A                     	ds	1
  5383  007B                     ??___awtoft:	
  5384  007B                     ??___lwtoft:	
  5385                           ; 1 bytes @ 0xB
  5386                           
  5387  007B                     LCD_Write_Int@fieldLength:	
  5388                           ; 1 bytes @ 0xB
  5389                           
  5390  007B                     ___lbtoft@c:	
  5391                           ; 1 bytes @ 0xB
  5392                           
  5393  007B                     ___lwdiv@quotient:	
  5394                           ; 1 bytes @ 0xB
  5395                           
  5396                           
  5397                           ; 2 bytes @ 0xB
  5398  007B                     	ds	1
  5399  007C                     LCD_Write_Int@numPlaces:	
  5400                           
  5401                           ; 1 bytes @ 0xC
  5402  007C                     	ds	1
  5403  007D                     LCD_Write_Int@sign:	
  5404  007D                     ___awtoft@sign:	
  5405                           ; 1 bytes @ 0xD
  5406                           
  5407  007D                     ___lwdiv@counter:	
  5408                           ; 1 bytes @ 0xD
  5409                           
  5410                           
  5411                           ; 1 bytes @ 0xD
  5412  007D                     	ds	1
  5413  007E                     ??_eval_poly:	
  5414  007E                     ??___ftsub:	
  5415                           ; 1 bytes @ 0xE
  5416                           
  5417                           
  5418                           	psect	cstackBANK0
  5419  0020                     __pcstackBANK0:	
  5420                           ; 1 bytes @ 0xE
  5421                           
  5422  0020                     ??_LCD_Write_Int:	
  5423  0020                     ??___lbtoft:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426  0020                     ?___ftdiv:	
  5427                           ; 1 bytes @ 0x0
  5428                           
  5429  0020                     ?___ftmul:	
  5430                           ; 3 bytes @ 0x0
  5431                           
  5432  0020                     ___aldiv@counter:	
  5433                           ; 3 bytes @ 0x0
  5434                           
  5435  0020                     ___ftdiv@f2:	
  5436                           ; 1 bytes @ 0x0
  5437                           
  5438  0020                     ___ftmul@f1:	
  5439                           ; 3 bytes @ 0x0
  5440                           
  5441                           
  5442                           ; 3 bytes @ 0x0
  5443  0020                     	ds	1
  5444  0021                     ___aldiv@sign:	
  5445                           
  5446                           ; 1 bytes @ 0x1
  5447  0021                     	ds	1
  5448  0022                     ___aldiv@quotient:	
  5449                           
  5450                           ; 4 bytes @ 0x2
  5451  0022                     	ds	1
  5452  0023                     ___ftdiv@f1:	
  5453  0023                     ___ftmul@f2:	
  5454                           ; 3 bytes @ 0x3
  5455                           
  5456                           
  5457                           ; 3 bytes @ 0x3
  5458  0023                     	ds	2
  5459  0025                     LCD_Write_Int@str:	
  5460                           
  5461                           ; 5 bytes @ 0x5
  5462  0025                     	ds	1
  5463  0026                     ??___ftdiv:	
  5464  0026                     ??___ftmul:	
  5465                           ; 1 bytes @ 0x6
  5466                           
  5467                           
  5468                           ; 1 bytes @ 0x6
  5469  0026                     	ds	4
  5470  002A                     ___ftdiv@cntr:	
  5471  002A                     ___ftmul@exp:	
  5472                           ; 1 bytes @ 0xA
  5473                           
  5474  002A                     LCD_Write_Int@j:	
  5475                           ; 1 bytes @ 0xA
  5476                           
  5477                           
  5478                           ; 2 bytes @ 0xA
  5479  002A                     	ds	1
  5480  002B                     ___ftdiv@f3:	
  5481  002B                     ___ftmul@f3_as_product:	
  5482                           ; 3 bytes @ 0xB
  5483                           
  5484                           
  5485                           ; 3 bytes @ 0xB
  5486  002B                     	ds	1
  5487  002C                     LCD_Write_Int@i:	
  5488                           
  5489                           ; 2 bytes @ 0xC
  5490  002C                     	ds	2
  5491  002E                     ??_readButtons:	
  5492  002E                     ___ftdiv@exp:	
  5493                           ; 1 bytes @ 0xE
  5494                           
  5495  002E                     ___ftmul@cntr:	
  5496                           ; 1 bytes @ 0xE
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0xE
  5500  002E                     	ds	1
  5501  002F                     ___ftdiv@sign:	
  5502  002F                     ___ftmul@sign:	
  5503                           ; 1 bytes @ 0xF
  5504                           
  5505                           
  5506                           ; 1 bytes @ 0xF
  5507  002F                     	ds	1
  5508  0030                     ?___ftadd:	
  5509  0030                     ?___fttol:	
  5510                           ; 3 bytes @ 0x10
  5511                           
  5512  0030                     ___ftadd@f1:	
  5513                           ; 4 bytes @ 0x10
  5514                           
  5515  0030                     ___fttol@f1:	
  5516                           ; 3 bytes @ 0x10
  5517                           
  5518                           
  5519                           ; 3 bytes @ 0x10
  5520  0030                     	ds	1
  5521  0031                     ??_tempSetpoint:	
  5522                           
  5523                           ; 1 bytes @ 0x11
  5524  0031                     	ds	2
  5525  0033                     ___ftadd@f2:	
  5526                           
  5527                           ; 3 bytes @ 0x13
  5528  0033                     	ds	1
  5529  0034                     ??___fttol:	
  5530  0034                     tempSetpoint@counter:	
  5531                           ; 1 bytes @ 0x14
  5532                           
  5533                           
  5534                           ; 1 bytes @ 0x14
  5535  0034                     	ds	2
  5536  0036                     ??___ftadd:	
  5537                           
  5538                           ; 1 bytes @ 0x16
  5539  0036                     	ds	2
  5540  0038                     ___fttol@sign1:	
  5541                           
  5542                           ; 1 bytes @ 0x18
  5543  0038                     	ds	1
  5544  0039                     ___fttol@lval:	
  5545                           
  5546                           ; 4 bytes @ 0x19
  5547  0039                     	ds	1
  5548  003A                     ___ftadd@sign:	
  5549                           
  5550                           ; 1 bytes @ 0x1A
  5551  003A                     	ds	1
  5552  003B                     ___ftadd@exp2:	
  5553                           
  5554                           ; 1 bytes @ 0x1B
  5555  003B                     	ds	1
  5556  003C                     ___ftadd@exp1:	
  5557                           
  5558                           ; 1 bytes @ 0x1C
  5559  003C                     	ds	1
  5560  003D                     ?___ftge:	
  5561  003D                     ?_eval_poly:	
  5562                           ; 1 bit 
  5563                           
  5564  003D                     ?___ftsub:	
  5565                           ; 3 bytes @ 0x1D
  5566                           
  5567  003D                     ___fttol@exp1:	
  5568                           ; 3 bytes @ 0x1D
  5569                           
  5570  003D                     ___ftge@ff1:	
  5571                           ; 1 bytes @ 0x1D
  5572                           
  5573  003D                     ___ftsub@f2:	
  5574                           ; 3 bytes @ 0x1D
  5575                           
  5576  003D                     eval_poly@x:	
  5577                           ; 3 bytes @ 0x1D
  5578                           
  5579                           
  5580                           ; 3 bytes @ 0x1D
  5581  003D                     	ds	1
  5582  003E                     ?_PID_Calculate:	
  5583  003E                     PID_Calculate@setpoint:	
  5584                           ; 2 bytes @ 0x1E
  5585                           
  5586                           
  5587                           ; 2 bytes @ 0x1E
  5588  003E                     	ds	2
  5589  0040                     PID_Calculate@temp:	
  5590  0040                     eval_poly@d:	
  5591                           ; 2 bytes @ 0x20
  5592                           
  5593  0040                     ___ftge@ff2:	
  5594                           ; 2 bytes @ 0x20
  5595                           
  5596  0040                     ___ftsub@f1:	
  5597                           ; 3 bytes @ 0x20
  5598                           
  5599                           
  5600                           ; 3 bytes @ 0x20
  5601  0040                     	ds	2
  5602  0042                     ??_PID_Calculate:	
  5603  0042                     eval_poly@n:	
  5604                           ; 1 bytes @ 0x22
  5605                           
  5606                           
  5607                           ; 2 bytes @ 0x22
  5608  0042                     	ds	1
  5609  0043                     ??___ftge:	
  5610                           
  5611                           ; 1 bytes @ 0x23
  5612  0043                     	ds	1
  5613  0044                     eval_poly@res:	
  5614                           
  5615                           ; 3 bytes @ 0x24
  5616  0044                     	ds	2
  5617  0046                     PID_Calculate@ErrValue:	
  5618                           
  5619                           ; 2 bytes @ 0x26
  5620  0046                     	ds	1
  5621  0047                     ?_log:	
  5622  0047                     log@x:	
  5623                           ; 3 bytes @ 0x27
  5624                           
  5625                           
  5626                           ; 3 bytes @ 0x27
  5627  0047                     	ds	1
  5628  0048                     PID_Calculate@DerivativeValue:	
  5629                           
  5630                           ; 2 bytes @ 0x28
  5631  0048                     	ds	2
  5632  004A                     ??_log:	
  5633  004A                     PID_Calculate@Err:	
  5634                           ; 1 bytes @ 0x2A
  5635                           
  5636                           
  5637                           ; 2 bytes @ 0x2A
  5638  004A                     	ds	1
  5639  004B                     log@exponent:	
  5640                           
  5641                           ; 2 bytes @ 0x2B
  5642  004B                     	ds	1
  5643  004C                     PID_Calculate@Result:	
  5644                           
  5645                           ; 2 bytes @ 0x2C
  5646  004C                     	ds	2
  5647  004E                     ??_main:	
  5648                           
  5649                           ; 1 bytes @ 0x2E
  5650  004E                     	ds	10
  5651                           
  5652                           	psect	maintext
  5653  045A                     __pmaintext:	
  5654 ;;
  5655 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5656 ;;
  5657 ;; *************** function _main *****************
  5658 ;; Defined at:
  5659 ;;		line 14 in file "main.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  totals          4   17[BANK1 ] long 
  5664 ;;  steinhart       3   27[BANK1 ] float 
  5665 ;;  R               3    0[BANK1 ] float 
  5666 ;;  readTemperat    2   25[BANK1 ] unsigned int 
  5667 ;;  displayTemp     2   23[BANK1 ] unsigned int 
  5668 ;;  readTemperat    2   21[BANK1 ] unsigned int 
  5669 ;;  counter         2   13[BANK1 ] unsigned int 
  5670 ;;  seconds         2   10[BANK1 ] unsigned int 
  5671 ;;  minutes         2    8[BANK1 ] unsigned int 
  5672 ;;  outCurrent      2    6[BANK1 ] unsigned int 
  5673 ;;  toggle          1   16[BANK1 ] unsigned char 
  5674 ;;  startupTimer    1   15[BANK1 ] unsigned char 
  5675 ;;  firstTimeThr    1   12[BANK1 ] unsigned char 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : B1F/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Totals:         0      10      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;Total ram usage:       40 bytes
  5690 ;; Hardware stack levels required when called:    5
  5691 ;; This function calls:
  5692 ;;		_ADCC_GetSingleConversion
  5693 ;;		_LCD_Set_Cursor
  5694 ;;		_LCD_Write_Char
  5695 ;;		_LCD_Write_Int
  5696 ;;		_LCD_Write_String
  5697 ;;		_PID_Calculate
  5698 ;;		_PWM6_LoadDutyValue
  5699 ;;		_SYSTEM_Initialize
  5700 ;;		___aldiv
  5701 ;;		___ftadd
  5702 ;;		___ftdiv
  5703 ;;		___ftge
  5704 ;;		___ftmul
  5705 ;;		___ftneg
  5706 ;;		___ftsub
  5707 ;;		___fttol
  5708 ;;		___lbtoft
  5709 ;;		___lwdiv
  5710 ;;		___lwtoft
  5711 ;;		___wmul
  5712 ;;		_log
  5713 ;;		_readButtons
  5714 ;;		_tempSetpoint
  5715 ;; This function is called by:
  5716 ;;		Startup code after reset
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function _main
  5722  045A                     _main:	
  5723                           
  5724                           ;main.c: 16: SYSTEM_Initialize();
  5725                           
  5726                           ;incstack = 0
  5727                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5728  045A  318B  23A7  3184   	fcall	_SYSTEM_Initialize
  5729                           
  5730                           ;main.c: 18: uint16_t readTemperature, outCurrent = 1023, readTemperatureOld, displayTem
      +                          p = 70, seconds = 0, counter = 0, minutes = 0;
  5731  045D  30FF               	movlw	255
  5732  045E  0021               	movlb	1	; select bank1
  5733  045F  00A6               	movwf	main@outCurrent^(0+128)
  5734  0460  3003               	movlw	3
  5735  0461  00A7               	movwf	(main@outCurrent^(0+128)+1)
  5736  0462  3046               	movlw	70
  5737  0463  00B7               	movwf	main@displayTemp^(0+128)
  5738  0464  3000               	movlw	0
  5739  0465  00B8               	movwf	(main@displayTemp^(0+128)+1)
  5740  0466  01AA               	clrf	main@seconds^(0+128)
  5741  0467  01AB               	clrf	(main@seconds+1)^(0+128)
  5742  0468  01AD               	clrf	main@counter^(0+128)
  5743  0469  01AE               	clrf	(main@counter+1)^(0+128)
  5744  046A  01A8               	clrf	main@minutes^(0+128)
  5745  046B  01A9               	clrf	(main@minutes+1)^(0+128)
  5746                           
  5747                           ;main.c: 20: uint8_t startupTimer = 0, firstTimeThrough = 0, toggle = 0;
  5748  046C  01AF               	clrf	main@startupTimer^(0+128)
  5749  046D  01AC               	clrf	main@firstTimeThrough^(0+128)
  5750  046E  01B0               	clrf	main@toggle^(0+128)
  5751                           
  5752                           ;main.c: 22: float R, steinhart;
  5753                           ;main.c: 24: static uint16_t sampleIndex = 0;
  5754                           ;main.c: 26: int32_t totals = 0;
  5755  046F  3000               	movlw	0
  5756  0470  00B4               	movwf	(main@totals+3)^(0+128)
  5757  0471  3000               	movlw	0
  5758  0472  00B3               	movwf	(main@totals+2)^(0+128)
  5759  0473  3000               	movlw	0
  5760  0474  00B2               	movwf	(main@totals+1)^(0+128)
  5761  0475  3000               	movlw	0
  5762  0476  00B1               	movwf	main@totals^(0+128)
  5763  0477                     l3057:	
  5764                           ;main.c: 30: while (1)
  5765                           
  5766                           
  5767                           ;main.c: 31: {
  5768                           ;main.c: 32: readTemperature = ADCC_GetSingleConversion(2);
  5769  0477  3002               	movlw	2
  5770  0478  3188  2099  3184   	fcall	_ADCC_GetSingleConversion
  5771  047B  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5772  047C  0021               	movlb	1	; select bank1
  5773  047D  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5774  047E  0870               	movf	?_ADCC_GetSingleConversion,w
  5775  047F  00B9               	movwf	main@readTemperature^(0+128)
  5776                           
  5777                           ;main.c: 34: totals = totals - samples[sampleIndex];
  5778  0480  0831               	movf	main@totals^(0+128),w
  5779  0481  0020               	movlb	0	; select bank0
  5780  0482  00CE               	movwf	??_main
  5781  0483  0021               	movlb	1	; select bank1
  5782  0484  0832               	movf	(main@totals+1)^(0+128),w
  5783  0485  0020               	movlb	0	; select bank0
  5784  0486  00CF               	movwf	??_main+1
  5785  0487  0021               	movlb	1	; select bank1
  5786  0488  0833               	movf	(main@totals+2)^(0+128),w
  5787  0489  0020               	movlb	0	; select bank0
  5788  048A  00D0               	movwf	??_main+2
  5789  048B  0021               	movlb	1	; select bank1
  5790  048C  0834               	movf	(main@totals+3)^(0+128),w
  5791  048D  0020               	movlb	0	; select bank0
  5792  048E  00D1               	movwf	??_main+3
  5793  048F  0021               	movlb	1	; select bank1
  5794  0490  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5795  0491  0020               	movlb	0	; select bank0
  5796  0492  00D3               	movwf	??_main+5
  5797  0493  0021               	movlb	1	; select bank1
  5798  0494  0860               	movf	main@sampleIndex^(0+128),w
  5799  0495  0020               	movlb	0	; select bank0
  5800  0496  00D2               	movwf	??_main+4
  5801  0497  35D2               	lslf	??_main+4,f
  5802  0498  0DD3               	rlf	??_main+5,f
  5803  0499  308C               	movlw	140
  5804  049A  0752               	addwf	??_main+4,w
  5805  049B  0084               	movwf	4
  5806  049C  3023               	movlw	35
  5807  049D  3D53               	addwfc	??_main+5,w
  5808  049E  0085               	movwf	5
  5809  049F  3F00               	moviw [0]fsr0
  5810  04A0  00D4               	movwf	??_main+6
  5811  04A1  3F01               	moviw [1]fsr0
  5812  04A2  00D5               	movwf	??_main+7
  5813  04A3  01D6               	clrf	??_main+8
  5814  04A4  01D7               	clrf	??_main+9
  5815  04A5  09D4               	comf	??_main+6,f
  5816  04A6  09D5               	comf	??_main+7,f
  5817  04A7  09D6               	comf	??_main+8,f
  5818  04A8  09D7               	comf	??_main+9,f
  5819  04A9  0AD4               	incf	??_main+6,f
  5820  04AA  1903               	skipnz
  5821  04AB  0AD5               	incf	??_main+7,f
  5822  04AC  1903               	skipnz
  5823  04AD  0AD6               	incf	??_main+8,f
  5824  04AE  1903               	skipnz
  5825  04AF  0AD7               	incf	??_main+9,f
  5826  04B0  0854               	movf	??_main+6,w
  5827  04B1  07CE               	addwf	??_main,f
  5828  04B2  0855               	movf	??_main+7,w
  5829  04B3  3DCF               	addwfc	??_main+1,f
  5830  04B4  0856               	movf	??_main+8,w
  5831  04B5  3DD0               	addwfc	??_main+2,f
  5832  04B6  0857               	movf	??_main+9,w
  5833  04B7  3DD1               	addwfc	??_main+3,f
  5834  04B8  0851               	movf	??_main+3,w
  5835  04B9  0021               	movlb	1	; select bank1
  5836  04BA  00B4               	movwf	(main@totals+3)^(0+128)
  5837  04BB  0020               	movlb	0	; select bank0
  5838  04BC  0850               	movf	??_main+2,w
  5839  04BD  0021               	movlb	1	; select bank1
  5840  04BE  00B3               	movwf	(main@totals+2)^(0+128)
  5841  04BF  0020               	movlb	0	; select bank0
  5842  04C0  084F               	movf	??_main+1,w
  5843  04C1  0021               	movlb	1	; select bank1
  5844  04C2  00B2               	movwf	(main@totals+1)^(0+128)
  5845  04C3  0020               	movlb	0	; select bank0
  5846  04C4  084E               	movf	??_main,w
  5847  04C5  0021               	movlb	1	; select bank1
  5848  04C6  00B1               	movwf	main@totals^(0+128)
  5849                           
  5850                           ;main.c: 36: samples[sampleIndex] = readTemperature;
  5851  04C7  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5852  04C8  0020               	movlb	0	; select bank0
  5853  04C9  00CF               	movwf	??_main+1
  5854  04CA  0021               	movlb	1	; select bank1
  5855  04CB  0860               	movf	main@sampleIndex^(0+128),w
  5856  04CC  0020               	movlb	0	; select bank0
  5857  04CD  00CE               	movwf	??_main
  5858  04CE  35CE               	lslf	??_main,f
  5859  04CF  0DCF               	rlf	??_main+1,f
  5860  04D0  308C               	movlw	140
  5861  04D1  00D0               	movwf	??_main+2
  5862  04D2  3023               	movlw	35
  5863  04D3  00D1               	movwf	??_main+3
  5864  04D4  084E               	movf	??_main,w
  5865  04D5  0750               	addwf	??_main+2,w
  5866  04D6  0086               	movwf	6
  5867  04D7  084F               	movf	??_main+1,w
  5868  04D8  3D51               	addwfc	??_main+3,w
  5869  04D9  0087               	movwf	7
  5870  04DA  0021               	movlb	1	; select bank1
  5871  04DB  0839               	movf	main@readTemperature^(0+128),w
  5872  04DC  3FC0               	movwi [0]fsr1
  5873  04DD  083A               	movf	(main@readTemperature+1)^(0+128),w
  5874  04DE  3FC1               	movwi [1]fsr1
  5875                           
  5876                           ;main.c: 38: totals = totals + samples[sampleIndex];
  5877  04DF  0831               	movf	main@totals^(0+128),w
  5878  04E0  0020               	movlb	0	; select bank0
  5879  04E1  00CE               	movwf	??_main
  5880  04E2  0021               	movlb	1	; select bank1
  5881  04E3  0832               	movf	(main@totals+1)^(0+128),w
  5882  04E4  0020               	movlb	0	; select bank0
  5883  04E5  00CF               	movwf	??_main+1
  5884  04E6  0021               	movlb	1	; select bank1
  5885  04E7  0833               	movf	(main@totals+2)^(0+128),w
  5886  04E8  0020               	movlb	0	; select bank0
  5887  04E9  00D0               	movwf	??_main+2
  5888  04EA  0021               	movlb	1	; select bank1
  5889  04EB  0834               	movf	(main@totals+3)^(0+128),w
  5890  04EC  0020               	movlb	0	; select bank0
  5891  04ED  00D1               	movwf	??_main+3
  5892  04EE  0021               	movlb	1	; select bank1
  5893  04EF  0861               	movf	(main@sampleIndex+1)^(0+128),w
  5894  04F0  0020               	movlb	0	; select bank0
  5895  04F1  00D3               	movwf	??_main+5
  5896  04F2  0021               	movlb	1	; select bank1
  5897  04F3  0860               	movf	main@sampleIndex^(0+128),w
  5898  04F4  0020               	movlb	0	; select bank0
  5899  04F5  00D2               	movwf	??_main+4
  5900  04F6  35D2               	lslf	??_main+4,f
  5901  04F7  0DD3               	rlf	??_main+5,f
  5902  04F8  308C               	movlw	140
  5903  04F9  0752               	addwf	??_main+4,w
  5904  04FA  0084               	movwf	4
  5905  04FB  3023               	movlw	35
  5906  04FC  3D53               	addwfc	??_main+5,w
  5907  04FD  0085               	movwf	5
  5908  04FE  3F00               	moviw [0]fsr0
  5909  04FF  00D4               	movwf	??_main+6
  5910  0500  3F01               	moviw [1]fsr0
  5911  0501  00D5               	movwf	??_main+7
  5912  0502  01D6               	clrf	??_main+8
  5913  0503  01D7               	clrf	??_main+9
  5914  0504  0854               	movf	??_main+6,w
  5915  0505  07CE               	addwf	??_main,f
  5916  0506  0855               	movf	??_main+7,w
  5917  0507  3DCF               	addwfc	??_main+1,f
  5918  0508  0856               	movf	??_main+8,w
  5919  0509  3DD0               	addwfc	??_main+2,f
  5920  050A  0857               	movf	??_main+9,w
  5921  050B  3DD1               	addwfc	??_main+3,f
  5922  050C  0851               	movf	??_main+3,w
  5923  050D  0021               	movlb	1	; select bank1
  5924  050E  00B4               	movwf	(main@totals+3)^(0+128)
  5925  050F  0020               	movlb	0	; select bank0
  5926  0510  0850               	movf	??_main+2,w
  5927  0511  0021               	movlb	1	; select bank1
  5928  0512  00B3               	movwf	(main@totals+2)^(0+128)
  5929  0513  0020               	movlb	0	; select bank0
  5930  0514  084F               	movf	??_main+1,w
  5931  0515  0021               	movlb	1	; select bank1
  5932  0516  00B2               	movwf	(main@totals+1)^(0+128)
  5933  0517  0020               	movlb	0	; select bank0
  5934  0518  084E               	movf	??_main,w
  5935  0519  0021               	movlb	1	; select bank1
  5936  051A  00B1               	movwf	main@totals^(0+128)
  5937                           
  5938                           ;main.c: 40: sampleIndex += 1;
  5939  051B  3001               	movlw	1
  5940  051C  07E0               	addwf	main@sampleIndex^(0+128),f
  5941  051D  3000               	movlw	0
  5942  051E  3DE1               	addwfc	(main@sampleIndex+1)^(0+128),f
  5943                           
  5944                           ;main.c: 42: if(sampleIndex >= 50)
  5945  051F  3000               	movlw	0
  5946  0520  0261               	subwf	(main@sampleIndex+1)^(0+128),w
  5947  0521  3032               	movlw	50
  5948  0522  1903               	skipnz
  5949  0523  0260               	subwf	main@sampleIndex^(0+128),w
  5950  0524  1C03               	skipc
  5951  0525  2D28               	goto	l3069
  5952                           
  5953                           ;main.c: 43: {
  5954                           ;main.c: 44: sampleIndex = 0;
  5955  0526  01E0               	clrf	main@sampleIndex^(0+128)
  5956  0527  01E1               	clrf	(main@sampleIndex+1)^(0+128)
  5957  0528                     l3069:	
  5958                           
  5959                           ;main.c: 45: }
  5960                           ;main.c: 47: readTemperature = totals / 50;
  5961  0528  3000               	movlw	0
  5962  0529  00F3               	movwf	___aldiv@divisor+3
  5963  052A  3000               	movlw	0
  5964  052B  00F2               	movwf	___aldiv@divisor+2
  5965  052C  3000               	movlw	0
  5966  052D  00F1               	movwf	___aldiv@divisor+1
  5967  052E  3032               	movlw	50
  5968  052F  00F0               	movwf	___aldiv@divisor
  5969  0530  0834               	movf	(main@totals+3)^(0+128),w
  5970  0531  00F7               	movwf	___aldiv@dividend+3
  5971  0532  0833               	movf	(main@totals+2)^(0+128),w
  5972  0533  00F6               	movwf	___aldiv@dividend+2
  5973  0534  0832               	movf	(main@totals+1)^(0+128),w
  5974  0535  00F5               	movwf	___aldiv@dividend+1
  5975  0536  0831               	movf	main@totals^(0+128),w
  5976  0537  00F4               	movwf	___aldiv@dividend
  5977  0538  318D  25A1  3184   	fcall	___aldiv
  5978  053B  0871               	movf	?___aldiv+1,w
  5979  053C  0021               	movlb	1	; select bank1
  5980  053D  00BA               	movwf	(main@readTemperature+1)^(0+128)
  5981  053E  0870               	movf	?___aldiv,w
  5982  053F  00B9               	movwf	main@readTemperature^(0+128)
  5983                           
  5984                           ;main.c: 50: if(startupTimer >= 70)
  5985  0540  3046               	movlw	70
  5986  0541  022F               	subwf	main@startupTimer^(0+128),w
  5987  0542  1C03               	skipc
  5988  0543  2DA3               	goto	l3091
  5989                           
  5990                           ;main.c: 51: {
  5991                           ;main.c: 52: if(firstTimeThrough == 0)
  5992  0544  082C               	movf	main@firstTimeThrough^(0+128),w
  5993  0545  1D03               	btfss	3,2
  5994  0546  2D53               	goto	l3081
  5995                           
  5996                           ;main.c: 53: {
  5997                           ;main.c: 54: readTemperatureOld = readTemperature;
  5998  0547  083A               	movf	(main@readTemperature+1)^(0+128),w
  5999  0548  00B6               	movwf	(main@readTemperatureOld+1)^(0+128)
  6000  0549  0839               	movf	main@readTemperature^(0+128),w
  6001  054A  00B5               	movwf	main@readTemperatureOld^(0+128)
  6002                           
  6003                           ;main.c: 55: counter = 0;
  6004  054B  01AD               	clrf	main@counter^(0+128)
  6005  054C  01AE               	clrf	(main@counter+1)^(0+128)
  6006                           
  6007                           ;main.c: 56: firstTimeThrough +=1;
  6008  054D  3001               	movlw	1
  6009  054E  0020               	movlb	0	; select bank0
  6010  054F  00CE               	movwf	??_main
  6011  0550  084E               	movf	??_main,w
  6012  0551  0021               	movlb	1	; select bank1
  6013  0552  07AC               	addwf	main@firstTimeThrough^(0+128),f
  6014  0553                     l3081:	
  6015                           
  6016                           ;main.c: 57: }
  6017                           ;main.c: 59: if(readTemperature > readTemperatureOld)
  6018  0553  083A               	movf	(main@readTemperature+1)^(0+128),w
  6019  0554  0236               	subwf	(main@readTemperatureOld+1)^(0+128),w
  6020  0555  1D03               	skipz
  6021  0556  2D59               	goto	u3305
  6022  0557  0839               	movf	main@readTemperature^(0+128),w
  6023  0558  0235               	subwf	main@readTemperatureOld^(0+128),w
  6024  0559                     u3305:	
  6025  0559  1803               	skipnc
  6026  055A  2D5F               	goto	l362
  6027                           
  6028                           ;main.c: 60: {
  6029                           ;main.c: 61: readTemperatureOld += 1;
  6030  055B  3001               	movlw	1
  6031  055C  07B5               	addwf	main@readTemperatureOld^(0+128),f
  6032  055D  3000               	movlw	0
  6033  055E  3DB6               	addwfc	(main@readTemperatureOld+1)^(0+128),f
  6034  055F                     l362:	
  6035                           
  6036                           ;main.c: 62: }
  6037                           ;main.c: 64: if(readTemperature < readTemperatureOld)
  6038  055F  0836               	movf	(main@readTemperatureOld+1)^(0+128),w
  6039  0560  023A               	subwf	(main@readTemperature+1)^(0+128),w
  6040  0561  1D03               	skipz
  6041  0562  2D65               	goto	u3315
  6042  0563  0835               	movf	main@readTemperatureOld^(0+128),w
  6043  0564  0239               	subwf	main@readTemperature^(0+128),w
  6044  0565                     u3315:	
  6045  0565  1803               	skipnc
  6046  0566  2D6B               	goto	l363
  6047                           
  6048                           ;main.c: 65: {
  6049                           ;main.c: 66: readTemperatureOld -= 1;
  6050  0567  3001               	movlw	1
  6051  0568  02B5               	subwf	main@readTemperatureOld^(0+128),f
  6052  0569  3000               	movlw	0
  6053  056A  3BB6               	subwfb	(main@readTemperatureOld+1)^(0+128),f
  6054  056B                     l363:	
  6055                           
  6056                           ;main.c: 67: }
  6057                           ;main.c: 69: readTemperature = readTemperatureOld;
  6058  056B  0836               	movf	(main@readTemperatureOld+1)^(0+128),w
  6059  056C  00BA               	movwf	(main@readTemperature+1)^(0+128)
  6060  056D  0835               	movf	main@readTemperatureOld^(0+128),w
  6061  056E  00B9               	movwf	main@readTemperature^(0+128)
  6062                           
  6063                           ;main.c: 95: outCurrent = PID_Calculate(setpoint, steinhart);
  6064  056F  0020               	movlb	0	; select bank0
  6065  0570  086D               	movf	_setpoint,w
  6066  0571  00CE               	movwf	??_main
  6067  0572  01CF               	clrf	??_main+1
  6068  0573  084E               	movf	??_main,w
  6069  0574  00BE               	movwf	PID_Calculate@setpoint
  6070  0575  084F               	movf	??_main+1,w
  6071  0576  00BF               	movwf	PID_Calculate@setpoint+1
  6072  0577  0021               	movlb	1	; select bank1
  6073  0578  083B               	movf	main@steinhart^(0+128),w
  6074  0579  0020               	movlb	0	; select bank0
  6075  057A  00B0               	movwf	___fttol@f1
  6076  057B  0021               	movlb	1	; select bank1
  6077  057C  083C               	movf	(main@steinhart+1)^(0+128),w
  6078  057D  0020               	movlb	0	; select bank0
  6079  057E  00B1               	movwf	___fttol@f1+1
  6080  057F  0021               	movlb	1	; select bank1
  6081  0580  083D               	movf	(main@steinhart+2)^(0+128),w
  6082  0581  0020               	movlb	0	; select bank0
  6083  0582  00B2               	movwf	___fttol@f1+2
  6084  0583  318E  2623  3184   	fcall	___fttol
  6085  0586  0020               	movlb	0	; select bank0
  6086  0587  0831               	movf	?___fttol+1,w
  6087  0588  00C1               	movwf	PID_Calculate@temp+1
  6088  0589  0830               	movf	?___fttol,w
  6089  058A  00C0               	movwf	PID_Calculate@temp
  6090  058B  3181  2129  3184   	fcall	_PID_Calculate
  6091  058E  0020               	movlb	0	; select bank0
  6092  058F  083F               	movf	?_PID_Calculate+1,w
  6093  0590  0021               	movlb	1	; select bank1
  6094  0591  00A7               	movwf	(main@outCurrent+1)^(0+128)
  6095  0592  0020               	movlb	0	; select bank0
  6096  0593  083E               	movf	?_PID_Calculate,w
  6097  0594  0021               	movlb	1	; select bank1
  6098  0595  00A6               	movwf	main@outCurrent^(0+128)
  6099                           
  6100                           ;main.c: 97: PWM6_LoadDutyValue(outCurrent);
  6101  0596  0827               	movf	(main@outCurrent+1)^(0+128),w
  6102  0597  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6103  0598  0826               	movf	main@outCurrent^(0+128),w
  6104  0599  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6105  059A  3188  20EA  3184   	fcall	_PWM6_LoadDutyValue
  6106                           
  6107                           ;main.c: 99: startupTimer = 69;
  6108  059D  3045               	movlw	69
  6109  059E  0020               	movlb	0	; select bank0
  6110  059F  00CE               	movwf	??_main
  6111  05A0  084E               	movf	??_main,w
  6112  05A1  0021               	movlb	1	; select bank1
  6113  05A2  00AF               	movwf	main@startupTimer^(0+128)
  6114  05A3                     l3091:	
  6115                           
  6116                           ;main.c: 100: }
  6117                           ;main.c: 102: startupTimer +=1;
  6118  05A3  3001               	movlw	1
  6119  05A4  0020               	movlb	0	; select bank0
  6120  05A5  00CE               	movwf	??_main
  6121  05A6  084E               	movf	??_main,w
  6122  05A7  0021               	movlb	1	; select bank1
  6123  05A8  07AF               	addwf	main@startupTimer^(0+128),f
  6124                           
  6125                           ;main.c: 105: R = 10200/(1023/(float)readTemperature - 1);
  6126  05A9  3000               	movlw	0
  6127  05AA  0020               	movlb	0	; select bank0
  6128  05AB  00B0               	movwf	___ftadd@f1
  6129  05AC  3080               	movlw	128
  6130  05AD  00B1               	movwf	___ftadd@f1+1
  6131  05AE  30BF               	movlw	191
  6132  05AF  00B2               	movwf	___ftadd@f1+2
  6133  05B0  0021               	movlb	1	; select bank1
  6134  05B1  083A               	movf	(main@readTemperature+1)^(0+128),w
  6135  05B2  00F9               	movwf	___lwtoft@c+1
  6136  05B3  0839               	movf	main@readTemperature^(0+128),w
  6137  05B4  00F8               	movwf	___lwtoft@c
  6138  05B5  3188  20D7  3184   	fcall	___lwtoft
  6139  05B8  0878               	movf	?___lwtoft,w
  6140  05B9  0020               	movlb	0	; select bank0
  6141  05BA  00A0               	movwf	___ftdiv@f2
  6142  05BB  0879               	movf	?___lwtoft+1,w
  6143  05BC  00A1               	movwf	___ftdiv@f2+1
  6144  05BD  087A               	movf	?___lwtoft+2,w
  6145  05BE  00A2               	movwf	___ftdiv@f2+2
  6146  05BF  30C0               	movlw	192
  6147  05C0  00A3               	movwf	___ftdiv@f1
  6148  05C1  307F               	movlw	127
  6149  05C2  00A4               	movwf	___ftdiv@f1+1
  6150  05C3  3044               	movlw	68
  6151  05C4  00A5               	movwf	___ftdiv@f1+2
  6152  05C5  318E  26AA  3184   	fcall	___ftdiv
  6153  05C8  0020               	movlb	0	; select bank0
  6154  05C9  0820               	movf	?___ftdiv,w
  6155  05CA  00B3               	movwf	___ftadd@f2
  6156  05CB  0821               	movf	?___ftdiv+1,w
  6157  05CC  00B4               	movwf	___ftadd@f2+1
  6158  05CD  0822               	movf	?___ftdiv+2,w
  6159  05CE  00B5               	movwf	___ftadd@f2+2
  6160  05CF  3183  2364  3184   	fcall	___ftadd
  6161  05D2  0020               	movlb	0	; select bank0
  6162  05D3  0830               	movf	?___ftadd,w
  6163  05D4  0021               	movlb	1	; select bank1
  6164  05D5  00A3               	movwf	_main$1066^(0+128)
  6165  05D6  0020               	movlb	0	; select bank0
  6166  05D7  0831               	movf	?___ftadd+1,w
  6167  05D8  0021               	movlb	1	; select bank1
  6168  05D9  00A4               	movwf	(_main$1066+1)^(0+128)
  6169  05DA  0020               	movlb	0	; select bank0
  6170  05DB  0832               	movf	?___ftadd+2,w
  6171  05DC  0021               	movlb	1	; select bank1
  6172  05DD  00A5               	movwf	(_main$1066+2)^(0+128)
  6173                           
  6174                           ;main.c: 105: R = 10200/(1023/(float)readTemperature - 1);
  6175  05DE  0823               	movf	_main$1066^(0+128),w
  6176  05DF  0020               	movlb	0	; select bank0
  6177  05E0  00A0               	movwf	___ftdiv@f2
  6178  05E1  0021               	movlb	1	; select bank1
  6179  05E2  0824               	movf	(_main$1066+1)^(0+128),w
  6180  05E3  0020               	movlb	0	; select bank0
  6181  05E4  00A1               	movwf	___ftdiv@f2+1
  6182  05E5  0021               	movlb	1	; select bank1
  6183  05E6  0825               	movf	(_main$1066+2)^(0+128),w
  6184  05E7  0020               	movlb	0	; select bank0
  6185  05E8  00A2               	movwf	___ftdiv@f2+2
  6186  05E9  3060               	movlw	96
  6187  05EA  00A3               	movwf	___ftdiv@f1
  6188  05EB  301F               	movlw	31
  6189  05EC  00A4               	movwf	___ftdiv@f1+1
  6190  05ED  3046               	movlw	70
  6191  05EE  00A5               	movwf	___ftdiv@f1+2
  6192  05EF  318E  26AA  3184   	fcall	___ftdiv
  6193  05F2  0020               	movlb	0	; select bank0
  6194  05F3  0820               	movf	?___ftdiv,w
  6195  05F4  0021               	movlb	1	; select bank1
  6196  05F5  00A0               	movwf	main@R^(0+128)
  6197  05F6  0020               	movlb	0	; select bank0
  6198  05F7  0821               	movf	?___ftdiv+1,w
  6199  05F8  0021               	movlb	1	; select bank1
  6200  05F9  00A1               	movwf	(main@R+1)^(0+128)
  6201  05FA  0020               	movlb	0	; select bank0
  6202  05FB  0822               	movf	?___ftdiv+2,w
  6203  05FC  0021               	movlb	1	; select bank1
  6204  05FD  00A2               	movwf	(main@R+2)^(0+128)
  6205                           
  6206                           ;main.c: 107: steinhart = R /10061;
  6207  05FE  3034               	movlw	52
  6208  05FF  0020               	movlb	0	; select bank0
  6209  0600  00A0               	movwf	___ftdiv@f2
  6210  0601  301D               	movlw	29
  6211  0602  00A1               	movwf	___ftdiv@f2+1
  6212  0603  3046               	movlw	70
  6213  0604  00A2               	movwf	___ftdiv@f2+2
  6214  0605  0021               	movlb	1	; select bank1
  6215  0606  0820               	movf	main@R^(0+128),w
  6216  0607  0020               	movlb	0	; select bank0
  6217  0608  00A3               	movwf	___ftdiv@f1
  6218  0609  0021               	movlb	1	; select bank1
  6219  060A  0821               	movf	(main@R+1)^(0+128),w
  6220  060B  0020               	movlb	0	; select bank0
  6221  060C  00A4               	movwf	___ftdiv@f1+1
  6222  060D  0021               	movlb	1	; select bank1
  6223  060E  0822               	movf	(main@R+2)^(0+128),w
  6224  060F  0020               	movlb	0	; select bank0
  6225  0610  00A5               	movwf	___ftdiv@f1+2
  6226  0611  318E  26AA  3184   	fcall	___ftdiv
  6227  0614  0020               	movlb	0	; select bank0
  6228  0615  0820               	movf	?___ftdiv,w
  6229  0616  0021               	movlb	1	; select bank1
  6230  0617  00BB               	movwf	main@steinhart^(0+128)
  6231  0618  0020               	movlb	0	; select bank0
  6232  0619  0821               	movf	?___ftdiv+1,w
  6233  061A  0021               	movlb	1	; select bank1
  6234  061B  00BC               	movwf	(main@steinhart+1)^(0+128)
  6235  061C  0020               	movlb	0	; select bank0
  6236  061D  0822               	movf	?___ftdiv+2,w
  6237  061E  0021               	movlb	1	; select bank1
  6238  061F  00BD               	movwf	(main@steinhart+2)^(0+128)
  6239                           
  6240                           ;main.c: 108: steinhart = log(steinhart);
  6241  0620  083B               	movf	main@steinhart^(0+128),w
  6242  0621  0020               	movlb	0	; select bank0
  6243  0622  00C7               	movwf	log@x
  6244  0623  0021               	movlb	1	; select bank1
  6245  0624  083C               	movf	(main@steinhart+1)^(0+128),w
  6246  0625  0020               	movlb	0	; select bank0
  6247  0626  00C8               	movwf	log@x+1
  6248  0627  0021               	movlb	1	; select bank1
  6249  0628  083D               	movf	(main@steinhart+2)^(0+128),w
  6250  0629  0020               	movlb	0	; select bank0
  6251  062A  00C9               	movwf	log@x+2
  6252  062B  318F  2753  3184   	fcall	_log
  6253  062E  0020               	movlb	0	; select bank0
  6254  062F  0847               	movf	?_log,w
  6255  0630  0021               	movlb	1	; select bank1
  6256  0631  00BB               	movwf	main@steinhart^(0+128)
  6257  0632  0020               	movlb	0	; select bank0
  6258  0633  0848               	movf	?_log+1,w
  6259  0634  0021               	movlb	1	; select bank1
  6260  0635  00BC               	movwf	(main@steinhart+1)^(0+128)
  6261  0636  0020               	movlb	0	; select bank0
  6262  0637  0849               	movf	?_log+2,w
  6263  0638  0021               	movlb	1	; select bank1
  6264  0639  00BD               	movwf	(main@steinhart+2)^(0+128)
  6265                           
  6266                           ;main.c: 109: steinhart /= 3995;
  6267  063A  30B0               	movlw	176
  6268  063B  0020               	movlb	0	; select bank0
  6269  063C  00A0               	movwf	___ftdiv@f2
  6270  063D  3079               	movlw	121
  6271  063E  00A1               	movwf	___ftdiv@f2+1
  6272  063F  3045               	movlw	69
  6273  0640  00A2               	movwf	___ftdiv@f2+2
  6274  0641  0021               	movlb	1	; select bank1
  6275  0642  083B               	movf	main@steinhart^(0+128),w
  6276  0643  0020               	movlb	0	; select bank0
  6277  0644  00A3               	movwf	___ftdiv@f1
  6278  0645  0021               	movlb	1	; select bank1
  6279  0646  083C               	movf	(main@steinhart+1)^(0+128),w
  6280  0647  0020               	movlb	0	; select bank0
  6281  0648  00A4               	movwf	___ftdiv@f1+1
  6282  0649  0021               	movlb	1	; select bank1
  6283  064A  083D               	movf	(main@steinhart+2)^(0+128),w
  6284  064B  0020               	movlb	0	; select bank0
  6285  064C  00A5               	movwf	___ftdiv@f1+2
  6286  064D  318E  26AA  3184   	fcall	___ftdiv
  6287  0650  0020               	movlb	0	; select bank0
  6288  0651  0820               	movf	?___ftdiv,w
  6289  0652  0021               	movlb	1	; select bank1
  6290  0653  00BB               	movwf	main@steinhart^(0+128)
  6291  0654  0020               	movlb	0	; select bank0
  6292  0655  0821               	movf	?___ftdiv+1,w
  6293  0656  0021               	movlb	1	; select bank1
  6294  0657  00BC               	movwf	(main@steinhart+1)^(0+128)
  6295  0658  0020               	movlb	0	; select bank0
  6296  0659  0822               	movf	?___ftdiv+2,w
  6297  065A  0021               	movlb	1	; select bank1
  6298  065B  00BD               	movwf	(main@steinhart+2)^(0+128)
  6299                           
  6300                           ;main.c: 110: steinhart += 1.0 / (25 + 273.15);
  6301  065C  30CF               	movlw	207
  6302  065D  0020               	movlb	0	; select bank0
  6303  065E  00B0               	movwf	___ftadd@f1
  6304  065F  305B               	movlw	91
  6305  0660  00B1               	movwf	___ftadd@f1+1
  6306  0661  303B               	movlw	59
  6307  0662  00B2               	movwf	___ftadd@f1+2
  6308  0663  0021               	movlb	1	; select bank1
  6309  0664  083B               	movf	main@steinhart^(0+128),w
  6310  0665  0020               	movlb	0	; select bank0
  6311  0666  00B3               	movwf	___ftadd@f2
  6312  0667  0021               	movlb	1	; select bank1
  6313  0668  083C               	movf	(main@steinhart+1)^(0+128),w
  6314  0669  0020               	movlb	0	; select bank0
  6315  066A  00B4               	movwf	___ftadd@f2+1
  6316  066B  0021               	movlb	1	; select bank1
  6317  066C  083D               	movf	(main@steinhart+2)^(0+128),w
  6318  066D  0020               	movlb	0	; select bank0
  6319  066E  00B5               	movwf	___ftadd@f2+2
  6320  066F  3183  2364  3184   	fcall	___ftadd
  6321  0672  0020               	movlb	0	; select bank0
  6322  0673  0830               	movf	?___ftadd,w
  6323  0674  0021               	movlb	1	; select bank1
  6324  0675  00BB               	movwf	main@steinhart^(0+128)
  6325  0676  0020               	movlb	0	; select bank0
  6326  0677  0831               	movf	?___ftadd+1,w
  6327  0678  0021               	movlb	1	; select bank1
  6328  0679  00BC               	movwf	(main@steinhart+1)^(0+128)
  6329  067A  0020               	movlb	0	; select bank0
  6330  067B  0832               	movf	?___ftadd+2,w
  6331  067C  0021               	movlb	1	; select bank1
  6332  067D  00BD               	movwf	(main@steinhart+2)^(0+128)
  6333                           
  6334                           ;main.c: 111: steinhart = 1.0 / steinhart;
  6335  067E  083B               	movf	main@steinhart^(0+128),w
  6336  067F  0020               	movlb	0	; select bank0
  6337  0680  00A0               	movwf	___ftdiv@f2
  6338  0681  0021               	movlb	1	; select bank1
  6339  0682  083C               	movf	(main@steinhart+1)^(0+128),w
  6340  0683  0020               	movlb	0	; select bank0
  6341  0684  00A1               	movwf	___ftdiv@f2+1
  6342  0685  0021               	movlb	1	; select bank1
  6343  0686  083D               	movf	(main@steinhart+2)^(0+128),w
  6344  0687  0020               	movlb	0	; select bank0
  6345  0688  00A2               	movwf	___ftdiv@f2+2
  6346  0689  3000               	movlw	0
  6347  068A  00A3               	movwf	___ftdiv@f1
  6348  068B  3080               	movlw	128
  6349  068C  00A4               	movwf	___ftdiv@f1+1
  6350  068D  303F               	movlw	63
  6351  068E  00A5               	movwf	___ftdiv@f1+2
  6352  068F  318E  26AA  3184   	fcall	___ftdiv
  6353  0692  0020               	movlb	0	; select bank0
  6354  0693  0820               	movf	?___ftdiv,w
  6355  0694  0021               	movlb	1	; select bank1
  6356  0695  00BB               	movwf	main@steinhart^(0+128)
  6357  0696  0020               	movlb	0	; select bank0
  6358  0697  0821               	movf	?___ftdiv+1,w
  6359  0698  0021               	movlb	1	; select bank1
  6360  0699  00BC               	movwf	(main@steinhart+1)^(0+128)
  6361  069A  0020               	movlb	0	; select bank0
  6362  069B  0822               	movf	?___ftdiv+2,w
  6363  069C  0021               	movlb	1	; select bank1
  6364  069D  00BD               	movwf	(main@steinhart+2)^(0+128)
  6365                           
  6366                           ;main.c: 112: steinhart -= 273.15;
  6367  069E  3093               	movlw	147
  6368  069F  0020               	movlb	0	; select bank0
  6369  06A0  00BD               	movwf	___ftsub@f2
  6370  06A1  3088               	movlw	136
  6371  06A2  00BE               	movwf	___ftsub@f2+1
  6372  06A3  3043               	movlw	67
  6373  06A4  00BF               	movwf	___ftsub@f2+2
  6374  06A5  0021               	movlb	1	; select bank1
  6375  06A6  083B               	movf	main@steinhart^(0+128),w
  6376  06A7  0020               	movlb	0	; select bank0
  6377  06A8  00C0               	movwf	___ftsub@f1
  6378  06A9  0021               	movlb	1	; select bank1
  6379  06AA  083C               	movf	(main@steinhart+1)^(0+128),w
  6380  06AB  0020               	movlb	0	; select bank0
  6381  06AC  00C1               	movwf	___ftsub@f1+1
  6382  06AD  0021               	movlb	1	; select bank1
  6383  06AE  083D               	movf	(main@steinhart+2)^(0+128),w
  6384  06AF  0020               	movlb	0	; select bank0
  6385  06B0  00C2               	movwf	___ftsub@f1+2
  6386  06B1  3189  21B9  3184   	fcall	___ftsub
  6387  06B4  0020               	movlb	0	; select bank0
  6388  06B5  083D               	movf	?___ftsub,w
  6389  06B6  0021               	movlb	1	; select bank1
  6390  06B7  00BB               	movwf	main@steinhart^(0+128)
  6391  06B8  0020               	movlb	0	; select bank0
  6392  06B9  083E               	movf	?___ftsub+1,w
  6393  06BA  0021               	movlb	1	; select bank1
  6394  06BB  00BC               	movwf	(main@steinhart+1)^(0+128)
  6395  06BC  0020               	movlb	0	; select bank0
  6396  06BD  083F               	movf	?___ftsub+2,w
  6397  06BE  0021               	movlb	1	; select bank1
  6398  06BF  00BD               	movwf	(main@steinhart+2)^(0+128)
  6399                           
  6400                           ;main.c: 115: displayTemp = (uint16_t)(steinhart * 10);
  6401  06C0  083B               	movf	main@steinhart^(0+128),w
  6402  06C1  0020               	movlb	0	; select bank0
  6403  06C2  00A3               	movwf	___ftmul@f2
  6404  06C3  0021               	movlb	1	; select bank1
  6405  06C4  083C               	movf	(main@steinhart+1)^(0+128),w
  6406  06C5  0020               	movlb	0	; select bank0
  6407  06C6  00A4               	movwf	___ftmul@f2+1
  6408  06C7  0021               	movlb	1	; select bank1
  6409  06C8  083D               	movf	(main@steinhart+2)^(0+128),w
  6410  06C9  0020               	movlb	0	; select bank0
  6411  06CA  00A5               	movwf	___ftmul@f2+2
  6412  06CB  3000               	movlw	0
  6413  06CC  00A0               	movwf	___ftmul@f1
  6414  06CD  3020               	movlw	32
  6415  06CE  00A1               	movwf	___ftmul@f1+1
  6416  06CF  3041               	movlw	65
  6417  06D0  00A2               	movwf	___ftmul@f1+2
  6418  06D1  3180  2075  3184   	fcall	___ftmul
  6419  06D4  0020               	movlb	0	; select bank0
  6420  06D5  0820               	movf	?___ftmul,w
  6421  06D6  00B0               	movwf	___fttol@f1
  6422  06D7  0821               	movf	?___ftmul+1,w
  6423  06D8  00B1               	movwf	___fttol@f1+1
  6424  06D9  0822               	movf	?___ftmul+2,w
  6425  06DA  00B2               	movwf	___fttol@f1+2
  6426  06DB  318E  2623  3184   	fcall	___fttol
  6427  06DE  0020               	movlb	0	; select bank0
  6428  06DF  0831               	movf	?___fttol+1,w
  6429  06E0  0021               	movlb	1	; select bank1
  6430  06E1  00B8               	movwf	(main@displayTemp+1)^(0+128)
  6431  06E2  0020               	movlb	0	; select bank0
  6432  06E3  0830               	movf	?___fttol,w
  6433  06E4  0021               	movlb	1	; select bank1
  6434  06E5  00B7               	movwf	main@displayTemp^(0+128)
  6435                           
  6436                           ;main.c: 117: if(toggle == 1)
  6437  06E6  0330               	decf	main@toggle^(0+128),w
  6438  06E7  1D03               	btfss	3,2
  6439  06E8  2F1F               	goto	l3123
  6440                           
  6441                           ;main.c: 118: {
  6442                           ;main.c: 119: displayTemp = displayTemp*9/5+320;
  6443  06E9  3005               	movlw	5
  6444  06EA  00F6               	movwf	___lwdiv@divisor
  6445  06EB  3000               	movlw	0
  6446  06EC  00F7               	movwf	___lwdiv@divisor+1
  6447  06ED  0838               	movf	(main@displayTemp+1)^(0+128),w
  6448  06EE  00F1               	movwf	___wmul@multiplier+1
  6449  06EF  0837               	movf	main@displayTemp^(0+128),w
  6450  06F0  00F0               	movwf	___wmul@multiplier
  6451  06F1  3009               	movlw	9
  6452  06F2  00F2               	movwf	___wmul@multiplicand
  6453  06F3  3000               	movlw	0
  6454  06F4  00F3               	movwf	___wmul@multiplicand+1
  6455  06F5  3189  2165  3184   	fcall	___wmul
  6456  06F8  0871               	movf	?___wmul+1,w
  6457  06F9  00F9               	movwf	___lwdiv@dividend+1
  6458  06FA  0870               	movf	?___wmul,w
  6459  06FB  00F8               	movwf	___lwdiv@dividend
  6460  06FC  318A  2278  3184   	fcall	___lwdiv
  6461  06FF  0876               	movf	?___lwdiv,w
  6462  0700  3E40               	addlw	64
  6463  0701  0021               	movlb	1	; select bank1
  6464  0702  00B7               	movwf	main@displayTemp^(0+128)
  6465  0703  3001               	movlw	1
  6466  0704  3D77               	addwfc	?___lwdiv+1,w
  6467  0705  00B8               	movwf	(main@displayTemp+1)^(0+128)
  6468                           
  6469                           ;main.c: 120: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6470  0706  01F3               	clrf	LCD_Set_Cursor@y
  6471  0707  0AF3               	incf	LCD_Set_Cursor@y,f
  6472  0708  3000               	movlw	0
  6473  0709  318B  2323  3184   	fcall	_LCD_Set_Cursor
  6474  070C  0021               	movlb	1	; select bank1
  6475  070D  0838               	movf	(main@displayTemp+1)^(0+128),w
  6476  070E  00FA               	movwf	LCD_Write_Int@value+1
  6477  070F  0837               	movf	main@displayTemp^(0+128),w
  6478  0710  00F9               	movwf	LCD_Write_Int@value
  6479  0711  01FB               	clrf	LCD_Write_Int@fieldLength
  6480  0712  03FB               	decf	LCD_Write_Int@fieldLength,f
  6481  0713  01FC               	clrf	LCD_Write_Int@numPlaces
  6482  0714  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6483  0715  01FD               	clrf	LCD_Write_Int@sign
  6484  0716  3182  229B  3184   	fcall	_LCD_Write_Int
  6485                           
  6486                           ;main.c: 121: LCD_Write_Char(0);
  6487  0719  3000               	movlw	0
  6488  071A  318A  221C  3184   	fcall	_LCD_Write_Char
  6489                           
  6490                           ;main.c: 122: LCD_Write_Char('F');
  6491  071D  3046               	movlw	70
  6492  071E  2F37               	goto	L1
  6493  071F                     l3123:	
  6494                           ;main.c: 124: }
  6495                           
  6496                           ;main.c: 123: LCD_Write_Char(' ');
  6497                           
  6498                           
  6499                           ;main.c: 125: else
  6500                           ;main.c: 126: {
  6501                           ;main.c: 127: { LCD_Set_Cursor(0,1); LCD_Write_Int(displayTemp,-1, 1, 0);};
  6502  071F  01F3               	clrf	LCD_Set_Cursor@y
  6503  0720  0AF3               	incf	LCD_Set_Cursor@y,f
  6504  0721  3000               	movlw	0
  6505  0722  318B  2323  3184   	fcall	_LCD_Set_Cursor
  6506  0725  0021               	movlb	1	; select bank1
  6507  0726  0838               	movf	(main@displayTemp+1)^(0+128),w
  6508  0727  00FA               	movwf	LCD_Write_Int@value+1
  6509  0728  0837               	movf	main@displayTemp^(0+128),w
  6510  0729  00F9               	movwf	LCD_Write_Int@value
  6511  072A  01FB               	clrf	LCD_Write_Int@fieldLength
  6512  072B  03FB               	decf	LCD_Write_Int@fieldLength,f
  6513  072C  01FC               	clrf	LCD_Write_Int@numPlaces
  6514  072D  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6515  072E  01FD               	clrf	LCD_Write_Int@sign
  6516  072F  3182  229B  3184   	fcall	_LCD_Write_Int
  6517                           
  6518                           ;main.c: 128: LCD_Write_Char(0);
  6519  0732  3000               	movlw	0
  6520  0733  318A  221C  3184   	fcall	_LCD_Write_Char
  6521                           
  6522                           ;main.c: 129: LCD_Write_Char('C');
  6523  0736  3043               	movlw	67
  6524  0737                     L1:	
  6525  0737  318A  221C  3184   	fcall	_LCD_Write_Char
  6526                           
  6527                           ;main.c: 130: LCD_Write_Char(' ');
  6528  073A  3020               	movlw	32
  6529  073B  318A  221C  3184   	fcall	_LCD_Write_Char
  6530                           
  6531                           ;main.c: 131: }
  6532                           ;main.c: 134: { LCD_Set_Cursor(1,0); LCD_Write_String("Time:");}
  6533  073E  01F3               	clrf	LCD_Set_Cursor@y
  6534  073F  3001               	movlw	1
  6535  0740  318B  2323  3184   	fcall	_LCD_Set_Cursor
  6536  0743  3025               	movlw	low (STR_4| (0+32768))
  6537  0744  00F5               	movwf	LCD_Write_String@a
  6538  0745  3090               	movlw	high (STR_4| (0+32768))
  6539  0746  00F6               	movwf	LCD_Write_String@a+1
  6540  0747  3189  214B  3184   	fcall	_LCD_Write_String
  6541                           
  6542                           ;main.c: 135: { LCD_Set_Cursor(1,5); LCD_Write_Int(minutes,-1, 0, 0);};
  6543  074A  3005               	movlw	5
  6544  074B  0020               	movlb	0	; select bank0
  6545  074C  00CE               	movwf	??_main
  6546  074D  084E               	movf	??_main,w
  6547  074E  00F3               	movwf	LCD_Set_Cursor@y
  6548  074F  3001               	movlw	1
  6549  0750  318B  2323  3184   	fcall	_LCD_Set_Cursor
  6550  0753  0021               	movlb	1	; select bank1
  6551  0754  0829               	movf	(main@minutes+1)^(0+128),w
  6552  0755  00FA               	movwf	LCD_Write_Int@value+1
  6553  0756  0828               	movf	main@minutes^(0+128),w
  6554  0757  00F9               	movwf	LCD_Write_Int@value
  6555  0758  01FB               	clrf	LCD_Write_Int@fieldLength
  6556  0759  03FB               	decf	LCD_Write_Int@fieldLength,f
  6557  075A  01FC               	clrf	LCD_Write_Int@numPlaces
  6558  075B  01FD               	clrf	LCD_Write_Int@sign
  6559  075C  3182  229B  3184   	fcall	_LCD_Write_Int
  6560                           
  6561                           ;main.c: 136: LCD_Write_Char(' ');
  6562  075F  3020               	movlw	32
  6563  0760  318A  221C  3184   	fcall	_LCD_Write_Char
  6564                           
  6565                           ;main.c: 139: counter +=1;
  6566  0763  3001               	movlw	1
  6567  0764  0021               	movlb	1	; select bank1
  6568  0765  07AD               	addwf	main@counter^(0+128),f
  6569  0766  3000               	movlw	0
  6570  0767  3DAE               	addwfc	(main@counter+1)^(0+128),f
  6571                           
  6572                           ;main.c: 141: if(counter>12)
  6573  0768  3000               	movlw	0
  6574  0769  022E               	subwf	(main@counter+1)^(0+128),w
  6575  076A  300D               	movlw	13
  6576  076B  1903               	skipnz
  6577  076C  022D               	subwf	main@counter^(0+128),w
  6578  076D  1C03               	skipc
  6579  076E  2F79               	goto	l3151
  6580                           
  6581                           ;main.c: 142: {
  6582                           ;main.c: 143: toggle = 1-toggle;
  6583  076F  0330               	decf	main@toggle^(0+128),w
  6584  0770  3AFF               	xorlw	255
  6585  0771  3E01               	addlw	1
  6586  0772  0020               	movlb	0	; select bank0
  6587  0773  00CE               	movwf	??_main
  6588  0774  084E               	movf	??_main,w
  6589  0775  0021               	movlb	1	; select bank1
  6590  0776  00B0               	movwf	main@toggle^(0+128)
  6591                           
  6592                           ;main.c: 144: counter = 0;
  6593  0777  01AD               	clrf	main@counter^(0+128)
  6594  0778  01AE               	clrf	(main@counter+1)^(0+128)
  6595  0779                     l3151:	
  6596                           
  6597                           ;main.c: 145: }
  6598                           ;main.c: 148: if(TMR0IF)
  6599  0779  002E               	movlb	14	; select bank14
  6600  077A  1E8C               	btfss	12,5	;volatile
  6601  077B  2F88               	goto	l3157
  6602                           
  6603                           ;main.c: 149: {
  6604                           ;main.c: 150: TMR0H = 0x24;
  6605  077C  3024               	movlw	36
  6606  077D  0020               	movlb	0	; select bank0
  6607  077E  009D               	movwf	29	;volatile
  6608                           
  6609                           ;main.c: 151: TMR0L = 0x9F;
  6610  077F  309F               	movlw	159
  6611  0780  009C               	movwf	28	;volatile
  6612                           
  6613                           ;main.c: 152: TMR0IF = 0;
  6614  0781  002E               	movlb	14	; select bank14
  6615  0782  128C               	bcf	12,5	;volatile
  6616                           
  6617                           ;main.c: 153: seconds+=1;
  6618  0783  3001               	movlw	1
  6619  0784  0021               	movlb	1	; select bank1
  6620  0785  07AA               	addwf	main@seconds^(0+128),f
  6621  0786  3000               	movlw	0
  6622  0787  3DAB               	addwfc	(main@seconds+1)^(0+128),f
  6623  0788                     l3157:	
  6624                           
  6625                           ;main.c: 154: }
  6626                           ;main.c: 156: if(setpoint - steinhart < 2)
  6627  0788  0021               	movlb	1	; select bank1
  6628  0789  083B               	movf	main@steinhart^(0+128),w
  6629  078A  00F0               	movwf	___ftneg@f1
  6630  078B  083C               	movf	(main@steinhart+1)^(0+128),w
  6631  078C  00F1               	movwf	___ftneg@f1+1
  6632  078D  083D               	movf	(main@steinhart+2)^(0+128),w
  6633  078E  00F2               	movwf	___ftneg@f1+2
  6634  078F  3188  2079  3184   	fcall	___ftneg
  6635  0792  0870               	movf	?___ftneg,w
  6636  0793  0020               	movlb	0	; select bank0
  6637  0794  00B0               	movwf	___ftadd@f1
  6638  0795  0871               	movf	?___ftneg+1,w
  6639  0796  00B1               	movwf	___ftadd@f1+1
  6640  0797  0872               	movf	?___ftneg+2,w
  6641  0798  00B2               	movwf	___ftadd@f1+2
  6642  0799  086D               	movf	_setpoint,w
  6643  079A  3189  2131  3184   	fcall	___lbtoft
  6644  079D  0878               	movf	?___lbtoft,w
  6645  079E  0020               	movlb	0	; select bank0
  6646  079F  00B3               	movwf	___ftadd@f2
  6647  07A0  0879               	movf	?___lbtoft+1,w
  6648  07A1  00B4               	movwf	___ftadd@f2+1
  6649  07A2  087A               	movf	?___lbtoft+2,w
  6650  07A3  00B5               	movwf	___ftadd@f2+2
  6651  07A4  3183  2364  3184   	fcall	___ftadd
  6652  07A7  0020               	movlb	0	; select bank0
  6653  07A8  0830               	movf	?___ftadd,w
  6654  07A9  00BD               	movwf	___ftge@ff1
  6655  07AA  0831               	movf	?___ftadd+1,w
  6656  07AB  00BE               	movwf	___ftge@ff1+1
  6657  07AC  0832               	movf	?___ftadd+2,w
  6658  07AD  00BF               	movwf	___ftge@ff1+2
  6659  07AE  3000               	movlw	0
  6660  07AF  00C0               	movwf	___ftge@ff2
  6661  07B0  3000               	movlw	0
  6662  07B1  00C1               	movwf	___ftge@ff2+1
  6663  07B2  3040               	movlw	64
  6664  07B3  00C2               	movwf	___ftge@ff2+2
  6665  07B4  318A  22E7  3184   	fcall	___ftge
  6666  07B7  1803               	btfsc	3,0
  6667  07B8  2FC7               	goto	l3165
  6668                           
  6669                           ;main.c: 157: {
  6670                           ;main.c: 158: if(seconds>63)
  6671  07B9  3000               	movlw	0
  6672  07BA  0021               	movlb	1	; select bank1
  6673  07BB  022B               	subwf	(main@seconds+1)^(0+128),w
  6674  07BC  3040               	movlw	64
  6675  07BD  1903               	skipnz
  6676  07BE  022A               	subwf	main@seconds^(0+128),w
  6677  07BF  1C03               	skipc
  6678  07C0  2FC7               	goto	l3165
  6679                           
  6680                           ;main.c: 159: {
  6681                           ;main.c: 160: minutes+=1;
  6682  07C1  3001               	movlw	1
  6683  07C2  07A8               	addwf	main@minutes^(0+128),f
  6684  07C3  3000               	movlw	0
  6685  07C4  3DA9               	addwfc	(main@minutes+1)^(0+128),f
  6686                           
  6687                           ;main.c: 161: seconds = 0;
  6688  07C5  01AA               	clrf	main@seconds^(0+128)
  6689  07C6  01AB               	clrf	(main@seconds+1)^(0+128)
  6690  07C7                     l3165:	
  6691                           
  6692                           ;main.c: 162: }
  6693                           ;main.c: 163: }
  6694                           ;main.c: 166: readButtons();
  6695  07C7  318D  2520  3184   	fcall	_readButtons
  6696                           
  6697                           ;main.c: 167: tempSetpoint();
  6698  07CA  3181  21E1  3184   	fcall	_tempSetpoint
  6699  07CD  2C77               	goto	l3057
  6700  07CE                     __end_of_main:	
  6701                           
  6702                           	psect	text1
  6703  01E1                     __ptext1:	
  6704 ;; *************** function _tempSetpoint *****************
  6705 ;; Defined at:
  6706 ;;		line 12 in file "user.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  counter         1   20[BANK0 ] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;Total ram usage:        4 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    4
  6727 ;; This function calls:
  6728 ;;		_LCD_Clear
  6729 ;;		_LCD_Set_Cursor
  6730 ;;		_LCD_Write_Char
  6731 ;;		_LCD_Write_Int
  6732 ;;		_LCD_Write_String
  6733 ;;		_readButtons
  6734 ;; This function is called by:
  6735 ;;		_main
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function _tempSetpoint
  6741  01E1                     _tempSetpoint:	
  6742                           
  6743                           ;user.c: 14: uint8_t counter = 0;
  6744                           
  6745                           ;incstack = 0
  6746                           ; Regs used in _tempSetpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6747  01E1  0020               	movlb	0	; select bank0
  6748  01E2  01B4               	clrf	tempSetpoint@counter
  6749                           
  6750                           ;user.c: 16: oldSetpoint = setpoint;
  6751  01E3  086D               	movf	_setpoint,w
  6752  01E4  00B1               	movwf	??_tempSetpoint
  6753  01E5  0831               	movf	??_tempSetpoint,w
  6754  01E6  00E9               	movwf	_oldSetpoint
  6755  01E7                     l2771:	
  6756                           ;user.c: 18: while(downCount >= 5)
  6757                           
  6758  01E7  3005               	movlw	5
  6759  01E8  0020               	movlb	0	; select bank0
  6760  01E9  0268               	subwf	_downCount,w
  6761  01EA  1C03               	btfss	3,0
  6762  01EB  2A81               	goto	l2799
  6763                           
  6764                           ;user.c: 19: {
  6765                           ;user.c: 20: counter+=1;
  6766  01EC  3001               	movlw	1
  6767  01ED  00B1               	movwf	??_tempSetpoint
  6768  01EE  0831               	movf	??_tempSetpoint,w
  6769  01EF  07B4               	addwf	tempSetpoint@counter,f
  6770                           
  6771                           ;user.c: 21: if(counter<=1)
  6772  01F0  3002               	movlw	2
  6773  01F1  0234               	subwf	tempSetpoint@counter,w
  6774  01F2  1803               	skipnc
  6775  01F3  29F7               	goto	l2751
  6776                           
  6777                           ;user.c: 22: {
  6778                           ;user.c: 23: LCD_Clear();
  6779  01F4  3188  2069  3181   	fcall	_LCD_Clear
  6780  01F7                     l2751:	
  6781                           
  6782                           ;user.c: 24: }
  6783                           ;user.c: 25: setpoint-=1;
  6784  01F7  3001               	movlw	1
  6785  01F8  0020               	movlb	0	; select bank0
  6786  01F9  02ED               	subwf	_setpoint,f
  6787                           
  6788                           ;user.c: 26: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6789  01FA  01F3               	clrf	LCD_Set_Cursor@y
  6790  01FB  3000               	movlw	0
  6791  01FC  318B  2323  3181   	fcall	_LCD_Set_Cursor
  6792  01FF  301B               	movlw	low (STR_1| (0+32768))
  6793  0200  00F5               	movwf	LCD_Write_String@a
  6794  0201  3090               	movlw	high (STR_1| (0+32768))
  6795  0202  00F6               	movwf	LCD_Write_String@a+1
  6796  0203  3189  214B  3181   	fcall	_LCD_Write_String
  6797                           
  6798                           ;user.c: 27: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6799  0206  01F3               	clrf	LCD_Set_Cursor@y
  6800  0207  3001               	movlw	1
  6801  0208  318B  2323  3181   	fcall	_LCD_Set_Cursor
  6802  020B  0020               	movlb	0	; select bank0
  6803  020C  086D               	movf	_setpoint,w
  6804  020D  00B1               	movwf	??_tempSetpoint
  6805  020E  01B2               	clrf	??_tempSetpoint+1
  6806  020F  0831               	movf	??_tempSetpoint,w
  6807  0210  00F9               	movwf	LCD_Write_Int@value
  6808  0211  0832               	movf	??_tempSetpoint+1,w
  6809  0212  00FA               	movwf	LCD_Write_Int@value+1
  6810  0213  3003               	movlw	3
  6811  0214  00B3               	movwf	??_tempSetpoint+2
  6812  0215  0833               	movf	??_tempSetpoint+2,w
  6813  0216  00FB               	movwf	LCD_Write_Int@fieldLength
  6814  0217  01FC               	clrf	LCD_Write_Int@numPlaces
  6815  0218  01FD               	clrf	LCD_Write_Int@sign
  6816  0219  3182  229B  3181   	fcall	_LCD_Write_Int
  6817                           
  6818                           ;user.c: 28: LCD_Write_Char(0);
  6819  021C  3000               	movlw	0
  6820  021D  318A  221C  3181   	fcall	_LCD_Write_Char
  6821                           
  6822                           ;user.c: 29: LCD_Write_Char('C');
  6823  0220  3043               	movlw	67
  6824  0221  318A  221C  3181   	fcall	_LCD_Write_Char
  6825                           
  6826                           ;user.c: 30: LCD_Write_Char(' ');
  6827  0224  3020               	movlw	32
  6828  0225  318A  221C  3181   	fcall	_LCD_Write_Char
  6829                           
  6830                           ;user.c: 31: _delay((unsigned long)((350)*(1000000/4000.0)));
  6831  0228  3072               	movlw	114
  6832  0229  0020               	movlb	0	; select bank0
  6833  022A  00B2               	movwf	??_tempSetpoint+1
  6834  022B  30A1               	movlw	161
  6835  022C  00B1               	movwf	??_tempSetpoint
  6836  022D                     u3377:	
  6837  022D  0BB1               	decfsz	??_tempSetpoint,f
  6838  022E  2A2D               	goto	u3377
  6839  022F  0BB2               	decfsz	??_tempSetpoint+1,f
  6840  0230  2A2D               	goto	u3377
  6841  0231  3200               	nop2
  6842                           
  6843                           ;user.c: 32: readButtons();
  6844  0232  318D  2520  3181   	fcall	_readButtons
  6845  0235  29E7               	goto	l2771
  6846  0236                     l2773:	
  6847                           ;user.c: 33: }
  6848                           ;user.c: 35: while(upCount >= 5)
  6849                           
  6850                           
  6851                           ;user.c: 36: {
  6852                           ;user.c: 37: counter+=1;
  6853  0236  3001               	movlw	1
  6854  0237  00B1               	movwf	??_tempSetpoint
  6855  0238  0831               	movf	??_tempSetpoint,w
  6856  0239  07B4               	addwf	tempSetpoint@counter,f
  6857                           
  6858                           ;user.c: 38: if(counter<=1)
  6859  023A  3002               	movlw	2
  6860  023B  0234               	subwf	tempSetpoint@counter,w
  6861  023C  1803               	skipnc
  6862  023D  2A41               	goto	l2779
  6863                           
  6864                           ;user.c: 39: {
  6865                           ;user.c: 40: LCD_Clear();
  6866  023E  3188  2069  3181   	fcall	_LCD_Clear
  6867  0241                     l2779:	
  6868                           
  6869                           ;user.c: 41: }
  6870                           ;user.c: 42: setpoint+=1;
  6871  0241  3001               	movlw	1
  6872  0242  0020               	movlb	0	; select bank0
  6873  0243  00B1               	movwf	??_tempSetpoint
  6874  0244  0831               	movf	??_tempSetpoint,w
  6875  0245  07ED               	addwf	_setpoint,f
  6876                           
  6877                           ;user.c: 43: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  6878  0246  01F3               	clrf	LCD_Set_Cursor@y
  6879  0247  3000               	movlw	0
  6880  0248  318B  2323  3181   	fcall	_LCD_Set_Cursor
  6881  024B  301B               	movlw	low (STR_1| (0+32768))
  6882  024C  00F5               	movwf	LCD_Write_String@a
  6883  024D  3090               	movlw	high (STR_1| (0+32768))
  6884  024E  00F6               	movwf	LCD_Write_String@a+1
  6885  024F  3189  214B  3181   	fcall	_LCD_Write_String
  6886                           
  6887                           ;user.c: 44: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  6888  0252  01F3               	clrf	LCD_Set_Cursor@y
  6889  0253  3001               	movlw	1
  6890  0254  318B  2323  3181   	fcall	_LCD_Set_Cursor
  6891  0257  0020               	movlb	0	; select bank0
  6892  0258  086D               	movf	_setpoint,w
  6893  0259  00B1               	movwf	??_tempSetpoint
  6894  025A  01B2               	clrf	??_tempSetpoint+1
  6895  025B  0831               	movf	??_tempSetpoint,w
  6896  025C  00F9               	movwf	LCD_Write_Int@value
  6897  025D  0832               	movf	??_tempSetpoint+1,w
  6898  025E  00FA               	movwf	LCD_Write_Int@value+1
  6899  025F  3003               	movlw	3
  6900  0260  00B3               	movwf	??_tempSetpoint+2
  6901  0261  0833               	movf	??_tempSetpoint+2,w
  6902  0262  00FB               	movwf	LCD_Write_Int@fieldLength
  6903  0263  01FC               	clrf	LCD_Write_Int@numPlaces
  6904  0264  01FD               	clrf	LCD_Write_Int@sign
  6905  0265  3182  229B  3181   	fcall	_LCD_Write_Int
  6906                           
  6907                           ;user.c: 45: LCD_Write_Char(0);
  6908  0268  3000               	movlw	0
  6909  0269  318A  221C  3181   	fcall	_LCD_Write_Char
  6910                           
  6911                           ;user.c: 46: LCD_Write_Char('C');
  6912  026C  3043               	movlw	67
  6913  026D  318A  221C  3181   	fcall	_LCD_Write_Char
  6914                           
  6915                           ;user.c: 47: LCD_Write_Char(' ');
  6916  0270  3020               	movlw	32
  6917  0271  318A  221C  3181   	fcall	_LCD_Write_Char
  6918                           
  6919                           ;user.c: 48: _delay((unsigned long)((350)*(1000000/4000.0)));
  6920  0274  3072               	movlw	114
  6921  0275  0020               	movlb	0	; select bank0
  6922  0276  00B2               	movwf	??_tempSetpoint+1
  6923  0277  30A1               	movlw	161
  6924  0278  00B1               	movwf	??_tempSetpoint
  6925  0279                     u3387:	
  6926  0279  0BB1               	decfsz	??_tempSetpoint,f
  6927  027A  2A79               	goto	u3387
  6928  027B  0BB2               	decfsz	??_tempSetpoint+1,f
  6929  027C  2A79               	goto	u3387
  6930  027D  3200               	nop2
  6931                           
  6932                           ;user.c: 49: readButtons();
  6933  027E  318D  2520  3181   	fcall	_readButtons
  6934  0281                     l2799:	
  6935  0281  3005               	movlw	5
  6936  0282  0020               	movlb	0	; select bank0
  6937  0283  026B               	subwf	_upCount,w
  6938  0284  1803               	skipnc
  6939  0285  2A36               	goto	l2773
  6940                           
  6941                           ;user.c: 50: }
  6942                           ;user.c: 52: counter = 0;
  6943  0286  01B4               	clrf	tempSetpoint@counter
  6944                           
  6945                           ;user.c: 54: if(oldSetpoint!=setpoint)
  6946  0287  0869               	movf	_oldSetpoint,w
  6947  0288  066D               	xorwf	_setpoint,w
  6948  0289  1903               	skipnz
  6949  028A  0008               	return
  6950                           
  6951                           ;user.c: 55: {
  6952                           ;user.c: 56: _delay((unsigned long)((3000)*(1000000/4000.0)));
  6953  028B  3004               	movlw	4
  6954  028C  00B3               	movwf	??_tempSetpoint+2
  6955  028D  30CF               	movlw	207
  6956  028E  00B2               	movwf	??_tempSetpoint+1
  6957  028F  3003               	movlw	3
  6958  0290  00B1               	movwf	??_tempSetpoint
  6959  0291                     u3397:	
  6960  0291  0BB1               	decfsz	??_tempSetpoint,f
  6961  0292  2A91               	goto	u3397
  6962  0293  0BB2               	decfsz	??_tempSetpoint+1,f
  6963  0294  2A91               	goto	u3397
  6964  0295  0BB3               	decfsz	??_tempSetpoint+2,f
  6965  0296  2A91               	goto	u3397
  6966  0297  3200               	nop2
  6967                           
  6968                           ;user.c: 57: LCD_Clear();
  6969  0298  3188  2069         	fcall	_LCD_Clear
  6970  029A  0008               	return
  6971  029B                     __end_of_tempSetpoint:	
  6972                           
  6973                           	psect	text2
  6974  0D20                     __ptext2:	
  6975 ;; *************** function _readButtons *****************
  6976 ;; Defined at:
  6977 ;;		line 62 in file "user.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        3 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    3
  6998 ;; This function calls:
  6999 ;;		_LCD_Clear
  7000 ;;		_LCD_Set_Cursor
  7001 ;;		_LCD_Write_Char
  7002 ;;		_LCD_Write_Int
  7003 ;;		_LCD_Write_String
  7004 ;; This function is called by:
  7005 ;;		_tempSetpoint
  7006 ;;		_main
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _readButtons
  7012  0D20                     _readButtons:	
  7013                           
  7014                           ;user.c: 64: if(RA3 == 0 && RA4 == 0)
  7015                           
  7016                           ;incstack = 0
  7017                           ; Regs used in _readButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7018  0D20  0020               	movlb	0	; select bank0
  7019  0D21  1D8C               	btfss	12,3	;volatile
  7020  0D22  1A0C               	btfsc	12,4	;volatile
  7021  0D23  2D7F               	goto	l2619
  7022                           
  7023                           ;user.c: 65: {
  7024                           ;user.c: 66: downCount = 0;
  7025  0D24  01E8               	clrf	_downCount
  7026                           
  7027                           ;user.c: 67: upCount = 0;
  7028  0D25  01EB               	clrf	_upCount
  7029                           
  7030                           ;user.c: 68: toggleCount+=1;
  7031  0D26  3001               	movlw	1
  7032  0D27  00AE               	movwf	??_readButtons
  7033  0D28  082E               	movf	??_readButtons,w
  7034  0D29  07EA               	addwf	_toggleCount,f
  7035                           
  7036                           ;user.c: 69: if(toggleCount >=6)
  7037  0D2A  3006               	movlw	6
  7038  0D2B  026A               	subwf	_toggleCount,w
  7039  0D2C  1C03               	skipc
  7040  0D2D  2D7F               	goto	l2619
  7041                           
  7042                           ;user.c: 70: {
  7043                           ;user.c: 71: x+=1;
  7044  0D2E  3001               	movlw	1
  7045  0D2F  00AE               	movwf	??_readButtons
  7046  0D30  082E               	movf	??_readButtons,w
  7047  0D31  07EC               	addwf	_x,f
  7048                           
  7049                           ;user.c: 72: if(x>4)
  7050  0D32  3005               	movlw	5
  7051  0D33  026C               	subwf	_x,w
  7052  0D34  1803               	btfsc	3,0
  7053                           
  7054                           ;user.c: 73: {
  7055                           ;user.c: 74: x=0;
  7056  0D35  01EC               	clrf	_x
  7057                           
  7058                           ;user.c: 75: }
  7059                           ;user.c: 76: setpoint = presets[x];
  7060  0D36  086C               	movf	_x,w
  7061  0D37  3ED6               	addlw	(low (_presets| 0))& (0+255)
  7062  0D38  0086               	movwf	6
  7063  0D39  0187               	clrf	7
  7064  0D3A  0801               	movf	1,w
  7065  0D3B  00AE               	movwf	??_readButtons
  7066  0D3C  082E               	movf	??_readButtons,w
  7067  0D3D  00ED               	movwf	_setpoint
  7068                           
  7069                           ;user.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_String("Setpoint?");};
  7070  0D3E  01F3               	clrf	LCD_Set_Cursor@y
  7071  0D3F  3000               	movlw	0
  7072  0D40  318B  2323  318D   	fcall	_LCD_Set_Cursor
  7073  0D43  301B               	movlw	low (STR_1| (0+32768))
  7074  0D44  00F5               	movwf	LCD_Write_String@a
  7075  0D45  3090               	movlw	high (STR_1| (0+32768))
  7076  0D46  00F6               	movwf	LCD_Write_String@a+1
  7077  0D47  3189  214B  318D   	fcall	_LCD_Write_String
  7078                           
  7079                           ;user.c: 78: { LCD_Set_Cursor(1,0); LCD_Write_Int(setpoint,3, 0, 0);};
  7080  0D4A  01F3               	clrf	LCD_Set_Cursor@y
  7081  0D4B  3001               	movlw	1
  7082  0D4C  318B  2323  318D   	fcall	_LCD_Set_Cursor
  7083  0D4F  0020               	movlb	0	; select bank0
  7084  0D50  086D               	movf	_setpoint,w
  7085  0D51  00AE               	movwf	??_readButtons
  7086  0D52  01AF               	clrf	??_readButtons+1
  7087  0D53  082E               	movf	??_readButtons,w
  7088  0D54  00F9               	movwf	LCD_Write_Int@value
  7089  0D55  082F               	movf	??_readButtons+1,w
  7090  0D56  00FA               	movwf	LCD_Write_Int@value+1
  7091  0D57  3003               	movlw	3
  7092  0D58  00B0               	movwf	??_readButtons+2
  7093  0D59  0830               	movf	??_readButtons+2,w
  7094  0D5A  00FB               	movwf	LCD_Write_Int@fieldLength
  7095  0D5B  01FC               	clrf	LCD_Write_Int@numPlaces
  7096  0D5C  01FD               	clrf	LCD_Write_Int@sign
  7097  0D5D  3182  229B  318D   	fcall	_LCD_Write_Int
  7098                           
  7099                           ;user.c: 79: LCD_Write_Char(0);
  7100  0D60  3000               	movlw	0
  7101  0D61  318A  221C  318D   	fcall	_LCD_Write_Char
  7102                           
  7103                           ;user.c: 80: LCD_Write_Char('C');
  7104  0D64  3043               	movlw	67
  7105  0D65  318A  221C  318D   	fcall	_LCD_Write_Char
  7106                           
  7107                           ;user.c: 81: LCD_Write_Char(' ');
  7108  0D68  3020               	movlw	32
  7109  0D69  318A  221C  318D   	fcall	_LCD_Write_Char
  7110                           
  7111                           ;user.c: 82: _delay((unsigned long)((1500)*(1000000/4000.0)));
  7112  0D6C  3002               	movlw	2
  7113  0D6D  0020               	movlb	0	; select bank0
  7114  0D6E  00B0               	movwf	??_readButtons+2
  7115  0D6F  30E7               	movlw	231
  7116  0D70  00AF               	movwf	??_readButtons+1
  7117  0D71  3000               	movlw	0
  7118  0D72  00AE               	movwf	??_readButtons
  7119  0D73                     u3407:	
  7120  0D73  0BAE               	decfsz	??_readButtons,f
  7121  0D74  2D73               	goto	u3407
  7122  0D75  0BAF               	decfsz	??_readButtons+1,f
  7123  0D76  2D73               	goto	u3407
  7124  0D77  0BB0               	decfsz	??_readButtons+2,f
  7125  0D78  2D73               	goto	u3407
  7126  0D79  0000               	nop
  7127                           
  7128                           ;user.c: 83: toggleCount = 0;
  7129  0D7A  0020               	movlb	0	; select bank0
  7130  0D7B  01EA               	clrf	_toggleCount
  7131                           
  7132                           ;user.c: 84: LCD_Clear();
  7133  0D7C  3188  2069  318D   	fcall	_LCD_Clear
  7134  0D7F                     l2619:	
  7135                           
  7136                           ;user.c: 85: }
  7137                           ;user.c: 86: }
  7138                           ;user.c: 87: if(RA3 == 0)
  7139  0D7F  0020               	movlb	0	; select bank0
  7140  0D80  198C               	btfsc	12,3	;volatile
  7141  0D81  2D8F               	goto	l2627
  7142                           
  7143                           ;user.c: 88: {
  7144                           ;user.c: 89: downCount +=1;
  7145  0D82  3001               	movlw	1
  7146  0D83  00AE               	movwf	??_readButtons
  7147  0D84  082E               	movf	??_readButtons,w
  7148  0D85  07E8               	addwf	_downCount,f
  7149                           
  7150                           ;user.c: 90: if(downCount>5)
  7151  0D86  3006               	movlw	6
  7152  0D87  0268               	subwf	_downCount,w
  7153  0D88  1C03               	skipc
  7154  0D89  2D90               	goto	l2629
  7155                           
  7156                           ;user.c: 91: {
  7157                           ;user.c: 92: downCount = 5;
  7158  0D8A  3005               	movlw	5
  7159  0D8B  00AE               	movwf	??_readButtons
  7160  0D8C  082E               	movf	??_readButtons,w
  7161  0D8D  00E8               	movwf	_downCount
  7162                           
  7163                           ;user.c: 93: }
  7164                           ;user.c: 94: }
  7165  0D8E  2D90               	goto	l2629
  7166  0D8F                     l2627:	
  7167                           
  7168                           ;user.c: 95: else
  7169                           ;user.c: 96: {
  7170                           ;user.c: 97: downCount = 0;
  7171  0D8F  01E8               	clrf	_downCount
  7172  0D90                     l2629:	
  7173                           
  7174                           ;user.c: 98: }
  7175                           ;user.c: 100: if(RA4 == 0)
  7176  0D90  1A0C               	btfsc	12,4	;volatile
  7177  0D91  2D9F               	goto	l2637
  7178                           
  7179                           ;user.c: 101: {
  7180                           ;user.c: 102: upCount +=1;
  7181  0D92  3001               	movlw	1
  7182  0D93  00AE               	movwf	??_readButtons
  7183  0D94  082E               	movf	??_readButtons,w
  7184  0D95  07EB               	addwf	_upCount,f
  7185                           
  7186                           ;user.c: 103: if(upCount>5)
  7187  0D96  3006               	movlw	6
  7188  0D97  026B               	subwf	_upCount,w
  7189  0D98  1C03               	skipc
  7190  0D99  0008               	return
  7191                           
  7192                           ;user.c: 104: {
  7193                           ;user.c: 105: upCount = 5;
  7194  0D9A  3005               	movlw	5
  7195  0D9B  00AE               	movwf	??_readButtons
  7196  0D9C  082E               	movf	??_readButtons,w
  7197  0D9D  00EB               	movwf	_upCount
  7198                           
  7199                           ;user.c: 106: }
  7200                           ;user.c: 107: }
  7201  0D9E  0008               	return
  7202  0D9F                     l2637:	
  7203                           
  7204                           ;user.c: 108: else
  7205                           ;user.c: 109: {
  7206                           ;user.c: 110: upCount = 0;
  7207  0D9F  01EB               	clrf	_upCount
  7208  0DA0  0008               	return
  7209  0DA1                     __end_of_readButtons:	
  7210                           
  7211                           	psect	text3
  7212  094B                     __ptext3:	
  7213 ;; *************** function _LCD_Write_String *****************
  7214 ;; Defined at:
  7215 ;;		line 239 in file "lcd.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  a               2    5[COMMON] PTR const unsigned char 
  7218 ;;		 -> STR_4(6), STR_3(10), STR_2(10), STR_1(10), 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  i               2    8[COMMON] int 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;Total ram usage:        5 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    2
  7237 ;; This function calls:
  7238 ;;		_LCD_Write_Char
  7239 ;; This function is called by:
  7240 ;;		_tempSetpoint
  7241 ;;		_readButtons
  7242 ;;		_main
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function _LCD_Write_String
  7248  094B                     _LCD_Write_String:	
  7249                           
  7250                           ;lcd.c: 241: int i;
  7251                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7255  094B  01F8               	clrf	LCD_Write_String@i
  7256  094C  01F9               	clrf	LCD_Write_String@i+1
  7257  094D                     l2233:	
  7258  094D  0875               	movf	LCD_Write_String@a,w
  7259  094E  0778               	addwf	LCD_Write_String@i,w
  7260  094F  0084               	movwf	4
  7261  0950  0876               	movf	LCD_Write_String@a+1,w
  7262  0951  3D79               	addwfc	LCD_Write_String@i+1,w
  7263  0952  0085               	movwf	5
  7264  0953  0012               	moviw fsr0++
  7265  0954  1903               	btfsc	3,2
  7266  0955  0008               	return
  7267                           
  7268                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  7269  0956  0875               	movf	LCD_Write_String@a,w
  7270  0957  0778               	addwf	LCD_Write_String@i,w
  7271  0958  0084               	movwf	4
  7272  0959  0876               	movf	LCD_Write_String@a+1,w
  7273  095A  3D79               	addwfc	LCD_Write_String@i+1,w
  7274  095B  0085               	movwf	5
  7275  095C  0800               	movf	0,w	;code access
  7276  095D  318A  221C  3189   	fcall	_LCD_Write_Char
  7277  0960  3001               	movlw	1
  7278  0961  07F8               	addwf	LCD_Write_String@i,f
  7279  0962  3000               	movlw	0
  7280  0963  3DF9               	addwfc	LCD_Write_String@i+1,f
  7281  0964  294D               	goto	l2233
  7282  0965                     __end_of_LCD_Write_String:	
  7283                           
  7284                           	psect	text4
  7285  029B                     __ptext4:	
  7286 ;; *************** function _LCD_Write_Int *****************
  7287 ;; Defined at:
  7288 ;;		line 246 in file "lcd.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  value           2    9[COMMON] int 
  7291 ;;  fieldLength     1   11[COMMON] char 
  7292 ;;  numPlaces       1   12[COMMON] char 
  7293 ;;  sign            1   13[COMMON] char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  str             5    5[BANK0 ] unsigned char [5]
  7296 ;;  i               2   12[BANK0 ] int 
  7297 ;;  j               2   10[BANK0 ] int 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:       19 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    2
  7314 ;; This function calls:
  7315 ;;		_LCD_Write_Char
  7316 ;;		___awdiv
  7317 ;;		___awmod
  7318 ;; This function is called by:
  7319 ;;		_tempSetpoint
  7320 ;;		_readButtons
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _LCD_Write_Int
  7327  029B                     _LCD_Write_Int:	
  7328                           
  7329                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7333  029B  30DB               	movlw	low LCD_Write_Int@F13699
  7334  029C  0086               	movwf	6
  7335  029D  3000               	movlw	high LCD_Write_Int@F13699
  7336  029E  0087               	movwf	7
  7337  029F  3025               	movlw	low LCD_Write_Int@str
  7338  02A0  0084               	movwf	4
  7339  02A1  3000               	movlw	high LCD_Write_Int@str
  7340  02A2  0085               	movwf	5
  7341  02A3  3005               	movlw	5
  7342  02A4  0020               	movlb	0	; select bank0
  7343  02A5  00A0               	movwf	??_LCD_Write_Int
  7344  02A6                     u2100:	
  7345  02A6  0016               	moviw fsr1++
  7346  02A7  001A               	movwi fsr0++
  7347  02A8  0BA0               	decfsz	??_LCD_Write_Int,f
  7348  02A9  2AA6               	goto	u2100
  7349                           
  7350                           ;lcd.c: 249: int i=4,j=0;
  7351  02AA  3004               	movlw	4
  7352  02AB  00AC               	movwf	LCD_Write_Int@i
  7353  02AC  3000               	movlw	0
  7354  02AD  00AD               	movwf	LCD_Write_Int@i+1
  7355  02AE  01AA               	clrf	LCD_Write_Int@j
  7356  02AF  01AB               	clrf	LCD_Write_Int@j+1
  7357                           
  7358                           ;lcd.c: 251: if(value<0)
  7359  02B0  1FFA               	btfss	LCD_Write_Int@value+1,7
  7360  02B1  2ABC               	goto	l2247
  7361                           
  7362                           ;lcd.c: 252: {
  7363                           ;lcd.c: 253: LCD_Write_Char('-');
  7364  02B2  302D               	movlw	45
  7365  02B3  318A  221C  3182   	fcall	_LCD_Write_Char
  7366                           
  7367                           ;lcd.c: 254: value=value*-1;
  7368  02B6  09F9               	comf	LCD_Write_Int@value,f
  7369  02B7  09FA               	comf	LCD_Write_Int@value+1,f
  7370  02B8  0AF9               	incf	LCD_Write_Int@value,f
  7371  02B9  1903               	skipnz
  7372  02BA  0AFA               	incf	LCD_Write_Int@value+1,f
  7373                           
  7374                           ;lcd.c: 255: }
  7375  02BB  2AC3               	goto	l2257
  7376  02BC                     l2247:	
  7377                           
  7378                           ;lcd.c: 257: else
  7379                           ;lcd.c: 258: {
  7380                           ;lcd.c: 259: if(sign == 1)
  7381  02BC  037D               	decf	LCD_Write_Int@sign,w
  7382  02BD  1D03               	btfss	3,2
  7383  02BE  2AC3               	goto	l2257
  7384                           
  7385                           ;lcd.c: 260: {
  7386                           ;lcd.c: 261: LCD_Write_Char('+');
  7387  02BF  302B               	movlw	43
  7388  02C0  318A  221C  3182   	fcall	_LCD_Write_Char
  7389  02C3                     l2257:	
  7390                           ;lcd.c: 262: }
  7391                           ;lcd.c: 263: }
  7392                           ;lcd.c: 265: while(value)
  7393                           
  7394  02C3  0879               	movf	LCD_Write_Int@value,w
  7395  02C4  047A               	iorwf	LCD_Write_Int@value+1,w
  7396  02C5  1903               	btfsc	3,2
  7397  02C6  2AF0               	goto	l2259
  7398                           
  7399                           ;lcd.c: 266: {
  7400                           ;lcd.c: 267: str[i]=value%10;
  7401  02C7  300A               	movlw	10
  7402  02C8  00F0               	movwf	___awmod@divisor
  7403  02C9  3000               	movlw	0
  7404  02CA  00F1               	movwf	___awmod@divisor+1
  7405  02CB  087A               	movf	LCD_Write_Int@value+1,w
  7406  02CC  00F3               	movwf	___awmod@dividend+1
  7407  02CD  0879               	movf	LCD_Write_Int@value,w
  7408  02CE  00F2               	movwf	___awmod@dividend
  7409  02CF  318B  2362  3182   	fcall	___awmod
  7410  02D2  0870               	movf	?___awmod,w
  7411  02D3  0020               	movlb	0	; select bank0
  7412  02D4  00A0               	movwf	??_LCD_Write_Int
  7413  02D5  082C               	movf	LCD_Write_Int@i,w
  7414  02D6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7415  02D7  0086               	movwf	6
  7416  02D8  0187               	clrf	7
  7417  02D9  0820               	movf	??_LCD_Write_Int,w
  7418  02DA  0081               	movwf	1
  7419                           
  7420                           ;lcd.c: 268: value=value/10;
  7421  02DB  300A               	movlw	10
  7422  02DC  00F0               	movwf	___awdiv@divisor
  7423  02DD  3000               	movlw	0
  7424  02DE  00F1               	movwf	___awdiv@divisor+1
  7425  02DF  087A               	movf	LCD_Write_Int@value+1,w
  7426  02E0  00F3               	movwf	___awdiv@dividend+1
  7427  02E1  0879               	movf	LCD_Write_Int@value,w
  7428  02E2  00F2               	movwf	___awdiv@dividend
  7429  02E3  318B  23F4  3182   	fcall	___awdiv
  7430  02E6  0871               	movf	?___awdiv+1,w
  7431  02E7  00FA               	movwf	LCD_Write_Int@value+1
  7432  02E8  0870               	movf	?___awdiv,w
  7433  02E9  00F9               	movwf	LCD_Write_Int@value
  7434                           
  7435                           ;lcd.c: 269: i--;
  7436  02EA  30FF               	movlw	255
  7437  02EB  0020               	movlb	0	; select bank0
  7438  02EC  07AC               	addwf	LCD_Write_Int@i,f
  7439  02ED  30FF               	movlw	255
  7440  02EE  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7441  02EF  2AC3               	goto	l2257
  7442  02F0                     l2259:	
  7443                           
  7444                           ;lcd.c: 270: }
  7445                           ;lcd.c: 271: if(fieldLength==-1)
  7446  02F0  0A7B               	incf	LCD_Write_Int@fieldLength,w
  7447  02F1  1903               	btfsc	3,2
  7448  02F2  2AF9               	goto	l2265
  7449  02F3  2B02               	goto	l2267
  7450  02F4                     l2263:	
  7451                           ;lcd.c: 272: {
  7452                           ;lcd.c: 273: while(str[j]==0)
  7453                           
  7454                           
  7455                           ;lcd.c: 274: {
  7456                           ;lcd.c: 275: j++;
  7457  02F4  3001               	movlw	1
  7458  02F5  0020               	movlb	0	; select bank0
  7459  02F6  07AA               	addwf	LCD_Write_Int@j,f
  7460  02F7  3000               	movlw	0
  7461  02F8  3DAB               	addwfc	LCD_Write_Int@j+1,f
  7462  02F9                     l2265:	
  7463  02F9  0020               	movlb	0	; select bank0
  7464  02FA  082A               	movf	LCD_Write_Int@j,w
  7465  02FB  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7466  02FC  0086               	movwf	6
  7467  02FD  0187               	clrf	7
  7468  02FE  0801               	movf	1,w
  7469  02FF  1D03               	btfss	3,2
  7470  0300  2B13               	goto	l2269
  7471  0301  2AF4               	goto	l2263
  7472  0302                     l2267:	
  7473                           ;lcd.c: 276: }
  7474                           ;lcd.c: 277: }
  7475                           
  7476                           
  7477                           ;lcd.c: 278: else
  7478                           ;lcd.c: 279: {
  7479                           ;lcd.c: 280: j=5-fieldLength;
  7480  0302  087B               	movf	LCD_Write_Int@fieldLength,w
  7481  0303  0020               	movlb	0	; select bank0
  7482  0304  00A0               	movwf	??_LCD_Write_Int
  7483  0305  01A1               	clrf	??_LCD_Write_Int+1
  7484  0306  1BA0               	btfsc	??_LCD_Write_Int,7
  7485  0307  03A1               	decf	??_LCD_Write_Int+1,f
  7486  0308  09A0               	comf	??_LCD_Write_Int,f
  7487  0309  09A1               	comf	??_LCD_Write_Int+1,f
  7488  030A  0AA0               	incf	??_LCD_Write_Int,f
  7489  030B  1903               	skipnz
  7490  030C  0AA1               	incf	??_LCD_Write_Int+1,f
  7491  030D  0820               	movf	??_LCD_Write_Int,w
  7492  030E  3E05               	addlw	5
  7493  030F  00AA               	movwf	LCD_Write_Int@j
  7494  0310  3000               	movlw	0
  7495  0311  3D21               	addwfc	??_LCD_Write_Int+1,w
  7496  0312  00AB               	movwf	LCD_Write_Int@j+1
  7497  0313                     l2269:	
  7498                           
  7499                           ;lcd.c: 281: }
  7500                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7501  0313  082B               	movf	LCD_Write_Int@j+1,w
  7502  0314  00AD               	movwf	LCD_Write_Int@i+1
  7503  0315  082A               	movf	LCD_Write_Int@j,w
  7504  0316  00AC               	movwf	LCD_Write_Int@i
  7505  0317                     l2275:	
  7506  0317  087C               	movf	LCD_Write_Int@numPlaces,w
  7507  0318  00A0               	movwf	??_LCD_Write_Int
  7508  0319  01A1               	clrf	??_LCD_Write_Int+1
  7509  031A  1BA0               	btfsc	??_LCD_Write_Int,7
  7510  031B  03A1               	decf	??_LCD_Write_Int+1,f
  7511  031C  09A0               	comf	??_LCD_Write_Int,f
  7512  031D  09A1               	comf	??_LCD_Write_Int+1,f
  7513  031E  0AA0               	incf	??_LCD_Write_Int,f
  7514  031F  1903               	skipnz
  7515  0320  0AA1               	incf	??_LCD_Write_Int+1,f
  7516  0321  0820               	movf	??_LCD_Write_Int,w
  7517  0322  3E05               	addlw	5
  7518  0323  00A2               	movwf	??_LCD_Write_Int+2
  7519  0324  3000               	movlw	0
  7520  0325  3D21               	addwfc	??_LCD_Write_Int+1,w
  7521  0326  00A3               	movwf	??_LCD_Write_Int+3
  7522  0327  082D               	movf	LCD_Write_Int@i+1,w
  7523  0328  3A80               	xorlw	128
  7524  0329  00A4               	movwf	??_LCD_Write_Int+4
  7525  032A  0823               	movf	??_LCD_Write_Int+3,w
  7526  032B  3A80               	xorlw	128
  7527  032C  0224               	subwf	??_LCD_Write_Int+4,w
  7528  032D  1D03               	skipz
  7529  032E  2B31               	goto	u2165
  7530  032F  0822               	movf	??_LCD_Write_Int+2,w
  7531  0330  022C               	subwf	LCD_Write_Int@i,w
  7532  0331                     u2165:	
  7533  0331  1803               	btfsc	3,0
  7534  0332  2B43               	goto	l2277
  7535                           
  7536                           ;lcd.c: 284: {
  7537                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7538  0333  0020               	movlb	0	; select bank0
  7539  0334  082C               	movf	LCD_Write_Int@i,w
  7540  0335  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7541  0336  0086               	movwf	6
  7542  0337  0187               	clrf	7
  7543  0338  0801               	movf	1,w
  7544  0339  3E30               	addlw	48
  7545  033A  318A  221C  3182   	fcall	_LCD_Write_Char
  7546  033D  3001               	movlw	1
  7547  033E  0020               	movlb	0	; select bank0
  7548  033F  07AC               	addwf	LCD_Write_Int@i,f
  7549  0340  3000               	movlw	0
  7550  0341  3DAD               	addwfc	LCD_Write_Int@i+1,f
  7551  0342  2B17               	goto	l2275
  7552  0343                     l2277:	
  7553                           
  7554                           ;lcd.c: 286: }
  7555                           ;lcd.c: 288: if(numPlaces == 1)
  7556  0343  037C               	decf	LCD_Write_Int@numPlaces,w
  7557  0344  1D03               	btfss	3,2
  7558  0345  2B50               	goto	l2281
  7559                           
  7560                           ;lcd.c: 289: {
  7561                           ;lcd.c: 290: LCD_Write_Char(46);
  7562  0346  302E               	movlw	46
  7563  0347  318A  221C  3182   	fcall	_LCD_Write_Char
  7564                           
  7565                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7566  034A  0020               	movlb	0	; select bank0
  7567  034B  0829               	movf	LCD_Write_Int@str+4,w
  7568  034C  3E30               	addlw	48
  7569  034D  318A  221C  3182   	fcall	_LCD_Write_Char
  7570  0350                     l2281:	
  7571                           
  7572                           ;lcd.c: 292: }
  7573                           ;lcd.c: 294: if(numPlaces == 2)
  7574  0350  3002               	movlw	2
  7575  0351  067C               	xorwf	LCD_Write_Int@numPlaces,w
  7576  0352  1D03               	btfss	3,2
  7577  0353  0008               	return
  7578                           
  7579                           ;lcd.c: 295: {
  7580                           ;lcd.c: 296: LCD_Write_Char(46);
  7581  0354  302E               	movlw	46
  7582  0355  318A  221C  3182   	fcall	_LCD_Write_Char
  7583                           
  7584                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  7585  0358  0020               	movlb	0	; select bank0
  7586  0359  0828               	movf	LCD_Write_Int@str+3,w
  7587  035A  3E30               	addlw	48
  7588  035B  318A  221C  3182   	fcall	_LCD_Write_Char
  7589                           
  7590                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  7591  035E  0020               	movlb	0	; select bank0
  7592  035F  0829               	movf	LCD_Write_Int@str+4,w
  7593  0360  3E30               	addlw	48
  7594  0361  318A  221C         	fcall	_LCD_Write_Char
  7595  0363  0008               	return
  7596  0364                     __end_of_LCD_Write_Int:	
  7597                           
  7598                           	psect	text5
  7599  0B62                     __ptext5:	
  7600 ;; *************** function ___awmod *****************
  7601 ;; Defined at:
  7602 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  divisor         2    0[COMMON] int 
  7605 ;;  dividend        2    2[COMMON] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  sign            1    6[COMMON] unsigned char 
  7608 ;;  counter         1    5[COMMON] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2    0[COMMON] int 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;Total ram usage:        7 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_LCD_Write_Int
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function ___awmod
  7633  0B62                     ___awmod:	
  7634                           
  7635                           ;incstack = 0
  7636                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7637  0B62  01F6               	clrf	___awmod@sign
  7638  0B63  1FF3               	btfss	___awmod@dividend+1,7
  7639  0B64  2B6C               	goto	l2175
  7640  0B65  09F2               	comf	___awmod@dividend,f
  7641  0B66  09F3               	comf	___awmod@dividend+1,f
  7642  0B67  0AF2               	incf	___awmod@dividend,f
  7643  0B68  1903               	skipnz
  7644  0B69  0AF3               	incf	___awmod@dividend+1,f
  7645  0B6A  01F6               	clrf	___awmod@sign
  7646  0B6B  0AF6               	incf	___awmod@sign,f
  7647  0B6C                     l2175:	
  7648  0B6C  1FF1               	btfss	___awmod@divisor+1,7
  7649  0B6D  2B73               	goto	l2179
  7650  0B6E  09F0               	comf	___awmod@divisor,f
  7651  0B6F  09F1               	comf	___awmod@divisor+1,f
  7652  0B70  0AF0               	incf	___awmod@divisor,f
  7653  0B71  1903               	skipnz
  7654  0B72  0AF1               	incf	___awmod@divisor+1,f
  7655  0B73                     l2179:	
  7656  0B73  0870               	movf	___awmod@divisor,w
  7657  0B74  0471               	iorwf	___awmod@divisor+1,w
  7658  0B75  1903               	btfsc	3,2
  7659  0B76  2B9A               	goto	l2197
  7660  0B77  01F5               	clrf	___awmod@counter
  7661  0B78  0AF5               	incf	___awmod@counter,f
  7662  0B79                     l2187:	
  7663  0B79  1BF1               	btfsc	___awmod@divisor+1,7
  7664  0B7A  2B85               	goto	l2189
  7665  0B7B  3001               	movlw	1
  7666  0B7C                     u1995:	
  7667  0B7C  35F0               	lslf	___awmod@divisor,f
  7668  0B7D  0DF1               	rlf	___awmod@divisor+1,f
  7669  0B7E  0B89               	decfsz	9,f
  7670  0B7F  2B7C               	goto	u1995
  7671  0B80  3001               	movlw	1
  7672  0B81  00F4               	movwf	??___awmod
  7673  0B82  0874               	movf	??___awmod,w
  7674  0B83  07F5               	addwf	___awmod@counter,f
  7675  0B84  2B79               	goto	l2187
  7676  0B85                     l2189:	
  7677  0B85  0871               	movf	___awmod@divisor+1,w
  7678  0B86  0273               	subwf	___awmod@dividend+1,w
  7679  0B87  1D03               	skipz
  7680  0B88  2B8B               	goto	u2015
  7681  0B89  0870               	movf	___awmod@divisor,w
  7682  0B8A  0272               	subwf	___awmod@dividend,w
  7683  0B8B                     u2015:	
  7684  0B8B  1C03               	skipc
  7685  0B8C  2B91               	goto	l2193
  7686  0B8D  0870               	movf	___awmod@divisor,w
  7687  0B8E  02F2               	subwf	___awmod@dividend,f
  7688  0B8F  0871               	movf	___awmod@divisor+1,w
  7689  0B90  3BF3               	subwfb	___awmod@dividend+1,f
  7690  0B91                     l2193:	
  7691  0B91  3001               	movlw	1
  7692  0B92                     u2025:	
  7693  0B92  36F1               	lsrf	___awmod@divisor+1,f
  7694  0B93  0CF0               	rrf	___awmod@divisor,f
  7695  0B94  0B89               	decfsz	9,f
  7696  0B95  2B92               	goto	u2025
  7697  0B96  3001               	movlw	1
  7698  0B97  02F5               	subwf	___awmod@counter,f
  7699  0B98  1D03               	btfss	3,2
  7700  0B99  2B85               	goto	l2189
  7701  0B9A                     l2197:	
  7702  0B9A  0876               	movf	___awmod@sign,w
  7703  0B9B  1903               	btfsc	3,2
  7704  0B9C  2BA2               	goto	l2201
  7705  0B9D  09F2               	comf	___awmod@dividend,f
  7706  0B9E  09F3               	comf	___awmod@dividend+1,f
  7707  0B9F  0AF2               	incf	___awmod@dividend,f
  7708  0BA0  1903               	skipnz
  7709  0BA1  0AF3               	incf	___awmod@dividend+1,f
  7710  0BA2                     l2201:	
  7711  0BA2  0873               	movf	___awmod@dividend+1,w
  7712  0BA3  00F1               	movwf	?___awmod+1
  7713  0BA4  0872               	movf	___awmod@dividend,w
  7714  0BA5  00F0               	movwf	?___awmod
  7715  0BA6  0008               	return
  7716  0BA7                     __end_of___awmod:	
  7717                           
  7718                           	psect	text6
  7719  0BF4                     __ptext6:	
  7720 ;; *************** function ___awdiv *****************
  7721 ;; Defined at:
  7722 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  divisor         2    0[COMMON] int 
  7725 ;;  dividend        2    2[COMMON] int 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  quotient        2    7[COMMON] int 
  7728 ;;  sign            1    6[COMMON] unsigned char 
  7729 ;;  counter         1    5[COMMON] unsigned char 
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  2    0[COMMON] int 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;Total ram usage:        9 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_LCD_Write_Int
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function ___awdiv
  7754  0BF4                     ___awdiv:	
  7755                           
  7756                           ;incstack = 0
  7757                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7758  0BF4  01F6               	clrf	___awdiv@sign
  7759  0BF5  1FF1               	btfss	___awdiv@divisor+1,7
  7760  0BF6  2BFE               	goto	l2131
  7761  0BF7  09F0               	comf	___awdiv@divisor,f
  7762  0BF8  09F1               	comf	___awdiv@divisor+1,f
  7763  0BF9  0AF0               	incf	___awdiv@divisor,f
  7764  0BFA  1903               	skipnz
  7765  0BFB  0AF1               	incf	___awdiv@divisor+1,f
  7766  0BFC  01F6               	clrf	___awdiv@sign
  7767  0BFD  0AF6               	incf	___awdiv@sign,f
  7768  0BFE                     l2131:	
  7769  0BFE  1FF3               	btfss	___awdiv@dividend+1,7
  7770  0BFF  2C09               	goto	l2137
  7771  0C00  09F2               	comf	___awdiv@dividend,f
  7772  0C01  09F3               	comf	___awdiv@dividend+1,f
  7773  0C02  0AF2               	incf	___awdiv@dividend,f
  7774  0C03  1903               	skipnz
  7775  0C04  0AF3               	incf	___awdiv@dividend+1,f
  7776  0C05  3001               	movlw	1
  7777  0C06  00F4               	movwf	??___awdiv
  7778  0C07  0874               	movf	??___awdiv,w
  7779  0C08  06F6               	xorwf	___awdiv@sign,f
  7780  0C09                     l2137:	
  7781  0C09  01F7               	clrf	___awdiv@quotient
  7782  0C0A  01F8               	clrf	___awdiv@quotient+1
  7783  0C0B  0870               	movf	___awdiv@divisor,w
  7784  0C0C  0471               	iorwf	___awdiv@divisor+1,w
  7785  0C0D  1903               	btfsc	3,2
  7786  0C0E  2C38               	goto	l2159
  7787  0C0F  01F5               	clrf	___awdiv@counter
  7788  0C10  0AF5               	incf	___awdiv@counter,f
  7789  0C11                     l2147:	
  7790  0C11  1BF1               	btfsc	___awdiv@divisor+1,7
  7791  0C12  2C1D               	goto	l2149
  7792  0C13  3001               	movlw	1
  7793  0C14                     u1895:	
  7794  0C14  35F0               	lslf	___awdiv@divisor,f
  7795  0C15  0DF1               	rlf	___awdiv@divisor+1,f
  7796  0C16  0B89               	decfsz	9,f
  7797  0C17  2C14               	goto	u1895
  7798  0C18  3001               	movlw	1
  7799  0C19  00F4               	movwf	??___awdiv
  7800  0C1A  0874               	movf	??___awdiv,w
  7801  0C1B  07F5               	addwf	___awdiv@counter,f
  7802  0C1C  2C11               	goto	l2147
  7803  0C1D                     l2149:	
  7804  0C1D  3001               	movlw	1
  7805  0C1E                     u1915:	
  7806  0C1E  35F7               	lslf	___awdiv@quotient,f
  7807  0C1F  0DF8               	rlf	___awdiv@quotient+1,f
  7808  0C20  0B89               	decfsz	9,f
  7809  0C21  2C1E               	goto	u1915
  7810  0C22  0871               	movf	___awdiv@divisor+1,w
  7811  0C23  0273               	subwf	___awdiv@dividend+1,w
  7812  0C24  1D03               	skipz
  7813  0C25  2C28               	goto	u1925
  7814  0C26  0870               	movf	___awdiv@divisor,w
  7815  0C27  0272               	subwf	___awdiv@dividend,w
  7816  0C28                     u1925:	
  7817  0C28  1C03               	skipc
  7818  0C29  2C2F               	goto	l2155
  7819  0C2A  0870               	movf	___awdiv@divisor,w
  7820  0C2B  02F2               	subwf	___awdiv@dividend,f
  7821  0C2C  0871               	movf	___awdiv@divisor+1,w
  7822  0C2D  3BF3               	subwfb	___awdiv@dividend+1,f
  7823  0C2E  1477               	bsf	___awdiv@quotient,0
  7824  0C2F                     l2155:	
  7825  0C2F  3001               	movlw	1
  7826  0C30                     u1935:	
  7827  0C30  36F1               	lsrf	___awdiv@divisor+1,f
  7828  0C31  0CF0               	rrf	___awdiv@divisor,f
  7829  0C32  0B89               	decfsz	9,f
  7830  0C33  2C30               	goto	u1935
  7831  0C34  3001               	movlw	1
  7832  0C35  02F5               	subwf	___awdiv@counter,f
  7833  0C36  1D03               	btfss	3,2
  7834  0C37  2C1D               	goto	l2149
  7835  0C38                     l2159:	
  7836  0C38  0876               	movf	___awdiv@sign,w
  7837  0C39  1903               	btfsc	3,2
  7838  0C3A  2C40               	goto	l2163
  7839  0C3B  09F7               	comf	___awdiv@quotient,f
  7840  0C3C  09F8               	comf	___awdiv@quotient+1,f
  7841  0C3D  0AF7               	incf	___awdiv@quotient,f
  7842  0C3E  1903               	skipnz
  7843  0C3F  0AF8               	incf	___awdiv@quotient+1,f
  7844  0C40                     l2163:	
  7845  0C40  0878               	movf	___awdiv@quotient+1,w
  7846  0C41  00F1               	movwf	?___awdiv+1
  7847  0C42  0877               	movf	___awdiv@quotient,w
  7848  0C43  00F0               	movwf	?___awdiv
  7849  0C44  0008               	return
  7850  0C45                     __end_of___awdiv:	
  7851                           
  7852                           	psect	text7
  7853  0B23                     __ptext7:	
  7854 ;; *************** function _LCD_Set_Cursor *****************
  7855 ;; Defined at:
  7856 ;;		line 82 in file "lcd.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  x               1    wreg     unsigned char 
  7859 ;;  y               1    3[COMMON] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  x               1    6[COMMON] unsigned char 
  7862 ;;  temp            1    9[COMMON] unsigned char 
  7863 ;;  w               1    8[COMMON] unsigned char 
  7864 ;;  z               1    7[COMMON] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:        7 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		_LCD_Cmd
  7883 ;; This function is called by:
  7884 ;;		_tempSetpoint
  7885 ;;		_readButtons
  7886 ;;		_main
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           
  7891                           ;psect for function _LCD_Set_Cursor
  7892  0B23                     _LCD_Set_Cursor:	
  7893                           
  7894                           ;incstack = 0
  7895                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7896                           ;LCD_Set_Cursor@x stored from wreg
  7897  0B23  00F6               	movwf	LCD_Set_Cursor@x
  7898                           
  7899                           ;lcd.c: 86: char temp,z,w;
  7900                           ;lcd.c: 88: if(x == 0)
  7901  0B24  0876               	movf	LCD_Set_Cursor@x,w
  7902  0B25  1D03               	btfss	3,2
  7903  0B26  2B43               	goto	l2217
  7904                           
  7905                           ;lcd.c: 89: {
  7906                           ;lcd.c: 90: temp = 0x80 + y;
  7907  0B27  0873               	movf	LCD_Set_Cursor@y,w
  7908  0B28  3E80               	addlw	128
  7909  0B29  00F4               	movwf	??_LCD_Set_Cursor
  7910  0B2A  0874               	movf	??_LCD_Set_Cursor,w
  7911  0B2B  00F9               	movwf	LCD_Set_Cursor@temp
  7912                           
  7913                           ;lcd.c: 91: z = temp>>4;
  7914  0B2C  0879               	movf	LCD_Set_Cursor@temp,w
  7915  0B2D  00F4               	movwf	??_LCD_Set_Cursor
  7916  0B2E  3004               	movlw	4
  7917  0B2F                     u2065:	
  7918  0B2F  36F4               	lsrf	??_LCD_Set_Cursor,f
  7919  0B30  0B89               	decfsz	9,f
  7920  0B31  2B2F               	goto	u2065
  7921  0B32  0874               	movf	??_LCD_Set_Cursor,w
  7922  0B33  00F5               	movwf	??_LCD_Set_Cursor+1
  7923  0B34  0875               	movf	??_LCD_Set_Cursor+1,w
  7924  0B35  00F7               	movwf	LCD_Set_Cursor@z
  7925                           
  7926                           ;lcd.c: 92: w = temp & 0x0F;
  7927  0B36  0879               	movf	LCD_Set_Cursor@temp,w
  7928  0B37  390F               	andlw	15
  7929  0B38  00F4               	movwf	??_LCD_Set_Cursor
  7930  0B39  0874               	movf	??_LCD_Set_Cursor,w
  7931  0B3A  00F8               	movwf	LCD_Set_Cursor@w
  7932                           
  7933                           ;lcd.c: 93: LCD_Cmd(z);
  7934  0B3B  0877               	movf	LCD_Set_Cursor@z,w
  7935  0B3C  3188  20C5  318B   	fcall	_LCD_Cmd
  7936                           
  7937                           ;lcd.c: 94: LCD_Cmd(w);
  7938  0B3F  0878               	movf	LCD_Set_Cursor@w,w
  7939  0B40  3188  20C5         	fcall	_LCD_Cmd
  7940                           
  7941                           ;lcd.c: 95: }
  7942  0B42  0008               	return
  7943  0B43                     l2217:	
  7944                           
  7945                           ;lcd.c: 97: else if(x == 1)
  7946  0B43  0376               	decf	LCD_Set_Cursor@x,w
  7947  0B44  1D03               	btfss	3,2
  7948  0B45  0008               	return
  7949                           
  7950                           ;lcd.c: 98: {
  7951                           ;lcd.c: 99: temp = 0xC0 + y;
  7952  0B46  0873               	movf	LCD_Set_Cursor@y,w
  7953  0B47  3EC0               	addlw	192
  7954  0B48  00F4               	movwf	??_LCD_Set_Cursor
  7955  0B49  0874               	movf	??_LCD_Set_Cursor,w
  7956  0B4A  00F9               	movwf	LCD_Set_Cursor@temp
  7957                           
  7958                           ;lcd.c: 100: z = temp>>4;
  7959  0B4B  0879               	movf	LCD_Set_Cursor@temp,w
  7960  0B4C  00F4               	movwf	??_LCD_Set_Cursor
  7961  0B4D  3004               	movlw	4
  7962  0B4E                     u2085:	
  7963  0B4E  36F4               	lsrf	??_LCD_Set_Cursor,f
  7964  0B4F  0B89               	decfsz	9,f
  7965  0B50  2B4E               	goto	u2085
  7966  0B51  0874               	movf	??_LCD_Set_Cursor,w
  7967  0B52  00F5               	movwf	??_LCD_Set_Cursor+1
  7968  0B53  0875               	movf	??_LCD_Set_Cursor+1,w
  7969  0B54  00F7               	movwf	LCD_Set_Cursor@z
  7970                           
  7971                           ;lcd.c: 101: w = temp & 0x0F;
  7972  0B55  0879               	movf	LCD_Set_Cursor@temp,w
  7973  0B56  390F               	andlw	15
  7974  0B57  00F4               	movwf	??_LCD_Set_Cursor
  7975  0B58  0874               	movf	??_LCD_Set_Cursor,w
  7976  0B59  00F8               	movwf	LCD_Set_Cursor@w
  7977                           
  7978                           ;lcd.c: 102: LCD_Cmd(z);
  7979  0B5A  0877               	movf	LCD_Set_Cursor@z,w
  7980  0B5B  3188  20C5  318B   	fcall	_LCD_Cmd
  7981                           
  7982                           ;lcd.c: 103: LCD_Cmd(w);
  7983  0B5E  0878               	movf	LCD_Set_Cursor@w,w
  7984  0B5F  3188  20C5         	fcall	_LCD_Cmd
  7985  0B61  0008               	return
  7986  0B62                     __end_of_LCD_Set_Cursor:	
  7987                           
  7988                           	psect	text8
  7989  0F53                     __ptext8:	
  7990 ;; *************** function _log *****************
  7991 ;; Defined at:
  7992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  x               3   39[BANK0 ] void 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  exponent        2   43[BANK0 ] int 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  3   39[BANK0 ] int 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8006 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;Total ram usage:        6 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    3
  8013 ;; This function calls:
  8014 ;;		___awtoft
  8015 ;;		___ftadd
  8016 ;;		___ftge
  8017 ;;		___ftmul
  8018 ;;		_eval_poly
  8019 ;;		_frexp
  8020 ;; This function is called by:
  8021 ;;		_main
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           
  8026                           ;psect for function _log
  8027  0F53                     _log:	
  8028                           
  8029                           ;incstack = 0
  8030                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8031  0F53  0020               	movlb	0	; select bank0
  8032  0F54  0847               	movf	log@x,w
  8033  0F55  00BD               	movwf	___ftge@ff1
  8034  0F56  0848               	movf	log@x+1,w
  8035  0F57  00BE               	movwf	___ftge@ff1+1
  8036  0F58  0849               	movf	log@x+2,w
  8037  0F59  00BF               	movwf	___ftge@ff1+2
  8038  0F5A  3000               	movlw	0
  8039  0F5B  00C0               	movwf	___ftge@ff2
  8040  0F5C  3000               	movlw	0
  8041  0F5D  00C1               	movwf	___ftge@ff2+1
  8042  0F5E  3000               	movlw	0
  8043  0F5F  00C2               	movwf	___ftge@ff2+2
  8044  0F60  318A  22E7  318F   	fcall	___ftge
  8045  0F63  1803               	btfsc	3,0
  8046  0F64  2F71               	goto	l2847
  8047  0F65  3021               	movlw	33
  8048  0F66  0020               	movlb	0	; select bank0
  8049  0F67  00E4               	movwf	_errno
  8050  0F68  3000               	movlw	0
  8051  0F69  00E5               	movwf	_errno+1
  8052  0F6A  3000               	movlw	0
  8053  0F6B  00C7               	movwf	?_log
  8054  0F6C  3000               	movlw	0
  8055  0F6D  00C8               	movwf	?_log+1
  8056  0F6E  3000               	movlw	0
  8057  0F6F  00C9               	movwf	?_log+2
  8058  0F70  0008               	return
  8059  0F71                     l2847:	
  8060  0F71  0020               	movlb	0	; select bank0
  8061  0F72  0849               	movf	log@x+2,w
  8062  0F73  0448               	iorwf	log@x+1,w
  8063  0F74  0447               	iorwf	log@x,w
  8064  0F75  1D03               	skipz
  8065  0F76  2F82               	goto	l2853
  8066  0F77  3022               	movlw	34
  8067  0F78  00E4               	movwf	_errno
  8068  0F79  3000               	movlw	0
  8069  0F7A  00E5               	movwf	_errno+1
  8070  0F7B  3000               	movlw	0
  8071  0F7C  00C7               	movwf	?_log
  8072  0F7D  3000               	movlw	0
  8073  0F7E  00C8               	movwf	?_log+1
  8074  0F7F  3000               	movlw	0
  8075  0F80  00C9               	movwf	?_log+2
  8076  0F81  0008               	return
  8077  0F82                     l2853:	
  8078  0F82  3000               	movlw	0
  8079  0F83  00B0               	movwf	___ftadd@f1
  8080  0F84  3080               	movlw	128
  8081  0F85  00B1               	movwf	___ftadd@f1+1
  8082  0F86  30BF               	movlw	191
  8083  0F87  00B2               	movwf	___ftadd@f1+2
  8084  0F88  3000               	movlw	0
  8085  0F89  00A0               	movwf	___ftmul@f1
  8086  0F8A  3000               	movlw	0
  8087  0F8B  00A1               	movwf	___ftmul@f1+1
  8088  0F8C  3040               	movlw	64
  8089  0F8D  00A2               	movwf	___ftmul@f1+2
  8090  0F8E  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8091  0F8F  00CA               	movwf	??_log
  8092  0F90  084A               	movf	??_log,w
  8093  0F91  00F3               	movwf	frexp@eptr
  8094  0F92  0847               	movf	log@x,w
  8095  0F93  00F0               	movwf	frexp@value
  8096  0F94  0848               	movf	log@x+1,w
  8097  0F95  00F1               	movwf	frexp@value+1
  8098  0F96  0849               	movf	log@x+2,w
  8099  0F97  00F2               	movwf	frexp@value+2
  8100  0F98  318A  22AC  318F   	fcall	_frexp
  8101  0F9B  0870               	movf	?_frexp,w
  8102  0F9C  0020               	movlb	0	; select bank0
  8103  0F9D  00A3               	movwf	___ftmul@f2
  8104  0F9E  0871               	movf	?_frexp+1,w
  8105  0F9F  00A4               	movwf	___ftmul@f2+1
  8106  0FA0  0872               	movf	?_frexp+2,w
  8107  0FA1  00A5               	movwf	___ftmul@f2+2
  8108  0FA2  3180  2075  318F   	fcall	___ftmul
  8109  0FA5  0020               	movlb	0	; select bank0
  8110  0FA6  0820               	movf	?___ftmul,w
  8111  0FA7  00B3               	movwf	___ftadd@f2
  8112  0FA8  0821               	movf	?___ftmul+1,w
  8113  0FA9  00B4               	movwf	___ftadd@f2+1
  8114  0FAA  0822               	movf	?___ftmul+2,w
  8115  0FAB  00B5               	movwf	___ftadd@f2+2
  8116  0FAC  3183  2364  318F   	fcall	___ftadd
  8117  0FAF  0020               	movlb	0	; select bank0
  8118  0FB0  0830               	movf	?___ftadd,w
  8119  0FB1  00C7               	movwf	log@x
  8120  0FB2  0831               	movf	?___ftadd+1,w
  8121  0FB3  00C8               	movwf	log@x+1
  8122  0FB4  0832               	movf	?___ftadd+2,w
  8123  0FB5  00C9               	movwf	log@x+2
  8124  0FB6  30FF               	movlw	255
  8125  0FB7  07CB               	addwf	log@exponent,f
  8126  0FB8  30FF               	movlw	255
  8127  0FB9  3DCC               	addwfc	log@exponent+1,f
  8128  0FBA  0847               	movf	log@x,w
  8129  0FBB  00BD               	movwf	eval_poly@x
  8130  0FBC  0848               	movf	log@x+1,w
  8131  0FBD  00BE               	movwf	eval_poly@x+1
  8132  0FBE  0849               	movf	log@x+2,w
  8133  0FBF  00BF               	movwf	eval_poly@x+2
  8134  0FC0  3000               	movlw	low (log@coeff| (0+32768))
  8135  0FC1  00C0               	movwf	eval_poly@d
  8136  0FC2  3090               	movlw	high (log@coeff| (0+32768))
  8137  0FC3  00C1               	movwf	eval_poly@d+1
  8138  0FC4  3008               	movlw	8
  8139  0FC5  00C2               	movwf	eval_poly@n
  8140  0FC6  3000               	movlw	0
  8141  0FC7  00C3               	movwf	eval_poly@n+1
  8142  0FC8  318C  2445  318F   	fcall	_eval_poly
  8143  0FCB  0020               	movlb	0	; select bank0
  8144  0FCC  083D               	movf	?_eval_poly,w
  8145  0FCD  00C7               	movwf	log@x
  8146  0FCE  083E               	movf	?_eval_poly+1,w
  8147  0FCF  00C8               	movwf	log@x+1
  8148  0FD0  083F               	movf	?_eval_poly+2,w
  8149  0FD1  00C9               	movwf	log@x+2
  8150  0FD2  0847               	movf	log@x,w
  8151  0FD3  00B0               	movwf	___ftadd@f1
  8152  0FD4  0848               	movf	log@x+1,w
  8153  0FD5  00B1               	movwf	___ftadd@f1+1
  8154  0FD6  0849               	movf	log@x+2,w
  8155  0FD7  00B2               	movwf	___ftadd@f1+2
  8156  0FD8  3072               	movlw	114
  8157  0FD9  00A0               	movwf	___ftmul@f1
  8158  0FDA  3031               	movlw	49
  8159  0FDB  00A1               	movwf	___ftmul@f1+1
  8160  0FDC  303F               	movlw	63
  8161  0FDD  00A2               	movwf	___ftmul@f1+2
  8162  0FDE  084C               	movf	log@exponent+1,w
  8163  0FDF  00F9               	movwf	___awtoft@c+1
  8164  0FE0  084B               	movf	log@exponent,w
  8165  0FE1  00F8               	movwf	___awtoft@c
  8166  0FE2  3189  21D7  318F   	fcall	___awtoft
  8167  0FE5  0878               	movf	?___awtoft,w
  8168  0FE6  0020               	movlb	0	; select bank0
  8169  0FE7  00A3               	movwf	___ftmul@f2
  8170  0FE8  0879               	movf	?___awtoft+1,w
  8171  0FE9  00A4               	movwf	___ftmul@f2+1
  8172  0FEA  087A               	movf	?___awtoft+2,w
  8173  0FEB  00A5               	movwf	___ftmul@f2+2
  8174  0FEC  3180  2075  318F   	fcall	___ftmul
  8175  0FEF  0020               	movlb	0	; select bank0
  8176  0FF0  0820               	movf	?___ftmul,w
  8177  0FF1  00B3               	movwf	___ftadd@f2
  8178  0FF2  0821               	movf	?___ftmul+1,w
  8179  0FF3  00B4               	movwf	___ftadd@f2+1
  8180  0FF4  0822               	movf	?___ftmul+2,w
  8181  0FF5  00B5               	movwf	___ftadd@f2+2
  8182  0FF6  3183  2364         	fcall	___ftadd
  8183  0FF8  0020               	movlb	0	; select bank0
  8184  0FF9  0830               	movf	?___ftadd,w
  8185  0FFA  00C7               	movwf	?_log
  8186  0FFB  0831               	movf	?___ftadd+1,w
  8187  0FFC  00C8               	movwf	?_log+1
  8188  0FFD  0832               	movf	?___ftadd+2,w
  8189  0FFE  00C9               	movwf	?_log+2
  8190  0FFF  0008               	return
  8191  1000                     __end_of_log:	
  8192                           
  8193                           	psect	text9
  8194  0AAC                     __ptext9:	
  8195 ;; *************** function _frexp *****************
  8196 ;; Defined at:
  8197 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  value           3    0[COMMON] int 
  8200 ;;  eptr            1    3[COMMON] PTR int 
  8201 ;;		 -> log@exponent(2), 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  3    0[COMMON] PTR int 
  8206 ;; Registers used:
  8207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;Total ram usage:        6 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_log
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function _frexp
  8228  0AAC                     _frexp:	
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8232  0AAC  0872               	movf	frexp@value+2,w
  8233  0AAD  0471               	iorwf	frexp@value+1,w
  8234  0AAE  0470               	iorwf	frexp@value,w
  8235  0AAF  1D03               	skipz
  8236  0AB0  2ABE               	goto	l2679
  8237  0AB1  0873               	movf	frexp@eptr,w
  8238  0AB2  0086               	movwf	6
  8239  0AB3  0187               	clrf	7
  8240  0AB4  3000               	movlw	0
  8241  0AB5  3FC0               	movwi [0]fsr1
  8242  0AB6  3FC1               	movwi [1]fsr1
  8243  0AB7  3000               	movlw	0
  8244  0AB8  00F0               	movwf	?_frexp
  8245  0AB9  3000               	movlw	0
  8246  0ABA  00F1               	movwf	?_frexp+1
  8247  0ABB  3000               	movlw	0
  8248  0ABC  00F2               	movwf	?_frexp+2
  8249  0ABD  0008               	return
  8250  0ABE                     l2679:	
  8251  0ABE  0872               	movf	frexp@value+2,w
  8252  0ABF  397F               	andlw	127
  8253  0AC0  00F4               	movwf	??_frexp
  8254  0AC1  01F5               	clrf	??_frexp+1
  8255  0AC2  35F4               	lslf	??_frexp,f
  8256  0AC3  0DF5               	rlf	??_frexp+1,f
  8257  0AC4  0873               	movf	frexp@eptr,w
  8258  0AC5  0086               	movwf	6
  8259  0AC6  0187               	clrf	7
  8260  0AC7  0874               	movf	??_frexp,w
  8261  0AC8  3FC0               	movwi [0]fsr1
  8262  0AC9  0875               	movf	??_frexp+1,w
  8263  0ACA  3FC1               	movwi [1]fsr1
  8264  0ACB  0D71               	rlf	frexp@value+1,w
  8265  0ACC  0D71               	rlf	frexp@value+1,w
  8266  0ACD  3901               	andlw	1
  8267  0ACE  00F4               	movwf	??_frexp
  8268  0ACF  01F5               	clrf	??_frexp+1
  8269  0AD0  0873               	movf	frexp@eptr,w
  8270  0AD1  0086               	movwf	6
  8271  0AD2  0187               	clrf	7
  8272  0AD3  0874               	movf	??_frexp,w
  8273  0AD4  0481               	iorwf	1,f
  8274  0AD5  3141               	addfsr 1,1
  8275  0AD6  0875               	movf	??_frexp+1,w
  8276  0AD7  0481               	iorwf	1,f
  8277  0AD8  0873               	movf	frexp@eptr,w
  8278  0AD9  0086               	movwf	6
  8279  0ADA  0187               	clrf	7
  8280  0ADB  3082               	movlw	130
  8281  0ADC  0781               	addwf	1,f
  8282  0ADD  3141               	addfsr 1,1
  8283  0ADE  30FF               	movlw	255
  8284  0ADF  3D81               	addwfc	1,f
  8285  0AE0  317F               	addfsr 1,-1
  8286  0AE1  0872               	movf	frexp@value+2,w
  8287  0AE2  3980               	andlw	-128
  8288  0AE3  383F               	iorlw	63
  8289  0AE4  00F2               	movwf	frexp@value+2
  8290  0AE5  13F1               	bcf	frexp@value+1,7
  8291  0AE6  0008               	return
  8292  0AE7                     __end_of_frexp:	
  8293                           
  8294                           	psect	text10
  8295  0C45                     __ptext10:	
  8296 ;; *************** function _eval_poly *****************
  8297 ;; Defined at:
  8298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  x               3   29[BANK0 ] PTR int 
  8301 ;;  d               2   32[BANK0 ] PTR const 
  8302 ;;		 -> log@coeff(27), 
  8303 ;;  n               2   34[BANK0 ] int 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  res             3   36[BANK0 ] int 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  3   29[BANK0 ] int 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8315 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;Total ram usage:       10 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:    2
  8322 ;; This function calls:
  8323 ;;		___ftadd
  8324 ;;		___ftmul
  8325 ;;		___wmul
  8326 ;; This function is called by:
  8327 ;;		_log
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           
  8332                           ;psect for function _eval_poly
  8333  0C45                     _eval_poly:	
  8334                           
  8335                           ;incstack = 0
  8336                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8337  0C45  0020               	movlb	0	; select bank0
  8338  0C46  0843               	movf	eval_poly@n+1,w
  8339  0C47  00F1               	movwf	___wmul@multiplier+1
  8340  0C48  0842               	movf	eval_poly@n,w
  8341  0C49  00F0               	movwf	___wmul@multiplier
  8342  0C4A  3003               	movlw	3
  8343  0C4B  00F2               	movwf	___wmul@multiplicand
  8344  0C4C  3000               	movlw	0
  8345  0C4D  00F3               	movwf	___wmul@multiplicand+1
  8346  0C4E  3189  2165  318C   	fcall	___wmul
  8347  0C51  0020               	movlb	0	; select bank0
  8348  0C52  0840               	movf	eval_poly@d,w
  8349  0C53  0770               	addwf	?___wmul,w
  8350  0C54  0084               	movwf	4
  8351  0C55  0841               	movf	eval_poly@d+1,w
  8352  0C56  3D71               	addwfc	?___wmul+1,w
  8353  0C57  0085               	movwf	5
  8354  0C58  3F00               	moviw [0]fsr0
  8355  0C59  00C4               	movwf	eval_poly@res
  8356  0C5A  3F01               	moviw [1]fsr0
  8357  0C5B  00C5               	movwf	eval_poly@res+1
  8358  0C5C  3F02               	moviw [2]fsr0
  8359  0C5D                     L2:	
  8360  0C5D  00C6               	movwf	eval_poly@res+2
  8361  0C5E  0842               	movf	eval_poly@n,w
  8362  0C5F  0443               	iorwf	eval_poly@n+1,w
  8363  0C60  1903               	btfsc	3,2
  8364  0C61  2C9E               	goto	l2697
  8365  0C62  30FF               	movlw	255
  8366  0C63  07C2               	addwf	eval_poly@n,f
  8367  0C64  30FF               	movlw	255
  8368  0C65  3DC3               	addwfc	eval_poly@n+1,f
  8369  0C66  0843               	movf	eval_poly@n+1,w
  8370  0C67  00F1               	movwf	___wmul@multiplier+1
  8371  0C68  0842               	movf	eval_poly@n,w
  8372  0C69  00F0               	movwf	___wmul@multiplier
  8373  0C6A  3003               	movlw	3
  8374  0C6B  00F2               	movwf	___wmul@multiplicand
  8375  0C6C  3000               	movlw	0
  8376  0C6D  00F3               	movwf	___wmul@multiplicand+1
  8377  0C6E  3189  2165  318C   	fcall	___wmul
  8378  0C71  0020               	movlb	0	; select bank0
  8379  0C72  0840               	movf	eval_poly@d,w
  8380  0C73  0770               	addwf	?___wmul,w
  8381  0C74  0084               	movwf	4
  8382  0C75  0841               	movf	eval_poly@d+1,w
  8383  0C76  3D71               	addwfc	?___wmul+1,w
  8384  0C77  0085               	movwf	5
  8385  0C78  3F00               	moviw [0]fsr0
  8386  0C79  00B0               	movwf	___ftadd@f1
  8387  0C7A  3F01               	moviw [1]fsr0
  8388  0C7B  00B1               	movwf	___ftadd@f1+1
  8389  0C7C  3F02               	moviw [2]fsr0
  8390  0C7D  00B2               	movwf	___ftadd@f1+2
  8391  0C7E  0844               	movf	eval_poly@res,w
  8392  0C7F  00A0               	movwf	___ftmul@f1
  8393  0C80  0845               	movf	eval_poly@res+1,w
  8394  0C81  00A1               	movwf	___ftmul@f1+1
  8395  0C82  0846               	movf	eval_poly@res+2,w
  8396  0C83  00A2               	movwf	___ftmul@f1+2
  8397  0C84  083D               	movf	eval_poly@x,w
  8398  0C85  00A3               	movwf	___ftmul@f2
  8399  0C86  083E               	movf	eval_poly@x+1,w
  8400  0C87  00A4               	movwf	___ftmul@f2+1
  8401  0C88  083F               	movf	eval_poly@x+2,w
  8402  0C89  00A5               	movwf	___ftmul@f2+2
  8403  0C8A  3180  2075  318C   	fcall	___ftmul
  8404  0C8D  0020               	movlb	0	; select bank0
  8405  0C8E  0820               	movf	?___ftmul,w
  8406  0C8F  00B3               	movwf	___ftadd@f2
  8407  0C90  0821               	movf	?___ftmul+1,w
  8408  0C91  00B4               	movwf	___ftadd@f2+1
  8409  0C92  0822               	movf	?___ftmul+2,w
  8410  0C93  00B5               	movwf	___ftadd@f2+2
  8411  0C94  3183  2364  318C   	fcall	___ftadd
  8412  0C97  0020               	movlb	0	; select bank0
  8413  0C98  0830               	movf	?___ftadd,w
  8414  0C99  00C4               	movwf	eval_poly@res
  8415  0C9A  0831               	movf	?___ftadd+1,w
  8416  0C9B  00C5               	movwf	eval_poly@res+1
  8417  0C9C  0832               	movf	?___ftadd+2,w
  8418  0C9D  2C5D               	goto	L2
  8419  0C9E                     l2697:	
  8420  0C9E  0844               	movf	eval_poly@res,w
  8421  0C9F  00BD               	movwf	?_eval_poly
  8422  0CA0  0845               	movf	eval_poly@res+1,w
  8423  0CA1  00BE               	movwf	?_eval_poly+1
  8424  0CA2  0846               	movf	eval_poly@res+2,w
  8425  0CA3  00BF               	movwf	?_eval_poly+2
  8426  0CA4  0008               	return
  8427  0CA5                     __end_of_eval_poly:	
  8428                           
  8429                           	psect	text11
  8430  0075                     __ptext11:	
  8431 ;; *************** function ___ftmul *****************
  8432 ;; Defined at:
  8433 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  f1              3    0[BANK0 ] float 
  8436 ;;  f2              3    3[BANK0 ] float 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8439 ;;  sign            1   15[BANK0 ] unsigned char 
  8440 ;;  cntr            1   14[BANK0 ] unsigned char 
  8441 ;;  exp             1   10[BANK0 ] unsigned char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  3    0[BANK0 ] float 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0, pclath, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:       16 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    1
  8458 ;; This function calls:
  8459 ;;		___ftpack
  8460 ;; This function is called by:
  8461 ;;		_main
  8462 ;;		_log
  8463 ;;		_eval_poly
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function ___ftmul
  8469  0075                     ___ftmul:	
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8473  0075  0020               	movlb	0	; select bank0
  8474  0076  0820               	movf	___ftmul@f1,w
  8475  0077  00A6               	movwf	??___ftmul
  8476  0078  0821               	movf	___ftmul@f1+1,w
  8477  0079  00A7               	movwf	??___ftmul+1
  8478  007A  0822               	movf	___ftmul@f1+2,w
  8479  007B  00A8               	movwf	??___ftmul+2
  8480  007C  1003               	clrc
  8481  007D  0D27               	rlf	??___ftmul+1,w
  8482  007E  0D28               	rlf	??___ftmul+2,w
  8483  007F  00A9               	movwf	??___ftmul+3
  8484  0080  0829               	movf	??___ftmul+3,w
  8485  0081  00AA               	movwf	___ftmul@exp
  8486  0082  082A               	movf	___ftmul@exp,w
  8487  0083  1D03               	btfss	3,2
  8488  0084  288C               	goto	l2375
  8489  0085  3000               	movlw	0
  8490  0086  00A0               	movwf	?___ftmul
  8491  0087  3000               	movlw	0
  8492  0088  00A1               	movwf	?___ftmul+1
  8493  0089  3000               	movlw	0
  8494  008A  00A2               	movwf	?___ftmul+2
  8495  008B  0008               	return
  8496  008C                     l2375:	
  8497  008C  0823               	movf	___ftmul@f2,w
  8498  008D  00A6               	movwf	??___ftmul
  8499  008E  0824               	movf	___ftmul@f2+1,w
  8500  008F  00A7               	movwf	??___ftmul+1
  8501  0090  0825               	movf	___ftmul@f2+2,w
  8502  0091  00A8               	movwf	??___ftmul+2
  8503  0092  1003               	clrc
  8504  0093  0D27               	rlf	??___ftmul+1,w
  8505  0094  0D28               	rlf	??___ftmul+2,w
  8506  0095  00A9               	movwf	??___ftmul+3
  8507  0096  0829               	movf	??___ftmul+3,w
  8508  0097  00AF               	movwf	___ftmul@sign
  8509  0098  082F               	movf	___ftmul@sign,w
  8510  0099  1D03               	btfss	3,2
  8511  009A  28A2               	goto	l2381
  8512  009B  3000               	movlw	0
  8513  009C  00A0               	movwf	?___ftmul
  8514  009D  3000               	movlw	0
  8515  009E  00A1               	movwf	?___ftmul+1
  8516  009F  3000               	movlw	0
  8517  00A0  00A2               	movwf	?___ftmul+2
  8518  00A1  0008               	return
  8519  00A2                     l2381:	
  8520  00A2  082F               	movf	___ftmul@sign,w
  8521  00A3  3E7B               	addlw	123
  8522  00A4  00A6               	movwf	??___ftmul
  8523  00A5  0826               	movf	??___ftmul,w
  8524  00A6  07AA               	addwf	___ftmul@exp,f
  8525  00A7  0820               	movf	___ftmul@f1,w
  8526  00A8  00A6               	movwf	??___ftmul
  8527  00A9  0821               	movf	___ftmul@f1+1,w
  8528  00AA  00A7               	movwf	??___ftmul+1
  8529  00AB  0822               	movf	___ftmul@f1+2,w
  8530  00AC  00A8               	movwf	??___ftmul+2
  8531  00AD  3010               	movlw	16
  8532  00AE                     u2485:	
  8533  00AE  36A8               	lsrf	??___ftmul+2,f
  8534  00AF  0CA7               	rrf	??___ftmul+1,f
  8535  00B0  0CA6               	rrf	??___ftmul,f
  8536  00B1  0B89               	decfsz	9,f
  8537  00B2  28AE               	goto	u2485
  8538  00B3  0826               	movf	??___ftmul,w
  8539  00B4  00A9               	movwf	??___ftmul+3
  8540  00B5  0829               	movf	??___ftmul+3,w
  8541  00B6  00AF               	movwf	___ftmul@sign
  8542  00B7  0823               	movf	___ftmul@f2,w
  8543  00B8  00A6               	movwf	??___ftmul
  8544  00B9  0824               	movf	___ftmul@f2+1,w
  8545  00BA  00A7               	movwf	??___ftmul+1
  8546  00BB  0825               	movf	___ftmul@f2+2,w
  8547  00BC  00A8               	movwf	??___ftmul+2
  8548  00BD  3010               	movlw	16
  8549  00BE                     u2495:	
  8550  00BE  36A8               	lsrf	??___ftmul+2,f
  8551  00BF  0CA7               	rrf	??___ftmul+1,f
  8552  00C0  0CA6               	rrf	??___ftmul,f
  8553  00C1  0B89               	decfsz	9,f
  8554  00C2  28BE               	goto	u2495
  8555  00C3  0826               	movf	??___ftmul,w
  8556  00C4  00A9               	movwf	??___ftmul+3
  8557  00C5  0829               	movf	??___ftmul+3,w
  8558  00C6  06AF               	xorwf	___ftmul@sign,f
  8559  00C7  3080               	movlw	128
  8560  00C8  00A6               	movwf	??___ftmul
  8561  00C9  0826               	movf	??___ftmul,w
  8562  00CA  05AF               	andwf	___ftmul@sign,f
  8563  00CB  17A1               	bsf	___ftmul@f1+1,7
  8564  00CC  17A4               	bsf	___ftmul@f2+1,7
  8565  00CD  30FF               	movlw	255
  8566  00CE  05A3               	andwf	___ftmul@f2,f
  8567  00CF  30FF               	movlw	255
  8568  00D0  05A4               	andwf	___ftmul@f2+1,f
  8569  00D1  3000               	movlw	0
  8570  00D2  05A5               	andwf	___ftmul@f2+2,f
  8571  00D3  3000               	movlw	0
  8572  00D4  00AB               	movwf	___ftmul@f3_as_product
  8573  00D5  3000               	movlw	0
  8574  00D6  00AC               	movwf	___ftmul@f3_as_product+1
  8575  00D7  3000               	movlw	0
  8576  00D8  00AD               	movwf	___ftmul@f3_as_product+2
  8577  00D9  3007               	movlw	7
  8578  00DA  00A6               	movwf	??___ftmul
  8579  00DB  0826               	movf	??___ftmul,w
  8580  00DC  00AE               	movwf	___ftmul@cntr
  8581  00DD                     l2393:	
  8582  00DD  1C20               	btfss	___ftmul@f1,0
  8583  00DE  28E5               	goto	l2397
  8584  00DF  0823               	movf	___ftmul@f2,w
  8585  00E0  07AB               	addwf	___ftmul@f3_as_product,f
  8586  00E1  0824               	movf	___ftmul@f2+1,w
  8587  00E2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8588  00E3  0825               	movf	___ftmul@f2+2,w
  8589  00E4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8590  00E5                     l2397:	
  8591  00E5  3001               	movlw	1
  8592  00E6                     u2515:	
  8593  00E6  36A2               	lsrf	___ftmul@f1+2,f
  8594  00E7  0CA1               	rrf	___ftmul@f1+1,f
  8595  00E8  0CA0               	rrf	___ftmul@f1,f
  8596  00E9  0B89               	decfsz	9,f
  8597  00EA  28E6               	goto	u2515
  8598  00EB  3001               	movlw	1
  8599  00EC                     u2525:	
  8600  00EC  35A3               	lslf	___ftmul@f2,f
  8601  00ED  0DA4               	rlf	___ftmul@f2+1,f
  8602  00EE  0DA5               	rlf	___ftmul@f2+2,f
  8603  00EF  0B89               	decfsz	9,f
  8604  00F0  28EC               	goto	u2525
  8605  00F1  3001               	movlw	1
  8606  00F2  02AE               	subwf	___ftmul@cntr,f
  8607  00F3  1D03               	btfss	3,2
  8608  00F4  28DD               	goto	l2393
  8609  00F5  3009               	movlw	9
  8610  00F6  00A6               	movwf	??___ftmul
  8611  00F7  0826               	movf	??___ftmul,w
  8612  00F8  00AE               	movwf	___ftmul@cntr
  8613  00F9                     l2405:	
  8614  00F9  1C20               	btfss	___ftmul@f1,0
  8615  00FA  2901               	goto	l2409
  8616  00FB  0823               	movf	___ftmul@f2,w
  8617  00FC  07AB               	addwf	___ftmul@f3_as_product,f
  8618  00FD  0824               	movf	___ftmul@f2+1,w
  8619  00FE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8620  00FF  0825               	movf	___ftmul@f2+2,w
  8621  0100  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8622  0101                     l2409:	
  8623  0101  3001               	movlw	1
  8624  0102                     u2555:	
  8625  0102  36A2               	lsrf	___ftmul@f1+2,f
  8626  0103  0CA1               	rrf	___ftmul@f1+1,f
  8627  0104  0CA0               	rrf	___ftmul@f1,f
  8628  0105  0B89               	decfsz	9,f
  8629  0106  2902               	goto	u2555
  8630  0107  3001               	movlw	1
  8631  0108                     u2565:	
  8632  0108  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8633  0109  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8634  010A  0CAB               	rrf	___ftmul@f3_as_product,f
  8635  010B  0B89               	decfsz	9,f
  8636  010C  2908               	goto	u2565
  8637  010D  3001               	movlw	1
  8638  010E  02AE               	subwf	___ftmul@cntr,f
  8639  010F  1D03               	btfss	3,2
  8640  0110  28F9               	goto	l2405
  8641  0111  082B               	movf	___ftmul@f3_as_product,w
  8642  0112  00F0               	movwf	___ftpack@arg
  8643  0113  082C               	movf	___ftmul@f3_as_product+1,w
  8644  0114  00F1               	movwf	___ftpack@arg+1
  8645  0115  082D               	movf	___ftmul@f3_as_product+2,w
  8646  0116  00F2               	movwf	___ftpack@arg+2
  8647  0117  082A               	movf	___ftmul@exp,w
  8648  0118  00A6               	movwf	??___ftmul
  8649  0119  0826               	movf	??___ftmul,w
  8650  011A  00F3               	movwf	___ftpack@exp
  8651  011B  082F               	movf	___ftmul@sign,w
  8652  011C  00A7               	movwf	??___ftmul+1
  8653  011D  0827               	movf	??___ftmul+1,w
  8654  011E  00F4               	movwf	___ftpack@sign
  8655  011F  3180  2011         	fcall	___ftpack
  8656  0121  0870               	movf	?___ftpack,w
  8657  0122  0020               	movlb	0	; select bank0
  8658  0123  00A0               	movwf	?___ftmul
  8659  0124  0871               	movf	?___ftpack+1,w
  8660  0125  00A1               	movwf	?___ftmul+1
  8661  0126  0872               	movf	?___ftpack+2,w
  8662  0127  00A2               	movwf	?___ftmul+2
  8663  0128  0008               	return
  8664  0129                     __end_of___ftmul:	
  8665                           
  8666                           	psect	text12
  8667  0AE7                     __ptext12:	
  8668 ;; *************** function ___ftge *****************
  8669 ;; Defined at:
  8670 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  ff1             3   29[BANK0 ] float 
  8673 ;;  ff2             3   32[BANK0 ] float 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;		None               void
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;Total ram usage:        9 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_main
  8695 ;;		_log
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           
  8700                           ;psect for function ___ftge
  8701  0AE7                     ___ftge:	
  8702                           
  8703                           ;incstack = 0
  8704                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8705  0AE7  0020               	movlb	0	; select bank0
  8706  0AE8  1FBF               	btfss	___ftge@ff1+2,7
  8707  0AE9  2AFE               	goto	l2655
  8708  0AEA  093D               	comf	___ftge@ff1,w
  8709  0AEB  00C3               	movwf	??___ftge
  8710  0AEC  093E               	comf	___ftge@ff1+1,w
  8711  0AED  00C4               	movwf	??___ftge+1
  8712  0AEE  093F               	comf	___ftge@ff1+2,w
  8713  0AEF  00C5               	movwf	??___ftge+2
  8714  0AF0  0AC3               	incf	??___ftge,f
  8715  0AF1  1903               	skipnz
  8716  0AF2  0AC4               	incf	??___ftge+1,f
  8717  0AF3  1903               	skipnz
  8718  0AF4  0AC5               	incf	??___ftge+2,f
  8719  0AF5  3000               	movlw	0
  8720  0AF6  0743               	addwf	??___ftge,w
  8721  0AF7  00BD               	movwf	___ftge@ff1
  8722  0AF8  3000               	movlw	0
  8723  0AF9  3D44               	addwfc	??___ftge+1,w
  8724  0AFA  00BE               	movwf	___ftge@ff1+1
  8725  0AFB  3080               	movlw	128
  8726  0AFC  3D45               	addwfc	??___ftge+2,w
  8727  0AFD  00BF               	movwf	___ftge@ff1+2
  8728  0AFE                     l2655:	
  8729  0AFE  1FC2               	btfss	___ftge@ff2+2,7
  8730  0AFF  2B14               	goto	l2659
  8731  0B00  0940               	comf	___ftge@ff2,w
  8732  0B01  00C3               	movwf	??___ftge
  8733  0B02  0941               	comf	___ftge@ff2+1,w
  8734  0B03  00C4               	movwf	??___ftge+1
  8735  0B04  0942               	comf	___ftge@ff2+2,w
  8736  0B05  00C5               	movwf	??___ftge+2
  8737  0B06  0AC3               	incf	??___ftge,f
  8738  0B07  1903               	skipnz
  8739  0B08  0AC4               	incf	??___ftge+1,f
  8740  0B09  1903               	skipnz
  8741  0B0A  0AC5               	incf	??___ftge+2,f
  8742  0B0B  3000               	movlw	0
  8743  0B0C  0743               	addwf	??___ftge,w
  8744  0B0D  00C0               	movwf	___ftge@ff2
  8745  0B0E  3000               	movlw	0
  8746  0B0F  3D44               	addwfc	??___ftge+1,w
  8747  0B10  00C1               	movwf	___ftge@ff2+1
  8748  0B11  3080               	movlw	128
  8749  0B12  3D45               	addwfc	??___ftge+2,w
  8750  0B13  00C2               	movwf	___ftge@ff2+2
  8751  0B14                     l2659:	
  8752  0B14  3080               	movlw	128
  8753  0B15  06BF               	xorwf	___ftge@ff1+2,f
  8754  0B16  3080               	movlw	128
  8755  0B17  06C2               	xorwf	___ftge@ff2+2,f
  8756  0B18  0842               	movf	___ftge@ff2+2,w
  8757  0B19  023F               	subwf	___ftge@ff1+2,w
  8758  0B1A  1D03               	skipz
  8759  0B1B  0008               	return
  8760  0B1C  0841               	movf	___ftge@ff2+1,w
  8761  0B1D  023E               	subwf	___ftge@ff1+1,w
  8762  0B1E  1D03               	skipz
  8763  0B1F  0008               	return
  8764  0B20  0840               	movf	___ftge@ff2,w
  8765  0B21  023D               	subwf	___ftge@ff1,w
  8766  0B22  0008               	return
  8767  0B23                     __end_of___ftge:	
  8768                           
  8769                           	psect	text13
  8770  09D7                     __ptext13:	
  8771 ;; *************** function ___awtoft *****************
  8772 ;; Defined at:
  8773 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  c               2    8[COMMON] int 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  sign            1   13[COMMON] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  3    8[COMMON] float 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0, pclath, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8787 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;Total ram usage:        6 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    1
  8794 ;; This function calls:
  8795 ;;		___ftpack
  8796 ;; This function is called by:
  8797 ;;		_log
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           
  8802                           ;psect for function ___awtoft
  8803  09D7                     ___awtoft:	
  8804                           
  8805                           ;incstack = 0
  8806                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8807  09D7  01FD               	clrf	___awtoft@sign
  8808  09D8  1FF9               	btfss	___awtoft@c+1,7
  8809  09D9  29E1               	goto	l2647
  8810  09DA  09F8               	comf	___awtoft@c,f
  8811  09DB  09F9               	comf	___awtoft@c+1,f
  8812  09DC  0AF8               	incf	___awtoft@c,f
  8813  09DD  1903               	skipnz
  8814  09DE  0AF9               	incf	___awtoft@c+1,f
  8815  09DF  01FD               	clrf	___awtoft@sign
  8816  09E0  0AFD               	incf	___awtoft@sign,f
  8817  09E1                     l2647:	
  8818  09E1  0878               	movf	___awtoft@c,w
  8819  09E2  00F0               	movwf	___ftpack@arg
  8820  09E3  0879               	movf	___awtoft@c+1,w
  8821  09E4  00F1               	movwf	___ftpack@arg+1
  8822  09E5  01F2               	clrf	___ftpack@arg+2
  8823  09E6  308E               	movlw	142
  8824  09E7  00FB               	movwf	??___awtoft
  8825  09E8  087B               	movf	??___awtoft,w
  8826  09E9  00F3               	movwf	___ftpack@exp
  8827  09EA  087D               	movf	___awtoft@sign,w
  8828  09EB  00FC               	movwf	??___awtoft+1
  8829  09EC  087C               	movf	??___awtoft+1,w
  8830  09ED  00F4               	movwf	___ftpack@sign
  8831  09EE  3180  2011         	fcall	___ftpack
  8832  09F0  0870               	movf	?___ftpack,w
  8833  09F1  00F8               	movwf	?___awtoft
  8834  09F2  0871               	movf	?___ftpack+1,w
  8835  09F3  00F9               	movwf	?___awtoft+1
  8836  09F4  0872               	movf	?___ftpack+2,w
  8837  09F5  00FA               	movwf	?___awtoft+2
  8838  09F6  0008               	return
  8839  09F7                     __end_of___awtoft:	
  8840                           
  8841                           	psect	text14
  8842  08D7                     __ptext14:	
  8843 ;; *************** function ___lwtoft *****************
  8844 ;; Defined at:
  8845 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  c               2    8[COMMON] unsigned int 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  3    8[COMMON] float 
  8852 ;; Registers used:
  8853 ;;		wreg, status,2, status,0, pclath, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8859 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;Total ram usage:        4 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    1
  8866 ;; This function calls:
  8867 ;;		___ftpack
  8868 ;; This function is called by:
  8869 ;;		_main
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           
  8874                           ;psect for function ___lwtoft
  8875  08D7                     ___lwtoft:	
  8876                           
  8877                           ;incstack = 0
  8878                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8879  08D7  0878               	movf	___lwtoft@c,w
  8880  08D8  00F0               	movwf	___ftpack@arg
  8881  08D9  0879               	movf	___lwtoft@c+1,w
  8882  08DA  00F1               	movwf	___ftpack@arg+1
  8883  08DB  01F2               	clrf	___ftpack@arg+2
  8884  08DC  308E               	movlw	142
  8885  08DD  00FB               	movwf	??___lwtoft
  8886  08DE  087B               	movf	??___lwtoft,w
  8887  08DF  00F3               	movwf	___ftpack@exp
  8888  08E0  01F4               	clrf	___ftpack@sign
  8889  08E1  3180  2011         	fcall	___ftpack
  8890  08E3  0870               	movf	?___ftpack,w
  8891  08E4  00F8               	movwf	?___lwtoft
  8892  08E5  0871               	movf	?___ftpack+1,w
  8893  08E6  00F9               	movwf	?___lwtoft+1
  8894  08E7  0872               	movf	?___ftpack+2,w
  8895  08E8  00FA               	movwf	?___lwtoft+2
  8896  08E9  0008               	return
  8897  08EA                     __end_of___lwtoft:	
  8898                           
  8899                           	psect	text15
  8900  0A78                     __ptext15:	
  8901 ;; *************** function ___lwdiv *****************
  8902 ;; Defined at:
  8903 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  divisor         2    6[COMMON] unsigned int 
  8906 ;;  dividend        2    8[COMMON] unsigned int 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  quotient        2   11[COMMON] unsigned int 
  8909 ;;  counter         1   13[COMMON] unsigned char 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  2    6[COMMON] unsigned int 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;Total ram usage:        8 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           
  8933                           ;psect for function ___lwdiv
  8934  0A78                     ___lwdiv:	
  8935                           
  8936                           ;incstack = 0
  8937                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8938  0A78  01FB               	clrf	___lwdiv@quotient
  8939  0A79  01FC               	clrf	___lwdiv@quotient+1
  8940  0A7A  0876               	movf	___lwdiv@divisor,w
  8941  0A7B  0477               	iorwf	___lwdiv@divisor+1,w
  8942  0A7C  1903               	btfsc	3,2
  8943  0A7D  2AA7               	goto	l3029
  8944  0A7E  01FD               	clrf	___lwdiv@counter
  8945  0A7F  0AFD               	incf	___lwdiv@counter,f
  8946  0A80                     l3017:	
  8947  0A80  1BF7               	btfsc	___lwdiv@divisor+1,7
  8948  0A81  2A8C               	goto	l3019
  8949  0A82  3001               	movlw	1
  8950  0A83                     u3215:	
  8951  0A83  35F6               	lslf	___lwdiv@divisor,f
  8952  0A84  0DF7               	rlf	___lwdiv@divisor+1,f
  8953  0A85  0B89               	decfsz	9,f
  8954  0A86  2A83               	goto	u3215
  8955  0A87  3001               	movlw	1
  8956  0A88  00FA               	movwf	??___lwdiv
  8957  0A89  087A               	movf	??___lwdiv,w
  8958  0A8A  07FD               	addwf	___lwdiv@counter,f
  8959  0A8B  2A80               	goto	l3017
  8960  0A8C                     l3019:	
  8961  0A8C  3001               	movlw	1
  8962  0A8D                     u3235:	
  8963  0A8D  35FB               	lslf	___lwdiv@quotient,f
  8964  0A8E  0DFC               	rlf	___lwdiv@quotient+1,f
  8965  0A8F  0B89               	decfsz	9,f
  8966  0A90  2A8D               	goto	u3235
  8967  0A91  0877               	movf	___lwdiv@divisor+1,w
  8968  0A92  0279               	subwf	___lwdiv@dividend+1,w
  8969  0A93  1D03               	skipz
  8970  0A94  2A97               	goto	u3245
  8971  0A95  0876               	movf	___lwdiv@divisor,w
  8972  0A96  0278               	subwf	___lwdiv@dividend,w
  8973  0A97                     u3245:	
  8974  0A97  1C03               	skipc
  8975  0A98  2A9E               	goto	l3025
  8976  0A99  0876               	movf	___lwdiv@divisor,w
  8977  0A9A  02F8               	subwf	___lwdiv@dividend,f
  8978  0A9B  0877               	movf	___lwdiv@divisor+1,w
  8979  0A9C  3BF9               	subwfb	___lwdiv@dividend+1,f
  8980  0A9D  147B               	bsf	___lwdiv@quotient,0
  8981  0A9E                     l3025:	
  8982  0A9E  3001               	movlw	1
  8983  0A9F                     u3255:	
  8984  0A9F  36F7               	lsrf	___lwdiv@divisor+1,f
  8985  0AA0  0CF6               	rrf	___lwdiv@divisor,f
  8986  0AA1  0B89               	decfsz	9,f
  8987  0AA2  2A9F               	goto	u3255
  8988  0AA3  3001               	movlw	1
  8989  0AA4  02FD               	subwf	___lwdiv@counter,f
  8990  0AA5  1D03               	btfss	3,2
  8991  0AA6  2A8C               	goto	l3019
  8992  0AA7                     l3029:	
  8993  0AA7  087C               	movf	___lwdiv@quotient+1,w
  8994  0AA8  00F7               	movwf	?___lwdiv+1
  8995  0AA9  087B               	movf	___lwdiv@quotient,w
  8996  0AAA  00F6               	movwf	?___lwdiv
  8997  0AAB  0008               	return
  8998  0AAC                     __end_of___lwdiv:	
  8999                           
  9000                           	psect	text16
  9001  0931                     __ptext16:	
  9002 ;; *************** function ___lbtoft *****************
  9003 ;; Defined at:
  9004 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  c               1    wreg     unsigned char 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  c               1   11[COMMON] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  3    8[COMMON] float 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0, pclath, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9018 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;Total ram usage:        8 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    1
  9025 ;; This function calls:
  9026 ;;		___ftpack
  9027 ;; This function is called by:
  9028 ;;		_main
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function ___lbtoft
  9034  0931                     ___lbtoft:	
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  9038                           ;___lbtoft@c stored from wreg
  9039  0931  00FB               	movwf	___lbtoft@c
  9040  0932  087B               	movf	___lbtoft@c,w
  9041  0933  0020               	movlb	0	; select bank0
  9042  0934  00A0               	movwf	??___lbtoft
  9043  0935  01A1               	clrf	??___lbtoft+1
  9044  0936  01A2               	clrf	??___lbtoft+2
  9045  0937  0820               	movf	??___lbtoft,w
  9046  0938  00F0               	movwf	___ftpack@arg
  9047  0939  0821               	movf	??___lbtoft+1,w
  9048  093A  00F1               	movwf	___ftpack@arg+1
  9049  093B  0822               	movf	??___lbtoft+2,w
  9050  093C  00F2               	movwf	___ftpack@arg+2
  9051  093D  308E               	movlw	142
  9052  093E  00A3               	movwf	??___lbtoft+3
  9053  093F  0823               	movf	??___lbtoft+3,w
  9054  0940  00F3               	movwf	___ftpack@exp
  9055  0941  01F4               	clrf	___ftpack@sign
  9056  0942  3180  2011         	fcall	___ftpack
  9057  0944  0870               	movf	?___ftpack,w
  9058  0945  00F8               	movwf	?___lbtoft
  9059  0946  0871               	movf	?___ftpack+1,w
  9060  0947  00F9               	movwf	?___lbtoft+1
  9061  0948  0872               	movf	?___ftpack+2,w
  9062  0949  00FA               	movwf	?___lbtoft+2
  9063  094A  0008               	return
  9064  094B                     __end_of___lbtoft:	
  9065                           
  9066                           	psect	text17
  9067  0E23                     __ptext17:	
  9068 ;; *************** function ___fttol *****************
  9069 ;; Defined at:
  9070 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  f1              3   16[BANK0 ] float 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  lval            4   25[BANK0 ] unsigned long 
  9075 ;;  exp1            1   29[BANK0 ] unsigned char 
  9076 ;;  sign1           1   24[BANK0 ] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  4   16[BANK0 ] long 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:       14 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function ___fttol
  9101  0E23                     ___fttol:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9105  0E23  0020               	movlb	0	; select bank0
  9106  0E24  0830               	movf	___fttol@f1,w
  9107  0E25  00B4               	movwf	??___fttol
  9108  0E26  0831               	movf	___fttol@f1+1,w
  9109  0E27  00B5               	movwf	??___fttol+1
  9110  0E28  0832               	movf	___fttol@f1+2,w
  9111  0E29  00B6               	movwf	??___fttol+2
  9112  0E2A  1003               	clrc
  9113  0E2B  0D35               	rlf	??___fttol+1,w
  9114  0E2C  0D36               	rlf	??___fttol+2,w
  9115  0E2D  00B7               	movwf	??___fttol+3
  9116  0E2E  0837               	movf	??___fttol+3,w
  9117  0E2F  00BD               	movwf	___fttol@exp1
  9118  0E30  083D               	movf	___fttol@exp1,w
  9119  0E31  1D03               	btfss	3,2
  9120  0E32  2E3C               	goto	l2967
  9121  0E33  3000               	movlw	0
  9122  0E34  00B3               	movwf	?___fttol+3
  9123  0E35  3000               	movlw	0
  9124  0E36  00B2               	movwf	?___fttol+2
  9125  0E37  3000               	movlw	0
  9126  0E38  00B1               	movwf	?___fttol+1
  9127  0E39  3000               	movlw	0
  9128  0E3A  00B0               	movwf	?___fttol
  9129  0E3B  0008               	return
  9130  0E3C                     l2967:	
  9131  0E3C  0830               	movf	___fttol@f1,w
  9132  0E3D  00B4               	movwf	??___fttol
  9133  0E3E  0831               	movf	___fttol@f1+1,w
  9134  0E3F  00B5               	movwf	??___fttol+1
  9135  0E40  0832               	movf	___fttol@f1+2,w
  9136  0E41  00B6               	movwf	??___fttol+2
  9137  0E42  3017               	movlw	23
  9138  0E43                     u3115:	
  9139  0E43  36B6               	lsrf	??___fttol+2,f
  9140  0E44  0CB5               	rrf	??___fttol+1,f
  9141  0E45  0CB4               	rrf	??___fttol,f
  9142  0E46  0B89               	decfsz	9,f
  9143  0E47  2E43               	goto	u3115
  9144  0E48  0834               	movf	??___fttol,w
  9145  0E49  00B7               	movwf	??___fttol+3
  9146  0E4A  0837               	movf	??___fttol+3,w
  9147  0E4B  00B8               	movwf	___fttol@sign1
  9148  0E4C  17B1               	bsf	___fttol@f1+1,7
  9149  0E4D  30FF               	movlw	255
  9150  0E4E  05B0               	andwf	___fttol@f1,f
  9151  0E4F  30FF               	movlw	255
  9152  0E50  05B1               	andwf	___fttol@f1+1,f
  9153  0E51  3000               	movlw	0
  9154  0E52  05B2               	andwf	___fttol@f1+2,f
  9155  0E53  0830               	movf	___fttol@f1,w
  9156  0E54  00B9               	movwf	___fttol@lval
  9157  0E55  0831               	movf	___fttol@f1+1,w
  9158  0E56  00BA               	movwf	___fttol@lval+1
  9159  0E57  0832               	movf	___fttol@f1+2,w
  9160  0E58  00BB               	movwf	___fttol@lval+2
  9161  0E59  01BC               	clrf	___fttol@lval+3
  9162  0E5A  308E               	movlw	142
  9163  0E5B  02BD               	subwf	___fttol@exp1,f
  9164  0E5C  1FBD               	btfss	___fttol@exp1,7
  9165  0E5D  2E7A               	goto	l2987
  9166  0E5E  083D               	movf	___fttol@exp1,w
  9167  0E5F  3A80               	xorlw	128
  9168  0E60  3E8F               	addlw	143
  9169  0E61  1803               	skipnc
  9170  0E62  2E6C               	goto	l2985
  9171  0E63  3000               	movlw	0
  9172  0E64  00B3               	movwf	?___fttol+3
  9173  0E65  3000               	movlw	0
  9174  0E66  00B2               	movwf	?___fttol+2
  9175  0E67  3000               	movlw	0
  9176  0E68  00B1               	movwf	?___fttol+1
  9177  0E69  3000               	movlw	0
  9178  0E6A  00B0               	movwf	?___fttol
  9179  0E6B  0008               	return
  9180  0E6C                     l2985:	
  9181  0E6C  3001               	movlw	1
  9182  0E6D                     u3145:	
  9183  0E6D  36BC               	lsrf	___fttol@lval+3,f
  9184  0E6E  0CBB               	rrf	___fttol@lval+2,f
  9185  0E6F  0CBA               	rrf	___fttol@lval+1,f
  9186  0E70  0CB9               	rrf	___fttol@lval,f
  9187  0E71  0B89               	decfsz	9,f
  9188  0E72  2E6D               	goto	u3145
  9189  0E73  3001               	movlw	1
  9190  0E74  00B4               	movwf	??___fttol
  9191  0E75  0834               	movf	??___fttol,w
  9192  0E76  07BD               	addwf	___fttol@exp1,f
  9193  0E77  1903               	btfsc	3,2
  9194  0E78  2E93               	goto	l2995
  9195  0E79  2E6C               	goto	l2985
  9196  0E7A                     l2987:	
  9197  0E7A  3018               	movlw	24
  9198  0E7B  023D               	subwf	___fttol@exp1,w
  9199  0E7C  1C03               	skipc
  9200  0E7D  2E90               	goto	l733
  9201  0E7E  3000               	movlw	0
  9202  0E7F  00B3               	movwf	?___fttol+3
  9203  0E80  3000               	movlw	0
  9204  0E81  00B2               	movwf	?___fttol+2
  9205  0E82  3000               	movlw	0
  9206  0E83  00B1               	movwf	?___fttol+1
  9207  0E84  3000               	movlw	0
  9208  0E85  00B0               	movwf	?___fttol
  9209  0E86  0008               	return
  9210  0E87                     l2993:	
  9211  0E87  3001               	movlw	1
  9212  0E88                     u3175:	
  9213  0E88  35B9               	lslf	___fttol@lval,f
  9214  0E89  0DBA               	rlf	___fttol@lval+1,f
  9215  0E8A  0DBB               	rlf	___fttol@lval+2,f
  9216  0E8B  0DBC               	rlf	___fttol@lval+3,f
  9217  0E8C  0B89               	decfsz	9,f
  9218  0E8D  2E88               	goto	u3175
  9219  0E8E  3001               	movlw	1
  9220  0E8F  02BD               	subwf	___fttol@exp1,f
  9221  0E90                     l733:	
  9222  0E90  083D               	movf	___fttol@exp1,w
  9223  0E91  1D03               	btfss	3,2
  9224  0E92  2E87               	goto	l2993
  9225  0E93                     l2995:	
  9226  0E93  0838               	movf	___fttol@sign1,w
  9227  0E94  1903               	btfsc	3,2
  9228  0E95  2EA1               	goto	l2999
  9229  0E96  09B9               	comf	___fttol@lval,f
  9230  0E97  09BA               	comf	___fttol@lval+1,f
  9231  0E98  09BB               	comf	___fttol@lval+2,f
  9232  0E99  09BC               	comf	___fttol@lval+3,f
  9233  0E9A  0AB9               	incf	___fttol@lval,f
  9234  0E9B  1903               	skipnz
  9235  0E9C  0ABA               	incf	___fttol@lval+1,f
  9236  0E9D  1903               	skipnz
  9237  0E9E  0ABB               	incf	___fttol@lval+2,f
  9238  0E9F  1903               	skipnz
  9239  0EA0  0ABC               	incf	___fttol@lval+3,f
  9240  0EA1                     l2999:	
  9241  0EA1  083C               	movf	___fttol@lval+3,w
  9242  0EA2  00B3               	movwf	?___fttol+3
  9243  0EA3  083B               	movf	___fttol@lval+2,w
  9244  0EA4  00B2               	movwf	?___fttol+2
  9245  0EA5  083A               	movf	___fttol@lval+1,w
  9246  0EA6  00B1               	movwf	?___fttol+1
  9247  0EA7  0839               	movf	___fttol@lval,w
  9248  0EA8  00B0               	movwf	?___fttol
  9249  0EA9  0008               	return
  9250  0EAA                     __end_of___fttol:	
  9251                           
  9252                           	psect	text18
  9253  09B9                     __ptext18:	
  9254 ;; *************** function ___ftsub *****************
  9255 ;; Defined at:
  9256 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  f2              3   29[BANK0 ] float 
  9259 ;;  f1              3   32[BANK0 ] float 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  3   29[BANK0 ] float 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0, pclath, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;Total ram usage:        6 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    2
  9278 ;; This function calls:
  9279 ;;		___ftadd
  9280 ;; This function is called by:
  9281 ;;		_main
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           
  9286                           ;psect for function ___ftsub
  9287  09B9                     ___ftsub:	
  9288                           
  9289                           ;incstack = 0
  9290                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9291  09B9  0020               	movlb	0	; select bank0
  9292  09BA  083F               	movf	___ftsub@f2+2,w
  9293  09BB  043E               	iorwf	___ftsub@f2+1,w
  9294  09BC  043D               	iorwf	___ftsub@f2,w
  9295  09BD  1903               	skipnz
  9296  09BE  29C1               	goto	l2957
  9297  09BF  3080               	movlw	128
  9298  09C0  06BF               	xorwf	___ftsub@f2+2,f
  9299  09C1                     l2957:	
  9300  09C1  0840               	movf	___ftsub@f1,w
  9301  09C2  00B0               	movwf	___ftadd@f1
  9302  09C3  0841               	movf	___ftsub@f1+1,w
  9303  09C4  00B1               	movwf	___ftadd@f1+1
  9304  09C5  0842               	movf	___ftsub@f1+2,w
  9305  09C6  00B2               	movwf	___ftadd@f1+2
  9306  09C7  083D               	movf	___ftsub@f2,w
  9307  09C8  00B3               	movwf	___ftadd@f2
  9308  09C9  083E               	movf	___ftsub@f2+1,w
  9309  09CA  00B4               	movwf	___ftadd@f2+1
  9310  09CB  083F               	movf	___ftsub@f2+2,w
  9311  09CC  00B5               	movwf	___ftadd@f2+2
  9312  09CD  3183  2364         	fcall	___ftadd
  9313  09CF  0020               	movlb	0	; select bank0
  9314  09D0  0830               	movf	?___ftadd,w
  9315  09D1  00BD               	movwf	?___ftsub
  9316  09D2  0831               	movf	?___ftadd+1,w
  9317  09D3  00BE               	movwf	?___ftsub+1
  9318  09D4  0832               	movf	?___ftadd+2,w
  9319  09D5  00BF               	movwf	?___ftsub+2
  9320  09D6  0008               	return
  9321  09D7                     __end_of___ftsub:	
  9322                           
  9323                           	psect	text19
  9324  0364                     __ptext19:	
  9325 ;; *************** function ___ftadd *****************
  9326 ;; Defined at:
  9327 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  f1              3   16[BANK0 ] float 
  9330 ;;  f2              3   19[BANK0 ] float 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  exp1            1   28[BANK0 ] unsigned char 
  9333 ;;  exp2            1   27[BANK0 ] unsigned char 
  9334 ;;  sign            1   26[BANK0 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  3   16[BANK0 ] float 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0, pclath, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:       13 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    1
  9351 ;; This function calls:
  9352 ;;		___ftpack
  9353 ;; This function is called by:
  9354 ;;		_main
  9355 ;;		___ftsub
  9356 ;;		_log
  9357 ;;		_eval_poly
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function ___ftadd
  9363  0364                     ___ftadd:	
  9364                           
  9365                           ;incstack = 0
  9366                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9367  0364  0020               	movlb	0	; select bank0
  9368  0365  0830               	movf	___ftadd@f1,w
  9369  0366  00B6               	movwf	??___ftadd
  9370  0367  0831               	movf	___ftadd@f1+1,w
  9371  0368  00B7               	movwf	??___ftadd+1
  9372  0369  0832               	movf	___ftadd@f1+2,w
  9373  036A  00B8               	movwf	??___ftadd+2
  9374  036B  1003               	clrc
  9375  036C  0D37               	rlf	??___ftadd+1,w
  9376  036D  0D38               	rlf	??___ftadd+2,w
  9377  036E  00B9               	movwf	??___ftadd+3
  9378  036F  0839               	movf	??___ftadd+3,w
  9379  0370  00BC               	movwf	___ftadd@exp1
  9380  0371  0833               	movf	___ftadd@f2,w
  9381  0372  00B6               	movwf	??___ftadd
  9382  0373  0834               	movf	___ftadd@f2+1,w
  9383  0374  00B7               	movwf	??___ftadd+1
  9384  0375  0835               	movf	___ftadd@f2+2,w
  9385  0376  00B8               	movwf	??___ftadd+2
  9386  0377  1003               	clrc
  9387  0378  0D37               	rlf	??___ftadd+1,w
  9388  0379  0D38               	rlf	??___ftadd+2,w
  9389  037A  00B9               	movwf	??___ftadd+3
  9390  037B  0839               	movf	??___ftadd+3,w
  9391  037C  00BB               	movwf	___ftadd@exp2
  9392  037D  083C               	movf	___ftadd@exp1,w
  9393  037E  1903               	btfsc	3,2
  9394  037F  2B8C               	goto	l2305
  9395  0380  083B               	movf	___ftadd@exp2,w
  9396  0381  023C               	subwf	___ftadd@exp1,w
  9397  0382  1803               	skipnc
  9398  0383  2B93               	goto	l2309
  9399  0384  033C               	decf	___ftadd@exp1,w
  9400  0385  3AFF               	xorlw	255
  9401  0386  073B               	addwf	___ftadd@exp2,w
  9402  0387  00B6               	movwf	??___ftadd
  9403  0388  3019               	movlw	25
  9404  0389  0236               	subwf	??___ftadd,w
  9405  038A  1C03               	skipc
  9406  038B  2B93               	goto	l2309
  9407  038C                     l2305:	
  9408  038C  0833               	movf	___ftadd@f2,w
  9409  038D  00B0               	movwf	?___ftadd
  9410  038E  0834               	movf	___ftadd@f2+1,w
  9411  038F  00B1               	movwf	?___ftadd+1
  9412  0390  0835               	movf	___ftadd@f2+2,w
  9413  0391  00B2               	movwf	?___ftadd+2
  9414  0392  0008               	return
  9415  0393                     l2309:	
  9416  0393  083B               	movf	___ftadd@exp2,w
  9417  0394  1903               	btfsc	3,2
  9418  0395  0008               	return
  9419  0396  083C               	movf	___ftadd@exp1,w
  9420  0397  023B               	subwf	___ftadd@exp2,w
  9421  0398  1803               	skipnc
  9422  0399  2BA2               	goto	l2315
  9423  039A  033B               	decf	___ftadd@exp2,w
  9424  039B  3AFF               	xorlw	255
  9425  039C  073C               	addwf	___ftadd@exp1,w
  9426  039D  00B6               	movwf	??___ftadd
  9427  039E  3019               	movlw	25
  9428  039F  0236               	subwf	??___ftadd,w
  9429  03A0  1803               	btfsc	3,0
  9430  03A1  0008               	return
  9431  03A2                     l2315:	
  9432  03A2  3006               	movlw	6
  9433  03A3  00B6               	movwf	??___ftadd
  9434  03A4  0836               	movf	??___ftadd,w
  9435  03A5  00BA               	movwf	___ftadd@sign
  9436  03A6  1BB2               	btfsc	___ftadd@f1+2,7
  9437  03A7  17BA               	bsf	___ftadd@sign,7
  9438  03A8  1BB5               	btfsc	___ftadd@f2+2,7
  9439  03A9  173A               	bsf	___ftadd@sign,6
  9440  03AA  17B1               	bsf	___ftadd@f1+1,7
  9441  03AB  30FF               	movlw	255
  9442  03AC  05B0               	andwf	___ftadd@f1,f
  9443  03AD  30FF               	movlw	255
  9444  03AE  05B1               	andwf	___ftadd@f1+1,f
  9445  03AF  3000               	movlw	0
  9446  03B0  05B2               	andwf	___ftadd@f1+2,f
  9447  03B1  17B4               	bsf	___ftadd@f2+1,7
  9448  03B2  30FF               	movlw	255
  9449  03B3  05B3               	andwf	___ftadd@f2,f
  9450  03B4  30FF               	movlw	255
  9451  03B5  05B4               	andwf	___ftadd@f2+1,f
  9452  03B6  3000               	movlw	0
  9453  03B7  05B5               	andwf	___ftadd@f2+2,f
  9454  03B8  083B               	movf	___ftadd@exp2,w
  9455  03B9  023C               	subwf	___ftadd@exp1,w
  9456  03BA  1803               	skipnc
  9457  03BB  2BDE               	goto	l2337
  9458  03BC                     l2327:	
  9459  03BC  3001               	movlw	1
  9460  03BD                     u2325:	
  9461  03BD  35B3               	lslf	___ftadd@f2,f
  9462  03BE  0DB4               	rlf	___ftadd@f2+1,f
  9463  03BF  0DB5               	rlf	___ftadd@f2+2,f
  9464  03C0  0B89               	decfsz	9,f
  9465  03C1  2BBD               	goto	u2325
  9466  03C2  3001               	movlw	1
  9467  03C3  02BB               	subwf	___ftadd@exp2,f
  9468  03C4  083B               	movf	___ftadd@exp2,w
  9469  03C5  063C               	xorwf	___ftadd@exp1,w
  9470  03C6  1903               	skipnz
  9471  03C7  2BD9               	goto	l2335
  9472  03C8  3001               	movlw	1
  9473  03C9  02BA               	subwf	___ftadd@sign,f
  9474  03CA  083A               	movf	___ftadd@sign,w
  9475  03CB  3907               	andlw	7
  9476  03CC  1903               	btfsc	3,2
  9477  03CD  2BD9               	goto	l2335
  9478  03CE  2BBC               	goto	l2327
  9479  03CF                     l2333:	
  9480  03CF  3001               	movlw	1
  9481  03D0                     u2355:	
  9482  03D0  36B2               	lsrf	___ftadd@f1+2,f
  9483  03D1  0CB1               	rrf	___ftadd@f1+1,f
  9484  03D2  0CB0               	rrf	___ftadd@f1,f
  9485  03D3  0B89               	decfsz	9,f
  9486  03D4  2BD0               	goto	u2355
  9487  03D5  3001               	movlw	1
  9488  03D6  00B6               	movwf	??___ftadd
  9489  03D7  0836               	movf	??___ftadd,w
  9490  03D8  07BC               	addwf	___ftadd@exp1,f
  9491  03D9                     l2335:	
  9492  03D9  083C               	movf	___ftadd@exp1,w
  9493  03DA  063B               	xorwf	___ftadd@exp2,w
  9494  03DB  1903               	btfsc	3,2
  9495  03DC  2C03               	goto	l673
  9496  03DD  2BCF               	goto	l2333
  9497  03DE                     l2337:	
  9498  03DE  083C               	movf	___ftadd@exp1,w
  9499  03DF  023B               	subwf	___ftadd@exp2,w
  9500  03E0  1803               	skipnc
  9501  03E1  2C03               	goto	l673
  9502  03E2                     l2339:	
  9503  03E2  3001               	movlw	1
  9504  03E3                     u2385:	
  9505  03E3  35B0               	lslf	___ftadd@f1,f
  9506  03E4  0DB1               	rlf	___ftadd@f1+1,f
  9507  03E5  0DB2               	rlf	___ftadd@f1+2,f
  9508  03E6  0B89               	decfsz	9,f
  9509  03E7  2BE3               	goto	u2385
  9510  03E8  3001               	movlw	1
  9511  03E9  02BC               	subwf	___ftadd@exp1,f
  9512  03EA  083B               	movf	___ftadd@exp2,w
  9513  03EB  063C               	xorwf	___ftadd@exp1,w
  9514  03EC  1903               	skipnz
  9515  03ED  2BFF               	goto	l2347
  9516  03EE  3001               	movlw	1
  9517  03EF  02BA               	subwf	___ftadd@sign,f
  9518  03F0  083A               	movf	___ftadd@sign,w
  9519  03F1  3907               	andlw	7
  9520  03F2  1903               	btfsc	3,2
  9521  03F3  2BFF               	goto	l2347
  9522  03F4  2BE2               	goto	l2339
  9523  03F5                     l2345:	
  9524  03F5  3001               	movlw	1
  9525  03F6                     u2415:	
  9526  03F6  36B5               	lsrf	___ftadd@f2+2,f
  9527  03F7  0CB4               	rrf	___ftadd@f2+1,f
  9528  03F8  0CB3               	rrf	___ftadd@f2,f
  9529  03F9  0B89               	decfsz	9,f
  9530  03FA  2BF6               	goto	u2415
  9531  03FB  3001               	movlw	1
  9532  03FC  00B6               	movwf	??___ftadd
  9533  03FD  0836               	movf	??___ftadd,w
  9534  03FE  07BB               	addwf	___ftadd@exp2,f
  9535  03FF                     l2347:	
  9536  03FF  083C               	movf	___ftadd@exp1,w
  9537  0400  063B               	xorwf	___ftadd@exp2,w
  9538  0401  1D03               	skipz
  9539  0402  2BF5               	goto	l2345
  9540  0403                     l673:	
  9541  0403  1FBA               	btfss	___ftadd@sign,7
  9542  0404  2C15               	goto	l2351
  9543  0405  30FF               	movlw	255
  9544  0406  06B0               	xorwf	___ftadd@f1,f
  9545  0407  30FF               	movlw	255
  9546  0408  06B1               	xorwf	___ftadd@f1+1,f
  9547  0409  30FF               	movlw	255
  9548  040A  06B2               	xorwf	___ftadd@f1+2,f
  9549  040B  3001               	movlw	1
  9550  040C  07B0               	addwf	___ftadd@f1,f
  9551  040D  3000               	movlw	0
  9552  040E  1803               	skipnc
  9553  040F  3001               	movlw	1
  9554  0410  07B1               	addwf	___ftadd@f1+1,f
  9555  0411  3000               	movlw	0
  9556  0412  1803               	skipnc
  9557  0413  3001               	movlw	1
  9558  0414  07B2               	addwf	___ftadd@f1+2,f
  9559  0415                     l2351:	
  9560  0415  1F3A               	btfss	___ftadd@sign,6
  9561  0416  2C27               	goto	l2355
  9562  0417  30FF               	movlw	255
  9563  0418  06B3               	xorwf	___ftadd@f2,f
  9564  0419  30FF               	movlw	255
  9565  041A  06B4               	xorwf	___ftadd@f2+1,f
  9566  041B  30FF               	movlw	255
  9567  041C  06B5               	xorwf	___ftadd@f2+2,f
  9568  041D  3001               	movlw	1
  9569  041E  07B3               	addwf	___ftadd@f2,f
  9570  041F  3000               	movlw	0
  9571  0420  1803               	skipnc
  9572  0421  3001               	movlw	1
  9573  0422  07B4               	addwf	___ftadd@f2+1,f
  9574  0423  3000               	movlw	0
  9575  0424  1803               	skipnc
  9576  0425  3001               	movlw	1
  9577  0426  07B5               	addwf	___ftadd@f2+2,f
  9578  0427                     l2355:	
  9579  0427  01BA               	clrf	___ftadd@sign
  9580  0428  0830               	movf	___ftadd@f1,w
  9581  0429  07B3               	addwf	___ftadd@f2,f
  9582  042A  0831               	movf	___ftadd@f1+1,w
  9583  042B  3DB4               	addwfc	___ftadd@f2+1,f
  9584  042C  0832               	movf	___ftadd@f1+2,w
  9585  042D  3DB5               	addwfc	___ftadd@f2+2,f
  9586  042E  1FB5               	btfss	___ftadd@f2+2,7
  9587  042F  2C42               	goto	l2365
  9588  0430  30FF               	movlw	255
  9589  0431  06B3               	xorwf	___ftadd@f2,f
  9590  0432  30FF               	movlw	255
  9591  0433  06B4               	xorwf	___ftadd@f2+1,f
  9592  0434  30FF               	movlw	255
  9593  0435  06B5               	xorwf	___ftadd@f2+2,f
  9594  0436  3001               	movlw	1
  9595  0437  07B3               	addwf	___ftadd@f2,f
  9596  0438  3000               	movlw	0
  9597  0439  1803               	skipnc
  9598  043A  3001               	movlw	1
  9599  043B  07B4               	addwf	___ftadd@f2+1,f
  9600  043C  3000               	movlw	0
  9601  043D  1803               	skipnc
  9602  043E  3001               	movlw	1
  9603  043F  07B5               	addwf	___ftadd@f2+2,f
  9604  0440  01BA               	clrf	___ftadd@sign
  9605  0441  0ABA               	incf	___ftadd@sign,f
  9606  0442                     l2365:	
  9607  0442  0833               	movf	___ftadd@f2,w
  9608  0443  00F0               	movwf	___ftpack@arg
  9609  0444  0834               	movf	___ftadd@f2+1,w
  9610  0445  00F1               	movwf	___ftpack@arg+1
  9611  0446  0835               	movf	___ftadd@f2+2,w
  9612  0447  00F2               	movwf	___ftpack@arg+2
  9613  0448  083C               	movf	___ftadd@exp1,w
  9614  0449  00B6               	movwf	??___ftadd
  9615  044A  0836               	movf	??___ftadd,w
  9616  044B  00F3               	movwf	___ftpack@exp
  9617  044C  083A               	movf	___ftadd@sign,w
  9618  044D  00B7               	movwf	??___ftadd+1
  9619  044E  0837               	movf	??___ftadd+1,w
  9620  044F  00F4               	movwf	___ftpack@sign
  9621  0450  3180  2011         	fcall	___ftpack
  9622  0452  0870               	movf	?___ftpack,w
  9623  0453  0020               	movlb	0	; select bank0
  9624  0454  00B0               	movwf	?___ftadd
  9625  0455  0871               	movf	?___ftpack+1,w
  9626  0456  00B1               	movwf	?___ftadd+1
  9627  0457  0872               	movf	?___ftpack+2,w
  9628  0458  00B2               	movwf	?___ftadd+2
  9629  0459  0008               	return
  9630  045A                     __end_of___ftadd:	
  9631                           
  9632                           	psect	text20
  9633  0879                     __ptext20:	
  9634 ;; *************** function ___ftneg *****************
  9635 ;; Defined at:
  9636 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  f1              3    0[COMMON] float 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  3    0[COMMON] float 
  9643 ;; Registers used:
  9644 ;;		wreg
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;Total ram usage:        3 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function ___ftneg
  9665  0879                     ___ftneg:	
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in ___ftneg: [wreg]
  9669  0879  0872               	movf	___ftneg@f1+2,w
  9670  087A  0471               	iorwf	___ftneg@f1+1,w
  9671  087B  0470               	iorwf	___ftneg@f1,w
  9672  087C  1903               	skipnz
  9673  087D  0008               	return
  9674  087E  3080               	movlw	128
  9675  087F  06F2               	xorwf	___ftneg@f1+2,f
  9676  0880  0008               	return
  9677  0881                     __end_of___ftneg:	
  9678                           
  9679                           	psect	text21
  9680  0EAA                     __ptext21:	
  9681 ;; *************** function ___ftdiv *****************
  9682 ;; Defined at:
  9683 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  f2              3    0[BANK0 ] float 
  9686 ;;  f1              3    3[BANK0 ] float 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  f3              3   11[BANK0 ] float 
  9689 ;;  sign            1   15[BANK0 ] unsigned char 
  9690 ;;  exp             1   14[BANK0 ] unsigned char 
  9691 ;;  cntr            1   10[BANK0 ] unsigned char 
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  3    0[BANK0 ] float 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0, pclath, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9701 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;Total ram usage:       16 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    1
  9708 ;; This function calls:
  9709 ;;		___ftpack
  9710 ;; This function is called by:
  9711 ;;		_main
  9712 ;; This function uses a non-reentrant model
  9713 ;;
  9714                           
  9715                           
  9716                           ;psect for function ___ftdiv
  9717  0EAA                     ___ftdiv:	
  9718                           
  9719                           ;incstack = 0
  9720                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9721  0EAA  0020               	movlb	0	; select bank0
  9722  0EAB  0823               	movf	___ftdiv@f1,w
  9723  0EAC  00A6               	movwf	??___ftdiv
  9724  0EAD  0824               	movf	___ftdiv@f1+1,w
  9725  0EAE  00A7               	movwf	??___ftdiv+1
  9726  0EAF  0825               	movf	___ftdiv@f1+2,w
  9727  0EB0  00A8               	movwf	??___ftdiv+2
  9728  0EB1  1003               	clrc
  9729  0EB2  0D27               	rlf	??___ftdiv+1,w
  9730  0EB3  0D28               	rlf	??___ftdiv+2,w
  9731  0EB4  00A9               	movwf	??___ftdiv+3
  9732  0EB5  0829               	movf	??___ftdiv+3,w
  9733  0EB6  00AE               	movwf	___ftdiv@exp
  9734  0EB7  082E               	movf	___ftdiv@exp,w
  9735  0EB8  1D03               	btfss	3,2
  9736  0EB9  2EC1               	goto	l2909
  9737  0EBA  3000               	movlw	0
  9738  0EBB  00A0               	movwf	?___ftdiv
  9739  0EBC  3000               	movlw	0
  9740  0EBD  00A1               	movwf	?___ftdiv+1
  9741  0EBE  3000               	movlw	0
  9742  0EBF  00A2               	movwf	?___ftdiv+2
  9743  0EC0  0008               	return
  9744  0EC1                     l2909:	
  9745  0EC1  0820               	movf	___ftdiv@f2,w
  9746  0EC2  00A6               	movwf	??___ftdiv
  9747  0EC3  0821               	movf	___ftdiv@f2+1,w
  9748  0EC4  00A7               	movwf	??___ftdiv+1
  9749  0EC5  0822               	movf	___ftdiv@f2+2,w
  9750  0EC6  00A8               	movwf	??___ftdiv+2
  9751  0EC7  1003               	clrc
  9752  0EC8  0D27               	rlf	??___ftdiv+1,w
  9753  0EC9  0D28               	rlf	??___ftdiv+2,w
  9754  0ECA  00A9               	movwf	??___ftdiv+3
  9755  0ECB  0829               	movf	??___ftdiv+3,w
  9756  0ECC  00AF               	movwf	___ftdiv@sign
  9757  0ECD  082F               	movf	___ftdiv@sign,w
  9758  0ECE  1D03               	btfss	3,2
  9759  0ECF  2ED7               	goto	l2915
  9760  0ED0  3000               	movlw	0
  9761  0ED1  00A0               	movwf	?___ftdiv
  9762  0ED2  3000               	movlw	0
  9763  0ED3  00A1               	movwf	?___ftdiv+1
  9764  0ED4  3000               	movlw	0
  9765  0ED5  00A2               	movwf	?___ftdiv+2
  9766  0ED6  0008               	return
  9767  0ED7                     l2915:	
  9768  0ED7  3000               	movlw	0
  9769  0ED8  00AB               	movwf	___ftdiv@f3
  9770  0ED9  3000               	movlw	0
  9771  0EDA  00AC               	movwf	___ftdiv@f3+1
  9772  0EDB  3000               	movlw	0
  9773  0EDC  00AD               	movwf	___ftdiv@f3+2
  9774  0EDD  3089               	movlw	137
  9775  0EDE  072F               	addwf	___ftdiv@sign,w
  9776  0EDF  00A6               	movwf	??___ftdiv
  9777  0EE0  0826               	movf	??___ftdiv,w
  9778  0EE1  02AE               	subwf	___ftdiv@exp,f
  9779  0EE2  0823               	movf	___ftdiv@f1,w
  9780  0EE3  00A6               	movwf	??___ftdiv
  9781  0EE4  0824               	movf	___ftdiv@f1+1,w
  9782  0EE5  00A7               	movwf	??___ftdiv+1
  9783  0EE6  0825               	movf	___ftdiv@f1+2,w
  9784  0EE7  00A8               	movwf	??___ftdiv+2
  9785  0EE8  3010               	movlw	16
  9786  0EE9                     u3025:	
  9787  0EE9  36A8               	lsrf	??___ftdiv+2,f
  9788  0EEA  0CA7               	rrf	??___ftdiv+1,f
  9789  0EEB  0CA6               	rrf	??___ftdiv,f
  9790  0EEC  0B89               	decfsz	9,f
  9791  0EED  2EE9               	goto	u3025
  9792  0EEE  0826               	movf	??___ftdiv,w
  9793  0EEF  00A9               	movwf	??___ftdiv+3
  9794  0EF0  0829               	movf	??___ftdiv+3,w
  9795  0EF1  00AF               	movwf	___ftdiv@sign
  9796  0EF2  0820               	movf	___ftdiv@f2,w
  9797  0EF3  00A6               	movwf	??___ftdiv
  9798  0EF4  0821               	movf	___ftdiv@f2+1,w
  9799  0EF5  00A7               	movwf	??___ftdiv+1
  9800  0EF6  0822               	movf	___ftdiv@f2+2,w
  9801  0EF7  00A8               	movwf	??___ftdiv+2
  9802  0EF8  3010               	movlw	16
  9803  0EF9                     u3035:	
  9804  0EF9  36A8               	lsrf	??___ftdiv+2,f
  9805  0EFA  0CA7               	rrf	??___ftdiv+1,f
  9806  0EFB  0CA6               	rrf	??___ftdiv,f
  9807  0EFC  0B89               	decfsz	9,f
  9808  0EFD  2EF9               	goto	u3035
  9809  0EFE  0826               	movf	??___ftdiv,w
  9810  0EFF  00A9               	movwf	??___ftdiv+3
  9811  0F00  0829               	movf	??___ftdiv+3,w
  9812  0F01  06AF               	xorwf	___ftdiv@sign,f
  9813  0F02  3080               	movlw	128
  9814  0F03  00A6               	movwf	??___ftdiv
  9815  0F04  0826               	movf	??___ftdiv,w
  9816  0F05  05AF               	andwf	___ftdiv@sign,f
  9817  0F06  17A4               	bsf	___ftdiv@f1+1,7
  9818  0F07  30FF               	movlw	255
  9819  0F08  05A3               	andwf	___ftdiv@f1,f
  9820  0F09  30FF               	movlw	255
  9821  0F0A  05A4               	andwf	___ftdiv@f1+1,f
  9822  0F0B  3000               	movlw	0
  9823  0F0C  05A5               	andwf	___ftdiv@f1+2,f
  9824  0F0D  17A1               	bsf	___ftdiv@f2+1,7
  9825  0F0E  30FF               	movlw	255
  9826  0F0F  05A0               	andwf	___ftdiv@f2,f
  9827  0F10  30FF               	movlw	255
  9828  0F11  05A1               	andwf	___ftdiv@f2+1,f
  9829  0F12  3000               	movlw	0
  9830  0F13  05A2               	andwf	___ftdiv@f2+2,f
  9831  0F14  3018               	movlw	24
  9832  0F15  00A6               	movwf	??___ftdiv
  9833  0F16  0826               	movf	??___ftdiv,w
  9834  0F17  00AA               	movwf	___ftdiv@cntr
  9835  0F18                     l2929:	
  9836  0F18  3001               	movlw	1
  9837  0F19                     u3045:	
  9838  0F19  35AB               	lslf	___ftdiv@f3,f
  9839  0F1A  0DAC               	rlf	___ftdiv@f3+1,f
  9840  0F1B  0DAD               	rlf	___ftdiv@f3+2,f
  9841  0F1C  0B89               	decfsz	9,f
  9842  0F1D  2F19               	goto	u3045
  9843  0F1E  0822               	movf	___ftdiv@f2+2,w
  9844  0F1F  0225               	subwf	___ftdiv@f1+2,w
  9845  0F20  1D03               	skipz
  9846  0F21  2F28               	goto	u3055
  9847  0F22  0821               	movf	___ftdiv@f2+1,w
  9848  0F23  0224               	subwf	___ftdiv@f1+1,w
  9849  0F24  1D03               	skipz
  9850  0F25  2F28               	goto	u3055
  9851  0F26  0820               	movf	___ftdiv@f2,w
  9852  0F27  0223               	subwf	___ftdiv@f1,w
  9853  0F28                     u3055:	
  9854  0F28  1C03               	skipc
  9855  0F29  2F31               	goto	l2937
  9856  0F2A  0820               	movf	___ftdiv@f2,w
  9857  0F2B  02A3               	subwf	___ftdiv@f1,f
  9858  0F2C  0821               	movf	___ftdiv@f2+1,w
  9859  0F2D  3BA4               	subwfb	___ftdiv@f1+1,f
  9860  0F2E  0822               	movf	___ftdiv@f2+2,w
  9861  0F2F  3BA5               	subwfb	___ftdiv@f1+2,f
  9862  0F30  142B               	bsf	___ftdiv@f3,0
  9863  0F31                     l2937:	
  9864  0F31  3001               	movlw	1
  9865  0F32                     u3065:	
  9866  0F32  35A3               	lslf	___ftdiv@f1,f
  9867  0F33  0DA4               	rlf	___ftdiv@f1+1,f
  9868  0F34  0DA5               	rlf	___ftdiv@f1+2,f
  9869  0F35  0B89               	decfsz	9,f
  9870  0F36  2F32               	goto	u3065
  9871  0F37  3001               	movlw	1
  9872  0F38  02AA               	subwf	___ftdiv@cntr,f
  9873  0F39  1D03               	btfss	3,2
  9874  0F3A  2F18               	goto	l2929
  9875  0F3B  082B               	movf	___ftdiv@f3,w
  9876  0F3C  00F0               	movwf	___ftpack@arg
  9877  0F3D  082C               	movf	___ftdiv@f3+1,w
  9878  0F3E  00F1               	movwf	___ftpack@arg+1
  9879  0F3F  082D               	movf	___ftdiv@f3+2,w
  9880  0F40  00F2               	movwf	___ftpack@arg+2
  9881  0F41  082E               	movf	___ftdiv@exp,w
  9882  0F42  00A6               	movwf	??___ftdiv
  9883  0F43  0826               	movf	??___ftdiv,w
  9884  0F44  00F3               	movwf	___ftpack@exp
  9885  0F45  082F               	movf	___ftdiv@sign,w
  9886  0F46  00A7               	movwf	??___ftdiv+1
  9887  0F47  0827               	movf	??___ftdiv+1,w
  9888  0F48  00F4               	movwf	___ftpack@sign
  9889  0F49  3180  2011         	fcall	___ftpack
  9890  0F4B  0870               	movf	?___ftpack,w
  9891  0F4C  0020               	movlb	0	; select bank0
  9892  0F4D  00A0               	movwf	?___ftdiv
  9893  0F4E  0871               	movf	?___ftpack+1,w
  9894  0F4F  00A1               	movwf	?___ftdiv+1
  9895  0F50  0872               	movf	?___ftpack+2,w
  9896  0F51  00A2               	movwf	?___ftdiv+2
  9897  0F52  0008               	return
  9898  0F53                     __end_of___ftdiv:	
  9899                           
  9900                           	psect	text22
  9901  0011                     __ptext22:	
  9902 ;; *************** function ___ftpack *****************
  9903 ;; Defined at:
  9904 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  arg             3    0[COMMON] unsigned um
  9907 ;;  exp             1    3[COMMON] unsigned char 
  9908 ;;  sign            1    4[COMMON] unsigned char 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  3    0[COMMON] float 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:        8 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		___awtoft
  9930 ;;		___ftadd
  9931 ;;		___ftdiv
  9932 ;;		___ftmul
  9933 ;;		___lbtoft
  9934 ;;		___lwtoft
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           
  9939                           ;psect for function ___ftpack
  9940  0011                     ___ftpack:	
  9941                           
  9942                           ;incstack = 0
  9943                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9944  0011  0873               	movf	___ftpack@exp,w
  9945  0012  1903               	btfsc	3,2
  9946  0013  2819               	goto	l2095
  9947  0014  0872               	movf	___ftpack@arg+2,w
  9948  0015  0471               	iorwf	___ftpack@arg+1,w
  9949  0016  0470               	iorwf	___ftpack@arg,w
  9950  0017  1D03               	skipz
  9951  0018  282A               	goto	l2101
  9952  0019                     l2095:	
  9953  0019  3000               	movlw	0
  9954  001A  00F0               	movwf	?___ftpack
  9955  001B  3000               	movlw	0
  9956  001C  00F1               	movwf	?___ftpack+1
  9957  001D  3000               	movlw	0
  9958  001E  00F2               	movwf	?___ftpack+2
  9959  001F  0008               	return
  9960  0020                     l2099:	
  9961  0020  3001               	movlw	1
  9962  0021  00F5               	movwf	??___ftpack
  9963  0022  0875               	movf	??___ftpack,w
  9964  0023  07F3               	addwf	___ftpack@exp,f
  9965  0024  3001               	movlw	1
  9966  0025                     u1765:	
  9967  0025  36F2               	lsrf	___ftpack@arg+2,f
  9968  0026  0CF1               	rrf	___ftpack@arg+1,f
  9969  0027  0CF0               	rrf	___ftpack@arg,f
  9970  0028  0B89               	decfsz	9,f
  9971  0029  2825               	goto	u1765
  9972  002A                     l2101:	
  9973  002A  30FE               	movlw	254
  9974  002B  0572               	andwf	___ftpack@arg+2,w
  9975  002C  1903               	btfsc	3,2
  9976  002D  2843               	goto	l642
  9977  002E  2820               	goto	l2099
  9978  002F                     l2103:	
  9979  002F  3001               	movlw	1
  9980  0030  00F5               	movwf	??___ftpack
  9981  0031  0875               	movf	??___ftpack,w
  9982  0032  07F3               	addwf	___ftpack@exp,f
  9983  0033  3001               	movlw	1
  9984  0034  07F0               	addwf	___ftpack@arg,f
  9985  0035  3000               	movlw	0
  9986  0036  1803               	skipnc
  9987  0037  3001               	movlw	1
  9988  0038  07F1               	addwf	___ftpack@arg+1,f
  9989  0039  3000               	movlw	0
  9990  003A  1803               	skipnc
  9991  003B  3001               	movlw	1
  9992  003C  07F2               	addwf	___ftpack@arg+2,f
  9993  003D  3001               	movlw	1
  9994  003E                     u1785:	
  9995  003E  36F2               	lsrf	___ftpack@arg+2,f
  9996  003F  0CF1               	rrf	___ftpack@arg+1,f
  9997  0040  0CF0               	rrf	___ftpack@arg,f
  9998  0041  0B89               	decfsz	9,f
  9999  0042  283E               	goto	u1785
 10000  0043                     l642:	
 10001  0043  30FF               	movlw	255
 10002  0044  0572               	andwf	___ftpack@arg+2,w
 10003  0045  1903               	btfsc	3,2
 10004  0046  2850               	goto	l2111
 10005  0047  282F               	goto	l2103
 10006  0048                     l2109:	
 10007  0048  3001               	movlw	1
 10008  0049  02F3               	subwf	___ftpack@exp,f
 10009  004A  3001               	movlw	1
 10010  004B                     u1805:	
 10011  004B  35F0               	lslf	___ftpack@arg,f
 10012  004C  0DF1               	rlf	___ftpack@arg+1,f
 10013  004D  0DF2               	rlf	___ftpack@arg+2,f
 10014  004E  0B89               	decfsz	9,f
 10015  004F  284B               	goto	u1805
 10016  0050                     l2111:	
 10017  0050  1BF1               	btfsc	___ftpack@arg+1,7
 10018  0051  2856               	goto	l649
 10019  0052  3002               	movlw	2
 10020  0053  0273               	subwf	___ftpack@exp,w
 10021  0054  1803               	skipnc
 10022  0055  2848               	goto	l2109
 10023  0056                     l649:	
 10024  0056  1873               	btfsc	___ftpack@exp,0
 10025  0057  285E               	goto	l650
 10026  0058  30FF               	movlw	255
 10027  0059  05F0               	andwf	___ftpack@arg,f
 10028  005A  307F               	movlw	127
 10029  005B  05F1               	andwf	___ftpack@arg+1,f
 10030  005C  30FF               	movlw	255
 10031  005D  05F2               	andwf	___ftpack@arg+2,f
 10032  005E                     l650:	
 10033  005E  1003               	clrc
 10034  005F  0CF3               	rrf	___ftpack@exp,f
 10035  0060  0873               	movf	___ftpack@exp,w
 10036  0061  00F5               	movwf	??___ftpack
 10037  0062  01F6               	clrf	??___ftpack+1
 10038  0063  01F7               	clrf	??___ftpack+2
 10039  0064  3010               	movlw	16
 10040  0065                     u1845:	
 10041  0065  35F5               	lslf	??___ftpack,f
 10042  0066  0DF6               	rlf	??___ftpack+1,f
 10043  0067  0DF7               	rlf	??___ftpack+2,f
 10044  0068  0B89               	decfsz	9,f
 10045  0069  2865               	goto	u1845
 10046  006A  0875               	movf	??___ftpack,w
 10047  006B  04F0               	iorwf	___ftpack@arg,f
 10048  006C  0876               	movf	??___ftpack+1,w
 10049  006D  04F1               	iorwf	___ftpack@arg+1,f
 10050  006E  0877               	movf	??___ftpack+2,w
 10051  006F  04F2               	iorwf	___ftpack@arg+2,f
 10052  0070  0874               	movf	___ftpack@sign,w
 10053  0071  1903               	btfsc	3,2
 10054  0072  0008               	return
 10055  0073  17F2               	bsf	___ftpack@arg+2,7
 10056  0074  0008               	return
 10057  0075                     __end_of___ftpack:	
 10058                           
 10059                           	psect	text23
 10060  0DA1                     __ptext23:	
 10061 ;; *************** function ___aldiv *****************
 10062 ;; Defined at:
 10063 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  divisor         4    0[COMMON] long 
 10066 ;;  dividend        4    4[COMMON] long 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;  quotient        4    2[BANK0 ] long 
 10069 ;;  sign            1    1[BANK0 ] unsigned char 
 10070 ;;  counter         1    0[BANK0 ] unsigned char 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  4    0[COMMON] long 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2, status,0
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10080 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;Total ram usage:       15 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_main
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           
 10094                           ;psect for function ___aldiv
 10095  0DA1                     ___aldiv:	
 10096                           
 10097                           ;incstack = 0
 10098                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10099  0DA1  0020               	movlb	0	; select bank0
 10100  0DA2  01A1               	clrf	___aldiv@sign
 10101  0DA3  1FF3               	btfss	___aldiv@divisor+3,7
 10102  0DA4  2DB2               	goto	l536
 10103  0DA5  09F0               	comf	___aldiv@divisor,f
 10104  0DA6  09F1               	comf	___aldiv@divisor+1,f
 10105  0DA7  09F2               	comf	___aldiv@divisor+2,f
 10106  0DA8  09F3               	comf	___aldiv@divisor+3,f
 10107  0DA9  0AF0               	incf	___aldiv@divisor,f
 10108  0DAA  1903               	skipnz
 10109  0DAB  0AF1               	incf	___aldiv@divisor+1,f
 10110  0DAC  1903               	skipnz
 10111  0DAD  0AF2               	incf	___aldiv@divisor+2,f
 10112  0DAE  1903               	skipnz
 10113  0DAF  0AF3               	incf	___aldiv@divisor+3,f
 10114  0DB0  01A1               	clrf	___aldiv@sign
 10115  0DB1  0AA1               	incf	___aldiv@sign,f
 10116  0DB2                     l536:	
 10117  0DB2  1FF7               	btfss	___aldiv@dividend+3,7
 10118  0DB3  2DC3               	goto	l2873
 10119  0DB4  09F4               	comf	___aldiv@dividend,f
 10120  0DB5  09F5               	comf	___aldiv@dividend+1,f
 10121  0DB6  09F6               	comf	___aldiv@dividend+2,f
 10122  0DB7  09F7               	comf	___aldiv@dividend+3,f
 10123  0DB8  0AF4               	incf	___aldiv@dividend,f
 10124  0DB9  1903               	skipnz
 10125  0DBA  0AF5               	incf	___aldiv@dividend+1,f
 10126  0DBB  1903               	skipnz
 10127  0DBC  0AF6               	incf	___aldiv@dividend+2,f
 10128  0DBD  1903               	skipnz
 10129  0DBE  0AF7               	incf	___aldiv@dividend+3,f
 10130  0DBF  3001               	movlw	1
 10131  0DC0  00F8               	movwf	??___aldiv
 10132  0DC1  0878               	movf	??___aldiv,w
 10133  0DC2  06A1               	xorwf	___aldiv@sign,f
 10134  0DC3                     l2873:	
 10135  0DC3  3000               	movlw	0
 10136  0DC4  00A5               	movwf	___aldiv@quotient+3
 10137  0DC5  3000               	movlw	0
 10138  0DC6  00A4               	movwf	___aldiv@quotient+2
 10139  0DC7  3000               	movlw	0
 10140  0DC8  00A3               	movwf	___aldiv@quotient+1
 10141  0DC9  3000               	movlw	0
 10142  0DCA  00A2               	movwf	___aldiv@quotient
 10143  0DCB  0873               	movf	___aldiv@divisor+3,w
 10144  0DCC  0472               	iorwf	___aldiv@divisor+2,w
 10145  0DCD  0471               	iorwf	___aldiv@divisor+1,w
 10146  0DCE  0470               	iorwf	___aldiv@divisor,w
 10147  0DCF  1903               	skipnz
 10148  0DD0  2E0C               	goto	l2895
 10149  0DD1  01A0               	clrf	___aldiv@counter
 10150  0DD2  0AA0               	incf	___aldiv@counter,f
 10151  0DD3                     l2881:	
 10152  0DD3  1BF3               	btfsc	___aldiv@divisor+3,7
 10153  0DD4  2DE1               	goto	l2883
 10154  0DD5  3001               	movlw	1
 10155  0DD6                     u2935:	
 10156  0DD6  35F0               	lslf	___aldiv@divisor,f
 10157  0DD7  0DF1               	rlf	___aldiv@divisor+1,f
 10158  0DD8  0DF2               	rlf	___aldiv@divisor+2,f
 10159  0DD9  0DF3               	rlf	___aldiv@divisor+3,f
 10160  0DDA  0B89               	decfsz	9,f
 10161  0DDB  2DD6               	goto	u2935
 10162  0DDC  3001               	movlw	1
 10163  0DDD  00F8               	movwf	??___aldiv
 10164  0DDE  0878               	movf	??___aldiv,w
 10165  0DDF  07A0               	addwf	___aldiv@counter,f
 10166  0DE0  2DD3               	goto	l2881
 10167  0DE1                     l2883:	
 10168  0DE1  3001               	movlw	1
 10169  0DE2                     u2955:	
 10170  0DE2  35A2               	lslf	___aldiv@quotient,f
 10171  0DE3  0DA3               	rlf	___aldiv@quotient+1,f
 10172  0DE4  0DA4               	rlf	___aldiv@quotient+2,f
 10173  0DE5  0DA5               	rlf	___aldiv@quotient+3,f
 10174  0DE6  0B89               	decfsz	9,f
 10175  0DE7  2DE2               	goto	u2955
 10176  0DE8  0873               	movf	___aldiv@divisor+3,w
 10177  0DE9  0277               	subwf	___aldiv@dividend+3,w
 10178  0DEA  1D03               	skipz
 10179  0DEB  2DF6               	goto	u2965
 10180  0DEC  0872               	movf	___aldiv@divisor+2,w
 10181  0DED  0276               	subwf	___aldiv@dividend+2,w
 10182  0DEE  1D03               	skipz
 10183  0DEF  2DF6               	goto	u2965
 10184  0DF0  0871               	movf	___aldiv@divisor+1,w
 10185  0DF1  0275               	subwf	___aldiv@dividend+1,w
 10186  0DF2  1D03               	skipz
 10187  0DF3  2DF6               	goto	u2965
 10188  0DF4  0870               	movf	___aldiv@divisor,w
 10189  0DF5  0274               	subwf	___aldiv@dividend,w
 10190  0DF6                     u2965:	
 10191  0DF6  1C03               	skipc
 10192  0DF7  2E01               	goto	l2891
 10193  0DF8  0870               	movf	___aldiv@divisor,w
 10194  0DF9  02F4               	subwf	___aldiv@dividend,f
 10195  0DFA  0871               	movf	___aldiv@divisor+1,w
 10196  0DFB  3BF5               	subwfb	___aldiv@dividend+1,f
 10197  0DFC  0872               	movf	___aldiv@divisor+2,w
 10198  0DFD  3BF6               	subwfb	___aldiv@dividend+2,f
 10199  0DFE  0873               	movf	___aldiv@divisor+3,w
 10200  0DFF  3BF7               	subwfb	___aldiv@dividend+3,f
 10201  0E00  1422               	bsf	___aldiv@quotient,0
 10202  0E01                     l2891:	
 10203  0E01  3001               	movlw	1
 10204  0E02                     u2975:	
 10205  0E02  36F3               	lsrf	___aldiv@divisor+3,f
 10206  0E03  0CF2               	rrf	___aldiv@divisor+2,f
 10207  0E04  0CF1               	rrf	___aldiv@divisor+1,f
 10208  0E05  0CF0               	rrf	___aldiv@divisor,f
 10209  0E06  0B89               	decfsz	9,f
 10210  0E07  2E02               	goto	u2975
 10211  0E08  3001               	movlw	1
 10212  0E09  02A0               	subwf	___aldiv@counter,f
 10213  0E0A  1D03               	btfss	3,2
 10214  0E0B  2DE1               	goto	l2883
 10215  0E0C                     l2895:	
 10216  0E0C  0821               	movf	___aldiv@sign,w
 10217  0E0D  1903               	btfsc	3,2
 10218  0E0E  2E1A               	goto	l2899
 10219  0E0F  09A2               	comf	___aldiv@quotient,f
 10220  0E10  09A3               	comf	___aldiv@quotient+1,f
 10221  0E11  09A4               	comf	___aldiv@quotient+2,f
 10222  0E12  09A5               	comf	___aldiv@quotient+3,f
 10223  0E13  0AA2               	incf	___aldiv@quotient,f
 10224  0E14  1903               	skipnz
 10225  0E15  0AA3               	incf	___aldiv@quotient+1,f
 10226  0E16  1903               	skipnz
 10227  0E17  0AA4               	incf	___aldiv@quotient+2,f
 10228  0E18  1903               	skipnz
 10229  0E19  0AA5               	incf	___aldiv@quotient+3,f
 10230  0E1A                     l2899:	
 10231  0E1A  0825               	movf	___aldiv@quotient+3,w
 10232  0E1B  00F3               	movwf	?___aldiv+3
 10233  0E1C  0824               	movf	___aldiv@quotient+2,w
 10234  0E1D  00F2               	movwf	?___aldiv+2
 10235  0E1E  0823               	movf	___aldiv@quotient+1,w
 10236  0E1F  00F1               	movwf	?___aldiv+1
 10237  0E20  0822               	movf	___aldiv@quotient,w
 10238  0E21  00F0               	movwf	?___aldiv
 10239  0E22  0008               	return
 10240  0E23                     __end_of___aldiv:	
 10241                           
 10242                           	psect	text24
 10243  0BA7                     __ptext24:	
 10244 ;; *************** function _SYSTEM_Initialize *****************
 10245 ;; Defined at:
 10246 ;;		line 37 in file "system.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;		None
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;Total ram usage:        2 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    3
 10267 ;; This function calls:
 10268 ;;		_ADCC_Initialize
 10269 ;;		_InitCustomChars
 10270 ;;		_Init_PID
 10271 ;;		_LCD_Clear
 10272 ;;		_LCD_Init
 10273 ;;		_OSCILLATOR_Initialize
 10274 ;;		_PIN_MANAGER_Initialize
 10275 ;;		_PWM6_Initialize
 10276 ;;		_TMR0_Initialize
 10277 ;;		_TMR2_Initialize
 10278 ;; This function is called by:
 10279 ;;		_main
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           
 10284                           ;psect for function _SYSTEM_Initialize
 10285  0BA7                     _SYSTEM_Initialize:	
 10286                           
 10287                           ;system.c: 40: PIN_MANAGER_Initialize();
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10291  0BA7  318A  2246  318B   	fcall	_PIN_MANAGER_Initialize
 10292                           
 10293                           ;system.c: 41: OSCILLATOR_Initialize();
 10294  0BAA  3188  2071  318B   	fcall	_OSCILLATOR_Initialize
 10295                           
 10296                           ;system.c: 42: FVRCON = 0x00;
 10297  0BAD  0032               	movlb	18	; select bank18
 10298  0BAE  018C               	clrf	12	;volatile
 10299                           
 10300                           ;system.c: 43: ADCC_Initialize();
 10301  0BAF  3189  2118  318B   	fcall	_ADCC_Initialize
 10302                           
 10303                           ;system.c: 44: PWM6_Initialize();
 10304  0BB2  3180  2004  318B   	fcall	_PWM6_Initialize
 10305                           
 10306                           ;system.c: 45: TMR0_Initialize();
 10307  0BB5  3188  20A7  318B   	fcall	_TMR0_Initialize
 10308                           
 10309                           ;system.c: 46: TMR2_Initialize();
 10310  0BB8  3188  20B6  318B   	fcall	_TMR2_Initialize
 10311                           
 10312                           ;system.c: 47: LCD_Init(0X00);
 10313  0BBB  3000               	movlw	0
 10314  0BBC  318C  24A5  318B   	fcall	_LCD_Init
 10315                           
 10316                           ;system.c: 48: _delay((unsigned long)((200)*(1000000/4000.0)));
 10317  0BBF  3041               	movlw	65
 10318  0BC0  00FB               	movwf	??_SYSTEM_Initialize+1
 10319  0BC1  30EE               	movlw	238
 10320  0BC2  00FA               	movwf	??_SYSTEM_Initialize
 10321  0BC3                     u3417:	
 10322  0BC3  0BFA               	decfsz	??_SYSTEM_Initialize,f
 10323  0BC4  2BC3               	goto	u3417
 10324  0BC5  0BFB               	decfsz	??_SYSTEM_Initialize+1,f
 10325  0BC6  2BC3               	goto	u3417
 10326  0BC7  0000               	nop
 10327                           
 10328                           ;system.c: 49: LCD_Clear();
 10329  0BC8  3188  2069  318B   	fcall	_LCD_Clear
 10330                           
 10331                           ;system.c: 50: _delay((unsigned long)((100)*(1000000/4000.0)));
 10332  0BCB  3021               	movlw	33
 10333  0BCC  00FB               	movwf	??_SYSTEM_Initialize+1
 10334  0BCD  3076               	movlw	118
 10335  0BCE  00FA               	movwf	??_SYSTEM_Initialize
 10336  0BCF                     u3427:	
 10337  0BCF  0BFA               	decfsz	??_SYSTEM_Initialize,f
 10338  0BD0  2BCF               	goto	u3427
 10339  0BD1  0BFB               	decfsz	??_SYSTEM_Initialize+1,f
 10340  0BD2  2BCF               	goto	u3427
 10341  0BD3  0000               	nop
 10342                           
 10343                           ;system.c: 51: InitCustomChars();
 10344  0BD4  3189  21F7  318B   	fcall	_InitCustomChars
 10345                           
 10346                           ;system.c: 52: _delay((unsigned long)((200)*(1000000/4000.0)));
 10347  0BD7  3041               	movlw	65
 10348  0BD8  00FB               	movwf	??_SYSTEM_Initialize+1
 10349  0BD9  30EE               	movlw	238
 10350  0BDA  00FA               	movwf	??_SYSTEM_Initialize
 10351  0BDB                     u3437:	
 10352  0BDB  0BFA               	decfsz	??_SYSTEM_Initialize,f
 10353  0BDC  2BDB               	goto	u3437
 10354  0BDD  0BFB               	decfsz	??_SYSTEM_Initialize+1,f
 10355  0BDE  2BDB               	goto	u3437
 10356  0BDF  0000               	nop
 10357                           
 10358                           ;system.c: 53: Init_PID(1, 1, 1, 0, 1023);
 10359  0BE0  3001               	movlw	1
 10360  0BE1  00F0               	movwf	Init_PID@Kp
 10361  0BE2  3000               	movlw	0
 10362  0BE3  00F1               	movwf	Init_PID@Kp+1
 10363  0BE4  3001               	movlw	1
 10364  0BE5  00F2               	movwf	Init_PID@Ki
 10365  0BE6  3000               	movlw	0
 10366  0BE7  00F3               	movwf	Init_PID@Ki+1
 10367  0BE8  01F4               	clrf	Init_PID@Kd
 10368  0BE9  0AF4               	incf	Init_PID@Kd,f
 10369  0BEA  3000               	movlw	0
 10370  0BEB  00F5               	movwf	Init_PID@minOutput
 10371  0BEC  00F6               	movwf	Init_PID@minOutput+1
 10372  0BED  30FF               	movlw	255
 10373  0BEE  00F7               	movwf	Init_PID@maxOutput
 10374  0BEF  3003               	movlw	3
 10375  0BF0  00F8               	movwf	Init_PID@maxOutput+1
 10376  0BF1  3189  2180         	fcall	_Init_PID
 10377  0BF3  0008               	return
 10378  0BF4                     __end_of_SYSTEM_Initialize:	
 10379                           
 10380                           	psect	text25
 10381  08B6                     __ptext25:	
 10382 ;; *************** function _TMR2_Initialize *****************
 10383 ;; Defined at:
 10384 ;;		line 21 in file "timers.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		wreg, status,2
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;Total ram usage:        0 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; This function calls:
 10405 ;;		Nothing
 10406 ;; This function is called by:
 10407 ;;		_SYSTEM_Initialize
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           
 10412                           ;psect for function _TMR2_Initialize
 10413  08B6                     _TMR2_Initialize:	
 10414                           
 10415                           ;timers.c: 23: T2CON = 0x7F;
 10416                           
 10417                           ;incstack = 0
 10418                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10419  08B6  307F               	movlw	127
 10420  08B7  0025               	movlb	5	; select bank5
 10421  08B8  008E               	movwf	14	;volatile
 10422                           
 10423                           ;timers.c: 25: T2CLKCON = 0x01;
 10424  08B9  3001               	movlw	1
 10425  08BA  0090               	movwf	16	;volatile
 10426                           
 10427                           ;timers.c: 27: T2HLT = 0x00;
 10428  08BB  018F               	clrf	15	;volatile
 10429                           
 10430                           ;timers.c: 29: T2RST = 0x00;
 10431  08BC  0191               	clrf	17	;volatile
 10432                           
 10433                           ;timers.c: 31: T2PR = 0xFF;
 10434  08BD  30FF               	movlw	255
 10435  08BE  008D               	movwf	13	;volatile
 10436                           
 10437                           ;timers.c: 33: T2TMR = 0x00;
 10438  08BF  018C               	clrf	12	;volatile
 10439                           
 10440                           ;timers.c: 35: PIR4bits.TMR2IF = 0;
 10441  08C0  002E               	movlb	14	; select bank14
 10442  08C1  1090               	bcf	16,1	;volatile
 10443                           
 10444                           ;timers.c: 37: T2CONbits.TMR2ON = 1;
 10445  08C2  0025               	movlb	5	; select bank5
 10446  08C3  178E               	bsf	14,7	;volatile
 10447  08C4  0008               	return
 10448  08C5                     __end_of_TMR2_Initialize:	
 10449                           
 10450                           	psect	text26
 10451  08A7                     __ptext26:	
 10452 ;; *************** function _TMR0_Initialize *****************
 10453 ;; Defined at:
 10454 ;;		line 3 in file "timers.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;		None
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;		None
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;Total ram usage:        0 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_SYSTEM_Initialize
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           
 10482                           ;psect for function _TMR0_Initialize
 10483  08A7                     _TMR0_Initialize:	
 10484                           
 10485                           ;timers.c: 5: T0CON0 = 0x10;
 10486                           
 10487                           ;incstack = 0
 10488                           ; Regs used in _TMR0_Initialize: [wreg]
 10489  08A7  3010               	movlw	16
 10490  08A8  0020               	movlb	0	; select bank0
 10491  08A9  009E               	movwf	30	;volatile
 10492                           
 10493                           ;timers.c: 7: T0CON1 = 0x42;
 10494  08AA  3042               	movlw	66
 10495  08AB  009F               	movwf	31	;volatile
 10496                           
 10497                           ;timers.c: 9: TMR0H = 0x24;
 10498  08AC  3024               	movlw	36
 10499  08AD  009D               	movwf	29	;volatile
 10500                           
 10501                           ;timers.c: 11: TMR0L = 0x9F;
 10502  08AE  309F               	movlw	159
 10503  08AF  009C               	movwf	28	;volatile
 10504                           
 10505                           ;timers.c: 13: PIE0bits.TMR0IE = 1;
 10506  08B0  002E               	movlb	14	; select bank14
 10507  08B1  1696               	bsf	22,5	;volatile
 10508                           
 10509                           ;timers.c: 15: PIR0bits.TMR0IF = 0;
 10510  08B2  128C               	bcf	12,5	;volatile
 10511                           
 10512                           ;timers.c: 17: T0CON0bits.T0EN = 1;
 10513  08B3  0020               	movlb	0	; select bank0
 10514  08B4  179E               	bsf	30,7	;volatile
 10515  08B5  0008               	return
 10516  08B6                     __end_of_TMR0_Initialize:	
 10517                           
 10518                           	psect	text27
 10519  0004                     __ptext27:	
 10520 ;; *************** function _PWM6_Initialize *****************
 10521 ;; Defined at:
 10522 ;;		line 4 in file "pwm6.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_SYSTEM_Initialize
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           
 10550                           ;psect for function _PWM6_Initialize
 10551  0004                     _PWM6_Initialize:	
 10552                           
 10553                           ;pwm6.c: 6: PWM6CON = 0x80;
 10554                           
 10555                           ;incstack = 0
 10556                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10557  0004  3080               	movlw	128
 10558  0005  0027               	movlb	7	; select bank7
 10559  0006  008E               	movwf	14	;volatile
 10560                           
 10561                           ;pwm6.c: 8: PWM6DCH = 0xFF;
 10562  0007  30FF               	movlw	255
 10563  0008  008D               	movwf	13	;volatile
 10564                           
 10565                           ;pwm6.c: 10: PWM6DCL = 0xC0;
 10566  0009  30C0               	movlw	192
 10567  000A  008C               	movwf	12	;volatile
 10568                           
 10569                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
 10570  000B  0024               	movlb	4	; select bank4
 10571  000C  081F               	movf	31,w	;volatile
 10572  000D  39F3               	andlw	-13
 10573  000E  3804               	iorlw	4
 10574  000F  009F               	movwf	31	;volatile
 10575  0010  0008               	return
 10576  0011                     __end_of_PWM6_Initialize:	
 10577                           
 10578                           	psect	text28
 10579  0A46                     __ptext28:	
 10580 ;; *************** function _PIN_MANAGER_Initialize *****************
 10581 ;; Defined at:
 10582 ;;		line 5 in file "pin_manager.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  state           1    0[COMMON] unsigned char 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;Total ram usage:        1 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_SYSTEM_Initialize
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function _PIN_MANAGER_Initialize
 10611  0A46                     _PIN_MANAGER_Initialize:	
 10612                           
 10613                           ;pin_manager.c: 7: LATA = 0x00;
 10614                           
 10615                           ;incstack = 0
 10616                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10617  0A46  0020               	movlb	0	; select bank0
 10618  0A47  0196               	clrf	22	;volatile
 10619                           
 10620                           ;pin_manager.c: 8: LATB = 0x0;
 10621  0A48  0197               	clrf	23	;volatile
 10622                           
 10623                           ;pin_manager.c: 9: LATC = 0x0;
 10624  0A49  0198               	clrf	24	;volatile
 10625                           
 10626                           ;pin_manager.c: 11: WPUA = 0x18;
 10627  0A4A  3018               	movlw	24
 10628  0A4B  003E               	movlb	30	; select bank30
 10629  0A4C  00B9               	movwf	57	;volatile
 10630                           
 10631                           ;pin_manager.c: 12: WPUB = 0x00;
 10632  0A4D  01C4               	clrf	68	;volatile
 10633                           
 10634                           ;pin_manager.c: 13: WPUC = 0x00;
 10635  0A4E  01CF               	clrf	79	;volatile
 10636                           
 10637                           ;pin_manager.c: 14: WPUE = 0x8;
 10638  0A4F  3008               	movlw	8
 10639  0A50  00E5               	movwf	101	;volatile
 10640                           
 10641                           ;pin_manager.c: 16: TRISA = 0x1C;
 10642  0A51  301C               	movlw	28
 10643  0A52  0020               	movlb	0	; select bank0
 10644  0A53  0091               	movwf	17	;volatile
 10645                           
 10646                           ;pin_manager.c: 17: TRISB = 0x00;
 10647  0A54  0192               	clrf	18	;volatile
 10648                           
 10649                           ;pin_manager.c: 18: TRISC = 0x10;
 10650  0A55  3010               	movlw	16
 10651  0A56  0093               	movwf	19	;volatile
 10652                           
 10653                           ;pin_manager.c: 20: ANSELA = 0x04;
 10654  0A57  3004               	movlw	4
 10655  0A58  003E               	movlb	30	; select bank30
 10656  0A59  00B8               	movwf	56	;volatile
 10657                           
 10658                           ;pin_manager.c: 21: ANSELB = 0x00;
 10659  0A5A  01C3               	clrf	67	;volatile
 10660                           
 10661                           ;pin_manager.c: 22: ANSELC = 0x00;
 10662  0A5B  01CE               	clrf	78	;volatile
 10663                           
 10664                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 10665  0A5C  002E               	movlb	14	; select bank14
 10666  0A5D  1216               	bcf	22,4	;volatile
 10667                           
 10668                           ;pin_manager.c: 25: bool state = GIE;
 10669  0A5E  3000               	movlw	0
 10670  0A5F  1B8B               	btfsc	11,7	;volatile
 10671  0A60  3001               	movlw	1
 10672  0A61  00F0               	movwf	PIN_MANAGER_Initialize@state
 10673                           
 10674                           ;pin_manager.c: 26: GIE = 0;
 10675  0A62  138B               	bcf	11,7	;volatile
 10676                           
 10677                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 10678  0A63  3055               	movlw	85
 10679  0A64  003D               	movlb	29	; select bank29
 10680  0A65  008F               	movwf	15	;volatile
 10681                           
 10682                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 10683  0A66  30AA               	movlw	170
 10684  0A67  008F               	movwf	15	;volatile
 10685                           
 10686                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 10687  0A68  100F               	bcf	15,0	;volatile
 10688                           
 10689                           ;pin_manager.c: 32: RA1PPS = 0x000E;
 10690  0A69  300E               	movlw	14
 10691  0A6A  003E               	movlb	30	; select bank30
 10692  0A6B  0091               	movwf	17	;volatile
 10693                           
 10694                           ;pin_manager.c: 36: PPSLOCK = 0x55;
 10695  0A6C  3055               	movlw	85
 10696  0A6D  003D               	movlb	29	; select bank29
 10697  0A6E  008F               	movwf	15	;volatile
 10698                           
 10699                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
 10700  0A6F  30AA               	movlw	170
 10701  0A70  008F               	movwf	15	;volatile
 10702                           
 10703                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
 10704  0A71  140F               	bsf	15,0	;volatile
 10705                           
 10706                           ;pin_manager.c: 39: GIE = state;
 10707  0A72  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10708  0A73  2A76               	goto	u2600
 10709  0A74  178B               	bsf	11,7	;volatile
 10710  0A75  0008               	return
 10711  0A76                     u2600:	
 10712  0A76  138B               	bcf	11,7	;volatile
 10713  0A77  0008               	return
 10714  0A78                     __end_of_PIN_MANAGER_Initialize:	
 10715                           
 10716                           	psect	text29
 10717  0871                     __ptext29:	
 10718 ;; *************** function _OSCILLATOR_Initialize *****************
 10719 ;; Defined at:
 10720 ;;		line 56 in file "system.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;		None
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      void 
 10727 ;; Registers used:
 10728 ;;		wreg, status,2
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;Total ram usage:        0 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_SYSTEM_Initialize
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           
 10748                           ;psect for function _OSCILLATOR_Initialize
 10749  0871                     _OSCILLATOR_Initialize:	
 10750                           
 10751                           ;system.c: 82: OSCCON1 = 0x60;
 10752                           
 10753                           ;incstack = 0
 10754                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10755  0871  3060               	movlw	96
 10756  0872  0031               	movlb	17	; select bank17
 10757  0873  008D               	movwf	13	;volatile
 10758                           
 10759                           ;system.c: 84: OSCCON3 = 0x00;
 10760  0874  018F               	clrf	15	;volatile
 10761                           
 10762                           ;system.c: 86: OSCEN = 0x00;
 10763  0875  0191               	clrf	17	;volatile
 10764                           
 10765                           ;system.c: 88: OSCFRQ = 0x00;
 10766  0876  0193               	clrf	19	;volatile
 10767                           
 10768                           ;system.c: 90: OSCTUNE = 0x00;
 10769  0877  0192               	clrf	18	;volatile
 10770  0878  0008               	return
 10771  0879                     __end_of_OSCILLATOR_Initialize:	
 10772                           
 10773                           	psect	text30
 10774  0CA5                     __ptext30:	
 10775 ;; *************** function _LCD_Init *****************
 10776 ;; Defined at:
 10777 ;;		line 154 in file "lcd.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  style           1    wreg     unsigned char 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  style           1    5[COMMON] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0, pclath, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        3 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    2
 10798 ;; This function calls:
 10799 ;;		_LCD_Cmd
 10800 ;;		_LCD_Port
 10801 ;; This function is called by:
 10802 ;;		_SYSTEM_Initialize
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _LCD_Init
 10808  0CA5                     _LCD_Init:	
 10809                           
 10810                           ;incstack = 0
 10811                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10812                           ;LCD_Init@style stored from wreg
 10813  0CA5  00F5               	movwf	LCD_Init@style
 10814                           
 10815                           ;lcd.c: 156: LCD_Port(0x00);
 10816  0CA6  3000               	movlw	0
 10817  0CA7  3189  2100  318C   	fcall	_LCD_Port
 10818                           
 10819                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
 10820  0CAA  3021               	movlw	33
 10821  0CAB  00F4               	movwf	??_LCD_Init+1
 10822  0CAC  3076               	movlw	118
 10823  0CAD  00F3               	movwf	??_LCD_Init
 10824  0CAE                     u3447:	
 10825  0CAE  0BF3               	decfsz	??_LCD_Init,f
 10826  0CAF  2CAE               	goto	u3447
 10827  0CB0  0BF4               	decfsz	??_LCD_Init+1,f
 10828  0CB1  2CAE               	goto	u3447
 10829  0CB2  0000               	nop
 10830                           
 10831                           ;lcd.c: 160: LCD_Cmd(0x03);
 10832  0CB3  3003               	movlw	3
 10833  0CB4  3188  20C5  318C   	fcall	_LCD_Cmd
 10834                           
 10835                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
 10836  0CB7  3004               	movlw	4
 10837  0CB8  00F4               	movwf	??_LCD_Init+1
 10838  0CB9  303D               	movlw	61
 10839  0CBA  00F3               	movwf	??_LCD_Init
 10840  0CBB                     u3457:	
 10841  0CBB  0BF3               	decfsz	??_LCD_Init,f
 10842  0CBC  2CBB               	goto	u3457
 10843  0CBD  0BF4               	decfsz	??_LCD_Init+1,f
 10844  0CBE  2CBB               	goto	u3457
 10845  0CBF  3200               	nop2
 10846                           
 10847                           ;lcd.c: 164: LCD_Cmd(0x03);
 10848  0CC0  3003               	movlw	3
 10849  0CC1  3188  20C5  318C   	fcall	_LCD_Cmd
 10850                           
 10851                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10852  0CC4  3009               	movlw	9
 10853  0CC5  00F3               	movwf	??_LCD_Init
 10854  0CC6                     u3467:	
 10855  0CC6  0BF3               	decfsz	??_LCD_Init,f
 10856  0CC7  2CC6               	goto	u3467
 10857  0CC8  3200               	nop2	;nop
 10858                           
 10859                           ;lcd.c: 168: LCD_Cmd(0x03);
 10860  0CC9  3003               	movlw	3
 10861  0CCA  3188  20C5  318C   	fcall	_LCD_Cmd
 10862                           
 10863                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10864  0CCD  3009               	movlw	9
 10865  0CCE  00F3               	movwf	??_LCD_Init
 10866  0CCF                     u3477:	
 10867  0CCF  0BF3               	decfsz	??_LCD_Init,f
 10868  0CD0  2CCF               	goto	u3477
 10869  0CD1  3200               	nop2	;nop
 10870                           
 10871                           ;lcd.c: 172: LCD_Cmd(0x02);
 10872  0CD2  3002               	movlw	2
 10873  0CD3  3188  20C5  318C   	fcall	_LCD_Cmd
 10874                           
 10875                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10876  0CD6  3009               	movlw	9
 10877  0CD7  00F3               	movwf	??_LCD_Init
 10878  0CD8                     u3487:	
 10879  0CD8  0BF3               	decfsz	??_LCD_Init,f
 10880  0CD9  2CD8               	goto	u3487
 10881  0CDA  3200               	nop2	;nop
 10882                           
 10883                           ;lcd.c: 176: LCD_Cmd(0x2);
 10884  0CDB  3002               	movlw	2
 10885  0CDC  3188  20C5  318C   	fcall	_LCD_Cmd
 10886                           
 10887                           ;lcd.c: 178: LCD_Cmd(0x8);
 10888  0CDF  3008               	movlw	8
 10889  0CE0  3188  20C5  318C   	fcall	_LCD_Cmd
 10890                           
 10891                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10892  0CE3  3009               	movlw	9
 10893  0CE4  00F3               	movwf	??_LCD_Init
 10894  0CE5                     u3497:	
 10895  0CE5  0BF3               	decfsz	??_LCD_Init,f
 10896  0CE6  2CE5               	goto	u3497
 10897  0CE7  3200               	nop2	;nop
 10898                           
 10899                           ;lcd.c: 182: LCD_Cmd(0x0);
 10900  0CE8  3000               	movlw	0
 10901  0CE9  3188  20C5  318C   	fcall	_LCD_Cmd
 10902                           
 10903                           ;lcd.c: 184: LCD_Cmd(0x8);
 10904  0CEC  3008               	movlw	8
 10905  0CED  3188  20C5  318C   	fcall	_LCD_Cmd
 10906                           
 10907                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10908  0CF0  3009               	movlw	9
 10909  0CF1  00F3               	movwf	??_LCD_Init
 10910  0CF2                     u3507:	
 10911  0CF2  0BF3               	decfsz	??_LCD_Init,f
 10912  0CF3  2CF2               	goto	u3507
 10913  0CF4  3200               	nop2	;nop
 10914                           
 10915                           ;lcd.c: 188: LCD_Cmd(0x0);
 10916  0CF5  3000               	movlw	0
 10917  0CF6  3188  20C5  318C   	fcall	_LCD_Cmd
 10918                           
 10919                           ;lcd.c: 190: LCD_Cmd(0x1);
 10920  0CF9  3001               	movlw	1
 10921  0CFA  3188  20C5  318C   	fcall	_LCD_Cmd
 10922                           
 10923                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
 10924  0CFD  30F9               	movlw	249
 10925  0CFE  00F3               	movwf	??_LCD_Init
 10926  0CFF                     u3517:	
 10927  0CFF  3200               	nop2
 10928  0D00  0BF3               	decfsz	??_LCD_Init,f
 10929  0D01  2CFF               	goto	u3517
 10930  0D02  3200               	nop2	;nop
 10931  0D03  3200               	nop2	;nop
 10932                           
 10933                           ;lcd.c: 194: LCD_Cmd(0x0);
 10934  0D04  3000               	movlw	0
 10935  0D05  3188  20C5  318C   	fcall	_LCD_Cmd
 10936                           
 10937                           ;lcd.c: 196: LCD_Cmd(0x6);
 10938  0D08  3006               	movlw	6
 10939  0D09  3188  20C5  318C   	fcall	_LCD_Cmd
 10940                           
 10941                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10942  0D0C  3009               	movlw	9
 10943  0D0D  00F3               	movwf	??_LCD_Init
 10944  0D0E                     u3527:	
 10945  0D0E  0BF3               	decfsz	??_LCD_Init,f
 10946  0D0F  2D0E               	goto	u3527
 10947  0D10  3200               	nop2	;nop
 10948                           
 10949                           ;lcd.c: 200: LCD_Cmd(0x0);
 10950  0D11  3000               	movlw	0
 10951  0D12  3188  20C5  318C   	fcall	_LCD_Cmd
 10952                           
 10953                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10954  0D15  0875               	movf	LCD_Init@style,w
 10955  0D16  380C               	iorlw	12
 10956  0D17  3188  20C5  318C   	fcall	_LCD_Cmd
 10957                           
 10958                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
 10959  0D1A  3009               	movlw	9
 10960  0D1B  00F3               	movwf	??_LCD_Init
 10961  0D1C                     u3537:	
 10962  0D1C  0BF3               	decfsz	??_LCD_Init,f
 10963  0D1D  2D1C               	goto	u3537
 10964  0D1E  3200               	nop2	;nop
 10965  0D1F  0008               	return
 10966  0D20                     __end_of_LCD_Init:	
 10967                           
 10968                           	psect	text31
 10969  0869                     __ptext31:	
 10970 ;; *************** function _LCD_Clear *****************
 10971 ;; Defined at:
 10972 ;;		line 75 in file "lcd.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      void 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0, pclath, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        0 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    2
 10993 ;; This function calls:
 10994 ;;		_LCD_Cmd
 10995 ;; This function is called by:
 10996 ;;		_SYSTEM_Initialize
 10997 ;;		_tempSetpoint
 10998 ;;		_readButtons
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           
 11003                           ;psect for function _LCD_Clear
 11004  0869                     _LCD_Clear:	
 11005                           
 11006                           ;lcd.c: 77: LCD_Cmd(0);
 11007                           
 11008                           ;incstack = 0
 11009                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 11010  0869  3000               	movlw	0
 11011  086A  3188  20C5  3188   	fcall	_LCD_Cmd
 11012                           
 11013                           ;lcd.c: 78: LCD_Cmd(1);
 11014  086D  3001               	movlw	1
 11015  086E  3188  20C5         	fcall	_LCD_Cmd
 11016  0870  0008               	return
 11017  0871                     __end_of_LCD_Clear:	
 11018                           
 11019                           	psect	text32
 11020  0980                     __ptext32:	
 11021 ;; *************** function _Init_PID *****************
 11022 ;; Defined at:
 11023 ;;		line 41 in file "PID_Lib.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  Kp              2    0[COMMON] int 
 11026 ;;  Ki              2    2[COMMON] int 
 11027 ;;  Kd              1    4[COMMON] unsigned char 
 11028 ;;  minOutput       2    5[COMMON] int 
 11029 ;;  maxOutput       2    7[COMMON] int 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      void 
 11034 ;; Registers used:
 11035 ;;		wreg, status,2
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11041 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;Total ram usage:       10 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_SYSTEM_Initialize
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           
 11055                           ;psect for function _Init_PID
 11056  0980                     _Init_PID:	
 11057                           
 11058                           ;PID_Lib.c: 43: PID_Kp = Kp;
 11059                           
 11060                           ;incstack = 0
 11061                           ; Regs used in _Init_PID: [wreg+status,2]
 11062  0980  0871               	movf	Init_PID@Kp+1,w
 11063  0981  0020               	movlb	0	; select bank0
 11064  0982  00DD               	movwf	_PID_Kp+1
 11065  0983  0870               	movf	Init_PID@Kp,w
 11066  0984  00DC               	movwf	_PID_Kp
 11067                           
 11068                           ;PID_Lib.c: 44: PID_Ki = Ki;
 11069  0985  0873               	movf	Init_PID@Ki+1,w
 11070  0986  00DB               	movwf	_PID_Ki+1
 11071  0987  0872               	movf	Init_PID@Ki,w
 11072  0988  00DA               	movwf	_PID_Ki
 11073                           
 11074                           ;PID_Lib.c: 45: PID_Kd = Kd;
 11075  0989  0874               	movf	Init_PID@Kd,w
 11076  098A  00F9               	movwf	??_Init_PID
 11077  098B  0879               	movf	??_Init_PID,w
 11078  098C  00E7               	movwf	_PID_Kd
 11079                           
 11080                           ;PID_Lib.c: 46: PID_MinOutput = minOutput;
 11081  098D  0876               	movf	Init_PID@minOutput+1,w
 11082  098E  00E1               	movwf	_PID_MinOutput+1
 11083  098F  0875               	movf	Init_PID@minOutput,w
 11084  0990  00E0               	movwf	_PID_MinOutput
 11085                           
 11086                           ;PID_Lib.c: 47: PID_MaxOutput = maxOutput;
 11087  0991  0878               	movf	Init_PID@maxOutput+1,w
 11088  0992  00DF               	movwf	_PID_MaxOutput+1
 11089  0993  0877               	movf	Init_PID@maxOutput,w
 11090  0994  00DE               	movwf	_PID_MaxOutput
 11091                           
 11092                           ;PID_Lib.c: 48: PID_Integrated = 0;
 11093  0995  01D8               	clrf	_PID_Integrated
 11094  0996  01D9               	clrf	_PID_Integrated+1
 11095                           
 11096                           ;PID_Lib.c: 49: PID_Prev_Input = 0;
 11097  0997  01E2               	clrf	_PID_Prev_Input
 11098  0998  01E3               	clrf	_PID_Prev_Input+1
 11099                           
 11100                           ;PID_Lib.c: 50: PID_First_Time = 1;
 11101  0999  01E6               	clrf	_PID_First_Time
 11102  099A  0AE6               	incf	_PID_First_Time,f
 11103  099B  0008               	return
 11104  099C                     __end_of_Init_PID:	
 11105                           
 11106                           	psect	text33
 11107  09F7                     __ptext33:	
 11108 ;; *************** function _InitCustomChars *****************
 11109 ;; Defined at:
 11110 ;;		line 29 in file "lcd.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;		None
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  i               1    6[COMMON] unsigned char 
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  1    wreg      void 
 11117 ;; Registers used:
 11118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:        2 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    2
 11131 ;; This function calls:
 11132 ;;		_LCD_Cmd
 11133 ;;		_LCD_Write_Char
 11134 ;; This function is called by:
 11135 ;;		_SYSTEM_Initialize
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           
 11140                           ;psect for function _InitCustomChars
 11141  09F7                     _InitCustomChars:	
 11142                           
 11143                           ;lcd.c: 31: uint8_t i;
 11144                           ;lcd.c: 32: LCD_Cmd(0x04);
 11145                           
 11146                           ;incstack = 0
 11147                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11148  09F7  3004               	movlw	4
 11149  09F8  3188  20C5  3189   	fcall	_LCD_Cmd
 11150                           
 11151                           ;lcd.c: 33: LCD_Cmd(0x00);
 11152  09FB  3000               	movlw	0
 11153  09FC  3188  20C5  3189   	fcall	_LCD_Cmd
 11154                           
 11155                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 11156  09FF  01F6               	clrf	InitCustomChars@i
 11157  0A00  3018               	movlw	24
 11158  0A01  0276               	subwf	InitCustomChars@i,w
 11159  0A02  1803               	btfsc	3,0
 11160  0A03  2A14               	goto	l2433
 11161  0A04                     l2427:	
 11162                           
 11163                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 11164  0A04  0876               	movf	InitCustomChars@i,w
 11165  0A05  3EBE               	addlw	(low (___cgram| 0))& (0+255)
 11166  0A06  0086               	movwf	6
 11167  0A07  0187               	clrf	7
 11168  0A08  0801               	movf	1,w
 11169  0A09  318A  221C  3189   	fcall	_LCD_Write_Char
 11170  0A0C  3001               	movlw	1
 11171  0A0D  00F5               	movwf	??_InitCustomChars
 11172  0A0E  0875               	movf	??_InitCustomChars,w
 11173  0A0F  07F6               	addwf	InitCustomChars@i,f
 11174  0A10  3018               	movlw	24
 11175  0A11  0276               	subwf	InitCustomChars@i,w
 11176  0A12  1C03               	skipc
 11177  0A13  2A04               	goto	l2427
 11178  0A14                     l2433:	
 11179                           
 11180                           ;lcd.c: 36: LCD_Cmd(0);
 11181  0A14  3000               	movlw	0
 11182  0A15  3188  20C5  3189   	fcall	_LCD_Cmd
 11183                           
 11184                           ;lcd.c: 37: LCD_Cmd(2);
 11185  0A18  3002               	movlw	2
 11186  0A19  3188  20C5         	fcall	_LCD_Cmd
 11187  0A1B  0008               	return
 11188  0A1C                     __end_of_InitCustomChars:	
 11189                           
 11190                           	psect	text34
 11191  0A1C                     __ptext34:	
 11192 ;; *************** function _LCD_Write_Char *****************
 11193 ;; Defined at:
 11194 ;;		line 223 in file "lcd.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;  a               1    wreg     const unsigned char 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  a               1    4[COMMON] const unsigned char 
 11199 ;;  y               1    3[COMMON] unsigned char 
 11200 ;;  temp            1    2[COMMON] unsigned char 
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      void 
 11203 ;; Registers used:
 11204 ;;		wreg, status,2, status,0, pclath, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;Total ram usage:        4 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    1
 11217 ;; This function calls:
 11218 ;;		_LCD_Port
 11219 ;; This function is called by:
 11220 ;;		_InitCustomChars
 11221 ;;		_LCD_Write_String
 11222 ;;		_LCD_Write_Int
 11223 ;;		_tempSetpoint
 11224 ;;		_readButtons
 11225 ;;		_main
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           
 11230                           ;psect for function _LCD_Write_Char
 11231  0A1C                     _LCD_Write_Char:	
 11232                           
 11233                           ;incstack = 0
 11234                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11235                           ;LCD_Write_Char@a stored from wreg
 11236  0A1C  00F4               	movwf	LCD_Write_Char@a
 11237                           
 11238                           ;lcd.c: 225: char temp,y;
 11239                           ;lcd.c: 226: temp = a&0x0F;
 11240  0A1D  0874               	movf	LCD_Write_Char@a,w
 11241  0A1E  390F               	andlw	15
 11242  0A1F  00F1               	movwf	??_LCD_Write_Char
 11243  0A20  0871               	movf	??_LCD_Write_Char,w
 11244  0A21  00F2               	movwf	LCD_Write_Char@temp
 11245                           
 11246                           ;lcd.c: 227: y = a&0xF0;
 11247  0A22  0874               	movf	LCD_Write_Char@a,w
 11248  0A23  39F0               	andlw	240
 11249  0A24  00F1               	movwf	??_LCD_Write_Char
 11250  0A25  0871               	movf	??_LCD_Write_Char,w
 11251  0A26  00F3               	movwf	LCD_Write_Char@y
 11252                           
 11253                           ;lcd.c: 228: RB0 = 1;
 11254  0A27  0020               	movlb	0	; select bank0
 11255  0A28  140D               	bsf	13,0	;volatile
 11256                           
 11257                           ;lcd.c: 229: LCD_Port(y>>4);
 11258  0A29  0873               	movf	LCD_Write_Char@y,w
 11259  0A2A  00F1               	movwf	??_LCD_Write_Char
 11260  0A2B  3004               	movlw	4
 11261  0A2C                     u1735:	
 11262  0A2C  36F1               	lsrf	??_LCD_Write_Char,f
 11263  0A2D  0B89               	decfsz	9,f
 11264  0A2E  2A2C               	goto	u1735
 11265  0A2F  0871               	movf	??_LCD_Write_Char,w
 11266  0A30  3189  2100  318A   	fcall	_LCD_Port
 11267                           
 11268                           ;lcd.c: 230: RB1 = 1;
 11269  0A33  0020               	movlb	0	; select bank0
 11270  0A34  148D               	bsf	13,1	;volatile
 11271                           
 11272                           ;lcd.c: 231: RB1 = 0;
 11273  0A35  108D               	bcf	13,1	;volatile
 11274                           
 11275                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
 11276  0A36  3003               	movlw	3
 11277  0A37  00F1               	movwf	??_LCD_Write_Char
 11278  0A38                     u3547:	
 11279  0A38  0BF1               	decfsz	??_LCD_Write_Char,f
 11280  0A39  2A38               	goto	u3547
 11281                           
 11282                           ;lcd.c: 233: LCD_Port(temp);
 11283  0A3A  0872               	movf	LCD_Write_Char@temp,w
 11284  0A3B  3189  2100  318A   	fcall	_LCD_Port
 11285                           
 11286                           ;lcd.c: 234: RB1 = 1;
 11287  0A3E  0020               	movlb	0	; select bank0
 11288  0A3F  148D               	bsf	13,1	;volatile
 11289                           
 11290                           ;lcd.c: 235: RB1 = 0;
 11291  0A40  108D               	bcf	13,1	;volatile
 11292                           
 11293                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
 11294  0A41  3003               	movlw	3
 11295  0A42  00F1               	movwf	??_LCD_Write_Char
 11296  0A43                     u3557:	
 11297  0A43  0BF1               	decfsz	??_LCD_Write_Char,f
 11298  0A44  2A43               	goto	u3557
 11299  0A45  0008               	return
 11300  0A46                     __end_of_LCD_Write_Char:	
 11301                           
 11302                           	psect	text35
 11303  08C5                     __ptext35:	
 11304 ;; *************** function _LCD_Cmd *****************
 11305 ;; Defined at:
 11306 ;;		line 65 in file "lcd.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  a               1    wreg     unsigned char 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  a               1    2[COMMON] unsigned char 
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      void 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2, status,0, pclath, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;Total ram usage:        2 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    1
 11327 ;; This function calls:
 11328 ;;		_LCD_Port
 11329 ;; This function is called by:
 11330 ;;		_InitCustomChars
 11331 ;;		_LCD_Clear
 11332 ;;		_LCD_Set_Cursor
 11333 ;;		_LCD_Init
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           
 11338                           ;psect for function _LCD_Cmd
 11339  08C5                     _LCD_Cmd:	
 11340                           
 11341                           ;incstack = 0
 11342                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11343                           ;LCD_Cmd@a stored from wreg
 11344  08C5  00F2               	movwf	LCD_Cmd@a
 11345                           
 11346                           ;lcd.c: 67: RB0 = 0;
 11347  08C6  0020               	movlb	0	; select bank0
 11348  08C7  100D               	bcf	13,0	;volatile
 11349                           
 11350                           ;lcd.c: 68: LCD_Port(a);
 11351  08C8  0872               	movf	LCD_Cmd@a,w
 11352  08C9  3189  2100  3188   	fcall	_LCD_Port
 11353                           
 11354                           ;lcd.c: 69: RB1 = 1;
 11355  08CC  0020               	movlb	0	; select bank0
 11356  08CD  148D               	bsf	13,1	;volatile
 11357                           
 11358                           ;lcd.c: 70: RB1 = 0;
 11359  08CE  108D               	bcf	13,1	;volatile
 11360                           
 11361                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 11362  08CF  30F9               	movlw	249
 11363  08D0  00F1               	movwf	??_LCD_Cmd
 11364  08D1                     u3567:	
 11365  08D1  0000               	nop
 11366  08D2  0BF1               	decfsz	??_LCD_Cmd,f
 11367  08D3  28D1               	goto	u3567
 11368  08D4  3200               	nop2	;nop
 11369  08D5  0000               	nop
 11370  08D6  0008               	return
 11371  08D7                     __end_of_LCD_Cmd:	
 11372                           
 11373                           	psect	text36
 11374  0900                     __ptext36:	
 11375 ;; *************** function _LCD_Port *****************
 11376 ;; Defined at:
 11377 ;;		line 41 in file "lcd.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  a               1    wreg     unsigned char 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;  a               1    0[COMMON] unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;Total ram usage:        1 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_LCD_Cmd
 11401 ;;		_LCD_Init
 11402 ;;		_LCD_Write_Char
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           
 11407                           ;psect for function _LCD_Port
 11408  0900                     _LCD_Port:	
 11409                           
 11410                           ;incstack = 0
 11411                           ; Regs used in _LCD_Port: [wreg]
 11412                           ;LCD_Port@a stored from wreg
 11413  0900  00F0               	movwf	LCD_Port@a
 11414                           
 11415                           ;lcd.c: 43: if(a & 1)
 11416  0901  1C70               	btfss	LCD_Port@a,0
 11417  0902  2906               	goto	l28
 11418                           
 11419                           ;lcd.c: 44: RB2 = 1;
 11420  0903  0020               	movlb	0	; select bank0
 11421  0904  150D               	bsf	13,2	;volatile
 11422  0905  2908               	goto	l2049
 11423  0906                     l28:	
 11424                           
 11425                           ;lcd.c: 45: else
 11426                           ;lcd.c: 46: RB2 = 0;
 11427  0906  0020               	movlb	0	; select bank0
 11428  0907  110D               	bcf	13,2	;volatile
 11429  0908                     l2049:	
 11430                           
 11431                           ;lcd.c: 48: if(a & 2)
 11432  0908  1CF0               	btfss	LCD_Port@a,1
 11433  0909  290C               	goto	l30
 11434                           
 11435                           ;lcd.c: 49: RB3 = 1;
 11436  090A  158D               	bsf	13,3	;volatile
 11437  090B  290D               	goto	l2053
 11438  090C                     l30:	
 11439                           
 11440                           ;lcd.c: 50: else
 11441                           ;lcd.c: 51: RB3 = 0;
 11442  090C  118D               	bcf	13,3	;volatile
 11443  090D                     l2053:	
 11444                           
 11445                           ;lcd.c: 53: if(a & 4)
 11446  090D  1D70               	btfss	LCD_Port@a,2
 11447  090E  2911               	goto	l32
 11448                           
 11449                           ;lcd.c: 54: RB4 = 1;
 11450  090F  160D               	bsf	13,4	;volatile
 11451  0910  2912               	goto	l2057
 11452  0911                     l32:	
 11453                           
 11454                           ;lcd.c: 55: else
 11455                           ;lcd.c: 56: RB4 = 0;
 11456  0911  120D               	bcf	13,4	;volatile
 11457  0912                     l2057:	
 11458                           
 11459                           ;lcd.c: 58: if(a & 8)
 11460  0912  1DF0               	btfss	LCD_Port@a,3
 11461  0913  2916               	goto	l34
 11462                           
 11463                           ;lcd.c: 59: RB5 = 1;
 11464  0914  168D               	bsf	13,5	;volatile
 11465  0915  0008               	return
 11466  0916                     l34:	
 11467                           
 11468                           ;lcd.c: 60: else
 11469                           ;lcd.c: 61: RB5 = 0;
 11470  0916  128D               	bcf	13,5	;volatile
 11471  0917  0008               	return
 11472  0918                     __end_of_LCD_Port:	
 11473                           
 11474                           	psect	text37
 11475  0918                     __ptext37:	
 11476 ;; *************** function _ADCC_Initialize *****************
 11477 ;; Defined at:
 11478 ;;		line 5 in file "adcc.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_SYSTEM_Initialize
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           
 11506                           ;psect for function _ADCC_Initialize
 11507  0918                     _ADCC_Initialize:	
 11508                           
 11509                           ;adcc.c: 8: ADCON1 = 0x00;
 11510                           
 11511                           ;incstack = 0
 11512                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11513  0918  0021               	movlb	1	; select bank1
 11514  0919  0194               	clrf	20	;volatile
 11515                           
 11516                           ;adcc.c: 10: ADCON2 = 0x00;
 11517  091A  0195               	clrf	21	;volatile
 11518                           
 11519                           ;adcc.c: 12: ADCON3 = 0x00;
 11520  091B  0196               	clrf	22	;volatile
 11521                           
 11522                           ;adcc.c: 14: ADACT = 0x00;
 11523  091C  0199               	clrf	25	;volatile
 11524                           
 11525                           ;adcc.c: 16: ADSTAT = 0x00;
 11526  091D  0197               	clrf	23	;volatile
 11527                           
 11528                           ;adcc.c: 18: ADCLK = 0x0F;
 11529  091E  300F               	movlw	15
 11530  091F  0098               	movwf	24	;volatile
 11531                           
 11532                           ;adcc.c: 21: ADREF = 0x00;
 11533  0920  019A               	clrf	26	;volatile
 11534                           
 11535                           ;adcc.c: 23: ADCAP = 0x00;
 11536  0921  019B               	clrf	27	;volatile
 11537                           
 11538                           ;adcc.c: 25: ADPRE = 0x00;
 11539  0922  019C               	clrf	28	;volatile
 11540                           
 11541                           ;adcc.c: 27: ADACQ = 0x00;
 11542  0923  019D               	clrf	29	;volatile
 11543                           
 11544                           ;adcc.c: 29: ADPCH = 0x00;
 11545  0924  019E               	clrf	30	;volatile
 11546                           
 11547                           ;adcc.c: 31: ADRPT = 0x00;
 11548  0925  0022               	movlb	2	; select bank2
 11549  0926  018D               	clrf	13	;volatile
 11550                           
 11551                           ;adcc.c: 33: ADLTHL = 0x00;
 11552  0927  018E               	clrf	14	;volatile
 11553                           
 11554                           ;adcc.c: 35: ADLTHH = 0x00;
 11555  0928  018F               	clrf	15	;volatile
 11556                           
 11557                           ;adcc.c: 37: ADUTHL = 0x00;
 11558  0929  0190               	clrf	16	;volatile
 11559                           
 11560                           ;adcc.c: 39: ADUTHH = 0x00;
 11561  092A  0191               	clrf	17	;volatile
 11562                           
 11563                           ;adcc.c: 41: ADSTPTL = 0x00;
 11564  092B  0192               	clrf	18	;volatile
 11565                           
 11566                           ;adcc.c: 43: ADSTPTH = 0x00;
 11567  092C  0193               	clrf	19	;volatile
 11568                           
 11569                           ;adcc.c: 46: ADCON0 = 0x84;
 11570  092D  3084               	movlw	132
 11571  092E  0021               	movlb	1	; select bank1
 11572  092F  0093               	movwf	19	;volatile
 11573  0930  0008               	return
 11574  0931                     __end_of_ADCC_Initialize:	
 11575                           
 11576                           	psect	text38
 11577  08EA                     __ptext38:	
 11578 ;; *************** function _PWM6_LoadDutyValue *****************
 11579 ;; Defined at:
 11580 ;;		line 15 in file "pwm6.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  dutyValue       2    0[COMMON] unsigned int 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;		None
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  1    wreg      void 
 11587 ;; Registers used:
 11588 ;;		wreg, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;Total ram usage:        4 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_main
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           
 11608                           ;psect for function _PWM6_LoadDutyValue
 11609  08EA                     _PWM6_LoadDutyValue:	
 11610                           
 11611                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11612                           
 11613                           ;incstack = 0
 11614                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11615  08EA  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11616  08EB  00F3               	movwf	??_PWM6_LoadDutyValue+1
 11617  08EC  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11618  08ED  00F2               	movwf	??_PWM6_LoadDutyValue
 11619  08EE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11620  08EF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11621  08F0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 11622  08F1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 11623  08F2  0872               	movf	??_PWM6_LoadDutyValue,w
 11624  08F3  0027               	movlb	7	; select bank7
 11625  08F4  008D               	movwf	13	;volatile
 11626                           
 11627                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
 11628  08F5  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 11629  08F6  3903               	andlw	3
 11630  08F7  00F2               	movwf	??_PWM6_LoadDutyValue
 11631  08F8  3005               	movlw	5
 11632  08F9                     u2775:	
 11633  08F9  35F2               	lslf	??_PWM6_LoadDutyValue,f
 11634  08FA  3EFF               	addlw	-1
 11635  08FB  1D03               	skipz
 11636  08FC  28F9               	goto	u2775
 11637  08FD  3572               	lslf	??_PWM6_LoadDutyValue,w
 11638  08FE  008C               	movwf	12	;volatile
 11639  08FF  0008               	return
 11640  0900                     __end_of_PWM6_LoadDutyValue:	
 11641                           
 11642                           	psect	text39
 11643  0129                     __ptext39:	
 11644 ;; *************** function _PID_Calculate *****************
 11645 ;; Defined at:
 11646 ;;		line 77 in file "PID_Lib.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  setpoint        2   30[BANK0 ] const int 
 11649 ;;  temp            2   32[BANK0 ] int 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;  Result          2   44[BANK0 ] int 
 11652 ;;  Err             2   42[BANK0 ] int 
 11653 ;;  DerivativeVa    2   40[BANK0 ] int 
 11654 ;;  ErrValue        2   38[BANK0 ] int 
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  2   30[BANK0 ] int 
 11657 ;; Registers used:
 11658 ;;		wreg, status,2, status,0, pclath, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:       16 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:    1
 11671 ;; This function calls:
 11672 ;;		___wmul
 11673 ;; This function is called by:
 11674 ;;		_main
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _PID_Calculate
 11680  0129                     _PID_Calculate:	
 11681                           
 11682                           ;PID_Lib.c: 79: int Err, ErrValue, DerivativeValue, Result;
 11683                           ;PID_Lib.c: 82: Err = setpoint - temp;
 11684                           
 11685                           ;incstack = 0
 11686                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 11687  0129  0020               	movlb	0	; select bank0
 11688  012A  0940               	comf	PID_Calculate@temp,w
 11689  012B  00C2               	movwf	??_PID_Calculate
 11690  012C  0941               	comf	PID_Calculate@temp+1,w
 11691  012D  00C3               	movwf	??_PID_Calculate+1
 11692  012E  0AC2               	incf	??_PID_Calculate,f
 11693  012F  1903               	skipnz
 11694  0130  0AC3               	incf	??_PID_Calculate+1,f
 11695  0131  083E               	movf	PID_Calculate@setpoint,w
 11696  0132  0742               	addwf	??_PID_Calculate,w
 11697  0133  00CA               	movwf	PID_Calculate@Err
 11698  0134  083F               	movf	PID_Calculate@setpoint+1,w
 11699  0135  3D43               	addwfc	??_PID_Calculate+1,w
 11700  0136  00CB               	movwf	PID_Calculate@Err+1
 11701                           
 11702                           ;PID_Lib.c: 87: ErrValue = Err * PID_Kp;
 11703  0137  084B               	movf	PID_Calculate@Err+1,w
 11704  0138  00F1               	movwf	___wmul@multiplier+1
 11705  0139  084A               	movf	PID_Calculate@Err,w
 11706  013A  00F0               	movwf	___wmul@multiplier
 11707  013B  085D               	movf	_PID_Kp+1,w
 11708  013C  00F3               	movwf	___wmul@multiplicand+1
 11709  013D  085C               	movf	_PID_Kp,w
 11710  013E  00F2               	movwf	___wmul@multiplicand
 11711  013F  3189  2165  3181   	fcall	___wmul
 11712  0142  0871               	movf	?___wmul+1,w
 11713  0143  0020               	movlb	0	; select bank0
 11714  0144  00C7               	movwf	PID_Calculate@ErrValue+1
 11715  0145  0870               	movf	?___wmul,w
 11716  0146  00C6               	movwf	PID_Calculate@ErrValue
 11717                           
 11718                           ;PID_Lib.c: 93: PID_Integrated = PID_Integrated + (Err * PID_Ki);
 11719  0147  084B               	movf	PID_Calculate@Err+1,w
 11720  0148  00F1               	movwf	___wmul@multiplier+1
 11721  0149  084A               	movf	PID_Calculate@Err,w
 11722  014A  00F0               	movwf	___wmul@multiplier
 11723  014B  085B               	movf	_PID_Ki+1,w
 11724  014C  00F3               	movwf	___wmul@multiplicand+1
 11725  014D  085A               	movf	_PID_Ki,w
 11726  014E  00F2               	movwf	___wmul@multiplicand
 11727  014F  3189  2165  3181   	fcall	___wmul
 11728  0152  0020               	movlb	0	; select bank0
 11729  0153  0858               	movf	_PID_Integrated,w
 11730  0154  0770               	addwf	?___wmul,w
 11731  0155  00D8               	movwf	_PID_Integrated
 11732  0156  0859               	movf	_PID_Integrated+1,w
 11733  0157  3D71               	addwfc	?___wmul+1,w
 11734  0158  00D9               	movwf	_PID_Integrated+1
 11735                           
 11736                           ;PID_Lib.c: 99: if (PID_Integrated < PID_MinOutput)
 11737  0159  0859               	movf	_PID_Integrated+1,w
 11738  015A  3A80               	xorlw	128
 11739  015B  00C2               	movwf	??_PID_Calculate
 11740  015C  0861               	movf	_PID_MinOutput+1,w
 11741  015D  3A80               	xorlw	128
 11742  015E  0242               	subwf	??_PID_Calculate,w
 11743  015F  1D03               	skipz
 11744  0160  2963               	goto	u2835
 11745  0161  0860               	movf	_PID_MinOutput,w
 11746  0162  0258               	subwf	_PID_Integrated,w
 11747  0163                     u2835:	
 11748  0163  1803               	skipnc
 11749  0164  296A               	goto	l394
 11750                           
 11751                           ;PID_Lib.c: 100: PID_Integrated = PID_MinOutput;
 11752  0165  0020               	movlb	0	; select bank0
 11753  0166  0861               	movf	_PID_MinOutput+1,w
 11754  0167  00D9               	movwf	_PID_Integrated+1
 11755  0168  0860               	movf	_PID_MinOutput,w
 11756  0169  00D8               	movwf	_PID_Integrated
 11757  016A                     l394:	
 11758                           
 11759                           ;PID_Lib.c: 101: if (PID_Integrated > PID_MaxOutput)
 11760  016A  0020               	movlb	0	; select bank0
 11761  016B  085F               	movf	_PID_MaxOutput+1,w
 11762  016C  3A80               	xorlw	128
 11763  016D  00C2               	movwf	??_PID_Calculate
 11764  016E  0859               	movf	_PID_Integrated+1,w
 11765  016F  3A80               	xorlw	128
 11766  0170  0242               	subwf	??_PID_Calculate,w
 11767  0171  1D03               	skipz
 11768  0172  2975               	goto	u2845
 11769  0173  0858               	movf	_PID_Integrated,w
 11770  0174  025E               	subwf	_PID_MaxOutput,w
 11771  0175                     u2845:	
 11772  0175  1803               	skipnc
 11773  0176  297C               	goto	l2821
 11774                           
 11775                           ;PID_Lib.c: 102: PID_Integrated = PID_MaxOutput;
 11776  0177  0020               	movlb	0	; select bank0
 11777  0178  085F               	movf	_PID_MaxOutput+1,w
 11778  0179  00D9               	movwf	_PID_Integrated+1
 11779  017A  085E               	movf	_PID_MaxOutput,w
 11780  017B  00D8               	movwf	_PID_Integrated
 11781  017C                     l2821:	
 11782                           
 11783                           ;PID_Lib.c: 105: if (PID_First_Time)
 11784  017C  0020               	movlb	0	; select bank0
 11785  017D  0866               	movf	_PID_First_Time,w
 11786  017E  1903               	btfsc	3,2
 11787  017F  2985               	goto	l2827
 11788                           
 11789                           ;PID_Lib.c: 106: {
 11790                           ;PID_Lib.c: 108: PID_First_Time = 0;
 11791  0180  01E6               	clrf	_PID_First_Time
 11792                           
 11793                           ;PID_Lib.c: 109: PID_Prev_Input = temp;
 11794  0181  0841               	movf	PID_Calculate@temp+1,w
 11795  0182  00E3               	movwf	_PID_Prev_Input+1
 11796  0183  0840               	movf	PID_Calculate@temp,w
 11797  0184  00E2               	movwf	_PID_Prev_Input
 11798  0185                     l2827:	
 11799                           
 11800                           ;PID_Lib.c: 110: }
 11801                           ;PID_Lib.c: 114: DerivativeValue = (temp - PID_Prev_Input) * PID_Kd;
 11802  0185  0962               	comf	_PID_Prev_Input,w
 11803  0186  00C2               	movwf	??_PID_Calculate
 11804  0187  0963               	comf	_PID_Prev_Input+1,w
 11805  0188  00C3               	movwf	??_PID_Calculate+1
 11806  0189  0AC2               	incf	??_PID_Calculate,f
 11807  018A  1903               	skipnz
 11808  018B  0AC3               	incf	??_PID_Calculate+1,f
 11809  018C  0840               	movf	PID_Calculate@temp,w
 11810  018D  0742               	addwf	??_PID_Calculate,w
 11811  018E  00F0               	movwf	___wmul@multiplier
 11812  018F  0841               	movf	PID_Calculate@temp+1,w
 11813  0190  3D43               	addwfc	??_PID_Calculate+1,w
 11814  0191  00F1               	movwf	___wmul@multiplier+1
 11815  0192  0867               	movf	_PID_Kd,w
 11816  0193  00C4               	movwf	??_PID_Calculate+2
 11817  0194  01C5               	clrf	??_PID_Calculate+3
 11818  0195  0844               	movf	??_PID_Calculate+2,w
 11819  0196  00F2               	movwf	___wmul@multiplicand
 11820  0197  0845               	movf	??_PID_Calculate+3,w
 11821  0198  00F3               	movwf	___wmul@multiplicand+1
 11822  0199  3189  2165  3181   	fcall	___wmul
 11823  019C  0871               	movf	?___wmul+1,w
 11824  019D  0020               	movlb	0	; select bank0
 11825  019E  00C9               	movwf	PID_Calculate@DerivativeValue+1
 11826  019F  0870               	movf	?___wmul,w
 11827  01A0  00C8               	movwf	PID_Calculate@DerivativeValue
 11828                           
 11829                           ;PID_Lib.c: 115: PID_Prev_Input = temp;
 11830  01A1  0841               	movf	PID_Calculate@temp+1,w
 11831  01A2  00E3               	movwf	_PID_Prev_Input+1
 11832  01A3  0840               	movf	PID_Calculate@temp,w
 11833  01A4  00E2               	movwf	_PID_Prev_Input
 11834                           
 11835                           ;PID_Lib.c: 124: Result = ErrValue + PID_Integrated - DerivativeValue;
 11836  01A5  0948               	comf	PID_Calculate@DerivativeValue,w
 11837  01A6  00C2               	movwf	??_PID_Calculate
 11838  01A7  0949               	comf	PID_Calculate@DerivativeValue+1,w
 11839  01A8  00C3               	movwf	??_PID_Calculate+1
 11840  01A9  0AC2               	incf	??_PID_Calculate,f
 11841  01AA  1903               	skipnz
 11842  01AB  0AC3               	incf	??_PID_Calculate+1,f
 11843  01AC  0846               	movf	PID_Calculate@ErrValue,w
 11844  01AD  0742               	addwf	??_PID_Calculate,w
 11845  01AE  00C4               	movwf	??_PID_Calculate+2
 11846  01AF  0847               	movf	PID_Calculate@ErrValue+1,w
 11847  01B0  3D43               	addwfc	??_PID_Calculate+1,w
 11848  01B1  00C5               	movwf	??_PID_Calculate+3
 11849  01B2  0858               	movf	_PID_Integrated,w
 11850  01B3  0744               	addwf	??_PID_Calculate+2,w
 11851  01B4  00CC               	movwf	PID_Calculate@Result
 11852  01B5  0859               	movf	_PID_Integrated+1,w
 11853  01B6  3D45               	addwfc	??_PID_Calculate+3,w
 11854  01B7  00CD               	movwf	PID_Calculate@Result+1
 11855                           
 11856                           ;PID_Lib.c: 126: if (Result < PID_MinOutput)
 11857  01B8  084D               	movf	PID_Calculate@Result+1,w
 11858  01B9  3A80               	xorlw	128
 11859  01BA  00C2               	movwf	??_PID_Calculate
 11860  01BB  0861               	movf	_PID_MinOutput+1,w
 11861  01BC  3A80               	xorlw	128
 11862  01BD  0242               	subwf	??_PID_Calculate,w
 11863  01BE  1D03               	skipz
 11864  01BF  29C2               	goto	u2865
 11865  01C0  0860               	movf	_PID_MinOutput,w
 11866  01C1  024C               	subwf	PID_Calculate@Result,w
 11867  01C2                     u2865:	
 11868  01C2  1803               	skipnc
 11869  01C3  29C9               	goto	l397
 11870                           
 11871                           ;PID_Lib.c: 127: Result = PID_MinOutput;
 11872  01C4  0020               	movlb	0	; select bank0
 11873  01C5  0861               	movf	_PID_MinOutput+1,w
 11874  01C6  00CD               	movwf	PID_Calculate@Result+1
 11875  01C7  0860               	movf	_PID_MinOutput,w
 11876  01C8  00CC               	movwf	PID_Calculate@Result
 11877  01C9                     l397:	
 11878                           
 11879                           ;PID_Lib.c: 128: if (Result > PID_MaxOutput)
 11880  01C9  0020               	movlb	0	; select bank0
 11881  01CA  085F               	movf	_PID_MaxOutput+1,w
 11882  01CB  3A80               	xorlw	128
 11883  01CC  00C2               	movwf	??_PID_Calculate
 11884  01CD  084D               	movf	PID_Calculate@Result+1,w
 11885  01CE  3A80               	xorlw	128
 11886  01CF  0242               	subwf	??_PID_Calculate,w
 11887  01D0  1D03               	skipz
 11888  01D1  29D4               	goto	u2875
 11889  01D2  084C               	movf	PID_Calculate@Result,w
 11890  01D3  025E               	subwf	_PID_MaxOutput,w
 11891  01D4                     u2875:	
 11892  01D4  1803               	skipnc
 11893  01D5  29DB               	goto	l398
 11894                           
 11895                           ;PID_Lib.c: 129: Result = PID_MaxOutput;
 11896  01D6  0020               	movlb	0	; select bank0
 11897  01D7  085F               	movf	_PID_MaxOutput+1,w
 11898  01D8  00CD               	movwf	PID_Calculate@Result+1
 11899  01D9  085E               	movf	_PID_MaxOutput,w
 11900  01DA  00CC               	movwf	PID_Calculate@Result
 11901  01DB                     l398:	
 11902                           
 11903                           ;PID_Lib.c: 133: return (Result);
 11904  01DB  0020               	movlb	0	; select bank0
 11905  01DC  084D               	movf	PID_Calculate@Result+1,w
 11906  01DD  00BF               	movwf	?_PID_Calculate+1
 11907  01DE  084C               	movf	PID_Calculate@Result,w
 11908  01DF  00BE               	movwf	?_PID_Calculate
 11909  01E0  0008               	return
 11910  01E1                     __end_of_PID_Calculate:	
 11911                           
 11912                           	psect	text40
 11913  0965                     __ptext40:	
 11914 ;; *************** function ___wmul *****************
 11915 ;; Defined at:
 11916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  multiplier      2    0[COMMON] unsigned int 
 11919 ;;  multiplicand    2    2[COMMON] unsigned int 
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;  product         2    4[COMMON] unsigned int 
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  2    0[COMMON] unsigned int 
 11924 ;; Registers used:
 11925 ;;		wreg, status,2, status,0
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;Total ram usage:        6 bytes
 11936 ;; Hardware stack levels used:    1
 11937 ;; This function calls:
 11938 ;;		Nothing
 11939 ;; This function is called by:
 11940 ;;		_main
 11941 ;;		_PID_Calculate
 11942 ;;		_eval_poly
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           
 11947                           ;psect for function ___wmul
 11948  0965                     ___wmul:	
 11949                           
 11950                           ;incstack = 0
 11951                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11952  0965  01F4               	clrf	___wmul@product
 11953  0966  01F5               	clrf	___wmul@product+1
 11954  0967                     l2287:	
 11955  0967  1C70               	btfss	___wmul@multiplier,0
 11956  0968  296D               	goto	l481
 11957  0969  0872               	movf	___wmul@multiplicand,w
 11958  096A  07F4               	addwf	___wmul@product,f
 11959  096B  0873               	movf	___wmul@multiplicand+1,w
 11960  096C  3DF5               	addwfc	___wmul@product+1,f
 11961  096D                     l481:	
 11962  096D  3001               	movlw	1
 11963  096E                     u2205:	
 11964  096E  35F2               	lslf	___wmul@multiplicand,f
 11965  096F  0DF3               	rlf	___wmul@multiplicand+1,f
 11966  0970  0B89               	decfsz	9,f
 11967  0971  296E               	goto	u2205
 11968  0972  3001               	movlw	1
 11969  0973                     u2215:	
 11970  0973  36F1               	lsrf	___wmul@multiplier+1,f
 11971  0974  0CF0               	rrf	___wmul@multiplier,f
 11972  0975  0B89               	decfsz	9,f
 11973  0976  2973               	goto	u2215
 11974  0977  0870               	movf	___wmul@multiplier,w
 11975  0978  0471               	iorwf	___wmul@multiplier+1,w
 11976  0979  1D03               	btfss	3,2
 11977  097A  2967               	goto	l2287
 11978  097B  0875               	movf	___wmul@product+1,w
 11979  097C  00F1               	movwf	?___wmul+1
 11980  097D  0874               	movf	___wmul@product,w
 11981  097E  00F0               	movwf	?___wmul
 11982  097F  0008               	return
 11983  0980                     __end_of___wmul:	
 11984                           
 11985                           	psect	text41
 11986  0899                     __ptext41:	
 11987 ;; *************** function _ADCC_GetSingleConversion *****************
 11988 ;; Defined at:
 11989 ;;		line 52 in file "adcc.c"
 11990 ;; Parameters:    Size  Location     Type
 11991 ;;  channel         1    wreg     enum E13559
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;  channel         1    3[COMMON] enum E13559
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  2    0[COMMON] unsigned int 
 11996 ;; Registers used:
 11997 ;;		wreg
 11998 ;; Tracked objects:
 11999 ;;		On entry : 0/0
 12000 ;;		On exit  : 0/0
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12003 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;Total ram usage:        4 bytes
 12008 ;; Hardware stack levels used:    1
 12009 ;; This function calls:
 12010 ;;		Nothing
 12011 ;; This function is called by:
 12012 ;;		_main
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           
 12017                           ;psect for function _ADCC_GetSingleConversion
 12018  0899                     _ADCC_GetSingleConversion:	
 12019                           
 12020                           ;incstack = 0
 12021                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12022                           ;ADCC_GetSingleConversion@channel stored from wreg
 12023  0899  00F3               	movwf	ADCC_GetSingleConversion@channel
 12024                           
 12025                           ;adcc.c: 55: ADPCH = channel;
 12026  089A  0873               	movf	ADCC_GetSingleConversion@channel,w
 12027  089B  0021               	movlb	1	; select bank1
 12028  089C  009E               	movwf	30	;volatile
 12029                           
 12030                           ;adcc.c: 58: ADCON0bits.ADON = 1;
 12031  089D  1793               	bsf	19,7	;volatile
 12032                           
 12033                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
 12034  089E  1313               	bcf	19,6	;volatile
 12035                           
 12036                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
 12037  089F  1413               	bsf	19,0	;volatile
 12038  08A0                     l210:	
 12039                           ;adcc.c: 68: {
 12040                           
 12041                           ;adcc.c: 67: while (ADCON0bits.ADGO)
 12042                           
 12043  08A0  1813               	btfsc	19,0	;volatile
 12044  08A1  28A0               	goto	l210
 12045                           
 12046                           ;adcc.c: 69: }
 12047                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
 12048  08A2  080D               	movf	13,w	;volatile
 12049  08A3  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12050  08A4  080C               	movf	12,w	;volatile
 12051  08A5  00F0               	movwf	?_ADCC_GetSingleConversion
 12052  08A6  0008               	return
 12053  08A7                     __end_of_ADCC_GetSingleConversion:	
 12054  007E                     btemp	set	126	;btemp
 12055  007E                     wtemp	set	126
 12056  007E                     wtemp0	set	126
 12057  0080                     wtemp1	set	128
 12058  0082                     wtemp2	set	130
 12059  0084                     wtemp3	set	132
 12060  0086                     wtemp4	set	134
 12061  0088                     wtemp5	set	136
 12062  007F                     wtemp6	set	127
 12063  007E                     ttemp	set	126
 12064  007E                     ttemp0	set	126
 12065  0081                     ttemp1	set	129
 12066  0084                     ttemp2	set	132
 12067  0087                     ttemp3	set	135
 12068  007F                     ttemp4	set	127
 12069  007E                     ltemp	set	126
 12070  007E                     ltemp0	set	126
 12071  0082                     ltemp1	set	130
 12072  0086                     ltemp2	set	134
 12073  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      78
    BANK1            80     30      66
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _main->___lwdiv
    _tempSetpoint->_LCD_Write_Int
    _readButtons->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___lbtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___lwtoft
    _SYSTEM_Initialize->_Init_PID
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_PID_Calculate
    _tempSetpoint->_readButtons
    _readButtons->_LCD_Write_Int
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftge->___ftadd
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul
    _PID_Calculate->___fttol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   54819
                                             46 BANK0     10    10      0
                                              0 BANK1     30    30      0
           _ADCC_GetSingleConversion
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _log
                        _readButtons
                       _tempSetpoint
 ---------------------------------------------------------------------------------
 (1) _tempSetpoint                                         4     4      0    8922
                                             17 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                        _readButtons
 ---------------------------------------------------------------------------------
 (2) _readButtons                                          3     3      0    4437
                                             14 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       7     6      1     910
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15974
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7047
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2615
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     428
                                             29 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3540
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3367
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     138
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2595
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    1084
                                             10 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                           _Init_PID
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _Init_PID                                            10     1      9     375
                                              0 COMMON    10     1      9
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (5) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                       16    12      4    1104
                                             30 BANK0     16    12      4
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     728
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___wmul (ARG)
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _Init_PID
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
   _tempSetpoint
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readButtons
       _LCD_Clear
         _LCD_Cmd
           _LCD_Port
       _LCD_Set_Cursor
         _LCD_Cmd
           _LCD_Port
       _LCD_Write_Char
         _LCD_Port
       _LCD_Write_Int
         _LCD_Write_Char
           _LCD_Port
         ___awdiv
         ___awmod
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 08 20:54:28 2017

                                _x 006C                        __CFG_CP$OFF 0000  
                               l30 090C                                 l32 0911  
                               l34 0916                                 l28 0906  
                     ___awdiv@sign 0076                     _PID_Prev_Input 0062  
              ___wmul@multiplicand 0072        __size_of_PWM6_LoadDutyValue 0016  
                     ___ftadd@exp1 003C                       ___ftadd@exp2 003B  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 003A  
                              l210 08A0                                l362 055F  
                              l363 056B                                l536 0DB2  
                              l481 096D                                l394 016A  
                              l650 005E                                l642 0043  
                              l397 01C9                                l733 0E90  
                              l398 01DB                                l649 0056  
                              l673 0403                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RA3 0063                                _RB2 006A  
                              _RA4 0064                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 0F53  
                     ___awmod@sign 0076                    _TMR2_Initialize 08B6  
                     __CFG_BORV$LO 0000                                wreg 0009  
                       Init_PID@Kd 0074                         Init_PID@Ki 0072  
                       Init_PID@Kp 0070                    __end_of_LCD_Cmd 08D7  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 002A  
                   _LCD_Set_Cursor 0B23                       ___ftdiv@sign 002F  
                             l2101 002A                               l2111 0050  
                             l2103 002F                               l2201 0BA2  
                             l2131 0BFE                               l2053 090D  
                             l2109 0048                               l2057 0912  
                             l2049 0908                               l2305 038C  
                             l3025 0A9E                               l3017 0A80  
                             l2217 0B43                               l2137 0C09  
                             l2233 094D                               l2315 03A2  
                             l3019 0A8C                               l2163 0C40  
                             l2155 0C2F                               l2147 0C11  
                             l3123 071F                               l2333 03CF  
                             l2309 0393                               l3029 0AA7  
                             l2405 00F9                               l2149 0C1D  
                             l2095 0019                               l2351 0415  
                             l2335 03D9                               l2327 03BC  
                             l2159 0C38                               l2175 0B6C  
                             l2263 02F4                               l2247 02BC  
                             l3151 0779                               l2433 0A14  
                             l2345 03F5                               l2337 03DE  
                             l2409 0101                               l2193 0B91  
                             l2281 0350                               l2265 02F9  
                             l2257 02C3                               l3081 0553  
                             l3057 0477                               l2427 0A04  
                             l2099 0020                               l2355 0427  
                             l2347 03FF                               l2339 03E2  
                             l2187 0B79                               l2179 0B73  
                             l2275 0317                               l2267 0302  
                             l2259 02F0                               l3091 05A3  
                             l2365 0442                               l2381 00A2  
                             l2189 0B85                               l2197 0B9A  
                             l2277 0343                               l2269 0313  
                             l3165 07C7                               l3157 0788  
                             l3069 0528                               l2287 0967  
                             l2375 008C                               l2393 00DD  
                             l2627 0D8F                               l2619 0D7F  
                             l2821 017C                               l2397 00E5  
                             l2637 0D9F                               l2629 0D90  
                             l2647 09E1                               l2655 0AFE  
                             l2751 01F7                               l2827 0185  
                             l2915 0ED7                               l2659 0B14  
                             l2771 01E7                               l2909 0EC1  
                             l2853 0F82                               l2773 0236  
                             l2679 0ABE                               l2847 0F71  
                             l2881 0DD3                               l2873 0DC3  
                             l2937 0F31                               l2929 0F18  
                             l2697 0C9E                               l2891 0E01  
                             l2883 0DE1                               l2779 0241  
                             l2957 09C1                               l2895 0E0C  
                             l2967 0E3C                               l2799 0281  
                             l2993 0E87                               l2985 0E6C  
                             l2899 0E1A                               l2995 0E93  
                             l2987 0E7A                               ?_log 0047  
                             l2999 0EA1                               STR_1 101B  
                             STR_2 101B                               STR_3 101B  
                             STR_4 1025                               u2100 02A6  
                             u2015 0B8B                               u2025 0B92  
                             u2205 096E                               _LATA 0016  
                             _LATB 0017                               u2215 0973  
                             _LATC 0018                               u3025 0EE9  
                             u2065 0B2F                               u3035 0EF9  
                             u3115 0E43                               u3045 0F19  
                             u2325 03BD                               u2085 0B4E  
                             u2165 0331                               u3055 0F28  
                             u2415 03F6                               u3215 0A83  
                             u2600 0A76                               u3065 0F32  
                             u3145 0E6D                               u3305 0559  
                             _T2PR 028D                               u2355 03D0  
                             u3235 0A8D                               u2515 00E6  
                             u3315 0565                               u1805 004B  
                             u3245 0A97                               u2525 00EC  
                             u1735 0A2C                               u3175 0E88  
                             u3255 0A9F                               u3407 0D73  
                             u3417 0BC3                               u2385 03E3  
                      main@counter 00AD                               u3507 0CF2  
                             u3427 0BCF                               u2555 0102  
                             u1915 0C1E                               u3517 0CFF  
                             u3437 0BDB                               u1845 0065  
                             u1765 0025                               u2565 0108  
                             u2485 00AE                               u1925 0C28  
                             u3527 0D0E                               u3447 0CAE  
                             u2495 00BE                               u1935 0C30  
                             u3537 0D1C                               u3457 0CBB  
                             u1785 003E                               u3377 022D  
                             u2835 0163                               u3547 0A38  
                             u3467 0CC6                               u3387 0279  
                             u2845 0175                               u3557 0A43  
                             u3477 0CCF                               u3397 0291  
                             u2775 08F9                               u3567 08D1  
                             u3487 0CD8                               u2935 0DD6  
                             u1895 0C14                               u2865 01C2  
                             u3497 0CE5                               u2875 01D4  
                             u2955 0DE2                               u1995 0B7C  
                             u2965 0DF6                               u2975 0E02  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                ?_LCD_Write_String 0075                        main@minutes 00A8  
                      main@seconds 00AA                               _main 045A  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                 ??_LCD_Write_String 0077  
                             ttemp 007E                               wtemp 007E  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                      _LCD_Write_Int 029B  
                     ___ftmul@sign 002F                       ___fttol@exp1 003D  
                            ??_log 004A                       ___fttol@lval 0039  
          __end_of_TMR0_Initialize 08B6                   __end_of_LCD_Init 0D20  
                 __end_of_LCD_Port 0918                       ?_readButtons 0070  
   __size_of_OSCILLATOR_Initialize 0008      __end_of_OSCILLATOR_Initialize 0879  
                  __end_of___aldiv 0E23                              _ADACQ 009D  
                            _ADCAP 009B                              _ADACT 0099  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0C45                              _ADPRE 009C  
                  __end_of___ftadd 045A                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0BA7                              _ADRPT 010D  
                  __end_of___ftdiv 0F53                    __end_of___ftneg 0881  
                  __end_of___ftmul 0129                    ___awdiv@divisor 0070  
                  __end_of___ftsub 09D7                    __end_of___fttol 0EAA  
                            _T2CON 028E                main@readTemperature 00B9  
                            _T2HLT 028F                    __end_of___lwdiv 0AAC  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TMR0H 001D                              _TMR0L 001C  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0004  
           __end_of_LCD_Set_Cursor 0B62                      ___awtoft@sign 007D  
                            _frexp 0AAC                              _errno 0064  
                    ___ftpack@sign 0074                              main@R 00A0  
                   __CFG_BOREN$OFF 0000                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0076                     ?_LCD_Write_Int 0079  
                   _LCD_Write_Char 0A1C                    __initialization 07CE  
                      log@exponent 004B                       __end_of_main 07CE  
                 __end_of_Init_PID 099C            __end_of_TMR2_Initialize 08C5  
                           ??_main 004E                      ___fttol@sign1 0038  
                __end_of_LCD_Clear 0871                          ??_LCD_Cmd 0071  
                  ?_LCD_Set_Cursor 0073                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             ?_frexp 0070  
                           _ADLTHH 010F                             _ADLTHL 010E  
                           _ADRESH 008D                             _ADRESL 008C  
                           _ADSTAT 0097                             _ADUTHH 0111  
                 ___awdiv@dividend 0072                             _ADUTHL 0110  
                 __end_of___awtoft 09F7                             _ANSELA 0F38  
                           _ANSELB 0F43                             _ANSELC 0F4E  
                 __end_of___ftpack 0075                   __end_of___lbtoft 094B  
               __CFG_RSTOSC$HFINT1 0000                             _T0CON0 001E  
                           _T0CON1 001F                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 08EA                             _PID_Kd 0067  
                           _PID_Ki 005A                             _PID_Kp 005C  
                           _OSCFRQ 0893                             _TMR0IF 3865  
           __end_of_LCD_Write_Char 0A46                     __CFG_PWRTE$OFF 0000  
                     _CCPTMRS1bits 021F                             ___ftge 0AE7  
           LCD_Write_Int@numPlaces 007C                          ??___aldiv 0078  
                           ___wmul 0965                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0026  
                        ??___ftneg 0073                          ??___ftmul 0026  
                        ??___ftsub 007E                          ??___fttol 0034  
                        ??___lwdiv 007A                   ?_TMR0_Initialize 0070  
          __end_of_PWM6_Initialize 0011                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
            ___ftmul@f3_as_product 002B                    _ADCC_Initialize 0918  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                 LCD_Write_Int@str 0025                      main@steinhart 00BB  
                  _InitCustomChars 09F7                    LCD_Set_Cursor@w 0078  
                  LCD_Set_Cursor@x 0076                    LCD_Set_Cursor@y 0073  
                  LCD_Set_Cursor@z 0077                  _SYSTEM_Initialize 0BA7  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 003D                         ___ftge@ff2 0040  
                  ??_LCD_Write_Int 0020                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 0023  
                       ___ftdiv@f2 0020                         ___ftdiv@f3 002B  
                  ?_LCD_Write_Char 0070                         ___ftneg@f1 0070  
                    LCD_Init@style 0075                         ___awtoft@c 0078  
                       ___lbtoft@c 007B                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 0030  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK0 0868                       __pidataBANK1 099C  
              ??_SYSTEM_Initialize 007A                      __end_of_frexp 0AE7  
                 ?_TMR2_Initialize 0070                         ___lwtoft@c 0078  
             __size_of_readButtons 0081              PID_Calculate@ErrValue 0046  
                          ??_frexp 0074          __end_of_SYSTEM_Initialize 0BF4  
                       __pbssBANK0 0058                         __pbssBANK1 00DB  
               __size_of_eval_poly 0060                          ?_Init_PID 0070  
                       ??_LCD_Init 0073                         ??_LCD_Port 0070  
           __size_of_PID_Calculate 00B8                PID_Calculate@Result 004C  
                       __pmaintext 045A                            ?___ftge 003D  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 0931         __end_of_PWM6_LoadDutyValue 0900  
        __size_of_LCD_Write_String 001A                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                        ?___lbtoft 0078                            _ADSTPTH 0113  
                          _ADSTPTL 0112                          ?___lwtoft 0078  
          __end_of_InitCustomChars 0A1C                            _LCD_Cmd 08C5  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PWM6DCH 038D  
                          _PWM6DCL 038C                            _PWM6CON 038E  
                          _PPSLOCK 0E8F                         ??_Init_PID 0079  
            PID_Calculate@setpoint 003E                      ?_tempSetpoint 0070  
             __CFG_SCANE$available 0000                            ___aldiv 0DA1  
                          ___cgram 00BE                    __size_of___ftge 003C  
                          ___awdiv 0BF4                            ___ftadd 0364  
                          ___awmod 0B62                            ___ftdiv 0EAA  
                          ___ftneg 0879                    __size_of___wmul 001B  
                          ___ftmul 0075                            ___ftsub 09B9  
                          ___fttol 0E23                            ___lwdiv 0A78  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 0020                  __end_of_eval_poly 0CA5  
                 ??_LCD_Set_Cursor 0074                            __ptext1 01E1  
                          __ptext2 0D20                            __ptext3 094B  
                          __ptext4 029B                            __ptext5 0B62  
                          __ptext6 0BF4                            __ptext7 0B23  
                          __ptext8 0F53                            __ptext9 0AAC  
                       ??___lwtoft 007B                      _PID_Calculate 0129  
            _OSCILLATOR_Initialize 0871                          _T2CONbits 028E  
                     __size_of_log 00AD                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 006B                            _samples 238C  
                        _LCD_Clear 0869                            _presets 00D6  
       __size_of_SYSTEM_Initialize 004D                            clrloop0 0882  
             end_of_initialization 07FD                     main@outCurrent 00A6  
                          init_ram 088D                            initloop 088E  
                   ??_tempSetpoint 0031                      _PID_MaxOutput 005E  
                 ___aldiv@quotient 0022                  LCD_Write_Int@sign 007D  
                    _PID_MinOutput 0060                tempSetpoint@counter 0034  
                     __pstringtext 1000                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 08A7              __CFG_WDTCPS$WDTCPS_31 0000  
                   ?_PID_Calculate 003E                   ?_InitCustomChars 0070  
                       ?_LCD_Clear 0070                   __CFG_FEXTOSC$OFF 0000  
                LCD_Write_String@a 0075                  LCD_Write_String@i 0078  
                 ??_LCD_Write_Char 0071                        ___ftdiv@exp 002E  
                __size_of_LCD_Init 007B                         main@toggle 00B0  
                __size_of_LCD_Port 0018                         main@totals 00B1  
                      ___ftmul@exp 002A                     __end_of___ftge 0B23  
                   __end_of___wmul 0980                   _LCD_Write_String 094B  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07CE  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D           __size_of_TMR0_Initialize 000F  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 1000  
                       frexp@value 0070           LCD_Write_Int@fieldLength 007B  
                __size_of_Init_PID 001C              __end_of_LCD_Write_Int 0364  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0043  
                         ??___wmul 0074                        __pdataBANK0 006D  
                      __pdataBANK1 00BE                    ??_PID_Calculate 0042  
                    ??_readButtons 002E                    LCD_Write_Char@a 0074  
                  LCD_Write_Char@y 0073                           ?_LCD_Cmd 0070  
                __size_of___awtoft 0020           _ADCC_GetSingleConversion 0899  
                __size_of___ftpack 0064                  __size_of___lbtoft 001A  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
             __end_of_tempSetpoint 029B                 _PWM6_LoadDutyValue 08EA  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070                          _main$1066 00A3  
                 ___lwdiv@dividend 0078             _PIN_MANAGER_Initialize 0A46  
                         ?___aldiv 0070    ADCC_GetSingleConversion@channel 0073  
                         ?___awdiv 0070                           ?___ftadd 0030  
                         ?___awmod 0070                           ?___ftdiv 0020  
                         ?___ftneg 0070                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 0030  
                         ?___lwdiv 0076                    main@displayTemp 00B7  
             ??_PWM6_LoadDutyValue 0072                          _downCount 0068  
                        _eval_poly 0C45                __end_of_readButtons 0DA1  
         __size_of_PWM6_Initialize 000D                   ___lwdiv@quotient 007B  
                   __size_of_frexp 003B                           _T2CLKCON 0290  
           main@readTemperatureOld 00B5                    ___aldiv@divisor 0070  
                ??_TMR0_Initialize 0070                    ___aldiv@counter 0020  
                         _LCD_Init 0CA5                     ___wmul@product 0074  
                         _LCD_Port 0900                          clear_ram0 0881  
                         _PIE0bits 0716                           _PIR0bits 070C  
                         _PIR4bits 0710                         _ADCON0bits 0093  
                ___wmul@multiplier 0070       PID_Calculate@DerivativeValue 0048  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
         __end_of_LCD_Write_String 0965                           _Init_PID 0980  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
             main@firstTimeThrough 00AC            ??_OSCILLATOR_Initialize 0070  
                   LCD_Write_Int@i 002C                     LCD_Write_Int@j 002A  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0008  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0087                   __size_of___lwdiv 0034  
                      _readButtons 0D20                           ___awtoft 09D7  
                         ___ftpack 0011                           ___lbtoft 0931  
            __size_of_tempSetpoint 00BA                           ___lwtoft 08D7  
                       _T0CON0bits 001E           __size_of_ADCC_Initialize 0019  
                  main@sampleIndex 00E0                    ___lwdiv@divisor 0076  
                      _oldSetpoint 0069                    ___lwdiv@counter 007D  
                PID_Calculate@temp 0040                           __ptext10 0C45  
                         __ptext11 0075                           __ptext20 0879  
                         __ptext12 0AE7                           __ptext21 0EAA  
                         __ptext13 09D7                           __ptext30 0CA5  
                         __ptext22 0011                           __ptext14 08D7  
                         __ptext31 0869                           __ptext23 0DA1  
                         __ptext15 0A78                           __ptext40 0965  
                         __ptext32 0980                           __ptext24 0BA7  
                         __ptext16 0931                           __ptext41 0899  
                         __ptext33 09F7                           __ptext25 08B6  
                         __ptext17 0E23                           __ptext34 0A1C  
                         __ptext26 08A7                           __ptext18 09B9  
                         __ptext35 08C5                           __ptext27 0004  
                         __ptext19 0364                           __ptext36 0900  
                         __ptext28 0A46                           __ptext37 0918  
                         __ptext29 0871                           __ptext38 08EA  
                         __ptext39 0129            __size_of_LCD_Set_Cursor 003F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13699 00DB  
                ??_PWM6_Initialize 0070                      __size_of_main 0374  
             __CFG_WDTCWS$WDTCWS_7 0000                       _tempSetpoint 01E1  
       ??_ADCC_GetSingleConversion 0073                           _setpoint 006D  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
                 PID_Calculate@Err 004A            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                        _PPSLOCKbits 0E8F  
                   _PID_First_Time 0066            __size_of_LCD_Write_Char 002A  
                 main@startupTimer 00AF                 LCD_Set_Cursor@temp 0079  
               LCD_Write_Int@value 0079              __end_of_PID_Calculate 01E1  
                  _TMR0_Initialize 08A7                     _PID_Integrated 0058  
                     ___aldiv@sign 0021             __size_of_LCD_Write_Int 00C9  
      PWM6_LoadDutyValue@dutyValue 0070                  Init_PID@maxOutput 0077  
   __end_of_PIN_MANAGER_Initialize 0A78                  ??_ADCC_Initialize 0070  
                Init_PID@minOutput 0075                        _toggleCount 006A  
                ??_InitCustomChars 0075  
