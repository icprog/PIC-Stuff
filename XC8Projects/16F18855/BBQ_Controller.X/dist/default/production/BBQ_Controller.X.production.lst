

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Apr 04 23:59:53 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x2350,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  001C                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0198                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021B                     	;# 
   702  021B                     	;# 
   703  021C                     	;# 
   704  021C                     	;# 
   705  021D                     	;# 
   706  021D                     	;# 
   707  021E                     	;# 
   708  021F                     	;# 
   709  028C                     	;# 
   710  028C                     	;# 
   711  028D                     	;# 
   712  028D                     	;# 
   713  028E                     	;# 
   714  028F                     	;# 
   715  0290                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0296                     	;# 
   726  0297                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  0299                     	;# 
   731  029A                     	;# 
   732  029B                     	;# 
   733  029C                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  030C                     	;# 
   737  030C                     	;# 
   738  030D                     	;# 
   739  030E                     	;# 
   740  030F                     	;# 
   741  0310                     	;# 
   742  0310                     	;# 
   743  0311                     	;# 
   744  0312                     	;# 
   745  0313                     	;# 
   746  0314                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0316                     	;# 
   750  0317                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031B                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  031F                     	;# 
   761  038C                     	;# 
   762  038D                     	;# 
   763  038E                     	;# 
   764  0390                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  040C                     	;# 
   768  040D                     	;# 
   769  040E                     	;# 
   770  040F                     	;# 
   771  0410                     	;# 
   772  0411                     	;# 
   773  0416                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  0418                     	;# 
   777  0418                     	;# 
   778  0419                     	;# 
   779  041A                     	;# 
   780  041A                     	;# 
   781  041B                     	;# 
   782  041C                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  041F                     	;# 
   787  048C                     	;# 
   788  048C                     	;# 
   789  048D                     	;# 
   790  048E                     	;# 
   791  048F                     	;# 
   792  048F                     	;# 
   793  0490                     	;# 
   794  0491                     	;# 
   795  0492                     	;# 
   796  0492                     	;# 
   797  0493                     	;# 
   798  0494                     	;# 
   799  0495                     	;# 
   800  0495                     	;# 
   801  0496                     	;# 
   802  0497                     	;# 
   803  0498                     	;# 
   804  0499                     	;# 
   805  049A                     	;# 
   806  049B                     	;# 
   807  049C                     	;# 
   808  049D                     	;# 
   809  050C                     	;# 
   810  050C                     	;# 
   811  050D                     	;# 
   812  050E                     	;# 
   813  050F                     	;# 
   814  050F                     	;# 
   815  0510                     	;# 
   816  0511                     	;# 
   817  0512                     	;# 
   818  0512                     	;# 
   819  0513                     	;# 
   820  0514                     	;# 
   821  0515                     	;# 
   822  0515                     	;# 
   823  0516                     	;# 
   824  0517                     	;# 
   825  0518                     	;# 
   826  0519                     	;# 
   827  051A                     	;# 
   828  051B                     	;# 
   829  051C                     	;# 
   830  051D                     	;# 
   831  058C                     	;# 
   832  058C                     	;# 
   833  058D                     	;# 
   834  058E                     	;# 
   835  058F                     	;# 
   836  058F                     	;# 
   837  0590                     	;# 
   838  0591                     	;# 
   839  0592                     	;# 
   840  0593                     	;# 
   841  060C                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0618                     	;# 
   853  0619                     	;# 
   854  061A                     	;# 
   855  061B                     	;# 
   856  061C                     	;# 
   857  061D                     	;# 
   858  061E                     	;# 
   859  068C                     	;# 
   860  068D                     	;# 
   861  068E                     	;# 
   862  068F                     	;# 
   863  0690                     	;# 
   864  0691                     	;# 
   865  0692                     	;# 
   866  0693                     	;# 
   867  0694                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  091F                     	;# 
   927  098F                     	;# 
   928  098F                     	;# 
   929  0990                     	;# 
   930  0991                     	;# 
   931  0992                     	;# 
   932  0993                     	;# 
   933  0994                     	;# 
   934  0995                     	;# 
   935  0996                     	;# 
   936  0997                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E16                     	;# 
   945  0E17                     	;# 
   946  0E18                     	;# 
   947  0E19                     	;# 
   948  0E1A                     	;# 
   949  0E1B                     	;# 
   950  0E1C                     	;# 
   951  0E1D                     	;# 
   952  0E1E                     	;# 
   953  0E1F                     	;# 
   954  0E20                     	;# 
   955  0E21                     	;# 
   956  0E22                     	;# 
   957  0E23                     	;# 
   958  0E24                     	;# 
   959  0E25                     	;# 
   960  0E26                     	;# 
   961  0E27                     	;# 
   962  0E28                     	;# 
   963  0E29                     	;# 
   964  0E2A                     	;# 
   965  0E2B                     	;# 
   966  0E2C                     	;# 
   967  0E2D                     	;# 
   968  0E2E                     	;# 
   969  0E2F                     	;# 
   970  0E30                     	;# 
   971  0E31                     	;# 
   972  0E32                     	;# 
   973  0E33                     	;# 
   974  0E34                     	;# 
   975  0E35                     	;# 
   976  0E36                     	;# 
   977  0E37                     	;# 
   978  0E8F                     	;# 
   979  0E90                     	;# 
   980  0E91                     	;# 
   981  0E92                     	;# 
   982  0E93                     	;# 
   983  0E94                     	;# 
   984  0E95                     	;# 
   985  0E96                     	;# 
   986  0E97                     	;# 
   987  0E9C                     	;# 
   988  0E9D                     	;# 
   989  0E9E                     	;# 
   990  0EA1                     	;# 
   991  0EA2                     	;# 
   992  0EA3                     	;# 
   993  0EA4                     	;# 
   994  0EA5                     	;# 
   995  0EA9                     	;# 
   996  0EAA                     	;# 
   997  0EAB                     	;# 
   998  0EAC                     	;# 
   999  0EB1                     	;# 
  1000  0EB2                     	;# 
  1001  0EB3                     	;# 
  1002  0EB8                     	;# 
  1003  0EB9                     	;# 
  1004  0EBA                     	;# 
  1005  0EBB                     	;# 
  1006  0EBC                     	;# 
  1007  0EBD                     	;# 
  1008  0EBE                     	;# 
  1009  0EC3                     	;# 
  1010  0EC5                     	;# 
  1011  0EC6                     	;# 
  1012  0EC7                     	;# 
  1013  0EC8                     	;# 
  1014  0EC9                     	;# 
  1015  0ECA                     	;# 
  1016  0ECB                     	;# 
  1017  0ECC                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0F24                     	;# 
  1039  0F25                     	;# 
  1040  0F26                     	;# 
  1041  0F27                     	;# 
  1042  0F38                     	;# 
  1043  0F39                     	;# 
  1044  0F3A                     	;# 
  1045  0F3B                     	;# 
  1046  0F3C                     	;# 
  1047  0F3D                     	;# 
  1048  0F3E                     	;# 
  1049  0F3F                     	;# 
  1050  0F40                     	;# 
  1051  0F41                     	;# 
  1052  0F43                     	;# 
  1053  0F44                     	;# 
  1054  0F45                     	;# 
  1055  0F46                     	;# 
  1056  0F47                     	;# 
  1057  0F48                     	;# 
  1058  0F49                     	;# 
  1059  0F4A                     	;# 
  1060  0F4B                     	;# 
  1061  0F4C                     	;# 
  1062  0F4E                     	;# 
  1063  0F4F                     	;# 
  1064  0F50                     	;# 
  1065  0F51                     	;# 
  1066  0F52                     	;# 
  1067  0F53                     	;# 
  1068  0F54                     	;# 
  1069  0F55                     	;# 
  1070  0F56                     	;# 
  1071  0F57                     	;# 
  1072  0F65                     	;# 
  1073  0F68                     	;# 
  1074  0F69                     	;# 
  1075  0F6A                     	;# 
  1076  0F6B                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0013                     	;# 
  1107  0016                     	;# 
  1108  0017                     	;# 
  1109  0018                     	;# 
  1110  001C                     	;# 
  1111  001C                     	;# 
  1112  001D                     	;# 
  1113  001D                     	;# 
  1114  001E                     	;# 
  1115  001F                     	;# 
  1116  008C                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008E                     	;# 
  1121  008F                     	;# 
  1122  0090                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0116                     	;# 
  1153  0117                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  018C                     	;# 
  1180  018D                     	;# 
  1181  018E                     	;# 
  1182  018F                     	;# 
  1183  0190                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0198                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019C                     	;# 
  1193  020C                     	;# 
  1194  020D                     	;# 
  1195  020E                     	;# 
  1196  020F                     	;# 
  1197  020F                     	;# 
  1198  0210                     	;# 
  1199  0210                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0296                     	;# 
  1239  0297                     	;# 
  1240  0298                     	;# 
  1241  0298                     	;# 
  1242  0299                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029B                     	;# 
  1246  029C                     	;# 
  1247  029C                     	;# 
  1248  029D                     	;# 
  1249  030C                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  0310                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0314                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  0318                     	;# 
  1266  0319                     	;# 
  1267  031A                     	;# 
  1268  031B                     	;# 
  1269  031C                     	;# 
  1270  031C                     	;# 
  1271  031D                     	;# 
  1272  031E                     	;# 
  1273  031F                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  040C                     	;# 
  1281  040D                     	;# 
  1282  040E                     	;# 
  1283  040F                     	;# 
  1284  0410                     	;# 
  1285  0411                     	;# 
  1286  0416                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  041F                     	;# 
  1300  048C                     	;# 
  1301  048C                     	;# 
  1302  048D                     	;# 
  1303  048E                     	;# 
  1304  048F                     	;# 
  1305  048F                     	;# 
  1306  0490                     	;# 
  1307  0491                     	;# 
  1308  0492                     	;# 
  1309  0492                     	;# 
  1310  0493                     	;# 
  1311  0494                     	;# 
  1312  0495                     	;# 
  1313  0495                     	;# 
  1314  0496                     	;# 
  1315  0497                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  050C                     	;# 
  1323  050C                     	;# 
  1324  050D                     	;# 
  1325  050E                     	;# 
  1326  050F                     	;# 
  1327  050F                     	;# 
  1328  0510                     	;# 
  1329  0511                     	;# 
  1330  0512                     	;# 
  1331  0512                     	;# 
  1332  0513                     	;# 
  1333  0514                     	;# 
  1334  0515                     	;# 
  1335  0515                     	;# 
  1336  0516                     	;# 
  1337  0517                     	;# 
  1338  0518                     	;# 
  1339  0519                     	;# 
  1340  051A                     	;# 
  1341  051B                     	;# 
  1342  051C                     	;# 
  1343  051D                     	;# 
  1344  058C                     	;# 
  1345  058C                     	;# 
  1346  058D                     	;# 
  1347  058E                     	;# 
  1348  058F                     	;# 
  1349  058F                     	;# 
  1350  0590                     	;# 
  1351  0591                     	;# 
  1352  0592                     	;# 
  1353  0593                     	;# 
  1354  060C                     	;# 
  1355  060D                     	;# 
  1356  060E                     	;# 
  1357  060F                     	;# 
  1358  0610                     	;# 
  1359  0611                     	;# 
  1360  0612                     	;# 
  1361  0613                     	;# 
  1362  0614                     	;# 
  1363  0616                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061D                     	;# 
  1371  061E                     	;# 
  1372  068C                     	;# 
  1373  068D                     	;# 
  1374  068E                     	;# 
  1375  068F                     	;# 
  1376  0690                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  070C                     	;# 
  1382  070D                     	;# 
  1383  070E                     	;# 
  1384  070F                     	;# 
  1385  0710                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  071A                     	;# 
  1395  071B                     	;# 
  1396  071C                     	;# 
  1397  071D                     	;# 
  1398  071E                     	;# 
  1399  0796                     	;# 
  1400  0797                     	;# 
  1401  0798                     	;# 
  1402  0799                     	;# 
  1403  079A                     	;# 
  1404  079B                     	;# 
  1405  080C                     	;# 
  1406  080D                     	;# 
  1407  080E                     	;# 
  1408  080F                     	;# 
  1409  0810                     	;# 
  1410  0811                     	;# 
  1411  0812                     	;# 
  1412  0813                     	;# 
  1413  0814                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081D                     	;# 
  1418  081E                     	;# 
  1419  081F                     	;# 
  1420  088C                     	;# 
  1421  088D                     	;# 
  1422  088E                     	;# 
  1423  088F                     	;# 
  1424  0890                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0893                     	;# 
  1428  0895                     	;# 
  1429  0896                     	;# 
  1430  0897                     	;# 
  1431  0898                     	;# 
  1432  0899                     	;# 
  1433  089A                     	;# 
  1434  089B                     	;# 
  1435  090C                     	;# 
  1436  090E                     	;# 
  1437  090F                     	;# 
  1438  091F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  0E0F                     	;# 
  1451  0E10                     	;# 
  1452  0E11                     	;# 
  1453  0E12                     	;# 
  1454  0E13                     	;# 
  1455  0E14                     	;# 
  1456  0E15                     	;# 
  1457  0E16                     	;# 
  1458  0E17                     	;# 
  1459  0E18                     	;# 
  1460  0E19                     	;# 
  1461  0E1A                     	;# 
  1462  0E1B                     	;# 
  1463  0E1C                     	;# 
  1464  0E1D                     	;# 
  1465  0E1E                     	;# 
  1466  0E1F                     	;# 
  1467  0E20                     	;# 
  1468  0E21                     	;# 
  1469  0E22                     	;# 
  1470  0E23                     	;# 
  1471  0E24                     	;# 
  1472  0E25                     	;# 
  1473  0E26                     	;# 
  1474  0E27                     	;# 
  1475  0E28                     	;# 
  1476  0E29                     	;# 
  1477  0E2A                     	;# 
  1478  0E2B                     	;# 
  1479  0E2C                     	;# 
  1480  0E2D                     	;# 
  1481  0E2E                     	;# 
  1482  0E2F                     	;# 
  1483  0E30                     	;# 
  1484  0E31                     	;# 
  1485  0E32                     	;# 
  1486  0E33                     	;# 
  1487  0E34                     	;# 
  1488  0E35                     	;# 
  1489  0E36                     	;# 
  1490  0E37                     	;# 
  1491  0E8F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E93                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0E96                     	;# 
  1499  0E97                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0EA1                     	;# 
  1504  0EA2                     	;# 
  1505  0EA3                     	;# 
  1506  0EA4                     	;# 
  1507  0EA5                     	;# 
  1508  0EA9                     	;# 
  1509  0EAA                     	;# 
  1510  0EAB                     	;# 
  1511  0EAC                     	;# 
  1512  0EB1                     	;# 
  1513  0EB2                     	;# 
  1514  0EB3                     	;# 
  1515  0EB8                     	;# 
  1516  0EB9                     	;# 
  1517  0EBA                     	;# 
  1518  0EBB                     	;# 
  1519  0EBC                     	;# 
  1520  0EBD                     	;# 
  1521  0EBE                     	;# 
  1522  0EC3                     	;# 
  1523  0EC5                     	;# 
  1524  0EC6                     	;# 
  1525  0EC7                     	;# 
  1526  0EC8                     	;# 
  1527  0EC9                     	;# 
  1528  0ECA                     	;# 
  1529  0ECB                     	;# 
  1530  0ECC                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F38                     	;# 
  1556  0F39                     	;# 
  1557  0F3A                     	;# 
  1558  0F3B                     	;# 
  1559  0F3C                     	;# 
  1560  0F3D                     	;# 
  1561  0F3E                     	;# 
  1562  0F3F                     	;# 
  1563  0F40                     	;# 
  1564  0F41                     	;# 
  1565  0F43                     	;# 
  1566  0F44                     	;# 
  1567  0F45                     	;# 
  1568  0F46                     	;# 
  1569  0F47                     	;# 
  1570  0F48                     	;# 
  1571  0F49                     	;# 
  1572  0F4A                     	;# 
  1573  0F4B                     	;# 
  1574  0F4C                     	;# 
  1575  0F4E                     	;# 
  1576  0F4F                     	;# 
  1577  0F50                     	;# 
  1578  0F51                     	;# 
  1579  0F52                     	;# 
  1580  0F53                     	;# 
  1581  0F54                     	;# 
  1582  0F55                     	;# 
  1583  0F56                     	;# 
  1584  0F57                     	;# 
  1585  0F65                     	;# 
  1586  0F68                     	;# 
  1587  0F69                     	;# 
  1588  0F6A                     	;# 
  1589  0F6B                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0010                     	;# 
  1617  0011                     	;# 
  1618  0012                     	;# 
  1619  0013                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  001C                     	;# 
  1624  001C                     	;# 
  1625  001D                     	;# 
  1626  001D                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008C                     	;# 
  1631  008D                     	;# 
  1632  008E                     	;# 
  1633  008E                     	;# 
  1634  008F                     	;# 
  1635  0090                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0093                     	;# 
  1639  0094                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0098                     	;# 
  1644  0099                     	;# 
  1645  009A                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  010E                     	;# 
  1654  010F                     	;# 
  1655  0110                     	;# 
  1656  0110                     	;# 
  1657  0111                     	;# 
  1658  0112                     	;# 
  1659  0112                     	;# 
  1660  0113                     	;# 
  1661  0114                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  018F                     	;# 
  1696  0190                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0196                     	;# 
  1700  0197                     	;# 
  1701  0198                     	;# 
  1702  0199                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  020F                     	;# 
  1710  020F                     	;# 
  1711  0210                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0214                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0218                     	;# 
  1725  0219                     	;# 
  1726  021A                     	;# 
  1727  021B                     	;# 
  1728  021B                     	;# 
  1729  021C                     	;# 
  1730  021C                     	;# 
  1731  021D                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028C                     	;# 
  1737  028D                     	;# 
  1738  028D                     	;# 
  1739  028E                     	;# 
  1740  028F                     	;# 
  1741  0290                     	;# 
  1742  0290                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0292                     	;# 
  1746  0293                     	;# 
  1747  0293                     	;# 
  1748  0294                     	;# 
  1749  0295                     	;# 
  1750  0296                     	;# 
  1751  0296                     	;# 
  1752  0297                     	;# 
  1753  0298                     	;# 
  1754  0298                     	;# 
  1755  0299                     	;# 
  1756  0299                     	;# 
  1757  029A                     	;# 
  1758  029B                     	;# 
  1759  029C                     	;# 
  1760  029C                     	;# 
  1761  029D                     	;# 
  1762  030C                     	;# 
  1763  030C                     	;# 
  1764  030D                     	;# 
  1765  030E                     	;# 
  1766  030F                     	;# 
  1767  0310                     	;# 
  1768  0310                     	;# 
  1769  0311                     	;# 
  1770  0312                     	;# 
  1771  0313                     	;# 
  1772  0314                     	;# 
  1773  0314                     	;# 
  1774  0315                     	;# 
  1775  0316                     	;# 
  1776  0317                     	;# 
  1777  0318                     	;# 
  1778  0318                     	;# 
  1779  0319                     	;# 
  1780  031A                     	;# 
  1781  031B                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  031F                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  038E                     	;# 
  1790  0390                     	;# 
  1791  0391                     	;# 
  1792  0392                     	;# 
  1793  040C                     	;# 
  1794  040D                     	;# 
  1795  040E                     	;# 
  1796  040F                     	;# 
  1797  0410                     	;# 
  1798  0411                     	;# 
  1799  0416                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041A                     	;# 
  1807  041B                     	;# 
  1808  041C                     	;# 
  1809  041C                     	;# 
  1810  041D                     	;# 
  1811  041E                     	;# 
  1812  041F                     	;# 
  1813  048C                     	;# 
  1814  048C                     	;# 
  1815  048D                     	;# 
  1816  048E                     	;# 
  1817  048F                     	;# 
  1818  048F                     	;# 
  1819  0490                     	;# 
  1820  0491                     	;# 
  1821  0492                     	;# 
  1822  0492                     	;# 
  1823  0493                     	;# 
  1824  0494                     	;# 
  1825  0495                     	;# 
  1826  0495                     	;# 
  1827  0496                     	;# 
  1828  0497                     	;# 
  1829  0498                     	;# 
  1830  0499                     	;# 
  1831  049A                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  050C                     	;# 
  1836  050C                     	;# 
  1837  050D                     	;# 
  1838  050E                     	;# 
  1839  050F                     	;# 
  1840  050F                     	;# 
  1841  0510                     	;# 
  1842  0511                     	;# 
  1843  0512                     	;# 
  1844  0512                     	;# 
  1845  0513                     	;# 
  1846  0514                     	;# 
  1847  0515                     	;# 
  1848  0515                     	;# 
  1849  0516                     	;# 
  1850  0517                     	;# 
  1851  0518                     	;# 
  1852  0519                     	;# 
  1853  051A                     	;# 
  1854  051B                     	;# 
  1855  051C                     	;# 
  1856  051D                     	;# 
  1857  058C                     	;# 
  1858  058C                     	;# 
  1859  058D                     	;# 
  1860  058E                     	;# 
  1861  058F                     	;# 
  1862  058F                     	;# 
  1863  0590                     	;# 
  1864  0591                     	;# 
  1865  0592                     	;# 
  1866  0593                     	;# 
  1867  060C                     	;# 
  1868  060D                     	;# 
  1869  060E                     	;# 
  1870  060F                     	;# 
  1871  0610                     	;# 
  1872  0611                     	;# 
  1873  0612                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0616                     	;# 
  1877  0617                     	;# 
  1878  0618                     	;# 
  1879  0619                     	;# 
  1880  061A                     	;# 
  1881  061B                     	;# 
  1882  061C                     	;# 
  1883  061D                     	;# 
  1884  061E                     	;# 
  1885  068C                     	;# 
  1886  068D                     	;# 
  1887  068E                     	;# 
  1888  068F                     	;# 
  1889  0690                     	;# 
  1890  0691                     	;# 
  1891  0692                     	;# 
  1892  0693                     	;# 
  1893  0694                     	;# 
  1894  070C                     	;# 
  1895  070D                     	;# 
  1896  070E                     	;# 
  1897  070F                     	;# 
  1898  0710                     	;# 
  1899  0711                     	;# 
  1900  0712                     	;# 
  1901  0713                     	;# 
  1902  0714                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0718                     	;# 
  1906  0719                     	;# 
  1907  071A                     	;# 
  1908  071B                     	;# 
  1909  071C                     	;# 
  1910  071D                     	;# 
  1911  071E                     	;# 
  1912  0796                     	;# 
  1913  0797                     	;# 
  1914  0798                     	;# 
  1915  0799                     	;# 
  1916  079A                     	;# 
  1917  079B                     	;# 
  1918  080C                     	;# 
  1919  080D                     	;# 
  1920  080E                     	;# 
  1921  080F                     	;# 
  1922  0810                     	;# 
  1923  0811                     	;# 
  1924  0812                     	;# 
  1925  0813                     	;# 
  1926  0814                     	;# 
  1927  081A                     	;# 
  1928  081B                     	;# 
  1929  081C                     	;# 
  1930  081D                     	;# 
  1931  081E                     	;# 
  1932  081F                     	;# 
  1933  088C                     	;# 
  1934  088D                     	;# 
  1935  088E                     	;# 
  1936  088F                     	;# 
  1937  0890                     	;# 
  1938  0891                     	;# 
  1939  0892                     	;# 
  1940  0893                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0897                     	;# 
  1944  0898                     	;# 
  1945  0899                     	;# 
  1946  089A                     	;# 
  1947  089B                     	;# 
  1948  090C                     	;# 
  1949  090E                     	;# 
  1950  090F                     	;# 
  1951  091F                     	;# 
  1952  091F                     	;# 
  1953  098F                     	;# 
  1954  098F                     	;# 
  1955  0990                     	;# 
  1956  0991                     	;# 
  1957  0992                     	;# 
  1958  0993                     	;# 
  1959  0994                     	;# 
  1960  0995                     	;# 
  1961  0996                     	;# 
  1962  0997                     	;# 
  1963  0E0F                     	;# 
  1964  0E10                     	;# 
  1965  0E11                     	;# 
  1966  0E12                     	;# 
  1967  0E13                     	;# 
  1968  0E14                     	;# 
  1969  0E15                     	;# 
  1970  0E16                     	;# 
  1971  0E17                     	;# 
  1972  0E18                     	;# 
  1973  0E19                     	;# 
  1974  0E1A                     	;# 
  1975  0E1B                     	;# 
  1976  0E1C                     	;# 
  1977  0E1D                     	;# 
  1978  0E1E                     	;# 
  1979  0E1F                     	;# 
  1980  0E20                     	;# 
  1981  0E21                     	;# 
  1982  0E22                     	;# 
  1983  0E23                     	;# 
  1984  0E24                     	;# 
  1985  0E25                     	;# 
  1986  0E26                     	;# 
  1987  0E27                     	;# 
  1988  0E28                     	;# 
  1989  0E29                     	;# 
  1990  0E2A                     	;# 
  1991  0E2B                     	;# 
  1992  0E2C                     	;# 
  1993  0E2D                     	;# 
  1994  0E2E                     	;# 
  1995  0E2F                     	;# 
  1996  0E30                     	;# 
  1997  0E31                     	;# 
  1998  0E32                     	;# 
  1999  0E33                     	;# 
  2000  0E34                     	;# 
  2001  0E35                     	;# 
  2002  0E36                     	;# 
  2003  0E37                     	;# 
  2004  0E8F                     	;# 
  2005  0E90                     	;# 
  2006  0E91                     	;# 
  2007  0E92                     	;# 
  2008  0E93                     	;# 
  2009  0E94                     	;# 
  2010  0E95                     	;# 
  2011  0E96                     	;# 
  2012  0E97                     	;# 
  2013  0E9C                     	;# 
  2014  0E9D                     	;# 
  2015  0E9E                     	;# 
  2016  0EA1                     	;# 
  2017  0EA2                     	;# 
  2018  0EA3                     	;# 
  2019  0EA4                     	;# 
  2020  0EA5                     	;# 
  2021  0EA9                     	;# 
  2022  0EAA                     	;# 
  2023  0EAB                     	;# 
  2024  0EAC                     	;# 
  2025  0EB1                     	;# 
  2026  0EB2                     	;# 
  2027  0EB3                     	;# 
  2028  0EB8                     	;# 
  2029  0EB9                     	;# 
  2030  0EBA                     	;# 
  2031  0EBB                     	;# 
  2032  0EBC                     	;# 
  2033  0EBD                     	;# 
  2034  0EBE                     	;# 
  2035  0EC3                     	;# 
  2036  0EC5                     	;# 
  2037  0EC6                     	;# 
  2038  0EC7                     	;# 
  2039  0EC8                     	;# 
  2040  0EC9                     	;# 
  2041  0ECA                     	;# 
  2042  0ECB                     	;# 
  2043  0ECC                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F38                     	;# 
  2069  0F39                     	;# 
  2070  0F3A                     	;# 
  2071  0F3B                     	;# 
  2072  0F3C                     	;# 
  2073  0F3D                     	;# 
  2074  0F3E                     	;# 
  2075  0F3F                     	;# 
  2076  0F40                     	;# 
  2077  0F41                     	;# 
  2078  0F43                     	;# 
  2079  0F44                     	;# 
  2080  0F45                     	;# 
  2081  0F46                     	;# 
  2082  0F47                     	;# 
  2083  0F48                     	;# 
  2084  0F49                     	;# 
  2085  0F4A                     	;# 
  2086  0F4B                     	;# 
  2087  0F4C                     	;# 
  2088  0F4E                     	;# 
  2089  0F4F                     	;# 
  2090  0F50                     	;# 
  2091  0F51                     	;# 
  2092  0F52                     	;# 
  2093  0F53                     	;# 
  2094  0F54                     	;# 
  2095  0F55                     	;# 
  2096  0F56                     	;# 
  2097  0F57                     	;# 
  2098  0F65                     	;# 
  2099  0F68                     	;# 
  2100  0F69                     	;# 
  2101  0F6A                     	;# 
  2102  0F6B                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0010                     	;# 
  2130  0011                     	;# 
  2131  0012                     	;# 
  2132  0013                     	;# 
  2133  0016                     	;# 
  2134  0017                     	;# 
  2135  0018                     	;# 
  2136  001C                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001D                     	;# 
  2140  001E                     	;# 
  2141  001F                     	;# 
  2142  008C                     	;# 
  2143  008C                     	;# 
  2144  008D                     	;# 
  2145  008E                     	;# 
  2146  008E                     	;# 
  2147  008F                     	;# 
  2148  0090                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0093                     	;# 
  2152  0094                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009C                     	;# 
  2161  009D                     	;# 
  2162  009E                     	;# 
  2163  010C                     	;# 
  2164  010D                     	;# 
  2165  010E                     	;# 
  2166  010E                     	;# 
  2167  010F                     	;# 
  2168  0110                     	;# 
  2169  0110                     	;# 
  2170  0111                     	;# 
  2171  0112                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0116                     	;# 
  2179  0117                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  018C                     	;# 
  2206  018D                     	;# 
  2207  018E                     	;# 
  2208  018F                     	;# 
  2209  0190                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0196                     	;# 
  2213  0197                     	;# 
  2214  0198                     	;# 
  2215  0199                     	;# 
  2216  019A                     	;# 
  2217  019B                     	;# 
  2218  019C                     	;# 
  2219  020C                     	;# 
  2220  020D                     	;# 
  2221  020E                     	;# 
  2222  020F                     	;# 
  2223  020F                     	;# 
  2224  0210                     	;# 
  2225  0210                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0213                     	;# 
  2230  0214                     	;# 
  2231  0215                     	;# 
  2232  0215                     	;# 
  2233  0216                     	;# 
  2234  0216                     	;# 
  2235  0217                     	;# 
  2236  0217                     	;# 
  2237  0218                     	;# 
  2238  0219                     	;# 
  2239  021A                     	;# 
  2240  021B                     	;# 
  2241  021B                     	;# 
  2242  021C                     	;# 
  2243  021C                     	;# 
  2244  021D                     	;# 
  2245  021D                     	;# 
  2246  021E                     	;# 
  2247  021F                     	;# 
  2248  028C                     	;# 
  2249  028C                     	;# 
  2250  028D                     	;# 
  2251  028D                     	;# 
  2252  028E                     	;# 
  2253  028F                     	;# 
  2254  0290                     	;# 
  2255  0290                     	;# 
  2256  0291                     	;# 
  2257  0292                     	;# 
  2258  0292                     	;# 
  2259  0293                     	;# 
  2260  0293                     	;# 
  2261  0294                     	;# 
  2262  0295                     	;# 
  2263  0296                     	;# 
  2264  0296                     	;# 
  2265  0297                     	;# 
  2266  0298                     	;# 
  2267  0298                     	;# 
  2268  0299                     	;# 
  2269  0299                     	;# 
  2270  029A                     	;# 
  2271  029B                     	;# 
  2272  029C                     	;# 
  2273  029C                     	;# 
  2274  029D                     	;# 
  2275  030C                     	;# 
  2276  030C                     	;# 
  2277  030D                     	;# 
  2278  030E                     	;# 
  2279  030F                     	;# 
  2280  0310                     	;# 
  2281  0310                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0314                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0317                     	;# 
  2290  0318                     	;# 
  2291  0318                     	;# 
  2292  0319                     	;# 
  2293  031A                     	;# 
  2294  031B                     	;# 
  2295  031C                     	;# 
  2296  031C                     	;# 
  2297  031D                     	;# 
  2298  031E                     	;# 
  2299  031F                     	;# 
  2300  038C                     	;# 
  2301  038D                     	;# 
  2302  038E                     	;# 
  2303  0390                     	;# 
  2304  0391                     	;# 
  2305  0392                     	;# 
  2306  040C                     	;# 
  2307  040D                     	;# 
  2308  040E                     	;# 
  2309  040F                     	;# 
  2310  0410                     	;# 
  2311  0411                     	;# 
  2312  0416                     	;# 
  2313  0416                     	;# 
  2314  0417                     	;# 
  2315  0418                     	;# 
  2316  0418                     	;# 
  2317  0419                     	;# 
  2318  041A                     	;# 
  2319  041A                     	;# 
  2320  041B                     	;# 
  2321  041C                     	;# 
  2322  041C                     	;# 
  2323  041D                     	;# 
  2324  041E                     	;# 
  2325  041F                     	;# 
  2326  048C                     	;# 
  2327  048C                     	;# 
  2328  048D                     	;# 
  2329  048E                     	;# 
  2330  048F                     	;# 
  2331  048F                     	;# 
  2332  0490                     	;# 
  2333  0491                     	;# 
  2334  0492                     	;# 
  2335  0492                     	;# 
  2336  0493                     	;# 
  2337  0494                     	;# 
  2338  0495                     	;# 
  2339  0495                     	;# 
  2340  0496                     	;# 
  2341  0497                     	;# 
  2342  0498                     	;# 
  2343  0499                     	;# 
  2344  049A                     	;# 
  2345  049B                     	;# 
  2346  049C                     	;# 
  2347  049D                     	;# 
  2348  050C                     	;# 
  2349  050C                     	;# 
  2350  050D                     	;# 
  2351  050E                     	;# 
  2352  050F                     	;# 
  2353  050F                     	;# 
  2354  0510                     	;# 
  2355  0511                     	;# 
  2356  0512                     	;# 
  2357  0512                     	;# 
  2358  0513                     	;# 
  2359  0514                     	;# 
  2360  0515                     	;# 
  2361  0515                     	;# 
  2362  0516                     	;# 
  2363  0517                     	;# 
  2364  0518                     	;# 
  2365  0519                     	;# 
  2366  051A                     	;# 
  2367  051B                     	;# 
  2368  051C                     	;# 
  2369  051D                     	;# 
  2370  058C                     	;# 
  2371  058C                     	;# 
  2372  058D                     	;# 
  2373  058E                     	;# 
  2374  058F                     	;# 
  2375  058F                     	;# 
  2376  0590                     	;# 
  2377  0591                     	;# 
  2378  0592                     	;# 
  2379  0593                     	;# 
  2380  060C                     	;# 
  2381  060D                     	;# 
  2382  060E                     	;# 
  2383  060F                     	;# 
  2384  0610                     	;# 
  2385  0611                     	;# 
  2386  0612                     	;# 
  2387  0613                     	;# 
  2388  0614                     	;# 
  2389  0616                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061D                     	;# 
  2397  061E                     	;# 
  2398  068C                     	;# 
  2399  068D                     	;# 
  2400  068E                     	;# 
  2401  068F                     	;# 
  2402  0690                     	;# 
  2403  0691                     	;# 
  2404  0692                     	;# 
  2405  0693                     	;# 
  2406  0694                     	;# 
  2407  070C                     	;# 
  2408  070D                     	;# 
  2409  070E                     	;# 
  2410  070F                     	;# 
  2411  0710                     	;# 
  2412  0711                     	;# 
  2413  0712                     	;# 
  2414  0713                     	;# 
  2415  0714                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  071A                     	;# 
  2421  071B                     	;# 
  2422  071C                     	;# 
  2423  071D                     	;# 
  2424  071E                     	;# 
  2425  0796                     	;# 
  2426  0797                     	;# 
  2427  0798                     	;# 
  2428  0799                     	;# 
  2429  079A                     	;# 
  2430  079B                     	;# 
  2431  080C                     	;# 
  2432  080D                     	;# 
  2433  080E                     	;# 
  2434  080F                     	;# 
  2435  0810                     	;# 
  2436  0811                     	;# 
  2437  0812                     	;# 
  2438  0813                     	;# 
  2439  0814                     	;# 
  2440  081A                     	;# 
  2441  081B                     	;# 
  2442  081C                     	;# 
  2443  081D                     	;# 
  2444  081E                     	;# 
  2445  081F                     	;# 
  2446  088C                     	;# 
  2447  088D                     	;# 
  2448  088E                     	;# 
  2449  088F                     	;# 
  2450  0890                     	;# 
  2451  0891                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0895                     	;# 
  2455  0896                     	;# 
  2456  0897                     	;# 
  2457  0898                     	;# 
  2458  0899                     	;# 
  2459  089A                     	;# 
  2460  089B                     	;# 
  2461  090C                     	;# 
  2462  090E                     	;# 
  2463  090F                     	;# 
  2464  091F                     	;# 
  2465  091F                     	;# 
  2466  098F                     	;# 
  2467  098F                     	;# 
  2468  0990                     	;# 
  2469  0991                     	;# 
  2470  0992                     	;# 
  2471  0993                     	;# 
  2472  0994                     	;# 
  2473  0995                     	;# 
  2474  0996                     	;# 
  2475  0997                     	;# 
  2476  0E0F                     	;# 
  2477  0E10                     	;# 
  2478  0E11                     	;# 
  2479  0E12                     	;# 
  2480  0E13                     	;# 
  2481  0E14                     	;# 
  2482  0E15                     	;# 
  2483  0E16                     	;# 
  2484  0E17                     	;# 
  2485  0E18                     	;# 
  2486  0E19                     	;# 
  2487  0E1A                     	;# 
  2488  0E1B                     	;# 
  2489  0E1C                     	;# 
  2490  0E1D                     	;# 
  2491  0E1E                     	;# 
  2492  0E1F                     	;# 
  2493  0E20                     	;# 
  2494  0E21                     	;# 
  2495  0E22                     	;# 
  2496  0E23                     	;# 
  2497  0E24                     	;# 
  2498  0E25                     	;# 
  2499  0E26                     	;# 
  2500  0E27                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E30                     	;# 
  2510  0E31                     	;# 
  2511  0E32                     	;# 
  2512  0E33                     	;# 
  2513  0E34                     	;# 
  2514  0E35                     	;# 
  2515  0E36                     	;# 
  2516  0E37                     	;# 
  2517  0E8F                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E93                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E96                     	;# 
  2525  0E97                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA9                     	;# 
  2535  0EAA                     	;# 
  2536  0EAB                     	;# 
  2537  0EAC                     	;# 
  2538  0EB1                     	;# 
  2539  0EB2                     	;# 
  2540  0EB3                     	;# 
  2541  0EB8                     	;# 
  2542  0EB9                     	;# 
  2543  0EBA                     	;# 
  2544  0EBB                     	;# 
  2545  0EBC                     	;# 
  2546  0EBD                     	;# 
  2547  0EBE                     	;# 
  2548  0EC3                     	;# 
  2549  0EC5                     	;# 
  2550  0EC6                     	;# 
  2551  0EC7                     	;# 
  2552  0EC8                     	;# 
  2553  0EC9                     	;# 
  2554  0ECA                     	;# 
  2555  0ECB                     	;# 
  2556  0ECC                     	;# 
  2557  0F10                     	;# 
  2558  0F11                     	;# 
  2559  0F12                     	;# 
  2560  0F13                     	;# 
  2561  0F14                     	;# 
  2562  0F15                     	;# 
  2563  0F16                     	;# 
  2564  0F17                     	;# 
  2565  0F18                     	;# 
  2566  0F19                     	;# 
  2567  0F1A                     	;# 
  2568  0F1B                     	;# 
  2569  0F1C                     	;# 
  2570  0F1D                     	;# 
  2571  0F1E                     	;# 
  2572  0F1F                     	;# 
  2573  0F20                     	;# 
  2574  0F21                     	;# 
  2575  0F22                     	;# 
  2576  0F23                     	;# 
  2577  0F24                     	;# 
  2578  0F25                     	;# 
  2579  0F26                     	;# 
  2580  0F27                     	;# 
  2581  0F38                     	;# 
  2582  0F39                     	;# 
  2583  0F3A                     	;# 
  2584  0F3B                     	;# 
  2585  0F3C                     	;# 
  2586  0F3D                     	;# 
  2587  0F3E                     	;# 
  2588  0F3F                     	;# 
  2589  0F40                     	;# 
  2590  0F41                     	;# 
  2591  0F43                     	;# 
  2592  0F44                     	;# 
  2593  0F45                     	;# 
  2594  0F46                     	;# 
  2595  0F47                     	;# 
  2596  0F48                     	;# 
  2597  0F49                     	;# 
  2598  0F4A                     	;# 
  2599  0F4B                     	;# 
  2600  0F4C                     	;# 
  2601  0F4E                     	;# 
  2602  0F4F                     	;# 
  2603  0F50                     	;# 
  2604  0F51                     	;# 
  2605  0F52                     	;# 
  2606  0F53                     	;# 
  2607  0F54                     	;# 
  2608  0F55                     	;# 
  2609  0F56                     	;# 
  2610  0F57                     	;# 
  2611  0F65                     	;# 
  2612  0F68                     	;# 
  2613  0F69                     	;# 
  2614  0F6A                     	;# 
  2615  0F6B                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  0010                     	;# 
  2643  0011                     	;# 
  2644  0012                     	;# 
  2645  0013                     	;# 
  2646  0016                     	;# 
  2647  0017                     	;# 
  2648  0018                     	;# 
  2649  001C                     	;# 
  2650  001C                     	;# 
  2651  001D                     	;# 
  2652  001D                     	;# 
  2653  001E                     	;# 
  2654  001F                     	;# 
  2655  008C                     	;# 
  2656  008C                     	;# 
  2657  008D                     	;# 
  2658  008E                     	;# 
  2659  008E                     	;# 
  2660  008F                     	;# 
  2661  0090                     	;# 
  2662  0090                     	;# 
  2663  0091                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  010C                     	;# 
  2677  010D                     	;# 
  2678  010E                     	;# 
  2679  010E                     	;# 
  2680  010F                     	;# 
  2681  0110                     	;# 
  2682  0110                     	;# 
  2683  0111                     	;# 
  2684  0112                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0116                     	;# 
  2692  0117                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  018E                     	;# 
  2721  018F                     	;# 
  2722  0190                     	;# 
  2723  0191                     	;# 
  2724  0192                     	;# 
  2725  0196                     	;# 
  2726  0197                     	;# 
  2727  0198                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019B                     	;# 
  2731  019C                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  020F                     	;# 
  2736  020F                     	;# 
  2737  0210                     	;# 
  2738  0210                     	;# 
  2739  0211                     	;# 
  2740  0211                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0218                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021B                     	;# 
  2755  021C                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028C                     	;# 
  2763  028D                     	;# 
  2764  028D                     	;# 
  2765  028E                     	;# 
  2766  028F                     	;# 
  2767  0290                     	;# 
  2768  0290                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0292                     	;# 
  2772  0293                     	;# 
  2773  0293                     	;# 
  2774  0294                     	;# 
  2775  0295                     	;# 
  2776  0296                     	;# 
  2777  0296                     	;# 
  2778  0297                     	;# 
  2779  0298                     	;# 
  2780  0298                     	;# 
  2781  0299                     	;# 
  2782  0299                     	;# 
  2783  029A                     	;# 
  2784  029B                     	;# 
  2785  029C                     	;# 
  2786  029C                     	;# 
  2787  029D                     	;# 
  2788  030C                     	;# 
  2789  030C                     	;# 
  2790  030D                     	;# 
  2791  030E                     	;# 
  2792  030F                     	;# 
  2793  0310                     	;# 
  2794  0310                     	;# 
  2795  0311                     	;# 
  2796  0312                     	;# 
  2797  0313                     	;# 
  2798  0314                     	;# 
  2799  0314                     	;# 
  2800  0315                     	;# 
  2801  0316                     	;# 
  2802  0317                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031B                     	;# 
  2808  031C                     	;# 
  2809  031C                     	;# 
  2810  031D                     	;# 
  2811  031E                     	;# 
  2812  031F                     	;# 
  2813  038C                     	;# 
  2814  038D                     	;# 
  2815  038E                     	;# 
  2816  0390                     	;# 
  2817  0391                     	;# 
  2818  0392                     	;# 
  2819  040C                     	;# 
  2820  040D                     	;# 
  2821  040E                     	;# 
  2822  040F                     	;# 
  2823  0410                     	;# 
  2824  0411                     	;# 
  2825  0416                     	;# 
  2826  0416                     	;# 
  2827  0417                     	;# 
  2828  0418                     	;# 
  2829  0418                     	;# 
  2830  0419                     	;# 
  2831  041A                     	;# 
  2832  041A                     	;# 
  2833  041B                     	;# 
  2834  041C                     	;# 
  2835  041C                     	;# 
  2836  041D                     	;# 
  2837  041E                     	;# 
  2838  041F                     	;# 
  2839  048C                     	;# 
  2840  048C                     	;# 
  2841  048D                     	;# 
  2842  048E                     	;# 
  2843  048F                     	;# 
  2844  048F                     	;# 
  2845  0490                     	;# 
  2846  0491                     	;# 
  2847  0492                     	;# 
  2848  0492                     	;# 
  2849  0493                     	;# 
  2850  0494                     	;# 
  2851  0495                     	;# 
  2852  0495                     	;# 
  2853  0496                     	;# 
  2854  0497                     	;# 
  2855  0498                     	;# 
  2856  0499                     	;# 
  2857  049A                     	;# 
  2858  049B                     	;# 
  2859  049C                     	;# 
  2860  049D                     	;# 
  2861  050C                     	;# 
  2862  050C                     	;# 
  2863  050D                     	;# 
  2864  050E                     	;# 
  2865  050F                     	;# 
  2866  050F                     	;# 
  2867  0510                     	;# 
  2868  0511                     	;# 
  2869  0512                     	;# 
  2870  0512                     	;# 
  2871  0513                     	;# 
  2872  0514                     	;# 
  2873  0515                     	;# 
  2874  0515                     	;# 
  2875  0516                     	;# 
  2876  0517                     	;# 
  2877  0518                     	;# 
  2878  0519                     	;# 
  2879  051A                     	;# 
  2880  051B                     	;# 
  2881  051C                     	;# 
  2882  051D                     	;# 
  2883  058C                     	;# 
  2884  058C                     	;# 
  2885  058D                     	;# 
  2886  058E                     	;# 
  2887  058F                     	;# 
  2888  058F                     	;# 
  2889  0590                     	;# 
  2890  0591                     	;# 
  2891  0592                     	;# 
  2892  0593                     	;# 
  2893  060C                     	;# 
  2894  060D                     	;# 
  2895  060E                     	;# 
  2896  060F                     	;# 
  2897  0610                     	;# 
  2898  0611                     	;# 
  2899  0612                     	;# 
  2900  0613                     	;# 
  2901  0614                     	;# 
  2902  0616                     	;# 
  2903  0617                     	;# 
  2904  0618                     	;# 
  2905  0619                     	;# 
  2906  061A                     	;# 
  2907  061B                     	;# 
  2908  061C                     	;# 
  2909  061D                     	;# 
  2910  061E                     	;# 
  2911  068C                     	;# 
  2912  068D                     	;# 
  2913  068E                     	;# 
  2914  068F                     	;# 
  2915  0690                     	;# 
  2916  0691                     	;# 
  2917  0692                     	;# 
  2918  0693                     	;# 
  2919  0694                     	;# 
  2920  070C                     	;# 
  2921  070D                     	;# 
  2922  070E                     	;# 
  2923  070F                     	;# 
  2924  0710                     	;# 
  2925  0711                     	;# 
  2926  0712                     	;# 
  2927  0713                     	;# 
  2928  0714                     	;# 
  2929  0716                     	;# 
  2930  0717                     	;# 
  2931  0718                     	;# 
  2932  0719                     	;# 
  2933  071A                     	;# 
  2934  071B                     	;# 
  2935  071C                     	;# 
  2936  071D                     	;# 
  2937  071E                     	;# 
  2938  0796                     	;# 
  2939  0797                     	;# 
  2940  0798                     	;# 
  2941  0799                     	;# 
  2942  079A                     	;# 
  2943  079B                     	;# 
  2944  080C                     	;# 
  2945  080D                     	;# 
  2946  080E                     	;# 
  2947  080F                     	;# 
  2948  0810                     	;# 
  2949  0811                     	;# 
  2950  0812                     	;# 
  2951  0813                     	;# 
  2952  0814                     	;# 
  2953  081A                     	;# 
  2954  081B                     	;# 
  2955  081C                     	;# 
  2956  081D                     	;# 
  2957  081E                     	;# 
  2958  081F                     	;# 
  2959  088C                     	;# 
  2960  088D                     	;# 
  2961  088E                     	;# 
  2962  088F                     	;# 
  2963  0890                     	;# 
  2964  0891                     	;# 
  2965  0892                     	;# 
  2966  0893                     	;# 
  2967  0895                     	;# 
  2968  0896                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  089A                     	;# 
  2973  089B                     	;# 
  2974  090C                     	;# 
  2975  090E                     	;# 
  2976  090F                     	;# 
  2977  091F                     	;# 
  2978  091F                     	;# 
  2979  098F                     	;# 
  2980  098F                     	;# 
  2981  0990                     	;# 
  2982  0991                     	;# 
  2983  0992                     	;# 
  2984  0993                     	;# 
  2985  0994                     	;# 
  2986  0995                     	;# 
  2987  0996                     	;# 
  2988  0997                     	;# 
  2989  0E0F                     	;# 
  2990  0E10                     	;# 
  2991  0E11                     	;# 
  2992  0E12                     	;# 
  2993  0E13                     	;# 
  2994  0E14                     	;# 
  2995  0E15                     	;# 
  2996  0E16                     	;# 
  2997  0E17                     	;# 
  2998  0E18                     	;# 
  2999  0E19                     	;# 
  3000  0E1A                     	;# 
  3001  0E1B                     	;# 
  3002  0E1C                     	;# 
  3003  0E1D                     	;# 
  3004  0E1E                     	;# 
  3005  0E1F                     	;# 
  3006  0E20                     	;# 
  3007  0E21                     	;# 
  3008  0E22                     	;# 
  3009  0E23                     	;# 
  3010  0E24                     	;# 
  3011  0E25                     	;# 
  3012  0E26                     	;# 
  3013  0E27                     	;# 
  3014  0E28                     	;# 
  3015  0E29                     	;# 
  3016  0E2A                     	;# 
  3017  0E2B                     	;# 
  3018  0E2C                     	;# 
  3019  0E2D                     	;# 
  3020  0E2E                     	;# 
  3021  0E2F                     	;# 
  3022  0E30                     	;# 
  3023  0E31                     	;# 
  3024  0E32                     	;# 
  3025  0E33                     	;# 
  3026  0E34                     	;# 
  3027  0E35                     	;# 
  3028  0E36                     	;# 
  3029  0E37                     	;# 
  3030  0E8F                     	;# 
  3031  0E90                     	;# 
  3032  0E91                     	;# 
  3033  0E92                     	;# 
  3034  0E93                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E96                     	;# 
  3038  0E97                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA9                     	;# 
  3048  0EAA                     	;# 
  3049  0EAB                     	;# 
  3050  0EAC                     	;# 
  3051  0EB1                     	;# 
  3052  0EB2                     	;# 
  3053  0EB3                     	;# 
  3054  0EB8                     	;# 
  3055  0EB9                     	;# 
  3056  0EBA                     	;# 
  3057  0EBB                     	;# 
  3058  0EBC                     	;# 
  3059  0EBD                     	;# 
  3060  0EBE                     	;# 
  3061  0EC3                     	;# 
  3062  0EC5                     	;# 
  3063  0EC6                     	;# 
  3064  0EC7                     	;# 
  3065  0EC8                     	;# 
  3066  0EC9                     	;# 
  3067  0ECA                     	;# 
  3068  0ECB                     	;# 
  3069  0ECC                     	;# 
  3070  0F10                     	;# 
  3071  0F11                     	;# 
  3072  0F12                     	;# 
  3073  0F13                     	;# 
  3074  0F14                     	;# 
  3075  0F15                     	;# 
  3076  0F16                     	;# 
  3077  0F17                     	;# 
  3078  0F18                     	;# 
  3079  0F19                     	;# 
  3080  0F1A                     	;# 
  3081  0F1B                     	;# 
  3082  0F1C                     	;# 
  3083  0F1D                     	;# 
  3084  0F1E                     	;# 
  3085  0F1F                     	;# 
  3086  0F20                     	;# 
  3087  0F21                     	;# 
  3088  0F22                     	;# 
  3089  0F23                     	;# 
  3090  0F24                     	;# 
  3091  0F25                     	;# 
  3092  0F26                     	;# 
  3093  0F27                     	;# 
  3094  0F38                     	;# 
  3095  0F39                     	;# 
  3096  0F3A                     	;# 
  3097  0F3B                     	;# 
  3098  0F3C                     	;# 
  3099  0F3D                     	;# 
  3100  0F3E                     	;# 
  3101  0F3F                     	;# 
  3102  0F40                     	;# 
  3103  0F41                     	;# 
  3104  0F43                     	;# 
  3105  0F44                     	;# 
  3106  0F45                     	;# 
  3107  0F46                     	;# 
  3108  0F47                     	;# 
  3109  0F48                     	;# 
  3110  0F49                     	;# 
  3111  0F4A                     	;# 
  3112  0F4B                     	;# 
  3113  0F4C                     	;# 
  3114  0F4E                     	;# 
  3115  0F4F                     	;# 
  3116  0F50                     	;# 
  3117  0F51                     	;# 
  3118  0F52                     	;# 
  3119  0F53                     	;# 
  3120  0F54                     	;# 
  3121  0F55                     	;# 
  3122  0F56                     	;# 
  3123  0F57                     	;# 
  3124  0F65                     	;# 
  3125  0F68                     	;# 
  3126  0F69                     	;# 
  3127  0F6A                     	;# 
  3128  0F6B                     	;# 
  3129  0FE4                     	;# 
  3130  0FE5                     	;# 
  3131  0FE6                     	;# 
  3132  0FE7                     	;# 
  3133  0FE8                     	;# 
  3134  0FE9                     	;# 
  3135  0FEA                     	;# 
  3136  0FEB                     	;# 
  3137  0FED                     	;# 
  3138  0FEE                     	;# 
  3139  0FEF                     	;# 
  3140  0000                     	;# 
  3141  0001                     	;# 
  3142  0002                     	;# 
  3143  0003                     	;# 
  3144  0004                     	;# 
  3145  0005                     	;# 
  3146  0006                     	;# 
  3147  0007                     	;# 
  3148  0008                     	;# 
  3149  0009                     	;# 
  3150  000A                     	;# 
  3151  000B                     	;# 
  3152  000C                     	;# 
  3153  000D                     	;# 
  3154  000E                     	;# 
  3155  0010                     	;# 
  3156  0011                     	;# 
  3157  0012                     	;# 
  3158  0013                     	;# 
  3159  0016                     	;# 
  3160  0017                     	;# 
  3161  0018                     	;# 
  3162  001C                     	;# 
  3163  001C                     	;# 
  3164  001D                     	;# 
  3165  001D                     	;# 
  3166  001E                     	;# 
  3167  001F                     	;# 
  3168  008C                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  008E                     	;# 
  3173  008F                     	;# 
  3174  0090                     	;# 
  3175  0090                     	;# 
  3176  0091                     	;# 
  3177  0093                     	;# 
  3178  0094                     	;# 
  3179  0095                     	;# 
  3180  0096                     	;# 
  3181  0097                     	;# 
  3182  0098                     	;# 
  3183  0099                     	;# 
  3184  009A                     	;# 
  3185  009B                     	;# 
  3186  009C                     	;# 
  3187  009D                     	;# 
  3188  009E                     	;# 
  3189  010C                     	;# 
  3190  010D                     	;# 
  3191  010E                     	;# 
  3192  010E                     	;# 
  3193  010F                     	;# 
  3194  0110                     	;# 
  3195  0110                     	;# 
  3196  0111                     	;# 
  3197  0112                     	;# 
  3198  0112                     	;# 
  3199  0113                     	;# 
  3200  0114                     	;# 
  3201  0114                     	;# 
  3202  0115                     	;# 
  3203  0116                     	;# 
  3204  0116                     	;# 
  3205  0117                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  0196                     	;# 
  3239  0197                     	;# 
  3240  0198                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019B                     	;# 
  3244  019C                     	;# 
  3245  020C                     	;# 
  3246  020D                     	;# 
  3247  020E                     	;# 
  3248  020F                     	;# 
  3249  020F                     	;# 
  3250  0210                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0213                     	;# 
  3256  0214                     	;# 
  3257  0215                     	;# 
  3258  0215                     	;# 
  3259  0216                     	;# 
  3260  0216                     	;# 
  3261  0217                     	;# 
  3262  0217                     	;# 
  3263  0218                     	;# 
  3264  0219                     	;# 
  3265  021A                     	;# 
  3266  021B                     	;# 
  3267  021B                     	;# 
  3268  021C                     	;# 
  3269  021C                     	;# 
  3270  021D                     	;# 
  3271  021D                     	;# 
  3272  021E                     	;# 
  3273  021F                     	;# 
  3274  028C                     	;# 
  3275  028C                     	;# 
  3276  028D                     	;# 
  3277  028D                     	;# 
  3278  028E                     	;# 
  3279  028F                     	;# 
  3280  0290                     	;# 
  3281  0290                     	;# 
  3282  0291                     	;# 
  3283  0292                     	;# 
  3284  0292                     	;# 
  3285  0293                     	;# 
  3286  0293                     	;# 
  3287  0294                     	;# 
  3288  0295                     	;# 
  3289  0296                     	;# 
  3290  0296                     	;# 
  3291  0297                     	;# 
  3292  0298                     	;# 
  3293  0298                     	;# 
  3294  0299                     	;# 
  3295  0299                     	;# 
  3296  029A                     	;# 
  3297  029B                     	;# 
  3298  029C                     	;# 
  3299  029C                     	;# 
  3300  029D                     	;# 
  3301  030C                     	;# 
  3302  030C                     	;# 
  3303  030D                     	;# 
  3304  030E                     	;# 
  3305  030F                     	;# 
  3306  0310                     	;# 
  3307  0310                     	;# 
  3308  0311                     	;# 
  3309  0312                     	;# 
  3310  0313                     	;# 
  3311  0314                     	;# 
  3312  0314                     	;# 
  3313  0315                     	;# 
  3314  0316                     	;# 
  3315  0317                     	;# 
  3316  0318                     	;# 
  3317  0318                     	;# 
  3318  0319                     	;# 
  3319  031A                     	;# 
  3320  031B                     	;# 
  3321  031C                     	;# 
  3322  031C                     	;# 
  3323  031D                     	;# 
  3324  031E                     	;# 
  3325  031F                     	;# 
  3326  038C                     	;# 
  3327  038D                     	;# 
  3328  038E                     	;# 
  3329  0390                     	;# 
  3330  0391                     	;# 
  3331  0392                     	;# 
  3332  040C                     	;# 
  3333  040D                     	;# 
  3334  040E                     	;# 
  3335  040F                     	;# 
  3336  0410                     	;# 
  3337  0411                     	;# 
  3338  0416                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  0418                     	;# 
  3343  0419                     	;# 
  3344  041A                     	;# 
  3345  041A                     	;# 
  3346  041B                     	;# 
  3347  041C                     	;# 
  3348  041C                     	;# 
  3349  041D                     	;# 
  3350  041E                     	;# 
  3351  041F                     	;# 
  3352  048C                     	;# 
  3353  048C                     	;# 
  3354  048D                     	;# 
  3355  048E                     	;# 
  3356  048F                     	;# 
  3357  048F                     	;# 
  3358  0490                     	;# 
  3359  0491                     	;# 
  3360  0492                     	;# 
  3361  0492                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0495                     	;# 
  3366  0496                     	;# 
  3367  0497                     	;# 
  3368  0498                     	;# 
  3369  0499                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  050C                     	;# 
  3375  050C                     	;# 
  3376  050D                     	;# 
  3377  050E                     	;# 
  3378  050F                     	;# 
  3379  050F                     	;# 
  3380  0510                     	;# 
  3381  0511                     	;# 
  3382  0512                     	;# 
  3383  0512                     	;# 
  3384  0513                     	;# 
  3385  0514                     	;# 
  3386  0515                     	;# 
  3387  0515                     	;# 
  3388  0516                     	;# 
  3389  0517                     	;# 
  3390  0518                     	;# 
  3391  0519                     	;# 
  3392  051A                     	;# 
  3393  051B                     	;# 
  3394  051C                     	;# 
  3395  051D                     	;# 
  3396  058C                     	;# 
  3397  058C                     	;# 
  3398  058D                     	;# 
  3399  058E                     	;# 
  3400  058F                     	;# 
  3401  058F                     	;# 
  3402  0590                     	;# 
  3403  0591                     	;# 
  3404  0592                     	;# 
  3405  0593                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0616                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061B                     	;# 
  3421  061C                     	;# 
  3422  061D                     	;# 
  3423  061E                     	;# 
  3424  068C                     	;# 
  3425  068D                     	;# 
  3426  068E                     	;# 
  3427  068F                     	;# 
  3428  0690                     	;# 
  3429  0691                     	;# 
  3430  0692                     	;# 
  3431  0693                     	;# 
  3432  0694                     	;# 
  3433  070C                     	;# 
  3434  070D                     	;# 
  3435  070E                     	;# 
  3436  070F                     	;# 
  3437  0710                     	;# 
  3438  0711                     	;# 
  3439  0712                     	;# 
  3440  0713                     	;# 
  3441  0714                     	;# 
  3442  0716                     	;# 
  3443  0717                     	;# 
  3444  0718                     	;# 
  3445  0719                     	;# 
  3446  071A                     	;# 
  3447  071B                     	;# 
  3448  071C                     	;# 
  3449  071D                     	;# 
  3450  071E                     	;# 
  3451  0796                     	;# 
  3452  0797                     	;# 
  3453  0798                     	;# 
  3454  0799                     	;# 
  3455  079A                     	;# 
  3456  079B                     	;# 
  3457  080C                     	;# 
  3458  080D                     	;# 
  3459  080E                     	;# 
  3460  080F                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0813                     	;# 
  3465  0814                     	;# 
  3466  081A                     	;# 
  3467  081B                     	;# 
  3468  081C                     	;# 
  3469  081D                     	;# 
  3470  081E                     	;# 
  3471  081F                     	;# 
  3472  088C                     	;# 
  3473  088D                     	;# 
  3474  088E                     	;# 
  3475  088F                     	;# 
  3476  0890                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0895                     	;# 
  3481  0896                     	;# 
  3482  0897                     	;# 
  3483  0898                     	;# 
  3484  0899                     	;# 
  3485  089A                     	;# 
  3486  089B                     	;# 
  3487  090C                     	;# 
  3488  090E                     	;# 
  3489  090F                     	;# 
  3490  091F                     	;# 
  3491  091F                     	;# 
  3492  098F                     	;# 
  3493  098F                     	;# 
  3494  0990                     	;# 
  3495  0991                     	;# 
  3496  0992                     	;# 
  3497  0993                     	;# 
  3498  0994                     	;# 
  3499  0995                     	;# 
  3500  0996                     	;# 
  3501  0997                     	;# 
  3502  0E0F                     	;# 
  3503  0E10                     	;# 
  3504  0E11                     	;# 
  3505  0E12                     	;# 
  3506  0E13                     	;# 
  3507  0E14                     	;# 
  3508  0E15                     	;# 
  3509  0E16                     	;# 
  3510  0E17                     	;# 
  3511  0E18                     	;# 
  3512  0E19                     	;# 
  3513  0E1A                     	;# 
  3514  0E1B                     	;# 
  3515  0E1C                     	;# 
  3516  0E1D                     	;# 
  3517  0E1E                     	;# 
  3518  0E1F                     	;# 
  3519  0E20                     	;# 
  3520  0E21                     	;# 
  3521  0E22                     	;# 
  3522  0E23                     	;# 
  3523  0E24                     	;# 
  3524  0E25                     	;# 
  3525  0E26                     	;# 
  3526  0E27                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E30                     	;# 
  3536  0E31                     	;# 
  3537  0E32                     	;# 
  3538  0E33                     	;# 
  3539  0E34                     	;# 
  3540  0E35                     	;# 
  3541  0E36                     	;# 
  3542  0E37                     	;# 
  3543  0E8F                     	;# 
  3544  0E90                     	;# 
  3545  0E91                     	;# 
  3546  0E92                     	;# 
  3547  0E93                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E96                     	;# 
  3551  0E97                     	;# 
  3552  0E9C                     	;# 
  3553  0E9D                     	;# 
  3554  0E9E                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA9                     	;# 
  3561  0EAA                     	;# 
  3562  0EAB                     	;# 
  3563  0EAC                     	;# 
  3564  0EB1                     	;# 
  3565  0EB2                     	;# 
  3566  0EB3                     	;# 
  3567  0EB8                     	;# 
  3568  0EB9                     	;# 
  3569  0EBA                     	;# 
  3570  0EBB                     	;# 
  3571  0EBC                     	;# 
  3572  0EBD                     	;# 
  3573  0EBE                     	;# 
  3574  0EC3                     	;# 
  3575  0EC5                     	;# 
  3576  0EC6                     	;# 
  3577  0EC7                     	;# 
  3578  0EC8                     	;# 
  3579  0EC9                     	;# 
  3580  0ECA                     	;# 
  3581  0ECB                     	;# 
  3582  0ECC                     	;# 
  3583  0F10                     	;# 
  3584  0F11                     	;# 
  3585  0F12                     	;# 
  3586  0F13                     	;# 
  3587  0F14                     	;# 
  3588  0F15                     	;# 
  3589  0F16                     	;# 
  3590  0F17                     	;# 
  3591  0F18                     	;# 
  3592  0F19                     	;# 
  3593  0F1A                     	;# 
  3594  0F1B                     	;# 
  3595  0F1C                     	;# 
  3596  0F1D                     	;# 
  3597  0F1E                     	;# 
  3598  0F1F                     	;# 
  3599  0F20                     	;# 
  3600  0F21                     	;# 
  3601  0F22                     	;# 
  3602  0F23                     	;# 
  3603  0F24                     	;# 
  3604  0F25                     	;# 
  3605  0F26                     	;# 
  3606  0F27                     	;# 
  3607  0F38                     	;# 
  3608  0F39                     	;# 
  3609  0F3A                     	;# 
  3610  0F3B                     	;# 
  3611  0F3C                     	;# 
  3612  0F3D                     	;# 
  3613  0F3E                     	;# 
  3614  0F3F                     	;# 
  3615  0F40                     	;# 
  3616  0F41                     	;# 
  3617  0F43                     	;# 
  3618  0F44                     	;# 
  3619  0F45                     	;# 
  3620  0F46                     	;# 
  3621  0F47                     	;# 
  3622  0F48                     	;# 
  3623  0F49                     	;# 
  3624  0F4A                     	;# 
  3625  0F4B                     	;# 
  3626  0F4C                     	;# 
  3627  0F4E                     	;# 
  3628  0F4F                     	;# 
  3629  0F50                     	;# 
  3630  0F51                     	;# 
  3631  0F52                     	;# 
  3632  0F53                     	;# 
  3633  0F54                     	;# 
  3634  0F55                     	;# 
  3635  0F56                     	;# 
  3636  0F57                     	;# 
  3637  0F65                     	;# 
  3638  0F68                     	;# 
  3639  0F69                     	;# 
  3640  0F6A                     	;# 
  3641  0F6B                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0000                     	;# 
  3654  0001                     	;# 
  3655  0002                     	;# 
  3656  0003                     	;# 
  3657  0004                     	;# 
  3658  0005                     	;# 
  3659  0006                     	;# 
  3660  0007                     	;# 
  3661  0008                     	;# 
  3662  0009                     	;# 
  3663  000A                     	;# 
  3664  000B                     	;# 
  3665  000C                     	;# 
  3666  000D                     	;# 
  3667  000E                     	;# 
  3668  0010                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  001C                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008C                     	;# 
  3683  008D                     	;# 
  3684  008E                     	;# 
  3685  008E                     	;# 
  3686  008F                     	;# 
  3687  0090                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009C                     	;# 
  3700  009D                     	;# 
  3701  009E                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  010E                     	;# 
  3706  010F                     	;# 
  3707  0110                     	;# 
  3708  0110                     	;# 
  3709  0111                     	;# 
  3710  0112                     	;# 
  3711  0112                     	;# 
  3712  0113                     	;# 
  3713  0114                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0116                     	;# 
  3718  0117                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  018F                     	;# 
  3748  0190                     	;# 
  3749  0191                     	;# 
  3750  0192                     	;# 
  3751  0196                     	;# 
  3752  0197                     	;# 
  3753  0198                     	;# 
  3754  0199                     	;# 
  3755  019A                     	;# 
  3756  019B                     	;# 
  3757  019C                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  020F                     	;# 
  3762  020F                     	;# 
  3763  0210                     	;# 
  3764  0210                     	;# 
  3765  0211                     	;# 
  3766  0211                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0218                     	;# 
  3777  0219                     	;# 
  3778  021A                     	;# 
  3779  021B                     	;# 
  3780  021B                     	;# 
  3781  021C                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  028F                     	;# 
  3793  0290                     	;# 
  3794  0290                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0292                     	;# 
  3798  0293                     	;# 
  3799  0293                     	;# 
  3800  0294                     	;# 
  3801  0295                     	;# 
  3802  0296                     	;# 
  3803  0296                     	;# 
  3804  0297                     	;# 
  3805  0298                     	;# 
  3806  0298                     	;# 
  3807  0299                     	;# 
  3808  0299                     	;# 
  3809  029A                     	;# 
  3810  029B                     	;# 
  3811  029C                     	;# 
  3812  029C                     	;# 
  3813  029D                     	;# 
  3814  030C                     	;# 
  3815  030C                     	;# 
  3816  030D                     	;# 
  3817  030E                     	;# 
  3818  030F                     	;# 
  3819  0310                     	;# 
  3820  0310                     	;# 
  3821  0311                     	;# 
  3822  0312                     	;# 
  3823  0313                     	;# 
  3824  0314                     	;# 
  3825  0314                     	;# 
  3826  0315                     	;# 
  3827  0316                     	;# 
  3828  0317                     	;# 
  3829  0318                     	;# 
  3830  0318                     	;# 
  3831  0319                     	;# 
  3832  031A                     	;# 
  3833  031B                     	;# 
  3834  031C                     	;# 
  3835  031C                     	;# 
  3836  031D                     	;# 
  3837  031E                     	;# 
  3838  031F                     	;# 
  3839  038C                     	;# 
  3840  038D                     	;# 
  3841  038E                     	;# 
  3842  0390                     	;# 
  3843  0391                     	;# 
  3844  0392                     	;# 
  3845  040C                     	;# 
  3846  040D                     	;# 
  3847  040E                     	;# 
  3848  040F                     	;# 
  3849  0410                     	;# 
  3850  0411                     	;# 
  3851  0416                     	;# 
  3852  0416                     	;# 
  3853  0417                     	;# 
  3854  0418                     	;# 
  3855  0418                     	;# 
  3856  0419                     	;# 
  3857  041A                     	;# 
  3858  041A                     	;# 
  3859  041B                     	;# 
  3860  041C                     	;# 
  3861  041C                     	;# 
  3862  041D                     	;# 
  3863  041E                     	;# 
  3864  041F                     	;# 
  3865  048C                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  048F                     	;# 
  3870  048F                     	;# 
  3871  0490                     	;# 
  3872  0491                     	;# 
  3873  0492                     	;# 
  3874  0492                     	;# 
  3875  0493                     	;# 
  3876  0494                     	;# 
  3877  0495                     	;# 
  3878  0495                     	;# 
  3879  0496                     	;# 
  3880  0497                     	;# 
  3881  0498                     	;# 
  3882  0499                     	;# 
  3883  049A                     	;# 
  3884  049B                     	;# 
  3885  049C                     	;# 
  3886  049D                     	;# 
  3887  050C                     	;# 
  3888  050C                     	;# 
  3889  050D                     	;# 
  3890  050E                     	;# 
  3891  050F                     	;# 
  3892  050F                     	;# 
  3893  0510                     	;# 
  3894  0511                     	;# 
  3895  0512                     	;# 
  3896  0512                     	;# 
  3897  0513                     	;# 
  3898  0514                     	;# 
  3899  0515                     	;# 
  3900  0515                     	;# 
  3901  0516                     	;# 
  3902  0517                     	;# 
  3903  0518                     	;# 
  3904  0519                     	;# 
  3905  051A                     	;# 
  3906  051B                     	;# 
  3907  051C                     	;# 
  3908  051D                     	;# 
  3909  058C                     	;# 
  3910  058C                     	;# 
  3911  058D                     	;# 
  3912  058E                     	;# 
  3913  058F                     	;# 
  3914  058F                     	;# 
  3915  0590                     	;# 
  3916  0591                     	;# 
  3917  0592                     	;# 
  3918  0593                     	;# 
  3919  060C                     	;# 
  3920  060D                     	;# 
  3921  060E                     	;# 
  3922  060F                     	;# 
  3923  0610                     	;# 
  3924  0611                     	;# 
  3925  0612                     	;# 
  3926  0613                     	;# 
  3927  0614                     	;# 
  3928  0616                     	;# 
  3929  0617                     	;# 
  3930  0618                     	;# 
  3931  0619                     	;# 
  3932  061A                     	;# 
  3933  061B                     	;# 
  3934  061C                     	;# 
  3935  061D                     	;# 
  3936  061E                     	;# 
  3937  068C                     	;# 
  3938  068D                     	;# 
  3939  068E                     	;# 
  3940  068F                     	;# 
  3941  0690                     	;# 
  3942  0691                     	;# 
  3943  0692                     	;# 
  3944  0693                     	;# 
  3945  0694                     	;# 
  3946  070C                     	;# 
  3947  070D                     	;# 
  3948  070E                     	;# 
  3949  070F                     	;# 
  3950  0710                     	;# 
  3951  0711                     	;# 
  3952  0712                     	;# 
  3953  0713                     	;# 
  3954  0714                     	;# 
  3955  0716                     	;# 
  3956  0717                     	;# 
  3957  0718                     	;# 
  3958  0719                     	;# 
  3959  071A                     	;# 
  3960  071B                     	;# 
  3961  071C                     	;# 
  3962  071D                     	;# 
  3963  071E                     	;# 
  3964  0796                     	;# 
  3965  0797                     	;# 
  3966  0798                     	;# 
  3967  0799                     	;# 
  3968  079A                     	;# 
  3969  079B                     	;# 
  3970  080C                     	;# 
  3971  080D                     	;# 
  3972  080E                     	;# 
  3973  080F                     	;# 
  3974  0810                     	;# 
  3975  0811                     	;# 
  3976  0812                     	;# 
  3977  0813                     	;# 
  3978  0814                     	;# 
  3979  081A                     	;# 
  3980  081B                     	;# 
  3981  081C                     	;# 
  3982  081D                     	;# 
  3983  081E                     	;# 
  3984  081F                     	;# 
  3985  088C                     	;# 
  3986  088D                     	;# 
  3987  088E                     	;# 
  3988  088F                     	;# 
  3989  0890                     	;# 
  3990  0891                     	;# 
  3991  0892                     	;# 
  3992  0893                     	;# 
  3993  0895                     	;# 
  3994  0896                     	;# 
  3995  0897                     	;# 
  3996  0898                     	;# 
  3997  0899                     	;# 
  3998  089A                     	;# 
  3999  089B                     	;# 
  4000  090C                     	;# 
  4001  090E                     	;# 
  4002  090F                     	;# 
  4003  091F                     	;# 
  4004  091F                     	;# 
  4005  098F                     	;# 
  4006  098F                     	;# 
  4007  0990                     	;# 
  4008  0991                     	;# 
  4009  0992                     	;# 
  4010  0993                     	;# 
  4011  0994                     	;# 
  4012  0995                     	;# 
  4013  0996                     	;# 
  4014  0997                     	;# 
  4015  0E0F                     	;# 
  4016  0E10                     	;# 
  4017  0E11                     	;# 
  4018  0E12                     	;# 
  4019  0E13                     	;# 
  4020  0E14                     	;# 
  4021  0E15                     	;# 
  4022  0E16                     	;# 
  4023  0E17                     	;# 
  4024  0E18                     	;# 
  4025  0E19                     	;# 
  4026  0E1A                     	;# 
  4027  0E1B                     	;# 
  4028  0E1C                     	;# 
  4029  0E1D                     	;# 
  4030  0E1E                     	;# 
  4031  0E1F                     	;# 
  4032  0E20                     	;# 
  4033  0E21                     	;# 
  4034  0E22                     	;# 
  4035  0E23                     	;# 
  4036  0E24                     	;# 
  4037  0E25                     	;# 
  4038  0E26                     	;# 
  4039  0E27                     	;# 
  4040  0E28                     	;# 
  4041  0E29                     	;# 
  4042  0E2A                     	;# 
  4043  0E2B                     	;# 
  4044  0E2C                     	;# 
  4045  0E2D                     	;# 
  4046  0E2E                     	;# 
  4047  0E2F                     	;# 
  4048  0E30                     	;# 
  4049  0E31                     	;# 
  4050  0E32                     	;# 
  4051  0E33                     	;# 
  4052  0E34                     	;# 
  4053  0E35                     	;# 
  4054  0E36                     	;# 
  4055  0E37                     	;# 
  4056  0E8F                     	;# 
  4057  0E90                     	;# 
  4058  0E91                     	;# 
  4059  0E92                     	;# 
  4060  0E93                     	;# 
  4061  0E94                     	;# 
  4062  0E95                     	;# 
  4063  0E96                     	;# 
  4064  0E97                     	;# 
  4065  0E9C                     	;# 
  4066  0E9D                     	;# 
  4067  0E9E                     	;# 
  4068  0EA1                     	;# 
  4069  0EA2                     	;# 
  4070  0EA3                     	;# 
  4071  0EA4                     	;# 
  4072  0EA5                     	;# 
  4073  0EA9                     	;# 
  4074  0EAA                     	;# 
  4075  0EAB                     	;# 
  4076  0EAC                     	;# 
  4077  0EB1                     	;# 
  4078  0EB2                     	;# 
  4079  0EB3                     	;# 
  4080  0EB8                     	;# 
  4081  0EB9                     	;# 
  4082  0EBA                     	;# 
  4083  0EBB                     	;# 
  4084  0EBC                     	;# 
  4085  0EBD                     	;# 
  4086  0EBE                     	;# 
  4087  0EC3                     	;# 
  4088  0EC5                     	;# 
  4089  0EC6                     	;# 
  4090  0EC7                     	;# 
  4091  0EC8                     	;# 
  4092  0EC9                     	;# 
  4093  0ECA                     	;# 
  4094  0ECB                     	;# 
  4095  0ECC                     	;# 
  4096  0F10                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F22                     	;# 
  4115  0F23                     	;# 
  4116  0F24                     	;# 
  4117  0F25                     	;# 
  4118  0F26                     	;# 
  4119  0F27                     	;# 
  4120  0F38                     	;# 
  4121  0F39                     	;# 
  4122  0F3A                     	;# 
  4123  0F3B                     	;# 
  4124  0F3C                     	;# 
  4125  0F3D                     	;# 
  4126  0F3E                     	;# 
  4127  0F3F                     	;# 
  4128  0F40                     	;# 
  4129  0F41                     	;# 
  4130  0F43                     	;# 
  4131  0F44                     	;# 
  4132  0F45                     	;# 
  4133  0F46                     	;# 
  4134  0F47                     	;# 
  4135  0F48                     	;# 
  4136  0F49                     	;# 
  4137  0F4A                     	;# 
  4138  0F4B                     	;# 
  4139  0F4C                     	;# 
  4140  0F4E                     	;# 
  4141  0F4F                     	;# 
  4142  0F50                     	;# 
  4143  0F51                     	;# 
  4144  0F52                     	;# 
  4145  0F53                     	;# 
  4146  0F54                     	;# 
  4147  0F55                     	;# 
  4148  0F56                     	;# 
  4149  0F57                     	;# 
  4150  0F65                     	;# 
  4151  0F68                     	;# 
  4152  0F69                     	;# 
  4153  0F6A                     	;# 
  4154  0F6B                     	;# 
  4155  0FE4                     	;# 
  4156  0FE5                     	;# 
  4157  0FE6                     	;# 
  4158  0FE7                     	;# 
  4159  0FE8                     	;# 
  4160  0FE9                     	;# 
  4161  0FEA                     	;# 
  4162  0FEB                     	;# 
  4163  0FED                     	;# 
  4164  0FEE                     	;# 
  4165  0FEF                     	;# 
  4166  0000                     	;# 
  4167  0001                     	;# 
  4168  0002                     	;# 
  4169  0003                     	;# 
  4170  0004                     	;# 
  4171  0005                     	;# 
  4172  0006                     	;# 
  4173  0007                     	;# 
  4174  0008                     	;# 
  4175  0009                     	;# 
  4176  000A                     	;# 
  4177  000B                     	;# 
  4178  000C                     	;# 
  4179  000D                     	;# 
  4180  000E                     	;# 
  4181  0010                     	;# 
  4182  0011                     	;# 
  4183  0012                     	;# 
  4184  0013                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  001C                     	;# 
  4189  001C                     	;# 
  4190  001D                     	;# 
  4191  001D                     	;# 
  4192  001E                     	;# 
  4193  001F                     	;# 
  4194  008C                     	;# 
  4195  008C                     	;# 
  4196  008D                     	;# 
  4197  008E                     	;# 
  4198  008E                     	;# 
  4199  008F                     	;# 
  4200  0090                     	;# 
  4201  0090                     	;# 
  4202  0091                     	;# 
  4203  0093                     	;# 
  4204  0094                     	;# 
  4205  0095                     	;# 
  4206  0096                     	;# 
  4207  0097                     	;# 
  4208  0098                     	;# 
  4209  0099                     	;# 
  4210  009A                     	;# 
  4211  009B                     	;# 
  4212  009C                     	;# 
  4213  009D                     	;# 
  4214  009E                     	;# 
  4215  010C                     	;# 
  4216  010D                     	;# 
  4217  010E                     	;# 
  4218  010E                     	;# 
  4219  010F                     	;# 
  4220  0110                     	;# 
  4221  0110                     	;# 
  4222  0111                     	;# 
  4223  0112                     	;# 
  4224  0112                     	;# 
  4225  0113                     	;# 
  4226  0114                     	;# 
  4227  0114                     	;# 
  4228  0115                     	;# 
  4229  0116                     	;# 
  4230  0116                     	;# 
  4231  0117                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  018C                     	;# 
  4258  018D                     	;# 
  4259  018E                     	;# 
  4260  018F                     	;# 
  4261  0190                     	;# 
  4262  0191                     	;# 
  4263  0192                     	;# 
  4264  0196                     	;# 
  4265  0197                     	;# 
  4266  0198                     	;# 
  4267  0199                     	;# 
  4268  019A                     	;# 
  4269  019B                     	;# 
  4270  019C                     	;# 
  4271  020C                     	;# 
  4272  020D                     	;# 
  4273  020E                     	;# 
  4274  020F                     	;# 
  4275  020F                     	;# 
  4276  0210                     	;# 
  4277  0210                     	;# 
  4278  0211                     	;# 
  4279  0211                     	;# 
  4280  0212                     	;# 
  4281  0213                     	;# 
  4282  0214                     	;# 
  4283  0215                     	;# 
  4284  0215                     	;# 
  4285  0216                     	;# 
  4286  0216                     	;# 
  4287  0217                     	;# 
  4288  0217                     	;# 
  4289  0218                     	;# 
  4290  0219                     	;# 
  4291  021A                     	;# 
  4292  021B                     	;# 
  4293  021B                     	;# 
  4294  021C                     	;# 
  4295  021C                     	;# 
  4296  021D                     	;# 
  4297  021D                     	;# 
  4298  021E                     	;# 
  4299  021F                     	;# 
  4300  028C                     	;# 
  4301  028C                     	;# 
  4302  028D                     	;# 
  4303  028D                     	;# 
  4304  028E                     	;# 
  4305  028F                     	;# 
  4306  0290                     	;# 
  4307  0290                     	;# 
  4308  0291                     	;# 
  4309  0292                     	;# 
  4310  0292                     	;# 
  4311  0293                     	;# 
  4312  0293                     	;# 
  4313  0294                     	;# 
  4314  0295                     	;# 
  4315  0296                     	;# 
  4316  0296                     	;# 
  4317  0297                     	;# 
  4318  0298                     	;# 
  4319  0298                     	;# 
  4320  0299                     	;# 
  4321  0299                     	;# 
  4322  029A                     	;# 
  4323  029B                     	;# 
  4324  029C                     	;# 
  4325  029C                     	;# 
  4326  029D                     	;# 
  4327  030C                     	;# 
  4328  030C                     	;# 
  4329  030D                     	;# 
  4330  030E                     	;# 
  4331  030F                     	;# 
  4332  0310                     	;# 
  4333  0310                     	;# 
  4334  0311                     	;# 
  4335  0312                     	;# 
  4336  0313                     	;# 
  4337  0314                     	;# 
  4338  0314                     	;# 
  4339  0315                     	;# 
  4340  0316                     	;# 
  4341  0317                     	;# 
  4342  0318                     	;# 
  4343  0318                     	;# 
  4344  0319                     	;# 
  4345  031A                     	;# 
  4346  031B                     	;# 
  4347  031C                     	;# 
  4348  031C                     	;# 
  4349  031D                     	;# 
  4350  031E                     	;# 
  4351  031F                     	;# 
  4352  038C                     	;# 
  4353  038D                     	;# 
  4354  038E                     	;# 
  4355  0390                     	;# 
  4356  0391                     	;# 
  4357  0392                     	;# 
  4358  040C                     	;# 
  4359  040D                     	;# 
  4360  040E                     	;# 
  4361  040F                     	;# 
  4362  0410                     	;# 
  4363  0411                     	;# 
  4364  0416                     	;# 
  4365  0416                     	;# 
  4366  0417                     	;# 
  4367  0418                     	;# 
  4368  0418                     	;# 
  4369  0419                     	;# 
  4370  041A                     	;# 
  4371  041A                     	;# 
  4372  041B                     	;# 
  4373  041C                     	;# 
  4374  041C                     	;# 
  4375  041D                     	;# 
  4376  041E                     	;# 
  4377  041F                     	;# 
  4378  048C                     	;# 
  4379  048C                     	;# 
  4380  048D                     	;# 
  4381  048E                     	;# 
  4382  048F                     	;# 
  4383  048F                     	;# 
  4384  0490                     	;# 
  4385  0491                     	;# 
  4386  0492                     	;# 
  4387  0492                     	;# 
  4388  0493                     	;# 
  4389  0494                     	;# 
  4390  0495                     	;# 
  4391  0495                     	;# 
  4392  0496                     	;# 
  4393  0497                     	;# 
  4394  0498                     	;# 
  4395  0499                     	;# 
  4396  049A                     	;# 
  4397  049B                     	;# 
  4398  049C                     	;# 
  4399  049D                     	;# 
  4400  050C                     	;# 
  4401  050C                     	;# 
  4402  050D                     	;# 
  4403  050E                     	;# 
  4404  050F                     	;# 
  4405  050F                     	;# 
  4406  0510                     	;# 
  4407  0511                     	;# 
  4408  0512                     	;# 
  4409  0512                     	;# 
  4410  0513                     	;# 
  4411  0514                     	;# 
  4412  0515                     	;# 
  4413  0515                     	;# 
  4414  0516                     	;# 
  4415  0517                     	;# 
  4416  0518                     	;# 
  4417  0519                     	;# 
  4418  051A                     	;# 
  4419  051B                     	;# 
  4420  051C                     	;# 
  4421  051D                     	;# 
  4422  058C                     	;# 
  4423  058C                     	;# 
  4424  058D                     	;# 
  4425  058E                     	;# 
  4426  058F                     	;# 
  4427  058F                     	;# 
  4428  0590                     	;# 
  4429  0591                     	;# 
  4430  0592                     	;# 
  4431  0593                     	;# 
  4432  060C                     	;# 
  4433  060D                     	;# 
  4434  060E                     	;# 
  4435  060F                     	;# 
  4436  0610                     	;# 
  4437  0611                     	;# 
  4438  0612                     	;# 
  4439  0613                     	;# 
  4440  0614                     	;# 
  4441  0616                     	;# 
  4442  0617                     	;# 
  4443  0618                     	;# 
  4444  0619                     	;# 
  4445  061A                     	;# 
  4446  061B                     	;# 
  4447  061C                     	;# 
  4448  061D                     	;# 
  4449  061E                     	;# 
  4450  068C                     	;# 
  4451  068D                     	;# 
  4452  068E                     	;# 
  4453  068F                     	;# 
  4454  0690                     	;# 
  4455  0691                     	;# 
  4456  0692                     	;# 
  4457  0693                     	;# 
  4458  0694                     	;# 
  4459  070C                     	;# 
  4460  070D                     	;# 
  4461  070E                     	;# 
  4462  070F                     	;# 
  4463  0710                     	;# 
  4464  0711                     	;# 
  4465  0712                     	;# 
  4466  0713                     	;# 
  4467  0714                     	;# 
  4468  0716                     	;# 
  4469  0717                     	;# 
  4470  0718                     	;# 
  4471  0719                     	;# 
  4472  071A                     	;# 
  4473  071B                     	;# 
  4474  071C                     	;# 
  4475  071D                     	;# 
  4476  071E                     	;# 
  4477  0796                     	;# 
  4478  0797                     	;# 
  4479  0798                     	;# 
  4480  0799                     	;# 
  4481  079A                     	;# 
  4482  079B                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081B                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  091F                     	;# 
  4518  098F                     	;# 
  4519  098F                     	;# 
  4520  0990                     	;# 
  4521  0991                     	;# 
  4522  0992                     	;# 
  4523  0993                     	;# 
  4524  0994                     	;# 
  4525  0995                     	;# 
  4526  0996                     	;# 
  4527  0997                     	;# 
  4528  0E0F                     	;# 
  4529  0E10                     	;# 
  4530  0E11                     	;# 
  4531  0E12                     	;# 
  4532  0E13                     	;# 
  4533  0E14                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E17                     	;# 
  4537  0E18                     	;# 
  4538  0E19                     	;# 
  4539  0E1A                     	;# 
  4540  0E1B                     	;# 
  4541  0E1C                     	;# 
  4542  0E1D                     	;# 
  4543  0E1E                     	;# 
  4544  0E1F                     	;# 
  4545  0E20                     	;# 
  4546  0E21                     	;# 
  4547  0E22                     	;# 
  4548  0E23                     	;# 
  4549  0E24                     	;# 
  4550  0E25                     	;# 
  4551  0E26                     	;# 
  4552  0E27                     	;# 
  4553  0E28                     	;# 
  4554  0E29                     	;# 
  4555  0E2A                     	;# 
  4556  0E2B                     	;# 
  4557  0E2C                     	;# 
  4558  0E2D                     	;# 
  4559  0E2E                     	;# 
  4560  0E2F                     	;# 
  4561  0E30                     	;# 
  4562  0E31                     	;# 
  4563  0E32                     	;# 
  4564  0E33                     	;# 
  4565  0E34                     	;# 
  4566  0E35                     	;# 
  4567  0E36                     	;# 
  4568  0E37                     	;# 
  4569  0E8F                     	;# 
  4570  0E90                     	;# 
  4571  0E91                     	;# 
  4572  0E92                     	;# 
  4573  0E93                     	;# 
  4574  0E94                     	;# 
  4575  0E95                     	;# 
  4576  0E96                     	;# 
  4577  0E97                     	;# 
  4578  0E9C                     	;# 
  4579  0E9D                     	;# 
  4580  0E9E                     	;# 
  4581  0EA1                     	;# 
  4582  0EA2                     	;# 
  4583  0EA3                     	;# 
  4584  0EA4                     	;# 
  4585  0EA5                     	;# 
  4586  0EA9                     	;# 
  4587  0EAA                     	;# 
  4588  0EAB                     	;# 
  4589  0EAC                     	;# 
  4590  0EB1                     	;# 
  4591  0EB2                     	;# 
  4592  0EB3                     	;# 
  4593  0EB8                     	;# 
  4594  0EB9                     	;# 
  4595  0EBA                     	;# 
  4596  0EBB                     	;# 
  4597  0EBC                     	;# 
  4598  0EBD                     	;# 
  4599  0EBE                     	;# 
  4600  0EC3                     	;# 
  4601  0EC5                     	;# 
  4602  0EC6                     	;# 
  4603  0EC7                     	;# 
  4604  0EC8                     	;# 
  4605  0EC9                     	;# 
  4606  0ECA                     	;# 
  4607  0ECB                     	;# 
  4608  0ECC                     	;# 
  4609  0F10                     	;# 
  4610  0F11                     	;# 
  4611  0F12                     	;# 
  4612  0F13                     	;# 
  4613  0F14                     	;# 
  4614  0F15                     	;# 
  4615  0F16                     	;# 
  4616  0F17                     	;# 
  4617  0F18                     	;# 
  4618  0F19                     	;# 
  4619  0F1A                     	;# 
  4620  0F1B                     	;# 
  4621  0F1C                     	;# 
  4622  0F1D                     	;# 
  4623  0F1E                     	;# 
  4624  0F1F                     	;# 
  4625  0F20                     	;# 
  4626  0F21                     	;# 
  4627  0F22                     	;# 
  4628  0F23                     	;# 
  4629  0F24                     	;# 
  4630  0F25                     	;# 
  4631  0F26                     	;# 
  4632  0F27                     	;# 
  4633  0F38                     	;# 
  4634  0F39                     	;# 
  4635  0F3A                     	;# 
  4636  0F3B                     	;# 
  4637  0F3C                     	;# 
  4638  0F3D                     	;# 
  4639  0F3E                     	;# 
  4640  0F3F                     	;# 
  4641  0F40                     	;# 
  4642  0F41                     	;# 
  4643  0F43                     	;# 
  4644  0F44                     	;# 
  4645  0F45                     	;# 
  4646  0F46                     	;# 
  4647  0F47                     	;# 
  4648  0F48                     	;# 
  4649  0F49                     	;# 
  4650  0F4A                     	;# 
  4651  0F4B                     	;# 
  4652  0F4C                     	;# 
  4653  0F4E                     	;# 
  4654  0F4F                     	;# 
  4655  0F50                     	;# 
  4656  0F51                     	;# 
  4657  0F52                     	;# 
  4658  0F53                     	;# 
  4659  0F54                     	;# 
  4660  0F55                     	;# 
  4661  0F56                     	;# 
  4662  0F57                     	;# 
  4663  0F65                     	;# 
  4664  0F68                     	;# 
  4665  0F69                     	;# 
  4666  0F6A                     	;# 
  4667  0F6B                     	;# 
  4668  0FE4                     	;# 
  4669  0FE5                     	;# 
  4670  0FE6                     	;# 
  4671  0FE7                     	;# 
  4672  0FE8                     	;# 
  4673  0FE9                     	;# 
  4674  0FEA                     	;# 
  4675  0FEB                     	;# 
  4676  0FED                     	;# 
  4677  0FEE                     	;# 
  4678  0FEF                     	;# 
  4679  0000                     	;# 
  4680  0001                     	;# 
  4681  0002                     	;# 
  4682  0003                     	;# 
  4683  0004                     	;# 
  4684  0005                     	;# 
  4685  0006                     	;# 
  4686  0007                     	;# 
  4687  0008                     	;# 
  4688  0009                     	;# 
  4689  000A                     	;# 
  4690  000B                     	;# 
  4691  000C                     	;# 
  4692  000D                     	;# 
  4693  000E                     	;# 
  4694  0010                     	;# 
  4695  0011                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0016                     	;# 
  4699  0017                     	;# 
  4700  0018                     	;# 
  4701  001C                     	;# 
  4702  001C                     	;# 
  4703  001D                     	;# 
  4704  001D                     	;# 
  4705  001E                     	;# 
  4706  001F                     	;# 
  4707  008C                     	;# 
  4708  008C                     	;# 
  4709  008D                     	;# 
  4710  008E                     	;# 
  4711  008E                     	;# 
  4712  008F                     	;# 
  4713  0090                     	;# 
  4714  0090                     	;# 
  4715  0091                     	;# 
  4716  0093                     	;# 
  4717  0094                     	;# 
  4718  0095                     	;# 
  4719  0096                     	;# 
  4720  0097                     	;# 
  4721  0098                     	;# 
  4722  0099                     	;# 
  4723  009A                     	;# 
  4724  009B                     	;# 
  4725  009C                     	;# 
  4726  009D                     	;# 
  4727  009E                     	;# 
  4728  010C                     	;# 
  4729  010D                     	;# 
  4730  010E                     	;# 
  4731  010E                     	;# 
  4732  010F                     	;# 
  4733  0110                     	;# 
  4734  0110                     	;# 
  4735  0111                     	;# 
  4736  0112                     	;# 
  4737  0112                     	;# 
  4738  0113                     	;# 
  4739  0114                     	;# 
  4740  0114                     	;# 
  4741  0115                     	;# 
  4742  0116                     	;# 
  4743  0116                     	;# 
  4744  0117                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  018F                     	;# 
  4774  0190                     	;# 
  4775  0191                     	;# 
  4776  0192                     	;# 
  4777  0196                     	;# 
  4778  0197                     	;# 
  4779  0198                     	;# 
  4780  0199                     	;# 
  4781  019A                     	;# 
  4782  019B                     	;# 
  4783  019C                     	;# 
  4784  020C                     	;# 
  4785  020D                     	;# 
  4786  020E                     	;# 
  4787  020F                     	;# 
  4788  020F                     	;# 
  4789  0210                     	;# 
  4790  0210                     	;# 
  4791  0211                     	;# 
  4792  0211                     	;# 
  4793  0212                     	;# 
  4794  0213                     	;# 
  4795  0214                     	;# 
  4796  0215                     	;# 
  4797  0215                     	;# 
  4798  0216                     	;# 
  4799  0216                     	;# 
  4800  0217                     	;# 
  4801  0217                     	;# 
  4802  0218                     	;# 
  4803  0219                     	;# 
  4804  021A                     	;# 
  4805  021B                     	;# 
  4806  021B                     	;# 
  4807  021C                     	;# 
  4808  021C                     	;# 
  4809  021D                     	;# 
  4810  021D                     	;# 
  4811  021E                     	;# 
  4812  021F                     	;# 
  4813  028C                     	;# 
  4814  028C                     	;# 
  4815  028D                     	;# 
  4816  028D                     	;# 
  4817  028E                     	;# 
  4818  028F                     	;# 
  4819  0290                     	;# 
  4820  0290                     	;# 
  4821  0291                     	;# 
  4822  0292                     	;# 
  4823  0292                     	;# 
  4824  0293                     	;# 
  4825  0293                     	;# 
  4826  0294                     	;# 
  4827  0295                     	;# 
  4828  0296                     	;# 
  4829  0296                     	;# 
  4830  0297                     	;# 
  4831  0298                     	;# 
  4832  0298                     	;# 
  4833  0299                     	;# 
  4834  0299                     	;# 
  4835  029A                     	;# 
  4836  029B                     	;# 
  4837  029C                     	;# 
  4838  029C                     	;# 
  4839  029D                     	;# 
  4840  030C                     	;# 
  4841  030C                     	;# 
  4842  030D                     	;# 
  4843  030E                     	;# 
  4844  030F                     	;# 
  4845  0310                     	;# 
  4846  0310                     	;# 
  4847  0311                     	;# 
  4848  0312                     	;# 
  4849  0313                     	;# 
  4850  0314                     	;# 
  4851  0314                     	;# 
  4852  0315                     	;# 
  4853  0316                     	;# 
  4854  0317                     	;# 
  4855  0318                     	;# 
  4856  0318                     	;# 
  4857  0319                     	;# 
  4858  031A                     	;# 
  4859  031B                     	;# 
  4860  031C                     	;# 
  4861  031C                     	;# 
  4862  031D                     	;# 
  4863  031E                     	;# 
  4864  031F                     	;# 
  4865  038C                     	;# 
  4866  038D                     	;# 
  4867  038E                     	;# 
  4868  0390                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  040C                     	;# 
  4872  040D                     	;# 
  4873  040E                     	;# 
  4874  040F                     	;# 
  4875  0410                     	;# 
  4876  0411                     	;# 
  4877  0416                     	;# 
  4878  0416                     	;# 
  4879  0417                     	;# 
  4880  0418                     	;# 
  4881  0418                     	;# 
  4882  0419                     	;# 
  4883  041A                     	;# 
  4884  041A                     	;# 
  4885  041B                     	;# 
  4886  041C                     	;# 
  4887  041C                     	;# 
  4888  041D                     	;# 
  4889  041E                     	;# 
  4890  041F                     	;# 
  4891  048C                     	;# 
  4892  048C                     	;# 
  4893  048D                     	;# 
  4894  048E                     	;# 
  4895  048F                     	;# 
  4896  048F                     	;# 
  4897  0490                     	;# 
  4898  0491                     	;# 
  4899  0492                     	;# 
  4900  0492                     	;# 
  4901  0493                     	;# 
  4902  0494                     	;# 
  4903  0495                     	;# 
  4904  0495                     	;# 
  4905  0496                     	;# 
  4906  0497                     	;# 
  4907  0498                     	;# 
  4908  0499                     	;# 
  4909  049A                     	;# 
  4910  049B                     	;# 
  4911  049C                     	;# 
  4912  049D                     	;# 
  4913  050C                     	;# 
  4914  050C                     	;# 
  4915  050D                     	;# 
  4916  050E                     	;# 
  4917  050F                     	;# 
  4918  050F                     	;# 
  4919  0510                     	;# 
  4920  0511                     	;# 
  4921  0512                     	;# 
  4922  0512                     	;# 
  4923  0513                     	;# 
  4924  0514                     	;# 
  4925  0515                     	;# 
  4926  0515                     	;# 
  4927  0516                     	;# 
  4928  0517                     	;# 
  4929  0518                     	;# 
  4930  0519                     	;# 
  4931  051A                     	;# 
  4932  051B                     	;# 
  4933  051C                     	;# 
  4934  051D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  060C                     	;# 
  4946  060D                     	;# 
  4947  060E                     	;# 
  4948  060F                     	;# 
  4949  0610                     	;# 
  4950  0611                     	;# 
  4951  0612                     	;# 
  4952  0613                     	;# 
  4953  0614                     	;# 
  4954  0616                     	;# 
  4955  0617                     	;# 
  4956  0618                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061D                     	;# 
  4962  061E                     	;# 
  4963  068C                     	;# 
  4964  068D                     	;# 
  4965  068E                     	;# 
  4966  068F                     	;# 
  4967  0690                     	;# 
  4968  0691                     	;# 
  4969  0692                     	;# 
  4970  0693                     	;# 
  4971  0694                     	;# 
  4972  070C                     	;# 
  4973  070D                     	;# 
  4974  070E                     	;# 
  4975  070F                     	;# 
  4976  0710                     	;# 
  4977  0711                     	;# 
  4978  0712                     	;# 
  4979  0713                     	;# 
  4980  0714                     	;# 
  4981  0716                     	;# 
  4982  0717                     	;# 
  4983  0718                     	;# 
  4984  0719                     	;# 
  4985  071A                     	;# 
  4986  071B                     	;# 
  4987  071C                     	;# 
  4988  071D                     	;# 
  4989  071E                     	;# 
  4990  0796                     	;# 
  4991  0797                     	;# 
  4992  0798                     	;# 
  4993  0799                     	;# 
  4994  079A                     	;# 
  4995  079B                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0812                     	;# 
  5003  0813                     	;# 
  5004  0814                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  0E0F                     	;# 
  5042  0E10                     	;# 
  5043  0E11                     	;# 
  5044  0E12                     	;# 
  5045  0E13                     	;# 
  5046  0E14                     	;# 
  5047  0E15                     	;# 
  5048  0E16                     	;# 
  5049  0E17                     	;# 
  5050  0E18                     	;# 
  5051  0E19                     	;# 
  5052  0E1A                     	;# 
  5053  0E1B                     	;# 
  5054  0E1C                     	;# 
  5055  0E1D                     	;# 
  5056  0E1E                     	;# 
  5057  0E1F                     	;# 
  5058  0E20                     	;# 
  5059  0E21                     	;# 
  5060  0E22                     	;# 
  5061  0E23                     	;# 
  5062  0E24                     	;# 
  5063  0E25                     	;# 
  5064  0E26                     	;# 
  5065  0E27                     	;# 
  5066  0E28                     	;# 
  5067  0E29                     	;# 
  5068  0E2A                     	;# 
  5069  0E2B                     	;# 
  5070  0E2C                     	;# 
  5071  0E2D                     	;# 
  5072  0E2E                     	;# 
  5073  0E2F                     	;# 
  5074  0E30                     	;# 
  5075  0E31                     	;# 
  5076  0E32                     	;# 
  5077  0E33                     	;# 
  5078  0E34                     	;# 
  5079  0E35                     	;# 
  5080  0E36                     	;# 
  5081  0E37                     	;# 
  5082  0E8F                     	;# 
  5083  0E90                     	;# 
  5084  0E91                     	;# 
  5085  0E92                     	;# 
  5086  0E93                     	;# 
  5087  0E94                     	;# 
  5088  0E95                     	;# 
  5089  0E96                     	;# 
  5090  0E97                     	;# 
  5091  0E9C                     	;# 
  5092  0E9D                     	;# 
  5093  0E9E                     	;# 
  5094  0EA1                     	;# 
  5095  0EA2                     	;# 
  5096  0EA3                     	;# 
  5097  0EA4                     	;# 
  5098  0EA5                     	;# 
  5099  0EA9                     	;# 
  5100  0EAA                     	;# 
  5101  0EAB                     	;# 
  5102  0EAC                     	;# 
  5103  0EB1                     	;# 
  5104  0EB2                     	;# 
  5105  0EB3                     	;# 
  5106  0EB8                     	;# 
  5107  0EB9                     	;# 
  5108  0EBA                     	;# 
  5109  0EBB                     	;# 
  5110  0EBC                     	;# 
  5111  0EBD                     	;# 
  5112  0EBE                     	;# 
  5113  0EC3                     	;# 
  5114  0EC5                     	;# 
  5115  0EC6                     	;# 
  5116  0EC7                     	;# 
  5117  0EC8                     	;# 
  5118  0EC9                     	;# 
  5119  0ECA                     	;# 
  5120  0ECB                     	;# 
  5121  0ECC                     	;# 
  5122  0F10                     	;# 
  5123  0F11                     	;# 
  5124  0F12                     	;# 
  5125  0F13                     	;# 
  5126  0F14                     	;# 
  5127  0F15                     	;# 
  5128  0F16                     	;# 
  5129  0F17                     	;# 
  5130  0F18                     	;# 
  5131  0F19                     	;# 
  5132  0F1A                     	;# 
  5133  0F1B                     	;# 
  5134  0F1C                     	;# 
  5135  0F1D                     	;# 
  5136  0F1E                     	;# 
  5137  0F1F                     	;# 
  5138  0F20                     	;# 
  5139  0F21                     	;# 
  5140  0F22                     	;# 
  5141  0F23                     	;# 
  5142  0F24                     	;# 
  5143  0F25                     	;# 
  5144  0F26                     	;# 
  5145  0F27                     	;# 
  5146  0F38                     	;# 
  5147  0F39                     	;# 
  5148  0F3A                     	;# 
  5149  0F3B                     	;# 
  5150  0F3C                     	;# 
  5151  0F3D                     	;# 
  5152  0F3E                     	;# 
  5153  0F3F                     	;# 
  5154  0F40                     	;# 
  5155  0F41                     	;# 
  5156  0F43                     	;# 
  5157  0F44                     	;# 
  5158  0F45                     	;# 
  5159  0F46                     	;# 
  5160  0F47                     	;# 
  5161  0F48                     	;# 
  5162  0F49                     	;# 
  5163  0F4A                     	;# 
  5164  0F4B                     	;# 
  5165  0F4C                     	;# 
  5166  0F4E                     	;# 
  5167  0F4F                     	;# 
  5168  0F50                     	;# 
  5169  0F51                     	;# 
  5170  0F52                     	;# 
  5171  0F53                     	;# 
  5172  0F54                     	;# 
  5173  0F55                     	;# 
  5174  0F56                     	;# 
  5175  0F57                     	;# 
  5176  0F65                     	;# 
  5177  0F68                     	;# 
  5178  0F69                     	;# 
  5179  0F6A                     	;# 
  5180  0F6B                     	;# 
  5181  0FE4                     	;# 
  5182  0FE5                     	;# 
  5183  0FE6                     	;# 
  5184  0FE7                     	;# 
  5185  0FE8                     	;# 
  5186  0FE9                     	;# 
  5187  0FEA                     	;# 
  5188  0FEB                     	;# 
  5189  0FED                     	;# 
  5190  0FEE                     	;# 
  5191  0FEF                     	;_samples
  5192                           
  5193                           	psect	idataBANK1
  5194  173D                     __pidataBANK1:	
  5195                           
  5196                           ;initializer for _setpoint
  5197  173D  34CA               	retlw	202
  5198  173E  3408               	retlw	8
  5199  173F  340B               	retlw	11
  5200  1740  3402               	retlw	2
  5201                           
  5202                           ;initializer for _Kd
  5203  1741  3401               	retlw	1
  5204  1742  3400               	retlw	0
  5205                           
  5206                           ;initializer for _Ki
  5207  1743  3401               	retlw	1
  5208  1744  3400               	retlw	0
  5209                           
  5210                           ;initializer for _Kp
  5211  1745  3404               	retlw	4
  5212  1746  3400               	retlw	0
  5213                           
  5214                           ;initializer for _pidMaxOutput
  5215  1747  34FF               	retlw	255
  5216  1748  3407               	retlw	7
  5217                           
  5218                           ;initializer for _loop
  5219  1749  3440               	retlw	64
  5220                           
  5221                           	psect	idataBANK3
  5222  084E                     __pidataBANK3:	
  5223                           
  5224                           ;initializer for ___cgram
  5225  084E  340C               	retlw	12
  5226  084F  3412               	retlw	18
  5227  0850  3412               	retlw	18
  5228  0851  340C               	retlw	12
  5229  0852  3400               	retlw	0
  5230  0853  3400               	retlw	0
  5231  0854  3400               	retlw	0
  5232  0855  3400               	retlw	0
  5233  0856  3408               	retlw	8
  5234  0857  3404               	retlw	4
  5235  0858  3402               	retlw	2
  5236  0859  341F               	retlw	31
  5237  085A  3402               	retlw	2
  5238  085B  3404               	retlw	4
  5239  085C  3408               	retlw	8
  5240  085D  3400               	retlw	0
  5241                           
  5242                           ;initializer for _channels
  5243  085E  3401               	retlw	1
  5244  085F  3400               	retlw	0
  5245  0860  3403               	retlw	3
  5246  0861  3400               	retlw	0
  5247                           
  5248                           ;initializer for _desc
  5249  0862  345F               	retlw	low (STR_5| (0+32768))
  5250  0863  3490               	retlw	high (STR_5| (0+32768))
  5251  0864  346A               	retlw	low (STR_6| (0+32768))
  5252  0865  3490               	retlw	high (STR_6| (0+32768))
  5253                           
  5254                           ;initializer for _highRangeSet
  5255  0866  34BE               	retlw	190
  5256  0867  340A               	retlw	10
  5257  0868  34FF               	retlw	255
  5258  0869  3403               	retlw	3
  5259                           
  5260                           ;initializer for _lowRangeSet
  5261  086A  34EE               	retlw	238
  5262  086B  3402               	retlw	2
  5263  086C  3400               	retlw	0
  5264  086D  3400               	retlw	0
  5265                           
  5266                           	psect	stringtext
  5267  1000                     __pstringtext:	
  5268  1000                     log@coeff:	
  5269  1000  3400               	retlw	0
  5270  1001  3400               	retlw	0
  5271  1002  3400               	retlw	0
  5272  1003  3400               	retlw	0
  5273  1004  3480               	retlw	128
  5274  1005  343F               	retlw	63
  5275  1006  34F0               	retlw	240
  5276  1007  34FF               	retlw	255
  5277  1008  34BE               	retlw	190
  5278  1009  34E2               	retlw	226
  5279  100A  34A9               	retlw	169
  5280  100B  343E               	retlw	62
  5281  100C  3483               	retlw	131
  5282  100D  3476               	retlw	118
  5283  100E  34BE               	retlw	190
  5284  100F  34AE               	retlw	174
  5285  1010  342B               	retlw	43
  5286  1011  343E               	retlw	62
  5287  1012  343C               	retlw	60
  5288  1013  34C3               	retlw	195
  5289  1014  34BD               	retlw	189
  5290  1015  34D2               	retlw	210
  5291  1016  3413               	retlw	19
  5292  1017  343D               	retlw	61
  5293  1018  3478               	retlw	120
  5294  1019  34D3               	retlw	211
  5295  101A  34BB               	retlw	187
  5296  101B                     __end_oflog@coeff:	
  5297  0016                     _LATA	set	22
  5298  0017                     _LATB	set	23
  5299  0018                     _LATC	set	24
  5300  0011                     _TRISA	set	17
  5301  0012                     _TRISB	set	18
  5302  0013                     _TRISC	set	19
  5303  005F                     _GIE	set	95
  5304  00C2                     _LATC2	set	194
  5305  0060                     _RA0	set	96
  5306  0062                     _RA2	set	98
  5307  0066                     _RA6	set	102
  5308  0067                     _RA7	set	103
  5309  0068                     _RB0	set	104
  5310  0069                     _RB1	set	105
  5311  006A                     _RB2	set	106
  5312  0070                     _RC0	set	112
  5313  0071                     _RC1	set	113
  5314  009D                     _ADACQ	set	157
  5315  0099                     _ADACT	set	153
  5316  009B                     _ADCAP	set	155
  5317  0098                     _ADCLK	set	152
  5318  0093                     _ADCON0	set	147
  5319  0093                     _ADCON0bits	set	147
  5320  0094                     _ADCON1	set	148
  5321  0095                     _ADCON2	set	149
  5322  0096                     _ADCON3	set	150
  5323  009E                     _ADPCH	set	158
  5324  009C                     _ADPRE	set	156
  5325  009A                     _ADREF	set	154
  5326  008D                     _ADRESH	set	141
  5327  008C                     _ADRESL	set	140
  5328  0097                     _ADSTAT	set	151
  5329  010F                     _ADLTHH	set	271
  5330  010E                     _ADLTHL	set	270
  5331  010D                     _ADRPT	set	269
  5332  0113                     _ADSTPTH	set	275
  5333  0112                     _ADSTPTL	set	274
  5334  0111                     _ADUTHH	set	273
  5335  0110                     _ADUTHL	set	272
  5336  021F                     _CCPTMRS1bits	set	543
  5337  0290                     _T2CLKCON	set	656
  5338  028E                     _T2CON	set	654
  5339  028E                     _T2CONbits	set	654
  5340  028F                     _T2HLT	set	655
  5341  028D                     _T2PR	set	653
  5342  0291                     _T2RST	set	657
  5343  028C                     _T2TMR	set	652
  5344  0392                     _PWM7CON	set	914
  5345  0391                     _PWM7DCH	set	913
  5346  0390                     _PWM7DCL	set	912
  5347  0716                     _PIE0bits	set	1814
  5348  0710                     _PIR4bits	set	1808
  5349  088D                     _OSCCON1	set	2189
  5350  088F                     _OSCCON3	set	2191
  5351  0891                     _OSCEN	set	2193
  5352  0893                     _OSCFRQ	set	2195
  5353  0892                     _OSCTUNE	set	2194
  5354  090C                     _FVRCON	set	2316
  5355  0E8F                     _PPSLOCK	set	3727
  5356  0E8F                     _PPSLOCKbits	set	3727
  5357  0F38                     _ANSELA	set	3896
  5358  0F43                     _ANSELB	set	3907
  5359  0F4E                     _ANSELC	set	3918
  5360  0F23                     _RC3PPS	set	3875
  5361  0F39                     _WPUA	set	3897
  5362  0F44                     _WPUB	set	3908
  5363  0F4F                     _WPUC	set	3919
  5364  0F65                     _WPUE	set	3941
  5365  101B                     STR_8:	
  5366  101B  3445               	retlw	69	;'E'
  5367  101C  346E               	retlw	110	;'n'
  5368  101D  3474               	retlw	116	;'t'
  5369  101E  3465               	retlw	101	;'e'
  5370  101F  3472               	retlw	114	;'r'
  5371  1020  3420               	retlw	32	;' '
  5372  1021  3474               	retlw	116	;'t'
  5373  1022  346F               	retlw	111	;'o'
  5374  1023  3420               	retlw	32	;' '
  5375  1024  3453               	retlw	83	;'S'
  5376  1025  3465               	retlw	101	;'e'
  5377  1026  346C               	retlw	108	;'l'
  5378  1027  3465               	retlw	101	;'e'
  5379  1028  3463               	retlw	99	;'c'
  5380  1029  3474               	retlw	116	;'t'
  5381  102A  3420               	retlw	32	;' '
  5382  102B  3400               	retlw	0
  5383  102C                     STR_7:	
  5384  102C  3455               	retlw	85	;'U'
  5385  102D  3470               	retlw	112	;'p'
  5386  102E  342F               	retlw	47	;'/'
  5387  102F  3444               	retlw	68	;'D'
  5388  1030  346F               	retlw	111	;'o'
  5389  1031  3477               	retlw	119	;'w'
  5390  1032  346E               	retlw	110	;'n'
  5391  1033  3420               	retlw	32	;' '
  5392  1034  3474               	retlw	116	;'t'
  5393  1035  346F               	retlw	111	;'o'
  5394  1036  3420               	retlw	32	;' '
  5395  1037  3441               	retlw	65	;'A'
  5396  1038  346C               	retlw	108	;'l'
  5397  1039  3474               	retlw	116	;'t'
  5398  103A  3465               	retlw	101	;'e'
  5399  103B  3472               	retlw	114	;'r'
  5400  103C  3400               	retlw	0
  5401  103D                     STR_3:	
  5402  103D  3441               	retlw	65	;'A'
  5403  103E  346C               	retlw	108	;'l'
  5404  103F  3474               	retlw	116	;'t'
  5405  1040  3465               	retlw	101	;'e'
  5406  1041  3472               	retlw	114	;'r'
  5407  1042  3420               	retlw	32	;' '
  5408  1043  3477               	retlw	119	;'w'
  5409  1044  3469               	retlw	105	;'i'
  5410  1045  3474               	retlw	116	;'t'
  5411  1046  3468               	retlw	104	;'h'
  5412  1047  3420               	retlw	32	;' '
  5413  1048  3455               	retlw	85	;'U'
  5414  1049  3470               	retlw	112	;'p'
  5415  104A  342F               	retlw	47	;'/'
  5416  104B  3444               	retlw	68	;'D'
  5417  104C  346E               	retlw	110	;'n'
  5418  104D  3400               	retlw	0
  5419  104E                     STR_4:	
  5420  104E  3445               	retlw	69	;'E'
  5421  104F  346E               	retlw	110	;'n'
  5422  1050  3474               	retlw	116	;'t'
  5423  1051  3465               	retlw	101	;'e'
  5424  1052  3472               	retlw	114	;'r'
  5425  1053  3420               	retlw	32	;' '
  5426  1054  344B               	retlw	75	;'K'
  5427  1055  3465               	retlw	101	;'e'
  5428  1056  3479               	retlw	121	;'y'
  5429  1057  3420               	retlw	32	;' '
  5430  1058  3474               	retlw	116	;'t'
  5431  1059  346F               	retlw	111	;'o'
  5432  105A  3420               	retlw	32	;' '
  5433  105B  3453               	retlw	83	;'S'
  5434  105C  3465               	retlw	101	;'e'
  5435  105D  3474               	retlw	116	;'t'
  5436  105E  3400               	retlw	0
  5437  105F                     STR_5:	
  5438  105F  3420               	retlw	32	;' '
  5439  1060  3450               	retlw	80	;'P'
  5440  1061  3469               	retlw	105	;'i'
  5441  1062  3474               	retlw	116	;'t'
  5442  1063  3420               	retlw	32	;' '
  5443  1064  3454               	retlw	84	;'T'
  5444  1065  3465               	retlw	101	;'e'
  5445  1066  346D               	retlw	109	;'m'
  5446  1067  3470               	retlw	112	;'p'
  5447  1068  343A               	retlw	58	;':'
  5448  1069  3400               	retlw	0
  5449  106A                     STR_6:	
  5450  106A  3442               	retlw	66	;'B'
  5451  106B  3461               	retlw	97	;'a'
  5452  106C  3463               	retlw	99	;'c'
  5453  106D  346B               	retlw	107	;'k'
  5454  106E  344C               	retlw	76	;'L'
  5455  106F  3469               	retlw	105	;'i'
  5456  1070  3467               	retlw	103	;'g'
  5457  1071  3468               	retlw	104	;'h'
  5458  1072  3474               	retlw	116	;'t'
  5459  1073  343A               	retlw	58	;':'
  5460  1074  3400               	retlw	0
  5461  1075                     STR_2:	
  5462  1075  344F               	retlw	79	;'O'
  5463  1076  3475               	retlw	117	;'u'
  5464  1077  3474               	retlw	116	;'t'
  5465  1078  3470               	retlw	112	;'p'
  5466  1079  3475               	retlw	117	;'u'
  5467  107A  3474               	retlw	116	;'t'
  5468  107B  343A               	retlw	58	;':'
  5469  107C  3400               	retlw	0
  5470  107D                     STR_1:	
  5471  107D  3450               	retlw	80	;'P'
  5472  107E  3469               	retlw	105	;'i'
  5473  107F  3474               	retlw	116	;'t'
  5474  1080  343A               	retlw	58	;':'
  5475  1081  3400               	retlw	0
  5476                           
  5477                           ; #config settings
  5478  0000                     
  5479                           	psect	cinit
  5480  07B7                     start_initialization:	
  5481  07B7                     __initialization:		;BIGRAM
  5482                           
  5483                           ; Initialize objects allocated to BANK1
  5484  07B7  303D               	movlw	low __pidataBANK1
  5485  07B8  0084               	movwf	4
  5486  07B9  3097               	movlw	(high __pidataBANK1)| (0+128)
  5487  07BA  0085               	movwf	5
  5488  07BB  30E1               	movlw	low __pdataBANK1
  5489  07BC  0086               	movwf	6
  5490  07BD  3000               	movlw	high __pdataBANK1
  5491  07BE  0087               	movwf	7
  5492  07BF  3000               	movlw	0
  5493  07C0  00FF               	movwf	btemp+1
  5494  07C1  300D               	movlw	13
  5495  07C2  3197  2731  3187   	fcall	init_ram
  5496                           
  5497                           ; Initialize objects allocated to BANK3
  5498  07C5  304E               	movlw	low __pidataBANK3
  5499  07C6  0084               	movwf	4
  5500  07C7  3088               	movlw	(high __pidataBANK3)| (0+128)
  5501  07C8  0085               	movwf	5
  5502  07C9  30A0               	movlw	low __pdataBANK3
  5503  07CA  0086               	movwf	6
  5504  07CB  3001               	movlw	high __pdataBANK3
  5505  07CC  0087               	movwf	7
  5506  07CD  3000               	movlw	0
  5507  07CE  00FF               	movwf	btemp+1
  5508  07CF  3020               	movlw	32
  5509  07D0  3197  2731  3187   	fcall	init_ram
  5510                           
  5511                           ; Clear objects allocated to BIGRAM
  5512  07D3  3050               	movlw	low (0+9040)
  5513  07D4  0084               	movwf	4
  5514  07D5  3023               	movlw	high (0+9040)
  5515  07D6  0085               	movwf	5
  5516  07D7  30A0               	movlw	160
  5517  07D8  00FE               	movwf	btemp
  5518  07D9  3000               	movlw	0
  5519  07DA  00FF               	movwf	btemp+1
  5520  07DB  3197  2725  3187   	fcall	clear_ram0
  5521                           
  5522                           ; Clear objects allocated to BANK1
  5523  07DE  30A0               	movlw	low __pbssBANK1
  5524  07DF  0084               	movwf	4
  5525  07E0  3000               	movlw	high __pbssBANK1
  5526  07E1  0085               	movwf	5
  5527  07E2  3028               	movlw	40
  5528  07E3  00FE               	movwf	btemp
  5529  07E4  3000               	movlw	0
  5530  07E5  00FF               	movwf	btemp+1
  5531  07E6  3197  2725  3187   	fcall	clear_ram0
  5532                           
  5533                           ; Clear objects allocated to BANK3
  5534  07E9  0023               	movlb	3	; select bank3
  5535  07EA  01C0               	clrf	__pbssBANK3& (0+127)
  5536  07EB  01C1               	clrf	(__pbssBANK3+1)& (0+127)
  5537  07EC  01C2               	clrf	(__pbssBANK3+2)& (0+127)
  5538  07ED  01C3               	clrf	(__pbssBANK3+3)& (0+127)
  5539  07EE  01C4               	clrf	(__pbssBANK3+4)& (0+127)
  5540  07EF  01C5               	clrf	(__pbssBANK3+5)& (0+127)
  5541  07F0  01C6               	clrf	(__pbssBANK3+6)& (0+127)
  5542  07F1  01C7               	clrf	(__pbssBANK3+7)& (0+127)
  5543  07F2  01C8               	clrf	(__pbssBANK3+8)& (0+127)
  5544                           
  5545                           ; Clear objects allocated to BANK4
  5546  07F3  3020               	movlw	low __pbssBANK4
  5547  07F4  0084               	movwf	4
  5548  07F5  3002               	movlw	high __pbssBANK4
  5549  07F6  0085               	movwf	5
  5550  07F7  3050               	movlw	80
  5551  07F8  00FE               	movwf	btemp
  5552  07F9  3000               	movlw	0
  5553  07FA  00FF               	movwf	btemp+1
  5554  07FB  3197  2725         	fcall	clear_ram0
  5555  07FD                     end_of_initialization:	
  5556                           ;End of C runtime variable initialization code
  5557                           
  5558  07FD                     __end_of__initialization:	
  5559  07FD  0020               	movlb	0
  5560  07FE  3185  2D4C         	ljmp	_main	;jump to C main() function
  5561                           
  5562                           	psect	bssBANK1
  5563  00A0                     __pbssBANK1:	
  5564  00A0                     _totals:	
  5565  00A0                     	ds	8
  5566  00A8                     _Result:	
  5567  00A8                     	ds	2
  5568  00AA                     _derivativeValue:	
  5569  00AA                     	ds	2
  5570  00AC                     _errno:	
  5571  00AC                     	ds	2
  5572  00AE                     _error:	
  5573  00AE                     	ds	2
  5574  00B0                     _errorValue:	
  5575  00B0                     	ds	2
  5576  00B2                     _lastSign:	
  5577  00B2                     	ds	2
  5578  00B4                     _pidCount:	
  5579  00B4                     	ds	2
  5580  00B6                     _pidIntegrated:	
  5581  00B6                     	ds	2
  5582  00B8                     _pidMinOutput:	
  5583  00B8                     	ds	2
  5584  00BA                     _pidPrevError:	
  5585  00BA                     	ds	2
  5586  00BC                     _sampleIndex:	
  5587  00BC                     	ds	2
  5588  00BE                     _signPositive:	
  5589  00BE                     	ds	2
  5590  00C0                     _timer:	
  5591  00C0                     	ds	2
  5592  00C2                     _choice:	
  5593  00C2                     	ds	1
  5594  00C3                     _delayCount:	
  5595  00C3                     	ds	1
  5596  00C4                     _key:	
  5597  00C4                     	ds	1
  5598  00C5                     _menuDelay:	
  5599  00C5                     	ds	1
  5600  00C6                     _testKey:	
  5601  00C6                     	ds	1
  5602  00C7                     _timer2:	
  5603  00C7                     	ds	1
  5604                           
  5605                           	psect	dataBANK1
  5606  00E1                     __pdataBANK1:	
  5607  00E1                     _setpoint:	
  5608  00E1                     	ds	4
  5609  00E5                     _Kd:	
  5610  00E5                     	ds	2
  5611  00E7                     _Ki:	
  5612  00E7                     	ds	2
  5613  00E9                     _Kp:	
  5614  00E9                     	ds	2
  5615  00EB                     _pidMaxOutput:	
  5616  00EB                     	ds	2
  5617  00ED                     _loop:	
  5618  00ED                     	ds	1
  5619                           
  5620                           	psect	bssBANK3
  5621  01C0                     __pbssBANK3:	
  5622  01C0                     LCD_Write_Int@F13694:	
  5623  01C0                     	ds	5
  5624  01C5                     main@F13664:	
  5625  01C5                     	ds	4
  5626                           
  5627                           	psect	dataBANK3
  5628  01A0                     __pdataBANK3:	
  5629  01A0                     ___cgram:	
  5630  01A0                     	ds	16
  5631  01B0                     _channels:	
  5632  01B0                     	ds	4
  5633  01B4                     _desc:	
  5634  01B4                     	ds	4
  5635  01B8                     _highRangeSet:	
  5636  01B8                     	ds	4
  5637  01BC                     _lowRangeSet:	
  5638  01BC                     	ds	4
  5639                           
  5640                           	psect	bssBANK4
  5641  0220                     __pbssBANK4:	
  5642  0220                     main@F13670:	
  5643  0220                     	ds	80
  5644                           
  5645                           	psect	inittext
  5646  1731                     init_ram:	
  5647  1731  00FE               	movwf	126
  5648  1732                     initloop:	
  5649  1732  0012               	moviw fsr0++
  5650  1733  001E               	movwi fsr1++
  5651  1734  3001               	movlw	1
  5652  1735  02FE               	subwf	126,f
  5653  1736  3000               	movlw	0
  5654  1737  3BFF               	subwfb	127,f
  5655  1738  087F               	movf	127,w
  5656  1739  047E               	iorwf	126,w
  5657  173A  1903               	btfsc	3,2
  5658  173B  3400               	retlw	0
  5659  173C  2F32               	goto	initloop
  5660                           
  5661                           	psect	clrtext
  5662  1725                     clear_ram0:	
  5663                           ;	Called with FSR0 containing the base address, and
  5664                           ;	btemp/btemp+1 has the size to clear
  5665                           
  5666  1725  0064               	clrwdt	;clear the watchdog before getting into this loop
  5667  1726                     clrloop0:	
  5668  1726  0180               	clrf	0	;clear RAM location pointed to by FSR
  5669  1727  3101               	addfsr 0,1
  5670  1728  3001               	movlw	1
  5671  1729  02FE               	subwf	126,f
  5672  172A  3000               	movlw	0
  5673  172B  3BFF               	subwfb	127,f
  5674  172C  087F               	movf	127,w
  5675  172D  047E               	iorwf	126,w
  5676  172E  1903               	btfsc	3,2
  5677  172F  3400               	retlw	0	;all done for this memory range, return
  5678  1730  2F26               	goto	clrloop0	;have we reached the end yet?
  5679                           
  5680                           	psect	cstackBANK2
  5681  0120                     __pcstackBANK2:	
  5682  0120                     main@outputSamples:	
  5683                           
  5684                           ; 80 bytes @ 0x0
  5685  0120                     	ds	80
  5686                           
  5687                           	psect	cstackBANK1
  5688  00C8                     __pcstackBANK1:	
  5689  00C8                     ??_main:	
  5690                           
  5691                           ; 1 bytes @ 0x0
  5692  00C8                     	ds	10
  5693  00D2                     main@pidPeriodCounter:	
  5694                           
  5695                           ; 2 bytes @ 0xA
  5696  00D2                     	ds	2
  5697  00D4                     main@currentTemperature:	
  5698                           
  5699                           ; 2 bytes @ 0xC
  5700  00D4                     	ds	2
  5701  00D6                     main@outputTotal:	
  5702                           
  5703                           ; 4 bytes @ 0xE
  5704  00D6                     	ds	4
  5705  00DA                     main@dutyCycle6:	
  5706                           
  5707                           ; 2 bytes @ 0x12
  5708  00DA                     	ds	2
  5709  00DC                     main@analogs:	
  5710                           
  5711                           ; 4 bytes @ 0x14
  5712  00DC                     	ds	4
  5713  00E0                     main@j:	
  5714                           
  5715                           ; 1 bytes @ 0x18
  5716  00E0                     	ds	1
  5717                           
  5718                           	psect	cstackCOMMON
  5719  0070                     __pcstackCOMMON:	
  5720  0070                     ?___ftge:	
  5721  0070                     ?_LCD_Cmd:	
  5722                           ; 1 bit 
  5723                           
  5724  0070                     ?_LCD_Write_Char:	
  5725                           ; 1 bytes @ 0x0
  5726                           
  5727  0070                     ?_OSCILLATOR_Initialize:	
  5728                           ; 1 bytes @ 0x0
  5729                           
  5730  0070                     ??_OSCILLATOR_Initialize:	
  5731                           ; 1 bytes @ 0x0
  5732                           
  5733  0070                     ?_TMR2_Initialize:	
  5734                           ; 1 bytes @ 0x0
  5735                           
  5736  0070                     ??_TMR2_Initialize:	
  5737                           ; 1 bytes @ 0x0
  5738                           
  5739  0070                     ?_menuChoice:	
  5740                           ; 1 bytes @ 0x0
  5741                           
  5742  0070                     ?_ADCC_Initialize:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745  0070                     ??_ADCC_Initialize:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748  0070                     ?_InitCustomChars:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751  0070                     ?_LCD_Port:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754  0070                     ??_LCD_Port:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757  0070                     ?_LCD_Clear:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760  0070                     ?_LCD_Init:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763  0070                     ?_PIN_MANAGER_Initialize:	
  5764                           ; 1 bytes @ 0x0
  5765                           
  5766  0070                     ??_PIN_MANAGER_Initialize:	
  5767                           ; 1 bytes @ 0x0
  5768                           
  5769  0070                     ?_PWM_Initialize:	
  5770                           ; 1 bytes @ 0x0
  5771                           
  5772  0070                     ??_PWM_Initialize:	
  5773                           ; 1 bytes @ 0x0
  5774                           
  5775  0070                     ?_PWM7_LoadDutyValue:	
  5776                           ; 1 bytes @ 0x0
  5777                           
  5778  0070                     ?_SYSTEM_Initialize:	
  5779                           ; 1 bytes @ 0x0
  5780                           
  5781  0070                     ?_main:	
  5782                           ; 1 bytes @ 0x0
  5783                           
  5784  0070                     ?_readKey:	
  5785                           ; 1 bytes @ 0x0
  5786                           
  5787  0070                     ??_readKey:	
  5788                           ; 1 bytes @ 0x0
  5789                           
  5790  0070                     ?_ADCRead:	
  5791                           ; 1 bytes @ 0x0
  5792                           
  5793  0070                     ?___wmul:	
  5794                           ; 2 bytes @ 0x0
  5795                           
  5796  0070                     ?___awdiv:	
  5797                           ; 2 bytes @ 0x0
  5798                           
  5799  0070                     ?___awmod:	
  5800                           ; 2 bytes @ 0x0
  5801                           
  5802  0070                     ?___ftpack:	
  5803                           ; 2 bytes @ 0x0
  5804                           
  5805  0070                     ?_frexp:	
  5806                           ; 3 bytes @ 0x0
  5807                           
  5808  0070                     ?___aldiv:	
  5809                           ; 3 bytes @ 0x0
  5810                           
  5811  0070                     ?___fttol:	
  5812                           ; 4 bytes @ 0x0
  5813                           
  5814  0070                     LCD_Port@a:	
  5815                           ; 4 bytes @ 0x0
  5816                           
  5817  0070                     PIN_MANAGER_Initialize@state:	
  5818                           ; 1 bytes @ 0x0
  5819                           
  5820  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5821                           ; 1 bytes @ 0x0
  5822                           
  5823  0070                     ___wmul@multiplier:	
  5824                           ; 2 bytes @ 0x0
  5825                           
  5826  0070                     ___awdiv@divisor:	
  5827                           ; 2 bytes @ 0x0
  5828                           
  5829  0070                     ___awmod@divisor:	
  5830                           ; 2 bytes @ 0x0
  5831                           
  5832  0070                     ___ftpack@arg:	
  5833                           ; 2 bytes @ 0x0
  5834                           
  5835  0070                     ___ftge@ff1:	
  5836                           ; 3 bytes @ 0x0
  5837                           
  5838  0070                     ___fttol@f1:	
  5839                           ; 3 bytes @ 0x0
  5840                           
  5841  0070                     frexp@value:	
  5842                           ; 3 bytes @ 0x0
  5843                           
  5844  0070                     ___aldiv@divisor:	
  5845                           ; 3 bytes @ 0x0
  5846                           
  5847                           
  5848                           ; 4 bytes @ 0x0
  5849  0070                     	ds	1
  5850  0071                     ??_LCD_Cmd:	
  5851  0071                     ??_LCD_Write_Char:	
  5852                           ; 1 bytes @ 0x1
  5853                           
  5854                           
  5855                           ; 1 bytes @ 0x1
  5856  0071                     	ds	1
  5857  0072                     ??_PWM7_LoadDutyValue:	
  5858  0072                     LCD_Write_Char@temp:	
  5859                           ; 1 bytes @ 0x2
  5860                           
  5861  0072                     ___wmul@multiplicand:	
  5862                           ; 1 bytes @ 0x2
  5863                           
  5864  0072                     ___awdiv@dividend:	
  5865                           ; 2 bytes @ 0x2
  5866                           
  5867  0072                     ___awmod@dividend:	
  5868                           ; 2 bytes @ 0x2
  5869                           
  5870                           
  5871                           ; 2 bytes @ 0x2
  5872  0072                     	ds	1
  5873  0073                     ??_ADCRead:	
  5874  0073                     ADCRead@channel:	
  5875                           ; 1 bytes @ 0x3
  5876                           
  5877  0073                     LCD_Cmd@a:	
  5878                           ; 1 bytes @ 0x3
  5879                           
  5880  0073                     LCD_Write_Char@y:	
  5881                           ; 1 bytes @ 0x3
  5882                           
  5883  0073                     ___ftpack@exp:	
  5884                           ; 1 bytes @ 0x3
  5885                           
  5886  0073                     frexp@eptr:	
  5887                           ; 1 bytes @ 0x3
  5888                           
  5889  0073                     ___ftge@ff2:	
  5890                           ; 1 bytes @ 0x3
  5891                           
  5892                           
  5893                           ; 3 bytes @ 0x3
  5894  0073                     	ds	1
  5895  0074                     ??_frexp:	
  5896  0074                     ??_LCD_Clear:	
  5897                           ; 1 bytes @ 0x4
  5898                           
  5899  0074                     ?_LCD_Set_Cursor:	
  5900                           ; 1 bytes @ 0x4
  5901                           
  5902  0074                     ??_LCD_Init:	
  5903                           ; 1 bytes @ 0x4
  5904                           
  5905  0074                     ??___wmul:	
  5906                           ; 1 bytes @ 0x4
  5907                           
  5908  0074                     ??___awdiv:	
  5909                           ; 1 bytes @ 0x4
  5910                           
  5911  0074                     ??___awmod:	
  5912                           ; 1 bytes @ 0x4
  5913                           
  5914  0074                     ??___fttol:	
  5915                           ; 1 bytes @ 0x4
  5916                           
  5917  0074                     LCD_Set_Cursor@y:	
  5918                           ; 1 bytes @ 0x4
  5919                           
  5920  0074                     LCD_Write_Char@a:	
  5921                           ; 1 bytes @ 0x4
  5922                           
  5923  0074                     ___ftpack@sign:	
  5924                           ; 1 bytes @ 0x4
  5925                           
  5926  0074                     ___wmul@product:	
  5927                           ; 1 bytes @ 0x4
  5928                           
  5929  0074                     ___aldiv@dividend:	
  5930                           ; 2 bytes @ 0x4
  5931                           
  5932                           
  5933                           ; 4 bytes @ 0x4
  5934  0074                     	ds	1
  5935  0075                     ??___ftpack:	
  5936  0075                     ??_InitCustomChars:	
  5937                           ; 1 bytes @ 0x5
  5938                           
  5939  0075                     ??_LCD_Set_Cursor:	
  5940                           ; 1 bytes @ 0x5
  5941                           
  5942  0075                     ?_LCD_Write_String:	
  5943                           ; 1 bytes @ 0x5
  5944                           
  5945  0075                     ___awdiv@counter:	
  5946                           ; 1 bytes @ 0x5
  5947                           
  5948  0075                     ___awmod@counter:	
  5949                           ; 1 bytes @ 0x5
  5950                           
  5951  0075                     LCD_Write_String@a:	
  5952                           ; 1 bytes @ 0x5
  5953                           
  5954                           
  5955                           ; 2 bytes @ 0x5
  5956  0075                     	ds	1
  5957  0076                     ??___ftge:	
  5958  0076                     ?_PID_Calculate:	
  5959                           ; 1 bytes @ 0x6
  5960                           
  5961  0076                     InitCustomChars@i:	
  5962                           ; 2 bytes @ 0x6
  5963                           
  5964  0076                     ___awdiv@sign:	
  5965                           ; 1 bytes @ 0x6
  5966                           
  5967  0076                     ___awmod@sign:	
  5968                           ; 1 bytes @ 0x6
  5969                           
  5970  0076                     PID_Calculate@setpoint:	
  5971                           ; 1 bytes @ 0x6
  5972                           
  5973                           
  5974                           ; 2 bytes @ 0x6
  5975  0076                     	ds	1
  5976  0077                     ??_LCD_Write_String:	
  5977  0077                     LCD_Set_Cursor@x:	
  5978                           ; 1 bytes @ 0x7
  5979                           
  5980  0077                     LCD_Init@style:	
  5981                           ; 1 bytes @ 0x7
  5982                           
  5983  0077                     ___awdiv@quotient:	
  5984                           ; 1 bytes @ 0x7
  5985                           
  5986                           
  5987                           ; 2 bytes @ 0x7
  5988  0077                     	ds	1
  5989  0078                     ??_SYSTEM_Initialize:	
  5990  0078                     ??___aldiv:	
  5991                           ; 1 bytes @ 0x8
  5992                           
  5993  0078                     ?___awtoft:	
  5994                           ; 1 bytes @ 0x8
  5995                           
  5996  0078                     LCD_Set_Cursor@z:	
  5997                           ; 3 bytes @ 0x8
  5998                           
  5999  0078                     ___fttol@sign1:	
  6000                           ; 1 bytes @ 0x8
  6001                           
  6002  0078                     LCD_Write_String@i:	
  6003                           ; 1 bytes @ 0x8
  6004                           
  6005  0078                     PID_Calculate@temp:	
  6006                           ; 2 bytes @ 0x8
  6007                           
  6008  0078                     ___awtoft@c:	
  6009                           ; 2 bytes @ 0x8
  6010                           
  6011                           
  6012                           ; 2 bytes @ 0x8
  6013  0078                     	ds	1
  6014  0079                     ?_LCD_Write_Int:	
  6015  0079                     LCD_Set_Cursor@w:	
  6016                           ; 1 bytes @ 0x9
  6017                           
  6018  0079                     readAnalog@analog_channel:	
  6019                           ; 1 bytes @ 0x9
  6020                           
  6021  0079                     LCD_Write_Int@value:	
  6022                           ; 2 bytes @ 0x9
  6023                           
  6024  0079                     ___fttol@lval:	
  6025                           ; 2 bytes @ 0x9
  6026                           
  6027                           
  6028                           ; 4 bytes @ 0x9
  6029  0079                     	ds	1
  6030  007A                     ??_PID_Calculate:	
  6031  007A                     LCD_Set_Cursor@temp:	
  6032                           ; 1 bytes @ 0xA
  6033                           
  6034                           
  6035                           ; 1 bytes @ 0xA
  6036  007A                     	ds	1
  6037  007B                     ??___awtoft:	
  6038  007B                     LCD_Write_Int@fieldLength:	
  6039                           ; 1 bytes @ 0xB
  6040                           
  6041  007B                     readAnalog@value:	
  6042                           ; 1 bytes @ 0xB
  6043                           
  6044                           
  6045                           ; 2 bytes @ 0xB
  6046  007B                     	ds	1
  6047  007C                     LCD_Write_Int@numPlaces:	
  6048                           
  6049                           ; 1 bytes @ 0xC
  6050  007C                     	ds	1
  6051  007D                     LCD_Write_Int@sign:	
  6052  007D                     ___awtoft@sign:	
  6053                           ; 1 bytes @ 0xD
  6054                           
  6055  007D                     ___fttol@exp1:	
  6056                           ; 1 bytes @ 0xD
  6057                           
  6058                           
  6059                           ; 1 bytes @ 0xD
  6060  007D                     	ds	1
  6061  007E                     ??_eval_poly:	
  6062  007E                     ??_tempCalc:	
  6063                           ; 1 bytes @ 0xE
  6064                           
  6065  007E                     ??___ftsub:	
  6066                           ; 1 bytes @ 0xE
  6067                           
  6068                           
  6069                           	psect	cstackBANK0
  6070  0020                     __pcstackBANK0:	
  6071                           ; 1 bytes @ 0xE
  6072                           
  6073  0020                     ??_LCD_Write_Int:	
  6074  0020                     ?___ftmul:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0020                     ___aldiv@counter:	
  6078                           ; 3 bytes @ 0x0
  6079                           
  6080  0020                     ___ftmul@f1:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083                           
  6084                           ; 3 bytes @ 0x0
  6085  0020                     	ds	1
  6086  0021                     ___aldiv@sign:	
  6087                           
  6088                           ; 1 bytes @ 0x1
  6089  0021                     	ds	1
  6090  0022                     ___aldiv@quotient:	
  6091                           
  6092                           ; 4 bytes @ 0x2
  6093  0022                     	ds	1
  6094  0023                     ___ftmul@f2:	
  6095                           
  6096                           ; 3 bytes @ 0x3
  6097  0023                     	ds	2
  6098  0025                     LCD_Write_Int@str:	
  6099                           
  6100                           ; 5 bytes @ 0x5
  6101  0025                     	ds	1
  6102  0026                     ??___ftmul:	
  6103  0026                     ?_readAnalog:	
  6104                           ; 1 bytes @ 0x6
  6105                           
  6106  0026                     readAnalog@channel:	
  6107                           ; 2 bytes @ 0x6
  6108                           
  6109                           
  6110                           ; 2 bytes @ 0x6
  6111  0026                     	ds	2
  6112  0028                     ??_readAnalog:	
  6113                           
  6114                           ; 1 bytes @ 0x8
  6115  0028                     	ds	2
  6116  002A                     ___ftmul@exp:	
  6117  002A                     LCD_Write_Int@j:	
  6118                           ; 1 bytes @ 0xA
  6119                           
  6120                           
  6121                           ; 2 bytes @ 0xA
  6122  002A                     	ds	1
  6123  002B                     ___ftmul@f3_as_product:	
  6124                           
  6125                           ; 3 bytes @ 0xB
  6126  002B                     	ds	1
  6127  002C                     LCD_Write_Int@i:	
  6128                           
  6129                           ; 2 bytes @ 0xC
  6130  002C                     	ds	2
  6131  002E                     ??_menuChoice:	
  6132  002E                     ___ftmul@cntr:	
  6133                           ; 1 bytes @ 0xE
  6134                           
  6135                           
  6136                           ; 1 bytes @ 0xE
  6137  002E                     	ds	1
  6138  002F                     ___ftmul@sign:	
  6139                           
  6140                           ; 1 bytes @ 0xF
  6141  002F                     	ds	1
  6142  0030                     ?___ftdiv:	
  6143  0030                     ___ftdiv@f2:	
  6144                           ; 3 bytes @ 0x10
  6145                           
  6146                           
  6147                           ; 3 bytes @ 0x10
  6148  0030                     	ds	3
  6149  0033                     ___ftdiv@f1:	
  6150                           
  6151                           ; 3 bytes @ 0x13
  6152  0033                     	ds	3
  6153  0036                     ??___ftdiv:	
  6154                           
  6155                           ; 1 bytes @ 0x16
  6156  0036                     	ds	4
  6157  003A                     ___ftdiv@cntr:	
  6158                           
  6159                           ; 1 bytes @ 0x1A
  6160  003A                     	ds	1
  6161  003B                     ___ftdiv@f3:	
  6162                           
  6163                           ; 3 bytes @ 0x1B
  6164  003B                     	ds	3
  6165  003E                     ___ftdiv@exp:	
  6166                           
  6167                           ; 1 bytes @ 0x1E
  6168  003E                     	ds	1
  6169  003F                     ___ftdiv@sign:	
  6170                           
  6171                           ; 1 bytes @ 0x1F
  6172  003F                     	ds	1
  6173  0040                     ?___ftadd:	
  6174  0040                     ___ftadd@f1:	
  6175                           ; 3 bytes @ 0x20
  6176                           
  6177                           
  6178                           ; 3 bytes @ 0x20
  6179  0040                     	ds	3
  6180  0043                     ___ftadd@f2:	
  6181                           
  6182                           ; 3 bytes @ 0x23
  6183  0043                     	ds	3
  6184  0046                     ??___ftadd:	
  6185                           
  6186                           ; 1 bytes @ 0x26
  6187  0046                     	ds	4
  6188  004A                     ___ftadd@sign:	
  6189                           
  6190                           ; 1 bytes @ 0x2A
  6191  004A                     	ds	1
  6192  004B                     ___ftadd@exp2:	
  6193                           
  6194                           ; 1 bytes @ 0x2B
  6195  004B                     	ds	1
  6196  004C                     ___ftadd@exp1:	
  6197                           
  6198                           ; 1 bytes @ 0x2C
  6199  004C                     	ds	1
  6200  004D                     ?_eval_poly:	
  6201  004D                     ?___ftsub:	
  6202                           ; 3 bytes @ 0x2D
  6203                           
  6204  004D                     ___ftsub@f2:	
  6205                           ; 3 bytes @ 0x2D
  6206                           
  6207  004D                     eval_poly@x:	
  6208                           ; 3 bytes @ 0x2D
  6209                           
  6210                           
  6211                           ; 3 bytes @ 0x2D
  6212  004D                     	ds	3
  6213  0050                     eval_poly@d:	
  6214  0050                     ___ftsub@f1:	
  6215                           ; 2 bytes @ 0x30
  6216                           
  6217                           
  6218                           ; 3 bytes @ 0x30
  6219  0050                     	ds	2
  6220  0052                     eval_poly@n:	
  6221                           
  6222                           ; 2 bytes @ 0x32
  6223  0052                     	ds	2
  6224  0054                     eval_poly@res:	
  6225                           
  6226                           ; 3 bytes @ 0x34
  6227  0054                     	ds	3
  6228  0057                     ?_log:	
  6229  0057                     log@x:	
  6230                           ; 3 bytes @ 0x37
  6231                           
  6232                           
  6233                           ; 3 bytes @ 0x37
  6234  0057                     	ds	3
  6235  005A                     ??_log:	
  6236                           
  6237                           ; 1 bytes @ 0x3A
  6238  005A                     	ds	1
  6239  005B                     log@exponent:	
  6240                           
  6241                           ; 2 bytes @ 0x3B
  6242  005B                     	ds	2
  6243  005D                     ?_tempCalc:	
  6244  005D                     tempCalc@analogValue:	
  6245                           ; 2 bytes @ 0x3D
  6246                           
  6247                           
  6248                           ; 2 bytes @ 0x3D
  6249  005D                     	ds	2
  6250  005F                     tempCalc@R:	
  6251                           
  6252                           ; 3 bytes @ 0x3F
  6253  005F                     	ds	3
  6254  0062                     _tempCalc$1009:	
  6255                           
  6256                           ; 3 bytes @ 0x42
  6257  0062                     	ds	3
  6258  0065                     tempCalc@steinhart:	
  6259                           
  6260                           ; 3 bytes @ 0x45
  6261  0065                     	ds	3
  6262  0068                     main@x:	
  6263                           
  6264                           ; 1 bytes @ 0x48
  6265  0068                     	ds	1
  6266  0069                     main@output:	
  6267                           
  6268                           ; 2 bytes @ 0x49
  6269  0069                     	ds	2
  6270  006B                     main@holdOutput:	
  6271                           
  6272                           ; 1 bytes @ 0x4B
  6273  006B                     	ds	1
  6274  006C                     main@lidOpenCount:	
  6275                           
  6276                           ; 1 bytes @ 0x4C
  6277  006C                     	ds	1
  6278  006D                     main@lastTemperature:	
  6279                           
  6280                           ; 2 bytes @ 0x4D
  6281  006D                     	ds	2
  6282  006F                     main@outputIndex:	
  6283                           
  6284                           ; 1 bytes @ 0x4F
  6285  006F                     	ds	1
  6286                           
  6287                           	psect	maintext
  6288  054C                     __pmaintext:	
  6289 ;;
  6290 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6291 ;;
  6292 ;; *************** function _main *****************
  6293 ;; Defined at:
  6294 ;;		line 29 in file "main.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;		None
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  outputSample   80    0[BANK2 ] int [40]
  6299 ;;  analogs         4   20[BANK1 ] unsigned int [2]
  6300 ;;  outputTotal     4   14[BANK1 ] long 
  6301 ;;  dutyCycle6      2   18[BANK1 ] unsigned int 
  6302 ;;  currentTempe    2   12[BANK1 ] int 
  6303 ;;  pidPeriodCou    2   10[BANK1 ] int 
  6304 ;;  lastTemperat    2   77[BANK0 ] int 
  6305 ;;  output          2   73[BANK0 ] int 
  6306 ;;  j               1   24[BANK1 ] unsigned char 
  6307 ;;  outputIndex     1   79[BANK0 ] unsigned char 
  6308 ;;  lidOpenCount    1   76[BANK0 ] unsigned char 
  6309 ;;  holdOutput      1   75[BANK0 ] unsigned char 
  6310 ;;  x               1   72[BANK0 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : B1F/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Locals:         0       8      15      80       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Totals:         0       8      25      80       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;Total ram usage:      113 bytes
  6325 ;; Hardware stack levels required when called:    5
  6326 ;; This function calls:
  6327 ;;		_LCD_Clear
  6328 ;;		_LCD_Set_Cursor
  6329 ;;		_LCD_Write_Char
  6330 ;;		_LCD_Write_Int
  6331 ;;		_LCD_Write_String
  6332 ;;		_PID_Calculate
  6333 ;;		_PWM7_LoadDutyValue
  6334 ;;		_SYSTEM_Initialize
  6335 ;;		___aldiv
  6336 ;;		_menuChoice
  6337 ;;		_readAnalog
  6338 ;;		_tempCalc
  6339 ;; This function is called by:
  6340 ;;		Startup code after reset
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _main
  6346  054C                     _main:	
  6347                           
  6348                           ;main.c: 31: SYSTEM_Initialize();
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6352  054C  3189  21A6  3185   	fcall	_SYSTEM_Initialize
  6353                           
  6354                           ;main.c: 33: uint16_t analogs[2] = {0};
  6355  054F  0023               	movlb	3	; select bank3
  6356  0550  0848               	movf	(main@F13664+3)^(0+384),w
  6357  0551  0021               	movlb	1	; select bank1
  6358  0552  00DF               	movwf	(main@analogs+3)^(0+128)
  6359  0553  0023               	movlb	3	; select bank3
  6360  0554  0847               	movf	(main@F13664+2)^(0+384),w
  6361  0555  0021               	movlb	1	; select bank1
  6362  0556  00DE               	movwf	(main@analogs+2)^(0+128)
  6363  0557  0023               	movlb	3	; select bank3
  6364  0558  0846               	movf	(main@F13664+1)^(0+384),w
  6365  0559  0021               	movlb	1	; select bank1
  6366  055A  00DD               	movwf	(main@analogs+1)^(0+128)
  6367  055B  0023               	movlb	3	; select bank3
  6368  055C  0845               	movf	main@F13664^(0+384),w
  6369  055D  0021               	movlb	1	; select bank1
  6370  055E  00DC               	movwf	main@analogs^(0+128)
  6371                           
  6372                           ;main.c: 35: extern volatile int16_t setpoint[2];
  6373                           ;main.c: 43: int output = 0;
  6374  055F  0020               	movlb	0	; select bank0
  6375  0560  01E9               	clrf	main@output
  6376  0561  01EA               	clrf	main@output+1
  6377                           
  6378                           ;main.c: 45: int32_t outputTotal = 0;
  6379  0562  3000               	movlw	0
  6380  0563  0021               	movlb	1	; select bank1
  6381  0564  00D9               	movwf	(main@outputTotal+3)^(0+128)
  6382  0565  3000               	movlw	0
  6383  0566  00D8               	movwf	(main@outputTotal+2)^(0+128)
  6384  0567  3000               	movlw	0
  6385  0568  00D7               	movwf	(main@outputTotal+1)^(0+128)
  6386  0569  3000               	movlw	0
  6387  056A  00D6               	movwf	main@outputTotal^(0+128)
  6388                           
  6389                           ;main.c: 47: char outputIndex = 0;
  6390  056B  0020               	movlb	0	; select bank0
  6391  056C  01EF               	clrf	main@outputIndex
  6392                           
  6393                           ;main.c: 49: int16_t outputSamples[40]= {0};
  6394  056D  3020               	movlw	low main@F13670
  6395  056E  0086               	movwf	6
  6396  056F  3002               	movlw	high main@F13670
  6397  0570  0087               	movwf	7
  6398  0571  3020               	movlw	low main@outputSamples
  6399  0572  0084               	movwf	4
  6400  0573  3001               	movlw	high main@outputSamples
  6401  0574  0085               	movwf	5
  6402  0575  3050               	movlw	80
  6403  0576  0021               	movlb	1	; select bank1
  6404  0577  00C8               	movwf	??_main^(0+128)
  6405  0578                     u3500:	
  6406  0578  0016               	moviw fsr1++
  6407  0579  001A               	movwi fsr0++
  6408  057A  0BC8               	decfsz	??_main^(0+128),f
  6409  057B  2D78               	goto	u3500
  6410                           
  6411                           ;main.c: 51: char holdOutput = 0;
  6412  057C  0020               	movlb	0	; select bank0
  6413  057D  01EB               	clrf	main@holdOutput
  6414                           
  6415                           ;main.c: 53: int currentTemperature = 750;
  6416  057E  30EE               	movlw	238
  6417  057F  0021               	movlb	1	; select bank1
  6418  0580  00D4               	movwf	main@currentTemperature^(0+128)
  6419  0581  3002               	movlw	2
  6420  0582  00D5               	movwf	(main@currentTemperature^(0+128)+1)
  6421                           
  6422                           ;main.c: 55: int lastTemperature = 750;
  6423  0583  30EE               	movlw	238
  6424  0584  0020               	movlb	0	; select bank0
  6425  0585  00ED               	movwf	main@lastTemperature
  6426  0586  3002               	movlw	2
  6427  0587  00EE               	movwf	main@lastTemperature+1
  6428                           
  6429                           ;main.c: 57: char lidOpenCount = 0;
  6430  0588  01EC               	clrf	main@lidOpenCount
  6431                           
  6432                           ;main.c: 61: char j = 0;
  6433  0589  0021               	movlb	1	; select bank1
  6434  058A  01E0               	clrf	main@j^(0+128)
  6435                           
  6436                           ;main.c: 63: char x = 0;
  6437  058B  0020               	movlb	0	; select bank0
  6438  058C  01E8               	clrf	main@x
  6439                           
  6440                           ;main.c: 65: int pidPeriodCounter = 0;
  6441  058D  0021               	movlb	1	; select bank1
  6442  058E  01D2               	clrf	main@pidPeriodCounter^(0+128)
  6443  058F  01D3               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6444                           
  6445                           ;main.c: 67: extern int pidMaxOutput;
  6446                           ;main.c: 69: extern unsigned char loop;
  6447                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6448  0590  01DA               	clrf	main@dutyCycle6^(0+128)
  6449  0591  01DB               	clrf	(main@dutyCycle6+1)^(0+128)
  6450                           
  6451                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6452  0592  0864               	movf	((_setpoint+1)^(0+128)+2),w	;volatile
  6453  0593  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6454  0594  0863               	movf	(_setpoint^(0+128)+2),w	;volatile
  6455  0595  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6456  0596  3197  276C  3185   	fcall	_PWM7_LoadDutyValue
  6457                           
  6458                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6459  0599  300D               	movlw	13
  6460  059A  0021               	movlb	1	; select bank1
  6461  059B  00CA               	movwf	(??_main^(0+128)+2)
  6462  059C  302D               	movlw	45
  6463  059D  00C9               	movwf	(??_main^(0+128)+1)
  6464  059E  30E2               	movlw	226
  6465  059F  00C8               	movwf	??_main^(0+128)
  6466  05A0                     u3637:	
  6467  05A0  0BC8               	decfsz	??_main^(0+128),f
  6468  05A1  2DA0               	goto	u3637
  6469  05A2  0BC9               	decfsz	(??_main^(0+128)+1),f
  6470  05A3  2DA0               	goto	u3637
  6471  05A4  0BCA               	decfsz	(??_main^(0+128)+2),f
  6472  05A5  2DA0               	goto	u3637
  6473  05A6  3200               	nop2
  6474                           
  6475                           ;main.c: 94: LCD_Clear();
  6476  05A7  3197  2709  3185   	fcall	_LCD_Clear
  6477  05AA                     l3046:	
  6478                           ;main.c: 96: while (1)
  6479                           
  6480                           
  6481                           ;main.c: 97: {
  6482                           ;main.c: 98: if(loop>253)
  6483  05AA  30FE               	movlw	254
  6484  05AB  0021               	movlb	1	; select bank1
  6485  05AC  026D               	subwf	_loop^(0+128),w
  6486  05AD  1C03               	skipc
  6487  05AE  2F17               	goto	l3114
  6488                           
  6489                           ;main.c: 99: {
  6490                           ;main.c: 100: PWM7_LoadDutyValue(setpoint[1]);
  6491  05AF  0864               	movf	((_setpoint+1)^(0+128)+2),w	;volatile
  6492  05B0  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6493  05B1  0863               	movf	(_setpoint^(0+128)+2),w	;volatile
  6494  05B2  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6495  05B3  3197  276C  3185   	fcall	_PWM7_LoadDutyValue
  6496                           
  6497                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6498  05B6  01F4               	clrf	LCD_Set_Cursor@y
  6499  05B7  3000               	movlw	0
  6500  05B8  3189  2167  3185   	fcall	_LCD_Set_Cursor
  6501  05BB  307D               	movlw	low (STR_1| (0+32768))
  6502  05BC  00F5               	movwf	LCD_Write_String@a
  6503  05BD  3090               	movlw	high (STR_1| (0+32768))
  6504  05BE  00F6               	movwf	LCD_Write_String@a+1
  6505  05BF  3197  27CB  3185   	fcall	_LCD_Write_String
  6506                           
  6507                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6508  05C2  01F4               	clrf	LCD_Set_Cursor@y
  6509  05C3  3005               	movlw	5
  6510  05C4  3189  2167  3185   	fcall	_LCD_Set_Cursor
  6511  05C7  0021               	movlb	1	; select bank1
  6512  05C8  085F               	movf	((main@analogs+1)^(0+128)+2),w
  6513  05C9  00FA               	movwf	LCD_Write_Int@value+1
  6514  05CA  085E               	movf	(main@analogs^(0+128)+2),w
  6515  05CB  00F9               	movwf	LCD_Write_Int@value
  6516  05CC  01FB               	clrf	LCD_Write_Int@fieldLength
  6517  05CD  03FB               	decf	LCD_Write_Int@fieldLength,f
  6518  05CE  01FC               	clrf	LCD_Write_Int@numPlaces
  6519  05CF  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6520  05D0  01FD               	clrf	LCD_Write_Int@sign
  6521  05D1  318E  265C  3185   	fcall	_LCD_Write_Int
  6522                           
  6523                           ;main.c: 104: LCD_Write_Char(0);
  6524  05D4  3000               	movlw	0
  6525  05D5  3188  2094  3185   	fcall	_LCD_Write_Char
  6526                           
  6527                           ;main.c: 105: LCD_Write_Char(70);
  6528  05D8  3046               	movlw	70
  6529  05D9  3188  2094  3185   	fcall	_LCD_Write_Char
  6530                           
  6531                           ;main.c: 106: LCD_Write_Char(' ');
  6532  05DC  3020               	movlw	32
  6533  05DD  3188  2094  3185   	fcall	_LCD_Write_Char
  6534                           
  6535                           ;main.c: 107: LCD_Write_Char(' ');
  6536  05E0  3020               	movlw	32
  6537  05E1  3188  2094  3185   	fcall	_LCD_Write_Char
  6538                           
  6539                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6540  05E4  01F4               	clrf	LCD_Set_Cursor@y
  6541  05E5  0AF4               	incf	LCD_Set_Cursor@y,f
  6542  05E6  3000               	movlw	0
  6543  05E7  3189  2167  3185   	fcall	_LCD_Set_Cursor
  6544  05EA  3075               	movlw	low (STR_2| (0+32768))
  6545  05EB  00F5               	movwf	LCD_Write_String@a
  6546  05EC  3090               	movlw	high (STR_2| (0+32768))
  6547  05ED  00F6               	movwf	LCD_Write_String@a+1
  6548  05EE  3197  27CB  3185   	fcall	_LCD_Write_String
  6549                           
  6550                           ;main.c: 110: LCD_Write_Char(' ');
  6551  05F1  3020               	movlw	32
  6552  05F2  3188  2094  3185   	fcall	_LCD_Write_Char
  6553                           
  6554                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  6555  05F5  0021               	movlb	1	; select bank1
  6556  05F6  085B               	movf	(main@dutyCycle6+1)^(0+128),w
  6557  05F7  00FA               	movwf	LCD_Write_Int@value+1
  6558  05F8  085A               	movf	main@dutyCycle6^(0+128),w
  6559  05F9  00F9               	movwf	LCD_Write_Int@value
  6560  05FA  3005               	movlw	5
  6561  05FB  00C8               	movwf	??_main^(0+128)
  6562  05FC  0848               	movf	??_main^(0+128),w
  6563  05FD  00FB               	movwf	LCD_Write_Int@fieldLength
  6564  05FE  01FC               	clrf	LCD_Write_Int@numPlaces
  6565  05FF  01FD               	clrf	LCD_Write_Int@sign
  6566  0600  318E  265C  3185   	fcall	_LCD_Write_Int
  6567                           
  6568                           ;main.c: 116: if(holdOutput==0)
  6569  0603  0020               	movlb	0	; select bank0
  6570  0604  086B               	movf	main@holdOutput,w
  6571  0605  1D03               	btfss	3,2
  6572  0606  2EAA               	goto	l3088
  6573                           
  6574                           ;main.c: 117: {
  6575                           ;main.c: 118: output = PID_Calculate(setpoint[0],analogs[1]);
  6576  0607  0021               	movlb	1	; select bank1
  6577  0608  0862               	movf	(_setpoint+1)^(0+128),w	;volatile
  6578  0609  00F7               	movwf	PID_Calculate@setpoint+1
  6579  060A  0861               	movf	_setpoint^(0+128),w	;volatile
  6580  060B  00F6               	movwf	PID_Calculate@setpoint
  6581  060C  085F               	movf	((main@analogs+1)^(0+128)+2),w
  6582  060D  00F9               	movwf	PID_Calculate@temp+1
  6583  060E  085E               	movf	(main@analogs^(0+128)+2),w
  6584  060F  00F8               	movwf	PID_Calculate@temp
  6585  0610  318F  2725  3185   	fcall	_PID_Calculate
  6586  0613  0877               	movf	?_PID_Calculate+1,w
  6587  0614  0020               	movlb	0	; select bank0
  6588  0615  00EA               	movwf	main@output+1
  6589  0616  0876               	movf	?_PID_Calculate,w
  6590  0617  00E9               	movwf	main@output
  6591                           
  6592                           ;main.c: 119: outputTotal = outputTotal - outputSamples[outputIndex];
  6593  0618  0021               	movlb	1	; select bank1
  6594  0619  0856               	movf	main@outputTotal^(0+128),w
  6595  061A  00C8               	movwf	??_main^(0+128)
  6596  061B  0857               	movf	(main@outputTotal+1)^(0+128),w
  6597  061C  00C9               	movwf	(??_main^(0+128)+1)
  6598  061D  0858               	movf	(main@outputTotal+2)^(0+128),w
  6599  061E  00CA               	movwf	(??_main^(0+128)+2)
  6600  061F  0859               	movf	(main@outputTotal+3)^(0+128),w
  6601  0620  00CB               	movwf	(??_main^(0+128)+3)
  6602  0621  0020               	movlb	0	; select bank0
  6603  0622  356F               	lslf	main@outputIndex,w
  6604  0623  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6605  0624  0086               	movwf	6
  6606  0625  3001               	movlw	1	; select bank2/3
  6607  0626  0087               	movwf	7
  6608  0627  3F40               	moviw [0]fsr1
  6609  0628  0021               	movlb	1	; select bank1
  6610  0629  00CC               	movwf	(??_main+4)^(0+128)
  6611  062A  3F41               	moviw [1]fsr1
  6612  062B  00CD               	movwf	((??_main+4)^(0+128)+1)
  6613  062C  084C               	movf	(??_main+4)^(0+128),w
  6614  062D  00CE               	movwf	(??_main+6)^(0+128)
  6615  062E  084D               	movf	(??_main+5)^(0+128),w
  6616  062F  00CF               	movwf	((??_main+6)^(0+128)+1)
  6617  0630  3000               	movlw	0
  6618  0631  1BCF               	btfsc	((??_main+6)^(0+128)+1),7
  6619  0632  30FF               	movlw	255
  6620  0633  00D0               	movwf	((??_main+6)^(0+128)+2)
  6621  0634  00D1               	movwf	((??_main+6)^(0+128)+3)
  6622  0635  09CE               	comf	(??_main+6)^(0+128),f
  6623  0636  09CF               	comf	((??_main+6)^(0+128)+1),f
  6624  0637  09D0               	comf	((??_main+6)^(0+128)+2),f
  6625  0638  09D1               	comf	((??_main+6)^(0+128)+3),f
  6626  0639  0ACE               	incf	(??_main+6)^(0+128),f
  6627  063A  1903               	skipnz
  6628  063B  0ACF               	incf	((??_main+6)^(0+128)+1),f
  6629  063C  1903               	skipnz
  6630  063D  0AD0               	incf	((??_main+6)^(0+128)+2),f
  6631  063E  1903               	skipnz
  6632  063F  0AD1               	incf	((??_main+6)^(0+128)+3),f
  6633  0640  084E               	movf	(??_main+6)^(0+128),w
  6634  0641  07C8               	addwf	??_main^(0+128),f
  6635  0642  084F               	movf	(??_main+7)^(0+128),w
  6636  0643  3DC9               	addwfc	(??_main^(0+128)+1),f
  6637  0644  0850               	movf	(??_main+8)^(0+128),w
  6638  0645  3DCA               	addwfc	(??_main^(0+128)+2),f
  6639  0646  0851               	movf	(??_main+9)^(0+128),w
  6640  0647  3DCB               	addwfc	(??_main^(0+128)+3),f
  6641  0648  084B               	movf	(??_main+3)^(0+128),w
  6642  0649  00D9               	movwf	(main@outputTotal+3)^(0+128)
  6643  064A  084A               	movf	(??_main+2)^(0+128),w
  6644  064B  00D8               	movwf	(main@outputTotal+2)^(0+128)
  6645  064C  0849               	movf	(??_main+1)^(0+128),w
  6646  064D  00D7               	movwf	(main@outputTotal+1)^(0+128)
  6647  064E  0848               	movf	??_main^(0+128),w
  6648  064F  00D6               	movwf	main@outputTotal^(0+128)
  6649                           
  6650                           ;main.c: 120: outputSamples[outputIndex] = output;
  6651  0650  0020               	movlb	0	; select bank0
  6652  0651  356F               	lslf	main@outputIndex,w
  6653  0652  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6654  0653  0086               	movwf	6
  6655  0654  3001               	movlw	1	; select bank2/3
  6656  0655  0087               	movwf	7
  6657  0656  0869               	movf	main@output,w
  6658  0657  3FC0               	movwi [0]fsr1
  6659  0658  086A               	movf	main@output+1,w
  6660  0659  3FC1               	movwi [1]fsr1
  6661                           
  6662                           ;main.c: 121: outputTotal = outputTotal + outputSamples[outputIndex];
  6663  065A  0021               	movlb	1	; select bank1
  6664  065B  0856               	movf	main@outputTotal^(0+128),w
  6665  065C  00C8               	movwf	??_main^(0+128)
  6666  065D  0857               	movf	(main@outputTotal+1)^(0+128),w
  6667  065E  00C9               	movwf	(??_main^(0+128)+1)
  6668  065F  0858               	movf	(main@outputTotal+2)^(0+128),w
  6669  0660  00CA               	movwf	(??_main^(0+128)+2)
  6670  0661  0859               	movf	(main@outputTotal+3)^(0+128),w
  6671  0662  00CB               	movwf	(??_main^(0+128)+3)
  6672  0663  0020               	movlb	0	; select bank0
  6673  0664  356F               	lslf	main@outputIndex,w
  6674  0665  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6675  0666  0086               	movwf	6
  6676  0667  3001               	movlw	1	; select bank2/3
  6677  0668  0087               	movwf	7
  6678  0669  3F40               	moviw [0]fsr1
  6679  066A  0021               	movlb	1	; select bank1
  6680  066B  00CC               	movwf	(??_main+4)^(0+128)
  6681  066C  3F41               	moviw [1]fsr1
  6682  066D  00CD               	movwf	((??_main+4)^(0+128)+1)
  6683  066E  084C               	movf	(??_main+4)^(0+128),w
  6684  066F  00CE               	movwf	(??_main+6)^(0+128)
  6685  0670  084D               	movf	(??_main+5)^(0+128),w
  6686  0671  00CF               	movwf	((??_main+6)^(0+128)+1)
  6687  0672  3000               	movlw	0
  6688  0673  1BCF               	btfsc	((??_main+6)^(0+128)+1),7
  6689  0674  30FF               	movlw	255
  6690  0675  00D0               	movwf	((??_main+6)^(0+128)+2)
  6691  0676  00D1               	movwf	((??_main+6)^(0+128)+3)
  6692  0677  084E               	movf	(??_main+6)^(0+128),w
  6693  0678  07C8               	addwf	??_main^(0+128),f
  6694  0679  084F               	movf	(??_main+7)^(0+128),w
  6695  067A  3DC9               	addwfc	(??_main^(0+128)+1),f
  6696  067B  0850               	movf	(??_main+8)^(0+128),w
  6697  067C  3DCA               	addwfc	(??_main^(0+128)+2),f
  6698  067D  0851               	movf	(??_main+9)^(0+128),w
  6699  067E  3DCB               	addwfc	(??_main^(0+128)+3),f
  6700  067F  084B               	movf	(??_main+3)^(0+128),w
  6701  0680  00D9               	movwf	(main@outputTotal+3)^(0+128)
  6702  0681  084A               	movf	(??_main+2)^(0+128),w
  6703  0682  00D8               	movwf	(main@outputTotal+2)^(0+128)
  6704  0683  0849               	movf	(??_main+1)^(0+128),w
  6705  0684  00D7               	movwf	(main@outputTotal+1)^(0+128)
  6706  0685  0848               	movf	??_main^(0+128),w
  6707  0686  00D6               	movwf	main@outputTotal^(0+128)
  6708                           
  6709                           ;main.c: 122: dutyCycle6 = outputTotal/40;
  6710  0687  3000               	movlw	0
  6711  0688  00F3               	movwf	___aldiv@divisor+3
  6712  0689  3000               	movlw	0
  6713  068A  00F2               	movwf	___aldiv@divisor+2
  6714  068B  3000               	movlw	0
  6715  068C  00F1               	movwf	___aldiv@divisor+1
  6716  068D  3028               	movlw	40
  6717  068E  00F0               	movwf	___aldiv@divisor
  6718  068F  0859               	movf	(main@outputTotal+3)^(0+128),w
  6719  0690  00F7               	movwf	___aldiv@dividend+3
  6720  0691  0858               	movf	(main@outputTotal+2)^(0+128),w
  6721  0692  00F6               	movwf	___aldiv@dividend+2
  6722  0693  0857               	movf	(main@outputTotal+1)^(0+128),w
  6723  0694  00F5               	movwf	___aldiv@dividend+1
  6724  0695  0856               	movf	main@outputTotal^(0+128),w
  6725  0696  00F4               	movwf	___aldiv@dividend
  6726  0697  3180  2006  3185   	fcall	___aldiv
  6727  069A  0871               	movf	?___aldiv+1,w
  6728  069B  0021               	movlb	1	; select bank1
  6729  069C  00DB               	movwf	(main@dutyCycle6+1)^(0+128)
  6730  069D  0870               	movf	?___aldiv,w
  6731  069E  00DA               	movwf	main@dutyCycle6^(0+128)
  6732                           
  6733                           ;main.c: 124: outputIndex+=1;
  6734  069F  3001               	movlw	1
  6735  06A0  00C8               	movwf	??_main^(0+128)
  6736  06A1  0848               	movf	??_main^(0+128),w
  6737  06A2  0020               	movlb	0	; select bank0
  6738  06A3  07EF               	addwf	main@outputIndex,f
  6739                           
  6740                           ;main.c: 125: if(outputIndex >= 40)outputIndex = 0;
  6741  06A4  3028               	movlw	40
  6742  06A5  026F               	subwf	main@outputIndex,w
  6743  06A6  1C03               	skipc
  6744  06A7  2EB0               	goto	l3092
  6745  06A8  01EF               	clrf	main@outputIndex
  6746                           
  6747                           ;main.c: 126: }
  6748  06A9  2EB0               	goto	l3092
  6749  06AA                     l3088:	
  6750                           
  6751                           ;main.c: 127: else
  6752                           ;main.c: 128: {
  6753                           ;main.c: 129: dutyCycle6=0;
  6754  06AA  0021               	movlb	1	; select bank1
  6755  06AB  01DA               	clrf	main@dutyCycle6^(0+128)
  6756  06AC  01DB               	clrf	(main@dutyCycle6+1)^(0+128)
  6757                           
  6758                           ;main.c: 130: holdOutput-=1;
  6759  06AD  3001               	movlw	1
  6760  06AE  0020               	movlb	0	; select bank0
  6761  06AF  02EB               	subwf	main@holdOutput,f
  6762  06B0                     l3092:	
  6763                           
  6764                           ;main.c: 131: }
  6765                           ;main.c: 133: currentTemperature=analogs[1];
  6766  06B0  0021               	movlb	1	; select bank1
  6767  06B1  085F               	movf	((main@analogs+1)^(0+128)+2),w
  6768  06B2  00D5               	movwf	(main@currentTemperature+1)^(0+128)
  6769  06B3  085E               	movf	(main@analogs^(0+128)+2),w
  6770  06B4  00D4               	movwf	main@currentTemperature^(0+128)
  6771                           
  6772                           ;main.c: 135: if(lidOpenCount<10)
  6773  06B5  300A               	movlw	10
  6774  06B6  0020               	movlb	0	; select bank0
  6775  06B7  026C               	subwf	main@lidOpenCount,w
  6776  06B8  1803               	skipnc
  6777  06B9  2EC1               	goto	l3098
  6778                           
  6779                           ;main.c: 136: {
  6780                           ;main.c: 137: lidOpenCount+=1;
  6781  06BA  3001               	movlw	1
  6782  06BB  0021               	movlb	1	; select bank1
  6783  06BC  00C8               	movwf	??_main^(0+128)
  6784  06BD  0848               	movf	??_main^(0+128),w
  6785  06BE  0020               	movlb	0	; select bank0
  6786  06BF  07EC               	addwf	main@lidOpenCount,f
  6787                           
  6788                           ;main.c: 138: }
  6789  06C0  2ECA               	goto	l3102
  6790  06C1                     l3098:	
  6791                           
  6792                           ;main.c: 139: else
  6793                           ;main.c: 140: {
  6794                           ;main.c: 141: lastTemperature=currentTemperature;
  6795  06C1  0021               	movlb	1	; select bank1
  6796  06C2  0855               	movf	(main@currentTemperature+1)^(0+128),w
  6797  06C3  0020               	movlb	0	; select bank0
  6798  06C4  00EE               	movwf	main@lastTemperature+1
  6799  06C5  0021               	movlb	1	; select bank1
  6800  06C6  0854               	movf	main@currentTemperature^(0+128),w
  6801  06C7  0020               	movlb	0	; select bank0
  6802  06C8  00ED               	movwf	main@lastTemperature
  6803                           
  6804                           ;main.c: 142: lidOpenCount=0;
  6805  06C9  01EC               	clrf	main@lidOpenCount
  6806  06CA                     l3102:	
  6807                           
  6808                           ;main.c: 143: }
  6809                           ;main.c: 145: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6810  06CA  0021               	movlb	1	; select bank1
  6811  06CB  0954               	comf	main@currentTemperature^(0+128),w
  6812  06CC  00C8               	movwf	??_main^(0+128)
  6813  06CD  0955               	comf	(main@currentTemperature+1)^(0+128),w
  6814  06CE  00C9               	movwf	(??_main^(0+128)+1)
  6815  06CF  0AC8               	incf	??_main^(0+128),f
  6816  06D0  1903               	skipnz
  6817  06D1  0AC9               	incf	(??_main^(0+128)+1),f
  6818  06D2  0020               	movlb	0	; select bank0
  6819  06D3  086D               	movf	main@lastTemperature,w
  6820  06D4  0021               	movlb	1	; select bank1
  6821  06D5  0748               	addwf	??_main^(0+128),w
  6822  06D6  00CA               	movwf	(??_main+2)^(0+128)
  6823  06D7  0020               	movlb	0	; select bank0
  6824  06D8  086E               	movf	main@lastTemperature+1,w
  6825  06D9  0021               	movlb	1	; select bank1
  6826  06DA  3D49               	addwfc	(??_main+1)^(0+128),w
  6827  06DB  00CB               	movwf	(??_main+3)^(0+128)
  6828  06DC  084B               	movf	(??_main+3)^(0+128),w
  6829  06DD  3A80               	xorlw	128
  6830  06DE  00CC               	movwf	(??_main+4)^(0+128)
  6831  06DF  3080               	movlw	128
  6832  06E0  024C               	subwf	(??_main+4)^(0+128),w
  6833  06E1  1D03               	skipz
  6834  06E2  2EE5               	goto	u3555
  6835  06E3  3065               	movlw	101
  6836  06E4  024A               	subwf	(??_main+2)^(0+128),w
  6837  06E5                     u3555:	
  6838  06E5  1803               	skipnc
  6839  06E6  2F04               	goto	l3106
  6840  06E7  0021               	movlb	1	; select bank1
  6841  06E8  0954               	comf	main@currentTemperature^(0+128),w
  6842  06E9  00C8               	movwf	??_main^(0+128)
  6843  06EA  0955               	comf	(main@currentTemperature+1)^(0+128),w
  6844  06EB  00C9               	movwf	(??_main^(0+128)+1)
  6845  06EC  0AC8               	incf	??_main^(0+128),f
  6846  06ED  1903               	skipnz
  6847  06EE  0AC9               	incf	(??_main^(0+128)+1),f
  6848  06EF  0020               	movlb	0	; select bank0
  6849  06F0  086D               	movf	main@lastTemperature,w
  6850  06F1  0021               	movlb	1	; select bank1
  6851  06F2  0748               	addwf	??_main^(0+128),w
  6852  06F3  00CA               	movwf	(??_main+2)^(0+128)
  6853  06F4  0020               	movlb	0	; select bank0
  6854  06F5  086E               	movf	main@lastTemperature+1,w
  6855  06F6  0021               	movlb	1	; select bank1
  6856  06F7  3D49               	addwfc	(??_main+1)^(0+128),w
  6857  06F8  00CB               	movwf	(??_main+3)^(0+128)
  6858  06F9  084B               	movf	(??_main+3)^(0+128),w
  6859  06FA  3A80               	xorlw	128
  6860  06FB  00CC               	movwf	(??_main+4)^(0+128)
  6861  06FC  307F               	movlw	127
  6862  06FD  024C               	subwf	(??_main+4)^(0+128),w
  6863  06FE  1D03               	skipz
  6864  06FF  2F02               	goto	u3565
  6865  0700  309C               	movlw	156
  6866  0701  024A               	subwf	(??_main+2)^(0+128),w
  6867  0702                     u3565:	
  6868  0702  1803               	skipnc
  6869  0703  2F0C               	goto	l3110
  6870  0704                     l3106:	
  6871                           
  6872                           ;main.c: 146: {
  6873                           ;main.c: 147: dutyCycle6=0;
  6874  0704  0021               	movlb	1	; select bank1
  6875  0705  01DA               	clrf	main@dutyCycle6^(0+128)
  6876  0706  01DB               	clrf	(main@dutyCycle6+1)^(0+128)
  6877                           
  6878                           ;main.c: 148: holdOutput=60;
  6879  0707  303C               	movlw	60
  6880  0708  00C8               	movwf	??_main^(0+128)
  6881  0709  0848               	movf	??_main^(0+128),w
  6882  070A  0020               	movlb	0	; select bank0
  6883  070B  00EB               	movwf	main@holdOutput
  6884  070C                     l3110:	
  6885                           
  6886                           ;main.c: 149: }
  6887                           ;main.c: 151: if(dutyCycle6<50)dutyCycle6=0;
  6888  070C  3000               	movlw	0
  6889  070D  0021               	movlb	1	; select bank1
  6890  070E  025B               	subwf	(main@dutyCycle6+1)^(0+128),w
  6891  070F  3032               	movlw	50
  6892  0710  1903               	skipnz
  6893  0711  025A               	subwf	main@dutyCycle6^(0+128),w
  6894  0712  1803               	skipnc
  6895  0713  2F16               	goto	l350
  6896  0714  01DA               	clrf	main@dutyCycle6^(0+128)
  6897  0715  01DB               	clrf	(main@dutyCycle6+1)^(0+128)
  6898  0716                     l350:	
  6899                           
  6900                           ;main.c: 153: loop=0;
  6901  0716  01ED               	clrf	_loop^(0+128)
  6902  0717                     l3114:	
  6903                           
  6904                           ;main.c: 154: }
  6905                           ;main.c: 156: pidPeriodCounter+=1;
  6906  0717  3001               	movlw	1
  6907  0718  07D2               	addwf	main@pidPeriodCounter^(0+128),f
  6908  0719  3000               	movlw	0
  6909  071A  3DD3               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6910                           
  6911                           ;main.c: 158: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6912  071B  086C               	movf	(_pidMaxOutput+1)^(0+128),w
  6913  071C  3A80               	xorlw	128
  6914  071D  00C8               	movwf	??_main^(0+128)
  6915  071E  0853               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6916  071F  3A80               	xorlw	128
  6917  0720  0248               	subwf	??_main^(0+128),w
  6918  0721  1D03               	skipz
  6919  0722  2F25               	goto	u3585
  6920  0723  0852               	movf	main@pidPeriodCounter^(0+128),w
  6921  0724  026B               	subwf	_pidMaxOutput^(0+128),w
  6922  0725                     u3585:	
  6923  0725  1803               	skipnc
  6924  0726  2F2A               	goto	l3120
  6925  0727  0021               	movlb	1	; select bank1
  6926  0728  01D2               	clrf	main@pidPeriodCounter^(0+128)
  6927  0729  01D3               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6928  072A                     l3120:	
  6929                           
  6930                           ;main.c: 160: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6931  072A  0021               	movlb	1	; select bank1
  6932  072B  085B               	movf	(main@dutyCycle6+1)^(0+128),w
  6933  072C  0253               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6934  072D  1D03               	skipz
  6935  072E  2F31               	goto	u3595
  6936  072F  085A               	movf	main@dutyCycle6^(0+128),w
  6937  0730  0252               	subwf	main@pidPeriodCounter^(0+128),w
  6938  0731                     u3595:	
  6939  0731  1803               	skipnc
  6940  0732  2F36               	goto	l352
  6941  0733  0020               	movlb	0	; select bank0
  6942  0734  1518               	bsf	24,2	;volatile
  6943  0735  2F38               	goto	l3124
  6944  0736                     l352:	
  6945                           
  6946                           ;main.c: 161: else LATC2=0;
  6947  0736  0020               	movlb	0	; select bank0
  6948  0737  1118               	bcf	24,2	;volatile
  6949  0738                     l3124:	
  6950                           
  6951                           ;main.c: 163: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6952  0738  0021               	movlb	1	; select bank1
  6953  0739  01E0               	clrf	main@j^(0+128)
  6954  073A  3002               	movlw	2
  6955  073B  0260               	subwf	main@j^(0+128),w
  6956  073C  1803               	btfsc	3,0
  6957  073D  2F5E               	goto	l3136
  6958  073E                     l3130:	
  6959  073E  0860               	movf	main@j^(0+128),w
  6960  073F  00C8               	movwf	??_main^(0+128)
  6961  0740  01C9               	clrf	(??_main^(0+128)+1)
  6962  0741  0848               	movf	??_main^(0+128),w
  6963  0742  0020               	movlb	0	; select bank0
  6964  0743  00A6               	movwf	readAnalog@channel
  6965  0744  0021               	movlb	1	; select bank1
  6966  0745  0849               	movf	(??_main+1)^(0+128),w
  6967  0746  0020               	movlb	0	; select bank0
  6968  0747  00A7               	movwf	readAnalog@channel+1
  6969  0748  3182  229B  3185   	fcall	_readAnalog
  6970  074B  0021               	movlb	1	; select bank1
  6971  074C  3560               	lslf	main@j^(0+128),w
  6972  074D  3EDC               	addlw	(low (main@analogs| 0))& (0+255)
  6973  074E  0086               	movwf	6
  6974  074F  0187               	clrf	7
  6975  0750  0020               	movlb	0	; select bank0
  6976  0751  0826               	movf	?_readAnalog,w
  6977  0752  3FC0               	movwi [0]fsr1
  6978  0753  0827               	movf	?_readAnalog+1,w
  6979  0754  3FC1               	movwi [1]fsr1
  6980  0755  3001               	movlw	1
  6981  0756  0021               	movlb	1	; select bank1
  6982  0757  00C8               	movwf	??_main^(0+128)
  6983  0758  0848               	movf	??_main^(0+128),w
  6984  0759  07E0               	addwf	main@j^(0+128),f
  6985  075A  3002               	movlw	2
  6986  075B  0260               	subwf	main@j^(0+128),w
  6987  075C  1C03               	skipc
  6988  075D  2F3E               	goto	l3130
  6989  075E                     l3136:	
  6990                           
  6991                           ;main.c: 165: analogs[0]=tempCalc(analogs[0]);
  6992  075E  085D               	movf	(main@analogs+1)^(0+128),w
  6993  075F  0020               	movlb	0	; select bank0
  6994  0760  00DE               	movwf	tempCalc@analogValue+1
  6995  0761  0021               	movlb	1	; select bank1
  6996  0762  085C               	movf	main@analogs^(0+128),w
  6997  0763  0020               	movlb	0	; select bank0
  6998  0764  00DD               	movwf	tempCalc@analogValue
  6999  0765  3181  217E  3185   	fcall	_tempCalc
  7000  0768  0020               	movlb	0	; select bank0
  7001  0769  085E               	movf	?_tempCalc+1,w
  7002  076A  0021               	movlb	1	; select bank1
  7003  076B  00DD               	movwf	(main@analogs+1)^(0+128)
  7004  076C  0020               	movlb	0	; select bank0
  7005  076D  085D               	movf	?_tempCalc,w
  7006  076E  0021               	movlb	1	; select bank1
  7007  076F  00DC               	movwf	main@analogs^(0+128)
  7008                           
  7009                           ;main.c: 167: analogs[1]=tempCalc(analogs[1]);
  7010  0770  085F               	movf	((main@analogs+1)^(0+128)+2),w
  7011  0771  0020               	movlb	0	; select bank0
  7012  0772  00DE               	movwf	tempCalc@analogValue+1
  7013  0773  0021               	movlb	1	; select bank1
  7014  0774  085E               	movf	(main@analogs^(0+128)+2),w
  7015  0775  0020               	movlb	0	; select bank0
  7016  0776  00DD               	movwf	tempCalc@analogValue
  7017  0777  3181  217E  3185   	fcall	_tempCalc
  7018  077A  0020               	movlb	0	; select bank0
  7019  077B  085E               	movf	?_tempCalc+1,w
  7020  077C  0021               	movlb	1	; select bank1
  7021  077D  00DF               	movwf	((main@analogs+1)^(0+128)+2)
  7022  077E  0020               	movlb	0	; select bank0
  7023  077F  085D               	movf	?_tempCalc,w
  7024  0780  0021               	movlb	1	; select bank1
  7025  0781  00DE               	movwf	(main@analogs^(0+128)+2)
  7026                           
  7027                           ;main.c: 170: if(RB2==1)
  7028  0782  0020               	movlb	0	; select bank0
  7029  0783  1D0D               	btfss	13,2	;volatile
  7030  0784  2FB1               	goto	l3150
  7031                           
  7032                           ;main.c: 171: {
  7033                           ;main.c: 172: LCD_Clear();
  7034  0785  3197  2709  3185   	fcall	_LCD_Clear
  7035                           
  7036                           ;main.c: 173: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7037  0788  01F4               	clrf	LCD_Set_Cursor@y
  7038  0789  3000               	movlw	0
  7039  078A  3189  2167  3185   	fcall	_LCD_Set_Cursor
  7040  078D  303D               	movlw	low (STR_3| (0+32768))
  7041  078E  00F5               	movwf	LCD_Write_String@a
  7042  078F  3090               	movlw	high (STR_3| (0+32768))
  7043  0790  00F6               	movwf	LCD_Write_String@a+1
  7044  0791  3197  27CB  3185   	fcall	_LCD_Write_String
  7045                           
  7046                           ;main.c: 174: { LCD_Set_Cursor(1,0); LCD_Write_String("Enter Key to Set");};
  7047  0794  01F4               	clrf	LCD_Set_Cursor@y
  7048  0795  3001               	movlw	1
  7049  0796  3189  2167  3185   	fcall	_LCD_Set_Cursor
  7050  0799  304E               	movlw	low (STR_4| (0+32768))
  7051  079A  00F5               	movwf	LCD_Write_String@a
  7052  079B  3090               	movlw	high (STR_4| (0+32768))
  7053  079C  00F6               	movwf	LCD_Write_String@a+1
  7054  079D  3197  27CB  3185   	fcall	_LCD_Write_String
  7055                           
  7056                           ;main.c: 175: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7057  07A0  303D               	movlw	61
  7058  07A1  0021               	movlb	1	; select bank1
  7059  07A2  00CA               	movwf	(??_main^(0+128)+2)
  7060  07A3  30E1               	movlw	225
  7061  07A4  00C9               	movwf	(??_main^(0+128)+1)
  7062  07A5  307A               	movlw	122
  7063  07A6  00C8               	movwf	??_main^(0+128)
  7064  07A7                     u3647:	
  7065  07A7  0BC8               	decfsz	??_main^(0+128),f
  7066  07A8  2FA7               	goto	u3647
  7067  07A9  0BC9               	decfsz	(??_main^(0+128)+1),f
  7068  07AA  2FA7               	goto	u3647
  7069  07AB  0BCA               	decfsz	(??_main^(0+128)+2),f
  7070  07AC  2FA7               	goto	u3647
  7071  07AD  3200               	nop2
  7072                           
  7073                           ;main.c: 176: menuChoice();
  7074  07AE  3183  23D8  3185   	fcall	_menuChoice
  7075  07B1                     l3150:	
  7076                           
  7077                           ;main.c: 177: }
  7078                           ;main.c: 413: loop+=1;
  7079  07B1  3001               	movlw	1
  7080  07B2  0021               	movlb	1	; select bank1
  7081  07B3  00C8               	movwf	??_main^(0+128)
  7082  07B4  0848               	movf	??_main^(0+128),w
  7083  07B5  07ED               	addwf	_loop^(0+128),f
  7084  07B6  2DAA               	goto	l3046
  7085  07B7                     __end_of_main:	
  7086                           
  7087                           	psect	text1
  7088  017E                     __ptext1:	
  7089 ;; *************** function _tempCalc *****************
  7090 ;; Defined at:
  7091 ;;		line 4 in file "tempCalc.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  analogValue     2   61[BANK0 ] int 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  steinhart       3   69[BANK0 ] float 
  7096 ;;  R               3   63[BANK0 ] float 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  2   61[BANK0 ] int 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;Total ram usage:       11 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    4
  7113 ;; This function calls:
  7114 ;;		___awtoft
  7115 ;;		___ftadd
  7116 ;;		___ftdiv
  7117 ;;		___ftmul
  7118 ;;		___ftsub
  7119 ;;		___fttol
  7120 ;;		_log
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _tempCalc
  7128  017E                     _tempCalc:	
  7129                           
  7130                           ;tempCalc.c: 6: float R, steinhart;
  7131                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7135  017E  3000               	movlw	0
  7136  017F  0020               	movlb	0	; select bank0
  7137  0180  00C0               	movwf	___ftadd@f1
  7138  0181  3080               	movlw	128
  7139  0182  00C1               	movwf	___ftadd@f1+1
  7140  0183  30BF               	movlw	191
  7141  0184  00C2               	movwf	___ftadd@f1+2
  7142  0185  085E               	movf	tempCalc@analogValue+1,w
  7143  0186  00F9               	movwf	___awtoft@c+1
  7144  0187  085D               	movf	tempCalc@analogValue,w
  7145  0188  00F8               	movwf	___awtoft@c
  7146  0189  3188  202E  3181   	fcall	___awtoft
  7147  018C  0878               	movf	?___awtoft,w
  7148  018D  0020               	movlb	0	; select bank0
  7149  018E  00B0               	movwf	___ftdiv@f2
  7150  018F  0879               	movf	?___awtoft+1,w
  7151  0190  00B1               	movwf	___ftdiv@f2+1
  7152  0191  087A               	movf	?___awtoft+2,w
  7153  0192  00B2               	movwf	___ftdiv@f2+2
  7154  0193  30C0               	movlw	192
  7155  0194  00B3               	movwf	___ftdiv@f1
  7156  0195  307F               	movlw	127
  7157  0196  00B4               	movwf	___ftdiv@f1+1
  7158  0197  3044               	movlw	68
  7159  0198  00B5               	movwf	___ftdiv@f1+2
  7160  0199  318C  244F  3181   	fcall	___ftdiv
  7161  019C  0020               	movlb	0	; select bank0
  7162  019D  0830               	movf	?___ftdiv,w
  7163  019E  00C3               	movwf	___ftadd@f2
  7164  019F  0831               	movf	?___ftdiv+1,w
  7165  01A0  00C4               	movwf	___ftadd@f2+1
  7166  01A1  0832               	movf	?___ftdiv+2,w
  7167  01A2  00C5               	movwf	___ftadd@f2+2
  7168  01A3  3180  2088  3181   	fcall	___ftadd
  7169  01A6  0020               	movlb	0	; select bank0
  7170  01A7  0840               	movf	?___ftadd,w
  7171  01A8  00E2               	movwf	_tempCalc$1009
  7172  01A9  0841               	movf	?___ftadd+1,w
  7173  01AA  00E3               	movwf	_tempCalc$1009+1
  7174  01AB  0842               	movf	?___ftadd+2,w
  7175  01AC  00E4               	movwf	_tempCalc$1009+2
  7176                           
  7177                           ;tempCalc.c: 6: float R, steinhart;
  7178                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7179  01AD  0862               	movf	_tempCalc$1009,w
  7180  01AE  00B0               	movwf	___ftdiv@f2
  7181  01AF  0863               	movf	_tempCalc$1009+1,w
  7182  01B0  00B1               	movwf	___ftdiv@f2+1
  7183  01B1  0864               	movf	_tempCalc$1009+2,w
  7184  01B2  00B2               	movwf	___ftdiv@f2+2
  7185  01B3  3060               	movlw	96
  7186  01B4  00B3               	movwf	___ftdiv@f1
  7187  01B5  301A               	movlw	26
  7188  01B6  00B4               	movwf	___ftdiv@f1+1
  7189  01B7  3046               	movlw	70
  7190  01B8  00B5               	movwf	___ftdiv@f1+2
  7191  01B9  318C  244F  3181   	fcall	___ftdiv
  7192  01BC  0020               	movlb	0	; select bank0
  7193  01BD  0830               	movf	?___ftdiv,w
  7194  01BE  00DF               	movwf	tempCalc@R
  7195  01BF  0831               	movf	?___ftdiv+1,w
  7196  01C0  00E0               	movwf	tempCalc@R+1
  7197  01C1  0832               	movf	?___ftdiv+2,w
  7198  01C2  00E1               	movwf	tempCalc@R+2
  7199                           
  7200                           ;tempCalc.c: 10: steinhart = R /10000;
  7201  01C3  3040               	movlw	64
  7202  01C4  00B0               	movwf	___ftdiv@f2
  7203  01C5  301C               	movlw	28
  7204  01C6  00B1               	movwf	___ftdiv@f2+1
  7205  01C7  3046               	movlw	70
  7206  01C8  00B2               	movwf	___ftdiv@f2+2
  7207  01C9  085F               	movf	tempCalc@R,w
  7208  01CA  00B3               	movwf	___ftdiv@f1
  7209  01CB  0860               	movf	tempCalc@R+1,w
  7210  01CC  00B4               	movwf	___ftdiv@f1+1
  7211  01CD  0861               	movf	tempCalc@R+2,w
  7212  01CE  00B5               	movwf	___ftdiv@f1+2
  7213  01CF  318C  244F  3181   	fcall	___ftdiv
  7214  01D2  0020               	movlb	0	; select bank0
  7215  01D3  0830               	movf	?___ftdiv,w
  7216  01D4  00E5               	movwf	tempCalc@steinhart
  7217  01D5  0831               	movf	?___ftdiv+1,w
  7218  01D6  00E6               	movwf	tempCalc@steinhart+1
  7219  01D7  0832               	movf	?___ftdiv+2,w
  7220  01D8  00E7               	movwf	tempCalc@steinhart+2
  7221                           
  7222                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7223  01D9  0865               	movf	tempCalc@steinhart,w
  7224  01DA  00D7               	movwf	log@x
  7225  01DB  0866               	movf	tempCalc@steinhart+1,w
  7226  01DC  00D8               	movwf	log@x+1
  7227  01DD  0867               	movf	tempCalc@steinhart+2,w
  7228  01DE  00D9               	movwf	log@x+2
  7229  01DF  318C  24F8  3181   	fcall	_log
  7230  01E2  0020               	movlb	0	; select bank0
  7231  01E3  0857               	movf	?_log,w
  7232  01E4  00E5               	movwf	tempCalc@steinhart
  7233  01E5  0858               	movf	?_log+1,w
  7234  01E6  00E6               	movwf	tempCalc@steinhart+1
  7235  01E7  0859               	movf	?_log+2,w
  7236  01E8  00E7               	movwf	tempCalc@steinhart+2
  7237                           
  7238                           ;tempCalc.c: 12: steinhart /= 3930;
  7239  01E9  30A0               	movlw	160
  7240  01EA  00B0               	movwf	___ftdiv@f2
  7241  01EB  3075               	movlw	117
  7242  01EC  00B1               	movwf	___ftdiv@f2+1
  7243  01ED  3045               	movlw	69
  7244  01EE  00B2               	movwf	___ftdiv@f2+2
  7245  01EF  0865               	movf	tempCalc@steinhart,w
  7246  01F0  00B3               	movwf	___ftdiv@f1
  7247  01F1  0866               	movf	tempCalc@steinhart+1,w
  7248  01F2  00B4               	movwf	___ftdiv@f1+1
  7249  01F3  0867               	movf	tempCalc@steinhart+2,w
  7250  01F4  00B5               	movwf	___ftdiv@f1+2
  7251  01F5  318C  244F  3181   	fcall	___ftdiv
  7252  01F8  0020               	movlb	0	; select bank0
  7253  01F9  0830               	movf	?___ftdiv,w
  7254  01FA  00E5               	movwf	tempCalc@steinhart
  7255  01FB  0831               	movf	?___ftdiv+1,w
  7256  01FC  00E6               	movwf	tempCalc@steinhart+1
  7257  01FD  0832               	movf	?___ftdiv+2,w
  7258  01FE  00E7               	movwf	tempCalc@steinhart+2
  7259                           
  7260                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  7261  01FF  30CF               	movlw	207
  7262  0200  00C0               	movwf	___ftadd@f1
  7263  0201  305B               	movlw	91
  7264  0202  00C1               	movwf	___ftadd@f1+1
  7265  0203  303B               	movlw	59
  7266  0204  00C2               	movwf	___ftadd@f1+2
  7267  0205  0865               	movf	tempCalc@steinhart,w
  7268  0206  00C3               	movwf	___ftadd@f2
  7269  0207  0866               	movf	tempCalc@steinhart+1,w
  7270  0208  00C4               	movwf	___ftadd@f2+1
  7271  0209  0867               	movf	tempCalc@steinhart+2,w
  7272  020A  00C5               	movwf	___ftadd@f2+2
  7273  020B  3180  2088  3181   	fcall	___ftadd
  7274  020E  0020               	movlb	0	; select bank0
  7275  020F  0840               	movf	?___ftadd,w
  7276  0210  00E5               	movwf	tempCalc@steinhart
  7277  0211  0841               	movf	?___ftadd+1,w
  7278  0212  00E6               	movwf	tempCalc@steinhart+1
  7279  0213  0842               	movf	?___ftadd+2,w
  7280  0214  00E7               	movwf	tempCalc@steinhart+2
  7281                           
  7282                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  7283  0215  0865               	movf	tempCalc@steinhart,w
  7284  0216  00B0               	movwf	___ftdiv@f2
  7285  0217  0866               	movf	tempCalc@steinhart+1,w
  7286  0218  00B1               	movwf	___ftdiv@f2+1
  7287  0219  0867               	movf	tempCalc@steinhart+2,w
  7288  021A  00B2               	movwf	___ftdiv@f2+2
  7289  021B  3000               	movlw	0
  7290  021C  00B3               	movwf	___ftdiv@f1
  7291  021D  3080               	movlw	128
  7292  021E  00B4               	movwf	___ftdiv@f1+1
  7293  021F  303F               	movlw	63
  7294  0220  00B5               	movwf	___ftdiv@f1+2
  7295  0221  318C  244F  3181   	fcall	___ftdiv
  7296  0224  0020               	movlb	0	; select bank0
  7297  0225  0830               	movf	?___ftdiv,w
  7298  0226  00E5               	movwf	tempCalc@steinhart
  7299  0227  0831               	movf	?___ftdiv+1,w
  7300  0228  00E6               	movwf	tempCalc@steinhart+1
  7301  0229  0832               	movf	?___ftdiv+2,w
  7302  022A  00E7               	movwf	tempCalc@steinhart+2
  7303                           
  7304                           ;tempCalc.c: 16: steinhart -= 273.15;
  7305  022B  3093               	movlw	147
  7306  022C  00CD               	movwf	___ftsub@f2
  7307  022D  3088               	movlw	136
  7308  022E  00CE               	movwf	___ftsub@f2+1
  7309  022F  3043               	movlw	67
  7310  0230  00CF               	movwf	___ftsub@f2+2
  7311  0231  0865               	movf	tempCalc@steinhart,w
  7312  0232  00D0               	movwf	___ftsub@f1
  7313  0233  0866               	movf	tempCalc@steinhart+1,w
  7314  0234  00D1               	movwf	___ftsub@f1+1
  7315  0235  0867               	movf	tempCalc@steinhart+2,w
  7316  0236  00D2               	movwf	___ftsub@f1+2
  7317  0237  3188  2010  3181   	fcall	___ftsub
  7318  023A  0020               	movlb	0	; select bank0
  7319  023B  084D               	movf	?___ftsub,w
  7320  023C  00E5               	movwf	tempCalc@steinhart
  7321  023D  084E               	movf	?___ftsub+1,w
  7322  023E  00E6               	movwf	tempCalc@steinhart+1
  7323  023F  084F               	movf	?___ftsub+2,w
  7324  0240  00E7               	movwf	tempCalc@steinhart+2
  7325                           
  7326                           ;tempCalc.c: 18: steinhart*=10;
  7327  0241  3000               	movlw	0
  7328  0242  00A0               	movwf	___ftmul@f1
  7329  0243  3020               	movlw	32
  7330  0244  00A1               	movwf	___ftmul@f1+1
  7331  0245  3041               	movlw	65
  7332  0246  00A2               	movwf	___ftmul@f1+2
  7333  0247  0865               	movf	tempCalc@steinhart,w
  7334  0248  00A3               	movwf	___ftmul@f2
  7335  0249  0866               	movf	tempCalc@steinhart+1,w
  7336  024A  00A4               	movwf	___ftmul@f2+1
  7337  024B  0867               	movf	tempCalc@steinhart+2,w
  7338  024C  00A5               	movwf	___ftmul@f2+2
  7339  024D  318D  25A8  3181   	fcall	___ftmul
  7340  0250  0020               	movlb	0	; select bank0
  7341  0251  0820               	movf	?___ftmul,w
  7342  0252  00E5               	movwf	tempCalc@steinhart
  7343  0253  0821               	movf	?___ftmul+1,w
  7344  0254  00E6               	movwf	tempCalc@steinhart+1
  7345  0255  0822               	movf	?___ftmul+2,w
  7346  0256  00E7               	movwf	tempCalc@steinhart+2
  7347                           
  7348                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  7349  0257  3000               	movlw	0
  7350  0258  00C0               	movwf	___ftadd@f1
  7351  0259  30A0               	movlw	160
  7352  025A  00C1               	movwf	___ftadd@f1+1
  7353  025B  3043               	movlw	67
  7354  025C  00C2               	movwf	___ftadd@f1+2
  7355  025D  3000               	movlw	0
  7356  025E  00B0               	movwf	___ftdiv@f2
  7357  025F  30A0               	movlw	160
  7358  0260  00B1               	movwf	___ftdiv@f2+1
  7359  0261  3040               	movlw	64
  7360  0262  00B2               	movwf	___ftdiv@f2+2
  7361  0263  3000               	movlw	0
  7362  0264  00A0               	movwf	___ftmul@f1
  7363  0265  3010               	movlw	16
  7364  0266  00A1               	movwf	___ftmul@f1+1
  7365  0267  3041               	movlw	65
  7366  0268  00A2               	movwf	___ftmul@f1+2
  7367  0269  0865               	movf	tempCalc@steinhart,w
  7368  026A  00A3               	movwf	___ftmul@f2
  7369  026B  0866               	movf	tempCalc@steinhart+1,w
  7370  026C  00A4               	movwf	___ftmul@f2+1
  7371  026D  0867               	movf	tempCalc@steinhart+2,w
  7372  026E  00A5               	movwf	___ftmul@f2+2
  7373  026F  318D  25A8  3181   	fcall	___ftmul
  7374  0272  0020               	movlb	0	; select bank0
  7375  0273  0820               	movf	?___ftmul,w
  7376  0274  00B3               	movwf	___ftdiv@f1
  7377  0275  0821               	movf	?___ftmul+1,w
  7378  0276  00B4               	movwf	___ftdiv@f1+1
  7379  0277  0822               	movf	?___ftmul+2,w
  7380  0278  00B5               	movwf	___ftdiv@f1+2
  7381  0279  318C  244F  3181   	fcall	___ftdiv
  7382  027C  0020               	movlb	0	; select bank0
  7383  027D  0830               	movf	?___ftdiv,w
  7384  027E  00C3               	movwf	___ftadd@f2
  7385  027F  0831               	movf	?___ftdiv+1,w
  7386  0280  00C4               	movwf	___ftadd@f2+1
  7387  0281  0832               	movf	?___ftdiv+2,w
  7388  0282  00C5               	movwf	___ftadd@f2+2
  7389  0283  3180  2088  3181   	fcall	___ftadd
  7390  0286  0020               	movlb	0	; select bank0
  7391  0287  0840               	movf	?___ftadd,w
  7392  0288  00E5               	movwf	tempCalc@steinhart
  7393  0289  0841               	movf	?___ftadd+1,w
  7394  028A  00E6               	movwf	tempCalc@steinhart+1
  7395  028B  0842               	movf	?___ftadd+2,w
  7396  028C  00E7               	movwf	tempCalc@steinhart+2
  7397                           
  7398                           ;tempCalc.c: 22: return (int)steinhart;
  7399  028D  0865               	movf	tempCalc@steinhart,w
  7400  028E  00F0               	movwf	___fttol@f1
  7401  028F  0866               	movf	tempCalc@steinhart+1,w
  7402  0290  00F1               	movwf	___fttol@f1+1
  7403  0291  0867               	movf	tempCalc@steinhart+2,w
  7404  0292  00F2               	movwf	___fttol@f1+2
  7405  0293  318B  2342         	fcall	___fttol
  7406  0295  0871               	movf	?___fttol+1,w
  7407  0296  0020               	movlb	0	; select bank0
  7408  0297  00DE               	movwf	?_tempCalc+1
  7409  0298  0870               	movf	?___fttol,w
  7410  0299  00DD               	movwf	?_tempCalc
  7411  029A  0008               	return
  7412  029B                     __end_of_tempCalc:	
  7413                           
  7414                           	psect	text2
  7415  0CF8                     __ptext2:	
  7416 ;; *************** function _log *****************
  7417 ;; Defined at:
  7418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  x               3   55[BANK0 ] int 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  exponent        2   59[BANK0 ] int 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  3   55[BANK0 ] int 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7432 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;Total ram usage:        6 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    3
  7439 ;; This function calls:
  7440 ;;		___awtoft
  7441 ;;		___ftadd
  7442 ;;		___ftge
  7443 ;;		___ftmul
  7444 ;;		_eval_poly
  7445 ;;		_frexp
  7446 ;; This function is called by:
  7447 ;;		_tempCalc
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           
  7452                           ;psect for function _log
  7453  0CF8                     _log:	
  7454                           
  7455                           ;incstack = 0
  7456                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7457  0CF8  0020               	movlb	0	; select bank0
  7458  0CF9  0857               	movf	log@x,w
  7459  0CFA  00F0               	movwf	___ftge@ff1
  7460  0CFB  0858               	movf	log@x+1,w
  7461  0CFC  00F1               	movwf	___ftge@ff1+1
  7462  0CFD  0859               	movf	log@x+2,w
  7463  0CFE  00F2               	movwf	___ftge@ff1+2
  7464  0CFF  3000               	movlw	0
  7465  0D00  00F3               	movwf	___ftge@ff2
  7466  0D01  3000               	movlw	0
  7467  0D02  00F4               	movwf	___ftge@ff2+1
  7468  0D03  3000               	movlw	0
  7469  0D04  00F5               	movwf	___ftge@ff2+2
  7470  0D05  3188  20F1  318C   	fcall	___ftge
  7471  0D08  1803               	btfsc	3,0
  7472  0D09  2D17               	goto	l2634
  7473  0D0A  3021               	movlw	33
  7474  0D0B  0021               	movlb	1	; select bank1
  7475  0D0C  00AC               	movwf	_errno^(0+128)
  7476  0D0D  3000               	movlw	0
  7477  0D0E  00AD               	movwf	(_errno^(0+128)+1)
  7478  0D0F  3000               	movlw	0
  7479  0D10  0020               	movlb	0	; select bank0
  7480  0D11  00D7               	movwf	?_log
  7481  0D12  3000               	movlw	0
  7482  0D13  00D8               	movwf	?_log+1
  7483  0D14  3000               	movlw	0
  7484  0D15  00D9               	movwf	?_log+2
  7485  0D16  0008               	return
  7486  0D17                     l2634:	
  7487  0D17  0020               	movlb	0	; select bank0
  7488  0D18  0859               	movf	log@x+2,w
  7489  0D19  0458               	iorwf	log@x+1,w
  7490  0D1A  0457               	iorwf	log@x,w
  7491  0D1B  1D03               	skipz
  7492  0D1C  2D2A               	goto	l2640
  7493  0D1D  3022               	movlw	34
  7494  0D1E  0021               	movlb	1	; select bank1
  7495  0D1F  00AC               	movwf	_errno^(0+128)
  7496  0D20  3000               	movlw	0
  7497  0D21  00AD               	movwf	(_errno^(0+128)+1)
  7498  0D22  3000               	movlw	0
  7499  0D23  0020               	movlb	0	; select bank0
  7500  0D24  00D7               	movwf	?_log
  7501  0D25  3000               	movlw	0
  7502  0D26  00D8               	movwf	?_log+1
  7503  0D27  3000               	movlw	0
  7504  0D28  00D9               	movwf	?_log+2
  7505  0D29  0008               	return
  7506  0D2A                     l2640:	
  7507  0D2A  3000               	movlw	0
  7508  0D2B  00C0               	movwf	___ftadd@f1
  7509  0D2C  3080               	movlw	128
  7510  0D2D  00C1               	movwf	___ftadd@f1+1
  7511  0D2E  30BF               	movlw	191
  7512  0D2F  00C2               	movwf	___ftadd@f1+2
  7513  0D30  3000               	movlw	0
  7514  0D31  00A0               	movwf	___ftmul@f1
  7515  0D32  3000               	movlw	0
  7516  0D33  00A1               	movwf	___ftmul@f1+1
  7517  0D34  3040               	movlw	64
  7518  0D35  00A2               	movwf	___ftmul@f1+2
  7519  0D36  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7520  0D37  00DA               	movwf	??_log
  7521  0D38  085A               	movf	??_log,w
  7522  0D39  00F3               	movwf	frexp@eptr
  7523  0D3A  0857               	movf	log@x,w
  7524  0D3B  00F0               	movwf	frexp@value
  7525  0D3C  0858               	movf	log@x+1,w
  7526  0D3D  00F1               	movwf	frexp@value+1
  7527  0D3E  0859               	movf	log@x+2,w
  7528  0D3F  00F2               	movwf	frexp@value+2
  7529  0D40  3189  212C  318C   	fcall	_frexp
  7530  0D43  0870               	movf	?_frexp,w
  7531  0D44  0020               	movlb	0	; select bank0
  7532  0D45  00A3               	movwf	___ftmul@f2
  7533  0D46  0871               	movf	?_frexp+1,w
  7534  0D47  00A4               	movwf	___ftmul@f2+1
  7535  0D48  0872               	movf	?_frexp+2,w
  7536  0D49  00A5               	movwf	___ftmul@f2+2
  7537  0D4A  318D  25A8  318C   	fcall	___ftmul
  7538  0D4D  0020               	movlb	0	; select bank0
  7539  0D4E  0820               	movf	?___ftmul,w
  7540  0D4F  00C3               	movwf	___ftadd@f2
  7541  0D50  0821               	movf	?___ftmul+1,w
  7542  0D51  00C4               	movwf	___ftadd@f2+1
  7543  0D52  0822               	movf	?___ftmul+2,w
  7544  0D53  00C5               	movwf	___ftadd@f2+2
  7545  0D54  3180  2088  318C   	fcall	___ftadd
  7546  0D57  0020               	movlb	0	; select bank0
  7547  0D58  0840               	movf	?___ftadd,w
  7548  0D59  00D7               	movwf	log@x
  7549  0D5A  0841               	movf	?___ftadd+1,w
  7550  0D5B  00D8               	movwf	log@x+1
  7551  0D5C  0842               	movf	?___ftadd+2,w
  7552  0D5D  00D9               	movwf	log@x+2
  7553  0D5E  30FF               	movlw	255
  7554  0D5F  07DB               	addwf	log@exponent,f
  7555  0D60  30FF               	movlw	255
  7556  0D61  3DDC               	addwfc	log@exponent+1,f
  7557  0D62  0857               	movf	log@x,w
  7558  0D63  00CD               	movwf	eval_poly@x
  7559  0D64  0858               	movf	log@x+1,w
  7560  0D65  00CE               	movwf	eval_poly@x+1
  7561  0D66  0859               	movf	log@x+2,w
  7562  0D67  00CF               	movwf	eval_poly@x+2
  7563  0D68  3000               	movlw	low (log@coeff| (0+32768))
  7564  0D69  00D0               	movwf	eval_poly@d
  7565  0D6A  3090               	movlw	high (log@coeff| (0+32768))
  7566  0D6B  00D1               	movwf	eval_poly@d+1
  7567  0D6C  3008               	movlw	8
  7568  0D6D  00D2               	movwf	eval_poly@n
  7569  0D6E  3000               	movlw	0
  7570  0D6F  00D3               	movwf	eval_poly@n+1
  7571  0D70  318A  227E  318C   	fcall	_eval_poly
  7572  0D73  0020               	movlb	0	; select bank0
  7573  0D74  084D               	movf	?_eval_poly,w
  7574  0D75  00D7               	movwf	log@x
  7575  0D76  084E               	movf	?_eval_poly+1,w
  7576  0D77  00D8               	movwf	log@x+1
  7577  0D78  084F               	movf	?_eval_poly+2,w
  7578  0D79  00D9               	movwf	log@x+2
  7579  0D7A  0857               	movf	log@x,w
  7580  0D7B  00C0               	movwf	___ftadd@f1
  7581  0D7C  0858               	movf	log@x+1,w
  7582  0D7D  00C1               	movwf	___ftadd@f1+1
  7583  0D7E  0859               	movf	log@x+2,w
  7584  0D7F  00C2               	movwf	___ftadd@f1+2
  7585  0D80  3072               	movlw	114
  7586  0D81  00A0               	movwf	___ftmul@f1
  7587  0D82  3031               	movlw	49
  7588  0D83  00A1               	movwf	___ftmul@f1+1
  7589  0D84  303F               	movlw	63
  7590  0D85  00A2               	movwf	___ftmul@f1+2
  7591  0D86  085C               	movf	log@exponent+1,w
  7592  0D87  00F9               	movwf	___awtoft@c+1
  7593  0D88  085B               	movf	log@exponent,w
  7594  0D89  00F8               	movwf	___awtoft@c
  7595  0D8A  3188  202E  318C   	fcall	___awtoft
  7596  0D8D  0878               	movf	?___awtoft,w
  7597  0D8E  0020               	movlb	0	; select bank0
  7598  0D8F  00A3               	movwf	___ftmul@f2
  7599  0D90  0879               	movf	?___awtoft+1,w
  7600  0D91  00A4               	movwf	___ftmul@f2+1
  7601  0D92  087A               	movf	?___awtoft+2,w
  7602  0D93  00A5               	movwf	___ftmul@f2+2
  7603  0D94  318D  25A8  318C   	fcall	___ftmul
  7604  0D97  0020               	movlb	0	; select bank0
  7605  0D98  0820               	movf	?___ftmul,w
  7606  0D99  00C3               	movwf	___ftadd@f2
  7607  0D9A  0821               	movf	?___ftmul+1,w
  7608  0D9B  00C4               	movwf	___ftadd@f2+1
  7609  0D9C  0822               	movf	?___ftmul+2,w
  7610  0D9D  00C5               	movwf	___ftadd@f2+2
  7611  0D9E  3180  2088         	fcall	___ftadd
  7612  0DA0  0020               	movlb	0	; select bank0
  7613  0DA1  0840               	movf	?___ftadd,w
  7614  0DA2  00D7               	movwf	?_log
  7615  0DA3  0841               	movf	?___ftadd+1,w
  7616  0DA4  00D8               	movwf	?_log+1
  7617  0DA5  0842               	movf	?___ftadd+2,w
  7618  0DA6  00D9               	movwf	?_log+2
  7619  0DA7  0008               	return
  7620  0DA8                     __end_of_log:	
  7621                           
  7622                           	psect	text3
  7623  092C                     __ptext3:	
  7624 ;; *************** function _frexp *****************
  7625 ;; Defined at:
  7626 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  value           3    0[COMMON] int 
  7629 ;;  eptr            1    3[COMMON] PTR int 
  7630 ;;		 -> log@exponent(2), 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;		None
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  3    0[COMMON] PTR int 
  7635 ;; Registers used:
  7636 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;Total ram usage:        6 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_log
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function _frexp
  7657  092C                     _frexp:	
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7661  092C  0872               	movf	frexp@value+2,w
  7662  092D  0471               	iorwf	frexp@value+1,w
  7663  092E  0470               	iorwf	frexp@value,w
  7664  092F  1D03               	skipz
  7665  0930  293E               	goto	l2386
  7666  0931  0873               	movf	frexp@eptr,w
  7667  0932  0086               	movwf	6
  7668  0933  0187               	clrf	7
  7669  0934  3000               	movlw	0
  7670  0935  3FC0               	movwi [0]fsr1
  7671  0936  3FC1               	movwi [1]fsr1
  7672  0937  3000               	movlw	0
  7673  0938  00F0               	movwf	?_frexp
  7674  0939  3000               	movlw	0
  7675  093A  00F1               	movwf	?_frexp+1
  7676  093B  3000               	movlw	0
  7677  093C  00F2               	movwf	?_frexp+2
  7678  093D  0008               	return
  7679  093E                     l2386:	
  7680  093E  0872               	movf	frexp@value+2,w
  7681  093F  397F               	andlw	127
  7682  0940  00F4               	movwf	??_frexp
  7683  0941  01F5               	clrf	??_frexp+1
  7684  0942  35F4               	lslf	??_frexp,f
  7685  0943  0DF5               	rlf	??_frexp+1,f
  7686  0944  0873               	movf	frexp@eptr,w
  7687  0945  0086               	movwf	6
  7688  0946  0187               	clrf	7
  7689  0947  0874               	movf	??_frexp,w
  7690  0948  3FC0               	movwi [0]fsr1
  7691  0949  0875               	movf	??_frexp+1,w
  7692  094A  3FC1               	movwi [1]fsr1
  7693  094B  0D71               	rlf	frexp@value+1,w
  7694  094C  0D71               	rlf	frexp@value+1,w
  7695  094D  3901               	andlw	1
  7696  094E  00F4               	movwf	??_frexp
  7697  094F  01F5               	clrf	??_frexp+1
  7698  0950  0873               	movf	frexp@eptr,w
  7699  0951  0086               	movwf	6
  7700  0952  0187               	clrf	7
  7701  0953  0874               	movf	??_frexp,w
  7702  0954  0481               	iorwf	1,f
  7703  0955  3141               	addfsr 1,1
  7704  0956  0875               	movf	??_frexp+1,w
  7705  0957  0481               	iorwf	1,f
  7706  0958  0873               	movf	frexp@eptr,w
  7707  0959  0086               	movwf	6
  7708  095A  0187               	clrf	7
  7709  095B  3082               	movlw	130
  7710  095C  0781               	addwf	1,f
  7711  095D  3141               	addfsr 1,1
  7712  095E  30FF               	movlw	255
  7713  095F  3D81               	addwfc	1,f
  7714  0960  317F               	addfsr 1,-1
  7715  0961  0872               	movf	frexp@value+2,w
  7716  0962  3980               	andlw	-128
  7717  0963  383F               	iorlw	63
  7718  0964  00F2               	movwf	frexp@value+2
  7719  0965  13F1               	bcf	frexp@value+1,7
  7720  0966  0008               	return
  7721  0967                     __end_of_frexp:	
  7722                           
  7723                           	psect	text4
  7724  0A7E                     __ptext4:	
  7725 ;; *************** function _eval_poly *****************
  7726 ;; Defined at:
  7727 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  x               3   45[BANK0 ] PTR int 
  7730 ;;  d               2   48[BANK0 ] PTR const 
  7731 ;;		 -> log@coeff(27), 
  7732 ;;  n               2   50[BANK0 ] int 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  res             3   52[BANK0 ] int 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  3   45[BANK0 ] int 
  7737 ;; Registers used:
  7738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7744 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;Total ram usage:       10 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    2
  7751 ;; This function calls:
  7752 ;;		___ftadd
  7753 ;;		___ftmul
  7754 ;;		___wmul
  7755 ;; This function is called by:
  7756 ;;		_log
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           
  7761                           ;psect for function _eval_poly
  7762  0A7E                     _eval_poly:	
  7763                           
  7764                           ;incstack = 0
  7765                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7766  0A7E  0020               	movlb	0	; select bank0
  7767  0A7F  0853               	movf	eval_poly@n+1,w
  7768  0A80  00F1               	movwf	___wmul@multiplier+1
  7769  0A81  0852               	movf	eval_poly@n,w
  7770  0A82  00F0               	movwf	___wmul@multiplier
  7771  0A83  3003               	movlw	3
  7772  0A84  00F2               	movwf	___wmul@multiplicand
  7773  0A85  3000               	movlw	0
  7774  0A86  00F3               	movwf	___wmul@multiplicand+1
  7775  0A87  3197  27E5  318A   	fcall	___wmul
  7776  0A8A  0020               	movlb	0	; select bank0
  7777  0A8B  0850               	movf	eval_poly@d,w
  7778  0A8C  0770               	addwf	?___wmul,w
  7779  0A8D  0084               	movwf	4
  7780  0A8E  0851               	movf	eval_poly@d+1,w
  7781  0A8F  3D71               	addwfc	?___wmul+1,w
  7782  0A90  0085               	movwf	5
  7783  0A91  3F00               	moviw [0]fsr0
  7784  0A92  00D4               	movwf	eval_poly@res
  7785  0A93  3F01               	moviw [1]fsr0
  7786  0A94  00D5               	movwf	eval_poly@res+1
  7787  0A95  3F02               	moviw [2]fsr0
  7788  0A96                     L1:	
  7789  0A96  00D6               	movwf	eval_poly@res+2
  7790  0A97  0852               	movf	eval_poly@n,w
  7791  0A98  0453               	iorwf	eval_poly@n+1,w
  7792  0A99  1903               	btfsc	3,2
  7793  0A9A  2AD7               	goto	l2404
  7794  0A9B  30FF               	movlw	255
  7795  0A9C  07D2               	addwf	eval_poly@n,f
  7796  0A9D  30FF               	movlw	255
  7797  0A9E  3DD3               	addwfc	eval_poly@n+1,f
  7798  0A9F  0853               	movf	eval_poly@n+1,w
  7799  0AA0  00F1               	movwf	___wmul@multiplier+1
  7800  0AA1  0852               	movf	eval_poly@n,w
  7801  0AA2  00F0               	movwf	___wmul@multiplier
  7802  0AA3  3003               	movlw	3
  7803  0AA4  00F2               	movwf	___wmul@multiplicand
  7804  0AA5  3000               	movlw	0
  7805  0AA6  00F3               	movwf	___wmul@multiplicand+1
  7806  0AA7  3197  27E5  318A   	fcall	___wmul
  7807  0AAA  0020               	movlb	0	; select bank0
  7808  0AAB  0850               	movf	eval_poly@d,w
  7809  0AAC  0770               	addwf	?___wmul,w
  7810  0AAD  0084               	movwf	4
  7811  0AAE  0851               	movf	eval_poly@d+1,w
  7812  0AAF  3D71               	addwfc	?___wmul+1,w
  7813  0AB0  0085               	movwf	5
  7814  0AB1  3F00               	moviw [0]fsr0
  7815  0AB2  00C0               	movwf	___ftadd@f1
  7816  0AB3  3F01               	moviw [1]fsr0
  7817  0AB4  00C1               	movwf	___ftadd@f1+1
  7818  0AB5  3F02               	moviw [2]fsr0
  7819  0AB6  00C2               	movwf	___ftadd@f1+2
  7820  0AB7  0854               	movf	eval_poly@res,w
  7821  0AB8  00A0               	movwf	___ftmul@f1
  7822  0AB9  0855               	movf	eval_poly@res+1,w
  7823  0ABA  00A1               	movwf	___ftmul@f1+1
  7824  0ABB  0856               	movf	eval_poly@res+2,w
  7825  0ABC  00A2               	movwf	___ftmul@f1+2
  7826  0ABD  084D               	movf	eval_poly@x,w
  7827  0ABE  00A3               	movwf	___ftmul@f2
  7828  0ABF  084E               	movf	eval_poly@x+1,w
  7829  0AC0  00A4               	movwf	___ftmul@f2+1
  7830  0AC1  084F               	movf	eval_poly@x+2,w
  7831  0AC2  00A5               	movwf	___ftmul@f2+2
  7832  0AC3  318D  25A8  318A   	fcall	___ftmul
  7833  0AC6  0020               	movlb	0	; select bank0
  7834  0AC7  0820               	movf	?___ftmul,w
  7835  0AC8  00C3               	movwf	___ftadd@f2
  7836  0AC9  0821               	movf	?___ftmul+1,w
  7837  0ACA  00C4               	movwf	___ftadd@f2+1
  7838  0ACB  0822               	movf	?___ftmul+2,w
  7839  0ACC  00C5               	movwf	___ftadd@f2+2
  7840  0ACD  3180  2088  318A   	fcall	___ftadd
  7841  0AD0  0020               	movlb	0	; select bank0
  7842  0AD1  0840               	movf	?___ftadd,w
  7843  0AD2  00D4               	movwf	eval_poly@res
  7844  0AD3  0841               	movf	?___ftadd+1,w
  7845  0AD4  00D5               	movwf	eval_poly@res+1
  7846  0AD5  0842               	movf	?___ftadd+2,w
  7847  0AD6  2A96               	goto	L1
  7848  0AD7                     l2404:	
  7849  0AD7  0854               	movf	eval_poly@res,w
  7850  0AD8  00CD               	movwf	?_eval_poly
  7851  0AD9  0855               	movf	eval_poly@res+1,w
  7852  0ADA  00CE               	movwf	?_eval_poly+1
  7853  0ADB  0856               	movf	eval_poly@res+2,w
  7854  0ADC  00CF               	movwf	?_eval_poly+2
  7855  0ADD  0008               	return
  7856  0ADE                     __end_of_eval_poly:	
  7857                           
  7858                           	psect	text5
  7859  0DA8                     __ptext5:	
  7860 ;; *************** function ___ftmul *****************
  7861 ;; Defined at:
  7862 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  f1              3    0[BANK0 ] float 
  7865 ;;  f2              3    3[BANK0 ] float 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7868 ;;  sign            1   15[BANK0 ] unsigned char 
  7869 ;;  cntr            1   14[BANK0 ] unsigned char 
  7870 ;;  exp             1   10[BANK0 ] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  3    0[BANK0 ] float 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, pclath, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;Total ram usage:       16 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    1
  7887 ;; This function calls:
  7888 ;;		___ftpack
  7889 ;; This function is called by:
  7890 ;;		_tempCalc
  7891 ;;		_log
  7892 ;;		_eval_poly
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           
  7897                           ;psect for function ___ftmul
  7898  0DA8                     ___ftmul:	
  7899                           
  7900                           ;incstack = 0
  7901                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7902  0DA8  0020               	movlb	0	; select bank0
  7903  0DA9  0820               	movf	___ftmul@f1,w
  7904  0DAA  00A6               	movwf	??___ftmul
  7905  0DAB  0821               	movf	___ftmul@f1+1,w
  7906  0DAC  00A7               	movwf	??___ftmul+1
  7907  0DAD  0822               	movf	___ftmul@f1+2,w
  7908  0DAE  00A8               	movwf	??___ftmul+2
  7909  0DAF  1003               	clrc
  7910  0DB0  0D27               	rlf	??___ftmul+1,w
  7911  0DB1  0D28               	rlf	??___ftmul+2,w
  7912  0DB2  00A9               	movwf	??___ftmul+3
  7913  0DB3  0829               	movf	??___ftmul+3,w
  7914  0DB4  00AA               	movwf	___ftmul@exp
  7915  0DB5  082A               	movf	___ftmul@exp,w
  7916  0DB6  1D03               	btfss	3,2
  7917  0DB7  2DBF               	goto	l2190
  7918  0DB8  3000               	movlw	0
  7919  0DB9  00A0               	movwf	?___ftmul
  7920  0DBA  3000               	movlw	0
  7921  0DBB  00A1               	movwf	?___ftmul+1
  7922  0DBC  3000               	movlw	0
  7923  0DBD  00A2               	movwf	?___ftmul+2
  7924  0DBE  0008               	return
  7925  0DBF                     l2190:	
  7926  0DBF  0823               	movf	___ftmul@f2,w
  7927  0DC0  00A6               	movwf	??___ftmul
  7928  0DC1  0824               	movf	___ftmul@f2+1,w
  7929  0DC2  00A7               	movwf	??___ftmul+1
  7930  0DC3  0825               	movf	___ftmul@f2+2,w
  7931  0DC4  00A8               	movwf	??___ftmul+2
  7932  0DC5  1003               	clrc
  7933  0DC6  0D27               	rlf	??___ftmul+1,w
  7934  0DC7  0D28               	rlf	??___ftmul+2,w
  7935  0DC8  00A9               	movwf	??___ftmul+3
  7936  0DC9  0829               	movf	??___ftmul+3,w
  7937  0DCA  00AF               	movwf	___ftmul@sign
  7938  0DCB  082F               	movf	___ftmul@sign,w
  7939  0DCC  1D03               	btfss	3,2
  7940  0DCD  2DD5               	goto	l2196
  7941  0DCE  3000               	movlw	0
  7942  0DCF  00A0               	movwf	?___ftmul
  7943  0DD0  3000               	movlw	0
  7944  0DD1  00A1               	movwf	?___ftmul+1
  7945  0DD2  3000               	movlw	0
  7946  0DD3  00A2               	movwf	?___ftmul+2
  7947  0DD4  0008               	return
  7948  0DD5                     l2196:	
  7949  0DD5  082F               	movf	___ftmul@sign,w
  7950  0DD6  3E7B               	addlw	123
  7951  0DD7  00A6               	movwf	??___ftmul
  7952  0DD8  0826               	movf	??___ftmul,w
  7953  0DD9  07AA               	addwf	___ftmul@exp,f
  7954  0DDA  0820               	movf	___ftmul@f1,w
  7955  0DDB  00A6               	movwf	??___ftmul
  7956  0DDC  0821               	movf	___ftmul@f1+1,w
  7957  0DDD  00A7               	movwf	??___ftmul+1
  7958  0DDE  0822               	movf	___ftmul@f1+2,w
  7959  0DDF  00A8               	movwf	??___ftmul+2
  7960  0DE0  3010               	movlw	16
  7961  0DE1                     u2275:	
  7962  0DE1  36A8               	lsrf	??___ftmul+2,f
  7963  0DE2  0CA7               	rrf	??___ftmul+1,f
  7964  0DE3  0CA6               	rrf	??___ftmul,f
  7965  0DE4  0B89               	decfsz	9,f
  7966  0DE5  2DE1               	goto	u2275
  7967  0DE6  0826               	movf	??___ftmul,w
  7968  0DE7  00A9               	movwf	??___ftmul+3
  7969  0DE8  0829               	movf	??___ftmul+3,w
  7970  0DE9  00AF               	movwf	___ftmul@sign
  7971  0DEA  0823               	movf	___ftmul@f2,w
  7972  0DEB  00A6               	movwf	??___ftmul
  7973  0DEC  0824               	movf	___ftmul@f2+1,w
  7974  0DED  00A7               	movwf	??___ftmul+1
  7975  0DEE  0825               	movf	___ftmul@f2+2,w
  7976  0DEF  00A8               	movwf	??___ftmul+2
  7977  0DF0  3010               	movlw	16
  7978  0DF1                     u2285:	
  7979  0DF1  36A8               	lsrf	??___ftmul+2,f
  7980  0DF2  0CA7               	rrf	??___ftmul+1,f
  7981  0DF3  0CA6               	rrf	??___ftmul,f
  7982  0DF4  0B89               	decfsz	9,f
  7983  0DF5  2DF1               	goto	u2285
  7984  0DF6  0826               	movf	??___ftmul,w
  7985  0DF7  00A9               	movwf	??___ftmul+3
  7986  0DF8  0829               	movf	??___ftmul+3,w
  7987  0DF9  06AF               	xorwf	___ftmul@sign,f
  7988  0DFA  3080               	movlw	128
  7989  0DFB  00A6               	movwf	??___ftmul
  7990  0DFC  0826               	movf	??___ftmul,w
  7991  0DFD  05AF               	andwf	___ftmul@sign,f
  7992  0DFE  17A1               	bsf	___ftmul@f1+1,7
  7993  0DFF  17A4               	bsf	___ftmul@f2+1,7
  7994  0E00  30FF               	movlw	255
  7995  0E01  05A3               	andwf	___ftmul@f2,f
  7996  0E02  30FF               	movlw	255
  7997  0E03  05A4               	andwf	___ftmul@f2+1,f
  7998  0E04  3000               	movlw	0
  7999  0E05  05A5               	andwf	___ftmul@f2+2,f
  8000  0E06  3000               	movlw	0
  8001  0E07  00AB               	movwf	___ftmul@f3_as_product
  8002  0E08  3000               	movlw	0
  8003  0E09  00AC               	movwf	___ftmul@f3_as_product+1
  8004  0E0A  3000               	movlw	0
  8005  0E0B  00AD               	movwf	___ftmul@f3_as_product+2
  8006  0E0C  3007               	movlw	7
  8007  0E0D  00A6               	movwf	??___ftmul
  8008  0E0E  0826               	movf	??___ftmul,w
  8009  0E0F  00AE               	movwf	___ftmul@cntr
  8010  0E10                     l2208:	
  8011  0E10  1C20               	btfss	___ftmul@f1,0
  8012  0E11  2E18               	goto	l2212
  8013  0E12  0823               	movf	___ftmul@f2,w
  8014  0E13  07AB               	addwf	___ftmul@f3_as_product,f
  8015  0E14  0824               	movf	___ftmul@f2+1,w
  8016  0E15  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8017  0E16  0825               	movf	___ftmul@f2+2,w
  8018  0E17  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8019  0E18                     l2212:	
  8020  0E18  3001               	movlw	1
  8021  0E19                     u2305:	
  8022  0E19  36A2               	lsrf	___ftmul@f1+2,f
  8023  0E1A  0CA1               	rrf	___ftmul@f1+1,f
  8024  0E1B  0CA0               	rrf	___ftmul@f1,f
  8025  0E1C  0B89               	decfsz	9,f
  8026  0E1D  2E19               	goto	u2305
  8027  0E1E  3001               	movlw	1
  8028  0E1F                     u2315:	
  8029  0E1F  35A3               	lslf	___ftmul@f2,f
  8030  0E20  0DA4               	rlf	___ftmul@f2+1,f
  8031  0E21  0DA5               	rlf	___ftmul@f2+2,f
  8032  0E22  0B89               	decfsz	9,f
  8033  0E23  2E1F               	goto	u2315
  8034  0E24  3001               	movlw	1
  8035  0E25  02AE               	subwf	___ftmul@cntr,f
  8036  0E26  1D03               	btfss	3,2
  8037  0E27  2E10               	goto	l2208
  8038  0E28  3009               	movlw	9
  8039  0E29  00A6               	movwf	??___ftmul
  8040  0E2A  0826               	movf	??___ftmul,w
  8041  0E2B  00AE               	movwf	___ftmul@cntr
  8042  0E2C                     l2220:	
  8043  0E2C  1C20               	btfss	___ftmul@f1,0
  8044  0E2D  2E34               	goto	l2224
  8045  0E2E  0823               	movf	___ftmul@f2,w
  8046  0E2F  07AB               	addwf	___ftmul@f3_as_product,f
  8047  0E30  0824               	movf	___ftmul@f2+1,w
  8048  0E31  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8049  0E32  0825               	movf	___ftmul@f2+2,w
  8050  0E33  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8051  0E34                     l2224:	
  8052  0E34  3001               	movlw	1
  8053  0E35                     u2345:	
  8054  0E35  36A2               	lsrf	___ftmul@f1+2,f
  8055  0E36  0CA1               	rrf	___ftmul@f1+1,f
  8056  0E37  0CA0               	rrf	___ftmul@f1,f
  8057  0E38  0B89               	decfsz	9,f
  8058  0E39  2E35               	goto	u2345
  8059  0E3A  3001               	movlw	1
  8060  0E3B                     u2355:	
  8061  0E3B  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8062  0E3C  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8063  0E3D  0CAB               	rrf	___ftmul@f3_as_product,f
  8064  0E3E  0B89               	decfsz	9,f
  8065  0E3F  2E3B               	goto	u2355
  8066  0E40  3001               	movlw	1
  8067  0E41  02AE               	subwf	___ftmul@cntr,f
  8068  0E42  1D03               	btfss	3,2
  8069  0E43  2E2C               	goto	l2220
  8070  0E44  082B               	movf	___ftmul@f3_as_product,w
  8071  0E45  00F0               	movwf	___ftpack@arg
  8072  0E46  082C               	movf	___ftmul@f3_as_product+1,w
  8073  0E47  00F1               	movwf	___ftpack@arg+1
  8074  0E48  082D               	movf	___ftmul@f3_as_product+2,w
  8075  0E49  00F2               	movwf	___ftpack@arg+2
  8076  0E4A  082A               	movf	___ftmul@exp,w
  8077  0E4B  00A6               	movwf	??___ftmul
  8078  0E4C  0826               	movf	??___ftmul,w
  8079  0E4D  00F3               	movwf	___ftpack@exp
  8080  0E4E  082F               	movf	___ftmul@sign,w
  8081  0E4F  00A7               	movwf	??___ftmul+1
  8082  0E50  0827               	movf	??___ftmul+1,w
  8083  0E51  00F4               	movwf	___ftpack@sign
  8084  0E52  318A  22DE         	fcall	___ftpack
  8085  0E54  0870               	movf	?___ftpack,w
  8086  0E55  0020               	movlb	0	; select bank0
  8087  0E56  00A0               	movwf	?___ftmul
  8088  0E57  0871               	movf	?___ftpack+1,w
  8089  0E58  00A1               	movwf	?___ftmul+1
  8090  0E59  0872               	movf	?___ftpack+2,w
  8091  0E5A  00A2               	movwf	?___ftmul+2
  8092  0E5B  0008               	return
  8093  0E5C                     __end_of___ftmul:	
  8094                           
  8095                           	psect	text6
  8096  08F1                     __ptext6:	
  8097 ;; *************** function ___ftge *****************
  8098 ;; Defined at:
  8099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  ff1             3    0[COMMON] float 
  8102 ;;  ff2             3    3[COMMON] float 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;		None               void
  8107 ;; Registers used:
  8108 ;;		wreg, status,2, status,0
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;Total ram usage:        9 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_log
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function ___ftge
  8129  08F1                     ___ftge:	
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8133  08F1  1FF2               	btfss	___ftge@ff1+2,7
  8134  08F2  2907               	goto	l2362
  8135  08F3  0970               	comf	___ftge@ff1,w
  8136  08F4  00F6               	movwf	??___ftge
  8137  08F5  0971               	comf	___ftge@ff1+1,w
  8138  08F6  00F7               	movwf	??___ftge+1
  8139  08F7  0972               	comf	___ftge@ff1+2,w
  8140  08F8  00F8               	movwf	??___ftge+2
  8141  08F9  0AF6               	incf	??___ftge,f
  8142  08FA  1903               	skipnz
  8143  08FB  0AF7               	incf	??___ftge+1,f
  8144  08FC  1903               	skipnz
  8145  08FD  0AF8               	incf	??___ftge+2,f
  8146  08FE  3000               	movlw	0
  8147  08FF  0776               	addwf	??___ftge,w
  8148  0900  00F0               	movwf	___ftge@ff1
  8149  0901  3000               	movlw	0
  8150  0902  3D77               	addwfc	??___ftge+1,w
  8151  0903  00F1               	movwf	___ftge@ff1+1
  8152  0904  3080               	movlw	128
  8153  0905  3D78               	addwfc	??___ftge+2,w
  8154  0906  00F2               	movwf	___ftge@ff1+2
  8155  0907                     l2362:	
  8156  0907  1FF5               	btfss	___ftge@ff2+2,7
  8157  0908  291D               	goto	l2366
  8158  0909  0973               	comf	___ftge@ff2,w
  8159  090A  00F6               	movwf	??___ftge
  8160  090B  0974               	comf	___ftge@ff2+1,w
  8161  090C  00F7               	movwf	??___ftge+1
  8162  090D  0975               	comf	___ftge@ff2+2,w
  8163  090E  00F8               	movwf	??___ftge+2
  8164  090F  0AF6               	incf	??___ftge,f
  8165  0910  1903               	skipnz
  8166  0911  0AF7               	incf	??___ftge+1,f
  8167  0912  1903               	skipnz
  8168  0913  0AF8               	incf	??___ftge+2,f
  8169  0914  3000               	movlw	0
  8170  0915  0776               	addwf	??___ftge,w
  8171  0916  00F3               	movwf	___ftge@ff2
  8172  0917  3000               	movlw	0
  8173  0918  3D77               	addwfc	??___ftge+1,w
  8174  0919  00F4               	movwf	___ftge@ff2+1
  8175  091A  3080               	movlw	128
  8176  091B  3D78               	addwfc	??___ftge+2,w
  8177  091C  00F5               	movwf	___ftge@ff2+2
  8178  091D                     l2366:	
  8179  091D  3080               	movlw	128
  8180  091E  06F2               	xorwf	___ftge@ff1+2,f
  8181  091F  3080               	movlw	128
  8182  0920  06F5               	xorwf	___ftge@ff2+2,f
  8183  0921  0875               	movf	___ftge@ff2+2,w
  8184  0922  0272               	subwf	___ftge@ff1+2,w
  8185  0923  1D03               	skipz
  8186  0924  0008               	return
  8187  0925  0874               	movf	___ftge@ff2+1,w
  8188  0926  0271               	subwf	___ftge@ff1+1,w
  8189  0927  1D03               	skipz
  8190  0928  0008               	return
  8191  0929  0873               	movf	___ftge@ff2,w
  8192  092A  0270               	subwf	___ftge@ff1,w
  8193  092B  0008               	return
  8194  092C                     __end_of___ftge:	
  8195                           
  8196                           	psect	text7
  8197  082E                     __ptext7:	
  8198 ;; *************** function ___awtoft *****************
  8199 ;; Defined at:
  8200 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  c               2    8[COMMON] int 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  sign            1   13[COMMON] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  3    8[COMMON] float 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0, pclath, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;Total ram usage:        6 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    1
  8221 ;; This function calls:
  8222 ;;		___ftpack
  8223 ;; This function is called by:
  8224 ;;		_tempCalc
  8225 ;;		_log
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function ___awtoft
  8231  082E                     ___awtoft:	
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8235  082E  01FD               	clrf	___awtoft@sign
  8236  082F  1FF9               	btfss	___awtoft@c+1,7
  8237  0830  2838               	goto	l2354
  8238  0831  09F8               	comf	___awtoft@c,f
  8239  0832  09F9               	comf	___awtoft@c+1,f
  8240  0833  0AF8               	incf	___awtoft@c,f
  8241  0834  1903               	skipnz
  8242  0835  0AF9               	incf	___awtoft@c+1,f
  8243  0836  01FD               	clrf	___awtoft@sign
  8244  0837  0AFD               	incf	___awtoft@sign,f
  8245  0838                     l2354:	
  8246  0838  0878               	movf	___awtoft@c,w
  8247  0839  00F0               	movwf	___ftpack@arg
  8248  083A  0879               	movf	___awtoft@c+1,w
  8249  083B  00F1               	movwf	___ftpack@arg+1
  8250  083C  01F2               	clrf	___ftpack@arg+2
  8251  083D  308E               	movlw	142
  8252  083E  00FB               	movwf	??___awtoft
  8253  083F  087B               	movf	??___awtoft,w
  8254  0840  00F3               	movwf	___ftpack@exp
  8255  0841  087D               	movf	___awtoft@sign,w
  8256  0842  00FC               	movwf	??___awtoft+1
  8257  0843  087C               	movf	??___awtoft+1,w
  8258  0844  00F4               	movwf	___ftpack@sign
  8259  0845  318A  22DE         	fcall	___ftpack
  8260  0847  0870               	movf	?___ftpack,w
  8261  0848  00F8               	movwf	?___awtoft
  8262  0849  0871               	movf	?___ftpack+1,w
  8263  084A  00F9               	movwf	?___awtoft+1
  8264  084B  0872               	movf	?___ftpack+2,w
  8265  084C  00FA               	movwf	?___awtoft+2
  8266  084D  0008               	return
  8267  084E                     __end_of___awtoft:	
  8268                           
  8269                           	psect	text8
  8270  0B42                     __ptext8:	
  8271 ;; *************** function ___fttol *****************
  8272 ;; Defined at:
  8273 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  f1              3    0[COMMON] float 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  lval            4    9[COMMON] unsigned long 
  8278 ;;  exp1            1   13[COMMON] unsigned char 
  8279 ;;  sign1           1    8[COMMON] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  4    0[COMMON] long 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:       14 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_tempCalc
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function ___fttol
  8304  0B42                     ___fttol:	
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8308  0B42  0870               	movf	___fttol@f1,w
  8309  0B43  00F4               	movwf	??___fttol
  8310  0B44  0871               	movf	___fttol@f1+1,w
  8311  0B45  00F5               	movwf	??___fttol+1
  8312  0B46  0872               	movf	___fttol@f1+2,w
  8313  0B47  00F6               	movwf	??___fttol+2
  8314  0B48  1003               	clrc
  8315  0B49  0D75               	rlf	??___fttol+1,w
  8316  0B4A  0D76               	rlf	??___fttol+2,w
  8317  0B4B  00F7               	movwf	??___fttol+3
  8318  0B4C  0877               	movf	??___fttol+3,w
  8319  0B4D  00FD               	movwf	___fttol@exp1
  8320  0B4E  087D               	movf	___fttol@exp1,w
  8321  0B4F  1D03               	btfss	3,2
  8322  0B50  2B5A               	goto	l2762
  8323  0B51  3000               	movlw	0
  8324  0B52  00F3               	movwf	?___fttol+3
  8325  0B53  3000               	movlw	0
  8326  0B54  00F2               	movwf	?___fttol+2
  8327  0B55  3000               	movlw	0
  8328  0B56  00F1               	movwf	?___fttol+1
  8329  0B57  3000               	movlw	0
  8330  0B58  00F0               	movwf	?___fttol
  8331  0B59  0008               	return
  8332  0B5A                     l2762:	
  8333  0B5A  0870               	movf	___fttol@f1,w
  8334  0B5B  00F4               	movwf	??___fttol
  8335  0B5C  0871               	movf	___fttol@f1+1,w
  8336  0B5D  00F5               	movwf	??___fttol+1
  8337  0B5E  0872               	movf	___fttol@f1+2,w
  8338  0B5F  00F6               	movwf	??___fttol+2
  8339  0B60  3017               	movlw	23
  8340  0B61                     u3085:	
  8341  0B61  36F6               	lsrf	??___fttol+2,f
  8342  0B62  0CF5               	rrf	??___fttol+1,f
  8343  0B63  0CF4               	rrf	??___fttol,f
  8344  0B64  0B89               	decfsz	9,f
  8345  0B65  2B61               	goto	u3085
  8346  0B66  0874               	movf	??___fttol,w
  8347  0B67  00F7               	movwf	??___fttol+3
  8348  0B68  0877               	movf	??___fttol+3,w
  8349  0B69  00F8               	movwf	___fttol@sign1
  8350  0B6A  17F1               	bsf	___fttol@f1+1,7
  8351  0B6B  30FF               	movlw	255
  8352  0B6C  05F0               	andwf	___fttol@f1,f
  8353  0B6D  30FF               	movlw	255
  8354  0B6E  05F1               	andwf	___fttol@f1+1,f
  8355  0B6F  3000               	movlw	0
  8356  0B70  05F2               	andwf	___fttol@f1+2,f
  8357  0B71  0870               	movf	___fttol@f1,w
  8358  0B72  00F9               	movwf	___fttol@lval
  8359  0B73  0871               	movf	___fttol@f1+1,w
  8360  0B74  00FA               	movwf	___fttol@lval+1
  8361  0B75  0872               	movf	___fttol@f1+2,w
  8362  0B76  00FB               	movwf	___fttol@lval+2
  8363  0B77  01FC               	clrf	___fttol@lval+3
  8364  0B78  308E               	movlw	142
  8365  0B79  02FD               	subwf	___fttol@exp1,f
  8366  0B7A  1FFD               	btfss	___fttol@exp1,7
  8367  0B7B  2B98               	goto	l2782
  8368  0B7C  087D               	movf	___fttol@exp1,w
  8369  0B7D  3A80               	xorlw	128
  8370  0B7E  3E8F               	addlw	143
  8371  0B7F  1803               	skipnc
  8372  0B80  2B8A               	goto	l2780
  8373  0B81  3000               	movlw	0
  8374  0B82  00F3               	movwf	?___fttol+3
  8375  0B83  3000               	movlw	0
  8376  0B84  00F2               	movwf	?___fttol+2
  8377  0B85  3000               	movlw	0
  8378  0B86  00F1               	movwf	?___fttol+1
  8379  0B87  3000               	movlw	0
  8380  0B88  00F0               	movwf	?___fttol
  8381  0B89  0008               	return
  8382  0B8A                     l2780:	
  8383  0B8A  3001               	movlw	1
  8384  0B8B                     u3115:	
  8385  0B8B  36FC               	lsrf	___fttol@lval+3,f
  8386  0B8C  0CFB               	rrf	___fttol@lval+2,f
  8387  0B8D  0CFA               	rrf	___fttol@lval+1,f
  8388  0B8E  0CF9               	rrf	___fttol@lval,f
  8389  0B8F  0B89               	decfsz	9,f
  8390  0B90  2B8B               	goto	u3115
  8391  0B91  3001               	movlw	1
  8392  0B92  00F4               	movwf	??___fttol
  8393  0B93  0874               	movf	??___fttol,w
  8394  0B94  07FD               	addwf	___fttol@exp1,f
  8395  0B95  1903               	btfsc	3,2
  8396  0B96  2BB1               	goto	l2790
  8397  0B97  2B8A               	goto	l2780
  8398  0B98                     l2782:	
  8399  0B98  3018               	movlw	24
  8400  0B99  027D               	subwf	___fttol@exp1,w
  8401  0B9A  1C03               	skipc
  8402  0B9B  2BAE               	goto	l764
  8403  0B9C  3000               	movlw	0
  8404  0B9D  00F3               	movwf	?___fttol+3
  8405  0B9E  3000               	movlw	0
  8406  0B9F  00F2               	movwf	?___fttol+2
  8407  0BA0  3000               	movlw	0
  8408  0BA1  00F1               	movwf	?___fttol+1
  8409  0BA2  3000               	movlw	0
  8410  0BA3  00F0               	movwf	?___fttol
  8411  0BA4  0008               	return
  8412  0BA5                     l2788:	
  8413  0BA5  3001               	movlw	1
  8414  0BA6                     u3145:	
  8415  0BA6  35F9               	lslf	___fttol@lval,f
  8416  0BA7  0DFA               	rlf	___fttol@lval+1,f
  8417  0BA8  0DFB               	rlf	___fttol@lval+2,f
  8418  0BA9  0DFC               	rlf	___fttol@lval+3,f
  8419  0BAA  0B89               	decfsz	9,f
  8420  0BAB  2BA6               	goto	u3145
  8421  0BAC  3001               	movlw	1
  8422  0BAD  02FD               	subwf	___fttol@exp1,f
  8423  0BAE                     l764:	
  8424  0BAE  087D               	movf	___fttol@exp1,w
  8425  0BAF  1D03               	btfss	3,2
  8426  0BB0  2BA5               	goto	l2788
  8427  0BB1                     l2790:	
  8428  0BB1  0878               	movf	___fttol@sign1,w
  8429  0BB2  1903               	btfsc	3,2
  8430  0BB3  2BBF               	goto	l2794
  8431  0BB4  09F9               	comf	___fttol@lval,f
  8432  0BB5  09FA               	comf	___fttol@lval+1,f
  8433  0BB6  09FB               	comf	___fttol@lval+2,f
  8434  0BB7  09FC               	comf	___fttol@lval+3,f
  8435  0BB8  0AF9               	incf	___fttol@lval,f
  8436  0BB9  1903               	skipnz
  8437  0BBA  0AFA               	incf	___fttol@lval+1,f
  8438  0BBB  1903               	skipnz
  8439  0BBC  0AFB               	incf	___fttol@lval+2,f
  8440  0BBD  1903               	skipnz
  8441  0BBE  0AFC               	incf	___fttol@lval+3,f
  8442  0BBF                     l2794:	
  8443  0BBF  087C               	movf	___fttol@lval+3,w
  8444  0BC0  00F3               	movwf	?___fttol+3
  8445  0BC1  087B               	movf	___fttol@lval+2,w
  8446  0BC2  00F2               	movwf	?___fttol+2
  8447  0BC3  087A               	movf	___fttol@lval+1,w
  8448  0BC4  00F1               	movwf	?___fttol+1
  8449  0BC5  0879               	movf	___fttol@lval,w
  8450  0BC6  00F0               	movwf	?___fttol
  8451  0BC7  0008               	return
  8452  0BC8                     __end_of___fttol:	
  8453                           
  8454                           	psect	text9
  8455  0810                     __ptext9:	
  8456 ;; *************** function ___ftsub *****************
  8457 ;; Defined at:
  8458 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  f2              3   45[BANK0 ] float 
  8461 ;;  f1              3   48[BANK0 ] float 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  3   45[BANK0 ] float 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, pclath, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8473 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;Total ram usage:        6 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    2
  8480 ;; This function calls:
  8481 ;;		___ftadd
  8482 ;; This function is called by:
  8483 ;;		_tempCalc
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           
  8488                           ;psect for function ___ftsub
  8489  0810                     ___ftsub:	
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8493  0810  0020               	movlb	0	; select bank0
  8494  0811  084F               	movf	___ftsub@f2+2,w
  8495  0812  044E               	iorwf	___ftsub@f2+1,w
  8496  0813  044D               	iorwf	___ftsub@f2,w
  8497  0814  1903               	skipnz
  8498  0815  2818               	goto	l2752
  8499  0816  3080               	movlw	128
  8500  0817  06CF               	xorwf	___ftsub@f2+2,f
  8501  0818                     l2752:	
  8502  0818  0850               	movf	___ftsub@f1,w
  8503  0819  00C0               	movwf	___ftadd@f1
  8504  081A  0851               	movf	___ftsub@f1+1,w
  8505  081B  00C1               	movwf	___ftadd@f1+1
  8506  081C  0852               	movf	___ftsub@f1+2,w
  8507  081D  00C2               	movwf	___ftadd@f1+2
  8508  081E  084D               	movf	___ftsub@f2,w
  8509  081F  00C3               	movwf	___ftadd@f2
  8510  0820  084E               	movf	___ftsub@f2+1,w
  8511  0821  00C4               	movwf	___ftadd@f2+1
  8512  0822  084F               	movf	___ftsub@f2+2,w
  8513  0823  00C5               	movwf	___ftadd@f2+2
  8514  0824  3180  2088         	fcall	___ftadd
  8515  0826  0020               	movlb	0	; select bank0
  8516  0827  0840               	movf	?___ftadd,w
  8517  0828  00CD               	movwf	?___ftsub
  8518  0829  0841               	movf	?___ftadd+1,w
  8519  082A  00CE               	movwf	?___ftsub+1
  8520  082B  0842               	movf	?___ftadd+2,w
  8521  082C  00CF               	movwf	?___ftsub+2
  8522  082D  0008               	return
  8523  082E                     __end_of___ftsub:	
  8524                           
  8525                           	psect	text10
  8526  0088                     __ptext10:	
  8527 ;; *************** function ___ftadd *****************
  8528 ;; Defined at:
  8529 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  f1              3   32[BANK0 ] float 
  8532 ;;  f2              3   35[BANK0 ] float 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;  exp1            1   44[BANK0 ] unsigned char 
  8535 ;;  exp2            1   43[BANK0 ] unsigned char 
  8536 ;;  sign            1   42[BANK0 ] unsigned char 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  3   32[BANK0 ] float 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:       13 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    1
  8553 ;; This function calls:
  8554 ;;		___ftpack
  8555 ;; This function is called by:
  8556 ;;		_tempCalc
  8557 ;;		___ftsub
  8558 ;;		_log
  8559 ;;		_eval_poly
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function ___ftadd
  8565  0088                     ___ftadd:	
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8569  0088  0020               	movlb	0	; select bank0
  8570  0089  0840               	movf	___ftadd@f1,w
  8571  008A  00C6               	movwf	??___ftadd
  8572  008B  0841               	movf	___ftadd@f1+1,w
  8573  008C  00C7               	movwf	??___ftadd+1
  8574  008D  0842               	movf	___ftadd@f1+2,w
  8575  008E  00C8               	movwf	??___ftadd+2
  8576  008F  1003               	clrc
  8577  0090  0D47               	rlf	??___ftadd+1,w
  8578  0091  0D48               	rlf	??___ftadd+2,w
  8579  0092  00C9               	movwf	??___ftadd+3
  8580  0093  0849               	movf	??___ftadd+3,w
  8581  0094  00CC               	movwf	___ftadd@exp1
  8582  0095  0843               	movf	___ftadd@f2,w
  8583  0096  00C6               	movwf	??___ftadd
  8584  0097  0844               	movf	___ftadd@f2+1,w
  8585  0098  00C7               	movwf	??___ftadd+1
  8586  0099  0845               	movf	___ftadd@f2+2,w
  8587  009A  00C8               	movwf	??___ftadd+2
  8588  009B  1003               	clrc
  8589  009C  0D47               	rlf	??___ftadd+1,w
  8590  009D  0D48               	rlf	??___ftadd+2,w
  8591  009E  00C9               	movwf	??___ftadd+3
  8592  009F  0849               	movf	??___ftadd+3,w
  8593  00A0  00CB               	movwf	___ftadd@exp2
  8594  00A1  084C               	movf	___ftadd@exp1,w
  8595  00A2  1903               	btfsc	3,2
  8596  00A3  28B0               	goto	l2120
  8597  00A4  084B               	movf	___ftadd@exp2,w
  8598  00A5  024C               	subwf	___ftadd@exp1,w
  8599  00A6  1803               	skipnc
  8600  00A7  28B7               	goto	l2124
  8601  00A8  034C               	decf	___ftadd@exp1,w
  8602  00A9  3AFF               	xorlw	255
  8603  00AA  074B               	addwf	___ftadd@exp2,w
  8604  00AB  00C6               	movwf	??___ftadd
  8605  00AC  3019               	movlw	25
  8606  00AD  0246               	subwf	??___ftadd,w
  8607  00AE  1C03               	skipc
  8608  00AF  28B7               	goto	l2124
  8609  00B0                     l2120:	
  8610  00B0  0843               	movf	___ftadd@f2,w
  8611  00B1  00C0               	movwf	?___ftadd
  8612  00B2  0844               	movf	___ftadd@f2+1,w
  8613  00B3  00C1               	movwf	?___ftadd+1
  8614  00B4  0845               	movf	___ftadd@f2+2,w
  8615  00B5  00C2               	movwf	?___ftadd+2
  8616  00B6  0008               	return
  8617  00B7                     l2124:	
  8618  00B7  084B               	movf	___ftadd@exp2,w
  8619  00B8  1903               	btfsc	3,2
  8620  00B9  0008               	return
  8621  00BA  084C               	movf	___ftadd@exp1,w
  8622  00BB  024B               	subwf	___ftadd@exp2,w
  8623  00BC  1803               	skipnc
  8624  00BD  28C6               	goto	l2130
  8625  00BE  034B               	decf	___ftadd@exp2,w
  8626  00BF  3AFF               	xorlw	255
  8627  00C0  074C               	addwf	___ftadd@exp1,w
  8628  00C1  00C6               	movwf	??___ftadd
  8629  00C2  3019               	movlw	25
  8630  00C3  0246               	subwf	??___ftadd,w
  8631  00C4  1803               	btfsc	3,0
  8632  00C5  0008               	return
  8633  00C6                     l2130:	
  8634  00C6  3006               	movlw	6
  8635  00C7  00C6               	movwf	??___ftadd
  8636  00C8  0846               	movf	??___ftadd,w
  8637  00C9  00CA               	movwf	___ftadd@sign
  8638  00CA  1BC2               	btfsc	___ftadd@f1+2,7
  8639  00CB  17CA               	bsf	___ftadd@sign,7
  8640  00CC  1BC5               	btfsc	___ftadd@f2+2,7
  8641  00CD  174A               	bsf	___ftadd@sign,6
  8642  00CE  17C1               	bsf	___ftadd@f1+1,7
  8643  00CF  30FF               	movlw	255
  8644  00D0  05C0               	andwf	___ftadd@f1,f
  8645  00D1  30FF               	movlw	255
  8646  00D2  05C1               	andwf	___ftadd@f1+1,f
  8647  00D3  3000               	movlw	0
  8648  00D4  05C2               	andwf	___ftadd@f1+2,f
  8649  00D5  17C4               	bsf	___ftadd@f2+1,7
  8650  00D6  30FF               	movlw	255
  8651  00D7  05C3               	andwf	___ftadd@f2,f
  8652  00D8  30FF               	movlw	255
  8653  00D9  05C4               	andwf	___ftadd@f2+1,f
  8654  00DA  3000               	movlw	0
  8655  00DB  05C5               	andwf	___ftadd@f2+2,f
  8656  00DC  084B               	movf	___ftadd@exp2,w
  8657  00DD  024C               	subwf	___ftadd@exp1,w
  8658  00DE  1803               	skipnc
  8659  00DF  2902               	goto	l2152
  8660  00E0                     l2142:	
  8661  00E0  3001               	movlw	1
  8662  00E1                     u2115:	
  8663  00E1  35C3               	lslf	___ftadd@f2,f
  8664  00E2  0DC4               	rlf	___ftadd@f2+1,f
  8665  00E3  0DC5               	rlf	___ftadd@f2+2,f
  8666  00E4  0B89               	decfsz	9,f
  8667  00E5  28E1               	goto	u2115
  8668  00E6  3001               	movlw	1
  8669  00E7  02CB               	subwf	___ftadd@exp2,f
  8670  00E8  084B               	movf	___ftadd@exp2,w
  8671  00E9  064C               	xorwf	___ftadd@exp1,w
  8672  00EA  1903               	skipnz
  8673  00EB  28FD               	goto	l2150
  8674  00EC  3001               	movlw	1
  8675  00ED  02CA               	subwf	___ftadd@sign,f
  8676  00EE  084A               	movf	___ftadd@sign,w
  8677  00EF  3907               	andlw	7
  8678  00F0  1903               	btfsc	3,2
  8679  00F1  28FD               	goto	l2150
  8680  00F2  28E0               	goto	l2142
  8681  00F3                     l2148:	
  8682  00F3  3001               	movlw	1
  8683  00F4                     u2145:	
  8684  00F4  36C2               	lsrf	___ftadd@f1+2,f
  8685  00F5  0CC1               	rrf	___ftadd@f1+1,f
  8686  00F6  0CC0               	rrf	___ftadd@f1,f
  8687  00F7  0B89               	decfsz	9,f
  8688  00F8  28F4               	goto	u2145
  8689  00F9  3001               	movlw	1
  8690  00FA  00C6               	movwf	??___ftadd
  8691  00FB  0846               	movf	??___ftadd,w
  8692  00FC  07CC               	addwf	___ftadd@exp1,f
  8693  00FD                     l2150:	
  8694  00FD  084C               	movf	___ftadd@exp1,w
  8695  00FE  064B               	xorwf	___ftadd@exp2,w
  8696  00FF  1903               	btfsc	3,2
  8697  0100  2927               	goto	l704
  8698  0101  28F3               	goto	l2148
  8699  0102                     l2152:	
  8700  0102  084C               	movf	___ftadd@exp1,w
  8701  0103  024B               	subwf	___ftadd@exp2,w
  8702  0104  1803               	skipnc
  8703  0105  2927               	goto	l704
  8704  0106                     l2154:	
  8705  0106  3001               	movlw	1
  8706  0107                     u2175:	
  8707  0107  35C0               	lslf	___ftadd@f1,f
  8708  0108  0DC1               	rlf	___ftadd@f1+1,f
  8709  0109  0DC2               	rlf	___ftadd@f1+2,f
  8710  010A  0B89               	decfsz	9,f
  8711  010B  2907               	goto	u2175
  8712  010C  3001               	movlw	1
  8713  010D  02CC               	subwf	___ftadd@exp1,f
  8714  010E  084B               	movf	___ftadd@exp2,w
  8715  010F  064C               	xorwf	___ftadd@exp1,w
  8716  0110  1903               	skipnz
  8717  0111  2923               	goto	l2162
  8718  0112  3001               	movlw	1
  8719  0113  02CA               	subwf	___ftadd@sign,f
  8720  0114  084A               	movf	___ftadd@sign,w
  8721  0115  3907               	andlw	7
  8722  0116  1903               	btfsc	3,2
  8723  0117  2923               	goto	l2162
  8724  0118  2906               	goto	l2154
  8725  0119                     l2160:	
  8726  0119  3001               	movlw	1
  8727  011A                     u2205:	
  8728  011A  36C5               	lsrf	___ftadd@f2+2,f
  8729  011B  0CC4               	rrf	___ftadd@f2+1,f
  8730  011C  0CC3               	rrf	___ftadd@f2,f
  8731  011D  0B89               	decfsz	9,f
  8732  011E  291A               	goto	u2205
  8733  011F  3001               	movlw	1
  8734  0120  00C6               	movwf	??___ftadd
  8735  0121  0846               	movf	??___ftadd,w
  8736  0122  07CB               	addwf	___ftadd@exp2,f
  8737  0123                     l2162:	
  8738  0123  084C               	movf	___ftadd@exp1,w
  8739  0124  064B               	xorwf	___ftadd@exp2,w
  8740  0125  1D03               	skipz
  8741  0126  2919               	goto	l2160
  8742  0127                     l704:	
  8743  0127  1FCA               	btfss	___ftadd@sign,7
  8744  0128  2939               	goto	l2166
  8745  0129  30FF               	movlw	255
  8746  012A  06C0               	xorwf	___ftadd@f1,f
  8747  012B  30FF               	movlw	255
  8748  012C  06C1               	xorwf	___ftadd@f1+1,f
  8749  012D  30FF               	movlw	255
  8750  012E  06C2               	xorwf	___ftadd@f1+2,f
  8751  012F  3001               	movlw	1
  8752  0130  07C0               	addwf	___ftadd@f1,f
  8753  0131  3000               	movlw	0
  8754  0132  1803               	skipnc
  8755  0133  3001               	movlw	1
  8756  0134  07C1               	addwf	___ftadd@f1+1,f
  8757  0135  3000               	movlw	0
  8758  0136  1803               	skipnc
  8759  0137  3001               	movlw	1
  8760  0138  07C2               	addwf	___ftadd@f1+2,f
  8761  0139                     l2166:	
  8762  0139  1F4A               	btfss	___ftadd@sign,6
  8763  013A  294B               	goto	l2170
  8764  013B  30FF               	movlw	255
  8765  013C  06C3               	xorwf	___ftadd@f2,f
  8766  013D  30FF               	movlw	255
  8767  013E  06C4               	xorwf	___ftadd@f2+1,f
  8768  013F  30FF               	movlw	255
  8769  0140  06C5               	xorwf	___ftadd@f2+2,f
  8770  0141  3001               	movlw	1
  8771  0142  07C3               	addwf	___ftadd@f2,f
  8772  0143  3000               	movlw	0
  8773  0144  1803               	skipnc
  8774  0145  3001               	movlw	1
  8775  0146  07C4               	addwf	___ftadd@f2+1,f
  8776  0147  3000               	movlw	0
  8777  0148  1803               	skipnc
  8778  0149  3001               	movlw	1
  8779  014A  07C5               	addwf	___ftadd@f2+2,f
  8780  014B                     l2170:	
  8781  014B  01CA               	clrf	___ftadd@sign
  8782  014C  0840               	movf	___ftadd@f1,w
  8783  014D  07C3               	addwf	___ftadd@f2,f
  8784  014E  0841               	movf	___ftadd@f1+1,w
  8785  014F  3DC4               	addwfc	___ftadd@f2+1,f
  8786  0150  0842               	movf	___ftadd@f1+2,w
  8787  0151  3DC5               	addwfc	___ftadd@f2+2,f
  8788  0152  1FC5               	btfss	___ftadd@f2+2,7
  8789  0153  2966               	goto	l2180
  8790  0154  30FF               	movlw	255
  8791  0155  06C3               	xorwf	___ftadd@f2,f
  8792  0156  30FF               	movlw	255
  8793  0157  06C4               	xorwf	___ftadd@f2+1,f
  8794  0158  30FF               	movlw	255
  8795  0159  06C5               	xorwf	___ftadd@f2+2,f
  8796  015A  3001               	movlw	1
  8797  015B  07C3               	addwf	___ftadd@f2,f
  8798  015C  3000               	movlw	0
  8799  015D  1803               	skipnc
  8800  015E  3001               	movlw	1
  8801  015F  07C4               	addwf	___ftadd@f2+1,f
  8802  0160  3000               	movlw	0
  8803  0161  1803               	skipnc
  8804  0162  3001               	movlw	1
  8805  0163  07C5               	addwf	___ftadd@f2+2,f
  8806  0164  01CA               	clrf	___ftadd@sign
  8807  0165  0ACA               	incf	___ftadd@sign,f
  8808  0166                     l2180:	
  8809  0166  0843               	movf	___ftadd@f2,w
  8810  0167  00F0               	movwf	___ftpack@arg
  8811  0168  0844               	movf	___ftadd@f2+1,w
  8812  0169  00F1               	movwf	___ftpack@arg+1
  8813  016A  0845               	movf	___ftadd@f2+2,w
  8814  016B  00F2               	movwf	___ftpack@arg+2
  8815  016C  084C               	movf	___ftadd@exp1,w
  8816  016D  00C6               	movwf	??___ftadd
  8817  016E  0846               	movf	??___ftadd,w
  8818  016F  00F3               	movwf	___ftpack@exp
  8819  0170  084A               	movf	___ftadd@sign,w
  8820  0171  00C7               	movwf	??___ftadd+1
  8821  0172  0847               	movf	??___ftadd+1,w
  8822  0173  00F4               	movwf	___ftpack@sign
  8823  0174  318A  22DE         	fcall	___ftpack
  8824  0176  0870               	movf	?___ftpack,w
  8825  0177  0020               	movlb	0	; select bank0
  8826  0178  00C0               	movwf	?___ftadd
  8827  0179  0871               	movf	?___ftpack+1,w
  8828  017A  00C1               	movwf	?___ftadd+1
  8829  017B  0872               	movf	?___ftpack+2,w
  8830  017C  00C2               	movwf	?___ftadd+2
  8831  017D  0008               	return
  8832  017E                     __end_of___ftadd:	
  8833                           
  8834                           	psect	text11
  8835  0C4F                     __ptext11:	
  8836 ;; *************** function ___ftdiv *****************
  8837 ;; Defined at:
  8838 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  f2              3   16[BANK0 ] float 
  8841 ;;  f1              3   19[BANK0 ] float 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  f3              3   27[BANK0 ] float 
  8844 ;;  sign            1   31[BANK0 ] unsigned char 
  8845 ;;  exp             1   30[BANK0 ] unsigned char 
  8846 ;;  cntr            1   26[BANK0 ] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  3   16[BANK0 ] float 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0, pclath, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8856 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;Total ram usage:       16 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    1
  8863 ;; This function calls:
  8864 ;;		___ftpack
  8865 ;; This function is called by:
  8866 ;;		_tempCalc
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           
  8871                           ;psect for function ___ftdiv
  8872  0C4F                     ___ftdiv:	
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8876  0C4F  0020               	movlb	0	; select bank0
  8877  0C50  0833               	movf	___ftdiv@f1,w
  8878  0C51  00B6               	movwf	??___ftdiv
  8879  0C52  0834               	movf	___ftdiv@f1+1,w
  8880  0C53  00B7               	movwf	??___ftdiv+1
  8881  0C54  0835               	movf	___ftdiv@f1+2,w
  8882  0C55  00B8               	movwf	??___ftdiv+2
  8883  0C56  1003               	clrc
  8884  0C57  0D37               	rlf	??___ftdiv+1,w
  8885  0C58  0D38               	rlf	??___ftdiv+2,w
  8886  0C59  00B9               	movwf	??___ftdiv+3
  8887  0C5A  0839               	movf	??___ftdiv+3,w
  8888  0C5B  00BE               	movwf	___ftdiv@exp
  8889  0C5C  083E               	movf	___ftdiv@exp,w
  8890  0C5D  1D03               	btfss	3,2
  8891  0C5E  2C66               	goto	l2712
  8892  0C5F  3000               	movlw	0
  8893  0C60  00B0               	movwf	?___ftdiv
  8894  0C61  3000               	movlw	0
  8895  0C62  00B1               	movwf	?___ftdiv+1
  8896  0C63  3000               	movlw	0
  8897  0C64  00B2               	movwf	?___ftdiv+2
  8898  0C65  0008               	return
  8899  0C66                     l2712:	
  8900  0C66  0830               	movf	___ftdiv@f2,w
  8901  0C67  00B6               	movwf	??___ftdiv
  8902  0C68  0831               	movf	___ftdiv@f2+1,w
  8903  0C69  00B7               	movwf	??___ftdiv+1
  8904  0C6A  0832               	movf	___ftdiv@f2+2,w
  8905  0C6B  00B8               	movwf	??___ftdiv+2
  8906  0C6C  1003               	clrc
  8907  0C6D  0D37               	rlf	??___ftdiv+1,w
  8908  0C6E  0D38               	rlf	??___ftdiv+2,w
  8909  0C6F  00B9               	movwf	??___ftdiv+3
  8910  0C70  0839               	movf	??___ftdiv+3,w
  8911  0C71  00BF               	movwf	___ftdiv@sign
  8912  0C72  083F               	movf	___ftdiv@sign,w
  8913  0C73  1D03               	btfss	3,2
  8914  0C74  2C7C               	goto	l2718
  8915  0C75  3000               	movlw	0
  8916  0C76  00B0               	movwf	?___ftdiv
  8917  0C77  3000               	movlw	0
  8918  0C78  00B1               	movwf	?___ftdiv+1
  8919  0C79  3000               	movlw	0
  8920  0C7A  00B2               	movwf	?___ftdiv+2
  8921  0C7B  0008               	return
  8922  0C7C                     l2718:	
  8923  0C7C  3000               	movlw	0
  8924  0C7D  00BB               	movwf	___ftdiv@f3
  8925  0C7E  3000               	movlw	0
  8926  0C7F  00BC               	movwf	___ftdiv@f3+1
  8927  0C80  3000               	movlw	0
  8928  0C81  00BD               	movwf	___ftdiv@f3+2
  8929  0C82  3089               	movlw	137
  8930  0C83  073F               	addwf	___ftdiv@sign,w
  8931  0C84  00B6               	movwf	??___ftdiv
  8932  0C85  0836               	movf	??___ftdiv,w
  8933  0C86  02BE               	subwf	___ftdiv@exp,f
  8934  0C87  0833               	movf	___ftdiv@f1,w
  8935  0C88  00B6               	movwf	??___ftdiv
  8936  0C89  0834               	movf	___ftdiv@f1+1,w
  8937  0C8A  00B7               	movwf	??___ftdiv+1
  8938  0C8B  0835               	movf	___ftdiv@f1+2,w
  8939  0C8C  00B8               	movwf	??___ftdiv+2
  8940  0C8D  3010               	movlw	16
  8941  0C8E                     u3005:	
  8942  0C8E  36B8               	lsrf	??___ftdiv+2,f
  8943  0C8F  0CB7               	rrf	??___ftdiv+1,f
  8944  0C90  0CB6               	rrf	??___ftdiv,f
  8945  0C91  0B89               	decfsz	9,f
  8946  0C92  2C8E               	goto	u3005
  8947  0C93  0836               	movf	??___ftdiv,w
  8948  0C94  00B9               	movwf	??___ftdiv+3
  8949  0C95  0839               	movf	??___ftdiv+3,w
  8950  0C96  00BF               	movwf	___ftdiv@sign
  8951  0C97  0830               	movf	___ftdiv@f2,w
  8952  0C98  00B6               	movwf	??___ftdiv
  8953  0C99  0831               	movf	___ftdiv@f2+1,w
  8954  0C9A  00B7               	movwf	??___ftdiv+1
  8955  0C9B  0832               	movf	___ftdiv@f2+2,w
  8956  0C9C  00B8               	movwf	??___ftdiv+2
  8957  0C9D  3010               	movlw	16
  8958  0C9E                     u3015:	
  8959  0C9E  36B8               	lsrf	??___ftdiv+2,f
  8960  0C9F  0CB7               	rrf	??___ftdiv+1,f
  8961  0CA0  0CB6               	rrf	??___ftdiv,f
  8962  0CA1  0B89               	decfsz	9,f
  8963  0CA2  2C9E               	goto	u3015
  8964  0CA3  0836               	movf	??___ftdiv,w
  8965  0CA4  00B9               	movwf	??___ftdiv+3
  8966  0CA5  0839               	movf	??___ftdiv+3,w
  8967  0CA6  06BF               	xorwf	___ftdiv@sign,f
  8968  0CA7  3080               	movlw	128
  8969  0CA8  00B6               	movwf	??___ftdiv
  8970  0CA9  0836               	movf	??___ftdiv,w
  8971  0CAA  05BF               	andwf	___ftdiv@sign,f
  8972  0CAB  17B4               	bsf	___ftdiv@f1+1,7
  8973  0CAC  30FF               	movlw	255
  8974  0CAD  05B3               	andwf	___ftdiv@f1,f
  8975  0CAE  30FF               	movlw	255
  8976  0CAF  05B4               	andwf	___ftdiv@f1+1,f
  8977  0CB0  3000               	movlw	0
  8978  0CB1  05B5               	andwf	___ftdiv@f1+2,f
  8979  0CB2  17B1               	bsf	___ftdiv@f2+1,7
  8980  0CB3  30FF               	movlw	255
  8981  0CB4  05B0               	andwf	___ftdiv@f2,f
  8982  0CB5  30FF               	movlw	255
  8983  0CB6  05B1               	andwf	___ftdiv@f2+1,f
  8984  0CB7  3000               	movlw	0
  8985  0CB8  05B2               	andwf	___ftdiv@f2+2,f
  8986  0CB9  3018               	movlw	24
  8987  0CBA  00B6               	movwf	??___ftdiv
  8988  0CBB  0836               	movf	??___ftdiv,w
  8989  0CBC  00BA               	movwf	___ftdiv@cntr
  8990  0CBD                     l2732:	
  8991  0CBD  3001               	movlw	1
  8992  0CBE                     u3025:	
  8993  0CBE  35BB               	lslf	___ftdiv@f3,f
  8994  0CBF  0DBC               	rlf	___ftdiv@f3+1,f
  8995  0CC0  0DBD               	rlf	___ftdiv@f3+2,f
  8996  0CC1  0B89               	decfsz	9,f
  8997  0CC2  2CBE               	goto	u3025
  8998  0CC3  0832               	movf	___ftdiv@f2+2,w
  8999  0CC4  0235               	subwf	___ftdiv@f1+2,w
  9000  0CC5  1D03               	skipz
  9001  0CC6  2CCD               	goto	u3035
  9002  0CC7  0831               	movf	___ftdiv@f2+1,w
  9003  0CC8  0234               	subwf	___ftdiv@f1+1,w
  9004  0CC9  1D03               	skipz
  9005  0CCA  2CCD               	goto	u3035
  9006  0CCB  0830               	movf	___ftdiv@f2,w
  9007  0CCC  0233               	subwf	___ftdiv@f1,w
  9008  0CCD                     u3035:	
  9009  0CCD  1C03               	skipc
  9010  0CCE  2CD6               	goto	l2740
  9011  0CCF  0830               	movf	___ftdiv@f2,w
  9012  0CD0  02B3               	subwf	___ftdiv@f1,f
  9013  0CD1  0831               	movf	___ftdiv@f2+1,w
  9014  0CD2  3BB4               	subwfb	___ftdiv@f1+1,f
  9015  0CD3  0832               	movf	___ftdiv@f2+2,w
  9016  0CD4  3BB5               	subwfb	___ftdiv@f1+2,f
  9017  0CD5  143B               	bsf	___ftdiv@f3,0
  9018  0CD6                     l2740:	
  9019  0CD6  3001               	movlw	1
  9020  0CD7                     u3045:	
  9021  0CD7  35B3               	lslf	___ftdiv@f1,f
  9022  0CD8  0DB4               	rlf	___ftdiv@f1+1,f
  9023  0CD9  0DB5               	rlf	___ftdiv@f1+2,f
  9024  0CDA  0B89               	decfsz	9,f
  9025  0CDB  2CD7               	goto	u3045
  9026  0CDC  3001               	movlw	1
  9027  0CDD  02BA               	subwf	___ftdiv@cntr,f
  9028  0CDE  1D03               	btfss	3,2
  9029  0CDF  2CBD               	goto	l2732
  9030  0CE0  083B               	movf	___ftdiv@f3,w
  9031  0CE1  00F0               	movwf	___ftpack@arg
  9032  0CE2  083C               	movf	___ftdiv@f3+1,w
  9033  0CE3  00F1               	movwf	___ftpack@arg+1
  9034  0CE4  083D               	movf	___ftdiv@f3+2,w
  9035  0CE5  00F2               	movwf	___ftpack@arg+2
  9036  0CE6  083E               	movf	___ftdiv@exp,w
  9037  0CE7  00B6               	movwf	??___ftdiv
  9038  0CE8  0836               	movf	??___ftdiv,w
  9039  0CE9  00F3               	movwf	___ftpack@exp
  9040  0CEA  083F               	movf	___ftdiv@sign,w
  9041  0CEB  00B7               	movwf	??___ftdiv+1
  9042  0CEC  0837               	movf	??___ftdiv+1,w
  9043  0CED  00F4               	movwf	___ftpack@sign
  9044  0CEE  318A  22DE         	fcall	___ftpack
  9045  0CF0  0870               	movf	?___ftpack,w
  9046  0CF1  0020               	movlb	0	; select bank0
  9047  0CF2  00B0               	movwf	?___ftdiv
  9048  0CF3  0871               	movf	?___ftpack+1,w
  9049  0CF4  00B1               	movwf	?___ftdiv+1
  9050  0CF5  0872               	movf	?___ftpack+2,w
  9051  0CF6  00B2               	movwf	?___ftdiv+2
  9052  0CF7  0008               	return
  9053  0CF8                     __end_of___ftdiv:	
  9054                           
  9055                           	psect	text12
  9056  0ADE                     __ptext12:	
  9057 ;; *************** function ___ftpack *****************
  9058 ;; Defined at:
  9059 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  arg             3    0[COMMON] unsigned um
  9062 ;;  exp             1    3[COMMON] unsigned char 
  9063 ;;  sign            1    4[COMMON] unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  3    0[COMMON] float 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9075 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;Total ram usage:        8 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		___awtoft
  9085 ;;		___ftadd
  9086 ;;		___ftdiv
  9087 ;;		___ftmul
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function ___ftpack
  9093  0ADE                     ___ftpack:	
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9097  0ADE  0873               	movf	___ftpack@exp,w
  9098  0ADF  1903               	btfsc	3,2
  9099  0AE0  2AE6               	goto	l2056
  9100  0AE1  0872               	movf	___ftpack@arg+2,w
  9101  0AE2  0471               	iorwf	___ftpack@arg+1,w
  9102  0AE3  0470               	iorwf	___ftpack@arg,w
  9103  0AE4  1D03               	skipz
  9104  0AE5  2AF7               	goto	l2062
  9105  0AE6                     l2056:	
  9106  0AE6  3000               	movlw	0
  9107  0AE7  00F0               	movwf	?___ftpack
  9108  0AE8  3000               	movlw	0
  9109  0AE9  00F1               	movwf	?___ftpack+1
  9110  0AEA  3000               	movlw	0
  9111  0AEB  00F2               	movwf	?___ftpack+2
  9112  0AEC  0008               	return
  9113  0AED                     l2060:	
  9114  0AED  3001               	movlw	1
  9115  0AEE  00F5               	movwf	??___ftpack
  9116  0AEF  0875               	movf	??___ftpack,w
  9117  0AF0  07F3               	addwf	___ftpack@exp,f
  9118  0AF1  3001               	movlw	1
  9119  0AF2                     u1845:	
  9120  0AF2  36F2               	lsrf	___ftpack@arg+2,f
  9121  0AF3  0CF1               	rrf	___ftpack@arg+1,f
  9122  0AF4  0CF0               	rrf	___ftpack@arg,f
  9123  0AF5  0B89               	decfsz	9,f
  9124  0AF6  2AF2               	goto	u1845
  9125  0AF7                     l2062:	
  9126  0AF7  30FE               	movlw	254
  9127  0AF8  0572               	andwf	___ftpack@arg+2,w
  9128  0AF9  1903               	btfsc	3,2
  9129  0AFA  2B10               	goto	l673
  9130  0AFB  2AED               	goto	l2060
  9131  0AFC                     l2064:	
  9132  0AFC  3001               	movlw	1
  9133  0AFD  00F5               	movwf	??___ftpack
  9134  0AFE  0875               	movf	??___ftpack,w
  9135  0AFF  07F3               	addwf	___ftpack@exp,f
  9136  0B00  3001               	movlw	1
  9137  0B01  07F0               	addwf	___ftpack@arg,f
  9138  0B02  3000               	movlw	0
  9139  0B03  1803               	skipnc
  9140  0B04  3001               	movlw	1
  9141  0B05  07F1               	addwf	___ftpack@arg+1,f
  9142  0B06  3000               	movlw	0
  9143  0B07  1803               	skipnc
  9144  0B08  3001               	movlw	1
  9145  0B09  07F2               	addwf	___ftpack@arg+2,f
  9146  0B0A  3001               	movlw	1
  9147  0B0B                     u1865:	
  9148  0B0B  36F2               	lsrf	___ftpack@arg+2,f
  9149  0B0C  0CF1               	rrf	___ftpack@arg+1,f
  9150  0B0D  0CF0               	rrf	___ftpack@arg,f
  9151  0B0E  0B89               	decfsz	9,f
  9152  0B0F  2B0B               	goto	u1865
  9153  0B10                     l673:	
  9154  0B10  30FF               	movlw	255
  9155  0B11  0572               	andwf	___ftpack@arg+2,w
  9156  0B12  1903               	btfsc	3,2
  9157  0B13  2B1D               	goto	l2072
  9158  0B14  2AFC               	goto	l2064
  9159  0B15                     l2070:	
  9160  0B15  3001               	movlw	1
  9161  0B16  02F3               	subwf	___ftpack@exp,f
  9162  0B17  3001               	movlw	1
  9163  0B18                     u1885:	
  9164  0B18  35F0               	lslf	___ftpack@arg,f
  9165  0B19  0DF1               	rlf	___ftpack@arg+1,f
  9166  0B1A  0DF2               	rlf	___ftpack@arg+2,f
  9167  0B1B  0B89               	decfsz	9,f
  9168  0B1C  2B18               	goto	u1885
  9169  0B1D                     l2072:	
  9170  0B1D  1BF1               	btfsc	___ftpack@arg+1,7
  9171  0B1E  2B23               	goto	l680
  9172  0B1F  3002               	movlw	2
  9173  0B20  0273               	subwf	___ftpack@exp,w
  9174  0B21  1803               	skipnc
  9175  0B22  2B15               	goto	l2070
  9176  0B23                     l680:	
  9177  0B23  1873               	btfsc	___ftpack@exp,0
  9178  0B24  2B2B               	goto	l681
  9179  0B25  30FF               	movlw	255
  9180  0B26  05F0               	andwf	___ftpack@arg,f
  9181  0B27  307F               	movlw	127
  9182  0B28  05F1               	andwf	___ftpack@arg+1,f
  9183  0B29  30FF               	movlw	255
  9184  0B2A  05F2               	andwf	___ftpack@arg+2,f
  9185  0B2B                     l681:	
  9186  0B2B  1003               	clrc
  9187  0B2C  0CF3               	rrf	___ftpack@exp,f
  9188  0B2D  0873               	movf	___ftpack@exp,w
  9189  0B2E  00F5               	movwf	??___ftpack
  9190  0B2F  01F6               	clrf	??___ftpack+1
  9191  0B30  01F7               	clrf	??___ftpack+2
  9192  0B31  3010               	movlw	16
  9193  0B32                     u1925:	
  9194  0B32  35F5               	lslf	??___ftpack,f
  9195  0B33  0DF6               	rlf	??___ftpack+1,f
  9196  0B34  0DF7               	rlf	??___ftpack+2,f
  9197  0B35  0B89               	decfsz	9,f
  9198  0B36  2B32               	goto	u1925
  9199  0B37  0875               	movf	??___ftpack,w
  9200  0B38  04F0               	iorwf	___ftpack@arg,f
  9201  0B39  0876               	movf	??___ftpack+1,w
  9202  0B3A  04F1               	iorwf	___ftpack@arg+1,f
  9203  0B3B  0877               	movf	??___ftpack+2,w
  9204  0B3C  04F2               	iorwf	___ftpack@arg+2,f
  9205  0B3D  0874               	movf	___ftpack@sign,w
  9206  0B3E  1903               	btfsc	3,2
  9207  0B3F  0008               	return
  9208  0B40  17F2               	bsf	___ftpack@arg+2,7
  9209  0B41  0008               	return
  9210  0B42                     __end_of___ftpack:	
  9211                           
  9212                           	psect	text13
  9213  029B                     __ptext13:	
  9214 ;; *************** function _readAnalog *****************
  9215 ;; Defined at:
  9216 ;;		line 34 in file "adc.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  channel         2    6[BANK0 ] int 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  value           2   11[COMMON] int 
  9221 ;;  analog_chann    2    9[COMMON] int 
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  2    6[BANK0 ] int 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;Total ram usage:       22 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; Hardware stack levels required when called:    1
  9238 ;; This function calls:
  9239 ;;		_ADCRead
  9240 ;;		___aldiv
  9241 ;;		___wmul
  9242 ;; This function is called by:
  9243 ;;		_main
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function _readAnalog
  9249  029B                     _readAnalog:	
  9250                           
  9251                           ;adc.c: 36: int value;
  9252                           ;adc.c: 38: int analog_channel = channels[channel];
  9253                           
  9254                           ;incstack = 0
  9255                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9256  029B  0020               	movlb	0	; select bank0
  9257  029C  3526               	lslf	readAnalog@channel,w
  9258  029D  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  9259  029E  0086               	movwf	6
  9260  029F  3001               	movlw	1	; select bank3/4
  9261  02A0  0087               	movwf	7
  9262  02A1  3F40               	moviw [0]fsr1
  9263  02A2  00F9               	movwf	readAnalog@analog_channel
  9264  02A3  3F41               	moviw [1]fsr1
  9265  02A4  00FA               	movwf	readAnalog@analog_channel+1
  9266                           
  9267                           ;adc.c: 40: value = ADCRead(analog_channel);
  9268  02A5  0879               	movf	readAnalog@analog_channel,w
  9269  02A6  3188  2002  3182   	fcall	_ADCRead
  9270  02A9  0871               	movf	?_ADCRead+1,w
  9271  02AA  00FC               	movwf	readAnalog@value+1
  9272  02AB  0870               	movf	?_ADCRead,w
  9273  02AC  00FB               	movwf	readAnalog@value
  9274                           
  9275                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9276  02AD  0020               	movlb	0	; select bank0
  9277  02AE  0826               	movf	readAnalog@channel,w
  9278  02AF  00A8               	movwf	??_readAnalog
  9279  02B0  3001               	movlw	1
  9280  02B1                     u3175:	
  9281  02B1  35A8               	lslf	??_readAnalog,f
  9282  02B2  3EFF               	addlw	-1
  9283  02B3  1D03               	skipz
  9284  02B4  2AB1               	goto	u3175
  9285  02B5  3528               	lslf	??_readAnalog,w
  9286  02B6  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9287  02B7  0086               	movwf	6
  9288  02B8  0187               	clrf	7
  9289  02B9  3F40               	moviw [0]fsr1
  9290  02BA  00A9               	movwf	??_readAnalog+1
  9291  02BB  3F41               	moviw [1]fsr1
  9292  02BC  00AA               	movwf	??_readAnalog+2
  9293  02BD  3F42               	moviw [2]fsr1
  9294  02BE  00AB               	movwf	??_readAnalog+3
  9295  02BF  3F43               	moviw [3]fsr1
  9296  02C0  00AC               	movwf	??_readAnalog+4
  9297  02C1  0021               	movlb	1	; select bank1
  9298  02C2  083D               	movf	(_sampleIndex+1)^(0+128),w
  9299  02C3  0020               	movlb	0	; select bank0
  9300  02C4  00AE               	movwf	??_readAnalog+6
  9301  02C5  0021               	movlb	1	; select bank1
  9302  02C6  083C               	movf	_sampleIndex^(0+128),w
  9303  02C7  0020               	movlb	0	; select bank0
  9304  02C8  00AD               	movwf	??_readAnalog+5
  9305  02C9  35AD               	lslf	??_readAnalog+5,f
  9306  02CA  0DAE               	rlf	??_readAnalog+6,f
  9307  02CB  0827               	movf	readAnalog@channel+1,w
  9308  02CC  00F1               	movwf	___wmul@multiplier+1
  9309  02CD  0826               	movf	readAnalog@channel,w
  9310  02CE  00F0               	movwf	___wmul@multiplier
  9311  02CF  3050               	movlw	80
  9312  02D0  00F2               	movwf	___wmul@multiplicand
  9313  02D1  3000               	movlw	0
  9314  02D2  00F3               	movwf	___wmul@multiplicand+1
  9315  02D3  3197  27E5  3182   	fcall	___wmul
  9316  02D6  3050               	movlw	80
  9317  02D7  0020               	movlb	0	; select bank0
  9318  02D8  00AF               	movwf	??_readAnalog+7
  9319  02D9  3023               	movlw	35
  9320  02DA  00B0               	movwf	??_readAnalog+8
  9321  02DB  0870               	movf	?___wmul,w
  9322  02DC  072F               	addwf	??_readAnalog+7,w
  9323  02DD  00B1               	movwf	??_readAnalog+9
  9324  02DE  0871               	movf	?___wmul+1,w
  9325  02DF  3D30               	addwfc	??_readAnalog+8,w
  9326  02E0  00B2               	movwf	??_readAnalog+10
  9327  02E1  0831               	movf	??_readAnalog+9,w
  9328  02E2  072D               	addwf	??_readAnalog+5,w
  9329  02E3  0084               	movwf	4
  9330  02E4  0832               	movf	??_readAnalog+10,w
  9331  02E5  3D2E               	addwfc	??_readAnalog+6,w
  9332  02E6  0085               	movwf	5
  9333  02E7  3F00               	moviw [0]fsr0
  9334  02E8  00B3               	movwf	??_readAnalog+11
  9335  02E9  3F01               	moviw [1]fsr0
  9336  02EA  00B4               	movwf	??_readAnalog+12
  9337  02EB  01B5               	clrf	??_readAnalog+13
  9338  02EC  01B6               	clrf	??_readAnalog+14
  9339  02ED  09B3               	comf	??_readAnalog+11,f
  9340  02EE  09B4               	comf	??_readAnalog+12,f
  9341  02EF  09B5               	comf	??_readAnalog+13,f
  9342  02F0  09B6               	comf	??_readAnalog+14,f
  9343  02F1  0AB3               	incf	??_readAnalog+11,f
  9344  02F2  1903               	skipnz
  9345  02F3  0AB4               	incf	??_readAnalog+12,f
  9346  02F4  1903               	skipnz
  9347  02F5  0AB5               	incf	??_readAnalog+13,f
  9348  02F6  1903               	skipnz
  9349  02F7  0AB6               	incf	??_readAnalog+14,f
  9350  02F8  0833               	movf	??_readAnalog+11,w
  9351  02F9  07A9               	addwf	??_readAnalog+1,f
  9352  02FA  0834               	movf	??_readAnalog+12,w
  9353  02FB  3DAA               	addwfc	??_readAnalog+2,f
  9354  02FC  0835               	movf	??_readAnalog+13,w
  9355  02FD  3DAB               	addwfc	??_readAnalog+3,f
  9356  02FE  0836               	movf	??_readAnalog+14,w
  9357  02FF  3DAC               	addwfc	??_readAnalog+4,f
  9358  0300  0826               	movf	readAnalog@channel,w
  9359  0301  00B7               	movwf	??_readAnalog+15
  9360  0302  3001               	movlw	1
  9361  0303                     u3185:	
  9362  0303  35B7               	lslf	??_readAnalog+15,f
  9363  0304  3EFF               	addlw	-1
  9364  0305  1D03               	skipz
  9365  0306  2B03               	goto	u3185
  9366  0307  3537               	lslf	??_readAnalog+15,w
  9367  0308  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9368  0309  0086               	movwf	6
  9369  030A  0187               	clrf	7
  9370  030B  0829               	movf	??_readAnalog+1,w
  9371  030C  3FC0               	movwi [0]fsr1
  9372  030D  082A               	movf	??_readAnalog+2,w
  9373  030E  3FC1               	movwi [1]fsr1
  9374  030F  082B               	movf	??_readAnalog+3,w
  9375  0310  3FC2               	movwi [2]fsr1
  9376  0311  082C               	movf	??_readAnalog+4,w
  9377  0312  3FC3               	movwi [3]fsr1
  9378                           
  9379                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9380  0313  0021               	movlb	1	; select bank1
  9381  0314  083D               	movf	(_sampleIndex+1)^(0+128),w
  9382  0315  0020               	movlb	0	; select bank0
  9383  0316  00A9               	movwf	??_readAnalog+1
  9384  0317  0021               	movlb	1	; select bank1
  9385  0318  083C               	movf	_sampleIndex^(0+128),w
  9386  0319  0020               	movlb	0	; select bank0
  9387  031A  00A8               	movwf	??_readAnalog
  9388  031B  35A8               	lslf	??_readAnalog,f
  9389  031C  0DA9               	rlf	??_readAnalog+1,f
  9390  031D  0827               	movf	readAnalog@channel+1,w
  9391  031E  00F1               	movwf	___wmul@multiplier+1
  9392  031F  0826               	movf	readAnalog@channel,w
  9393  0320  00F0               	movwf	___wmul@multiplier
  9394  0321  3050               	movlw	80
  9395  0322  00F2               	movwf	___wmul@multiplicand
  9396  0323  3000               	movlw	0
  9397  0324  00F3               	movwf	___wmul@multiplicand+1
  9398  0325  3197  27E5  3182   	fcall	___wmul
  9399  0328  3050               	movlw	80
  9400  0329  0020               	movlb	0	; select bank0
  9401  032A  00AA               	movwf	??_readAnalog+2
  9402  032B  3023               	movlw	35
  9403  032C  00AB               	movwf	??_readAnalog+3
  9404  032D  0870               	movf	?___wmul,w
  9405  032E  072A               	addwf	??_readAnalog+2,w
  9406  032F  00AC               	movwf	??_readAnalog+4
  9407  0330  0871               	movf	?___wmul+1,w
  9408  0331  3D2B               	addwfc	??_readAnalog+3,w
  9409  0332  00AD               	movwf	??_readAnalog+5
  9410  0333  0828               	movf	??_readAnalog,w
  9411  0334  072C               	addwf	??_readAnalog+4,w
  9412  0335  0086               	movwf	6
  9413  0336  0829               	movf	??_readAnalog+1,w
  9414  0337  3D2D               	addwfc	??_readAnalog+5,w
  9415  0338  0087               	movwf	7
  9416  0339  087B               	movf	readAnalog@value,w
  9417  033A  3FC0               	movwi [0]fsr1
  9418  033B  087C               	movf	readAnalog@value+1,w
  9419  033C  3FC1               	movwi [1]fsr1
  9420                           
  9421                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9422  033D  0826               	movf	readAnalog@channel,w
  9423  033E  00A8               	movwf	??_readAnalog
  9424  033F  3001               	movlw	1
  9425  0340                     u3195:	
  9426  0340  35A8               	lslf	??_readAnalog,f
  9427  0341  3EFF               	addlw	-1
  9428  0342  1D03               	skipz
  9429  0343  2B40               	goto	u3195
  9430  0344  3528               	lslf	??_readAnalog,w
  9431  0345  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9432  0346  0086               	movwf	6
  9433  0347  0187               	clrf	7
  9434  0348  3F40               	moviw [0]fsr1
  9435  0349  00A9               	movwf	??_readAnalog+1
  9436  034A  3F41               	moviw [1]fsr1
  9437  034B  00AA               	movwf	??_readAnalog+2
  9438  034C  3F42               	moviw [2]fsr1
  9439  034D  00AB               	movwf	??_readAnalog+3
  9440  034E  3F43               	moviw [3]fsr1
  9441  034F  00AC               	movwf	??_readAnalog+4
  9442  0350  0021               	movlb	1	; select bank1
  9443  0351  083D               	movf	(_sampleIndex+1)^(0+128),w
  9444  0352  0020               	movlb	0	; select bank0
  9445  0353  00AE               	movwf	??_readAnalog+6
  9446  0354  0021               	movlb	1	; select bank1
  9447  0355  083C               	movf	_sampleIndex^(0+128),w
  9448  0356  0020               	movlb	0	; select bank0
  9449  0357  00AD               	movwf	??_readAnalog+5
  9450  0358  35AD               	lslf	??_readAnalog+5,f
  9451  0359  0DAE               	rlf	??_readAnalog+6,f
  9452  035A  0827               	movf	readAnalog@channel+1,w
  9453  035B  00F1               	movwf	___wmul@multiplier+1
  9454  035C  0826               	movf	readAnalog@channel,w
  9455  035D  00F0               	movwf	___wmul@multiplier
  9456  035E  3050               	movlw	80
  9457  035F  00F2               	movwf	___wmul@multiplicand
  9458  0360  3000               	movlw	0
  9459  0361  00F3               	movwf	___wmul@multiplicand+1
  9460  0362  3197  27E5  3182   	fcall	___wmul
  9461  0365  3050               	movlw	80
  9462  0366  0020               	movlb	0	; select bank0
  9463  0367  00AF               	movwf	??_readAnalog+7
  9464  0368  3023               	movlw	35
  9465  0369  00B0               	movwf	??_readAnalog+8
  9466  036A  0870               	movf	?___wmul,w
  9467  036B  072F               	addwf	??_readAnalog+7,w
  9468  036C  00B1               	movwf	??_readAnalog+9
  9469  036D  0871               	movf	?___wmul+1,w
  9470  036E  3D30               	addwfc	??_readAnalog+8,w
  9471  036F  00B2               	movwf	??_readAnalog+10
  9472  0370  0831               	movf	??_readAnalog+9,w
  9473  0371  072D               	addwf	??_readAnalog+5,w
  9474  0372  0084               	movwf	4
  9475  0373  0832               	movf	??_readAnalog+10,w
  9476  0374  3D2E               	addwfc	??_readAnalog+6,w
  9477  0375  0085               	movwf	5
  9478  0376  3F00               	moviw [0]fsr0
  9479  0377  00B3               	movwf	??_readAnalog+11
  9480  0378  3F01               	moviw [1]fsr0
  9481  0379  00B4               	movwf	??_readAnalog+12
  9482  037A  01B5               	clrf	??_readAnalog+13
  9483  037B  01B6               	clrf	??_readAnalog+14
  9484  037C  0833               	movf	??_readAnalog+11,w
  9485  037D  07A9               	addwf	??_readAnalog+1,f
  9486  037E  0834               	movf	??_readAnalog+12,w
  9487  037F  3DAA               	addwfc	??_readAnalog+2,f
  9488  0380  0835               	movf	??_readAnalog+13,w
  9489  0381  3DAB               	addwfc	??_readAnalog+3,f
  9490  0382  0836               	movf	??_readAnalog+14,w
  9491  0383  3DAC               	addwfc	??_readAnalog+4,f
  9492  0384  0826               	movf	readAnalog@channel,w
  9493  0385  00B7               	movwf	??_readAnalog+15
  9494  0386  3001               	movlw	1
  9495  0387                     u3205:	
  9496  0387  35B7               	lslf	??_readAnalog+15,f
  9497  0388  3EFF               	addlw	-1
  9498  0389  1D03               	skipz
  9499  038A  2B87               	goto	u3205
  9500  038B  3537               	lslf	??_readAnalog+15,w
  9501  038C  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9502  038D  0086               	movwf	6
  9503  038E  0187               	clrf	7
  9504  038F  0829               	movf	??_readAnalog+1,w
  9505  0390  3FC0               	movwi [0]fsr1
  9506  0391  082A               	movf	??_readAnalog+2,w
  9507  0392  3FC1               	movwi [1]fsr1
  9508  0393  082B               	movf	??_readAnalog+3,w
  9509  0394  3FC2               	movwi [2]fsr1
  9510  0395  082C               	movf	??_readAnalog+4,w
  9511  0396  3FC3               	movwi [3]fsr1
  9512                           
  9513                           ;adc.c: 48: if(channel>=(2-1))
  9514  0397  0827               	movf	readAnalog@channel+1,w
  9515  0398  3A80               	xorlw	128
  9516  0399  00A8               	movwf	??_readAnalog
  9517  039A  3080               	movlw	128
  9518  039B  0228               	subwf	??_readAnalog,w
  9519  039C  1D03               	skipz
  9520  039D  2BA0               	goto	u3215
  9521  039E  3001               	movlw	1
  9522  039F  0226               	subwf	readAnalog@channel,w
  9523  03A0                     u3215:	
  9524  03A0  1C03               	skipc
  9525  03A1  2BB0               	goto	l2812
  9526                           
  9527                           ;adc.c: 49: {
  9528                           ;adc.c: 50: sampleIndex+=1;
  9529  03A2  3001               	movlw	1
  9530  03A3  0021               	movlb	1	; select bank1
  9531  03A4  07BC               	addwf	_sampleIndex^(0+128),f
  9532  03A5  3000               	movlw	0
  9533  03A6  3DBD               	addwfc	(_sampleIndex+1)^(0+128),f
  9534                           
  9535                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9536  03A7  3000               	movlw	0
  9537  03A8  023D               	subwf	(_sampleIndex+1)^(0+128),w
  9538  03A9  3028               	movlw	40
  9539  03AA  1903               	skipnz
  9540  03AB  023C               	subwf	_sampleIndex^(0+128),w
  9541  03AC  1C03               	skipc
  9542  03AD  2BB0               	goto	l2812
  9543  03AE  01BC               	clrf	_sampleIndex^(0+128)
  9544  03AF  01BD               	clrf	(_sampleIndex+1)^(0+128)
  9545  03B0                     l2812:	
  9546                           
  9547                           ;adc.c: 52: }
  9548                           ;adc.c: 54: value = totals[channel]/40;
  9549  03B0  3000               	movlw	0
  9550  03B1  00F3               	movwf	___aldiv@divisor+3
  9551  03B2  3000               	movlw	0
  9552  03B3  00F2               	movwf	___aldiv@divisor+2
  9553  03B4  3000               	movlw	0
  9554  03B5  00F1               	movwf	___aldiv@divisor+1
  9555  03B6  3028               	movlw	40
  9556  03B7  00F0               	movwf	___aldiv@divisor
  9557  03B8  0020               	movlb	0	; select bank0
  9558  03B9  0826               	movf	readAnalog@channel,w
  9559  03BA  00A8               	movwf	??_readAnalog
  9560  03BB  3001               	movlw	1
  9561  03BC                     u3235:	
  9562  03BC  35A8               	lslf	??_readAnalog,f
  9563  03BD  3EFF               	addlw	-1
  9564  03BE  1D03               	skipz
  9565  03BF  2BBC               	goto	u3235
  9566  03C0  3528               	lslf	??_readAnalog,w
  9567  03C1  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9568  03C2  0086               	movwf	6
  9569  03C3  0187               	clrf	7
  9570  03C4  3F40               	moviw [0]fsr1
  9571  03C5  00F4               	movwf	___aldiv@dividend
  9572  03C6  3F41               	moviw [1]fsr1
  9573  03C7  00F5               	movwf	___aldiv@dividend+1
  9574  03C8  3F42               	moviw [2]fsr1
  9575  03C9  00F6               	movwf	___aldiv@dividend+2
  9576  03CA  3F43               	moviw [3]fsr1
  9577  03CB  00F7               	movwf	___aldiv@dividend+3
  9578  03CC  3180  2006         	fcall	___aldiv
  9579  03CE  0871               	movf	?___aldiv+1,w
  9580  03CF  00FC               	movwf	readAnalog@value+1
  9581  03D0  0870               	movf	?___aldiv,w
  9582  03D1  00FB               	movwf	readAnalog@value
  9583                           
  9584                           ;adc.c: 56: return value;
  9585  03D2  087C               	movf	readAnalog@value+1,w
  9586  03D3  0020               	movlb	0	; select bank0
  9587  03D4  00A7               	movwf	?_readAnalog+1
  9588  03D5  087B               	movf	readAnalog@value,w
  9589  03D6  00A6               	movwf	?_readAnalog
  9590  03D7  0008               	return
  9591  03D8                     __end_of_readAnalog:	
  9592                           
  9593                           	psect	text14
  9594  0006                     __ptext14:	
  9595 ;; *************** function ___aldiv *****************
  9596 ;; Defined at:
  9597 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  divisor         4    0[COMMON] long 
  9600 ;;  dividend        4    4[COMMON] long 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  quotient        4    2[BANK0 ] long 
  9603 ;;  sign            1    1[BANK0 ] unsigned char 
  9604 ;;  counter         1    0[BANK0 ] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  4    0[COMMON] long 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9614 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;Total ram usage:       15 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_readAnalog
  9624 ;;		_main
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           
  9629                           ;psect for function ___aldiv
  9630  0006                     ___aldiv:	
  9631                           
  9632                           ;incstack = 0
  9633                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9634  0006  0020               	movlb	0	; select bank0
  9635  0007  01A1               	clrf	___aldiv@sign
  9636  0008  1FF3               	btfss	___aldiv@divisor+3,7
  9637  0009  2817               	goto	l567
  9638  000A  09F0               	comf	___aldiv@divisor,f
  9639  000B  09F1               	comf	___aldiv@divisor+1,f
  9640  000C  09F2               	comf	___aldiv@divisor+2,f
  9641  000D  09F3               	comf	___aldiv@divisor+3,f
  9642  000E  0AF0               	incf	___aldiv@divisor,f
  9643  000F  1903               	skipnz
  9644  0010  0AF1               	incf	___aldiv@divisor+1,f
  9645  0011  1903               	skipnz
  9646  0012  0AF2               	incf	___aldiv@divisor+2,f
  9647  0013  1903               	skipnz
  9648  0014  0AF3               	incf	___aldiv@divisor+3,f
  9649  0015  01A1               	clrf	___aldiv@sign
  9650  0016  0AA1               	incf	___aldiv@sign,f
  9651  0017                     l567:	
  9652  0017  1FF7               	btfss	___aldiv@dividend+3,7
  9653  0018  2828               	goto	l2676
  9654  0019  09F4               	comf	___aldiv@dividend,f
  9655  001A  09F5               	comf	___aldiv@dividend+1,f
  9656  001B  09F6               	comf	___aldiv@dividend+2,f
  9657  001C  09F7               	comf	___aldiv@dividend+3,f
  9658  001D  0AF4               	incf	___aldiv@dividend,f
  9659  001E  1903               	skipnz
  9660  001F  0AF5               	incf	___aldiv@dividend+1,f
  9661  0020  1903               	skipnz
  9662  0021  0AF6               	incf	___aldiv@dividend+2,f
  9663  0022  1903               	skipnz
  9664  0023  0AF7               	incf	___aldiv@dividend+3,f
  9665  0024  3001               	movlw	1
  9666  0025  00F8               	movwf	??___aldiv
  9667  0026  0878               	movf	??___aldiv,w
  9668  0027  06A1               	xorwf	___aldiv@sign,f
  9669  0028                     l2676:	
  9670  0028  3000               	movlw	0
  9671  0029  00A5               	movwf	___aldiv@quotient+3
  9672  002A  3000               	movlw	0
  9673  002B  00A4               	movwf	___aldiv@quotient+2
  9674  002C  3000               	movlw	0
  9675  002D  00A3               	movwf	___aldiv@quotient+1
  9676  002E  3000               	movlw	0
  9677  002F  00A2               	movwf	___aldiv@quotient
  9678  0030  0873               	movf	___aldiv@divisor+3,w
  9679  0031  0472               	iorwf	___aldiv@divisor+2,w
  9680  0032  0471               	iorwf	___aldiv@divisor+1,w
  9681  0033  0470               	iorwf	___aldiv@divisor,w
  9682  0034  1903               	skipnz
  9683  0035  2871               	goto	l2698
  9684  0036  01A0               	clrf	___aldiv@counter
  9685  0037  0AA0               	incf	___aldiv@counter,f
  9686  0038                     l2684:	
  9687  0038  1BF3               	btfsc	___aldiv@divisor+3,7
  9688  0039  2846               	goto	l2686
  9689  003A  3001               	movlw	1
  9690  003B                     u2915:	
  9691  003B  35F0               	lslf	___aldiv@divisor,f
  9692  003C  0DF1               	rlf	___aldiv@divisor+1,f
  9693  003D  0DF2               	rlf	___aldiv@divisor+2,f
  9694  003E  0DF3               	rlf	___aldiv@divisor+3,f
  9695  003F  0B89               	decfsz	9,f
  9696  0040  283B               	goto	u2915
  9697  0041  3001               	movlw	1
  9698  0042  00F8               	movwf	??___aldiv
  9699  0043  0878               	movf	??___aldiv,w
  9700  0044  07A0               	addwf	___aldiv@counter,f
  9701  0045  2838               	goto	l2684
  9702  0046                     l2686:	
  9703  0046  3001               	movlw	1
  9704  0047                     u2935:	
  9705  0047  35A2               	lslf	___aldiv@quotient,f
  9706  0048  0DA3               	rlf	___aldiv@quotient+1,f
  9707  0049  0DA4               	rlf	___aldiv@quotient+2,f
  9708  004A  0DA5               	rlf	___aldiv@quotient+3,f
  9709  004B  0B89               	decfsz	9,f
  9710  004C  2847               	goto	u2935
  9711  004D  0873               	movf	___aldiv@divisor+3,w
  9712  004E  0277               	subwf	___aldiv@dividend+3,w
  9713  004F  1D03               	skipz
  9714  0050  285B               	goto	u2945
  9715  0051  0872               	movf	___aldiv@divisor+2,w
  9716  0052  0276               	subwf	___aldiv@dividend+2,w
  9717  0053  1D03               	skipz
  9718  0054  285B               	goto	u2945
  9719  0055  0871               	movf	___aldiv@divisor+1,w
  9720  0056  0275               	subwf	___aldiv@dividend+1,w
  9721  0057  1D03               	skipz
  9722  0058  285B               	goto	u2945
  9723  0059  0870               	movf	___aldiv@divisor,w
  9724  005A  0274               	subwf	___aldiv@dividend,w
  9725  005B                     u2945:	
  9726  005B  1C03               	skipc
  9727  005C  2866               	goto	l2694
  9728  005D  0870               	movf	___aldiv@divisor,w
  9729  005E  02F4               	subwf	___aldiv@dividend,f
  9730  005F  0871               	movf	___aldiv@divisor+1,w
  9731  0060  3BF5               	subwfb	___aldiv@dividend+1,f
  9732  0061  0872               	movf	___aldiv@divisor+2,w
  9733  0062  3BF6               	subwfb	___aldiv@dividend+2,f
  9734  0063  0873               	movf	___aldiv@divisor+3,w
  9735  0064  3BF7               	subwfb	___aldiv@dividend+3,f
  9736  0065  1422               	bsf	___aldiv@quotient,0
  9737  0066                     l2694:	
  9738  0066  3001               	movlw	1
  9739  0067                     u2955:	
  9740  0067  36F3               	lsrf	___aldiv@divisor+3,f
  9741  0068  0CF2               	rrf	___aldiv@divisor+2,f
  9742  0069  0CF1               	rrf	___aldiv@divisor+1,f
  9743  006A  0CF0               	rrf	___aldiv@divisor,f
  9744  006B  0B89               	decfsz	9,f
  9745  006C  2867               	goto	u2955
  9746  006D  3001               	movlw	1
  9747  006E  02A0               	subwf	___aldiv@counter,f
  9748  006F  1D03               	btfss	3,2
  9749  0070  2846               	goto	l2686
  9750  0071                     l2698:	
  9751  0071  0821               	movf	___aldiv@sign,w
  9752  0072  1903               	btfsc	3,2
  9753  0073  287F               	goto	l2702
  9754  0074  09A2               	comf	___aldiv@quotient,f
  9755  0075  09A3               	comf	___aldiv@quotient+1,f
  9756  0076  09A4               	comf	___aldiv@quotient+2,f
  9757  0077  09A5               	comf	___aldiv@quotient+3,f
  9758  0078  0AA2               	incf	___aldiv@quotient,f
  9759  0079  1903               	skipnz
  9760  007A  0AA3               	incf	___aldiv@quotient+1,f
  9761  007B  1903               	skipnz
  9762  007C  0AA4               	incf	___aldiv@quotient+2,f
  9763  007D  1903               	skipnz
  9764  007E  0AA5               	incf	___aldiv@quotient+3,f
  9765  007F                     l2702:	
  9766  007F  0825               	movf	___aldiv@quotient+3,w
  9767  0080  00F3               	movwf	?___aldiv+3
  9768  0081  0824               	movf	___aldiv@quotient+2,w
  9769  0082  00F2               	movwf	?___aldiv+2
  9770  0083  0823               	movf	___aldiv@quotient+1,w
  9771  0084  00F1               	movwf	?___aldiv+1
  9772  0085  0822               	movf	___aldiv@quotient,w
  9773  0086  00F0               	movwf	?___aldiv
  9774  0087  0008               	return
  9775  0088                     __end_of___aldiv:	
  9776                           
  9777                           	psect	text15
  9778  0802                     __ptext15:	
  9779 ;; *************** function _ADCRead *****************
  9780 ;; Defined at:
  9781 ;;		line 16 in file "adc.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  channel         1    wreg     enum E13559
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;  channel         1    3[COMMON] enum E13559
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  2    0[COMMON] unsigned int 
  9788 ;; Registers used:
  9789 ;;		wreg
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9795 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9799 ;;Total ram usage:        4 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; This function calls:
  9802 ;;		Nothing
  9803 ;; This function is called by:
  9804 ;;		_readAnalog
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           
  9809                           ;psect for function _ADCRead
  9810  0802                     _ADCRead:	
  9811                           
  9812                           ;incstack = 0
  9813                           ; Regs used in _ADCRead: [wreg]
  9814                           ;ADCRead@channel stored from wreg
  9815  0802  00F3               	movwf	ADCRead@channel
  9816                           
  9817                           ;adc.c: 18: ADPCH = channel;
  9818  0803  0873               	movf	ADCRead@channel,w
  9819  0804  0021               	movlb	1	; select bank1
  9820  0805  009E               	movwf	30	;volatile
  9821                           
  9822                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9823  0806  1793               	bsf	19,7	;volatile
  9824                           
  9825                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9826  0807  1313               	bcf	19,6	;volatile
  9827                           
  9828                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9829  0808  1413               	bsf	19,0	;volatile
  9830  0809                     l55:	
  9831                           ;adc.c: 27: {
  9832                           
  9833                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9834                           
  9835  0809  1813               	btfsc	19,0	;volatile
  9836  080A  2809               	goto	l55
  9837                           
  9838                           ;adc.c: 28: }
  9839                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9840  080B  080D               	movf	13,w	;volatile
  9841  080C  00F1               	movwf	?_ADCRead+1
  9842  080D  080C               	movf	12,w	;volatile
  9843  080E  00F0               	movwf	?_ADCRead
  9844  080F  0008               	return
  9845  0810                     __end_of_ADCRead:	
  9846                           
  9847                           	psect	text16
  9848  03D8                     __ptext16:	
  9849 ;; *************** function _menuChoice *****************
  9850 ;; Defined at:
  9851 ;;		line 52 in file "menu.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;		None
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;Total ram usage:        4 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    3
  9872 ;; This function calls:
  9873 ;;		_LCD_Set_Cursor
  9874 ;;		_LCD_Write_Int
  9875 ;;		_LCD_Write_String
  9876 ;;		_readKey
  9877 ;; This function is called by:
  9878 ;;		_main
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function _menuChoice
  9884  03D8                     _menuChoice:	
  9885  03D8                     l2936:	
  9886                           ;menu.c: 54: while(RB2 != 1)
  9887                           
  9888                           ;incstack = 0
  9889                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9890                           
  9891  03D8  0020               	movlb	0	; select bank0
  9892  03D9  190D               	btfsc	13,2	;volatile
  9893  03DA  2C2C               	goto	l2938
  9894                           
  9895                           ;menu.c: 55: {
  9896                           ;menu.c: 56: choice = readKey();
  9897  03DB  3197  2782  3183   	fcall	_readKey
  9898  03DE  0020               	movlb	0	; select bank0
  9899  03DF  00AE               	movwf	??_menuChoice
  9900  03E0  082E               	movf	??_menuChoice,w
  9901  03E1  0021               	movlb	1	; select bank1
  9902  03E2  00C2               	movwf	_choice^(0+128)
  9903                           
  9904                           ;menu.c: 58: if(timer > 1000)
  9905  03E3  0841               	movf	(_timer+1)^(0+128),w
  9906  03E4  3A80               	xorlw	128
  9907  03E5  0020               	movlb	0	; select bank0
  9908  03E6  00AE               	movwf	??_menuChoice
  9909  03E7  3083               	movlw	131
  9910  03E8  022E               	subwf	??_menuChoice,w
  9911  03E9  1D03               	skipz
  9912  03EA  2BEE               	goto	u3325
  9913  03EB  30E9               	movlw	233
  9914  03EC  0021               	movlb	1	; select bank1
  9915  03ED  0240               	subwf	_timer^(0+128),w
  9916  03EE                     u3325:	
  9917  03EE  1803               	btfsc	3,0
  9918  03EF  2D45               	goto	l2942
  9919                           
  9920                           ;menu.c: 62: }
  9921                           ;menu.c: 64: if(timer2>25){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}e
      +                          lse { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9922                           
  9923                           ;menu.c: 61: goto Exit;
  9924                           
  9925                           ;menu.c: 59: {
  9926                           ;menu.c: 60: timer = 0;
  9927  03F0  301A               	movlw	26
  9928  03F1  0021               	movlb	1	; select bank1
  9929  03F2  0247               	subwf	_timer2^(0+128),w
  9930  03F3  1C03               	skipc
  9931  03F4  2BFE               	goto	l2920
  9932  03F5  01F4               	clrf	LCD_Set_Cursor@y
  9933  03F6  3000               	movlw	0
  9934  03F7  3189  2167  3183   	fcall	_LCD_Set_Cursor
  9935  03FA  302C               	movlw	low (STR_7| (0+32768))
  9936  03FB  00F5               	movwf	LCD_Write_String@a
  9937  03FC  3090               	movlw	high (STR_7| (0+32768))
  9938  03FD  2C06               	goto	L3
  9939  03FE                     l2920:	
  9940  03FE  01F4               	clrf	LCD_Set_Cursor@y
  9941  03FF  3000               	movlw	0
  9942  0400  3189  2167  3183   	fcall	_LCD_Set_Cursor
  9943  0403  301B               	movlw	low (STR_8| (0+32768))
  9944  0404  00F5               	movwf	LCD_Write_String@a
  9945  0405  3090               	movlw	high (STR_8| (0+32768))
  9946  0406                     L3:	
  9947  0406  00F6               	movwf	LCD_Write_String@a+1
  9948  0407  3197  27CB  3183   	fcall	_LCD_Write_String
  9949                           
  9950                           ;menu.c: 66: { LCD_Set_Cursor(1,0); LCD_Write_String(desc[choice]);};
  9951  040A  01F4               	clrf	LCD_Set_Cursor@y
  9952  040B  3001               	movlw	1
  9953  040C  3189  2167  3183   	fcall	_LCD_Set_Cursor
  9954  040F  0021               	movlb	1	; select bank1
  9955  0410  3542               	lslf	_choice^(0+128),w
  9956  0411  3EB4               	addlw	(low (_desc| (0+256)))& (0+255)
  9957  0412  0086               	movwf	6
  9958  0413  3001               	movlw	1	; select bank3/4
  9959  0414  0087               	movwf	7
  9960  0415  3F40               	moviw [0]fsr1
  9961  0416  00F5               	movwf	LCD_Write_String@a
  9962  0417  3F41               	moviw [1]fsr1
  9963  0418  00F6               	movwf	LCD_Write_String@a+1
  9964  0419  3197  27CB  3183   	fcall	_LCD_Write_String
  9965                           
  9966                           ;menu.c: 68: if(timer2>49)timer2=0;
  9967  041C  3032               	movlw	50
  9968  041D  0021               	movlb	1	; select bank1
  9969  041E  0247               	subwf	_timer2^(0+128),w
  9970  041F  1803               	btfsc	3,0
  9971  0420  01C7               	clrf	_timer2^(0+128)
  9972                           
  9973                           ;menu.c: 70: timer+=1;
  9974  0421  3001               	movlw	1
  9975  0422  07C0               	addwf	_timer^(0+128),f
  9976  0423  3000               	movlw	0
  9977  0424  3DC1               	addwfc	(_timer+1)^(0+128),f
  9978                           
  9979                           ;menu.c: 71: timer2+=1;
  9980  0425  3001               	movlw	1
  9981  0426  0020               	movlb	0	; select bank0
  9982  0427  00AE               	movwf	??_menuChoice
  9983  0428  082E               	movf	??_menuChoice,w
  9984  0429  0021               	movlb	1	; select bank1
  9985  042A  07C7               	addwf	_timer2^(0+128),f
  9986  042B  2BD8               	goto	l2936
  9987  042C                     l2938:	
  9988                           
  9989                           ;menu.c: 72: }
  9990                           ;menu.c: 73: timer=0;
  9991  042C  0021               	movlb	1	; select bank1
  9992  042D  01C0               	clrf	_timer^(0+128)
  9993  042E  01C1               	clrf	(_timer+1)^(0+128)
  9994                           
  9995                           ;menu.c: 74: timer2=0;
  9996  042F  01C7               	clrf	_timer2^(0+128)
  9997                           
  9998                           ;menu.c: 76: while(RB2 != 1)
  9999  0430  2D34               	goto	l3008
 10000  0431                     l2944:	
 10001                           ;menu.c: 81: goto Exit;
 10002                           
 10003                           
 10004                           ;menu.c: 82: }
 10005                           ;menu.c: 84: timer+=1;
 10006  0431  3001               	movlw	1
 10007  0432  0021               	movlb	1	; select bank1
 10008  0433  07C0               	addwf	_timer^(0+128),f
 10009  0434  3000               	movlw	0
 10010  0435  3DC1               	addwfc	(_timer+1)^(0+128),f
 10011                           
 10012                           ;menu.c: 86: if(RB0==1)
 10013  0436  0020               	movlb	0	; select bank0
 10014  0437  1C0D               	btfss	13,0	;volatile
 10015  0438  2CAC               	goto	l2970
 10016                           
 10017                           ;menu.c: 87: {
 10018                           ;menu.c: 88: delayCount+=2;
 10019  0439  3002               	movlw	2
 10020  043A  00AE               	movwf	??_menuChoice
 10021  043B  082E               	movf	??_menuChoice,w
 10022  043C  0021               	movlb	1	; select bank1
 10023  043D  07C3               	addwf	_delayCount^(0+128),f
 10024                           
 10025                           ;menu.c: 90: setpoint[choice]+=1;
 10026  043E  3542               	lslf	_choice^(0+128),w
 10027  043F  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10028  0440  0086               	movwf	6
 10029  0441  0187               	clrf	7
 10030  0442  3001               	movlw	1
 10031  0443  0781               	addwf	1,f
 10032  0444  3141               	addfsr 1,1
 10033  0445  1803               	skipnc
 10034  0446  0A81               	incf	1,f
 10035                           
 10036                           ;menu.c: 91: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10037  0447  3542               	lslf	_choice^(0+128),w
 10038  0448  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10039  0449  0086               	movwf	6
 10040  044A  0187               	clrf	7
 10041  044B  3F40               	moviw [0]fsr1
 10042  044C  0020               	movlb	0	; select bank0
 10043  044D  00AE               	movwf	??_menuChoice
 10044  044E  3F41               	moviw [1]fsr1
 10045  044F  00AF               	movwf	??_menuChoice+1
 10046  0450  0021               	movlb	1	; select bank1
 10047  0451  3542               	lslf	_choice^(0+128),w
 10048  0452  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10049  0453  0086               	movwf	6
 10050  0454  3001               	movlw	1	; select bank3/4
 10051  0455  0087               	movwf	7
 10052  0456  3F40               	moviw [0]fsr1
 10053  0457  0020               	movlb	0	; select bank0
 10054  0458  00B0               	movwf	??_menuChoice+2
 10055  0459  3F41               	moviw [1]fsr1
 10056  045A  00B1               	movwf	??_menuChoice+3
 10057  045B  082F               	movf	??_menuChoice+1,w
 10058  045C  0231               	subwf	??_menuChoice+3,w
 10059  045D  1D03               	skipz
 10060  045E  2C61               	goto	u3385
 10061  045F  082E               	movf	??_menuChoice,w
 10062  0460  0230               	subwf	??_menuChoice+2,w
 10063  0461                     u3385:	
 10064  0461  1803               	skipnc
 10065  0462  2C71               	goto	l2956
 10066  0463  0021               	movlb	1	; select bank1
 10067  0464  3542               	lslf	_choice^(0+128),w
 10068  0465  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10069  0466  0086               	movwf	6
 10070  0467  3001               	movlw	1	; select bank3/4
 10071  0468  0087               	movwf	7
 10072  0469  3542               	lslf	_choice^(0+128),w
 10073  046A  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10074  046B  0084               	movwf	4
 10075  046C  0185               	clrf	5
 10076  046D  3F40               	moviw [0]fsr1
 10077  046E  3F80               	movwi [0]fsr0
 10078  046F  3F41               	moviw [1]fsr1
 10079  0470  3F81               	movwi [1]fsr0
 10080  0471                     l2956:	
 10081                           
 10082                           ;menu.c: 92: { LCD_Set_Cursor(5,0); LCD_Write_Int(setpoint[choice],-1, 1, 0);};
 10083  0471  01F4               	clrf	LCD_Set_Cursor@y
 10084  0472  3005               	movlw	5
 10085  0473  3189  2167  3183   	fcall	_LCD_Set_Cursor
 10086  0476  0021               	movlb	1	; select bank1
 10087  0477  3542               	lslf	_choice^(0+128),w
 10088  0478  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10089  0479  0086               	movwf	6
 10090  047A  0187               	clrf	7
 10091  047B  3F40               	moviw [0]fsr1
 10092  047C  00F9               	movwf	LCD_Write_Int@value
 10093  047D  3F41               	moviw [1]fsr1
 10094  047E  00FA               	movwf	LCD_Write_Int@value+1
 10095  047F  01FB               	clrf	LCD_Write_Int@fieldLength
 10096  0480  03FB               	decf	LCD_Write_Int@fieldLength,f
 10097  0481  01FC               	clrf	LCD_Write_Int@numPlaces
 10098  0482  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10099  0483  01FD               	clrf	LCD_Write_Int@sign
 10100  0484  318E  265C  3183   	fcall	_LCD_Write_Int
 10101                           
 10102                           ;menu.c: 93: menuDelay=255;
 10103  0487  30FF               	movlw	255
 10104  0488  0020               	movlb	0	; select bank0
 10105  0489  00AE               	movwf	??_menuChoice
 10106  048A  082E               	movf	??_menuChoice,w
 10107  048B  0021               	movlb	1	; select bank1
 10108  048C  00C5               	movwf	_menuDelay^(0+128)
 10109                           
 10110                           ;menu.c: 94: if(delayCount<30)
 10111  048D  301E               	movlw	30
 10112  048E  0243               	subwf	_delayCount^(0+128),w
 10113  048F  1803               	skipnc
 10114  0490  2C9F               	goto	l420
 10115                           
 10116                           ;menu.c: 95: {
 10117                           ;menu.c: 96: _delay((unsigned long)((150)*(32000000/4000.0)));
 10118  0491  3007               	movlw	7
 10119  0492  0020               	movlb	0	; select bank0
 10120  0493  00B0               	movwf	??_menuChoice+2
 10121  0494  3017               	movlw	23
 10122  0495  00AF               	movwf	??_menuChoice+1
 10123  0496  306F               	movlw	111
 10124  0497  00AE               	movwf	??_menuChoice
 10125  0498                     u3657:	
 10126  0498  0BAE               	decfsz	??_menuChoice,f
 10127  0499  2C98               	goto	u3657
 10128  049A  0BAF               	decfsz	??_menuChoice+1,f
 10129  049B  2C98               	goto	u3657
 10130  049C  0BB0               	decfsz	??_menuChoice+2,f
 10131  049D  2C98               	goto	u3657
 10132  049E  0000               	nop
 10133  049F                     l420:	
 10134                           
 10135                           ;menu.c: 97: }
 10136                           ;menu.c: 98: if(delayCount>(30+10))delayCount=(30+10);
 10137  049F  3029               	movlw	41
 10138  04A0  0021               	movlb	1	; select bank1
 10139  04A1  0243               	subwf	_delayCount^(0+128),w
 10140  04A2  1C03               	skipc
 10141  04A3  2CAA               	goto	l2968
 10142  04A4  3028               	movlw	40
 10143  04A5  0020               	movlb	0	; select bank0
 10144  04A6  00AE               	movwf	??_menuChoice
 10145  04A7  082E               	movf	??_menuChoice,w
 10146  04A8  0021               	movlb	1	; select bank1
 10147  04A9  00C3               	movwf	_delayCount^(0+128)
 10148  04AA                     l2968:	
 10149                           
 10150                           ;menu.c: 100: timer=0;
 10151  04AA  01C0               	clrf	_timer^(0+128)
 10152  04AB  01C1               	clrf	(_timer+1)^(0+128)
 10153  04AC                     l2970:	
 10154                           
 10155                           ;menu.c: 101: }
 10156                           ;menu.c: 104: if(RB1==1)
 10157  04AC  0020               	movlb	0	; select bank0
 10158  04AD  1C8D               	btfss	13,1	;volatile
 10159  04AE  2D23               	goto	l2994
 10160                           
 10161                           ;menu.c: 105: {
 10162                           ;menu.c: 106: delayCount+=2;
 10163  04AF  3002               	movlw	2
 10164  04B0  00AE               	movwf	??_menuChoice
 10165  04B1  082E               	movf	??_menuChoice,w
 10166  04B2  0021               	movlb	1	; select bank1
 10167  04B3  07C3               	addwf	_delayCount^(0+128),f
 10168                           
 10169                           ;menu.c: 107: setpoint[choice]-=1;
 10170  04B4  3542               	lslf	_choice^(0+128),w
 10171  04B5  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10172  04B6  0086               	movwf	6
 10173  04B7  0187               	clrf	7
 10174  04B8  30FF               	movlw	255
 10175  04B9  0781               	addwf	1,f
 10176  04BA  3141               	addfsr 1,1
 10177  04BB  30FF               	movlw	255
 10178  04BC  3D81               	addwfc	1,f
 10179  04BD  317F               	addfsr 1,-1
 10180                           
 10181                           ;menu.c: 108: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10182  04BE  3542               	lslf	_choice^(0+128),w
 10183  04BF  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10184  04C0  0086               	movwf	6
 10185  04C1  3001               	movlw	1	; select bank3/4
 10186  04C2  0087               	movwf	7
 10187  04C3  3F40               	moviw [0]fsr1
 10188  04C4  0020               	movlb	0	; select bank0
 10189  04C5  00AE               	movwf	??_menuChoice
 10190  04C6  3F41               	moviw [1]fsr1
 10191  04C7  00AF               	movwf	??_menuChoice+1
 10192  04C8  0021               	movlb	1	; select bank1
 10193  04C9  3542               	lslf	_choice^(0+128),w
 10194  04CA  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10195  04CB  0086               	movwf	6
 10196  04CC  0187               	clrf	7
 10197  04CD  3F40               	moviw [0]fsr1
 10198  04CE  0020               	movlb	0	; select bank0
 10199  04CF  00B0               	movwf	??_menuChoice+2
 10200  04D0  3F41               	moviw [1]fsr1
 10201  04D1  00B1               	movwf	??_menuChoice+3
 10202  04D2  082F               	movf	??_menuChoice+1,w
 10203  04D3  0231               	subwf	??_menuChoice+3,w
 10204  04D4  1D03               	skipz
 10205  04D5  2CD8               	goto	u3425
 10206  04D6  082E               	movf	??_menuChoice,w
 10207  04D7  0230               	subwf	??_menuChoice+2,w
 10208  04D8                     u3425:	
 10209  04D8  1803               	skipnc
 10210  04D9  2CE8               	goto	l2980
 10211  04DA  0021               	movlb	1	; select bank1
 10212  04DB  3542               	lslf	_choice^(0+128),w
 10213  04DC  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10214  04DD  0086               	movwf	6
 10215  04DE  3001               	movlw	1	; select bank3/4
 10216  04DF  0087               	movwf	7
 10217  04E0  3542               	lslf	_choice^(0+128),w
 10218  04E1  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10219  04E2  0084               	movwf	4
 10220  04E3  0185               	clrf	5
 10221  04E4  3F40               	moviw [0]fsr1
 10222  04E5  3F80               	movwi [0]fsr0
 10223  04E6  3F41               	moviw [1]fsr1
 10224  04E7  3F81               	movwi [1]fsr0
 10225  04E8                     l2980:	
 10226                           
 10227                           ;menu.c: 109: { LCD_Set_Cursor(5,0); LCD_Write_Int(setpoint[choice],-1, 1, 0);};
 10228  04E8  01F4               	clrf	LCD_Set_Cursor@y
 10229  04E9  3005               	movlw	5
 10230  04EA  3189  2167  3183   	fcall	_LCD_Set_Cursor
 10231  04ED  0021               	movlb	1	; select bank1
 10232  04EE  3542               	lslf	_choice^(0+128),w
 10233  04EF  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10234  04F0  0086               	movwf	6
 10235  04F1  0187               	clrf	7
 10236  04F2  3F40               	moviw [0]fsr1
 10237  04F3  00F9               	movwf	LCD_Write_Int@value
 10238  04F4  3F41               	moviw [1]fsr1
 10239  04F5  00FA               	movwf	LCD_Write_Int@value+1
 10240  04F6  01FB               	clrf	LCD_Write_Int@fieldLength
 10241  04F7  03FB               	decf	LCD_Write_Int@fieldLength,f
 10242  04F8  01FC               	clrf	LCD_Write_Int@numPlaces
 10243  04F9  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10244  04FA  01FD               	clrf	LCD_Write_Int@sign
 10245  04FB  318E  265C  3183   	fcall	_LCD_Write_Int
 10246                           
 10247                           ;menu.c: 110: menuDelay=255;
 10248  04FE  30FF               	movlw	255
 10249  04FF  0020               	movlb	0	; select bank0
 10250  0500  00AE               	movwf	??_menuChoice
 10251  0501  082E               	movf	??_menuChoice,w
 10252  0502  0021               	movlb	1	; select bank1
 10253  0503  00C5               	movwf	_menuDelay^(0+128)
 10254                           
 10255                           ;menu.c: 112: if(delayCount<30)
 10256  0504  301E               	movlw	30
 10257  0505  0243               	subwf	_delayCount^(0+128),w
 10258  0506  1803               	skipnc
 10259  0507  2D16               	goto	l424
 10260                           
 10261                           ;menu.c: 113: {
 10262                           ;menu.c: 114: _delay((unsigned long)((150)*(32000000/4000.0)));
 10263  0508  3007               	movlw	7
 10264  0509  0020               	movlb	0	; select bank0
 10265  050A  00B0               	movwf	??_menuChoice+2
 10266  050B  3017               	movlw	23
 10267  050C  00AF               	movwf	??_menuChoice+1
 10268  050D  306F               	movlw	111
 10269  050E  00AE               	movwf	??_menuChoice
 10270  050F                     u3667:	
 10271  050F  0BAE               	decfsz	??_menuChoice,f
 10272  0510  2D0F               	goto	u3667
 10273  0511  0BAF               	decfsz	??_menuChoice+1,f
 10274  0512  2D0F               	goto	u3667
 10275  0513  0BB0               	decfsz	??_menuChoice+2,f
 10276  0514  2D0F               	goto	u3667
 10277  0515  0000               	nop
 10278  0516                     l424:	
 10279                           
 10280                           ;menu.c: 115: }
 10281                           ;menu.c: 117: if(delayCount>(30+10))delayCount=(30+10);
 10282  0516  3029               	movlw	41
 10283  0517  0021               	movlb	1	; select bank1
 10284  0518  0243               	subwf	_delayCount^(0+128),w
 10285  0519  1C03               	skipc
 10286  051A  2D21               	goto	l2992
 10287  051B  3028               	movlw	40
 10288  051C  0020               	movlb	0	; select bank0
 10289  051D  00AE               	movwf	??_menuChoice
 10290  051E  082E               	movf	??_menuChoice,w
 10291  051F  0021               	movlb	1	; select bank1
 10292  0520  00C3               	movwf	_delayCount^(0+128)
 10293  0521                     l2992:	
 10294                           
 10295                           ;menu.c: 119: timer=0;
 10296  0521  01C0               	clrf	_timer^(0+128)
 10297  0522  01C1               	clrf	(_timer+1)^(0+128)
 10298  0523                     l2994:	
 10299                           
 10300                           ;menu.c: 120: }
 10301                           ;menu.c: 122: if(delayCount>0)delayCount-=1;
 10302  0523  0021               	movlb	1	; select bank1
 10303  0524  0843               	movf	_delayCount^(0+128),w
 10304  0525  1903               	btfsc	3,2
 10305  0526  2D29               	goto	l2998
 10306  0527  3001               	movlw	1
 10307  0528  02C3               	subwf	_delayCount^(0+128),f
 10308  0529                     l2998:	
 10309                           
 10310                           ;menu.c: 124: if(!(RB1 || RB0))
 10311  0529  0020               	movlb	0	; select bank0
 10312  052A  1C8D               	btfss	13,1	;volatile
 10313  052B  180D               	btfsc	13,0	;volatile
 10314  052C  2D34               	goto	l3008
 10315                           
 10316                           ;menu.c: 125: {
 10317                           ;menu.c: 126: if(menuDelay>0)
 10318  052D  0021               	movlb	1	; select bank1
 10319  052E  0845               	movf	_menuDelay^(0+128),w
 10320  052F  1903               	btfsc	3,2
 10321  0530  2D34               	goto	l3008
 10322                           
 10323                           ;menu.c: 127: {
 10324                           ;menu.c: 128: loop=0;
 10325  0531  01ED               	clrf	_loop^(0+128)
 10326                           
 10327                           ;menu.c: 129: menuDelay-=1;
 10328  0532  3001               	movlw	1
 10329  0533  02C5               	subwf	_menuDelay^(0+128),f
 10330  0534                     l3008:	
 10331  0534  0020               	movlb	0	; select bank0
 10332  0535  190D               	btfsc	13,2	;volatile
 10333  0536  2D48               	goto	l3010
 10334                           
 10335                           ;menu.c: 77: {
 10336                           ;menu.c: 78: if(timer > 1000)
 10337  0537  0021               	movlb	1	; select bank1
 10338  0538  0841               	movf	(_timer+1)^(0+128),w
 10339  0539  3A80               	xorlw	128
 10340  053A  0020               	movlb	0	; select bank0
 10341  053B  00AE               	movwf	??_menuChoice
 10342  053C  3083               	movlw	131
 10343  053D  022E               	subwf	??_menuChoice,w
 10344  053E  1D03               	skipz
 10345  053F  2D43               	goto	u3365
 10346  0540  30E9               	movlw	233
 10347  0541  0021               	movlb	1	; select bank1
 10348  0542  0240               	subwf	_timer^(0+128),w
 10349  0543                     u3365:	
 10350  0543  1C03               	skipc
 10351  0544  2C31               	goto	l2944
 10352  0545                     l2942:	
 10353                           
 10354                           ;menu.c: 79: {
 10355                           ;menu.c: 80: timer = 0;
 10356  0545  0021               	movlb	1	; select bank1
 10357  0546  01C0               	clrf	_timer^(0+128)
 10358  0547  01C1               	clrf	(_timer+1)^(0+128)
 10359  0548                     l3010:	
 10360                           ;menu.c: 130: }
 10361                           ;menu.c: 131: }
 10362                           ;menu.c: 132: }
 10363                           ;menu.c: 133: Exit:
 10364                           
 10365                           
 10366                           ;menu.c: 134: timer=0;
 10367  0548  0021               	movlb	1	; select bank1
 10368  0549  01C0               	clrf	_timer^(0+128)
 10369  054A  01C1               	clrf	(_timer+1)^(0+128)
 10370  054B  0008               	return
 10371  054C                     __end_of_menuChoice:	
 10372                           
 10373                           	psect	text17
 10374  1782                     __ptext17:	
 10375 ;; *************** function _readKey *****************
 10376 ;; Defined at:
 10377 ;;		line 37 in file "menu.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      unsigned char 
 10384 ;; Registers used:
 10385 ;;		wreg, status,2, status,0
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;Total ram usage:        1 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_menuChoice
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function _readKey
 10406  1782                     _readKey:	
 10407                           
 10408                           ;menu.c: 39: if(RB1==1)
 10409                           
 10410                           ;incstack = 0
 10411                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10412  1782  0020               	movlb	0	; select bank0
 10413  1783  1C8D               	btfss	13,1	;volatile
 10414  1784  2F8B               	goto	l2656
 10415                           
 10416                           ;menu.c: 40: {
 10417                           ;menu.c: 41: if(key>0)key-=1;
 10418  1785  0021               	movlb	1	; select bank1
 10419  1786  0844               	movf	_key^(0+128),w
 10420  1787  1903               	btfsc	3,2
 10421  1788  2F8B               	goto	l2656
 10422  1789  3001               	movlw	1
 10423  178A  02C4               	subwf	_key^(0+128),f
 10424  178B                     l2656:	
 10425                           
 10426                           ;menu.c: 42: }
 10427                           ;menu.c: 44: if(RB0==1)
 10428  178B  0020               	movlb	0	; select bank0
 10429  178C  1C0D               	btfss	13,0	;volatile
 10430  178D  2F96               	goto	l2662
 10431                           
 10432                           ;menu.c: 45: {
 10433                           ;menu.c: 46: if(key<1)key+=1;
 10434  178E  0021               	movlb	1	; select bank1
 10435  178F  0844               	movf	_key^(0+128),w
 10436  1790  1D03               	btfss	3,2
 10437  1791  2F96               	goto	l2662
 10438  1792  3001               	movlw	1
 10439  1793  00F0               	movwf	??_readKey
 10440  1794  0870               	movf	??_readKey,w
 10441  1795  07C4               	addwf	_key^(0+128),f
 10442  1796                     l2662:	
 10443                           
 10444                           ;menu.c: 47: }
 10445                           ;menu.c: 49: return key;
 10446  1796  0021               	movlb	1	; select bank1
 10447  1797  0844               	movf	_key^(0+128),w
 10448  1798  0008               	return
 10449  1799                     __end_of_readKey:	
 10450                           
 10451                           	psect	text18
 10452  17CB                     __ptext18:	
 10453 ;; *************** function _LCD_Write_String *****************
 10454 ;; Defined at:
 10455 ;;		line 239 in file "lcd.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  a               2    5[COMMON] PTR const unsigned char 
 10458 ;;		 -> STR_8(17), STR_7(17), STR_6(11), STR_5(11), 
 10459 ;;		 -> STR_4(17), STR_3(17), STR_2(8), STR_1(5), 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  i               2    8[COMMON] int 
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  1    wreg      void 
 10464 ;; Registers used:
 10465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10466 ;; Tracked objects:
 10467 ;;		On entry : 0/0
 10468 ;;		On exit  : 0/0
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;Total ram usage:        5 bytes
 10476 ;; Hardware stack levels used:    1
 10477 ;; Hardware stack levels required when called:    2
 10478 ;; This function calls:
 10479 ;;		_LCD_Write_Char
 10480 ;; This function is called by:
 10481 ;;		_main
 10482 ;;		_menuChoice
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           
 10487                           ;psect for function _LCD_Write_String
 10488  17CB                     _LCD_Write_String:	
 10489                           
 10490                           ;lcd.c: 241: int i;
 10491                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10492                           
 10493                           ;incstack = 0
 10494                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10495  17CB  01F8               	clrf	LCD_Write_String@i
 10496  17CC  01F9               	clrf	LCD_Write_String@i+1
 10497  17CD                     l2510:	
 10498  17CD  0875               	movf	LCD_Write_String@a,w
 10499  17CE  0778               	addwf	LCD_Write_String@i,w
 10500  17CF  0084               	movwf	4
 10501  17D0  0876               	movf	LCD_Write_String@a+1,w
 10502  17D1  3D79               	addwfc	LCD_Write_String@i+1,w
 10503  17D2  0085               	movwf	5
 10504  17D3  0012               	moviw fsr0++
 10505  17D4  1903               	btfsc	3,2
 10506  17D5  0008               	return
 10507                           
 10508                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10509  17D6  0875               	movf	LCD_Write_String@a,w
 10510  17D7  0778               	addwf	LCD_Write_String@i,w
 10511  17D8  0084               	movwf	4
 10512  17D9  0876               	movf	LCD_Write_String@a+1,w
 10513  17DA  3D79               	addwfc	LCD_Write_String@i+1,w
 10514  17DB  0085               	movwf	5
 10515  17DC  0800               	movf	0,w	;code access
 10516  17DD  3188  2094  3197   	fcall	_LCD_Write_Char
 10517  17E0  3001               	movlw	1
 10518  17E1  07F8               	addwf	LCD_Write_String@i,f
 10519  17E2  3000               	movlw	0
 10520  17E3  3DF9               	addwfc	LCD_Write_String@i+1,f
 10521  17E4  2FCD               	goto	l2510
 10522  17E5                     __end_of_LCD_Write_String:	
 10523                           
 10524                           	psect	text19
 10525  0E5C                     __ptext19:	
 10526 ;; *************** function _LCD_Write_Int *****************
 10527 ;; Defined at:
 10528 ;;		line 246 in file "lcd.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  value           2    9[COMMON] int 
 10531 ;;  fieldLength     1   11[COMMON] char 
 10532 ;;  numPlaces       1   12[COMMON] char 
 10533 ;;  sign            1   13[COMMON] char 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  str             5    5[BANK0 ] unsigned char [5]
 10536 ;;  i               2   12[BANK0 ] int 
 10537 ;;  j               2   10[BANK0 ] int 
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10547 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;Total ram usage:       19 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    2
 10554 ;; This function calls:
 10555 ;;		_LCD_Write_Char
 10556 ;;		___awdiv
 10557 ;;		___awmod
 10558 ;; This function is called by:
 10559 ;;		_main
 10560 ;;		_menuChoice
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           
 10565                           ;psect for function _LCD_Write_Int
 10566  0E5C                     _LCD_Write_Int:	
 10567                           
 10568                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10569                           
 10570                           ;incstack = 0
 10571                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10572  0E5C  30C0               	movlw	low LCD_Write_Int@F13694
 10573  0E5D  0086               	movwf	6
 10574  0E5E  3001               	movlw	high LCD_Write_Int@F13694
 10575  0E5F  0087               	movwf	7
 10576  0E60  3025               	movlw	low LCD_Write_Int@str
 10577  0E61  0084               	movwf	4
 10578  0E62  3000               	movlw	high LCD_Write_Int@str
 10579  0E63  0085               	movwf	5
 10580  0E64  3005               	movlw	5
 10581  0E65  0020               	movlb	0	; select bank0
 10582  0E66  00A0               	movwf	??_LCD_Write_Int
 10583  0E67                     u2710:	
 10584  0E67  0016               	moviw fsr1++
 10585  0E68  001A               	movwi fsr0++
 10586  0E69  0BA0               	decfsz	??_LCD_Write_Int,f
 10587  0E6A  2E67               	goto	u2710
 10588                           
 10589                           ;lcd.c: 249: int i=4,j=0;
 10590  0E6B  3004               	movlw	4
 10591  0E6C  00AC               	movwf	LCD_Write_Int@i
 10592  0E6D  3000               	movlw	0
 10593  0E6E  00AD               	movwf	LCD_Write_Int@i+1
 10594  0E6F  01AA               	clrf	LCD_Write_Int@j
 10595  0E70  01AB               	clrf	LCD_Write_Int@j+1
 10596                           
 10597                           ;lcd.c: 251: if(value<0)
 10598  0E71  1FFA               	btfss	LCD_Write_Int@value+1,7
 10599  0E72  2E7D               	goto	l2524
 10600                           
 10601                           ;lcd.c: 252: {
 10602                           ;lcd.c: 253: LCD_Write_Char('-');
 10603  0E73  302D               	movlw	45
 10604  0E74  3188  2094  318E   	fcall	_LCD_Write_Char
 10605                           
 10606                           ;lcd.c: 254: value=value*-1;
 10607  0E77  09F9               	comf	LCD_Write_Int@value,f
 10608  0E78  09FA               	comf	LCD_Write_Int@value+1,f
 10609  0E79  0AF9               	incf	LCD_Write_Int@value,f
 10610  0E7A  1903               	skipnz
 10611  0E7B  0AFA               	incf	LCD_Write_Int@value+1,f
 10612                           
 10613                           ;lcd.c: 255: }
 10614  0E7C  2E84               	goto	l2534
 10615  0E7D                     l2524:	
 10616                           
 10617                           ;lcd.c: 257: else
 10618                           ;lcd.c: 258: {
 10619                           ;lcd.c: 259: if(sign == 1)
 10620  0E7D  037D               	decf	LCD_Write_Int@sign,w
 10621  0E7E  1D03               	btfss	3,2
 10622  0E7F  2E84               	goto	l2534
 10623                           
 10624                           ;lcd.c: 260: {
 10625                           ;lcd.c: 261: LCD_Write_Char('+');
 10626  0E80  302B               	movlw	43
 10627  0E81  3188  2094  318E   	fcall	_LCD_Write_Char
 10628  0E84                     l2534:	
 10629                           ;lcd.c: 262: }
 10630                           ;lcd.c: 263: }
 10631                           ;lcd.c: 265: while(value)
 10632                           
 10633  0E84  0879               	movf	LCD_Write_Int@value,w
 10634  0E85  047A               	iorwf	LCD_Write_Int@value+1,w
 10635  0E86  1903               	btfsc	3,2
 10636  0E87  2EB1               	goto	l2536
 10637                           
 10638                           ;lcd.c: 266: {
 10639                           ;lcd.c: 267: str[i]=value%10;
 10640  0E88  300A               	movlw	10
 10641  0E89  00F0               	movwf	___awmod@divisor
 10642  0E8A  3000               	movlw	0
 10643  0E8B  00F1               	movwf	___awmod@divisor+1
 10644  0E8C  087A               	movf	LCD_Write_Int@value+1,w
 10645  0E8D  00F3               	movwf	___awmod@dividend+1
 10646  0E8E  0879               	movf	LCD_Write_Int@value,w
 10647  0E8F  00F2               	movwf	___awmod@dividend
 10648  0E90  3189  21E8  318E   	fcall	___awmod
 10649  0E93  0870               	movf	?___awmod,w
 10650  0E94  0020               	movlb	0	; select bank0
 10651  0E95  00A0               	movwf	??_LCD_Write_Int
 10652  0E96  082C               	movf	LCD_Write_Int@i,w
 10653  0E97  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10654  0E98  0086               	movwf	6
 10655  0E99  0187               	clrf	7
 10656  0E9A  0820               	movf	??_LCD_Write_Int,w
 10657  0E9B  0081               	movwf	1
 10658                           
 10659                           ;lcd.c: 268: value=value/10;
 10660  0E9C  300A               	movlw	10
 10661  0E9D  00F0               	movwf	___awdiv@divisor
 10662  0E9E  3000               	movlw	0
 10663  0E9F  00F1               	movwf	___awdiv@divisor+1
 10664  0EA0  087A               	movf	LCD_Write_Int@value+1,w
 10665  0EA1  00F3               	movwf	___awdiv@dividend+1
 10666  0EA2  0879               	movf	LCD_Write_Int@value,w
 10667  0EA3  00F2               	movwf	___awdiv@dividend
 10668  0EA4  318A  222D  318E   	fcall	___awdiv
 10669  0EA7  0871               	movf	?___awdiv+1,w
 10670  0EA8  00FA               	movwf	LCD_Write_Int@value+1
 10671  0EA9  0870               	movf	?___awdiv,w
 10672  0EAA  00F9               	movwf	LCD_Write_Int@value
 10673                           
 10674                           ;lcd.c: 269: i--;
 10675  0EAB  30FF               	movlw	255
 10676  0EAC  0020               	movlb	0	; select bank0
 10677  0EAD  07AC               	addwf	LCD_Write_Int@i,f
 10678  0EAE  30FF               	movlw	255
 10679  0EAF  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10680  0EB0  2E84               	goto	l2534
 10681  0EB1                     l2536:	
 10682                           
 10683                           ;lcd.c: 270: }
 10684                           ;lcd.c: 271: if(fieldLength==-1)
 10685  0EB1  0A7B               	incf	LCD_Write_Int@fieldLength,w
 10686  0EB2  1903               	btfsc	3,2
 10687  0EB3  2EBA               	goto	l2542
 10688  0EB4  2EC3               	goto	l2544
 10689  0EB5                     l2540:	
 10690                           ;lcd.c: 272: {
 10691                           ;lcd.c: 273: while(str[j]==0)
 10692                           
 10693                           
 10694                           ;lcd.c: 274: {
 10695                           ;lcd.c: 275: j++;
 10696  0EB5  3001               	movlw	1
 10697  0EB6  0020               	movlb	0	; select bank0
 10698  0EB7  07AA               	addwf	LCD_Write_Int@j,f
 10699  0EB8  3000               	movlw	0
 10700  0EB9  3DAB               	addwfc	LCD_Write_Int@j+1,f
 10701  0EBA                     l2542:	
 10702  0EBA  0020               	movlb	0	; select bank0
 10703  0EBB  082A               	movf	LCD_Write_Int@j,w
 10704  0EBC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10705  0EBD  0086               	movwf	6
 10706  0EBE  0187               	clrf	7
 10707  0EBF  0801               	movf	1,w
 10708  0EC0  1D03               	btfss	3,2
 10709  0EC1  2ED4               	goto	l2546
 10710  0EC2  2EB5               	goto	l2540
 10711  0EC3                     l2544:	
 10712                           ;lcd.c: 276: }
 10713                           ;lcd.c: 277: }
 10714                           
 10715                           
 10716                           ;lcd.c: 278: else
 10717                           ;lcd.c: 279: {
 10718                           ;lcd.c: 280: j=5-fieldLength;
 10719  0EC3  087B               	movf	LCD_Write_Int@fieldLength,w
 10720  0EC4  0020               	movlb	0	; select bank0
 10721  0EC5  00A0               	movwf	??_LCD_Write_Int
 10722  0EC6  01A1               	clrf	??_LCD_Write_Int+1
 10723  0EC7  1BA0               	btfsc	??_LCD_Write_Int,7
 10724  0EC8  03A1               	decf	??_LCD_Write_Int+1,f
 10725  0EC9  09A0               	comf	??_LCD_Write_Int,f
 10726  0ECA  09A1               	comf	??_LCD_Write_Int+1,f
 10727  0ECB  0AA0               	incf	??_LCD_Write_Int,f
 10728  0ECC  1903               	skipnz
 10729  0ECD  0AA1               	incf	??_LCD_Write_Int+1,f
 10730  0ECE  0820               	movf	??_LCD_Write_Int,w
 10731  0ECF  3E05               	addlw	5
 10732  0ED0  00AA               	movwf	LCD_Write_Int@j
 10733  0ED1  3000               	movlw	0
 10734  0ED2  3D21               	addwfc	??_LCD_Write_Int+1,w
 10735  0ED3  00AB               	movwf	LCD_Write_Int@j+1
 10736  0ED4                     l2546:	
 10737                           
 10738                           ;lcd.c: 281: }
 10739                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10740  0ED4  082B               	movf	LCD_Write_Int@j+1,w
 10741  0ED5  00AD               	movwf	LCD_Write_Int@i+1
 10742  0ED6  082A               	movf	LCD_Write_Int@j,w
 10743  0ED7  00AC               	movwf	LCD_Write_Int@i
 10744  0ED8                     l2552:	
 10745  0ED8  087C               	movf	LCD_Write_Int@numPlaces,w
 10746  0ED9  00A0               	movwf	??_LCD_Write_Int
 10747  0EDA  01A1               	clrf	??_LCD_Write_Int+1
 10748  0EDB  1BA0               	btfsc	??_LCD_Write_Int,7
 10749  0EDC  03A1               	decf	??_LCD_Write_Int+1,f
 10750  0EDD  09A0               	comf	??_LCD_Write_Int,f
 10751  0EDE  09A1               	comf	??_LCD_Write_Int+1,f
 10752  0EDF  0AA0               	incf	??_LCD_Write_Int,f
 10753  0EE0  1903               	skipnz
 10754  0EE1  0AA1               	incf	??_LCD_Write_Int+1,f
 10755  0EE2  0820               	movf	??_LCD_Write_Int,w
 10756  0EE3  3E05               	addlw	5
 10757  0EE4  00A2               	movwf	??_LCD_Write_Int+2
 10758  0EE5  3000               	movlw	0
 10759  0EE6  3D21               	addwfc	??_LCD_Write_Int+1,w
 10760  0EE7  00A3               	movwf	??_LCD_Write_Int+3
 10761  0EE8  082D               	movf	LCD_Write_Int@i+1,w
 10762  0EE9  3A80               	xorlw	128
 10763  0EEA  00A4               	movwf	??_LCD_Write_Int+4
 10764  0EEB  0823               	movf	??_LCD_Write_Int+3,w
 10765  0EEC  3A80               	xorlw	128
 10766  0EED  0224               	subwf	??_LCD_Write_Int+4,w
 10767  0EEE  1D03               	skipz
 10768  0EEF  2EF2               	goto	u2775
 10769  0EF0  0822               	movf	??_LCD_Write_Int+2,w
 10770  0EF1  022C               	subwf	LCD_Write_Int@i,w
 10771  0EF2                     u2775:	
 10772  0EF2  1803               	btfsc	3,0
 10773  0EF3  2F04               	goto	l2554
 10774                           
 10775                           ;lcd.c: 284: {
 10776                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10777  0EF4  0020               	movlb	0	; select bank0
 10778  0EF5  082C               	movf	LCD_Write_Int@i,w
 10779  0EF6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10780  0EF7  0086               	movwf	6
 10781  0EF8  0187               	clrf	7
 10782  0EF9  0801               	movf	1,w
 10783  0EFA  3E30               	addlw	48
 10784  0EFB  3188  2094  318E   	fcall	_LCD_Write_Char
 10785  0EFE  3001               	movlw	1
 10786  0EFF  0020               	movlb	0	; select bank0
 10787  0F00  07AC               	addwf	LCD_Write_Int@i,f
 10788  0F01  3000               	movlw	0
 10789  0F02  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10790  0F03  2ED8               	goto	l2552
 10791  0F04                     l2554:	
 10792                           
 10793                           ;lcd.c: 286: }
 10794                           ;lcd.c: 288: if(numPlaces == 1)
 10795  0F04  037C               	decf	LCD_Write_Int@numPlaces,w
 10796  0F05  1D03               	btfss	3,2
 10797  0F06  2F11               	goto	l2558
 10798                           
 10799                           ;lcd.c: 289: {
 10800                           ;lcd.c: 290: LCD_Write_Char(46);
 10801  0F07  302E               	movlw	46
 10802  0F08  3188  2094  318E   	fcall	_LCD_Write_Char
 10803                           
 10804                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10805  0F0B  0020               	movlb	0	; select bank0
 10806  0F0C  0829               	movf	LCD_Write_Int@str+4,w
 10807  0F0D  3E30               	addlw	48
 10808  0F0E  3188  2094  318E   	fcall	_LCD_Write_Char
 10809  0F11                     l2558:	
 10810                           
 10811                           ;lcd.c: 292: }
 10812                           ;lcd.c: 294: if(numPlaces == 2)
 10813  0F11  3002               	movlw	2
 10814  0F12  067C               	xorwf	LCD_Write_Int@numPlaces,w
 10815  0F13  1D03               	btfss	3,2
 10816  0F14  0008               	return
 10817                           
 10818                           ;lcd.c: 295: {
 10819                           ;lcd.c: 296: LCD_Write_Char(46);
 10820  0F15  302E               	movlw	46
 10821  0F16  3188  2094  318E   	fcall	_LCD_Write_Char
 10822                           
 10823                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10824  0F19  0020               	movlb	0	; select bank0
 10825  0F1A  0828               	movf	LCD_Write_Int@str+3,w
 10826  0F1B  3E30               	addlw	48
 10827  0F1C  3188  2094  318E   	fcall	_LCD_Write_Char
 10828                           
 10829                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10830  0F1F  0020               	movlb	0	; select bank0
 10831  0F20  0829               	movf	LCD_Write_Int@str+4,w
 10832  0F21  3E30               	addlw	48
 10833  0F22  3188  2094         	fcall	_LCD_Write_Char
 10834  0F24  0008               	return
 10835  0F25                     __end_of_LCD_Write_Int:	
 10836                           
 10837                           	psect	text20
 10838  09E8                     __ptext20:	
 10839 ;; *************** function ___awmod *****************
 10840 ;; Defined at:
 10841 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  divisor         2    0[COMMON] int 
 10844 ;;  dividend        2    2[COMMON] int 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  sign            1    6[COMMON] unsigned char 
 10847 ;;  counter         1    5[COMMON] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2    0[COMMON] int 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;Total ram usage:        7 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		_LCD_Write_Int
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           
 10871                           ;psect for function ___awmod
 10872  09E8                     ___awmod:	
 10873                           
 10874                           ;incstack = 0
 10875                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10876  09E8  01F6               	clrf	___awmod@sign
 10877  09E9  1FF3               	btfss	___awmod@dividend+1,7
 10878  09EA  29F2               	goto	l2316
 10879  09EB  09F2               	comf	___awmod@dividend,f
 10880  09EC  09F3               	comf	___awmod@dividend+1,f
 10881  09ED  0AF2               	incf	___awmod@dividend,f
 10882  09EE  1903               	skipnz
 10883  09EF  0AF3               	incf	___awmod@dividend+1,f
 10884  09F0  01F6               	clrf	___awmod@sign
 10885  09F1  0AF6               	incf	___awmod@sign,f
 10886  09F2                     l2316:	
 10887  09F2  1FF1               	btfss	___awmod@divisor+1,7
 10888  09F3  29F9               	goto	l2320
 10889  09F4  09F0               	comf	___awmod@divisor,f
 10890  09F5  09F1               	comf	___awmod@divisor+1,f
 10891  09F6  0AF0               	incf	___awmod@divisor,f
 10892  09F7  1903               	skipnz
 10893  09F8  0AF1               	incf	___awmod@divisor+1,f
 10894  09F9                     l2320:	
 10895  09F9  0870               	movf	___awmod@divisor,w
 10896  09FA  0471               	iorwf	___awmod@divisor+1,w
 10897  09FB  1903               	btfsc	3,2
 10898  09FC  2A20               	goto	l2338
 10899  09FD  01F5               	clrf	___awmod@counter
 10900  09FE  0AF5               	incf	___awmod@counter,f
 10901  09FF                     l2328:	
 10902  09FF  1BF1               	btfsc	___awmod@divisor+1,7
 10903  0A00  2A0B               	goto	l2330
 10904  0A01  3001               	movlw	1
 10905  0A02                     u2515:	
 10906  0A02  35F0               	lslf	___awmod@divisor,f
 10907  0A03  0DF1               	rlf	___awmod@divisor+1,f
 10908  0A04  0B89               	decfsz	9,f
 10909  0A05  2A02               	goto	u2515
 10910  0A06  3001               	movlw	1
 10911  0A07  00F4               	movwf	??___awmod
 10912  0A08  0874               	movf	??___awmod,w
 10913  0A09  07F5               	addwf	___awmod@counter,f
 10914  0A0A  29FF               	goto	l2328
 10915  0A0B                     l2330:	
 10916  0A0B  0871               	movf	___awmod@divisor+1,w
 10917  0A0C  0273               	subwf	___awmod@dividend+1,w
 10918  0A0D  1D03               	skipz
 10919  0A0E  2A11               	goto	u2535
 10920  0A0F  0870               	movf	___awmod@divisor,w
 10921  0A10  0272               	subwf	___awmod@dividend,w
 10922  0A11                     u2535:	
 10923  0A11  1C03               	skipc
 10924  0A12  2A17               	goto	l2334
 10925  0A13  0870               	movf	___awmod@divisor,w
 10926  0A14  02F2               	subwf	___awmod@dividend,f
 10927  0A15  0871               	movf	___awmod@divisor+1,w
 10928  0A16  3BF3               	subwfb	___awmod@dividend+1,f
 10929  0A17                     l2334:	
 10930  0A17  3001               	movlw	1
 10931  0A18                     u2545:	
 10932  0A18  36F1               	lsrf	___awmod@divisor+1,f
 10933  0A19  0CF0               	rrf	___awmod@divisor,f
 10934  0A1A  0B89               	decfsz	9,f
 10935  0A1B  2A18               	goto	u2545
 10936  0A1C  3001               	movlw	1
 10937  0A1D  02F5               	subwf	___awmod@counter,f
 10938  0A1E  1D03               	btfss	3,2
 10939  0A1F  2A0B               	goto	l2330
 10940  0A20                     l2338:	
 10941  0A20  0876               	movf	___awmod@sign,w
 10942  0A21  1903               	btfsc	3,2
 10943  0A22  2A28               	goto	l2342
 10944  0A23  09F2               	comf	___awmod@dividend,f
 10945  0A24  09F3               	comf	___awmod@dividend+1,f
 10946  0A25  0AF2               	incf	___awmod@dividend,f
 10947  0A26  1903               	skipnz
 10948  0A27  0AF3               	incf	___awmod@dividend+1,f
 10949  0A28                     l2342:	
 10950  0A28  0873               	movf	___awmod@dividend+1,w
 10951  0A29  00F1               	movwf	?___awmod+1
 10952  0A2A  0872               	movf	___awmod@dividend,w
 10953  0A2B  00F0               	movwf	?___awmod
 10954  0A2C  0008               	return
 10955  0A2D                     __end_of___awmod:	
 10956                           
 10957                           	psect	text21
 10958  0A2D                     __ptext21:	
 10959 ;; *************** function ___awdiv *****************
 10960 ;; Defined at:
 10961 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  divisor         2    0[COMMON] int 
 10964 ;;  dividend        2    2[COMMON] int 
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  quotient        2    7[COMMON] int 
 10967 ;;  sign            1    6[COMMON] unsigned char 
 10968 ;;  counter         1    5[COMMON] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  2    0[COMMON] int 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        9 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_LCD_Write_Int
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           
 10992                           ;psect for function ___awdiv
 10993  0A2D                     ___awdiv:	
 10994                           
 10995                           ;incstack = 0
 10996                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10997  0A2D  01F6               	clrf	___awdiv@sign
 10998  0A2E  1FF1               	btfss	___awdiv@divisor+1,7
 10999  0A2F  2A37               	goto	l2272
 11000  0A30  09F0               	comf	___awdiv@divisor,f
 11001  0A31  09F1               	comf	___awdiv@divisor+1,f
 11002  0A32  0AF0               	incf	___awdiv@divisor,f
 11003  0A33  1903               	skipnz
 11004  0A34  0AF1               	incf	___awdiv@divisor+1,f
 11005  0A35  01F6               	clrf	___awdiv@sign
 11006  0A36  0AF6               	incf	___awdiv@sign,f
 11007  0A37                     l2272:	
 11008  0A37  1FF3               	btfss	___awdiv@dividend+1,7
 11009  0A38  2A42               	goto	l2278
 11010  0A39  09F2               	comf	___awdiv@dividend,f
 11011  0A3A  09F3               	comf	___awdiv@dividend+1,f
 11012  0A3B  0AF2               	incf	___awdiv@dividend,f
 11013  0A3C  1903               	skipnz
 11014  0A3D  0AF3               	incf	___awdiv@dividend+1,f
 11015  0A3E  3001               	movlw	1
 11016  0A3F  00F4               	movwf	??___awdiv
 11017  0A40  0874               	movf	??___awdiv,w
 11018  0A41  06F6               	xorwf	___awdiv@sign,f
 11019  0A42                     l2278:	
 11020  0A42  01F7               	clrf	___awdiv@quotient
 11021  0A43  01F8               	clrf	___awdiv@quotient+1
 11022  0A44  0870               	movf	___awdiv@divisor,w
 11023  0A45  0471               	iorwf	___awdiv@divisor+1,w
 11024  0A46  1903               	btfsc	3,2
 11025  0A47  2A71               	goto	l2300
 11026  0A48  01F5               	clrf	___awdiv@counter
 11027  0A49  0AF5               	incf	___awdiv@counter,f
 11028  0A4A                     l2288:	
 11029  0A4A  1BF1               	btfsc	___awdiv@divisor+1,7
 11030  0A4B  2A56               	goto	l2290
 11031  0A4C  3001               	movlw	1
 11032  0A4D                     u2415:	
 11033  0A4D  35F0               	lslf	___awdiv@divisor,f
 11034  0A4E  0DF1               	rlf	___awdiv@divisor+1,f
 11035  0A4F  0B89               	decfsz	9,f
 11036  0A50  2A4D               	goto	u2415
 11037  0A51  3001               	movlw	1
 11038  0A52  00F4               	movwf	??___awdiv
 11039  0A53  0874               	movf	??___awdiv,w
 11040  0A54  07F5               	addwf	___awdiv@counter,f
 11041  0A55  2A4A               	goto	l2288
 11042  0A56                     l2290:	
 11043  0A56  3001               	movlw	1
 11044  0A57                     u2435:	
 11045  0A57  35F7               	lslf	___awdiv@quotient,f
 11046  0A58  0DF8               	rlf	___awdiv@quotient+1,f
 11047  0A59  0B89               	decfsz	9,f
 11048  0A5A  2A57               	goto	u2435
 11049  0A5B  0871               	movf	___awdiv@divisor+1,w
 11050  0A5C  0273               	subwf	___awdiv@dividend+1,w
 11051  0A5D  1D03               	skipz
 11052  0A5E  2A61               	goto	u2445
 11053  0A5F  0870               	movf	___awdiv@divisor,w
 11054  0A60  0272               	subwf	___awdiv@dividend,w
 11055  0A61                     u2445:	
 11056  0A61  1C03               	skipc
 11057  0A62  2A68               	goto	l2296
 11058  0A63  0870               	movf	___awdiv@divisor,w
 11059  0A64  02F2               	subwf	___awdiv@dividend,f
 11060  0A65  0871               	movf	___awdiv@divisor+1,w
 11061  0A66  3BF3               	subwfb	___awdiv@dividend+1,f
 11062  0A67  1477               	bsf	___awdiv@quotient,0
 11063  0A68                     l2296:	
 11064  0A68  3001               	movlw	1
 11065  0A69                     u2455:	
 11066  0A69  36F1               	lsrf	___awdiv@divisor+1,f
 11067  0A6A  0CF0               	rrf	___awdiv@divisor,f
 11068  0A6B  0B89               	decfsz	9,f
 11069  0A6C  2A69               	goto	u2455
 11070  0A6D  3001               	movlw	1
 11071  0A6E  02F5               	subwf	___awdiv@counter,f
 11072  0A6F  1D03               	btfss	3,2
 11073  0A70  2A56               	goto	l2290
 11074  0A71                     l2300:	
 11075  0A71  0876               	movf	___awdiv@sign,w
 11076  0A72  1903               	btfsc	3,2
 11077  0A73  2A79               	goto	l2304
 11078  0A74  09F7               	comf	___awdiv@quotient,f
 11079  0A75  09F8               	comf	___awdiv@quotient+1,f
 11080  0A76  0AF7               	incf	___awdiv@quotient,f
 11081  0A77  1903               	skipnz
 11082  0A78  0AF8               	incf	___awdiv@quotient+1,f
 11083  0A79                     l2304:	
 11084  0A79  0878               	movf	___awdiv@quotient+1,w
 11085  0A7A  00F1               	movwf	?___awdiv+1
 11086  0A7B  0877               	movf	___awdiv@quotient,w
 11087  0A7C  00F0               	movwf	?___awdiv
 11088  0A7D  0008               	return
 11089  0A7E                     __end_of___awdiv:	
 11090                           
 11091                           	psect	text22
 11092  0967                     __ptext22:	
 11093 ;; *************** function _LCD_Set_Cursor *****************
 11094 ;; Defined at:
 11095 ;;		line 82 in file "lcd.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  x               1    wreg     unsigned char 
 11098 ;;  y               1    4[COMMON] unsigned char 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  x               1    7[COMMON] unsigned char 
 11101 ;;  temp            1   10[COMMON] unsigned char 
 11102 ;;  w               1    9[COMMON] unsigned char 
 11103 ;;  z               1    8[COMMON] unsigned char 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0, pclath, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;Total ram usage:        7 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		_LCD_Cmd
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;;		_menuChoice
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           
 11129                           ;psect for function _LCD_Set_Cursor
 11130  0967                     _LCD_Set_Cursor:	
 11131                           
 11132                           ;incstack = 0
 11133                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11134                           ;LCD_Set_Cursor@x stored from wreg
 11135  0967  00F7               	movwf	LCD_Set_Cursor@x
 11136                           
 11137                           ;lcd.c: 86: char temp,z,w;
 11138                           ;lcd.c: 88: if(y == 0)
 11139  0968  0874               	movf	LCD_Set_Cursor@y,w
 11140  0969  1D03               	btfss	3,2
 11141  096A  2987               	goto	l2460
 11142                           
 11143                           ;lcd.c: 89: {
 11144                           ;lcd.c: 90: temp = 0x80 + x;
 11145  096B  0877               	movf	LCD_Set_Cursor@x,w
 11146  096C  3E80               	addlw	128
 11147  096D  00F5               	movwf	??_LCD_Set_Cursor
 11148  096E  0875               	movf	??_LCD_Set_Cursor,w
 11149  096F  00FA               	movwf	LCD_Set_Cursor@temp
 11150                           
 11151                           ;lcd.c: 91: z = temp>>4;
 11152  0970  087A               	movf	LCD_Set_Cursor@temp,w
 11153  0971  00F5               	movwf	??_LCD_Set_Cursor
 11154  0972  3004               	movlw	4
 11155  0973                     u2675:	
 11156  0973  36F5               	lsrf	??_LCD_Set_Cursor,f
 11157  0974  0B89               	decfsz	9,f
 11158  0975  2973               	goto	u2675
 11159  0976  0875               	movf	??_LCD_Set_Cursor,w
 11160  0977  00F6               	movwf	??_LCD_Set_Cursor+1
 11161  0978  0876               	movf	??_LCD_Set_Cursor+1,w
 11162  0979  00F8               	movwf	LCD_Set_Cursor@z
 11163                           
 11164                           ;lcd.c: 92: w = temp & 0x0F;
 11165  097A  087A               	movf	LCD_Set_Cursor@temp,w
 11166  097B  390F               	andlw	15
 11167  097C  00F5               	movwf	??_LCD_Set_Cursor
 11168  097D  0875               	movf	??_LCD_Set_Cursor,w
 11169  097E  00F9               	movwf	LCD_Set_Cursor@w
 11170                           
 11171                           ;lcd.c: 93: LCD_Cmd(z);
 11172  097F  0878               	movf	LCD_Set_Cursor@z,w
 11173  0980  3197  2758  3189   	fcall	_LCD_Cmd
 11174                           
 11175                           ;lcd.c: 94: LCD_Cmd(w);
 11176  0983  0879               	movf	LCD_Set_Cursor@w,w
 11177  0984  3197  2758         	fcall	_LCD_Cmd
 11178                           
 11179                           ;lcd.c: 95: }
 11180  0986  0008               	return
 11181  0987                     l2460:	
 11182                           
 11183                           ;lcd.c: 97: else if(y == 1)
 11184  0987  0374               	decf	LCD_Set_Cursor@y,w
 11185  0988  1D03               	btfss	3,2
 11186  0989  0008               	return
 11187                           
 11188                           ;lcd.c: 98: {
 11189                           ;lcd.c: 99: temp = 0xC0 + x;
 11190  098A  0877               	movf	LCD_Set_Cursor@x,w
 11191  098B  3EC0               	addlw	192
 11192  098C  00F5               	movwf	??_LCD_Set_Cursor
 11193  098D  0875               	movf	??_LCD_Set_Cursor,w
 11194  098E  00FA               	movwf	LCD_Set_Cursor@temp
 11195                           
 11196                           ;lcd.c: 100: z = temp>>4;
 11197  098F  087A               	movf	LCD_Set_Cursor@temp,w
 11198  0990  00F5               	movwf	??_LCD_Set_Cursor
 11199  0991  3004               	movlw	4
 11200  0992                     u2695:	
 11201  0992  36F5               	lsrf	??_LCD_Set_Cursor,f
 11202  0993  0B89               	decfsz	9,f
 11203  0994  2992               	goto	u2695
 11204  0995  0875               	movf	??_LCD_Set_Cursor,w
 11205  0996  00F6               	movwf	??_LCD_Set_Cursor+1
 11206  0997  0876               	movf	??_LCD_Set_Cursor+1,w
 11207  0998  00F8               	movwf	LCD_Set_Cursor@z
 11208                           
 11209                           ;lcd.c: 101: w = temp & 0x0F;
 11210  0999  087A               	movf	LCD_Set_Cursor@temp,w
 11211  099A  390F               	andlw	15
 11212  099B  00F5               	movwf	??_LCD_Set_Cursor
 11213  099C  0875               	movf	??_LCD_Set_Cursor,w
 11214  099D  00F9               	movwf	LCD_Set_Cursor@w
 11215                           
 11216                           ;lcd.c: 102: LCD_Cmd(z);
 11217  099E  0878               	movf	LCD_Set_Cursor@z,w
 11218  099F  3197  2758  3189   	fcall	_LCD_Cmd
 11219                           
 11220                           ;lcd.c: 103: LCD_Cmd(w);
 11221  09A2  0879               	movf	LCD_Set_Cursor@w,w
 11222  09A3  3197  2758         	fcall	_LCD_Cmd
 11223  09A5  0008               	return
 11224  09A6                     __end_of_LCD_Set_Cursor:	
 11225                           
 11226                           	psect	text23
 11227  09A6                     __ptext23:	
 11228 ;; *************** function _SYSTEM_Initialize *****************
 11229 ;; Defined at:
 11230 ;;		line 71 in file "system.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;Total ram usage:        3 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    3
 11251 ;; This function calls:
 11252 ;;		_ADCC_Initialize
 11253 ;;		_InitCustomChars
 11254 ;;		_LCD_Clear
 11255 ;;		_LCD_Init
 11256 ;;		_OSCILLATOR_Initialize
 11257 ;;		_PIN_MANAGER_Initialize
 11258 ;;		_PWM_Initialize
 11259 ;;		_TMR2_Initialize
 11260 ;; This function is called by:
 11261 ;;		_main
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           
 11266                           ;psect for function _SYSTEM_Initialize
 11267  09A6                     _SYSTEM_Initialize:	
 11268                           
 11269                           ;system.c: 73: PIN_MANAGER_Initialize();
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11273  09A6  3188  20C0  3189   	fcall	_PIN_MANAGER_Initialize
 11274                           
 11275                           ;system.c: 74: OSCILLATOR_Initialize();
 11276  09A9  3197  2711  3189   	fcall	_OSCILLATOR_Initialize
 11277                           
 11278                           ;system.c: 75: FVRCON = 0x00;
 11279  09AC  0032               	movlb	18	; select bank18
 11280  09AD  018C               	clrf	12	;volatile
 11281                           
 11282                           ;system.c: 76: ADCC_Initialize();
 11283  09AE  3197  27B1  3189   	fcall	_ADCC_Initialize
 11284                           
 11285                           ;system.c: 77: PWM_Initialize();
 11286  09B1  3197  271A  3189   	fcall	_PWM_Initialize
 11287                           
 11288                           ;system.c: 79: TMR2_Initialize();
 11289  09B4  3197  274A  3189   	fcall	_TMR2_Initialize
 11290                           
 11291                           ;system.c: 80: LCD_Init(0X00);
 11292  09B7  3000               	movlw	0
 11293  09B8  318B  23C8  3189   	fcall	_LCD_Init
 11294                           
 11295                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11296  09BB  3009               	movlw	9
 11297  09BC  00FA               	movwf	??_SYSTEM_Initialize+2
 11298  09BD  301E               	movlw	30
 11299  09BE  00F9               	movwf	??_SYSTEM_Initialize+1
 11300  09BF  30EB               	movlw	235
 11301  09C0  00F8               	movwf	??_SYSTEM_Initialize
 11302  09C1                     u3677:	
 11303  09C1  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11304  09C2  29C1               	goto	u3677
 11305  09C3  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11306  09C4  29C1               	goto	u3677
 11307  09C5  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11308  09C6  29C1               	goto	u3677
 11309  09C7  0000               	nop
 11310                           
 11311                           ;system.c: 82: LCD_Clear();
 11312  09C8  3197  2709  3189   	fcall	_LCD_Clear
 11313                           
 11314                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11315  09CB  3005               	movlw	5
 11316  09CC  00FA               	movwf	??_SYSTEM_Initialize+2
 11317  09CD  300F               	movlw	15
 11318  09CE  00F9               	movwf	??_SYSTEM_Initialize+1
 11319  09CF  30F4               	movlw	244
 11320  09D0  00F8               	movwf	??_SYSTEM_Initialize
 11321  09D1                     u3687:	
 11322  09D1  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11323  09D2  29D1               	goto	u3687
 11324  09D3  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11325  09D4  29D1               	goto	u3687
 11326  09D5  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11327  09D6  29D1               	goto	u3687
 11328                           
 11329                           ;system.c: 84: InitCustomChars();
 11330  09D7  3188  206E  3189   	fcall	_InitCustomChars
 11331                           
 11332                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11333  09DA  3009               	movlw	9
 11334  09DB  00FA               	movwf	??_SYSTEM_Initialize+2
 11335  09DC  301E               	movlw	30
 11336  09DD  00F9               	movwf	??_SYSTEM_Initialize+1
 11337  09DE  30EB               	movlw	235
 11338  09DF  00F8               	movwf	??_SYSTEM_Initialize
 11339  09E0                     u3697:	
 11340  09E0  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11341  09E1  29E0               	goto	u3697
 11342  09E2  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11343  09E3  29E0               	goto	u3697
 11344  09E4  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11345  09E5  29E0               	goto	u3697
 11346  09E6  0000               	nop
 11347  09E7  0008               	return
 11348  09E8                     __end_of_SYSTEM_Initialize:	
 11349                           
 11350                           	psect	text24
 11351  174A                     __ptext24:	
 11352 ;; *************** function _TMR2_Initialize *****************
 11353 ;; Defined at:
 11354 ;;		line 3 in file "tmr2.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;		None
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  1    wreg      void 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;Total ram usage:        0 bytes
 11373 ;; Hardware stack levels used:    1
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_SYSTEM_Initialize
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           
 11382                           ;psect for function _TMR2_Initialize
 11383  174A                     _TMR2_Initialize:	
 11384                           
 11385                           ;tmr2.c: 5: T2CON = 0x00;
 11386                           
 11387                           ;incstack = 0
 11388                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11389  174A  0025               	movlb	5	; select bank5
 11390  174B  018E               	clrf	14	;volatile
 11391                           
 11392                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11393  174C  3001               	movlw	1
 11394  174D  0090               	movwf	16	;volatile
 11395                           
 11396                           ;tmr2.c: 9: T2HLT = 0x00;
 11397  174E  018F               	clrf	15	;volatile
 11398                           
 11399                           ;tmr2.c: 11: T2RST = 0x00;
 11400  174F  0191               	clrf	17	;volatile
 11401                           
 11402                           ;tmr2.c: 13: T2PR = 0xFF;
 11403  1750  30FF               	movlw	255
 11404  1751  008D               	movwf	13	;volatile
 11405                           
 11406                           ;tmr2.c: 15: T2TMR = 0x00;
 11407  1752  018C               	clrf	12	;volatile
 11408                           
 11409                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11410  1753  002E               	movlb	14	; select bank14
 11411  1754  1090               	bcf	16,1	;volatile
 11412                           
 11413                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11414  1755  0025               	movlb	5	; select bank5
 11415  1756  178E               	bsf	14,7	;volatile
 11416  1757  0008               	return
 11417  1758                     __end_of_TMR2_Initialize:	
 11418                           
 11419                           	psect	text25
 11420  171A                     __ptext25:	
 11421 ;; *************** function _PWM_Initialize *****************
 11422 ;; Defined at:
 11423 ;;		line 3 in file "pwm.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; This function calls:
 11444 ;;		Nothing
 11445 ;; This function is called by:
 11446 ;;		_SYSTEM_Initialize
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           
 11451                           ;psect for function _PWM_Initialize
 11452  171A                     _PWM_Initialize:	
 11453                           
 11454                           ;pwm.c: 14: PWM7CON = 0x80;
 11455                           
 11456                           ;incstack = 0
 11457                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11458  171A  3080               	movlw	128
 11459  171B  0027               	movlb	7	; select bank7
 11460  171C  0092               	movwf	18	;volatile
 11461                           
 11462                           ;pwm.c: 16: PWM7DCH = 0x00;
 11463  171D  0191               	clrf	17	;volatile
 11464                           
 11465                           ;pwm.c: 18: PWM7DCL = 0x00;
 11466  171E  0190               	clrf	16	;volatile
 11467                           
 11468                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11469  171F  0024               	movlb	4	; select bank4
 11470  1720  081F               	movf	31,w	;volatile
 11471  1721  39F3               	andlw	-13
 11472  1722  3804               	iorlw	4
 11473  1723  009F               	movwf	31	;volatile
 11474  1724  0008               	return
 11475  1725                     __end_of_PWM_Initialize:	
 11476                           
 11477                           	psect	text26
 11478  08C0                     __ptext26:	
 11479 ;; *************** function _PIN_MANAGER_Initialize *****************
 11480 ;; Defined at:
 11481 ;;		line 5 in file "pin_manager.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  state           1    0[COMMON] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      void 
 11488 ;; Registers used:
 11489 ;;		wreg, status,2
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        1 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; This function calls:
 11502 ;;		Nothing
 11503 ;; This function is called by:
 11504 ;;		_SYSTEM_Initialize
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           
 11509                           ;psect for function _PIN_MANAGER_Initialize
 11510  08C0                     _PIN_MANAGER_Initialize:	
 11511                           
 11512                           ;pin_manager.c: 7: LATA = 0x00;
 11513                           
 11514                           ;incstack = 0
 11515                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11516  08C0  0020               	movlb	0	; select bank0
 11517  08C1  0196               	clrf	22	;volatile
 11518                           
 11519                           ;pin_manager.c: 8: LATB = 0x00;
 11520  08C2  0197               	clrf	23	;volatile
 11521                           
 11522                           ;pin_manager.c: 9: LATC = 0x00;
 11523  08C3  0198               	clrf	24	;volatile
 11524                           
 11525                           ;pin_manager.c: 11: WPUA = 0x00;
 11526  08C4  003E               	movlb	30	; select bank30
 11527  08C5  01B9               	clrf	57	;volatile
 11528                           
 11529                           ;pin_manager.c: 12: WPUB = 0x00;
 11530  08C6  01C4               	clrf	68	;volatile
 11531                           
 11532                           ;pin_manager.c: 13: WPUC = 0x00;
 11533  08C7  01CF               	clrf	79	;volatile
 11534                           
 11535                           ;pin_manager.c: 14: WPUE = 0x8;
 11536  08C8  3008               	movlw	8
 11537  08C9  00E5               	movwf	101	;volatile
 11538                           
 11539                           ;pin_manager.c: 16: TRISA = 0x0A;
 11540  08CA  300A               	movlw	10
 11541  08CB  0020               	movlb	0	; select bank0
 11542  08CC  0091               	movwf	17	;volatile
 11543                           
 11544                           ;pin_manager.c: 17: TRISB = 0x07;
 11545  08CD  3007               	movlw	7
 11546  08CE  0092               	movwf	18	;volatile
 11547                           
 11548                           ;pin_manager.c: 18: TRISC = 0x00;
 11549  08CF  0193               	clrf	19	;volatile
 11550                           
 11551                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11552  08D0  300A               	movlw	10
 11553  08D1  003E               	movlb	30	; select bank30
 11554  08D2  00B8               	movwf	56	;volatile
 11555                           
 11556                           ;pin_manager.c: 21: ANSELB = 0x00;
 11557  08D3  01C3               	clrf	67	;volatile
 11558                           
 11559                           ;pin_manager.c: 22: ANSELC = 0x00;
 11560  08D4  01CE               	clrf	78	;volatile
 11561                           
 11562                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11563  08D5  002E               	movlb	14	; select bank14
 11564  08D6  1216               	bcf	22,4	;volatile
 11565                           
 11566                           ;pin_manager.c: 25: bool state = GIE;
 11567  08D7  3000               	movlw	0
 11568  08D8  1B8B               	btfsc	11,7	;volatile
 11569  08D9  3001               	movlw	1
 11570  08DA  00F0               	movwf	PIN_MANAGER_Initialize@state
 11571                           
 11572                           ;pin_manager.c: 26: GIE = 0;
 11573  08DB  138B               	bcf	11,7	;volatile
 11574                           
 11575                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11576  08DC  3055               	movlw	85
 11577  08DD  003D               	movlb	29	; select bank29
 11578  08DE  008F               	movwf	15	;volatile
 11579                           
 11580                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11581  08DF  30AA               	movlw	170
 11582  08E0  008F               	movwf	15	;volatile
 11583                           
 11584                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11585  08E1  100F               	bcf	15,0	;volatile
 11586                           
 11587                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11588  08E2  300F               	movlw	15
 11589  08E3  003E               	movlb	30	; select bank30
 11590  08E4  00A3               	movwf	35	;volatile
 11591                           
 11592                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11593  08E5  3055               	movlw	85
 11594  08E6  003D               	movlb	29	; select bank29
 11595  08E7  008F               	movwf	15	;volatile
 11596                           
 11597                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11598  08E8  30AA               	movlw	170
 11599  08E9  008F               	movwf	15	;volatile
 11600                           
 11601                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11602  08EA  140F               	bsf	15,0	;volatile
 11603                           
 11604                           ;pin_manager.c: 40: GIE = state;
 11605  08EB  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11606  08EC  28EF               	goto	u2800
 11607  08ED  178B               	bsf	11,7	;volatile
 11608  08EE  0008               	return
 11609  08EF                     u2800:	
 11610  08EF  138B               	bcf	11,7	;volatile
 11611  08F0  0008               	return
 11612  08F1                     __end_of_PIN_MANAGER_Initialize:	
 11613                           
 11614                           	psect	text27
 11615  1711                     __ptext27:	
 11616 ;; *************** function _OSCILLATOR_Initialize *****************
 11617 ;; Defined at:
 11618 ;;		line 89 in file "system.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;		None
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;		None
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      void 
 11625 ;; Registers used:
 11626 ;;		wreg, status,2
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;Total ram usage:        0 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_SYSTEM_Initialize
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           
 11646                           ;psect for function _OSCILLATOR_Initialize
 11647  1711                     _OSCILLATOR_Initialize:	
 11648                           
 11649                           ;system.c: 91: OSCCON1 = 0x60;
 11650                           
 11651                           ;incstack = 0
 11652                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11653  1711  3060               	movlw	96
 11654  1712  0031               	movlb	17	; select bank17
 11655  1713  008D               	movwf	13	;volatile
 11656                           
 11657                           ;system.c: 92: OSCCON3 = 0x00;
 11658  1714  018F               	clrf	15	;volatile
 11659                           
 11660                           ;system.c: 93: OSCEN = 0x00;
 11661  1715  0191               	clrf	17	;volatile
 11662                           
 11663                           ;system.c: 94: OSCFRQ = 0x06;
 11664  1716  3006               	movlw	6
 11665  1717  0093               	movwf	19	;volatile
 11666                           
 11667                           ;system.c: 95: OSCTUNE = 0x00;
 11668  1718  0192               	clrf	18	;volatile
 11669  1719  0008               	return
 11670  171A                     __end_of_OSCILLATOR_Initialize:	
 11671                           
 11672                           	psect	text28
 11673  0BC8                     __ptext28:	
 11674 ;; *************** function _LCD_Init *****************
 11675 ;; Defined at:
 11676 ;;		line 154 in file "lcd.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  style           1    wreg     unsigned char 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  style           1    7[COMMON] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, status,2, status,0, pclath, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;Total ram usage:        4 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:    2
 11697 ;; This function calls:
 11698 ;;		_LCD_Cmd
 11699 ;;		_LCD_Port
 11700 ;; This function is called by:
 11701 ;;		_SYSTEM_Initialize
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           
 11706                           ;psect for function _LCD_Init
 11707  0BC8                     _LCD_Init:	
 11708                           
 11709                           ;incstack = 0
 11710                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11711                           ;LCD_Init@style stored from wreg
 11712  0BC8  00F7               	movwf	LCD_Init@style
 11713                           
 11714                           ;lcd.c: 156: LCD_Port(0x00);
 11715  0BC9  3000               	movlw	0
 11716  0BCA  3197  2799  318B   	fcall	_LCD_Port
 11717                           
 11718                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 11719  0BCD  3005               	movlw	5
 11720  0BCE  00F6               	movwf	??_LCD_Init+2
 11721  0BCF  300F               	movlw	15
 11722  0BD0  00F5               	movwf	??_LCD_Init+1
 11723  0BD1  30F4               	movlw	244
 11724  0BD2  00F4               	movwf	??_LCD_Init
 11725  0BD3                     u3707:	
 11726  0BD3  0BF4               	decfsz	??_LCD_Init,f
 11727  0BD4  2BD3               	goto	u3707
 11728  0BD5  0BF5               	decfsz	??_LCD_Init+1,f
 11729  0BD6  2BD3               	goto	u3707
 11730  0BD7  0BF6               	decfsz	??_LCD_Init+2,f
 11731  0BD8  2BD3               	goto	u3707
 11732                           
 11733                           ;lcd.c: 160: LCD_Cmd(0x03);
 11734  0BD9  3003               	movlw	3
 11735  0BDA  3197  2758  318B   	fcall	_LCD_Cmd
 11736                           
 11737                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 11738  0BDD  3068               	movlw	104
 11739  0BDE  00F5               	movwf	??_LCD_Init+1
 11740  0BDF  30E4               	movlw	228
 11741  0BE0  00F4               	movwf	??_LCD_Init
 11742  0BE1                     u3717:	
 11743  0BE1  0BF4               	decfsz	??_LCD_Init,f
 11744  0BE2  2BE1               	goto	u3717
 11745  0BE3  0BF5               	decfsz	??_LCD_Init+1,f
 11746  0BE4  2BE1               	goto	u3717
 11747  0BE5  0000               	nop
 11748                           
 11749                           ;lcd.c: 164: LCD_Cmd(0x03);
 11750  0BE6  3003               	movlw	3
 11751  0BE7  3197  2758  318B   	fcall	_LCD_Cmd
 11752                           
 11753                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11754  0BEA  3089               	movlw	137
 11755  0BEB  00F4               	movwf	??_LCD_Init
 11756  0BEC                     u3727:	
 11757  0BEC  3200               	nop2
 11758  0BED  3200               	nop2
 11759  0BEE  0BF4               	decfsz	??_LCD_Init,f
 11760  0BEF  2BEC               	goto	u3727
 11761                           
 11762                           ;lcd.c: 168: LCD_Cmd(0x03);
 11763  0BF0  3003               	movlw	3
 11764  0BF1  3197  2758  318B   	fcall	_LCD_Cmd
 11765                           
 11766                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11767  0BF4  3089               	movlw	137
 11768  0BF5  00F4               	movwf	??_LCD_Init
 11769  0BF6                     u3737:	
 11770  0BF6  3200               	nop2
 11771  0BF7  3200               	nop2
 11772  0BF8  0BF4               	decfsz	??_LCD_Init,f
 11773  0BF9  2BF6               	goto	u3737
 11774                           
 11775                           ;lcd.c: 172: LCD_Cmd(0x02);
 11776  0BFA  3002               	movlw	2
 11777  0BFB  3197  2758  318B   	fcall	_LCD_Cmd
 11778                           
 11779                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11780  0BFE  3089               	movlw	137
 11781  0BFF  00F4               	movwf	??_LCD_Init
 11782  0C00                     u3747:	
 11783  0C00  3200               	nop2
 11784  0C01  3200               	nop2
 11785  0C02  0BF4               	decfsz	??_LCD_Init,f
 11786  0C03  2C00               	goto	u3747
 11787                           
 11788                           ;lcd.c: 176: LCD_Cmd(0x2);
 11789  0C04  3002               	movlw	2
 11790  0C05  3197  2758  318B   	fcall	_LCD_Cmd
 11791                           
 11792                           ;lcd.c: 178: LCD_Cmd(0x8);
 11793  0C08  3008               	movlw	8
 11794  0C09  3197  2758  318B   	fcall	_LCD_Cmd
 11795                           
 11796                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11797  0C0C  3089               	movlw	137
 11798  0C0D  00F4               	movwf	??_LCD_Init
 11799  0C0E                     u3757:	
 11800  0C0E  3200               	nop2
 11801  0C0F  3200               	nop2
 11802  0C10  0BF4               	decfsz	??_LCD_Init,f
 11803  0C11  2C0E               	goto	u3757
 11804                           
 11805                           ;lcd.c: 182: LCD_Cmd(0x0);
 11806  0C12  3000               	movlw	0
 11807  0C13  3197  2758  318B   	fcall	_LCD_Cmd
 11808                           
 11809                           ;lcd.c: 184: LCD_Cmd(0x8);
 11810  0C16  3008               	movlw	8
 11811  0C17  3197  2758  318B   	fcall	_LCD_Cmd
 11812                           
 11813                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11814  0C1A  3089               	movlw	137
 11815  0C1B  00F4               	movwf	??_LCD_Init
 11816  0C1C                     u3767:	
 11817  0C1C  3200               	nop2
 11818  0C1D  3200               	nop2
 11819  0C1E  0BF4               	decfsz	??_LCD_Init,f
 11820  0C1F  2C1C               	goto	u3767
 11821                           
 11822                           ;lcd.c: 188: LCD_Cmd(0x0);
 11823  0C20  3000               	movlw	0
 11824  0C21  3197  2758  318B   	fcall	_LCD_Cmd
 11825                           
 11826                           ;lcd.c: 190: LCD_Cmd(0x1);
 11827  0C24  3001               	movlw	1
 11828  0C25  3197  2758  318B   	fcall	_LCD_Cmd
 11829                           
 11830                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 11831  0C28  3034               	movlw	52
 11832  0C29  00F5               	movwf	??_LCD_Init+1
 11833  0C2A  30F1               	movlw	241
 11834  0C2B  00F4               	movwf	??_LCD_Init
 11835  0C2C                     u3777:	
 11836  0C2C  0BF4               	decfsz	??_LCD_Init,f
 11837  0C2D  2C2C               	goto	u3777
 11838  0C2E  0BF5               	decfsz	??_LCD_Init+1,f
 11839  0C2F  2C2C               	goto	u3777
 11840  0C30  3200               	nop2
 11841                           
 11842                           ;lcd.c: 194: LCD_Cmd(0x0);
 11843  0C31  3000               	movlw	0
 11844  0C32  3197  2758  318B   	fcall	_LCD_Cmd
 11845                           
 11846                           ;lcd.c: 196: LCD_Cmd(0x6);
 11847  0C35  3006               	movlw	6
 11848  0C36  3197  2758  318B   	fcall	_LCD_Cmd
 11849                           
 11850                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11851  0C39  3089               	movlw	137
 11852  0C3A  00F4               	movwf	??_LCD_Init
 11853  0C3B                     u3787:	
 11854  0C3B  3200               	nop2
 11855  0C3C  3200               	nop2
 11856  0C3D  0BF4               	decfsz	??_LCD_Init,f
 11857  0C3E  2C3B               	goto	u3787
 11858                           
 11859                           ;lcd.c: 200: LCD_Cmd(0x0);
 11860  0C3F  3000               	movlw	0
 11861  0C40  3197  2758  318B   	fcall	_LCD_Cmd
 11862                           
 11863                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 11864  0C43  0877               	movf	LCD_Init@style,w
 11865  0C44  380C               	iorlw	12
 11866  0C45  3197  2758  318B   	fcall	_LCD_Cmd
 11867                           
 11868                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11869  0C48  3089               	movlw	137
 11870  0C49  00F4               	movwf	??_LCD_Init
 11871  0C4A                     u3797:	
 11872  0C4A  3200               	nop2
 11873  0C4B  3200               	nop2
 11874  0C4C  0BF4               	decfsz	??_LCD_Init,f
 11875  0C4D  2C4A               	goto	u3797
 11876  0C4E  0008               	return
 11877  0C4F                     __end_of_LCD_Init:	
 11878                           
 11879                           	psect	text29
 11880  1709                     __ptext29:	
 11881 ;; *************** function _LCD_Clear *****************
 11882 ;; Defined at:
 11883 ;;		line 75 in file "lcd.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0, pclath, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;Total ram usage:        0 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    2
 11904 ;; This function calls:
 11905 ;;		_LCD_Cmd
 11906 ;; This function is called by:
 11907 ;;		_SYSTEM_Initialize
 11908 ;;		_main
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           
 11913                           ;psect for function _LCD_Clear
 11914  1709                     _LCD_Clear:	
 11915                           
 11916                           ;lcd.c: 77: LCD_Cmd(0);
 11917                           
 11918                           ;incstack = 0
 11919                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 11920  1709  3000               	movlw	0
 11921  170A  3197  2758  3197   	fcall	_LCD_Cmd
 11922                           
 11923                           ;lcd.c: 78: LCD_Cmd(1);
 11924  170D  3001               	movlw	1
 11925  170E  3197  2758         	fcall	_LCD_Cmd
 11926  1710  0008               	return
 11927  1711                     __end_of_LCD_Clear:	
 11928                           
 11929                           	psect	text30
 11930  086E                     __ptext30:	
 11931 ;; *************** function _InitCustomChars *****************
 11932 ;; Defined at:
 11933 ;;		line 29 in file "lcd.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  i               1    6[COMMON] unsigned char 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;Total ram usage:        2 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    2
 11954 ;; This function calls:
 11955 ;;		_LCD_Cmd
 11956 ;;		_LCD_Write_Char
 11957 ;; This function is called by:
 11958 ;;		_SYSTEM_Initialize
 11959 ;; This function uses a non-reentrant model
 11960 ;;
 11961                           
 11962                           
 11963                           ;psect for function _InitCustomChars
 11964  086E                     _InitCustomChars:	
 11965                           
 11966                           ;lcd.c: 31: uint8_t i;
 11967                           ;lcd.c: 32: LCD_Cmd(0x04);
 11968                           
 11969                           ;incstack = 0
 11970                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11971  086E  3004               	movlw	4
 11972  086F  3197  2758  3188   	fcall	_LCD_Cmd
 11973                           
 11974                           ;lcd.c: 33: LCD_Cmd(0x00);
 11975  0872  3000               	movlw	0
 11976  0873  3197  2758  3188   	fcall	_LCD_Cmd
 11977                           
 11978                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 11979  0876  01F6               	clrf	InitCustomChars@i
 11980  0877  3010               	movlw	16
 11981  0878  0276               	subwf	InitCustomChars@i,w
 11982  0879  1803               	btfsc	3,0
 11983  087A  288C               	goto	l2446
 11984  087B                     l2440:	
 11985                           
 11986                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 11987  087B  0876               	movf	InitCustomChars@i,w
 11988  087C  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 11989  087D  0086               	movwf	6
 11990  087E  3001               	movlw	1	; select bank3/4
 11991  087F  0087               	movwf	7
 11992  0880  0801               	movf	1,w
 11993  0881  3188  2094  3188   	fcall	_LCD_Write_Char
 11994  0884  3001               	movlw	1
 11995  0885  00F5               	movwf	??_InitCustomChars
 11996  0886  0875               	movf	??_InitCustomChars,w
 11997  0887  07F6               	addwf	InitCustomChars@i,f
 11998  0888  3010               	movlw	16
 11999  0889  0276               	subwf	InitCustomChars@i,w
 12000  088A  1C03               	skipc
 12001  088B  287B               	goto	l2440
 12002  088C                     l2446:	
 12003                           
 12004                           ;lcd.c: 36: LCD_Cmd(0);
 12005  088C  3000               	movlw	0
 12006  088D  3197  2758  3188   	fcall	_LCD_Cmd
 12007                           
 12008                           ;lcd.c: 37: LCD_Cmd(2);
 12009  0890  3002               	movlw	2
 12010  0891  3197  2758         	fcall	_LCD_Cmd
 12011  0893  0008               	return
 12012  0894                     __end_of_InitCustomChars:	
 12013                           
 12014                           	psect	text31
 12015  0894                     __ptext31:	
 12016 ;; *************** function _LCD_Write_Char *****************
 12017 ;; Defined at:
 12018 ;;		line 223 in file "lcd.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  a               1    wreg     const unsigned char 
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;  a               1    4[COMMON] const unsigned char 
 12023 ;;  y               1    3[COMMON] unsigned char 
 12024 ;;  temp            1    2[COMMON] unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		wreg, status,2, status,0, pclath, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;Total ram usage:        4 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    1
 12041 ;; This function calls:
 12042 ;;		_LCD_Port
 12043 ;; This function is called by:
 12044 ;;		_InitCustomChars
 12045 ;;		_LCD_Write_String
 12046 ;;		_LCD_Write_Int
 12047 ;;		_main
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _LCD_Write_Char
 12053  0894                     _LCD_Write_Char:	
 12054                           
 12055                           ;incstack = 0
 12056                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12057                           ;LCD_Write_Char@a stored from wreg
 12058  0894  00F4               	movwf	LCD_Write_Char@a
 12059                           
 12060                           ;lcd.c: 225: char temp,y;
 12061                           ;lcd.c: 226: temp = a&0x0F;
 12062  0895  0874               	movf	LCD_Write_Char@a,w
 12063  0896  390F               	andlw	15
 12064  0897  00F1               	movwf	??_LCD_Write_Char
 12065  0898  0871               	movf	??_LCD_Write_Char,w
 12066  0899  00F2               	movwf	LCD_Write_Char@temp
 12067                           
 12068                           ;lcd.c: 227: y = a&0xF0;
 12069  089A  0874               	movf	LCD_Write_Char@a,w
 12070  089B  39F0               	andlw	240
 12071  089C  00F1               	movwf	??_LCD_Write_Char
 12072  089D  0871               	movf	??_LCD_Write_Char,w
 12073  089E  00F3               	movwf	LCD_Write_Char@y
 12074                           
 12075                           ;lcd.c: 228: RA0 = 1;
 12076  089F  0020               	movlb	0	; select bank0
 12077  08A0  140C               	bsf	12,0	;volatile
 12078                           
 12079                           ;lcd.c: 229: LCD_Port(y>>4);
 12080  08A1  0873               	movf	LCD_Write_Char@y,w
 12081  08A2  00F1               	movwf	??_LCD_Write_Char
 12082  08A3  3004               	movlw	4
 12083  08A4                     u2375:	
 12084  08A4  36F1               	lsrf	??_LCD_Write_Char,f
 12085  08A5  0B89               	decfsz	9,f
 12086  08A6  28A4               	goto	u2375
 12087  08A7  0871               	movf	??_LCD_Write_Char,w
 12088  08A8  3197  2799  3188   	fcall	_LCD_Port
 12089                           
 12090                           ;lcd.c: 230: RA2 = 1;
 12091  08AB  0020               	movlb	0	; select bank0
 12092  08AC  150C               	bsf	12,2	;volatile
 12093                           
 12094                           ;lcd.c: 231: RA2 = 0;
 12095  08AD  110C               	bcf	12,2	;volatile
 12096                           
 12097                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12098  08AE  306A               	movlw	106
 12099  08AF  00F1               	movwf	??_LCD_Write_Char
 12100  08B0                     u3807:	
 12101  08B0  0BF1               	decfsz	??_LCD_Write_Char,f
 12102  08B1  28B0               	goto	u3807
 12103  08B2  0000               	nop
 12104                           
 12105                           ;lcd.c: 233: LCD_Port(temp);
 12106  08B3  0872               	movf	LCD_Write_Char@temp,w
 12107  08B4  3197  2799  3188   	fcall	_LCD_Port
 12108                           
 12109                           ;lcd.c: 234: RA2 = 1;
 12110  08B7  0020               	movlb	0	; select bank0
 12111  08B8  150C               	bsf	12,2	;volatile
 12112                           
 12113                           ;lcd.c: 235: RA2 = 0;
 12114  08B9  110C               	bcf	12,2	;volatile
 12115                           
 12116                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12117  08BA  306A               	movlw	106
 12118  08BB  00F1               	movwf	??_LCD_Write_Char
 12119  08BC                     u3817:	
 12120  08BC  0BF1               	decfsz	??_LCD_Write_Char,f
 12121  08BD  28BC               	goto	u3817
 12122  08BE  0000               	nop
 12123  08BF  0008               	return
 12124  08C0                     __end_of_LCD_Write_Char:	
 12125                           
 12126                           	psect	text32
 12127  1758                     __ptext32:	
 12128 ;; *************** function _LCD_Cmd *****************
 12129 ;; Defined at:
 12130 ;;		line 65 in file "lcd.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  a               1    wreg     unsigned char 
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;  a               1    3[COMMON] unsigned char 
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg, status,2, status,0, pclath, cstack
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12148 ;;Total ram usage:        3 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:    1
 12151 ;; This function calls:
 12152 ;;		_LCD_Port
 12153 ;; This function is called by:
 12154 ;;		_InitCustomChars
 12155 ;;		_LCD_Clear
 12156 ;;		_LCD_Set_Cursor
 12157 ;;		_LCD_Init
 12158 ;; This function uses a non-reentrant model
 12159 ;;
 12160                           
 12161                           
 12162                           ;psect for function _LCD_Cmd
 12163  1758                     _LCD_Cmd:	
 12164                           
 12165                           ;incstack = 0
 12166                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12167                           ;LCD_Cmd@a stored from wreg
 12168  1758  00F3               	movwf	LCD_Cmd@a
 12169                           
 12170                           ;lcd.c: 67: RA0 = 0;
 12171  1759  0020               	movlb	0	; select bank0
 12172  175A  100C               	bcf	12,0	;volatile
 12173                           
 12174                           ;lcd.c: 68: LCD_Port(a);
 12175  175B  0873               	movf	LCD_Cmd@a,w
 12176  175C  3197  2799  3197   	fcall	_LCD_Port
 12177                           
 12178                           ;lcd.c: 69: RA2 = 1;
 12179  175F  0020               	movlb	0	; select bank0
 12180  1760  150C               	bsf	12,2	;volatile
 12181                           
 12182                           ;lcd.c: 70: RA2 = 0;
 12183  1761  110C               	bcf	12,2	;volatile
 12184                           
 12185                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12186  1762  302A               	movlw	42
 12187  1763  00F2               	movwf	??_LCD_Cmd+1
 12188  1764  308D               	movlw	141
 12189  1765  00F1               	movwf	??_LCD_Cmd
 12190  1766                     u3827:	
 12191  1766  0BF1               	decfsz	??_LCD_Cmd,f
 12192  1767  2F66               	goto	u3827
 12193  1768  0BF2               	decfsz	??_LCD_Cmd+1,f
 12194  1769  2F66               	goto	u3827
 12195  176A  3200               	nop2
 12196  176B  0008               	return
 12197  176C                     __end_of_LCD_Cmd:	
 12198                           
 12199                           	psect	text33
 12200  1799                     __ptext33:	
 12201 ;; *************** function _LCD_Port *****************
 12202 ;; Defined at:
 12203 ;;		line 41 in file "lcd.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  a               1    wreg     unsigned char 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  a               1    0[COMMON] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		wreg
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;Total ram usage:        1 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		_LCD_Cmd
 12227 ;;		_LCD_Init
 12228 ;;		_LCD_Write_Char
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           
 12233                           ;psect for function _LCD_Port
 12234  1799                     _LCD_Port:	
 12235                           
 12236                           ;incstack = 0
 12237                           ; Regs used in _LCD_Port: [wreg]
 12238                           ;LCD_Port@a stored from wreg
 12239  1799  00F0               	movwf	LCD_Port@a
 12240                           
 12241                           ;lcd.c: 43: if(a & 1)
 12242  179A  1C70               	btfss	LCD_Port@a,0
 12243  179B  2F9F               	goto	l94
 12244                           
 12245                           ;lcd.c: 44: RA7 = 1;
 12246  179C  0020               	movlb	0	; select bank0
 12247  179D  178C               	bsf	12,7	;volatile
 12248  179E  2FA1               	goto	l2088
 12249  179F                     l94:	
 12250                           
 12251                           ;lcd.c: 45: else
 12252                           ;lcd.c: 46: RA7 = 0;
 12253  179F  0020               	movlb	0	; select bank0
 12254  17A0  138C               	bcf	12,7	;volatile
 12255  17A1                     l2088:	
 12256                           
 12257                           ;lcd.c: 48: if(a & 2)
 12258  17A1  1CF0               	btfss	LCD_Port@a,1
 12259  17A2  2FA5               	goto	l96
 12260                           
 12261                           ;lcd.c: 49: RA6 = 1;
 12262  17A3  170C               	bsf	12,6	;volatile
 12263  17A4  2FA6               	goto	l2092
 12264  17A5                     l96:	
 12265                           
 12266                           ;lcd.c: 50: else
 12267                           ;lcd.c: 51: RA6 = 0;
 12268  17A5  130C               	bcf	12,6	;volatile
 12269  17A6                     l2092:	
 12270                           
 12271                           ;lcd.c: 53: if(a & 4)
 12272  17A6  1D70               	btfss	LCD_Port@a,2
 12273  17A7  2FAA               	goto	l98
 12274                           
 12275                           ;lcd.c: 54: RC0 = 1;
 12276  17A8  140E               	bsf	14,0	;volatile
 12277  17A9  2FAB               	goto	l2096
 12278  17AA                     l98:	
 12279                           
 12280                           ;lcd.c: 55: else
 12281                           ;lcd.c: 56: RC0 = 0;
 12282  17AA  100E               	bcf	14,0	;volatile
 12283  17AB                     l2096:	
 12284                           
 12285                           ;lcd.c: 58: if(a & 8)
 12286  17AB  1DF0               	btfss	LCD_Port@a,3
 12287  17AC  2FAF               	goto	l100
 12288                           
 12289                           ;lcd.c: 59: RC1 = 1;
 12290  17AD  148E               	bsf	14,1	;volatile
 12291  17AE  0008               	return
 12292  17AF                     l100:	
 12293                           
 12294                           ;lcd.c: 60: else
 12295                           ;lcd.c: 61: RC1 = 0;
 12296  17AF  108E               	bcf	14,1	;volatile
 12297  17B0  0008               	return
 12298  17B1                     __end_of_LCD_Port:	
 12299                           
 12300                           	psect	text34
 12301  17B1                     __ptext34:	
 12302 ;; *************** function _ADCC_Initialize *****************
 12303 ;; Defined at:
 12304 ;;		line 60 in file "adc.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;		None
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;		None
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      void 
 12311 ;; Registers used:
 12312 ;;		wreg, status,2
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;Total ram usage:        0 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_SYSTEM_Initialize
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           
 12332                           ;psect for function _ADCC_Initialize
 12333  17B1                     _ADCC_Initialize:	
 12334                           
 12335                           ;adc.c: 62: ADCON1 = 0x00;
 12336                           
 12337                           ;incstack = 0
 12338                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12339  17B1  0021               	movlb	1	; select bank1
 12340  17B2  0194               	clrf	20	;volatile
 12341                           
 12342                           ;adc.c: 64: ADCON2 = 0x00;
 12343  17B3  0195               	clrf	21	;volatile
 12344                           
 12345                           ;adc.c: 66: ADCON3 = 0x00;
 12346  17B4  0196               	clrf	22	;volatile
 12347                           
 12348                           ;adc.c: 68: ADACT = 0x00;
 12349  17B5  0199               	clrf	25	;volatile
 12350                           
 12351                           ;adc.c: 70: ADSTAT = 0x00;
 12352  17B6  0197               	clrf	23	;volatile
 12353                           
 12354                           ;adc.c: 73: ADCLK = 0x3F;
 12355  17B7  303F               	movlw	63
 12356  17B8  0098               	movwf	24	;volatile
 12357                           
 12358                           ;adc.c: 81: ADREF = 0x00;
 12359  17B9  019A               	clrf	26	;volatile
 12360                           
 12361                           ;adc.c: 83: ADCAP = 0x00;
 12362  17BA  019B               	clrf	27	;volatile
 12363                           
 12364                           ;adc.c: 86: ADPRE = 0x07;
 12365  17BB  3007               	movlw	7
 12366  17BC  009C               	movwf	28	;volatile
 12367                           
 12368                           ;adc.c: 88: ADACQ = 0x00;
 12369  17BD  019D               	clrf	29	;volatile
 12370                           
 12371                           ;adc.c: 90: ADPCH = 0x00;
 12372  17BE  019E               	clrf	30	;volatile
 12373                           
 12374                           ;adc.c: 92: ADRPT = 0x00;
 12375  17BF  0022               	movlb	2	; select bank2
 12376  17C0  018D               	clrf	13	;volatile
 12377                           
 12378                           ;adc.c: 94: ADLTHL = 0x00;
 12379  17C1  018E               	clrf	14	;volatile
 12380                           
 12381                           ;adc.c: 96: ADLTHH = 0x00;
 12382  17C2  018F               	clrf	15	;volatile
 12383                           
 12384                           ;adc.c: 98: ADUTHL = 0x00;
 12385  17C3  0190               	clrf	16	;volatile
 12386                           
 12387                           ;adc.c: 100: ADUTHH = 0x00;
 12388  17C4  0191               	clrf	17	;volatile
 12389                           
 12390                           ;adc.c: 102: ADSTPTL = 0x00;
 12391  17C5  0192               	clrf	18	;volatile
 12392                           
 12393                           ;adc.c: 104: ADSTPTH = 0x00;
 12394  17C6  0193               	clrf	19	;volatile
 12395                           
 12396                           ;adc.c: 106: ADCON0 = 0x84;
 12397  17C7  3084               	movlw	132
 12398  17C8  0021               	movlb	1	; select bank1
 12399  17C9  0093               	movwf	19	;volatile
 12400  17CA  0008               	return
 12401  17CB                     __end_of_ADCC_Initialize:	
 12402                           
 12403                           	psect	text35
 12404  176C                     __ptext35:	
 12405 ;; *************** function _PWM7_LoadDutyValue *****************
 12406 ;; Defined at:
 12407 ;;		line 32 in file "pwm.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;		None
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      void 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;Total ram usage:        4 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; This function calls:
 12428 ;;		Nothing
 12429 ;; This function is called by:
 12430 ;;		_main
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           
 12435                           ;psect for function _PWM7_LoadDutyValue
 12436  176C                     _PWM7_LoadDutyValue:	
 12437                           
 12438                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12439                           
 12440                           ;incstack = 0
 12441                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12442  176C  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12443  176D  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12444  176E  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12445  176F  00F2               	movwf	??_PWM7_LoadDutyValue
 12446  1770  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12447  1771  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12448  1772  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12449  1773  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12450  1774  0872               	movf	??_PWM7_LoadDutyValue,w
 12451  1775  0027               	movlb	7	; select bank7
 12452  1776  0091               	movwf	17	;volatile
 12453                           
 12454                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12455  1777  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12456  1778  3903               	andlw	3
 12457  1779  00F2               	movwf	??_PWM7_LoadDutyValue
 12458  177A  3005               	movlw	5
 12459  177B                     u3315:	
 12460  177B  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12461  177C  3EFF               	addlw	-1
 12462  177D  1D03               	skipz
 12463  177E  2F7B               	goto	u3315
 12464  177F  3572               	lslf	??_PWM7_LoadDutyValue,w
 12465  1780  0090               	movwf	16	;volatile
 12466  1781  0008               	return
 12467  1782                     __end_of_PWM7_LoadDutyValue:	
 12468                           
 12469                           	psect	text36
 12470  0F25                     __ptext36:	
 12471 ;; *************** function _PID_Calculate *****************
 12472 ;; Defined at:
 12473 ;;		line 21 in file "pid.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  setpoint        2    6[COMMON] int 
 12476 ;;  temp            2    8[COMMON] int 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;		None
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  2    6[COMMON] int 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0, pclath, cstack
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;Total ram usage:        6 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; Hardware stack levels required when called:    1
 12495 ;; This function calls:
 12496 ;;		___wmul
 12497 ;; This function is called by:
 12498 ;;		_main
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           
 12503                           ;psect for function _PID_Calculate
 12504  0F25                     _PID_Calculate:	
 12505                           
 12506                           ;pid.c: 23: pidCount+=1;
 12507                           
 12508                           ;incstack = 0
 12509                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12510  0F25  3001               	movlw	1
 12511  0F26  0021               	movlb	1	; select bank1
 12512  0F27  07B4               	addwf	_pidCount^(0+128),f
 12513  0F28  3000               	movlw	0
 12514  0F29  3DB5               	addwfc	(_pidCount+1)^(0+128),f
 12515                           
 12516                           ;pid.c: 26: error = setpoint - temp;
 12517  0F2A  0978               	comf	PID_Calculate@temp,w
 12518  0F2B  00FA               	movwf	??_PID_Calculate
 12519  0F2C  0979               	comf	PID_Calculate@temp+1,w
 12520  0F2D  00FB               	movwf	??_PID_Calculate+1
 12521  0F2E  0AFA               	incf	??_PID_Calculate,f
 12522  0F2F  1903               	skipnz
 12523  0F30  0AFB               	incf	??_PID_Calculate+1,f
 12524  0F31  0876               	movf	PID_Calculate@setpoint,w
 12525  0F32  077A               	addwf	??_PID_Calculate,w
 12526  0F33  00AE               	movwf	_error^(0+128)
 12527  0F34  0877               	movf	PID_Calculate@setpoint+1,w
 12528  0F35  3D7B               	addwfc	??_PID_Calculate+1,w
 12529  0F36  00AF               	movwf	(_error+1)^(0+128)
 12530                           
 12531                           ;pid.c: 28: errorValue = error * Kp;
 12532  0F37  082F               	movf	(_error+1)^(0+128),w
 12533  0F38  00F1               	movwf	___wmul@multiplier+1
 12534  0F39  082E               	movf	_error^(0+128),w
 12535  0F3A  00F0               	movwf	___wmul@multiplier
 12536  0F3B  086A               	movf	(_Kp+1)^(0+128),w
 12537  0F3C  00F3               	movwf	___wmul@multiplicand+1
 12538  0F3D  0869               	movf	_Kp^(0+128),w
 12539  0F3E  00F2               	movwf	___wmul@multiplicand
 12540  0F3F  3197  27E5  318F   	fcall	___wmul
 12541  0F42  0871               	movf	?___wmul+1,w
 12542  0F43  0021               	movlb	1	; select bank1
 12543  0F44  00B1               	movwf	(_errorValue+1)^(0+128)
 12544  0F45  0870               	movf	?___wmul,w
 12545  0F46  00B0               	movwf	_errorValue^(0+128)
 12546                           
 12547                           ;pid.c: 31: if(error>0)signPositive=1;
 12548  0F47  082F               	movf	(_error+1)^(0+128),w
 12549  0F48  3A80               	xorlw	128
 12550  0F49  00FA               	movwf	??_PID_Calculate
 12551  0F4A  3080               	movlw	128
 12552  0F4B  027A               	subwf	??_PID_Calculate,w
 12553  0F4C  1D03               	skipz
 12554  0F4D  2F50               	goto	u3245
 12555  0F4E  3001               	movlw	1
 12556  0F4F  022E               	subwf	_error^(0+128),w
 12557  0F50                     u3245:	
 12558  0F50  1C03               	skipc
 12559  0F51  2F58               	goto	l2828
 12560  0F52  3001               	movlw	1
 12561  0F53  0021               	movlb	1	; select bank1
 12562  0F54  00BE               	movwf	_signPositive^(0+128)
 12563  0F55  3000               	movlw	0
 12564  0F56  00BF               	movwf	(_signPositive^(0+128)+1)
 12565  0F57  2F5B               	goto	l2830
 12566  0F58                     l2828:	
 12567                           
 12568                           ;pid.c: 33: else signPositive=0;
 12569  0F58  0021               	movlb	1	; select bank1
 12570  0F59  01BE               	clrf	_signPositive^(0+128)
 12571  0F5A  01BF               	clrf	(_signPositive+1)^(0+128)
 12572  0F5B                     l2830:	
 12573                           
 12574                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 12575  0F5B  0833               	movf	(_lastSign+1)^(0+128),w
 12576  0F5C  063F               	xorwf	(_signPositive+1)^(0+128),w
 12577  0F5D  1D03               	skipz
 12578  0F5E  2F61               	goto	u3255
 12579  0F5F  0832               	movf	_lastSign^(0+128),w
 12580  0F60  063E               	xorwf	_signPositive^(0+128),w
 12581  0F61                     u3255:	
 12582  0F61  1903               	skipnz
 12583  0F62  2F65               	goto	l2834
 12584  0F63  01B6               	clrf	_pidIntegrated^(0+128)
 12585  0F64  01B7               	clrf	(_pidIntegrated+1)^(0+128)
 12586  0F65                     l2834:	
 12587                           
 12588                           ;pid.c: 37: lastSign=signPositive;
 12589  0F65  083F               	movf	(_signPositive+1)^(0+128),w
 12590  0F66  00B3               	movwf	(_lastSign+1)^(0+128)
 12591  0F67  083E               	movf	_signPositive^(0+128),w
 12592  0F68  00B2               	movwf	_lastSign^(0+128)
 12593                           
 12594                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 12595  0F69  093A               	comf	_pidPrevError^(0+128),w
 12596  0F6A  00FA               	movwf	??_PID_Calculate
 12597  0F6B  093B               	comf	(_pidPrevError+1)^(0+128),w
 12598  0F6C  00FB               	movwf	??_PID_Calculate+1
 12599  0F6D  0AFA               	incf	??_PID_Calculate,f
 12600  0F6E  1903               	skipnz
 12601  0F6F  0AFB               	incf	??_PID_Calculate+1,f
 12602  0F70  082E               	movf	_error^(0+128),w
 12603  0F71  077A               	addwf	??_PID_Calculate,w
 12604  0F72  00F0               	movwf	___wmul@multiplier
 12605  0F73  082F               	movf	(_error+1)^(0+128),w
 12606  0F74  3D7B               	addwfc	??_PID_Calculate+1,w
 12607  0F75  00F1               	movwf	___wmul@multiplier+1
 12608  0F76  0866               	movf	(_Kd+1)^(0+128),w
 12609  0F77  00F3               	movwf	___wmul@multiplicand+1
 12610  0F78  0865               	movf	_Kd^(0+128),w
 12611  0F79  00F2               	movwf	___wmul@multiplicand
 12612  0F7A  3197  27E5  318F   	fcall	___wmul
 12613  0F7D  0871               	movf	?___wmul+1,w
 12614  0F7E  0021               	movlb	1	; select bank1
 12615  0F7F  00AB               	movwf	(_derivativeValue+1)^(0+128)
 12616  0F80  0870               	movf	?___wmul,w
 12617  0F81  00AA               	movwf	_derivativeValue^(0+128)
 12618                           
 12619                           ;pid.c: 42: pidPrevError = error;
 12620  0F82  082F               	movf	(_error+1)^(0+128),w
 12621  0F83  00BB               	movwf	(_pidPrevError+1)^(0+128)
 12622  0F84  082E               	movf	_error^(0+128),w
 12623  0F85  00BA               	movwf	_pidPrevError^(0+128)
 12624                           
 12625                           ;pid.c: 45: if(pidCount>20)
 12626  0F86  0835               	movf	(_pidCount+1)^(0+128),w
 12627  0F87  3A80               	xorlw	128
 12628  0F88  00FA               	movwf	??_PID_Calculate
 12629  0F89  3080               	movlw	128
 12630  0F8A  027A               	subwf	??_PID_Calculate,w
 12631  0F8B  1D03               	skipz
 12632  0F8C  2F8F               	goto	u3265
 12633  0F8D  3015               	movlw	21
 12634  0F8E  0234               	subwf	_pidCount^(0+128),w
 12635  0F8F                     u3265:	
 12636  0F8F  1C03               	skipc
 12637  0F90  2FCA               	goto	l2852
 12638                           
 12639                           ;pid.c: 46: {
 12640                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 12641  0F91  0021               	movlb	1	; select bank1
 12642  0F92  082F               	movf	(_error+1)^(0+128),w
 12643  0F93  00F1               	movwf	___wmul@multiplier+1
 12644  0F94  082E               	movf	_error^(0+128),w
 12645  0F95  00F0               	movwf	___wmul@multiplier
 12646  0F96  0868               	movf	(_Ki+1)^(0+128),w
 12647  0F97  00F3               	movwf	___wmul@multiplicand+1
 12648  0F98  0867               	movf	_Ki^(0+128),w
 12649  0F99  00F2               	movwf	___wmul@multiplicand
 12650  0F9A  3197  27E5  318F   	fcall	___wmul
 12651  0F9D  0021               	movlb	1	; select bank1
 12652  0F9E  0836               	movf	_pidIntegrated^(0+128),w
 12653  0F9F  0770               	addwf	?___wmul,w
 12654  0FA0  00B6               	movwf	_pidIntegrated^(0+128)
 12655  0FA1  0837               	movf	(_pidIntegrated+1)^(0+128),w
 12656  0FA2  3D71               	addwfc	?___wmul+1,w
 12657  0FA3  00B7               	movwf	(_pidIntegrated+1)^(0+128)
 12658                           
 12659                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 12660  0FA4  0837               	movf	(_pidIntegrated+1)^(0+128),w
 12661  0FA5  3A80               	xorlw	128
 12662  0FA6  00FA               	movwf	??_PID_Calculate
 12663  0FA7  0839               	movf	(_pidMinOutput+1)^(0+128),w
 12664  0FA8  3A80               	xorlw	128
 12665  0FA9  027A               	subwf	??_PID_Calculate,w
 12666  0FAA  1D03               	skipz
 12667  0FAB  2FAE               	goto	u3275
 12668  0FAC  0838               	movf	_pidMinOutput^(0+128),w
 12669  0FAD  0236               	subwf	_pidIntegrated^(0+128),w
 12670  0FAE                     u3275:	
 12671  0FAE  1803               	skipnc
 12672  0FAF  2FB5               	goto	l182
 12673                           
 12674                           ;pid.c: 50: {
 12675                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 12676  0FB0  0021               	movlb	1	; select bank1
 12677  0FB1  0839               	movf	(_pidMinOutput+1)^(0+128),w
 12678  0FB2  00B7               	movwf	(_pidIntegrated+1)^(0+128)
 12679  0FB3  0838               	movf	_pidMinOutput^(0+128),w
 12680  0FB4  00B6               	movwf	_pidIntegrated^(0+128)
 12681  0FB5                     l182:	
 12682                           
 12683                           ;pid.c: 52: }
 12684                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 12685  0FB5  0021               	movlb	1	; select bank1
 12686  0FB6  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12687  0FB7  3A80               	xorlw	128
 12688  0FB8  00FA               	movwf	??_PID_Calculate
 12689  0FB9  0837               	movf	(_pidIntegrated+1)^(0+128),w
 12690  0FBA  3A80               	xorlw	128
 12691  0FBB  027A               	subwf	??_PID_Calculate,w
 12692  0FBC  1D03               	skipz
 12693  0FBD  2FC0               	goto	u3285
 12694  0FBE  0836               	movf	_pidIntegrated^(0+128),w
 12695  0FBF  026B               	subwf	_pidMaxOutput^(0+128),w
 12696  0FC0                     u3285:	
 12697  0FC0  1803               	skipnc
 12698  0FC1  2FC7               	goto	l2850
 12699                           
 12700                           ;pid.c: 55: {
 12701                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 12702  0FC2  0021               	movlb	1	; select bank1
 12703  0FC3  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12704  0FC4  00B7               	movwf	(_pidIntegrated+1)^(0+128)
 12705  0FC5  086B               	movf	_pidMaxOutput^(0+128),w
 12706  0FC6  00B6               	movwf	_pidIntegrated^(0+128)
 12707  0FC7                     l2850:	
 12708                           
 12709                           ;pid.c: 57: }
 12710                           ;pid.c: 58: pidCount=0;
 12711  0FC7  0021               	movlb	1	; select bank1
 12712  0FC8  01B4               	clrf	_pidCount^(0+128)
 12713  0FC9  01B5               	clrf	(_pidCount+1)^(0+128)
 12714  0FCA                     l2852:	
 12715                           
 12716                           ;pid.c: 59: }
 12717                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 12718  0FCA  0021               	movlb	1	; select bank1
 12719  0FCB  0836               	movf	_pidIntegrated^(0+128),w
 12720  0FCC  0730               	addwf	_errorValue^(0+128),w
 12721  0FCD  00FA               	movwf	??_PID_Calculate
 12722  0FCE  0837               	movf	(_pidIntegrated+1)^(0+128),w
 12723  0FCF  3D31               	addwfc	(_errorValue+1)^(0+128),w
 12724  0FD0  00FB               	movwf	??_PID_Calculate+1
 12725  0FD1  082A               	movf	_derivativeValue^(0+128),w
 12726  0FD2  077A               	addwf	??_PID_Calculate,w
 12727  0FD3  00A8               	movwf	_Result^(0+128)
 12728  0FD4  082B               	movf	(_derivativeValue+1)^(0+128),w
 12729  0FD5  3D7B               	addwfc	??_PID_Calculate+1,w
 12730  0FD6  00A9               	movwf	(_Result+1)^(0+128)
 12731                           
 12732                           ;pid.c: 64: if (Result < pidMinOutput)
 12733  0FD7  0829               	movf	(_Result+1)^(0+128),w
 12734  0FD8  3A80               	xorlw	128
 12735  0FD9  00FA               	movwf	??_PID_Calculate
 12736  0FDA  0839               	movf	(_pidMinOutput+1)^(0+128),w
 12737  0FDB  3A80               	xorlw	128
 12738  0FDC  027A               	subwf	??_PID_Calculate,w
 12739  0FDD  1D03               	skipz
 12740  0FDE  2FE1               	goto	u3295
 12741  0FDF  0838               	movf	_pidMinOutput^(0+128),w
 12742  0FE0  0228               	subwf	_Result^(0+128),w
 12743  0FE1                     u3295:	
 12744  0FE1  1803               	skipnc
 12745  0FE2  2FE8               	goto	l184
 12746                           
 12747                           ;pid.c: 65: {
 12748                           ;pid.c: 66: Result = pidMinOutput;
 12749  0FE3  0021               	movlb	1	; select bank1
 12750  0FE4  0839               	movf	(_pidMinOutput+1)^(0+128),w
 12751  0FE5  00A9               	movwf	(_Result+1)^(0+128)
 12752  0FE6  0838               	movf	_pidMinOutput^(0+128),w
 12753  0FE7  00A8               	movwf	_Result^(0+128)
 12754  0FE8                     l184:	
 12755                           
 12756                           ;pid.c: 67: }
 12757                           ;pid.c: 69: if (Result > pidMaxOutput)
 12758  0FE8  0021               	movlb	1	; select bank1
 12759  0FE9  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12760  0FEA  3A80               	xorlw	128
 12761  0FEB  00FA               	movwf	??_PID_Calculate
 12762  0FEC  0829               	movf	(_Result+1)^(0+128),w
 12763  0FED  3A80               	xorlw	128
 12764  0FEE  027A               	subwf	??_PID_Calculate,w
 12765  0FEF  1D03               	skipz
 12766  0FF0  2FF3               	goto	u3305
 12767  0FF1  0828               	movf	_Result^(0+128),w
 12768  0FF2  026B               	subwf	_pidMaxOutput^(0+128),w
 12769  0FF3                     u3305:	
 12770  0FF3  1803               	skipnc
 12771  0FF4  2FFA               	goto	l185
 12772                           
 12773                           ;pid.c: 70: {
 12774                           ;pid.c: 71: Result = pidMaxOutput;
 12775  0FF5  0021               	movlb	1	; select bank1
 12776  0FF6  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12777  0FF7  00A9               	movwf	(_Result+1)^(0+128)
 12778  0FF8  086B               	movf	_pidMaxOutput^(0+128),w
 12779  0FF9  00A8               	movwf	_Result^(0+128)
 12780  0FFA                     l185:	
 12781                           
 12782                           ;pid.c: 72: }
 12783                           ;pid.c: 74: return (Result);
 12784  0FFA  0021               	movlb	1	; select bank1
 12785  0FFB  0829               	movf	(_Result+1)^(0+128),w
 12786  0FFC  00F7               	movwf	?_PID_Calculate+1
 12787  0FFD  0828               	movf	_Result^(0+128),w
 12788  0FFE  00F6               	movwf	?_PID_Calculate
 12789  0FFF  0008               	return
 12790  1000                     __end_of_PID_Calculate:	
 12791                           
 12792                           	psect	text37
 12793  17E5                     __ptext37:	
 12794 ;; *************** function ___wmul *****************
 12795 ;; Defined at:
 12796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  multiplier      2    0[COMMON] unsigned int 
 12799 ;;  multiplicand    2    2[COMMON] unsigned int 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  product         2    4[COMMON] unsigned int 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  2    0[COMMON] unsigned int 
 12804 ;; Registers used:
 12805 ;;		wreg, status,2, status,0
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;Total ram usage:        6 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_readAnalog
 12821 ;;		_PID_Calculate
 12822 ;;		_eval_poly
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function ___wmul
 12828  17E5                     ___wmul:	
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12832  17E5  01F4               	clrf	___wmul@product
 12833  17E6  01F5               	clrf	___wmul@product+1
 12834  17E7                     l2102:	
 12835  17E7  1C70               	btfss	___wmul@multiplier,0
 12836  17E8  2FED               	goto	l512
 12837  17E9  0872               	movf	___wmul@multiplicand,w
 12838  17EA  07F4               	addwf	___wmul@product,f
 12839  17EB  0873               	movf	___wmul@multiplicand+1,w
 12840  17EC  3DF5               	addwfc	___wmul@product+1,f
 12841  17ED                     l512:	
 12842  17ED  3001               	movlw	1
 12843  17EE                     u1995:	
 12844  17EE  35F2               	lslf	___wmul@multiplicand,f
 12845  17EF  0DF3               	rlf	___wmul@multiplicand+1,f
 12846  17F0  0B89               	decfsz	9,f
 12847  17F1  2FEE               	goto	u1995
 12848  17F2  3001               	movlw	1
 12849  17F3                     u2005:	
 12850  17F3  36F1               	lsrf	___wmul@multiplier+1,f
 12851  17F4  0CF0               	rrf	___wmul@multiplier,f
 12852  17F5  0B89               	decfsz	9,f
 12853  17F6  2FF3               	goto	u2005
 12854  17F7  0870               	movf	___wmul@multiplier,w
 12855  17F8  0471               	iorwf	___wmul@multiplier+1,w
 12856  17F9  1D03               	btfss	3,2
 12857  17FA  2FE7               	goto	l2102
 12858  17FB  0875               	movf	___wmul@product+1,w
 12859  17FC  00F1               	movwf	?___wmul+1
 12860  17FD  0874               	movf	___wmul@product,w
 12861  17FE  00F0               	movwf	?___wmul
 12862  17FF  0008               	return
 12863  1800                     __end_of___wmul:	
 12864  007E                     btemp	set	126	;btemp
 12865  007E                     wtemp	set	126
 12866  007E                     wtemp0	set	126
 12867  0080                     wtemp1	set	128
 12868  0082                     wtemp2	set	130
 12869  0084                     wtemp3	set	132
 12870  0086                     wtemp4	set	134
 12871  0088                     wtemp5	set	136
 12872  007F                     wtemp6	set	127
 12873  007E                     ttemp	set	126
 12874  007E                     ttemp0	set	126
 12875  0081                     ttemp1	set	129
 12876  0084                     ttemp2	set	132
 12877  0087                     ttemp3	set	135
 12878  007F                     ttemp4	set	127
 12879  007E                     ltemp	set	126
 12880  007E                     ltemp0	set	126
 12881  0082                     ltemp1	set	130
 12882  0086                     ltemp2	set	134
 12883  0080                     ltemp3	set	128


Data Sizes:
    Strings     103
    Constant    27
    Data        45
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     25      78
    BANK2            80     80      80
    BANK3            80      0      41
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[11]), STR_5(CODE[11]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               113   113      0   43827
                                             72 BANK0      8     8      0
                                              0 BANK1     25    25      0
                                              0 BANK2     80    80      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30593
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16009
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7263
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1870
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           4     4      0    3884
                                             14 BANK0      4     4      0
                     _LCD_Set_Cursor
                      _LCD_Write_Int
                   _LCD_Write_String
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     639
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1     910
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1144
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     994
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      29      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     175      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     175      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Apr 04 23:59:53 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l55 0809  
                             l94 179F                               l96 17A5                               l98 17AA  
                             _Kd 00E5                               _Ki 00E7                               _Kp 00E9  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 17AF                              l420 049F                              l182 0FB5  
                            l350 0716                              l512 17ED                              l184 0FE8  
                            l424 0516                              l352 0736                              l185 0FFA  
                            l704 0127                              l567 0017                              l680 0B23  
                            l681 0B2B                              l673 0B10                              l764 0BAE  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 00C4  
                            _log 0CF8                  __end_of_ADCRead 0810                     ___awmod@sign 0076  
                _TMR2_Initialize 174A                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00DC                  __end_of_LCD_Cmd 176C                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0967                     ___ftdiv@sign 003F  
                           l2102 17E7                             l2120 00B0                             l3010 0548  
                           l2130 00C6                             l2300 0A71                             l2060 0AED  
                           l2124 00B7                             l2220 0E2C                             l2212 0E18  
                           l2070 0B15                             l2062 0AF7                             l2150 00FD  
                           l2142 00E0                             l3110 070C                             l3102 06CA  
                           l2304 0A79                             l2320 09F9                             l3008 0534  
                           l2072 0B1D                             l2064 0AFC                             l2056 0AE6  
                           l2160 0119                             l2152 0102                             l2224 0E34  
                           l2208 0E10                             l3120 072A                             l2330 0A0B  
                           l2170 014B                             l2162 0123                             l2154 0106  
                           l3130 073E                             l3106 0704                             l3114 0717  
                           l2092 17A6                             l2316 09F2                             l2180 0166  
                           l2148 00F3                             l2404 0AD7                             l3124 0738  
                           l2342 0A28                             l2334 0A17                             l2510 17CD  
                           l2166 0139                             l2190 0DBF                             l3150 07B1  
                           l3046 05AA                             l2096 17AB                             l2088 17A1  
                           l2440 087B                             l2272 0A37                             l2328 09FF  
                           l3136 075E                             l2290 0A56                             l2338 0A20  
                           l2354 0838                             l2362 0907                             l2460 0987  
                           l2540 0EB5                             l2524 0E7D                             l2196 0DD5  
                           l3092 06B0                             l2446 088C                             l2278 0A42  
                           l2542 0EBA                             l2534 0E84                             l2702 007F  
                           l2366 091D                             l2296 0A68                             l2288 0A4A  
                           l2552 0ED8                             l2544 0EC3                             l2536 0EB1  
                           l2712 0C66                             l2640 0D2A                             l3088 06AA  
                           l2554 0F04                             l2546 0ED4                             l2386 093E  
                           l2634 0D17                             l3098 06C1                             l2812 03B0  
                           l2740 0CD6                             l2732 0CBD                             l2830 0F5B  
                           l2558 0F11                             l2662 1796                             l2718 0C7C  
                           l2656 178B                             l2920 03FE                             l2752 0818  
                           l2850 0FC7                             l2834 0F65                             l2762 0B5A  
                           l2852 0FCA                             l2828 0F58                             l2684 0038  
                           l2676 0028                             l2780 0B8A                             l2942 0545  
                           l2694 0066                             l2686 0046                             l2790 0BB1  
                           l2782 0B98                             l2944 0431                             l2936 03D8  
                           l2970 04AC                             l2938 042C                             l2698 0071  
                           l2794 0BBF                             l2980 04E8                             l2956 0471  
                           l2788 0BA5                             l2992 0521                             l2968 04AA  
                           l2994 0523                             ?_log 0057                             l2998 0529  
                           STR_1 107D                             STR_2 1075                             STR_3 103D  
                           STR_4 104E                             STR_5 105F                             STR_6 106A  
                           STR_7 102C                             STR_8 101B                             u2005 17F3  
                           u2115 00E1                             u3005 0C8E                             u2205 011A  
                           _LATA 0016                             _LATB 0017                             u3015 0C9E  
                           _LATC 0018                             u3025 0CBE                             u2145 00F4  
                           u2305 0E19                             u3035 0CCD                             u3115 0B8B  
                           u2315 0E1F                             u3205 0387                             u3045 0CD7  
                           u2415 0A4D                             u3215 03A0                             u2175 0107  
                           u3305 0FF3                             u3145 0BA6                             u2345 0E35  
                           _T2PR 028D                             u3315 177B                             u2435 0A57  
                           u2515 0A02                             u3235 03BC                             u2355 0E3B  
                           u2275 0DE1                             u3500 0578                             u3245 0F50  
                           u2445 0A61                             u3325 03EE                             u3085 0B61  
                           u2285 0DF1                             u2710 0E67                             u3255 0F61  
                           u2375 08A4                             u2455 0A69                             u2535 0A11  
                           u3175 02B1                             u2800 08EF                             u3265 0F8F  
                           u2545 0A18                             u3425 04D8                             u3185 0303  
                           u3275 0FAE                             u3195 0340                             u3285 0FC0  
                           u3365 0543                             u1925 0B32                             u1845 0AF2  
                           u3295 0FE1                             u3385 0461                             u1865 0B0B  
                           u3707 0BD3                             u2675 0973                             u2915 003B  
                           u3555 06E5                             u3717 0BE1                             u1885 0B18  
                           u3565 0702                             u3637 05A0                             u3807 08B0  
                           u3727 0BEC                             u2695 0992                             u2775 0EF2  
                           u2935 0047                             u3647 07A7                             u3817 08BC  
                           u3737 0BF6                             u3657 0498                             u2945 005B  
                           u3585 0725                             u1995 17EE                             u3827 1766  
                           u3747 0C00                             u3667 050F                             u2955 0067  
                           u3595 0731                             u3757 0C0E                             u3677 09C1  
                           u3767 0C1C                             u3687 09D1                             u3777 0C2C  
                           u3697 09E0                             u3787 0C3B                             u3797 0C4A  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _desc 01B4  
                           _main 054C                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                           _loop 00ED                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0E5C                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0C4F                 __end_of_LCD_Port 17B1   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 171A                  __end_of___aldiv 0088                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0A7E                            _ADPRE 009C                  __end_of___ftadd 017E  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0A2D                            _ADRPT 010D  
                __end_of___ftdiv 0CF8                  __end_of___ftmul 0E5C                  ___awdiv@divisor 0070  
                __end_of___ftsub 082E                  __end_of___fttol 0BC8                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 09A6                    ___awtoft@sign 007D                  __end_of_readKey 1799  
                          _frexp 092C                            _errno 00AC                            _error 00AE  
                  ___ftpack@sign 0074                            _timer 00C0                            main@j 00E0  
                          main@x 0068                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0894  
                __initialization 07B7                      log@exponent 005B                     __end_of_main 07B7  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 1758                        ??_ADCRead 0073  
                         ??_main 00C8                    ___fttol@sign1 0078                __end_of_LCD_Clear 1711  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 084E                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0B42                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
         __end_of_LCD_Write_Char 08C0                   __CFG_PWRTE$OFF 0000                           _Result 00A8  
                   _CCPTMRS1bits 021F                           ___ftge 08F1           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 17E5                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                 _PWM_Initialize 171A                        ??___ftdiv 0036                        ??___ftmul 0026  
                         _choice 00C2                        ??___ftsub 007E                        ??___fttol 0074  
         main@currentTemperature 00D4                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                         _timer2 00C7                  ___awmod@counter 0075                           _totals 00A0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 029B                  _ADCC_Initialize 17B1  
                      ??_readKey 0070                 LCD_Write_Int@str 0025                  _InitCustomChars 086E  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078                    _pidIntegrated 00B6         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 09A6                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                  _derivativeValue 00AA                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 1725                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 173D                     __pidataBANK3 084E              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 0967                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 09E8                       __pbssBANK1 00A0  
                     __pbssBANK3 01C0                       __pbssBANK4 0220               __size_of_eval_poly 0060  
                     ??_LCD_Init 0074                       ??_LCD_Port 0070           __size_of_PID_Calculate 00DB  
                     _delayCount 00C3                  ?_PWM_Initialize 0070                       __pmaintext 054C  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 17CB                          _ADCRead 0802        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 0894                          _LCD_Cmd 1758                   main@holdOutput 006B  
               main@lidOpenCount 006C                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 00DA  
          PID_Calculate@setpoint 0076                        ?_tempCalc 005D                       _readAnalog 029B  
                        ___aldiv 0006                          ___cgram 01A0                       _menuChoice 03D8  
                __size_of___ftge 003B                          ___awdiv 0A2D                          ___ftadd 0088  
                        ___awmod 09E8                          ___ftdiv 0C4F                  __size_of___wmul 001B  
                        ___ftmul 0DA8                          ___ftsub 0810                          ___fttol 0B42  
                     _errorValue 00B0                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0ADE                 ??_LCD_Set_Cursor 0075                          __ptext1 017E  
                        __ptext2 0CF8                          __ptext3 092C                          __ptext4 0A7E  
                        __ptext5 0DA8                          __ptext6 08F1                          __ptext7 082E  
                        __ptext8 0B42                          __ptext9 0810                    _PID_Calculate 0F25  
          _OSCILLATOR_Initialize 1711                          _readKey 1782                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
                   _highRangeSet 01B8                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2350                          _testKey 00C6                        _LCD_Clear 1709  
     __size_of_SYSTEM_Initialize 0042                          clrloop0 1726             end_of_initialization 07FD  
                        init_ram 1731                          initloop 1732                       ??_tempCalc 007E  
               ___aldiv@quotient 0022                LCD_Write_Int@sign 007D                       main@F13670 0220  
                     main@F13664 01C5                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                       main@output 0069  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___ftge 092C                   __end_of___wmul 1800                 _LCD_Write_String 17CB  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07B7                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031  
                    __end_of_log 0DA8                       frexp@value 0070                 ??_PWM_Initialize 0070  
       LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0F25                 __CFG_LPBOREN$OFF 0000  
                       ??___ftge 0076                tempCalc@steinhart 0065                         ??___wmul 0074  
                   _pidMaxOutput 00EB                    _tempCalc$1009 0062                      __pdataBANK1 00E1  
                    __pdataBANK3 01A0                  ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 1782  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
   PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00B8                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2350  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00C8                    __pcstackBANK2 0120         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0074              __size_of_readAnalog 013D              __size_of_menuChoice 0174  
                   _pidPrevError 00BA           _PIN_MANAGER_Initialize 08C0                         ?___aldiv 0070  
              __size_of_tempCalc 011D                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070              main@lastTemperature 006D  
                       ?_readKey 0070                        _eval_poly 0A7E                        _menuDelay 00C5  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0BC8                   ___wmul@product 0074  
                       _LCD_Port 1799                        clear_ram0 1725                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 17E5                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 002E  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 082E  
                       ___ftpack 0ADE         __size_of_ADCC_Initialize 001A                         _channels 01B0  
               __size_of_readKey 0017                PID_Calculate@temp 0078                         __ptext10 0088  
                       __ptext11 0C4F                         __ptext20 09E8                         __ptext12 0ADE  
                       __ptext21 0A2D                         __ptext13 029B                         __ptext30 086E  
                       __ptext22 0967                         __ptext14 0006                         __ptext31 0894  
                       __ptext23 09A6                         __ptext15 0802                         __ptext32 1758  
                       __ptext24 174A                         __ptext16 03D8                         __ptext33 1799  
                       __ptext25 171A                         __ptext17 1782                         __ptext34 17B1  
                       __ptext26 08C0                         __ptext18 17CB                         __ptext35 176C  
                       __ptext27 1711                         __ptext19 0E5C                         __ptext36 0F25  
                       __ptext28 0BC8                         __ptext37 17E5                         __ptext29 1709  
             __end_of_readAnalog 03D8          __size_of_LCD_Set_Cursor 003F                     _signPositive 00BE  
                      tempCalc@R 005F         __size_of_InitCustomChars 0026               __end_of_menuChoice 054C  
                       _lastSign 00B2              LCD_Write_Int@F13694 01C0                         _pidCount 00B4  
                  __size_of_main 026B             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 017E  
                       _setpoint 00E1                      _lowRangeSet 01BC      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00BC  
             _PWM7_LoadDutyValue 176C               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00D2  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079            __end_of_PID_Calculate 1000  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9  
                main@outputIndex 006F   __end_of_PIN_MANAGER_Initialize 08F1                ??_ADCC_Initialize 0070  
                main@outputTotal 00D6                ??_InitCustomChars 0075  
