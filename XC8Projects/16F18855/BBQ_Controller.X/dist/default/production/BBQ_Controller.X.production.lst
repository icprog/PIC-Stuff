

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Mar 25 02:58:40 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  001C                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0110                     	;# 
   111  0110                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011C                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011E                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0198                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  020F                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0210                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0218                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021B                     	;# 
   184  021C                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  028C                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  028F                     	;# 
   196  0290                     	;# 
   197  0290                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0296                     	;# 
   206  0296                     	;# 
   207  0297                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  030C                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  030F                     	;# 
   222  0310                     	;# 
   223  0310                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0314                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031B                     	;# 
   237  031C                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  031F                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0390                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  040C                     	;# 
   249  040D                     	;# 
   250  040E                     	;# 
   251  040F                     	;# 
   252  0410                     	;# 
   253  0411                     	;# 
   254  0416                     	;# 
   255  0416                     	;# 
   256  0417                     	;# 
   257  0418                     	;# 
   258  0418                     	;# 
   259  0419                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  048C                     	;# 
   269  048C                     	;# 
   270  048D                     	;# 
   271  048E                     	;# 
   272  048F                     	;# 
   273  048F                     	;# 
   274  0490                     	;# 
   275  0491                     	;# 
   276  0492                     	;# 
   277  0492                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0495                     	;# 
   282  0496                     	;# 
   283  0497                     	;# 
   284  0498                     	;# 
   285  0499                     	;# 
   286  049A                     	;# 
   287  049B                     	;# 
   288  049C                     	;# 
   289  049D                     	;# 
   290  050C                     	;# 
   291  050C                     	;# 
   292  050D                     	;# 
   293  050E                     	;# 
   294  050F                     	;# 
   295  050F                     	;# 
   296  0510                     	;# 
   297  0511                     	;# 
   298  0512                     	;# 
   299  0512                     	;# 
   300  0513                     	;# 
   301  0514                     	;# 
   302  0515                     	;# 
   303  0515                     	;# 
   304  0516                     	;# 
   305  0517                     	;# 
   306  0518                     	;# 
   307  0519                     	;# 
   308  051A                     	;# 
   309  051B                     	;# 
   310  051C                     	;# 
   311  051D                     	;# 
   312  058C                     	;# 
   313  058C                     	;# 
   314  058D                     	;# 
   315  058E                     	;# 
   316  058F                     	;# 
   317  058F                     	;# 
   318  0590                     	;# 
   319  0591                     	;# 
   320  0592                     	;# 
   321  0593                     	;# 
   322  060C                     	;# 
   323  060D                     	;# 
   324  060E                     	;# 
   325  060F                     	;# 
   326  0610                     	;# 
   327  0611                     	;# 
   328  0612                     	;# 
   329  0613                     	;# 
   330  0614                     	;# 
   331  0616                     	;# 
   332  0617                     	;# 
   333  0618                     	;# 
   334  0619                     	;# 
   335  061A                     	;# 
   336  061B                     	;# 
   337  061C                     	;# 
   338  061D                     	;# 
   339  061E                     	;# 
   340  068C                     	;# 
   341  068D                     	;# 
   342  068E                     	;# 
   343  068F                     	;# 
   344  0690                     	;# 
   345  0691                     	;# 
   346  0692                     	;# 
   347  0693                     	;# 
   348  0694                     	;# 
   349  070C                     	;# 
   350  070D                     	;# 
   351  070E                     	;# 
   352  070F                     	;# 
   353  0710                     	;# 
   354  0711                     	;# 
   355  0712                     	;# 
   356  0713                     	;# 
   357  0714                     	;# 
   358  0716                     	;# 
   359  0717                     	;# 
   360  0718                     	;# 
   361  0719                     	;# 
   362  071A                     	;# 
   363  071B                     	;# 
   364  071C                     	;# 
   365  071D                     	;# 
   366  071E                     	;# 
   367  0796                     	;# 
   368  0797                     	;# 
   369  0798                     	;# 
   370  0799                     	;# 
   371  079A                     	;# 
   372  079B                     	;# 
   373  080C                     	;# 
   374  080D                     	;# 
   375  080E                     	;# 
   376  080F                     	;# 
   377  0810                     	;# 
   378  0811                     	;# 
   379  0812                     	;# 
   380  0813                     	;# 
   381  0814                     	;# 
   382  081A                     	;# 
   383  081B                     	;# 
   384  081C                     	;# 
   385  081D                     	;# 
   386  081E                     	;# 
   387  081F                     	;# 
   388  088C                     	;# 
   389  088D                     	;# 
   390  088E                     	;# 
   391  088F                     	;# 
   392  0890                     	;# 
   393  0891                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0895                     	;# 
   397  0896                     	;# 
   398  0897                     	;# 
   399  0898                     	;# 
   400  0899                     	;# 
   401  089A                     	;# 
   402  089B                     	;# 
   403  090C                     	;# 
   404  090E                     	;# 
   405  090F                     	;# 
   406  091F                     	;# 
   407  091F                     	;# 
   408  098F                     	;# 
   409  098F                     	;# 
   410  0990                     	;# 
   411  0991                     	;# 
   412  0992                     	;# 
   413  0993                     	;# 
   414  0994                     	;# 
   415  0995                     	;# 
   416  0996                     	;# 
   417  0997                     	;# 
   418  0E0F                     	;# 
   419  0E10                     	;# 
   420  0E11                     	;# 
   421  0E12                     	;# 
   422  0E13                     	;# 
   423  0E14                     	;# 
   424  0E15                     	;# 
   425  0E16                     	;# 
   426  0E17                     	;# 
   427  0E18                     	;# 
   428  0E19                     	;# 
   429  0E1A                     	;# 
   430  0E1B                     	;# 
   431  0E1C                     	;# 
   432  0E1D                     	;# 
   433  0E1E                     	;# 
   434  0E1F                     	;# 
   435  0E20                     	;# 
   436  0E21                     	;# 
   437  0E22                     	;# 
   438  0E23                     	;# 
   439  0E24                     	;# 
   440  0E25                     	;# 
   441  0E26                     	;# 
   442  0E27                     	;# 
   443  0E28                     	;# 
   444  0E29                     	;# 
   445  0E2A                     	;# 
   446  0E2B                     	;# 
   447  0E2C                     	;# 
   448  0E2D                     	;# 
   449  0E2E                     	;# 
   450  0E2F                     	;# 
   451  0E30                     	;# 
   452  0E31                     	;# 
   453  0E32                     	;# 
   454  0E33                     	;# 
   455  0E34                     	;# 
   456  0E35                     	;# 
   457  0E36                     	;# 
   458  0E37                     	;# 
   459  0E8F                     	;# 
   460  0E90                     	;# 
   461  0E91                     	;# 
   462  0E92                     	;# 
   463  0E93                     	;# 
   464  0E94                     	;# 
   465  0E95                     	;# 
   466  0E96                     	;# 
   467  0E97                     	;# 
   468  0E9C                     	;# 
   469  0E9D                     	;# 
   470  0E9E                     	;# 
   471  0EA1                     	;# 
   472  0EA2                     	;# 
   473  0EA3                     	;# 
   474  0EA4                     	;# 
   475  0EA5                     	;# 
   476  0EA9                     	;# 
   477  0EAA                     	;# 
   478  0EAB                     	;# 
   479  0EAC                     	;# 
   480  0EB1                     	;# 
   481  0EB2                     	;# 
   482  0EB3                     	;# 
   483  0EB8                     	;# 
   484  0EB9                     	;# 
   485  0EBA                     	;# 
   486  0EBB                     	;# 
   487  0EBC                     	;# 
   488  0EBD                     	;# 
   489  0EBE                     	;# 
   490  0EC3                     	;# 
   491  0EC5                     	;# 
   492  0EC6                     	;# 
   493  0EC7                     	;# 
   494  0EC8                     	;# 
   495  0EC9                     	;# 
   496  0ECA                     	;# 
   497  0ECB                     	;# 
   498  0ECC                     	;# 
   499  0F10                     	;# 
   500  0F11                     	;# 
   501  0F12                     	;# 
   502  0F13                     	;# 
   503  0F14                     	;# 
   504  0F15                     	;# 
   505  0F16                     	;# 
   506  0F17                     	;# 
   507  0F18                     	;# 
   508  0F19                     	;# 
   509  0F1A                     	;# 
   510  0F1B                     	;# 
   511  0F1C                     	;# 
   512  0F1D                     	;# 
   513  0F1E                     	;# 
   514  0F1F                     	;# 
   515  0F20                     	;# 
   516  0F21                     	;# 
   517  0F22                     	;# 
   518  0F23                     	;# 
   519  0F24                     	;# 
   520  0F25                     	;# 
   521  0F26                     	;# 
   522  0F27                     	;# 
   523  0F38                     	;# 
   524  0F39                     	;# 
   525  0F3A                     	;# 
   526  0F3B                     	;# 
   527  0F3C                     	;# 
   528  0F3D                     	;# 
   529  0F3E                     	;# 
   530  0F3F                     	;# 
   531  0F40                     	;# 
   532  0F41                     	;# 
   533  0F43                     	;# 
   534  0F44                     	;# 
   535  0F45                     	;# 
   536  0F46                     	;# 
   537  0F47                     	;# 
   538  0F48                     	;# 
   539  0F49                     	;# 
   540  0F4A                     	;# 
   541  0F4B                     	;# 
   542  0F4C                     	;# 
   543  0F4E                     	;# 
   544  0F4F                     	;# 
   545  0F50                     	;# 
   546  0F51                     	;# 
   547  0F52                     	;# 
   548  0F53                     	;# 
   549  0F54                     	;# 
   550  0F55                     	;# 
   551  0F56                     	;# 
   552  0F57                     	;# 
   553  0F65                     	;# 
   554  0F68                     	;# 
   555  0F69                     	;# 
   556  0F6A                     	;# 
   557  0F6B                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  0010                     	;# 
   585  0011                     	;# 
   586  0012                     	;# 
   587  0013                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  001C                     	;# 
   592  001C                     	;# 
   593  001D                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010E                     	;# 
   622  010F                     	;# 
   623  0110                     	;# 
   624  0110                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0112                     	;# 
   628  0113                     	;# 
   629  0114                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011C                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011D                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011E                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  018E                     	;# 
   663  018F                     	;# 
   664  0190                     	;# 
   665  0191                     	;# 
   666  0192                     	;# 
   667  0196                     	;# 
   668  0197                     	;# 
   669  0198                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  020C                     	;# 
   675  020D                     	;# 
   676  020E                     	;# 
   677  020F                     	;# 
   678  020F                     	;# 
   679  0210                     	;# 
   680  0210                     	;# 
   681  0211                     	;# 
   682  0211                     	;# 
   683  0212                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0216                     	;# 
   690  0217                     	;# 
   691  0217                     	;# 
   692  0218                     	;# 
   693  0219                     	;# 
   694  021A                     	;# 
   695  021B                     	;# 
   696  021B                     	;# 
   697  021C                     	;# 
   698  021C                     	;# 
   699  021D                     	;# 
   700  021D                     	;# 
   701  021E                     	;# 
   702  021F                     	;# 
   703  028C                     	;# 
   704  028C                     	;# 
   705  028D                     	;# 
   706  028D                     	;# 
   707  028E                     	;# 
   708  028F                     	;# 
   709  0290                     	;# 
   710  0290                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0293                     	;# 
   716  0294                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0296                     	;# 
   720  0297                     	;# 
   721  0298                     	;# 
   722  0298                     	;# 
   723  0299                     	;# 
   724  0299                     	;# 
   725  029A                     	;# 
   726  029B                     	;# 
   727  029C                     	;# 
   728  029C                     	;# 
   729  029D                     	;# 
   730  030C                     	;# 
   731  030C                     	;# 
   732  030D                     	;# 
   733  030E                     	;# 
   734  030F                     	;# 
   735  0310                     	;# 
   736  0310                     	;# 
   737  0311                     	;# 
   738  0312                     	;# 
   739  0313                     	;# 
   740  0314                     	;# 
   741  0314                     	;# 
   742  0315                     	;# 
   743  0316                     	;# 
   744  0317                     	;# 
   745  0318                     	;# 
   746  0318                     	;# 
   747  0319                     	;# 
   748  031A                     	;# 
   749  031B                     	;# 
   750  031C                     	;# 
   751  031C                     	;# 
   752  031D                     	;# 
   753  031E                     	;# 
   754  031F                     	;# 
   755  038C                     	;# 
   756  038D                     	;# 
   757  038E                     	;# 
   758  0390                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  040C                     	;# 
   762  040D                     	;# 
   763  040E                     	;# 
   764  040F                     	;# 
   765  0410                     	;# 
   766  0411                     	;# 
   767  0416                     	;# 
   768  0416                     	;# 
   769  0417                     	;# 
   770  0418                     	;# 
   771  0418                     	;# 
   772  0419                     	;# 
   773  041A                     	;# 
   774  041A                     	;# 
   775  041B                     	;# 
   776  041C                     	;# 
   777  041C                     	;# 
   778  041D                     	;# 
   779  041E                     	;# 
   780  041F                     	;# 
   781  048C                     	;# 
   782  048C                     	;# 
   783  048D                     	;# 
   784  048E                     	;# 
   785  048F                     	;# 
   786  048F                     	;# 
   787  0490                     	;# 
   788  0491                     	;# 
   789  0492                     	;# 
   790  0492                     	;# 
   791  0493                     	;# 
   792  0494                     	;# 
   793  0495                     	;# 
   794  0495                     	;# 
   795  0496                     	;# 
   796  0497                     	;# 
   797  0498                     	;# 
   798  0499                     	;# 
   799  049A                     	;# 
   800  049B                     	;# 
   801  049C                     	;# 
   802  049D                     	;# 
   803  050C                     	;# 
   804  050C                     	;# 
   805  050D                     	;# 
   806  050E                     	;# 
   807  050F                     	;# 
   808  050F                     	;# 
   809  0510                     	;# 
   810  0511                     	;# 
   811  0512                     	;# 
   812  0512                     	;# 
   813  0513                     	;# 
   814  0514                     	;# 
   815  0515                     	;# 
   816  0515                     	;# 
   817  0516                     	;# 
   818  0517                     	;# 
   819  0518                     	;# 
   820  0519                     	;# 
   821  051A                     	;# 
   822  051B                     	;# 
   823  051C                     	;# 
   824  051D                     	;# 
   825  058C                     	;# 
   826  058C                     	;# 
   827  058D                     	;# 
   828  058E                     	;# 
   829  058F                     	;# 
   830  058F                     	;# 
   831  0590                     	;# 
   832  0591                     	;# 
   833  0592                     	;# 
   834  0593                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0618                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061D                     	;# 
   852  061E                     	;# 
   853  068C                     	;# 
   854  068D                     	;# 
   855  068E                     	;# 
   856  068F                     	;# 
   857  0690                     	;# 
   858  0691                     	;# 
   859  0692                     	;# 
   860  0693                     	;# 
   861  0694                     	;# 
   862  070C                     	;# 
   863  070D                     	;# 
   864  070E                     	;# 
   865  070F                     	;# 
   866  0710                     	;# 
   867  0711                     	;# 
   868  0712                     	;# 
   869  0713                     	;# 
   870  0714                     	;# 
   871  0716                     	;# 
   872  0717                     	;# 
   873  0718                     	;# 
   874  0719                     	;# 
   875  071A                     	;# 
   876  071B                     	;# 
   877  071C                     	;# 
   878  071D                     	;# 
   879  071E                     	;# 
   880  0796                     	;# 
   881  0797                     	;# 
   882  0798                     	;# 
   883  0799                     	;# 
   884  079A                     	;# 
   885  079B                     	;# 
   886  080C                     	;# 
   887  080D                     	;# 
   888  080E                     	;# 
   889  080F                     	;# 
   890  0810                     	;# 
   891  0811                     	;# 
   892  0812                     	;# 
   893  0813                     	;# 
   894  0814                     	;# 
   895  081A                     	;# 
   896  081B                     	;# 
   897  081C                     	;# 
   898  081D                     	;# 
   899  081E                     	;# 
   900  081F                     	;# 
   901  088C                     	;# 
   902  088D                     	;# 
   903  088E                     	;# 
   904  088F                     	;# 
   905  0890                     	;# 
   906  0891                     	;# 
   907  0892                     	;# 
   908  0893                     	;# 
   909  0895                     	;# 
   910  0896                     	;# 
   911  0897                     	;# 
   912  0898                     	;# 
   913  0899                     	;# 
   914  089A                     	;# 
   915  089B                     	;# 
   916  090C                     	;# 
   917  090E                     	;# 
   918  090F                     	;# 
   919  091F                     	;# 
   920  091F                     	;# 
   921  098F                     	;# 
   922  098F                     	;# 
   923  0990                     	;# 
   924  0991                     	;# 
   925  0992                     	;# 
   926  0993                     	;# 
   927  0994                     	;# 
   928  0995                     	;# 
   929  0996                     	;# 
   930  0997                     	;# 
   931  0E0F                     	;# 
   932  0E10                     	;# 
   933  0E11                     	;# 
   934  0E12                     	;# 
   935  0E13                     	;# 
   936  0E14                     	;# 
   937  0E15                     	;# 
   938  0E16                     	;# 
   939  0E17                     	;# 
   940  0E18                     	;# 
   941  0E19                     	;# 
   942  0E1A                     	;# 
   943  0E1B                     	;# 
   944  0E1C                     	;# 
   945  0E1D                     	;# 
   946  0E1E                     	;# 
   947  0E1F                     	;# 
   948  0E20                     	;# 
   949  0E21                     	;# 
   950  0E22                     	;# 
   951  0E23                     	;# 
   952  0E24                     	;# 
   953  0E25                     	;# 
   954  0E26                     	;# 
   955  0E27                     	;# 
   956  0E28                     	;# 
   957  0E29                     	;# 
   958  0E2A                     	;# 
   959  0E2B                     	;# 
   960  0E2C                     	;# 
   961  0E2D                     	;# 
   962  0E2E                     	;# 
   963  0E2F                     	;# 
   964  0E30                     	;# 
   965  0E31                     	;# 
   966  0E32                     	;# 
   967  0E33                     	;# 
   968  0E34                     	;# 
   969  0E35                     	;# 
   970  0E36                     	;# 
   971  0E37                     	;# 
   972  0E8F                     	;# 
   973  0E90                     	;# 
   974  0E91                     	;# 
   975  0E92                     	;# 
   976  0E93                     	;# 
   977  0E94                     	;# 
   978  0E95                     	;# 
   979  0E96                     	;# 
   980  0E97                     	;# 
   981  0E9C                     	;# 
   982  0E9D                     	;# 
   983  0E9E                     	;# 
   984  0EA1                     	;# 
   985  0EA2                     	;# 
   986  0EA3                     	;# 
   987  0EA4                     	;# 
   988  0EA5                     	;# 
   989  0EA9                     	;# 
   990  0EAA                     	;# 
   991  0EAB                     	;# 
   992  0EAC                     	;# 
   993  0EB1                     	;# 
   994  0EB2                     	;# 
   995  0EB3                     	;# 
   996  0EB8                     	;# 
   997  0EB9                     	;# 
   998  0EBA                     	;# 
   999  0EBB                     	;# 
  1000  0EBC                     	;# 
  1001  0EBD                     	;# 
  1002  0EBE                     	;# 
  1003  0EC3                     	;# 
  1004  0EC5                     	;# 
  1005  0EC6                     	;# 
  1006  0EC7                     	;# 
  1007  0EC8                     	;# 
  1008  0EC9                     	;# 
  1009  0ECA                     	;# 
  1010  0ECB                     	;# 
  1011  0ECC                     	;# 
  1012  0F10                     	;# 
  1013  0F11                     	;# 
  1014  0F12                     	;# 
  1015  0F13                     	;# 
  1016  0F14                     	;# 
  1017  0F15                     	;# 
  1018  0F16                     	;# 
  1019  0F17                     	;# 
  1020  0F18                     	;# 
  1021  0F19                     	;# 
  1022  0F1A                     	;# 
  1023  0F1B                     	;# 
  1024  0F1C                     	;# 
  1025  0F1D                     	;# 
  1026  0F1E                     	;# 
  1027  0F1F                     	;# 
  1028  0F20                     	;# 
  1029  0F21                     	;# 
  1030  0F22                     	;# 
  1031  0F23                     	;# 
  1032  0F24                     	;# 
  1033  0F25                     	;# 
  1034  0F26                     	;# 
  1035  0F27                     	;# 
  1036  0F38                     	;# 
  1037  0F39                     	;# 
  1038  0F3A                     	;# 
  1039  0F3B                     	;# 
  1040  0F3C                     	;# 
  1041  0F3D                     	;# 
  1042  0F3E                     	;# 
  1043  0F3F                     	;# 
  1044  0F40                     	;# 
  1045  0F41                     	;# 
  1046  0F43                     	;# 
  1047  0F44                     	;# 
  1048  0F45                     	;# 
  1049  0F46                     	;# 
  1050  0F47                     	;# 
  1051  0F48                     	;# 
  1052  0F49                     	;# 
  1053  0F4A                     	;# 
  1054  0F4B                     	;# 
  1055  0F4C                     	;# 
  1056  0F4E                     	;# 
  1057  0F4F                     	;# 
  1058  0F50                     	;# 
  1059  0F51                     	;# 
  1060  0F52                     	;# 
  1061  0F53                     	;# 
  1062  0F54                     	;# 
  1063  0F55                     	;# 
  1064  0F56                     	;# 
  1065  0F57                     	;# 
  1066  0F65                     	;# 
  1067  0F68                     	;# 
  1068  0F69                     	;# 
  1069  0F6A                     	;# 
  1070  0F6B                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000D                     	;# 
  1096  000E                     	;# 
  1097  0010                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0013                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  001C                     	;# 
  1105  001C                     	;# 
  1106  001D                     	;# 
  1107  001D                     	;# 
  1108  001E                     	;# 
  1109  001F                     	;# 
  1110  008C                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  008E                     	;# 
  1115  008F                     	;# 
  1116  0090                     	;# 
  1117  0090                     	;# 
  1118  0091                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  010E                     	;# 
  1134  010E                     	;# 
  1135  010F                     	;# 
  1136  0110                     	;# 
  1137  0110                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0112                     	;# 
  1141  0113                     	;# 
  1142  0114                     	;# 
  1143  0114                     	;# 
  1144  0115                     	;# 
  1145  0116                     	;# 
  1146  0116                     	;# 
  1147  0117                     	;# 
  1148  0119                     	;# 
  1149  0119                     	;# 
  1150  0119                     	;# 
  1151  011A                     	;# 
  1152  011A                     	;# 
  1153  011A                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011C                     	;# 
  1160  011C                     	;# 
  1161  011C                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  011D                     	;# 
  1165  011E                     	;# 
  1166  011E                     	;# 
  1167  011E                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175  018E                     	;# 
  1176  018F                     	;# 
  1177  0190                     	;# 
  1178  0191                     	;# 
  1179  0192                     	;# 
  1180  0196                     	;# 
  1181  0197                     	;# 
  1182  0198                     	;# 
  1183  0199                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019C                     	;# 
  1187  020C                     	;# 
  1188  020D                     	;# 
  1189  020E                     	;# 
  1190  020F                     	;# 
  1191  020F                     	;# 
  1192  0210                     	;# 
  1193  0210                     	;# 
  1194  0211                     	;# 
  1195  0211                     	;# 
  1196  0212                     	;# 
  1197  0213                     	;# 
  1198  0214                     	;# 
  1199  0215                     	;# 
  1200  0215                     	;# 
  1201  0216                     	;# 
  1202  0216                     	;# 
  1203  0217                     	;# 
  1204  0217                     	;# 
  1205  0218                     	;# 
  1206  0219                     	;# 
  1207  021A                     	;# 
  1208  021B                     	;# 
  1209  021B                     	;# 
  1210  021C                     	;# 
  1211  021C                     	;# 
  1212  021D                     	;# 
  1213  021D                     	;# 
  1214  021E                     	;# 
  1215  021F                     	;# 
  1216  028C                     	;# 
  1217  028C                     	;# 
  1218  028D                     	;# 
  1219  028D                     	;# 
  1220  028E                     	;# 
  1221  028F                     	;# 
  1222  0290                     	;# 
  1223  0290                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0293                     	;# 
  1229  0294                     	;# 
  1230  0295                     	;# 
  1231  0296                     	;# 
  1232  0296                     	;# 
  1233  0297                     	;# 
  1234  0298                     	;# 
  1235  0298                     	;# 
  1236  0299                     	;# 
  1237  0299                     	;# 
  1238  029A                     	;# 
  1239  029B                     	;# 
  1240  029C                     	;# 
  1241  029C                     	;# 
  1242  029D                     	;# 
  1243  030C                     	;# 
  1244  030C                     	;# 
  1245  030D                     	;# 
  1246  030E                     	;# 
  1247  030F                     	;# 
  1248  0310                     	;# 
  1249  0310                     	;# 
  1250  0311                     	;# 
  1251  0312                     	;# 
  1252  0313                     	;# 
  1253  0314                     	;# 
  1254  0314                     	;# 
  1255  0315                     	;# 
  1256  0316                     	;# 
  1257  0317                     	;# 
  1258  0318                     	;# 
  1259  0318                     	;# 
  1260  0319                     	;# 
  1261  031A                     	;# 
  1262  031B                     	;# 
  1263  031C                     	;# 
  1264  031C                     	;# 
  1265  031D                     	;# 
  1266  031E                     	;# 
  1267  031F                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  040C                     	;# 
  1275  040D                     	;# 
  1276  040E                     	;# 
  1277  040F                     	;# 
  1278  0410                     	;# 
  1279  0411                     	;# 
  1280  0416                     	;# 
  1281  0416                     	;# 
  1282  0417                     	;# 
  1283  0418                     	;# 
  1284  0418                     	;# 
  1285  0419                     	;# 
  1286  041A                     	;# 
  1287  041A                     	;# 
  1288  041B                     	;# 
  1289  041C                     	;# 
  1290  041C                     	;# 
  1291  041D                     	;# 
  1292  041E                     	;# 
  1293  041F                     	;# 
  1294  048C                     	;# 
  1295  048C                     	;# 
  1296  048D                     	;# 
  1297  048E                     	;# 
  1298  048F                     	;# 
  1299  048F                     	;# 
  1300  0490                     	;# 
  1301  0491                     	;# 
  1302  0492                     	;# 
  1303  0492                     	;# 
  1304  0493                     	;# 
  1305  0494                     	;# 
  1306  0495                     	;# 
  1307  0495                     	;# 
  1308  0496                     	;# 
  1309  0497                     	;# 
  1310  0498                     	;# 
  1311  0499                     	;# 
  1312  049A                     	;# 
  1313  049B                     	;# 
  1314  049C                     	;# 
  1315  049D                     	;# 
  1316  050C                     	;# 
  1317  050C                     	;# 
  1318  050D                     	;# 
  1319  050E                     	;# 
  1320  050F                     	;# 
  1321  050F                     	;# 
  1322  0510                     	;# 
  1323  0511                     	;# 
  1324  0512                     	;# 
  1325  0512                     	;# 
  1326  0513                     	;# 
  1327  0514                     	;# 
  1328  0515                     	;# 
  1329  0515                     	;# 
  1330  0516                     	;# 
  1331  0517                     	;# 
  1332  0518                     	;# 
  1333  0519                     	;# 
  1334  051A                     	;# 
  1335  051B                     	;# 
  1336  051C                     	;# 
  1337  051D                     	;# 
  1338  058C                     	;# 
  1339  058C                     	;# 
  1340  058D                     	;# 
  1341  058E                     	;# 
  1342  058F                     	;# 
  1343  058F                     	;# 
  1344  0590                     	;# 
  1345  0591                     	;# 
  1346  0592                     	;# 
  1347  0593                     	;# 
  1348  060C                     	;# 
  1349  060D                     	;# 
  1350  060E                     	;# 
  1351  060F                     	;# 
  1352  0610                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0614                     	;# 
  1357  0616                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061D                     	;# 
  1365  061E                     	;# 
  1366  068C                     	;# 
  1367  068D                     	;# 
  1368  068E                     	;# 
  1369  068F                     	;# 
  1370  0690                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  070C                     	;# 
  1376  070D                     	;# 
  1377  070E                     	;# 
  1378  070F                     	;# 
  1379  0710                     	;# 
  1380  0711                     	;# 
  1381  0712                     	;# 
  1382  0713                     	;# 
  1383  0714                     	;# 
  1384  0716                     	;# 
  1385  0717                     	;# 
  1386  0718                     	;# 
  1387  0719                     	;# 
  1388  071A                     	;# 
  1389  071B                     	;# 
  1390  071C                     	;# 
  1391  071D                     	;# 
  1392  071E                     	;# 
  1393  0796                     	;# 
  1394  0797                     	;# 
  1395  0798                     	;# 
  1396  0799                     	;# 
  1397  079A                     	;# 
  1398  079B                     	;# 
  1399  080C                     	;# 
  1400  080D                     	;# 
  1401  080E                     	;# 
  1402  080F                     	;# 
  1403  0810                     	;# 
  1404  0811                     	;# 
  1405  0812                     	;# 
  1406  0813                     	;# 
  1407  0814                     	;# 
  1408  081A                     	;# 
  1409  081B                     	;# 
  1410  081C                     	;# 
  1411  081D                     	;# 
  1412  081E                     	;# 
  1413  081F                     	;# 
  1414  088C                     	;# 
  1415  088D                     	;# 
  1416  088E                     	;# 
  1417  088F                     	;# 
  1418  0890                     	;# 
  1419  0891                     	;# 
  1420  0892                     	;# 
  1421  0893                     	;# 
  1422  0895                     	;# 
  1423  0896                     	;# 
  1424  0897                     	;# 
  1425  0898                     	;# 
  1426  0899                     	;# 
  1427  089A                     	;# 
  1428  089B                     	;# 
  1429  090C                     	;# 
  1430  090E                     	;# 
  1431  090F                     	;# 
  1432  091F                     	;# 
  1433  091F                     	;# 
  1434  098F                     	;# 
  1435  098F                     	;# 
  1436  0990                     	;# 
  1437  0991                     	;# 
  1438  0992                     	;# 
  1439  0993                     	;# 
  1440  0994                     	;# 
  1441  0995                     	;# 
  1442  0996                     	;# 
  1443  0997                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E23                     	;# 
  1465  0E24                     	;# 
  1466  0E25                     	;# 
  1467  0E26                     	;# 
  1468  0E27                     	;# 
  1469  0E28                     	;# 
  1470  0E29                     	;# 
  1471  0E2A                     	;# 
  1472  0E2B                     	;# 
  1473  0E2C                     	;# 
  1474  0E2D                     	;# 
  1475  0E2E                     	;# 
  1476  0E2F                     	;# 
  1477  0E30                     	;# 
  1478  0E31                     	;# 
  1479  0E32                     	;# 
  1480  0E33                     	;# 
  1481  0E34                     	;# 
  1482  0E35                     	;# 
  1483  0E36                     	;# 
  1484  0E37                     	;# 
  1485  0E8F                     	;# 
  1486  0E90                     	;# 
  1487  0E91                     	;# 
  1488  0E92                     	;# 
  1489  0E93                     	;# 
  1490  0E94                     	;# 
  1491  0E95                     	;# 
  1492  0E96                     	;# 
  1493  0E97                     	;# 
  1494  0E9C                     	;# 
  1495  0E9D                     	;# 
  1496  0E9E                     	;# 
  1497  0EA1                     	;# 
  1498  0EA2                     	;# 
  1499  0EA3                     	;# 
  1500  0EA4                     	;# 
  1501  0EA5                     	;# 
  1502  0EA9                     	;# 
  1503  0EAA                     	;# 
  1504  0EAB                     	;# 
  1505  0EAC                     	;# 
  1506  0EB1                     	;# 
  1507  0EB2                     	;# 
  1508  0EB3                     	;# 
  1509  0EB8                     	;# 
  1510  0EB9                     	;# 
  1511  0EBA                     	;# 
  1512  0EBB                     	;# 
  1513  0EBC                     	;# 
  1514  0EBD                     	;# 
  1515  0EBE                     	;# 
  1516  0EC3                     	;# 
  1517  0EC5                     	;# 
  1518  0EC6                     	;# 
  1519  0EC7                     	;# 
  1520  0EC8                     	;# 
  1521  0EC9                     	;# 
  1522  0ECA                     	;# 
  1523  0ECB                     	;# 
  1524  0ECC                     	;# 
  1525  0F10                     	;# 
  1526  0F11                     	;# 
  1527  0F12                     	;# 
  1528  0F13                     	;# 
  1529  0F14                     	;# 
  1530  0F15                     	;# 
  1531  0F16                     	;# 
  1532  0F17                     	;# 
  1533  0F18                     	;# 
  1534  0F19                     	;# 
  1535  0F1A                     	;# 
  1536  0F1B                     	;# 
  1537  0F1C                     	;# 
  1538  0F1D                     	;# 
  1539  0F1E                     	;# 
  1540  0F1F                     	;# 
  1541  0F20                     	;# 
  1542  0F21                     	;# 
  1543  0F22                     	;# 
  1544  0F23                     	;# 
  1545  0F24                     	;# 
  1546  0F25                     	;# 
  1547  0F26                     	;# 
  1548  0F27                     	;# 
  1549  0F38                     	;# 
  1550  0F39                     	;# 
  1551  0F3A                     	;# 
  1552  0F3B                     	;# 
  1553  0F3C                     	;# 
  1554  0F3D                     	;# 
  1555  0F3E                     	;# 
  1556  0F3F                     	;# 
  1557  0F40                     	;# 
  1558  0F41                     	;# 
  1559  0F43                     	;# 
  1560  0F44                     	;# 
  1561  0F45                     	;# 
  1562  0F46                     	;# 
  1563  0F47                     	;# 
  1564  0F48                     	;# 
  1565  0F49                     	;# 
  1566  0F4A                     	;# 
  1567  0F4B                     	;# 
  1568  0F4C                     	;# 
  1569  0F4E                     	;# 
  1570  0F4F                     	;# 
  1571  0F50                     	;# 
  1572  0F51                     	;# 
  1573  0F52                     	;# 
  1574  0F53                     	;# 
  1575  0F54                     	;# 
  1576  0F55                     	;# 
  1577  0F56                     	;# 
  1578  0F57                     	;# 
  1579  0F65                     	;# 
  1580  0F68                     	;# 
  1581  0F69                     	;# 
  1582  0F6A                     	;# 
  1583  0F6B                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595  0000                     	;# 
  1596  0001                     	;# 
  1597  0002                     	;# 
  1598  0003                     	;# 
  1599  0004                     	;# 
  1600  0005                     	;# 
  1601  0006                     	;# 
  1602  0007                     	;# 
  1603  0008                     	;# 
  1604  0009                     	;# 
  1605  000A                     	;# 
  1606  000B                     	;# 
  1607  000C                     	;# 
  1608  000D                     	;# 
  1609  000E                     	;# 
  1610  0010                     	;# 
  1611  0011                     	;# 
  1612  0012                     	;# 
  1613  0013                     	;# 
  1614  0016                     	;# 
  1615  0017                     	;# 
  1616  0018                     	;# 
  1617  001C                     	;# 
  1618  001C                     	;# 
  1619  001D                     	;# 
  1620  001D                     	;# 
  1621  001E                     	;# 
  1622  001F                     	;# 
  1623  008C                     	;# 
  1624  008C                     	;# 
  1625  008D                     	;# 
  1626  008E                     	;# 
  1627  008E                     	;# 
  1628  008F                     	;# 
  1629  0090                     	;# 
  1630  0090                     	;# 
  1631  0091                     	;# 
  1632  0093                     	;# 
  1633  0094                     	;# 
  1634  0095                     	;# 
  1635  0096                     	;# 
  1636  0097                     	;# 
  1637  0098                     	;# 
  1638  0099                     	;# 
  1639  009A                     	;# 
  1640  009B                     	;# 
  1641  009C                     	;# 
  1642  009D                     	;# 
  1643  009E                     	;# 
  1644  010C                     	;# 
  1645  010D                     	;# 
  1646  010E                     	;# 
  1647  010E                     	;# 
  1648  010F                     	;# 
  1649  0110                     	;# 
  1650  0110                     	;# 
  1651  0111                     	;# 
  1652  0112                     	;# 
  1653  0112                     	;# 
  1654  0113                     	;# 
  1655  0114                     	;# 
  1656  0114                     	;# 
  1657  0115                     	;# 
  1658  0116                     	;# 
  1659  0116                     	;# 
  1660  0117                     	;# 
  1661  0119                     	;# 
  1662  0119                     	;# 
  1663  0119                     	;# 
  1664  011A                     	;# 
  1665  011A                     	;# 
  1666  011A                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011C                     	;# 
  1673  011C                     	;# 
  1674  011C                     	;# 
  1675  011D                     	;# 
  1676  011D                     	;# 
  1677  011D                     	;# 
  1678  011E                     	;# 
  1679  011E                     	;# 
  1680  011E                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  018C                     	;# 
  1687  018D                     	;# 
  1688  018E                     	;# 
  1689  018F                     	;# 
  1690  0190                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0196                     	;# 
  1694  0197                     	;# 
  1695  0198                     	;# 
  1696  0199                     	;# 
  1697  019A                     	;# 
  1698  019B                     	;# 
  1699  019C                     	;# 
  1700  020C                     	;# 
  1701  020D                     	;# 
  1702  020E                     	;# 
  1703  020F                     	;# 
  1704  020F                     	;# 
  1705  0210                     	;# 
  1706  0210                     	;# 
  1707  0211                     	;# 
  1708  0211                     	;# 
  1709  0212                     	;# 
  1710  0213                     	;# 
  1711  0214                     	;# 
  1712  0215                     	;# 
  1713  0215                     	;# 
  1714  0216                     	;# 
  1715  0216                     	;# 
  1716  0217                     	;# 
  1717  0217                     	;# 
  1718  0218                     	;# 
  1719  0219                     	;# 
  1720  021A                     	;# 
  1721  021B                     	;# 
  1722  021B                     	;# 
  1723  021C                     	;# 
  1724  021C                     	;# 
  1725  021D                     	;# 
  1726  021D                     	;# 
  1727  021E                     	;# 
  1728  021F                     	;# 
  1729  028C                     	;# 
  1730  028C                     	;# 
  1731  028D                     	;# 
  1732  028D                     	;# 
  1733  028E                     	;# 
  1734  028F                     	;# 
  1735  0290                     	;# 
  1736  0290                     	;# 
  1737  0291                     	;# 
  1738  0292                     	;# 
  1739  0292                     	;# 
  1740  0293                     	;# 
  1741  0293                     	;# 
  1742  0294                     	;# 
  1743  0295                     	;# 
  1744  0296                     	;# 
  1745  0296                     	;# 
  1746  0297                     	;# 
  1747  0298                     	;# 
  1748  0298                     	;# 
  1749  0299                     	;# 
  1750  0299                     	;# 
  1751  029A                     	;# 
  1752  029B                     	;# 
  1753  029C                     	;# 
  1754  029C                     	;# 
  1755  029D                     	;# 
  1756  030C                     	;# 
  1757  030C                     	;# 
  1758  030D                     	;# 
  1759  030E                     	;# 
  1760  030F                     	;# 
  1761  0310                     	;# 
  1762  0310                     	;# 
  1763  0311                     	;# 
  1764  0312                     	;# 
  1765  0313                     	;# 
  1766  0314                     	;# 
  1767  0314                     	;# 
  1768  0315                     	;# 
  1769  0316                     	;# 
  1770  0317                     	;# 
  1771  0318                     	;# 
  1772  0318                     	;# 
  1773  0319                     	;# 
  1774  031A                     	;# 
  1775  031B                     	;# 
  1776  031C                     	;# 
  1777  031C                     	;# 
  1778  031D                     	;# 
  1779  031E                     	;# 
  1780  031F                     	;# 
  1781  038C                     	;# 
  1782  038D                     	;# 
  1783  038E                     	;# 
  1784  0390                     	;# 
  1785  0391                     	;# 
  1786  0392                     	;# 
  1787  040C                     	;# 
  1788  040D                     	;# 
  1789  040E                     	;# 
  1790  040F                     	;# 
  1791  0410                     	;# 
  1792  0411                     	;# 
  1793  0416                     	;# 
  1794  0416                     	;# 
  1795  0417                     	;# 
  1796  0418                     	;# 
  1797  0418                     	;# 
  1798  0419                     	;# 
  1799  041A                     	;# 
  1800  041A                     	;# 
  1801  041B                     	;# 
  1802  041C                     	;# 
  1803  041C                     	;# 
  1804  041D                     	;# 
  1805  041E                     	;# 
  1806  041F                     	;# 
  1807  048C                     	;# 
  1808  048C                     	;# 
  1809  048D                     	;# 
  1810  048E                     	;# 
  1811  048F                     	;# 
  1812  048F                     	;# 
  1813  0490                     	;# 
  1814  0491                     	;# 
  1815  0492                     	;# 
  1816  0492                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0495                     	;# 
  1820  0495                     	;# 
  1821  0496                     	;# 
  1822  0497                     	;# 
  1823  0498                     	;# 
  1824  0499                     	;# 
  1825  049A                     	;# 
  1826  049B                     	;# 
  1827  049C                     	;# 
  1828  049D                     	;# 
  1829  050C                     	;# 
  1830  050C                     	;# 
  1831  050D                     	;# 
  1832  050E                     	;# 
  1833  050F                     	;# 
  1834  050F                     	;# 
  1835  0510                     	;# 
  1836  0511                     	;# 
  1837  0512                     	;# 
  1838  0512                     	;# 
  1839  0513                     	;# 
  1840  0514                     	;# 
  1841  0515                     	;# 
  1842  0515                     	;# 
  1843  0516                     	;# 
  1844  0517                     	;# 
  1845  0518                     	;# 
  1846  0519                     	;# 
  1847  051A                     	;# 
  1848  051B                     	;# 
  1849  051C                     	;# 
  1850  051D                     	;# 
  1851  058C                     	;# 
  1852  058C                     	;# 
  1853  058D                     	;# 
  1854  058E                     	;# 
  1855  058F                     	;# 
  1856  058F                     	;# 
  1857  0590                     	;# 
  1858  0591                     	;# 
  1859  0592                     	;# 
  1860  0593                     	;# 
  1861  060C                     	;# 
  1862  060D                     	;# 
  1863  060E                     	;# 
  1864  060F                     	;# 
  1865  0610                     	;# 
  1866  0611                     	;# 
  1867  0612                     	;# 
  1868  0613                     	;# 
  1869  0614                     	;# 
  1870  0616                     	;# 
  1871  0617                     	;# 
  1872  0618                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061D                     	;# 
  1878  061E                     	;# 
  1879  068C                     	;# 
  1880  068D                     	;# 
  1881  068E                     	;# 
  1882  068F                     	;# 
  1883  0690                     	;# 
  1884  0691                     	;# 
  1885  0692                     	;# 
  1886  0693                     	;# 
  1887  0694                     	;# 
  1888  070C                     	;# 
  1889  070D                     	;# 
  1890  070E                     	;# 
  1891  070F                     	;# 
  1892  0710                     	;# 
  1893  0711                     	;# 
  1894  0712                     	;# 
  1895  0713                     	;# 
  1896  0714                     	;# 
  1897  0716                     	;# 
  1898  0717                     	;# 
  1899  0718                     	;# 
  1900  0719                     	;# 
  1901  071A                     	;# 
  1902  071B                     	;# 
  1903  071C                     	;# 
  1904  071D                     	;# 
  1905  071E                     	;# 
  1906  0796                     	;# 
  1907  0797                     	;# 
  1908  0798                     	;# 
  1909  0799                     	;# 
  1910  079A                     	;# 
  1911  079B                     	;# 
  1912  080C                     	;# 
  1913  080D                     	;# 
  1914  080E                     	;# 
  1915  080F                     	;# 
  1916  0810                     	;# 
  1917  0811                     	;# 
  1918  0812                     	;# 
  1919  0813                     	;# 
  1920  0814                     	;# 
  1921  081A                     	;# 
  1922  081B                     	;# 
  1923  081C                     	;# 
  1924  081D                     	;# 
  1925  081E                     	;# 
  1926  081F                     	;# 
  1927  088C                     	;# 
  1928  088D                     	;# 
  1929  088E                     	;# 
  1930  088F                     	;# 
  1931  0890                     	;# 
  1932  0891                     	;# 
  1933  0892                     	;# 
  1934  0893                     	;# 
  1935  0895                     	;# 
  1936  0896                     	;# 
  1937  0897                     	;# 
  1938  0898                     	;# 
  1939  0899                     	;# 
  1940  089A                     	;# 
  1941  089B                     	;# 
  1942  090C                     	;# 
  1943  090E                     	;# 
  1944  090F                     	;# 
  1945  091F                     	;# 
  1946  091F                     	;# 
  1947  098F                     	;# 
  1948  098F                     	;# 
  1949  0990                     	;# 
  1950  0991                     	;# 
  1951  0992                     	;# 
  1952  0993                     	;# 
  1953  0994                     	;# 
  1954  0995                     	;# 
  1955  0996                     	;# 
  1956  0997                     	;# 
  1957  0E0F                     	;# 
  1958  0E10                     	;# 
  1959  0E11                     	;# 
  1960  0E12                     	;# 
  1961  0E13                     	;# 
  1962  0E14                     	;# 
  1963  0E15                     	;# 
  1964  0E16                     	;# 
  1965  0E17                     	;# 
  1966  0E18                     	;# 
  1967  0E19                     	;# 
  1968  0E1A                     	;# 
  1969  0E1B                     	;# 
  1970  0E1C                     	;# 
  1971  0E1D                     	;# 
  1972  0E1E                     	;# 
  1973  0E1F                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E23                     	;# 
  1978  0E24                     	;# 
  1979  0E25                     	;# 
  1980  0E26                     	;# 
  1981  0E27                     	;# 
  1982  0E28                     	;# 
  1983  0E29                     	;# 
  1984  0E2A                     	;# 
  1985  0E2B                     	;# 
  1986  0E2C                     	;# 
  1987  0E2D                     	;# 
  1988  0E2E                     	;# 
  1989  0E2F                     	;# 
  1990  0E30                     	;# 
  1991  0E31                     	;# 
  1992  0E32                     	;# 
  1993  0E33                     	;# 
  1994  0E34                     	;# 
  1995  0E35                     	;# 
  1996  0E36                     	;# 
  1997  0E37                     	;# 
  1998  0E8F                     	;# 
  1999  0E90                     	;# 
  2000  0E91                     	;# 
  2001  0E92                     	;# 
  2002  0E93                     	;# 
  2003  0E94                     	;# 
  2004  0E95                     	;# 
  2005  0E96                     	;# 
  2006  0E97                     	;# 
  2007  0E9C                     	;# 
  2008  0E9D                     	;# 
  2009  0E9E                     	;# 
  2010  0EA1                     	;# 
  2011  0EA2                     	;# 
  2012  0EA3                     	;# 
  2013  0EA4                     	;# 
  2014  0EA5                     	;# 
  2015  0EA9                     	;# 
  2016  0EAA                     	;# 
  2017  0EAB                     	;# 
  2018  0EAC                     	;# 
  2019  0EB1                     	;# 
  2020  0EB2                     	;# 
  2021  0EB3                     	;# 
  2022  0EB8                     	;# 
  2023  0EB9                     	;# 
  2024  0EBA                     	;# 
  2025  0EBB                     	;# 
  2026  0EBC                     	;# 
  2027  0EBD                     	;# 
  2028  0EBE                     	;# 
  2029  0EC3                     	;# 
  2030  0EC5                     	;# 
  2031  0EC6                     	;# 
  2032  0EC7                     	;# 
  2033  0EC8                     	;# 
  2034  0EC9                     	;# 
  2035  0ECA                     	;# 
  2036  0ECB                     	;# 
  2037  0ECC                     	;# 
  2038  0F10                     	;# 
  2039  0F11                     	;# 
  2040  0F12                     	;# 
  2041  0F13                     	;# 
  2042  0F14                     	;# 
  2043  0F15                     	;# 
  2044  0F16                     	;# 
  2045  0F17                     	;# 
  2046  0F18                     	;# 
  2047  0F19                     	;# 
  2048  0F1A                     	;# 
  2049  0F1B                     	;# 
  2050  0F1C                     	;# 
  2051  0F1D                     	;# 
  2052  0F1E                     	;# 
  2053  0F1F                     	;# 
  2054  0F20                     	;# 
  2055  0F21                     	;# 
  2056  0F22                     	;# 
  2057  0F23                     	;# 
  2058  0F24                     	;# 
  2059  0F25                     	;# 
  2060  0F26                     	;# 
  2061  0F27                     	;# 
  2062  0F38                     	;# 
  2063  0F39                     	;# 
  2064  0F3A                     	;# 
  2065  0F3B                     	;# 
  2066  0F3C                     	;# 
  2067  0F3D                     	;# 
  2068  0F3E                     	;# 
  2069  0F3F                     	;# 
  2070  0F40                     	;# 
  2071  0F41                     	;# 
  2072  0F43                     	;# 
  2073  0F44                     	;# 
  2074  0F45                     	;# 
  2075  0F46                     	;# 
  2076  0F47                     	;# 
  2077  0F48                     	;# 
  2078  0F49                     	;# 
  2079  0F4A                     	;# 
  2080  0F4B                     	;# 
  2081  0F4C                     	;# 
  2082  0F4E                     	;# 
  2083  0F4F                     	;# 
  2084  0F50                     	;# 
  2085  0F51                     	;# 
  2086  0F52                     	;# 
  2087  0F53                     	;# 
  2088  0F54                     	;# 
  2089  0F55                     	;# 
  2090  0F56                     	;# 
  2091  0F57                     	;# 
  2092  0F65                     	;# 
  2093  0F68                     	;# 
  2094  0F69                     	;# 
  2095  0F6A                     	;# 
  2096  0F6B                     	;# 
  2097  0FE4                     	;# 
  2098  0FE5                     	;# 
  2099  0FE6                     	;# 
  2100  0FE7                     	;# 
  2101  0FE8                     	;# 
  2102  0FE9                     	;# 
  2103  0FEA                     	;# 
  2104  0FEB                     	;# 
  2105  0FED                     	;# 
  2106  0FEE                     	;# 
  2107  0FEF                     	;# 
  2108  0000                     	;# 
  2109  0001                     	;# 
  2110  0002                     	;# 
  2111  0003                     	;# 
  2112  0004                     	;# 
  2113  0005                     	;# 
  2114  0006                     	;# 
  2115  0007                     	;# 
  2116  0008                     	;# 
  2117  0009                     	;# 
  2118  000A                     	;# 
  2119  000B                     	;# 
  2120  000C                     	;# 
  2121  000D                     	;# 
  2122  000E                     	;# 
  2123  0010                     	;# 
  2124  0011                     	;# 
  2125  0012                     	;# 
  2126  0013                     	;# 
  2127  0016                     	;# 
  2128  0017                     	;# 
  2129  0018                     	;# 
  2130  001C                     	;# 
  2131  001C                     	;# 
  2132  001D                     	;# 
  2133  001D                     	;# 
  2134  001E                     	;# 
  2135  001F                     	;# 
  2136  008C                     	;# 
  2137  008C                     	;# 
  2138  008D                     	;# 
  2139  008E                     	;# 
  2140  008E                     	;# 
  2141  008F                     	;# 
  2142  0090                     	;# 
  2143  0090                     	;# 
  2144  0091                     	;# 
  2145  0093                     	;# 
  2146  0094                     	;# 
  2147  0095                     	;# 
  2148  0096                     	;# 
  2149  0097                     	;# 
  2150  0098                     	;# 
  2151  0099                     	;# 
  2152  009A                     	;# 
  2153  009B                     	;# 
  2154  009C                     	;# 
  2155  009D                     	;# 
  2156  009E                     	;# 
  2157  010C                     	;# 
  2158  010D                     	;# 
  2159  010E                     	;# 
  2160  010E                     	;# 
  2161  010F                     	;# 
  2162  0110                     	;# 
  2163  0110                     	;# 
  2164  0111                     	;# 
  2165  0112                     	;# 
  2166  0112                     	;# 
  2167  0113                     	;# 
  2168  0114                     	;# 
  2169  0114                     	;# 
  2170  0115                     	;# 
  2171  0116                     	;# 
  2172  0116                     	;# 
  2173  0117                     	;# 
  2174  0119                     	;# 
  2175  0119                     	;# 
  2176  0119                     	;# 
  2177  011A                     	;# 
  2178  011A                     	;# 
  2179  011A                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011C                     	;# 
  2186  011C                     	;# 
  2187  011C                     	;# 
  2188  011D                     	;# 
  2189  011D                     	;# 
  2190  011D                     	;# 
  2191  011E                     	;# 
  2192  011E                     	;# 
  2193  011E                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  018C                     	;# 
  2200  018D                     	;# 
  2201  018E                     	;# 
  2202  018F                     	;# 
  2203  0190                     	;# 
  2204  0191                     	;# 
  2205  0192                     	;# 
  2206  0196                     	;# 
  2207  0197                     	;# 
  2208  0198                     	;# 
  2209  0199                     	;# 
  2210  019A                     	;# 
  2211  019B                     	;# 
  2212  019C                     	;# 
  2213  020C                     	;# 
  2214  020D                     	;# 
  2215  020E                     	;# 
  2216  020F                     	;# 
  2217  020F                     	;# 
  2218  0210                     	;# 
  2219  0210                     	;# 
  2220  0211                     	;# 
  2221  0211                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0214                     	;# 
  2225  0215                     	;# 
  2226  0215                     	;# 
  2227  0216                     	;# 
  2228  0216                     	;# 
  2229  0217                     	;# 
  2230  0217                     	;# 
  2231  0218                     	;# 
  2232  0219                     	;# 
  2233  021A                     	;# 
  2234  021B                     	;# 
  2235  021B                     	;# 
  2236  021C                     	;# 
  2237  021C                     	;# 
  2238  021D                     	;# 
  2239  021D                     	;# 
  2240  021E                     	;# 
  2241  021F                     	;# 
  2242  028C                     	;# 
  2243  028C                     	;# 
  2244  028D                     	;# 
  2245  028D                     	;# 
  2246  028E                     	;# 
  2247  028F                     	;# 
  2248  0290                     	;# 
  2249  0290                     	;# 
  2250  0291                     	;# 
  2251  0292                     	;# 
  2252  0292                     	;# 
  2253  0293                     	;# 
  2254  0293                     	;# 
  2255  0294                     	;# 
  2256  0295                     	;# 
  2257  0296                     	;# 
  2258  0296                     	;# 
  2259  0297                     	;# 
  2260  0298                     	;# 
  2261  0298                     	;# 
  2262  0299                     	;# 
  2263  0299                     	;# 
  2264  029A                     	;# 
  2265  029B                     	;# 
  2266  029C                     	;# 
  2267  029C                     	;# 
  2268  029D                     	;# 
  2269  030C                     	;# 
  2270  030C                     	;# 
  2271  030D                     	;# 
  2272  030E                     	;# 
  2273  030F                     	;# 
  2274  0310                     	;# 
  2275  0310                     	;# 
  2276  0311                     	;# 
  2277  0312                     	;# 
  2278  0313                     	;# 
  2279  0314                     	;# 
  2280  0314                     	;# 
  2281  0315                     	;# 
  2282  0316                     	;# 
  2283  0317                     	;# 
  2284  0318                     	;# 
  2285  0318                     	;# 
  2286  0319                     	;# 
  2287  031A                     	;# 
  2288  031B                     	;# 
  2289  031C                     	;# 
  2290  031C                     	;# 
  2291  031D                     	;# 
  2292  031E                     	;# 
  2293  031F                     	;# 
  2294  038C                     	;# 
  2295  038D                     	;# 
  2296  038E                     	;# 
  2297  0390                     	;# 
  2298  0391                     	;# 
  2299  0392                     	;# 
  2300  040C                     	;# 
  2301  040D                     	;# 
  2302  040E                     	;# 
  2303  040F                     	;# 
  2304  0410                     	;# 
  2305  0411                     	;# 
  2306  0416                     	;# 
  2307  0416                     	;# 
  2308  0417                     	;# 
  2309  0418                     	;# 
  2310  0418                     	;# 
  2311  0419                     	;# 
  2312  041A                     	;# 
  2313  041A                     	;# 
  2314  041B                     	;# 
  2315  041C                     	;# 
  2316  041C                     	;# 
  2317  041D                     	;# 
  2318  041E                     	;# 
  2319  041F                     	;# 
  2320  048C                     	;# 
  2321  048C                     	;# 
  2322  048D                     	;# 
  2323  048E                     	;# 
  2324  048F                     	;# 
  2325  048F                     	;# 
  2326  0490                     	;# 
  2327  0491                     	;# 
  2328  0492                     	;# 
  2329  0492                     	;# 
  2330  0493                     	;# 
  2331  0494                     	;# 
  2332  0495                     	;# 
  2333  0495                     	;# 
  2334  0496                     	;# 
  2335  0497                     	;# 
  2336  0498                     	;# 
  2337  0499                     	;# 
  2338  049A                     	;# 
  2339  049B                     	;# 
  2340  049C                     	;# 
  2341  049D                     	;# 
  2342  050C                     	;# 
  2343  050C                     	;# 
  2344  050D                     	;# 
  2345  050E                     	;# 
  2346  050F                     	;# 
  2347  050F                     	;# 
  2348  0510                     	;# 
  2349  0511                     	;# 
  2350  0512                     	;# 
  2351  0512                     	;# 
  2352  0513                     	;# 
  2353  0514                     	;# 
  2354  0515                     	;# 
  2355  0515                     	;# 
  2356  0516                     	;# 
  2357  0517                     	;# 
  2358  0518                     	;# 
  2359  0519                     	;# 
  2360  051A                     	;# 
  2361  051B                     	;# 
  2362  051C                     	;# 
  2363  051D                     	;# 
  2364  058C                     	;# 
  2365  058C                     	;# 
  2366  058D                     	;# 
  2367  058E                     	;# 
  2368  058F                     	;# 
  2369  058F                     	;# 
  2370  0590                     	;# 
  2371  0591                     	;# 
  2372  0592                     	;# 
  2373  0593                     	;# 
  2374  060C                     	;# 
  2375  060D                     	;# 
  2376  060E                     	;# 
  2377  060F                     	;# 
  2378  0610                     	;# 
  2379  0611                     	;# 
  2380  0612                     	;# 
  2381  0613                     	;# 
  2382  0614                     	;# 
  2383  0616                     	;# 
  2384  0617                     	;# 
  2385  0618                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061D                     	;# 
  2391  061E                     	;# 
  2392  068C                     	;# 
  2393  068D                     	;# 
  2394  068E                     	;# 
  2395  068F                     	;# 
  2396  0690                     	;# 
  2397  0691                     	;# 
  2398  0692                     	;# 
  2399  0693                     	;# 
  2400  0694                     	;# 
  2401  070C                     	;# 
  2402  070D                     	;# 
  2403  070E                     	;# 
  2404  070F                     	;# 
  2405  0710                     	;# 
  2406  0711                     	;# 
  2407  0712                     	;# 
  2408  0713                     	;# 
  2409  0714                     	;# 
  2410  0716                     	;# 
  2411  0717                     	;# 
  2412  0718                     	;# 
  2413  0719                     	;# 
  2414  071A                     	;# 
  2415  071B                     	;# 
  2416  071C                     	;# 
  2417  071D                     	;# 
  2418  071E                     	;# 
  2419  0796                     	;# 
  2420  0797                     	;# 
  2421  0798                     	;# 
  2422  0799                     	;# 
  2423  079A                     	;# 
  2424  079B                     	;# 
  2425  080C                     	;# 
  2426  080D                     	;# 
  2427  080E                     	;# 
  2428  080F                     	;# 
  2429  0810                     	;# 
  2430  0811                     	;# 
  2431  0812                     	;# 
  2432  0813                     	;# 
  2433  0814                     	;# 
  2434  081A                     	;# 
  2435  081B                     	;# 
  2436  081C                     	;# 
  2437  081D                     	;# 
  2438  081E                     	;# 
  2439  081F                     	;# 
  2440  088C                     	;# 
  2441  088D                     	;# 
  2442  088E                     	;# 
  2443  088F                     	;# 
  2444  0890                     	;# 
  2445  0891                     	;# 
  2446  0892                     	;# 
  2447  0893                     	;# 
  2448  0895                     	;# 
  2449  0896                     	;# 
  2450  0897                     	;# 
  2451  0898                     	;# 
  2452  0899                     	;# 
  2453  089A                     	;# 
  2454  089B                     	;# 
  2455  090C                     	;# 
  2456  090E                     	;# 
  2457  090F                     	;# 
  2458  091F                     	;# 
  2459  091F                     	;# 
  2460  098F                     	;# 
  2461  098F                     	;# 
  2462  0990                     	;# 
  2463  0991                     	;# 
  2464  0992                     	;# 
  2465  0993                     	;# 
  2466  0994                     	;# 
  2467  0995                     	;# 
  2468  0996                     	;# 
  2469  0997                     	;# 
  2470  0E0F                     	;# 
  2471  0E10                     	;# 
  2472  0E11                     	;# 
  2473  0E12                     	;# 
  2474  0E13                     	;# 
  2475  0E14                     	;# 
  2476  0E15                     	;# 
  2477  0E16                     	;# 
  2478  0E17                     	;# 
  2479  0E18                     	;# 
  2480  0E19                     	;# 
  2481  0E1A                     	;# 
  2482  0E1B                     	;# 
  2483  0E1C                     	;# 
  2484  0E1D                     	;# 
  2485  0E1E                     	;# 
  2486  0E1F                     	;# 
  2487  0E20                     	;# 
  2488  0E21                     	;# 
  2489  0E22                     	;# 
  2490  0E23                     	;# 
  2491  0E24                     	;# 
  2492  0E25                     	;# 
  2493  0E26                     	;# 
  2494  0E27                     	;# 
  2495  0E28                     	;# 
  2496  0E29                     	;# 
  2497  0E2A                     	;# 
  2498  0E2B                     	;# 
  2499  0E2C                     	;# 
  2500  0E2D                     	;# 
  2501  0E2E                     	;# 
  2502  0E2F                     	;# 
  2503  0E30                     	;# 
  2504  0E31                     	;# 
  2505  0E32                     	;# 
  2506  0E33                     	;# 
  2507  0E34                     	;# 
  2508  0E35                     	;# 
  2509  0E36                     	;# 
  2510  0E37                     	;# 
  2511  0E8F                     	;# 
  2512  0E90                     	;# 
  2513  0E91                     	;# 
  2514  0E92                     	;# 
  2515  0E93                     	;# 
  2516  0E94                     	;# 
  2517  0E95                     	;# 
  2518  0E96                     	;# 
  2519  0E97                     	;# 
  2520  0E9C                     	;# 
  2521  0E9D                     	;# 
  2522  0E9E                     	;# 
  2523  0EA1                     	;# 
  2524  0EA2                     	;# 
  2525  0EA3                     	;# 
  2526  0EA4                     	;# 
  2527  0EA5                     	;# 
  2528  0EA9                     	;# 
  2529  0EAA                     	;# 
  2530  0EAB                     	;# 
  2531  0EAC                     	;# 
  2532  0EB1                     	;# 
  2533  0EB2                     	;# 
  2534  0EB3                     	;# 
  2535  0EB8                     	;# 
  2536  0EB9                     	;# 
  2537  0EBA                     	;# 
  2538  0EBB                     	;# 
  2539  0EBC                     	;# 
  2540  0EBD                     	;# 
  2541  0EBE                     	;# 
  2542  0EC3                     	;# 
  2543  0EC5                     	;# 
  2544  0EC6                     	;# 
  2545  0EC7                     	;# 
  2546  0EC8                     	;# 
  2547  0EC9                     	;# 
  2548  0ECA                     	;# 
  2549  0ECB                     	;# 
  2550  0ECC                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F38                     	;# 
  2576  0F39                     	;# 
  2577  0F3A                     	;# 
  2578  0F3B                     	;# 
  2579  0F3C                     	;# 
  2580  0F3D                     	;# 
  2581  0F3E                     	;# 
  2582  0F3F                     	;# 
  2583  0F40                     	;# 
  2584  0F41                     	;# 
  2585  0F43                     	;# 
  2586  0F44                     	;# 
  2587  0F45                     	;# 
  2588  0F46                     	;# 
  2589  0F47                     	;# 
  2590  0F48                     	;# 
  2591  0F49                     	;# 
  2592  0F4A                     	;# 
  2593  0F4B                     	;# 
  2594  0F4C                     	;# 
  2595  0F4E                     	;# 
  2596  0F4F                     	;# 
  2597  0F50                     	;# 
  2598  0F51                     	;# 
  2599  0F52                     	;# 
  2600  0F53                     	;# 
  2601  0F54                     	;# 
  2602  0F55                     	;# 
  2603  0F56                     	;# 
  2604  0F57                     	;# 
  2605  0F65                     	;# 
  2606  0F68                     	;# 
  2607  0F69                     	;# 
  2608  0F6A                     	;# 
  2609  0F6B                     	;# 
  2610  0FE4                     	;# 
  2611  0FE5                     	;# 
  2612  0FE6                     	;# 
  2613  0FE7                     	;# 
  2614  0FE8                     	;# 
  2615  0FE9                     	;# 
  2616  0FEA                     	;# 
  2617  0FEB                     	;# 
  2618  0FED                     	;# 
  2619  0FEE                     	;# 
  2620  0FEF                     	;# 
  2621  0000                     	;# 
  2622  0001                     	;# 
  2623  0002                     	;# 
  2624  0003                     	;# 
  2625  0004                     	;# 
  2626  0005                     	;# 
  2627  0006                     	;# 
  2628  0007                     	;# 
  2629  0008                     	;# 
  2630  0009                     	;# 
  2631  000A                     	;# 
  2632  000B                     	;# 
  2633  000C                     	;# 
  2634  000D                     	;# 
  2635  000E                     	;# 
  2636  0010                     	;# 
  2637  0011                     	;# 
  2638  0012                     	;# 
  2639  0013                     	;# 
  2640  0016                     	;# 
  2641  0017                     	;# 
  2642  0018                     	;# 
  2643  001C                     	;# 
  2644  001C                     	;# 
  2645  001D                     	;# 
  2646  001D                     	;# 
  2647  001E                     	;# 
  2648  001F                     	;# 
  2649  008C                     	;# 
  2650  008C                     	;# 
  2651  008D                     	;# 
  2652  008E                     	;# 
  2653  008E                     	;# 
  2654  008F                     	;# 
  2655  0090                     	;# 
  2656  0090                     	;# 
  2657  0091                     	;# 
  2658  0093                     	;# 
  2659  0094                     	;# 
  2660  0095                     	;# 
  2661  0096                     	;# 
  2662  0097                     	;# 
  2663  0098                     	;# 
  2664  0099                     	;# 
  2665  009A                     	;# 
  2666  009B                     	;# 
  2667  009C                     	;# 
  2668  009D                     	;# 
  2669  009E                     	;# 
  2670  010C                     	;# 
  2671  010D                     	;# 
  2672  010E                     	;# 
  2673  010E                     	;# 
  2674  010F                     	;# 
  2675  0110                     	;# 
  2676  0110                     	;# 
  2677  0111                     	;# 
  2678  0112                     	;# 
  2679  0112                     	;# 
  2680  0113                     	;# 
  2681  0114                     	;# 
  2682  0114                     	;# 
  2683  0115                     	;# 
  2684  0116                     	;# 
  2685  0116                     	;# 
  2686  0117                     	;# 
  2687  0119                     	;# 
  2688  0119                     	;# 
  2689  0119                     	;# 
  2690  011A                     	;# 
  2691  011A                     	;# 
  2692  011A                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011C                     	;# 
  2699  011C                     	;# 
  2700  011C                     	;# 
  2701  011D                     	;# 
  2702  011D                     	;# 
  2703  011D                     	;# 
  2704  011E                     	;# 
  2705  011E                     	;# 
  2706  011E                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  018C                     	;# 
  2713  018D                     	;# 
  2714  018E                     	;# 
  2715  018F                     	;# 
  2716  0190                     	;# 
  2717  0191                     	;# 
  2718  0192                     	;# 
  2719  0196                     	;# 
  2720  0197                     	;# 
  2721  0198                     	;# 
  2722  0199                     	;# 
  2723  019A                     	;# 
  2724  019B                     	;# 
  2725  019C                     	;# 
  2726  020C                     	;# 
  2727  020D                     	;# 
  2728  020E                     	;# 
  2729  020F                     	;# 
  2730  020F                     	;# 
  2731  0210                     	;# 
  2732  0210                     	;# 
  2733  0211                     	;# 
  2734  0211                     	;# 
  2735  0212                     	;# 
  2736  0213                     	;# 
  2737  0214                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0216                     	;# 
  2741  0216                     	;# 
  2742  0217                     	;# 
  2743  0217                     	;# 
  2744  0218                     	;# 
  2745  0219                     	;# 
  2746  021A                     	;# 
  2747  021B                     	;# 
  2748  021B                     	;# 
  2749  021C                     	;# 
  2750  021C                     	;# 
  2751  021D                     	;# 
  2752  021D                     	;# 
  2753  021E                     	;# 
  2754  021F                     	;# 
  2755  028C                     	;# 
  2756  028C                     	;# 
  2757  028D                     	;# 
  2758  028D                     	;# 
  2759  028E                     	;# 
  2760  028F                     	;# 
  2761  0290                     	;# 
  2762  0290                     	;# 
  2763  0291                     	;# 
  2764  0292                     	;# 
  2765  0292                     	;# 
  2766  0293                     	;# 
  2767  0293                     	;# 
  2768  0294                     	;# 
  2769  0295                     	;# 
  2770  0296                     	;# 
  2771  0296                     	;# 
  2772  0297                     	;# 
  2773  0298                     	;# 
  2774  0298                     	;# 
  2775  0299                     	;# 
  2776  0299                     	;# 
  2777  029A                     	;# 
  2778  029B                     	;# 
  2779  029C                     	;# 
  2780  029C                     	;# 
  2781  029D                     	;# 
  2782  030C                     	;# 
  2783  030C                     	;# 
  2784  030D                     	;# 
  2785  030E                     	;# 
  2786  030F                     	;# 
  2787  0310                     	;# 
  2788  0310                     	;# 
  2789  0311                     	;# 
  2790  0312                     	;# 
  2791  0313                     	;# 
  2792  0314                     	;# 
  2793  0314                     	;# 
  2794  0315                     	;# 
  2795  0316                     	;# 
  2796  0317                     	;# 
  2797  0318                     	;# 
  2798  0318                     	;# 
  2799  0319                     	;# 
  2800  031A                     	;# 
  2801  031B                     	;# 
  2802  031C                     	;# 
  2803  031C                     	;# 
  2804  031D                     	;# 
  2805  031E                     	;# 
  2806  031F                     	;# 
  2807  038C                     	;# 
  2808  038D                     	;# 
  2809  038E                     	;# 
  2810  0390                     	;# 
  2811  0391                     	;# 
  2812  0392                     	;# 
  2813  040C                     	;# 
  2814  040D                     	;# 
  2815  040E                     	;# 
  2816  040F                     	;# 
  2817  0410                     	;# 
  2818  0411                     	;# 
  2819  0416                     	;# 
  2820  0416                     	;# 
  2821  0417                     	;# 
  2822  0418                     	;# 
  2823  0418                     	;# 
  2824  0419                     	;# 
  2825  041A                     	;# 
  2826  041A                     	;# 
  2827  041B                     	;# 
  2828  041C                     	;# 
  2829  041C                     	;# 
  2830  041D                     	;# 
  2831  041E                     	;# 
  2832  041F                     	;# 
  2833  048C                     	;# 
  2834  048C                     	;# 
  2835  048D                     	;# 
  2836  048E                     	;# 
  2837  048F                     	;# 
  2838  048F                     	;# 
  2839  0490                     	;# 
  2840  0491                     	;# 
  2841  0492                     	;# 
  2842  0492                     	;# 
  2843  0493                     	;# 
  2844  0494                     	;# 
  2845  0495                     	;# 
  2846  0495                     	;# 
  2847  0496                     	;# 
  2848  0497                     	;# 
  2849  0498                     	;# 
  2850  0499                     	;# 
  2851  049A                     	;# 
  2852  049B                     	;# 
  2853  049C                     	;# 
  2854  049D                     	;# 
  2855  050C                     	;# 
  2856  050C                     	;# 
  2857  050D                     	;# 
  2858  050E                     	;# 
  2859  050F                     	;# 
  2860  050F                     	;# 
  2861  0510                     	;# 
  2862  0511                     	;# 
  2863  0512                     	;# 
  2864  0512                     	;# 
  2865  0513                     	;# 
  2866  0514                     	;# 
  2867  0515                     	;# 
  2868  0515                     	;# 
  2869  0516                     	;# 
  2870  0517                     	;# 
  2871  0518                     	;# 
  2872  0519                     	;# 
  2873  051A                     	;# 
  2874  051B                     	;# 
  2875  051C                     	;# 
  2876  051D                     	;# 
  2877  058C                     	;# 
  2878  058C                     	;# 
  2879  058D                     	;# 
  2880  058E                     	;# 
  2881  058F                     	;# 
  2882  058F                     	;# 
  2883  0590                     	;# 
  2884  0591                     	;# 
  2885  0592                     	;# 
  2886  0593                     	;# 
  2887  060C                     	;# 
  2888  060D                     	;# 
  2889  060E                     	;# 
  2890  060F                     	;# 
  2891  0610                     	;# 
  2892  0611                     	;# 
  2893  0612                     	;# 
  2894  0613                     	;# 
  2895  0614                     	;# 
  2896  0616                     	;# 
  2897  0617                     	;# 
  2898  0618                     	;# 
  2899  0619                     	;# 
  2900  061A                     	;# 
  2901  061B                     	;# 
  2902  061C                     	;# 
  2903  061D                     	;# 
  2904  061E                     	;# 
  2905  068C                     	;# 
  2906  068D                     	;# 
  2907  068E                     	;# 
  2908  068F                     	;# 
  2909  0690                     	;# 
  2910  0691                     	;# 
  2911  0692                     	;# 
  2912  0693                     	;# 
  2913  0694                     	;# 
  2914  070C                     	;# 
  2915  070D                     	;# 
  2916  070E                     	;# 
  2917  070F                     	;# 
  2918  0710                     	;# 
  2919  0711                     	;# 
  2920  0712                     	;# 
  2921  0713                     	;# 
  2922  0714                     	;# 
  2923  0716                     	;# 
  2924  0717                     	;# 
  2925  0718                     	;# 
  2926  0719                     	;# 
  2927  071A                     	;# 
  2928  071B                     	;# 
  2929  071C                     	;# 
  2930  071D                     	;# 
  2931  071E                     	;# 
  2932  0796                     	;# 
  2933  0797                     	;# 
  2934  0798                     	;# 
  2935  0799                     	;# 
  2936  079A                     	;# 
  2937  079B                     	;# 
  2938  080C                     	;# 
  2939  080D                     	;# 
  2940  080E                     	;# 
  2941  080F                     	;# 
  2942  0810                     	;# 
  2943  0811                     	;# 
  2944  0812                     	;# 
  2945  0813                     	;# 
  2946  0814                     	;# 
  2947  081A                     	;# 
  2948  081B                     	;# 
  2949  081C                     	;# 
  2950  081D                     	;# 
  2951  081E                     	;# 
  2952  081F                     	;# 
  2953  088C                     	;# 
  2954  088D                     	;# 
  2955  088E                     	;# 
  2956  088F                     	;# 
  2957  0890                     	;# 
  2958  0891                     	;# 
  2959  0892                     	;# 
  2960  0893                     	;# 
  2961  0895                     	;# 
  2962  0896                     	;# 
  2963  0897                     	;# 
  2964  0898                     	;# 
  2965  0899                     	;# 
  2966  089A                     	;# 
  2967  089B                     	;# 
  2968  090C                     	;# 
  2969  090E                     	;# 
  2970  090F                     	;# 
  2971  091F                     	;# 
  2972  091F                     	;# 
  2973  098F                     	;# 
  2974  098F                     	;# 
  2975  0990                     	;# 
  2976  0991                     	;# 
  2977  0992                     	;# 
  2978  0993                     	;# 
  2979  0994                     	;# 
  2980  0995                     	;# 
  2981  0996                     	;# 
  2982  0997                     	;# 
  2983  0E0F                     	;# 
  2984  0E10                     	;# 
  2985  0E11                     	;# 
  2986  0E12                     	;# 
  2987  0E13                     	;# 
  2988  0E14                     	;# 
  2989  0E15                     	;# 
  2990  0E16                     	;# 
  2991  0E17                     	;# 
  2992  0E18                     	;# 
  2993  0E19                     	;# 
  2994  0E1A                     	;# 
  2995  0E1B                     	;# 
  2996  0E1C                     	;# 
  2997  0E1D                     	;# 
  2998  0E1E                     	;# 
  2999  0E1F                     	;# 
  3000  0E20                     	;# 
  3001  0E21                     	;# 
  3002  0E22                     	;# 
  3003  0E23                     	;# 
  3004  0E24                     	;# 
  3005  0E25                     	;# 
  3006  0E26                     	;# 
  3007  0E27                     	;# 
  3008  0E28                     	;# 
  3009  0E29                     	;# 
  3010  0E2A                     	;# 
  3011  0E2B                     	;# 
  3012  0E2C                     	;# 
  3013  0E2D                     	;# 
  3014  0E2E                     	;# 
  3015  0E2F                     	;# 
  3016  0E30                     	;# 
  3017  0E31                     	;# 
  3018  0E32                     	;# 
  3019  0E33                     	;# 
  3020  0E34                     	;# 
  3021  0E35                     	;# 
  3022  0E36                     	;# 
  3023  0E37                     	;# 
  3024  0E8F                     	;# 
  3025  0E90                     	;# 
  3026  0E91                     	;# 
  3027  0E92                     	;# 
  3028  0E93                     	;# 
  3029  0E94                     	;# 
  3030  0E95                     	;# 
  3031  0E96                     	;# 
  3032  0E97                     	;# 
  3033  0E9C                     	;# 
  3034  0E9D                     	;# 
  3035  0E9E                     	;# 
  3036  0EA1                     	;# 
  3037  0EA2                     	;# 
  3038  0EA3                     	;# 
  3039  0EA4                     	;# 
  3040  0EA5                     	;# 
  3041  0EA9                     	;# 
  3042  0EAA                     	;# 
  3043  0EAB                     	;# 
  3044  0EAC                     	;# 
  3045  0EB1                     	;# 
  3046  0EB2                     	;# 
  3047  0EB3                     	;# 
  3048  0EB8                     	;# 
  3049  0EB9                     	;# 
  3050  0EBA                     	;# 
  3051  0EBB                     	;# 
  3052  0EBC                     	;# 
  3053  0EBD                     	;# 
  3054  0EBE                     	;# 
  3055  0EC3                     	;# 
  3056  0EC5                     	;# 
  3057  0EC6                     	;# 
  3058  0EC7                     	;# 
  3059  0EC8                     	;# 
  3060  0EC9                     	;# 
  3061  0ECA                     	;# 
  3062  0ECB                     	;# 
  3063  0ECC                     	;# 
  3064  0F10                     	;# 
  3065  0F11                     	;# 
  3066  0F12                     	;# 
  3067  0F13                     	;# 
  3068  0F14                     	;# 
  3069  0F15                     	;# 
  3070  0F16                     	;# 
  3071  0F17                     	;# 
  3072  0F18                     	;# 
  3073  0F19                     	;# 
  3074  0F1A                     	;# 
  3075  0F1B                     	;# 
  3076  0F1C                     	;# 
  3077  0F1D                     	;# 
  3078  0F1E                     	;# 
  3079  0F1F                     	;# 
  3080  0F20                     	;# 
  3081  0F21                     	;# 
  3082  0F22                     	;# 
  3083  0F23                     	;# 
  3084  0F24                     	;# 
  3085  0F25                     	;# 
  3086  0F26                     	;# 
  3087  0F27                     	;# 
  3088  0F38                     	;# 
  3089  0F39                     	;# 
  3090  0F3A                     	;# 
  3091  0F3B                     	;# 
  3092  0F3C                     	;# 
  3093  0F3D                     	;# 
  3094  0F3E                     	;# 
  3095  0F3F                     	;# 
  3096  0F40                     	;# 
  3097  0F41                     	;# 
  3098  0F43                     	;# 
  3099  0F44                     	;# 
  3100  0F45                     	;# 
  3101  0F46                     	;# 
  3102  0F47                     	;# 
  3103  0F48                     	;# 
  3104  0F49                     	;# 
  3105  0F4A                     	;# 
  3106  0F4B                     	;# 
  3107  0F4C                     	;# 
  3108  0F4E                     	;# 
  3109  0F4F                     	;# 
  3110  0F50                     	;# 
  3111  0F51                     	;# 
  3112  0F52                     	;# 
  3113  0F53                     	;# 
  3114  0F54                     	;# 
  3115  0F55                     	;# 
  3116  0F56                     	;# 
  3117  0F57                     	;# 
  3118  0F65                     	;# 
  3119  0F68                     	;# 
  3120  0F69                     	;# 
  3121  0F6A                     	;# 
  3122  0F6B                     	;# 
  3123  0FE4                     	;# 
  3124  0FE5                     	;# 
  3125  0FE6                     	;# 
  3126  0FE7                     	;# 
  3127  0FE8                     	;# 
  3128  0FE9                     	;# 
  3129  0FEA                     	;# 
  3130  0FEB                     	;# 
  3131  0FED                     	;# 
  3132  0FEE                     	;# 
  3133  0FEF                     	;# 
  3134  0000                     	;# 
  3135  0001                     	;# 
  3136  0002                     	;# 
  3137  0003                     	;# 
  3138  0004                     	;# 
  3139  0005                     	;# 
  3140  0006                     	;# 
  3141  0007                     	;# 
  3142  0008                     	;# 
  3143  0009                     	;# 
  3144  000A                     	;# 
  3145  000B                     	;# 
  3146  000C                     	;# 
  3147  000D                     	;# 
  3148  000E                     	;# 
  3149  0010                     	;# 
  3150  0011                     	;# 
  3151  0012                     	;# 
  3152  0013                     	;# 
  3153  0016                     	;# 
  3154  0017                     	;# 
  3155  0018                     	;# 
  3156  001C                     	;# 
  3157  001C                     	;# 
  3158  001D                     	;# 
  3159  001D                     	;# 
  3160  001E                     	;# 
  3161  001F                     	;# 
  3162  008C                     	;# 
  3163  008C                     	;# 
  3164  008D                     	;# 
  3165  008E                     	;# 
  3166  008E                     	;# 
  3167  008F                     	;# 
  3168  0090                     	;# 
  3169  0090                     	;# 
  3170  0091                     	;# 
  3171  0093                     	;# 
  3172  0094                     	;# 
  3173  0095                     	;# 
  3174  0096                     	;# 
  3175  0097                     	;# 
  3176  0098                     	;# 
  3177  0099                     	;# 
  3178  009A                     	;# 
  3179  009B                     	;# 
  3180  009C                     	;# 
  3181  009D                     	;# 
  3182  009E                     	;# 
  3183  010C                     	;# 
  3184  010D                     	;# 
  3185  010E                     	;# 
  3186  010E                     	;# 
  3187  010F                     	;# 
  3188  0110                     	;# 
  3189  0110                     	;# 
  3190  0111                     	;# 
  3191  0112                     	;# 
  3192  0112                     	;# 
  3193  0113                     	;# 
  3194  0114                     	;# 
  3195  0114                     	;# 
  3196  0115                     	;# 
  3197  0116                     	;# 
  3198  0116                     	;# 
  3199  0117                     	;# 
  3200  0119                     	;# 
  3201  0119                     	;# 
  3202  0119                     	;# 
  3203  011A                     	;# 
  3204  011A                     	;# 
  3205  011A                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011C                     	;# 
  3212  011C                     	;# 
  3213  011C                     	;# 
  3214  011D                     	;# 
  3215  011D                     	;# 
  3216  011D                     	;# 
  3217  011E                     	;# 
  3218  011E                     	;# 
  3219  011E                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  018C                     	;# 
  3226  018D                     	;# 
  3227  018E                     	;# 
  3228  018F                     	;# 
  3229  0190                     	;# 
  3230  0191                     	;# 
  3231  0192                     	;# 
  3232  0196                     	;# 
  3233  0197                     	;# 
  3234  0198                     	;# 
  3235  0199                     	;# 
  3236  019A                     	;# 
  3237  019B                     	;# 
  3238  019C                     	;# 
  3239  020C                     	;# 
  3240  020D                     	;# 
  3241  020E                     	;# 
  3242  020F                     	;# 
  3243  020F                     	;# 
  3244  0210                     	;# 
  3245  0210                     	;# 
  3246  0211                     	;# 
  3247  0211                     	;# 
  3248  0212                     	;# 
  3249  0213                     	;# 
  3250  0214                     	;# 
  3251  0215                     	;# 
  3252  0215                     	;# 
  3253  0216                     	;# 
  3254  0216                     	;# 
  3255  0217                     	;# 
  3256  0217                     	;# 
  3257  0218                     	;# 
  3258  0219                     	;# 
  3259  021A                     	;# 
  3260  021B                     	;# 
  3261  021B                     	;# 
  3262  021C                     	;# 
  3263  021C                     	;# 
  3264  021D                     	;# 
  3265  021D                     	;# 
  3266  021E                     	;# 
  3267  021F                     	;# 
  3268  028C                     	;# 
  3269  028C                     	;# 
  3270  028D                     	;# 
  3271  028D                     	;# 
  3272  028E                     	;# 
  3273  028F                     	;# 
  3274  0290                     	;# 
  3275  0290                     	;# 
  3276  0291                     	;# 
  3277  0292                     	;# 
  3278  0292                     	;# 
  3279  0293                     	;# 
  3280  0293                     	;# 
  3281  0294                     	;# 
  3282  0295                     	;# 
  3283  0296                     	;# 
  3284  0296                     	;# 
  3285  0297                     	;# 
  3286  0298                     	;# 
  3287  0298                     	;# 
  3288  0299                     	;# 
  3289  0299                     	;# 
  3290  029A                     	;# 
  3291  029B                     	;# 
  3292  029C                     	;# 
  3293  029C                     	;# 
  3294  029D                     	;# 
  3295  030C                     	;# 
  3296  030C                     	;# 
  3297  030D                     	;# 
  3298  030E                     	;# 
  3299  030F                     	;# 
  3300  0310                     	;# 
  3301  0310                     	;# 
  3302  0311                     	;# 
  3303  0312                     	;# 
  3304  0313                     	;# 
  3305  0314                     	;# 
  3306  0314                     	;# 
  3307  0315                     	;# 
  3308  0316                     	;# 
  3309  0317                     	;# 
  3310  0318                     	;# 
  3311  0318                     	;# 
  3312  0319                     	;# 
  3313  031A                     	;# 
  3314  031B                     	;# 
  3315  031C                     	;# 
  3316  031C                     	;# 
  3317  031D                     	;# 
  3318  031E                     	;# 
  3319  031F                     	;# 
  3320  038C                     	;# 
  3321  038D                     	;# 
  3322  038E                     	;# 
  3323  0390                     	;# 
  3324  0391                     	;# 
  3325  0392                     	;# 
  3326  040C                     	;# 
  3327  040D                     	;# 
  3328  040E                     	;# 
  3329  040F                     	;# 
  3330  0410                     	;# 
  3331  0411                     	;# 
  3332  0416                     	;# 
  3333  0416                     	;# 
  3334  0417                     	;# 
  3335  0418                     	;# 
  3336  0418                     	;# 
  3337  0419                     	;# 
  3338  041A                     	;# 
  3339  041A                     	;# 
  3340  041B                     	;# 
  3341  041C                     	;# 
  3342  041C                     	;# 
  3343  041D                     	;# 
  3344  041E                     	;# 
  3345  041F                     	;# 
  3346  048C                     	;# 
  3347  048C                     	;# 
  3348  048D                     	;# 
  3349  048E                     	;# 
  3350  048F                     	;# 
  3351  048F                     	;# 
  3352  0490                     	;# 
  3353  0491                     	;# 
  3354  0492                     	;# 
  3355  0492                     	;# 
  3356  0493                     	;# 
  3357  0494                     	;# 
  3358  0495                     	;# 
  3359  0495                     	;# 
  3360  0496                     	;# 
  3361  0497                     	;# 
  3362  0498                     	;# 
  3363  0499                     	;# 
  3364  049A                     	;# 
  3365  049B                     	;# 
  3366  049C                     	;# 
  3367  049D                     	;# 
  3368  050C                     	;# 
  3369  050C                     	;# 
  3370  050D                     	;# 
  3371  050E                     	;# 
  3372  050F                     	;# 
  3373  050F                     	;# 
  3374  0510                     	;# 
  3375  0511                     	;# 
  3376  0512                     	;# 
  3377  0512                     	;# 
  3378  0513                     	;# 
  3379  0514                     	;# 
  3380  0515                     	;# 
  3381  0515                     	;# 
  3382  0516                     	;# 
  3383  0517                     	;# 
  3384  0518                     	;# 
  3385  0519                     	;# 
  3386  051A                     	;# 
  3387  051B                     	;# 
  3388  051C                     	;# 
  3389  051D                     	;# 
  3390  058C                     	;# 
  3391  058C                     	;# 
  3392  058D                     	;# 
  3393  058E                     	;# 
  3394  058F                     	;# 
  3395  058F                     	;# 
  3396  0590                     	;# 
  3397  0591                     	;# 
  3398  0592                     	;# 
  3399  0593                     	;# 
  3400  060C                     	;# 
  3401  060D                     	;# 
  3402  060E                     	;# 
  3403  060F                     	;# 
  3404  0610                     	;# 
  3405  0611                     	;# 
  3406  0612                     	;# 
  3407  0613                     	;# 
  3408  0614                     	;# 
  3409  0616                     	;# 
  3410  0617                     	;# 
  3411  0618                     	;# 
  3412  0619                     	;# 
  3413  061A                     	;# 
  3414  061B                     	;# 
  3415  061C                     	;# 
  3416  061D                     	;# 
  3417  061E                     	;# 
  3418  068C                     	;# 
  3419  068D                     	;# 
  3420  068E                     	;# 
  3421  068F                     	;# 
  3422  0690                     	;# 
  3423  0691                     	;# 
  3424  0692                     	;# 
  3425  0693                     	;# 
  3426  0694                     	;# 
  3427  070C                     	;# 
  3428  070D                     	;# 
  3429  070E                     	;# 
  3430  070F                     	;# 
  3431  0710                     	;# 
  3432  0711                     	;# 
  3433  0712                     	;# 
  3434  0713                     	;# 
  3435  0714                     	;# 
  3436  0716                     	;# 
  3437  0717                     	;# 
  3438  0718                     	;# 
  3439  0719                     	;# 
  3440  071A                     	;# 
  3441  071B                     	;# 
  3442  071C                     	;# 
  3443  071D                     	;# 
  3444  071E                     	;# 
  3445  0796                     	;# 
  3446  0797                     	;# 
  3447  0798                     	;# 
  3448  0799                     	;# 
  3449  079A                     	;# 
  3450  079B                     	;# 
  3451  080C                     	;# 
  3452  080D                     	;# 
  3453  080E                     	;# 
  3454  080F                     	;# 
  3455  0810                     	;# 
  3456  0811                     	;# 
  3457  0812                     	;# 
  3458  0813                     	;# 
  3459  0814                     	;# 
  3460  081A                     	;# 
  3461  081B                     	;# 
  3462  081C                     	;# 
  3463  081D                     	;# 
  3464  081E                     	;# 
  3465  081F                     	;# 
  3466  088C                     	;# 
  3467  088D                     	;# 
  3468  088E                     	;# 
  3469  088F                     	;# 
  3470  0890                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0893                     	;# 
  3474  0895                     	;# 
  3475  0896                     	;# 
  3476  0897                     	;# 
  3477  0898                     	;# 
  3478  0899                     	;# 
  3479  089A                     	;# 
  3480  089B                     	;# 
  3481  090C                     	;# 
  3482  090E                     	;# 
  3483  090F                     	;# 
  3484  091F                     	;# 
  3485  091F                     	;# 
  3486  098F                     	;# 
  3487  098F                     	;# 
  3488  0990                     	;# 
  3489  0991                     	;# 
  3490  0992                     	;# 
  3491  0993                     	;# 
  3492  0994                     	;# 
  3493  0995                     	;# 
  3494  0996                     	;# 
  3495  0997                     	;# 
  3496  0E0F                     	;# 
  3497  0E10                     	;# 
  3498  0E11                     	;# 
  3499  0E12                     	;# 
  3500  0E13                     	;# 
  3501  0E14                     	;# 
  3502  0E15                     	;# 
  3503  0E16                     	;# 
  3504  0E17                     	;# 
  3505  0E18                     	;# 
  3506  0E19                     	;# 
  3507  0E1A                     	;# 
  3508  0E1B                     	;# 
  3509  0E1C                     	;# 
  3510  0E1D                     	;# 
  3511  0E1E                     	;# 
  3512  0E1F                     	;# 
  3513  0E20                     	;# 
  3514  0E21                     	;# 
  3515  0E22                     	;# 
  3516  0E23                     	;# 
  3517  0E24                     	;# 
  3518  0E25                     	;# 
  3519  0E26                     	;# 
  3520  0E27                     	;# 
  3521  0E28                     	;# 
  3522  0E29                     	;# 
  3523  0E2A                     	;# 
  3524  0E2B                     	;# 
  3525  0E2C                     	;# 
  3526  0E2D                     	;# 
  3527  0E2E                     	;# 
  3528  0E2F                     	;# 
  3529  0E30                     	;# 
  3530  0E31                     	;# 
  3531  0E32                     	;# 
  3532  0E33                     	;# 
  3533  0E34                     	;# 
  3534  0E35                     	;# 
  3535  0E36                     	;# 
  3536  0E37                     	;# 
  3537  0E8F                     	;# 
  3538  0E90                     	;# 
  3539  0E91                     	;# 
  3540  0E92                     	;# 
  3541  0E93                     	;# 
  3542  0E94                     	;# 
  3543  0E95                     	;# 
  3544  0E96                     	;# 
  3545  0E97                     	;# 
  3546  0E9C                     	;# 
  3547  0E9D                     	;# 
  3548  0E9E                     	;# 
  3549  0EA1                     	;# 
  3550  0EA2                     	;# 
  3551  0EA3                     	;# 
  3552  0EA4                     	;# 
  3553  0EA5                     	;# 
  3554  0EA9                     	;# 
  3555  0EAA                     	;# 
  3556  0EAB                     	;# 
  3557  0EAC                     	;# 
  3558  0EB1                     	;# 
  3559  0EB2                     	;# 
  3560  0EB3                     	;# 
  3561  0EB8                     	;# 
  3562  0EB9                     	;# 
  3563  0EBA                     	;# 
  3564  0EBB                     	;# 
  3565  0EBC                     	;# 
  3566  0EBD                     	;# 
  3567  0EBE                     	;# 
  3568  0EC3                     	;# 
  3569  0EC5                     	;# 
  3570  0EC6                     	;# 
  3571  0EC7                     	;# 
  3572  0EC8                     	;# 
  3573  0EC9                     	;# 
  3574  0ECA                     	;# 
  3575  0ECB                     	;# 
  3576  0ECC                     	;# 
  3577  0F10                     	;# 
  3578  0F11                     	;# 
  3579  0F12                     	;# 
  3580  0F13                     	;# 
  3581  0F14                     	;# 
  3582  0F15                     	;# 
  3583  0F16                     	;# 
  3584  0F17                     	;# 
  3585  0F18                     	;# 
  3586  0F19                     	;# 
  3587  0F1A                     	;# 
  3588  0F1B                     	;# 
  3589  0F1C                     	;# 
  3590  0F1D                     	;# 
  3591  0F1E                     	;# 
  3592  0F1F                     	;# 
  3593  0F20                     	;# 
  3594  0F21                     	;# 
  3595  0F22                     	;# 
  3596  0F23                     	;# 
  3597  0F24                     	;# 
  3598  0F25                     	;# 
  3599  0F26                     	;# 
  3600  0F27                     	;# 
  3601  0F38                     	;# 
  3602  0F39                     	;# 
  3603  0F3A                     	;# 
  3604  0F3B                     	;# 
  3605  0F3C                     	;# 
  3606  0F3D                     	;# 
  3607  0F3E                     	;# 
  3608  0F3F                     	;# 
  3609  0F40                     	;# 
  3610  0F41                     	;# 
  3611  0F43                     	;# 
  3612  0F44                     	;# 
  3613  0F45                     	;# 
  3614  0F46                     	;# 
  3615  0F47                     	;# 
  3616  0F48                     	;# 
  3617  0F49                     	;# 
  3618  0F4A                     	;# 
  3619  0F4B                     	;# 
  3620  0F4C                     	;# 
  3621  0F4E                     	;# 
  3622  0F4F                     	;# 
  3623  0F50                     	;# 
  3624  0F51                     	;# 
  3625  0F52                     	;# 
  3626  0F53                     	;# 
  3627  0F54                     	;# 
  3628  0F55                     	;# 
  3629  0F56                     	;# 
  3630  0F57                     	;# 
  3631  0F65                     	;# 
  3632  0F68                     	;# 
  3633  0F69                     	;# 
  3634  0F6A                     	;# 
  3635  0F6B                     	;# 
  3636  0FE4                     	;# 
  3637  0FE5                     	;# 
  3638  0FE6                     	;# 
  3639  0FE7                     	;# 
  3640  0FE8                     	;# 
  3641  0FE9                     	;# 
  3642  0FEA                     	;# 
  3643  0FEB                     	;# 
  3644  0FED                     	;# 
  3645  0FEE                     	;# 
  3646  0FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000D                     	;# 
  3661  000E                     	;# 
  3662  0010                     	;# 
  3663  0011                     	;# 
  3664  0012                     	;# 
  3665  0013                     	;# 
  3666  0016                     	;# 
  3667  0017                     	;# 
  3668  0018                     	;# 
  3669  001C                     	;# 
  3670  001C                     	;# 
  3671  001D                     	;# 
  3672  001D                     	;# 
  3673  001E                     	;# 
  3674  001F                     	;# 
  3675  008C                     	;# 
  3676  008C                     	;# 
  3677  008D                     	;# 
  3678  008E                     	;# 
  3679  008E                     	;# 
  3680  008F                     	;# 
  3681  0090                     	;# 
  3682  0090                     	;# 
  3683  0091                     	;# 
  3684  0093                     	;# 
  3685  0094                     	;# 
  3686  0095                     	;# 
  3687  0096                     	;# 
  3688  0097                     	;# 
  3689  0098                     	;# 
  3690  0099                     	;# 
  3691  009A                     	;# 
  3692  009B                     	;# 
  3693  009C                     	;# 
  3694  009D                     	;# 
  3695  009E                     	;# 
  3696  010C                     	;# 
  3697  010D                     	;# 
  3698  010E                     	;# 
  3699  010E                     	;# 
  3700  010F                     	;# 
  3701  0110                     	;# 
  3702  0110                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0112                     	;# 
  3706  0113                     	;# 
  3707  0114                     	;# 
  3708  0114                     	;# 
  3709  0115                     	;# 
  3710  0116                     	;# 
  3711  0116                     	;# 
  3712  0117                     	;# 
  3713  0119                     	;# 
  3714  0119                     	;# 
  3715  0119                     	;# 
  3716  011A                     	;# 
  3717  011A                     	;# 
  3718  011A                     	;# 
  3719  011B                     	;# 
  3720  011B                     	;# 
  3721  011B                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011C                     	;# 
  3725  011C                     	;# 
  3726  011C                     	;# 
  3727  011D                     	;# 
  3728  011D                     	;# 
  3729  011D                     	;# 
  3730  011E                     	;# 
  3731  011E                     	;# 
  3732  011E                     	;# 
  3733  011F                     	;# 
  3734  011F                     	;# 
  3735  011F                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  018C                     	;# 
  3739  018D                     	;# 
  3740  018E                     	;# 
  3741  018F                     	;# 
  3742  0190                     	;# 
  3743  0191                     	;# 
  3744  0192                     	;# 
  3745  0196                     	;# 
  3746  0197                     	;# 
  3747  0198                     	;# 
  3748  0199                     	;# 
  3749  019A                     	;# 
  3750  019B                     	;# 
  3751  019C                     	;# 
  3752  020C                     	;# 
  3753  020D                     	;# 
  3754  020E                     	;# 
  3755  020F                     	;# 
  3756  020F                     	;# 
  3757  0210                     	;# 
  3758  0210                     	;# 
  3759  0211                     	;# 
  3760  0211                     	;# 
  3761  0212                     	;# 
  3762  0213                     	;# 
  3763  0214                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0218                     	;# 
  3771  0219                     	;# 
  3772  021A                     	;# 
  3773  021B                     	;# 
  3774  021B                     	;# 
  3775  021C                     	;# 
  3776  021C                     	;# 
  3777  021D                     	;# 
  3778  021D                     	;# 
  3779  021E                     	;# 
  3780  021F                     	;# 
  3781  028C                     	;# 
  3782  028C                     	;# 
  3783  028D                     	;# 
  3784  028D                     	;# 
  3785  028E                     	;# 
  3786  028F                     	;# 
  3787  0290                     	;# 
  3788  0290                     	;# 
  3789  0291                     	;# 
  3790  0292                     	;# 
  3791  0292                     	;# 
  3792  0293                     	;# 
  3793  0293                     	;# 
  3794  0294                     	;# 
  3795  0295                     	;# 
  3796  0296                     	;# 
  3797  0296                     	;# 
  3798  0297                     	;# 
  3799  0298                     	;# 
  3800  0298                     	;# 
  3801  0299                     	;# 
  3802  0299                     	;# 
  3803  029A                     	;# 
  3804  029B                     	;# 
  3805  029C                     	;# 
  3806  029C                     	;# 
  3807  029D                     	;# 
  3808  030C                     	;# 
  3809  030C                     	;# 
  3810  030D                     	;# 
  3811  030E                     	;# 
  3812  030F                     	;# 
  3813  0310                     	;# 
  3814  0310                     	;# 
  3815  0311                     	;# 
  3816  0312                     	;# 
  3817  0313                     	;# 
  3818  0314                     	;# 
  3819  0314                     	;# 
  3820  0315                     	;# 
  3821  0316                     	;# 
  3822  0317                     	;# 
  3823  0318                     	;# 
  3824  0318                     	;# 
  3825  0319                     	;# 
  3826  031A                     	;# 
  3827  031B                     	;# 
  3828  031C                     	;# 
  3829  031C                     	;# 
  3830  031D                     	;# 
  3831  031E                     	;# 
  3832  031F                     	;# 
  3833  038C                     	;# 
  3834  038D                     	;# 
  3835  038E                     	;# 
  3836  0390                     	;# 
  3837  0391                     	;# 
  3838  0392                     	;# 
  3839  040C                     	;# 
  3840  040D                     	;# 
  3841  040E                     	;# 
  3842  040F                     	;# 
  3843  0410                     	;# 
  3844  0411                     	;# 
  3845  0416                     	;# 
  3846  0416                     	;# 
  3847  0417                     	;# 
  3848  0418                     	;# 
  3849  0418                     	;# 
  3850  0419                     	;# 
  3851  041A                     	;# 
  3852  041A                     	;# 
  3853  041B                     	;# 
  3854  041C                     	;# 
  3855  041C                     	;# 
  3856  041D                     	;# 
  3857  041E                     	;# 
  3858  041F                     	;# 
  3859  048C                     	;# 
  3860  048C                     	;# 
  3861  048D                     	;# 
  3862  048E                     	;# 
  3863  048F                     	;# 
  3864  048F                     	;# 
  3865  0490                     	;# 
  3866  0491                     	;# 
  3867  0492                     	;# 
  3868  0492                     	;# 
  3869  0493                     	;# 
  3870  0494                     	;# 
  3871  0495                     	;# 
  3872  0495                     	;# 
  3873  0496                     	;# 
  3874  0497                     	;# 
  3875  0498                     	;# 
  3876  0499                     	;# 
  3877  049A                     	;# 
  3878  049B                     	;# 
  3879  049C                     	;# 
  3880  049D                     	;# 
  3881  050C                     	;# 
  3882  050C                     	;# 
  3883  050D                     	;# 
  3884  050E                     	;# 
  3885  050F                     	;# 
  3886  050F                     	;# 
  3887  0510                     	;# 
  3888  0511                     	;# 
  3889  0512                     	;# 
  3890  0512                     	;# 
  3891  0513                     	;# 
  3892  0514                     	;# 
  3893  0515                     	;# 
  3894  0515                     	;# 
  3895  0516                     	;# 
  3896  0517                     	;# 
  3897  0518                     	;# 
  3898  0519                     	;# 
  3899  051A                     	;# 
  3900  051B                     	;# 
  3901  051C                     	;# 
  3902  051D                     	;# 
  3903  058C                     	;# 
  3904  058C                     	;# 
  3905  058D                     	;# 
  3906  058E                     	;# 
  3907  058F                     	;# 
  3908  058F                     	;# 
  3909  0590                     	;# 
  3910  0591                     	;# 
  3911  0592                     	;# 
  3912  0593                     	;# 
  3913  060C                     	;# 
  3914  060D                     	;# 
  3915  060E                     	;# 
  3916  060F                     	;# 
  3917  0610                     	;# 
  3918  0611                     	;# 
  3919  0612                     	;# 
  3920  0613                     	;# 
  3921  0614                     	;# 
  3922  0616                     	;# 
  3923  0617                     	;# 
  3924  0618                     	;# 
  3925  0619                     	;# 
  3926  061A                     	;# 
  3927  061B                     	;# 
  3928  061C                     	;# 
  3929  061D                     	;# 
  3930  061E                     	;# 
  3931  068C                     	;# 
  3932  068D                     	;# 
  3933  068E                     	;# 
  3934  068F                     	;# 
  3935  0690                     	;# 
  3936  0691                     	;# 
  3937  0692                     	;# 
  3938  0693                     	;# 
  3939  0694                     	;# 
  3940  070C                     	;# 
  3941  070D                     	;# 
  3942  070E                     	;# 
  3943  070F                     	;# 
  3944  0710                     	;# 
  3945  0711                     	;# 
  3946  0712                     	;# 
  3947  0713                     	;# 
  3948  0714                     	;# 
  3949  0716                     	;# 
  3950  0717                     	;# 
  3951  0718                     	;# 
  3952  0719                     	;# 
  3953  071A                     	;# 
  3954  071B                     	;# 
  3955  071C                     	;# 
  3956  071D                     	;# 
  3957  071E                     	;# 
  3958  0796                     	;# 
  3959  0797                     	;# 
  3960  0798                     	;# 
  3961  0799                     	;# 
  3962  079A                     	;# 
  3963  079B                     	;# 
  3964  080C                     	;# 
  3965  080D                     	;# 
  3966  080E                     	;# 
  3967  080F                     	;# 
  3968  0810                     	;# 
  3969  0811                     	;# 
  3970  0812                     	;# 
  3971  0813                     	;# 
  3972  0814                     	;# 
  3973  081A                     	;# 
  3974  081B                     	;# 
  3975  081C                     	;# 
  3976  081D                     	;# 
  3977  081E                     	;# 
  3978  081F                     	;# 
  3979  088C                     	;# 
  3980  088D                     	;# 
  3981  088E                     	;# 
  3982  088F                     	;# 
  3983  0890                     	;# 
  3984  0891                     	;# 
  3985  0892                     	;# 
  3986  0893                     	;# 
  3987  0895                     	;# 
  3988  0896                     	;# 
  3989  0897                     	;# 
  3990  0898                     	;# 
  3991  0899                     	;# 
  3992  089A                     	;# 
  3993  089B                     	;# 
  3994  090C                     	;# 
  3995  090E                     	;# 
  3996  090F                     	;# 
  3997  091F                     	;# 
  3998  091F                     	;# 
  3999  098F                     	;# 
  4000  098F                     	;# 
  4001  0990                     	;# 
  4002  0991                     	;# 
  4003  0992                     	;# 
  4004  0993                     	;# 
  4005  0994                     	;# 
  4006  0995                     	;# 
  4007  0996                     	;# 
  4008  0997                     	;# 
  4009  0E0F                     	;# 
  4010  0E10                     	;# 
  4011  0E11                     	;# 
  4012  0E12                     	;# 
  4013  0E13                     	;# 
  4014  0E14                     	;# 
  4015  0E15                     	;# 
  4016  0E16                     	;# 
  4017  0E17                     	;# 
  4018  0E18                     	;# 
  4019  0E19                     	;# 
  4020  0E1A                     	;# 
  4021  0E1B                     	;# 
  4022  0E1C                     	;# 
  4023  0E1D                     	;# 
  4024  0E1E                     	;# 
  4025  0E1F                     	;# 
  4026  0E20                     	;# 
  4027  0E21                     	;# 
  4028  0E22                     	;# 
  4029  0E23                     	;# 
  4030  0E24                     	;# 
  4031  0E25                     	;# 
  4032  0E26                     	;# 
  4033  0E27                     	;# 
  4034  0E28                     	;# 
  4035  0E29                     	;# 
  4036  0E2A                     	;# 
  4037  0E2B                     	;# 
  4038  0E2C                     	;# 
  4039  0E2D                     	;# 
  4040  0E2E                     	;# 
  4041  0E2F                     	;# 
  4042  0E30                     	;# 
  4043  0E31                     	;# 
  4044  0E32                     	;# 
  4045  0E33                     	;# 
  4046  0E34                     	;# 
  4047  0E35                     	;# 
  4048  0E36                     	;# 
  4049  0E37                     	;# 
  4050  0E8F                     	;# 
  4051  0E90                     	;# 
  4052  0E91                     	;# 
  4053  0E92                     	;# 
  4054  0E93                     	;# 
  4055  0E94                     	;# 
  4056  0E95                     	;# 
  4057  0E96                     	;# 
  4058  0E97                     	;# 
  4059  0E9C                     	;# 
  4060  0E9D                     	;# 
  4061  0E9E                     	;# 
  4062  0EA1                     	;# 
  4063  0EA2                     	;# 
  4064  0EA3                     	;# 
  4065  0EA4                     	;# 
  4066  0EA5                     	;# 
  4067  0EA9                     	;# 
  4068  0EAA                     	;# 
  4069  0EAB                     	;# 
  4070  0EAC                     	;# 
  4071  0EB1                     	;# 
  4072  0EB2                     	;# 
  4073  0EB3                     	;# 
  4074  0EB8                     	;# 
  4075  0EB9                     	;# 
  4076  0EBA                     	;# 
  4077  0EBB                     	;# 
  4078  0EBC                     	;# 
  4079  0EBD                     	;# 
  4080  0EBE                     	;# 
  4081  0EC3                     	;# 
  4082  0EC5                     	;# 
  4083  0EC6                     	;# 
  4084  0EC7                     	;# 
  4085  0EC8                     	;# 
  4086  0EC9                     	;# 
  4087  0ECA                     	;# 
  4088  0ECB                     	;# 
  4089  0ECC                     	;# 
  4090  0F10                     	;# 
  4091  0F11                     	;# 
  4092  0F12                     	;# 
  4093  0F13                     	;# 
  4094  0F14                     	;# 
  4095  0F15                     	;# 
  4096  0F16                     	;# 
  4097  0F17                     	;# 
  4098  0F18                     	;# 
  4099  0F19                     	;# 
  4100  0F1A                     	;# 
  4101  0F1B                     	;# 
  4102  0F1C                     	;# 
  4103  0F1D                     	;# 
  4104  0F1E                     	;# 
  4105  0F1F                     	;# 
  4106  0F20                     	;# 
  4107  0F21                     	;# 
  4108  0F22                     	;# 
  4109  0F23                     	;# 
  4110  0F24                     	;# 
  4111  0F25                     	;# 
  4112  0F26                     	;# 
  4113  0F27                     	;# 
  4114  0F38                     	;# 
  4115  0F39                     	;# 
  4116  0F3A                     	;# 
  4117  0F3B                     	;# 
  4118  0F3C                     	;# 
  4119  0F3D                     	;# 
  4120  0F3E                     	;# 
  4121  0F3F                     	;# 
  4122  0F40                     	;# 
  4123  0F41                     	;# 
  4124  0F43                     	;# 
  4125  0F44                     	;# 
  4126  0F45                     	;# 
  4127  0F46                     	;# 
  4128  0F47                     	;# 
  4129  0F48                     	;# 
  4130  0F49                     	;# 
  4131  0F4A                     	;# 
  4132  0F4B                     	;# 
  4133  0F4C                     	;# 
  4134  0F4E                     	;# 
  4135  0F4F                     	;# 
  4136  0F50                     	;# 
  4137  0F51                     	;# 
  4138  0F52                     	;# 
  4139  0F53                     	;# 
  4140  0F54                     	;# 
  4141  0F55                     	;# 
  4142  0F56                     	;# 
  4143  0F57                     	;# 
  4144  0F65                     	;# 
  4145  0F68                     	;# 
  4146  0F69                     	;# 
  4147  0F6A                     	;# 
  4148  0F6B                     	;# 
  4149  0FE4                     	;# 
  4150  0FE5                     	;# 
  4151  0FE6                     	;# 
  4152  0FE7                     	;# 
  4153  0FE8                     	;# 
  4154  0FE9                     	;# 
  4155  0FEA                     	;# 
  4156  0FEB                     	;# 
  4157  0FED                     	;# 
  4158  0FEE                     	;# 
  4159  0FEF                     	;# 
  4160  0000                     	;# 
  4161  0001                     	;# 
  4162  0002                     	;# 
  4163  0003                     	;# 
  4164  0004                     	;# 
  4165  0005                     	;# 
  4166  0006                     	;# 
  4167  0007                     	;# 
  4168  0008                     	;# 
  4169  0009                     	;# 
  4170  000A                     	;# 
  4171  000B                     	;# 
  4172  000C                     	;# 
  4173  000D                     	;# 
  4174  000E                     	;# 
  4175  0010                     	;# 
  4176  0011                     	;# 
  4177  0012                     	;# 
  4178  0013                     	;# 
  4179  0016                     	;# 
  4180  0017                     	;# 
  4181  0018                     	;# 
  4182  001C                     	;# 
  4183  001C                     	;# 
  4184  001D                     	;# 
  4185  001D                     	;# 
  4186  001E                     	;# 
  4187  001F                     	;# 
  4188  008C                     	;# 
  4189  008C                     	;# 
  4190  008D                     	;# 
  4191  008E                     	;# 
  4192  008E                     	;# 
  4193  008F                     	;# 
  4194  0090                     	;# 
  4195  0090                     	;# 
  4196  0091                     	;# 
  4197  0093                     	;# 
  4198  0094                     	;# 
  4199  0095                     	;# 
  4200  0096                     	;# 
  4201  0097                     	;# 
  4202  0098                     	;# 
  4203  0099                     	;# 
  4204  009A                     	;# 
  4205  009B                     	;# 
  4206  009C                     	;# 
  4207  009D                     	;# 
  4208  009E                     	;# 
  4209  010C                     	;# 
  4210  010D                     	;# 
  4211  010E                     	;# 
  4212  010E                     	;# 
  4213  010F                     	;# 
  4214  0110                     	;# 
  4215  0110                     	;# 
  4216  0111                     	;# 
  4217  0112                     	;# 
  4218  0112                     	;# 
  4219  0113                     	;# 
  4220  0114                     	;# 
  4221  0114                     	;# 
  4222  0115                     	;# 
  4223  0116                     	;# 
  4224  0116                     	;# 
  4225  0117                     	;# 
  4226  0119                     	;# 
  4227  0119                     	;# 
  4228  0119                     	;# 
  4229  011A                     	;# 
  4230  011A                     	;# 
  4231  011A                     	;# 
  4232  011B                     	;# 
  4233  011B                     	;# 
  4234  011B                     	;# 
  4235  011B                     	;# 
  4236  011B                     	;# 
  4237  011C                     	;# 
  4238  011C                     	;# 
  4239  011C                     	;# 
  4240  011D                     	;# 
  4241  011D                     	;# 
  4242  011D                     	;# 
  4243  011E                     	;# 
  4244  011E                     	;# 
  4245  011E                     	;# 
  4246  011F                     	;# 
  4247  011F                     	;# 
  4248  011F                     	;# 
  4249  011F                     	;# 
  4250  011F                     	;# 
  4251  018C                     	;# 
  4252  018D                     	;# 
  4253  018E                     	;# 
  4254  018F                     	;# 
  4255  0190                     	;# 
  4256  0191                     	;# 
  4257  0192                     	;# 
  4258  0196                     	;# 
  4259  0197                     	;# 
  4260  0198                     	;# 
  4261  0199                     	;# 
  4262  019A                     	;# 
  4263  019B                     	;# 
  4264  019C                     	;# 
  4265  020C                     	;# 
  4266  020D                     	;# 
  4267  020E                     	;# 
  4268  020F                     	;# 
  4269  020F                     	;# 
  4270  0210                     	;# 
  4271  0210                     	;# 
  4272  0211                     	;# 
  4273  0211                     	;# 
  4274  0212                     	;# 
  4275  0213                     	;# 
  4276  0214                     	;# 
  4277  0215                     	;# 
  4278  0215                     	;# 
  4279  0216                     	;# 
  4280  0216                     	;# 
  4281  0217                     	;# 
  4282  0217                     	;# 
  4283  0218                     	;# 
  4284  0219                     	;# 
  4285  021A                     	;# 
  4286  021B                     	;# 
  4287  021B                     	;# 
  4288  021C                     	;# 
  4289  021C                     	;# 
  4290  021D                     	;# 
  4291  021D                     	;# 
  4292  021E                     	;# 
  4293  021F                     	;# 
  4294  028C                     	;# 
  4295  028C                     	;# 
  4296  028D                     	;# 
  4297  028D                     	;# 
  4298  028E                     	;# 
  4299  028F                     	;# 
  4300  0290                     	;# 
  4301  0290                     	;# 
  4302  0291                     	;# 
  4303  0292                     	;# 
  4304  0292                     	;# 
  4305  0293                     	;# 
  4306  0293                     	;# 
  4307  0294                     	;# 
  4308  0295                     	;# 
  4309  0296                     	;# 
  4310  0296                     	;# 
  4311  0297                     	;# 
  4312  0298                     	;# 
  4313  0298                     	;# 
  4314  0299                     	;# 
  4315  0299                     	;# 
  4316  029A                     	;# 
  4317  029B                     	;# 
  4318  029C                     	;# 
  4319  029C                     	;# 
  4320  029D                     	;# 
  4321  030C                     	;# 
  4322  030C                     	;# 
  4323  030D                     	;# 
  4324  030E                     	;# 
  4325  030F                     	;# 
  4326  0310                     	;# 
  4327  0310                     	;# 
  4328  0311                     	;# 
  4329  0312                     	;# 
  4330  0313                     	;# 
  4331  0314                     	;# 
  4332  0314                     	;# 
  4333  0315                     	;# 
  4334  0316                     	;# 
  4335  0317                     	;# 
  4336  0318                     	;# 
  4337  0318                     	;# 
  4338  0319                     	;# 
  4339  031A                     	;# 
  4340  031B                     	;# 
  4341  031C                     	;# 
  4342  031C                     	;# 
  4343  031D                     	;# 
  4344  031E                     	;# 
  4345  031F                     	;# 
  4346  038C                     	;# 
  4347  038D                     	;# 
  4348  038E                     	;# 
  4349  0390                     	;# 
  4350  0391                     	;# 
  4351  0392                     	;# 
  4352  040C                     	;# 
  4353  040D                     	;# 
  4354  040E                     	;# 
  4355  040F                     	;# 
  4356  0410                     	;# 
  4357  0411                     	;# 
  4358  0416                     	;# 
  4359  0416                     	;# 
  4360  0417                     	;# 
  4361  0418                     	;# 
  4362  0418                     	;# 
  4363  0419                     	;# 
  4364  041A                     	;# 
  4365  041A                     	;# 
  4366  041B                     	;# 
  4367  041C                     	;# 
  4368  041C                     	;# 
  4369  041D                     	;# 
  4370  041E                     	;# 
  4371  041F                     	;# 
  4372  048C                     	;# 
  4373  048C                     	;# 
  4374  048D                     	;# 
  4375  048E                     	;# 
  4376  048F                     	;# 
  4377  048F                     	;# 
  4378  0490                     	;# 
  4379  0491                     	;# 
  4380  0492                     	;# 
  4381  0492                     	;# 
  4382  0493                     	;# 
  4383  0494                     	;# 
  4384  0495                     	;# 
  4385  0495                     	;# 
  4386  0496                     	;# 
  4387  0497                     	;# 
  4388  0498                     	;# 
  4389  0499                     	;# 
  4390  049A                     	;# 
  4391  049B                     	;# 
  4392  049C                     	;# 
  4393  049D                     	;# 
  4394  050C                     	;# 
  4395  050C                     	;# 
  4396  050D                     	;# 
  4397  050E                     	;# 
  4398  050F                     	;# 
  4399  050F                     	;# 
  4400  0510                     	;# 
  4401  0511                     	;# 
  4402  0512                     	;# 
  4403  0512                     	;# 
  4404  0513                     	;# 
  4405  0514                     	;# 
  4406  0515                     	;# 
  4407  0515                     	;# 
  4408  0516                     	;# 
  4409  0517                     	;# 
  4410  0518                     	;# 
  4411  0519                     	;# 
  4412  051A                     	;# 
  4413  051B                     	;# 
  4414  051C                     	;# 
  4415  051D                     	;# 
  4416  058C                     	;# 
  4417  058C                     	;# 
  4418  058D                     	;# 
  4419  058E                     	;# 
  4420  058F                     	;# 
  4421  058F                     	;# 
  4422  0590                     	;# 
  4423  0591                     	;# 
  4424  0592                     	;# 
  4425  0593                     	;# 
  4426  060C                     	;# 
  4427  060D                     	;# 
  4428  060E                     	;# 
  4429  060F                     	;# 
  4430  0610                     	;# 
  4431  0611                     	;# 
  4432  0612                     	;# 
  4433  0613                     	;# 
  4434  0614                     	;# 
  4435  0616                     	;# 
  4436  0617                     	;# 
  4437  0618                     	;# 
  4438  0619                     	;# 
  4439  061A                     	;# 
  4440  061B                     	;# 
  4441  061C                     	;# 
  4442  061D                     	;# 
  4443  061E                     	;# 
  4444  068C                     	;# 
  4445  068D                     	;# 
  4446  068E                     	;# 
  4447  068F                     	;# 
  4448  0690                     	;# 
  4449  0691                     	;# 
  4450  0692                     	;# 
  4451  0693                     	;# 
  4452  0694                     	;# 
  4453  070C                     	;# 
  4454  070D                     	;# 
  4455  070E                     	;# 
  4456  070F                     	;# 
  4457  0710                     	;# 
  4458  0711                     	;# 
  4459  0712                     	;# 
  4460  0713                     	;# 
  4461  0714                     	;# 
  4462  0716                     	;# 
  4463  0717                     	;# 
  4464  0718                     	;# 
  4465  0719                     	;# 
  4466  071A                     	;# 
  4467  071B                     	;# 
  4468  071C                     	;# 
  4469  071D                     	;# 
  4470  071E                     	;# 
  4471  0796                     	;# 
  4472  0797                     	;# 
  4473  0798                     	;# 
  4474  0799                     	;# 
  4475  079A                     	;# 
  4476  079B                     	;# 
  4477  080C                     	;# 
  4478  080D                     	;# 
  4479  080E                     	;# 
  4480  080F                     	;# 
  4481  0810                     	;# 
  4482  0811                     	;# 
  4483  0812                     	;# 
  4484  0813                     	;# 
  4485  0814                     	;# 
  4486  081A                     	;# 
  4487  081B                     	;# 
  4488  081C                     	;# 
  4489  081D                     	;# 
  4490  081E                     	;# 
  4491  081F                     	;# 
  4492  088C                     	;# 
  4493  088D                     	;# 
  4494  088E                     	;# 
  4495  088F                     	;# 
  4496  0890                     	;# 
  4497  0891                     	;# 
  4498  0892                     	;# 
  4499  0893                     	;# 
  4500  0895                     	;# 
  4501  0896                     	;# 
  4502  0897                     	;# 
  4503  0898                     	;# 
  4504  0899                     	;# 
  4505  089A                     	;# 
  4506  089B                     	;# 
  4507  090C                     	;# 
  4508  090E                     	;# 
  4509  090F                     	;# 
  4510  091F                     	;# 
  4511  091F                     	;# 
  4512  098F                     	;# 
  4513  098F                     	;# 
  4514  0990                     	;# 
  4515  0991                     	;# 
  4516  0992                     	;# 
  4517  0993                     	;# 
  4518  0994                     	;# 
  4519  0995                     	;# 
  4520  0996                     	;# 
  4521  0997                     	;# 
  4522  0E0F                     	;# 
  4523  0E10                     	;# 
  4524  0E11                     	;# 
  4525  0E12                     	;# 
  4526  0E13                     	;# 
  4527  0E14                     	;# 
  4528  0E15                     	;# 
  4529  0E16                     	;# 
  4530  0E17                     	;# 
  4531  0E18                     	;# 
  4532  0E19                     	;# 
  4533  0E1A                     	;# 
  4534  0E1B                     	;# 
  4535  0E1C                     	;# 
  4536  0E1D                     	;# 
  4537  0E1E                     	;# 
  4538  0E1F                     	;# 
  4539  0E20                     	;# 
  4540  0E21                     	;# 
  4541  0E22                     	;# 
  4542  0E23                     	;# 
  4543  0E24                     	;# 
  4544  0E25                     	;# 
  4545  0E26                     	;# 
  4546  0E27                     	;# 
  4547  0E28                     	;# 
  4548  0E29                     	;# 
  4549  0E2A                     	;# 
  4550  0E2B                     	;# 
  4551  0E2C                     	;# 
  4552  0E2D                     	;# 
  4553  0E2E                     	;# 
  4554  0E2F                     	;# 
  4555  0E30                     	;# 
  4556  0E31                     	;# 
  4557  0E32                     	;# 
  4558  0E33                     	;# 
  4559  0E34                     	;# 
  4560  0E35                     	;# 
  4561  0E36                     	;# 
  4562  0E37                     	;# 
  4563  0E8F                     	;# 
  4564  0E90                     	;# 
  4565  0E91                     	;# 
  4566  0E92                     	;# 
  4567  0E93                     	;# 
  4568  0E94                     	;# 
  4569  0E95                     	;# 
  4570  0E96                     	;# 
  4571  0E97                     	;# 
  4572  0E9C                     	;# 
  4573  0E9D                     	;# 
  4574  0E9E                     	;# 
  4575  0EA1                     	;# 
  4576  0EA2                     	;# 
  4577  0EA3                     	;# 
  4578  0EA4                     	;# 
  4579  0EA5                     	;# 
  4580  0EA9                     	;# 
  4581  0EAA                     	;# 
  4582  0EAB                     	;# 
  4583  0EAC                     	;# 
  4584  0EB1                     	;# 
  4585  0EB2                     	;# 
  4586  0EB3                     	;# 
  4587  0EB8                     	;# 
  4588  0EB9                     	;# 
  4589  0EBA                     	;# 
  4590  0EBB                     	;# 
  4591  0EBC                     	;# 
  4592  0EBD                     	;# 
  4593  0EBE                     	;# 
  4594  0EC3                     	;# 
  4595  0EC5                     	;# 
  4596  0EC6                     	;# 
  4597  0EC7                     	;# 
  4598  0EC8                     	;# 
  4599  0EC9                     	;# 
  4600  0ECA                     	;# 
  4601  0ECB                     	;# 
  4602  0ECC                     	;# 
  4603  0F10                     	;# 
  4604  0F11                     	;# 
  4605  0F12                     	;# 
  4606  0F13                     	;# 
  4607  0F14                     	;# 
  4608  0F15                     	;# 
  4609  0F16                     	;# 
  4610  0F17                     	;# 
  4611  0F18                     	;# 
  4612  0F19                     	;# 
  4613  0F1A                     	;# 
  4614  0F1B                     	;# 
  4615  0F1C                     	;# 
  4616  0F1D                     	;# 
  4617  0F1E                     	;# 
  4618  0F1F                     	;# 
  4619  0F20                     	;# 
  4620  0F21                     	;# 
  4621  0F22                     	;# 
  4622  0F23                     	;# 
  4623  0F24                     	;# 
  4624  0F25                     	;# 
  4625  0F26                     	;# 
  4626  0F27                     	;# 
  4627  0F38                     	;# 
  4628  0F39                     	;# 
  4629  0F3A                     	;# 
  4630  0F3B                     	;# 
  4631  0F3C                     	;# 
  4632  0F3D                     	;# 
  4633  0F3E                     	;# 
  4634  0F3F                     	;# 
  4635  0F40                     	;# 
  4636  0F41                     	;# 
  4637  0F43                     	;# 
  4638  0F44                     	;# 
  4639  0F45                     	;# 
  4640  0F46                     	;# 
  4641  0F47                     	;# 
  4642  0F48                     	;# 
  4643  0F49                     	;# 
  4644  0F4A                     	;# 
  4645  0F4B                     	;# 
  4646  0F4C                     	;# 
  4647  0F4E                     	;# 
  4648  0F4F                     	;# 
  4649  0F50                     	;# 
  4650  0F51                     	;# 
  4651  0F52                     	;# 
  4652  0F53                     	;# 
  4653  0F54                     	;# 
  4654  0F55                     	;# 
  4655  0F56                     	;# 
  4656  0F57                     	;# 
  4657  0F65                     	;# 
  4658  0F68                     	;# 
  4659  0F69                     	;# 
  4660  0F6A                     	;# 
  4661  0F6B                     	;# 
  4662  0FE4                     	;# 
  4663  0FE5                     	;# 
  4664  0FE6                     	;# 
  4665  0FE7                     	;# 
  4666  0FE8                     	;# 
  4667  0FE9                     	;# 
  4668  0FEA                     	;# 
  4669  0FEB                     	;# 
  4670  0FED                     	;# 
  4671  0FEE                     	;# 
  4672  0FEF                     	;# 
  4673                           
  4674                           	psect	idataBANK1
  4675  09C9                     __pidataBANK1:	
  4676                           
  4677                           ;initializer for _channels
  4678  09C9  3401               	retlw	1
  4679  09CA  3400               	retlw	0
  4680  09CB  3403               	retlw	3
  4681  09CC  3400               	retlw	0
  4682                           
  4683                           ;initializer for _Ki
  4684  09CD  3401               	retlw	1
  4685  09CE  3400               	retlw	0
  4686                           
  4687                           ;initializer for _Kp
  4688  09CF  3404               	retlw	4
  4689  09D0  3400               	retlw	0
  4690                           
  4691                           ;initializer for _pidMaxOutput
  4692  09D1  34FF               	retlw	255
  4693  09D2  3407               	retlw	7
  4694                           
  4695                           	psect	idataBANK2
  4696  09FA                     __pidataBANK2:	
  4697                           
  4698                           ;initializer for ___cgram
  4699  09FA  340C               	retlw	12
  4700  09FB  3412               	retlw	18
  4701  09FC  3412               	retlw	18
  4702  09FD  340C               	retlw	12
  4703  09FE  3400               	retlw	0
  4704  09FF  3400               	retlw	0
  4705  0A00  3400               	retlw	0
  4706  0A01  3400               	retlw	0
  4707  0A02  3408               	retlw	8
  4708  0A03  3404               	retlw	4
  4709  0A04  3402               	retlw	2
  4710  0A05  341F               	retlw	31
  4711  0A06  3402               	retlw	2
  4712  0A07  3404               	retlw	4
  4713  0A08  3408               	retlw	8
  4714  0A09  3400               	retlw	0
  4715                           
  4716                           	psect	stringtext
  4717  1000                     __pstringtext:	
  4718  1000                     log@coeff:	
  4719  1000  3400               	retlw	0
  4720  1001  3400               	retlw	0
  4721  1002  3400               	retlw	0
  4722  1003  3400               	retlw	0
  4723  1004  3480               	retlw	128
  4724  1005  343F               	retlw	63
  4725  1006  34F0               	retlw	240
  4726  1007  34FF               	retlw	255
  4727  1008  34BE               	retlw	190
  4728  1009  34E2               	retlw	226
  4729  100A  34A9               	retlw	169
  4730  100B  343E               	retlw	62
  4731  100C  3483               	retlw	131
  4732  100D  3476               	retlw	118
  4733  100E  34BE               	retlw	190
  4734  100F  34AE               	retlw	174
  4735  1010  342B               	retlw	43
  4736  1011  343E               	retlw	62
  4737  1012  343C               	retlw	60
  4738  1013  34C3               	retlw	195
  4739  1014  34BD               	retlw	189
  4740  1015  34D2               	retlw	210
  4741  1016  3413               	retlw	19
  4742  1017  343D               	retlw	61
  4743  1018  3478               	retlw	120
  4744  1019  34D3               	retlw	211
  4745  101A  34BB               	retlw	187
  4746  101B                     __end_oflog@coeff:	
  4747  0016                     _LATA	set	22
  4748  0017                     _LATB	set	23
  4749  0018                     _LATC	set	24
  4750  0011                     _TRISA	set	17
  4751  0012                     _TRISB	set	18
  4752  0013                     _TRISC	set	19
  4753  005F                     _GIE	set	95
  4754  00C2                     _LATC2	set	194
  4755  0060                     _RA0	set	96
  4756  0062                     _RA2	set	98
  4757  0066                     _RA6	set	102
  4758  0067                     _RA7	set	103
  4759  0070                     _RC0	set	112
  4760  0071                     _RC1	set	113
  4761  009D                     _ADACQ	set	157
  4762  0099                     _ADACT	set	153
  4763  009B                     _ADCAP	set	155
  4764  0098                     _ADCLK	set	152
  4765  0093                     _ADCON0	set	147
  4766  0093                     _ADCON0bits	set	147
  4767  0094                     _ADCON1	set	148
  4768  0095                     _ADCON2	set	149
  4769  0096                     _ADCON3	set	150
  4770  009E                     _ADPCH	set	158
  4771  009C                     _ADPRE	set	156
  4772  009A                     _ADREF	set	154
  4773  008D                     _ADRESH	set	141
  4774  008C                     _ADRESL	set	140
  4775  0097                     _ADSTAT	set	151
  4776  010F                     _ADLTHH	set	271
  4777  010E                     _ADLTHL	set	270
  4778  010D                     _ADRPT	set	269
  4779  0113                     _ADSTPTH	set	275
  4780  0112                     _ADSTPTL	set	274
  4781  0111                     _ADUTHH	set	273
  4782  0110                     _ADUTHL	set	272
  4783  021F                     _CCPTMRS1bits	set	543
  4784  0290                     _T2CLKCON	set	656
  4785  028E                     _T2CON	set	654
  4786  028E                     _T2CONbits	set	654
  4787  028F                     _T2HLT	set	655
  4788  028D                     _T2PR	set	653
  4789  0291                     _T2RST	set	657
  4790  028C                     _T2TMR	set	652
  4791  0392                     _PWM7CON	set	914
  4792  0391                     _PWM7DCH	set	913
  4793  0390                     _PWM7DCL	set	912
  4794  0716                     _PIE0bits	set	1814
  4795  0710                     _PIR4bits	set	1808
  4796  088D                     _OSCCON1	set	2189
  4797  088F                     _OSCCON3	set	2191
  4798  0891                     _OSCEN	set	2193
  4799  0893                     _OSCFRQ	set	2195
  4800  0892                     _OSCTUNE	set	2194
  4801  090C                     _FVRCON	set	2316
  4802  0E8F                     _PPSLOCK	set	3727
  4803  0E8F                     _PPSLOCKbits	set	3727
  4804  0F38                     _ANSELA	set	3896
  4805  0F43                     _ANSELB	set	3907
  4806  0F4E                     _ANSELC	set	3918
  4807  0F23                     _RC3PPS	set	3875
  4808  0F39                     _WPUA	set	3897
  4809  0F44                     _WPUB	set	3908
  4810  0F4F                     _WPUC	set	3919
  4811  0F65                     _WPUE	set	3941
  4812  101B                     STR_2:	
  4813  101B  3441               	retlw	65	;'A'
  4814  101C  346D               	retlw	109	;'m'
  4815  101D  3462               	retlw	98	;'b'
  4816  101E  3469               	retlw	105	;'i'
  4817  101F  3465               	retlw	101	;'e'
  4818  1020  346E               	retlw	110	;'n'
  4819  1021  3474               	retlw	116	;'t'
  4820  1022  343A               	retlw	58	;':'
  4821  1023  3400               	retlw	0
  4822  1024                     STR_1:	
  4823  1024  3450               	retlw	80	;'P'
  4824  1025  3469               	retlw	105	;'i'
  4825  1026  3474               	retlw	116	;'t'
  4826  1027  343A               	retlw	58	;':'
  4827  1028  3400               	retlw	0
  4828                           
  4829                           ; #config settings
  4830  0000                     
  4831                           	psect	cinit
  4832  07D0                     start_initialization:	
  4833  07D0                     __initialization:	
  4834                           
  4835                           ; Initialize objects allocated to BANK1
  4836  07D0  30C9               	movlw	low __pidataBANK1
  4837  07D1  0084               	movwf	4
  4838  07D2  3089               	movlw	(high __pidataBANK1)| (0+128)
  4839  07D3  0085               	movwf	5
  4840  07D4  30E4               	movlw	low __pdataBANK1
  4841  07D5  0086               	movwf	6
  4842  07D6  3000               	movlw	high __pdataBANK1
  4843  07D7  0087               	movwf	7
  4844  07D8  300A               	movlw	10
  4845  07D9  3189  21B2  3187   	fcall	init_ram
  4846                           
  4847                           ; Initialize objects allocated to BANK2
  4848  07DC  30FA               	movlw	low __pidataBANK2
  4849  07DD  0084               	movwf	4
  4850  07DE  3089               	movlw	(high __pidataBANK2)| (0+128)
  4851  07DF  0085               	movwf	5
  4852  07E0  3020               	movlw	low __pdataBANK2
  4853  07E1  0086               	movwf	6
  4854  07E2  3001               	movlw	high __pdataBANK2
  4855  07E3  0087               	movwf	7
  4856  07E4  3010               	movlw	16
  4857  07E5  3189  21B2  3187   	fcall	init_ram
  4858                           
  4859                           ; Clear objects allocated to BANK1
  4860  07E8  30A0               	movlw	low __pbssBANK1
  4861  07E9  0084               	movwf	4
  4862  07EA  3000               	movlw	high __pbssBANK1
  4863  07EB  0085               	movwf	5
  4864  07EC  3026               	movlw	38
  4865  07ED  3189  21AC  3187   	fcall	clear_ram0
  4866                           
  4867                           ; Clear objects allocated to BANK2
  4868  07F0  0022               	movlb	2	; select bank2
  4869  07F1  01B0               	clrf	__pbssBANK2& (0+127)
  4870  07F2  01B1               	clrf	(__pbssBANK2+1)& (0+127)
  4871  07F3  01B2               	clrf	(__pbssBANK2+2)& (0+127)
  4872  07F4  01B3               	clrf	(__pbssBANK2+3)& (0+127)
  4873  07F5  01B4               	clrf	(__pbssBANK2+4)& (0+127)
  4874                           
  4875                           ; Clear objects allocated to BANK3
  4876  07F6  30A0               	movlw	low __pbssBANK3
  4877  07F7  0084               	movwf	4
  4878  07F8  3001               	movlw	high __pbssBANK3
  4879  07F9  0085               	movwf	5
  4880  07FA  3050               	movlw	80
  4881  07FB  3189  21AC         	fcall	clear_ram0
  4882  07FD                     end_of_initialization:	
  4883                           ;End of C runtime variable initialization code
  4884                           
  4885  07FD                     __end_of__initialization:	
  4886  07FD  0020               	movlb	0
  4887  07FE  3186  2E76         	ljmp	_main	;jump to C main() function
  4888                           
  4889                           	psect	bssBANK1
  4890  00A0                     __pbssBANK1:	
  4891  00A0                     _totals:	
  4892  00A0                     	ds	8
  4893  00A8                     main@F13660:	
  4894  00A8                     	ds	4
  4895  00AC                     _Kd:	
  4896  00AC                     	ds	2
  4897  00AE                     _Result:	
  4898  00AE                     	ds	2
  4899  00B0                     _derivativeValue:	
  4900  00B0                     	ds	2
  4901  00B2                     _errno:	
  4902  00B2                     	ds	2
  4903  00B4                     _error:	
  4904  00B4                     	ds	2
  4905  00B6                     _errorValue:	
  4906  00B6                     	ds	2
  4907  00B8                     _lastSign:	
  4908  00B8                     	ds	2
  4909  00BA                     _pidCount:	
  4910  00BA                     	ds	2
  4911  00BC                     _pidIntegrated:	
  4912  00BC                     	ds	2
  4913  00BE                     _pidMinOutput:	
  4914  00BE                     	ds	2
  4915  00C0                     _pidPrevError:	
  4916  00C0                     	ds	2
  4917  00C2                     _sampleIndex:	
  4918  00C2                     	ds	2
  4919  00C4                     _signPositive:	
  4920  00C4                     	ds	2
  4921                           
  4922                           	psect	dataBANK1
  4923  00E4                     __pdataBANK1:	
  4924  00E4                     _channels:	
  4925  00E4                     	ds	4
  4926  00E8                     _Ki:	
  4927  00E8                     	ds	2
  4928  00EA                     _Kp:	
  4929  00EA                     	ds	2
  4930  00EC                     _pidMaxOutput:	
  4931  00EC                     	ds	2
  4932                           
  4933                           	psect	bssBANK2
  4934  0130                     __pbssBANK2:	
  4935  0130                     LCD_Write_Int@F13690:	
  4936  0130                     	ds	5
  4937                           
  4938                           	psect	dataBANK2
  4939  0120                     __pdataBANK2:	
  4940  0120                     ___cgram:	
  4941  0120                     	ds	16
  4942                           
  4943                           	psect	bssBANK3
  4944  01A0                     __pbssBANK3:	
  4945  01A0                     _samples:	
  4946  01A0                     	ds	80
  4947                           
  4948                           	psect	inittext
  4949  09B2                     init_ram:	
  4950  09B2  00FE               	movwf	126
  4951  09B3                     initloop:	
  4952  09B3  0012               	moviw fsr0++
  4953  09B4  001E               	movwi fsr1++
  4954  09B5  0BFE               	decfsz	126,f
  4955  09B6  29B3               	goto	initloop
  4956  09B7  3400               	retlw	0
  4957                           
  4958                           	psect	clrtext
  4959  09AC                     clear_ram0:	
  4960                           ;	Called with FSR0 containing the base address, and
  4961                           ;	WREG with the size to clear
  4962                           
  4963  09AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  4964  09AD                     clrloop0:	
  4965  09AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  4966  09AE  3101               	addfsr 0,1
  4967  09AF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4968  09B0  29AD               	goto	clrloop0	;have we reached the end yet?
  4969  09B1  3400               	retlw	0	;all done for this memory range, return
  4970                           
  4971                           	psect	cstackBANK1
  4972  00C6                     __pcstackBANK1:	
  4973  00C6                     ??___fttol:	
  4974                           
  4975                           ; 1 bytes @ 0x0
  4976  00C6                     	ds	4
  4977  00CA                     ___fttol@sign1:	
  4978                           
  4979                           ; 1 bytes @ 0x4
  4980  00CA                     	ds	1
  4981  00CB                     ___fttol@lval:	
  4982                           
  4983                           ; 4 bytes @ 0x5
  4984  00CB                     	ds	4
  4985  00CF                     ___fttol@exp1:	
  4986                           
  4987                           ; 1 bytes @ 0x9
  4988  00CF                     	ds	1
  4989  00D0                     main@bCount:	
  4990                           
  4991                           ; 2 bytes @ 0xA
  4992  00D0                     	ds	2
  4993  00D2                     main@x:	
  4994                           
  4995                           ; 1 bytes @ 0xC
  4996  00D2                     	ds	1
  4997  00D3                     main@choice:	
  4998                           
  4999                           ; 1 bytes @ 0xD
  5000  00D3                     	ds	1
  5001  00D4                     main@C_or_F:	
  5002                           
  5003                           ; 1 bytes @ 0xE
  5004  00D4                     	ds	1
  5005  00D5                     main@startDelay:	
  5006                           
  5007                           ; 1 bytes @ 0xF
  5008  00D5                     	ds	1
  5009  00D6                     main@resetDelay:	
  5010                           
  5011                           ; 1 bytes @ 0x10
  5012  00D6                     	ds	1
  5013  00D7                     main@tPadCount:	
  5014                           
  5015                           ; 1 bytes @ 0x11
  5016  00D7                     	ds	1
  5017  00D8                     main@loop:	
  5018                           
  5019                           ; 1 bytes @ 0x12
  5020  00D8                     	ds	1
  5021  00D9                     main@dutyCycle7:	
  5022                           
  5023                           ; 2 bytes @ 0x13
  5024  00D9                     	ds	2
  5025  00DB                     main@pidPeriodCounter:	
  5026                           
  5027                           ; 2 bytes @ 0x15
  5028  00DB                     	ds	2
  5029  00DD                     main@dutyCycle6:	
  5030                           
  5031                           ; 2 bytes @ 0x17
  5032  00DD                     	ds	2
  5033  00DF                     main@analogs:	
  5034                           
  5035                           ; 4 bytes @ 0x19
  5036  00DF                     	ds	4
  5037  00E3                     main@j:	
  5038                           
  5039                           ; 1 bytes @ 0x1D
  5040  00E3                     	ds	1
  5041                           
  5042                           	psect	cstackCOMMON
  5043  0070                     __pcstackCOMMON:	
  5044  0070                     ?___ftge:	
  5045  0070                     ?_SYSTEM_Initialize:	
  5046                           ; 1 bit 
  5047                           
  5048  0070                     ?_PWM7_LoadDutyValue:	
  5049                           ; 1 bytes @ 0x0
  5050                           
  5051  0070                     ?_LCD_Clear:	
  5052                           ; 1 bytes @ 0x0
  5053                           
  5054  0070                     ?_LCD_Write_Char:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0070                     ?_LCD_Cmd:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0070                     ?_OSCILLATOR_Initialize:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0070                     ??_OSCILLATOR_Initialize:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066  0070                     ?_TMR2_Initialize:	
  5067                           ; 1 bytes @ 0x0
  5068                           
  5069  0070                     ??_TMR2_Initialize:	
  5070                           ; 1 bytes @ 0x0
  5071                           
  5072  0070                     ?_main:	
  5073                           ; 1 bytes @ 0x0
  5074                           
  5075  0070                     ?_ADCC_Initialize:	
  5076                           ; 1 bytes @ 0x0
  5077                           
  5078  0070                     ??_ADCC_Initialize:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0070                     ?_InitCustomChars:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0070                     ?_LCD_Port:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0070                     ??_LCD_Port:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0070                     ?_LCD_Init:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0070                     ?_PIN_MANAGER_Initialize:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0070                     ??_PIN_MANAGER_Initialize:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0070                     ?_PWM_Initialize:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0070                     ??_PWM_Initialize:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0070                     ?___bmul:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0070                     ?_ADCRead:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0070                     ?___wmul:	
  5112                           ; 2 bytes @ 0x0
  5113                           
  5114  0070                     ?___awdiv:	
  5115                           ; 2 bytes @ 0x0
  5116                           
  5117  0070                     ?___awmod:	
  5118                           ; 2 bytes @ 0x0
  5119                           
  5120  0070                     ?___ftpack:	
  5121                           ; 2 bytes @ 0x0
  5122                           
  5123  0070                     ?_frexp:	
  5124                           ; 3 bytes @ 0x0
  5125                           
  5126  0070                     ?___aldiv:	
  5127                           ; 3 bytes @ 0x0
  5128                           
  5129  0070                     LCD_Port@a:	
  5130                           ; 4 bytes @ 0x0
  5131                           
  5132  0070                     PIN_MANAGER_Initialize@state:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0070                     ___bmul@multiplicand:	
  5136                           ; 1 bytes @ 0x0
  5137                           
  5138  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5139                           ; 1 bytes @ 0x0
  5140                           
  5141  0070                     ___wmul@multiplier:	
  5142                           ; 2 bytes @ 0x0
  5143                           
  5144  0070                     ___awdiv@divisor:	
  5145                           ; 2 bytes @ 0x0
  5146                           
  5147  0070                     ___awmod@divisor:	
  5148                           ; 2 bytes @ 0x0
  5149                           
  5150  0070                     ___ftpack@arg:	
  5151                           ; 2 bytes @ 0x0
  5152                           
  5153  0070                     ___ftge@ff1:	
  5154                           ; 3 bytes @ 0x0
  5155                           
  5156  0070                     frexp@value:	
  5157                           ; 3 bytes @ 0x0
  5158                           
  5159  0070                     ___aldiv@divisor:	
  5160                           ; 3 bytes @ 0x0
  5161                           
  5162                           
  5163                           ; 4 bytes @ 0x0
  5164  0070                     	ds	1
  5165  0071                     ??_LCD_Write_Char:	
  5166  0071                     ??_LCD_Cmd:	
  5167                           ; 1 bytes @ 0x1
  5168                           
  5169  0071                     ??___bmul:	
  5170                           ; 1 bytes @ 0x1
  5171                           
  5172                           
  5173                           ; 1 bytes @ 0x1
  5174  0071                     	ds	1
  5175  0072                     ??_PWM7_LoadDutyValue:	
  5176  0072                     LCD_Write_Char@temp:	
  5177                           ; 1 bytes @ 0x2
  5178                           
  5179  0072                     ___bmul@product:	
  5180                           ; 1 bytes @ 0x2
  5181                           
  5182  0072                     ___wmul@multiplicand:	
  5183                           ; 1 bytes @ 0x2
  5184                           
  5185  0072                     ___awdiv@dividend:	
  5186                           ; 2 bytes @ 0x2
  5187                           
  5188  0072                     ___awmod@dividend:	
  5189                           ; 2 bytes @ 0x2
  5190                           
  5191                           
  5192                           ; 2 bytes @ 0x2
  5193  0072                     	ds	1
  5194  0073                     ??_ADCRead:	
  5195  0073                     ADCRead@channel:	
  5196                           ; 1 bytes @ 0x3
  5197                           
  5198  0073                     LCD_Cmd@a:	
  5199                           ; 1 bytes @ 0x3
  5200                           
  5201  0073                     LCD_Write_Char@y:	
  5202                           ; 1 bytes @ 0x3
  5203                           
  5204  0073                     ___bmul@multiplier:	
  5205                           ; 1 bytes @ 0x3
  5206                           
  5207  0073                     ___ftpack@exp:	
  5208                           ; 1 bytes @ 0x3
  5209                           
  5210  0073                     frexp@eptr:	
  5211                           ; 1 bytes @ 0x3
  5212                           
  5213  0073                     ___ftge@ff2:	
  5214                           ; 1 bytes @ 0x3
  5215                           
  5216                           
  5217                           ; 3 bytes @ 0x3
  5218  0073                     	ds	1
  5219  0074                     ??_LCD_Clear:	
  5220  0074                     ?_LCD_Set_Cursor:	
  5221                           ; 1 bytes @ 0x4
  5222                           
  5223  0074                     ??_frexp:	
  5224                           ; 1 bytes @ 0x4
  5225                           
  5226  0074                     ??_LCD_Init:	
  5227                           ; 1 bytes @ 0x4
  5228                           
  5229  0074                     ??___wmul:	
  5230                           ; 1 bytes @ 0x4
  5231                           
  5232  0074                     ??___awdiv:	
  5233                           ; 1 bytes @ 0x4
  5234                           
  5235  0074                     ??___awmod:	
  5236                           ; 1 bytes @ 0x4
  5237                           
  5238  0074                     LCD_Set_Cursor@y:	
  5239                           ; 1 bytes @ 0x4
  5240                           
  5241  0074                     LCD_Write_Char@a:	
  5242                           ; 1 bytes @ 0x4
  5243                           
  5244  0074                     ___ftpack@sign:	
  5245                           ; 1 bytes @ 0x4
  5246                           
  5247  0074                     ___wmul@product:	
  5248                           ; 1 bytes @ 0x4
  5249                           
  5250  0074                     ___aldiv@dividend:	
  5251                           ; 2 bytes @ 0x4
  5252                           
  5253                           
  5254                           ; 4 bytes @ 0x4
  5255  0074                     	ds	1
  5256  0075                     ??_LCD_Set_Cursor:	
  5257  0075                     ?_LCD_Write_String:	
  5258                           ; 1 bytes @ 0x5
  5259                           
  5260  0075                     ??___ftpack:	
  5261                           ; 1 bytes @ 0x5
  5262                           
  5263  0075                     ??_InitCustomChars:	
  5264                           ; 1 bytes @ 0x5
  5265                           
  5266  0075                     ___awdiv@counter:	
  5267                           ; 1 bytes @ 0x5
  5268                           
  5269  0075                     ___awmod@counter:	
  5270                           ; 1 bytes @ 0x5
  5271                           
  5272  0075                     LCD_Write_String@a:	
  5273                           ; 1 bytes @ 0x5
  5274                           
  5275                           
  5276                           ; 2 bytes @ 0x5
  5277  0075                     	ds	1
  5278  0076                     ??___ftge:	
  5279  0076                     InitCustomChars@i:	
  5280                           ; 1 bytes @ 0x6
  5281                           
  5282  0076                     ___awdiv@sign:	
  5283                           ; 1 bytes @ 0x6
  5284                           
  5285  0076                     ___awmod@sign:	
  5286                           ; 1 bytes @ 0x6
  5287                           
  5288                           
  5289                           ; 1 bytes @ 0x6
  5290  0076                     	ds	1
  5291  0077                     ??_LCD_Write_String:	
  5292  0077                     LCD_Set_Cursor@x:	
  5293                           ; 1 bytes @ 0x7
  5294                           
  5295  0077                     LCD_Init@style:	
  5296                           ; 1 bytes @ 0x7
  5297                           
  5298  0077                     ___awdiv@quotient:	
  5299                           ; 1 bytes @ 0x7
  5300                           
  5301                           
  5302                           ; 2 bytes @ 0x7
  5303  0077                     	ds	1
  5304  0078                     ??_SYSTEM_Initialize:	
  5305  0078                     ??___aldiv:	
  5306                           ; 1 bytes @ 0x8
  5307                           
  5308  0078                     ?___awtoft:	
  5309                           ; 1 bytes @ 0x8
  5310                           
  5311  0078                     LCD_Set_Cursor@z:	
  5312                           ; 3 bytes @ 0x8
  5313                           
  5314  0078                     LCD_Write_String@i:	
  5315                           ; 1 bytes @ 0x8
  5316                           
  5317  0078                     ___awtoft@c:	
  5318                           ; 2 bytes @ 0x8
  5319                           
  5320                           
  5321                           ; 2 bytes @ 0x8
  5322  0078                     	ds	1
  5323  0079                     ?_LCD_Write_Int:	
  5324  0079                     LCD_Set_Cursor@w:	
  5325                           ; 1 bytes @ 0x9
  5326                           
  5327  0079                     readAnalog@analog_channel:	
  5328                           ; 1 bytes @ 0x9
  5329                           
  5330  0079                     LCD_Write_Int@value:	
  5331                           ; 2 bytes @ 0x9
  5332                           
  5333                           
  5334                           ; 2 bytes @ 0x9
  5335  0079                     	ds	1
  5336  007A                     LCD_Set_Cursor@temp:	
  5337                           
  5338                           ; 1 bytes @ 0xA
  5339  007A                     	ds	1
  5340  007B                     ??___awtoft:	
  5341  007B                     LCD_Write_Int@fieldLength:	
  5342                           ; 1 bytes @ 0xB
  5343                           
  5344  007B                     readAnalog@value:	
  5345                           ; 1 bytes @ 0xB
  5346                           
  5347                           
  5348                           ; 2 bytes @ 0xB
  5349  007B                     	ds	1
  5350  007C                     LCD_Write_Int@numPlaces:	
  5351                           
  5352                           ; 1 bytes @ 0xC
  5353  007C                     	ds	1
  5354  007D                     LCD_Write_Int@sign:	
  5355  007D                     ___awtoft@sign:	
  5356                           ; 1 bytes @ 0xD
  5357                           
  5358                           
  5359                           ; 1 bytes @ 0xD
  5360  007D                     	ds	1
  5361  007E                     ??_tempCalc:	
  5362  007E                     ??_eval_poly:	
  5363                           ; 1 bytes @ 0xE
  5364                           
  5365  007E                     ??___ftsub:	
  5366                           ; 1 bytes @ 0xE
  5367                           
  5368                           
  5369                           	psect	cstackBANK0
  5370  0020                     __pcstackBANK0:	
  5371                           ; 1 bytes @ 0xE
  5372                           
  5373  0020                     ??_LCD_Write_Int:	
  5374  0020                     ?_PID_Calculate:	
  5375                           ; 1 bytes @ 0x0
  5376                           
  5377  0020                     ?___ftmul:	
  5378                           ; 3 bytes @ 0x0
  5379                           
  5380  0020                     ___aldiv@counter:	
  5381                           ; 3 bytes @ 0x0
  5382                           
  5383  0020                     PID_Calculate@setpoint:	
  5384                           ; 1 bytes @ 0x0
  5385                           
  5386  0020                     ___ftmul@f1:	
  5387                           ; 2 bytes @ 0x0
  5388                           
  5389                           
  5390                           ; 3 bytes @ 0x0
  5391  0020                     	ds	1
  5392  0021                     ___aldiv@sign:	
  5393                           
  5394                           ; 1 bytes @ 0x1
  5395  0021                     	ds	1
  5396  0022                     PID_Calculate@temp:	
  5397  0022                     ___aldiv@quotient:	
  5398                           ; 2 bytes @ 0x2
  5399                           
  5400                           
  5401                           ; 4 bytes @ 0x2
  5402  0022                     	ds	1
  5403  0023                     ___ftmul@f2:	
  5404                           
  5405                           ; 3 bytes @ 0x3
  5406  0023                     	ds	1
  5407  0024                     ??_PID_Calculate:	
  5408                           
  5409                           ; 1 bytes @ 0x4
  5410  0024                     	ds	1
  5411  0025                     LCD_Write_Int@str:	
  5412                           
  5413                           ; 5 bytes @ 0x5
  5414  0025                     	ds	1
  5415  0026                     ??___ftmul:	
  5416  0026                     ?_readAnalog:	
  5417                           ; 1 bytes @ 0x6
  5418                           
  5419  0026                     readAnalog@channel:	
  5420                           ; 2 bytes @ 0x6
  5421                           
  5422                           
  5423                           ; 2 bytes @ 0x6
  5424  0026                     	ds	2
  5425  0028                     ??_readAnalog:	
  5426                           
  5427                           ; 1 bytes @ 0x8
  5428  0028                     	ds	2
  5429  002A                     ___ftmul@exp:	
  5430  002A                     LCD_Write_Int@j:	
  5431                           ; 1 bytes @ 0xA
  5432                           
  5433                           
  5434                           ; 2 bytes @ 0xA
  5435  002A                     	ds	1
  5436  002B                     ___ftmul@f3_as_product:	
  5437                           
  5438                           ; 3 bytes @ 0xB
  5439  002B                     	ds	1
  5440  002C                     LCD_Write_Int@i:	
  5441                           
  5442                           ; 2 bytes @ 0xC
  5443  002C                     	ds	2
  5444  002E                     ___ftmul@cntr:	
  5445                           
  5446                           ; 1 bytes @ 0xE
  5447  002E                     	ds	1
  5448  002F                     ___ftmul@sign:	
  5449                           
  5450                           ; 1 bytes @ 0xF
  5451  002F                     	ds	1
  5452  0030                     ?___ftdiv:	
  5453  0030                     ___ftdiv@f2:	
  5454                           ; 3 bytes @ 0x10
  5455                           
  5456                           
  5457                           ; 3 bytes @ 0x10
  5458  0030                     	ds	3
  5459  0033                     ___ftdiv@f1:	
  5460                           
  5461                           ; 3 bytes @ 0x13
  5462  0033                     	ds	3
  5463  0036                     ??___ftdiv:	
  5464                           
  5465                           ; 1 bytes @ 0x16
  5466  0036                     	ds	4
  5467  003A                     ___ftdiv@cntr:	
  5468                           
  5469                           ; 1 bytes @ 0x1A
  5470  003A                     	ds	1
  5471  003B                     ___ftdiv@f3:	
  5472                           
  5473                           ; 3 bytes @ 0x1B
  5474  003B                     	ds	3
  5475  003E                     ___ftdiv@exp:	
  5476                           
  5477                           ; 1 bytes @ 0x1E
  5478  003E                     	ds	1
  5479  003F                     ___ftdiv@sign:	
  5480                           
  5481                           ; 1 bytes @ 0x1F
  5482  003F                     	ds	1
  5483  0040                     ?___ftadd:	
  5484  0040                     ___ftadd@f1:	
  5485                           ; 3 bytes @ 0x20
  5486                           
  5487                           
  5488                           ; 3 bytes @ 0x20
  5489  0040                     	ds	3
  5490  0043                     ___ftadd@f2:	
  5491                           
  5492                           ; 3 bytes @ 0x23
  5493  0043                     	ds	3
  5494  0046                     ??___ftadd:	
  5495                           
  5496                           ; 1 bytes @ 0x26
  5497  0046                     	ds	4
  5498  004A                     ___ftadd@sign:	
  5499                           
  5500                           ; 1 bytes @ 0x2A
  5501  004A                     	ds	1
  5502  004B                     ___ftadd@exp2:	
  5503                           
  5504                           ; 1 bytes @ 0x2B
  5505  004B                     	ds	1
  5506  004C                     ___ftadd@exp1:	
  5507                           
  5508                           ; 1 bytes @ 0x2C
  5509  004C                     	ds	1
  5510  004D                     ?_eval_poly:	
  5511  004D                     ?___ftsub:	
  5512                           ; 3 bytes @ 0x2D
  5513                           
  5514  004D                     ___ftsub@f2:	
  5515                           ; 3 bytes @ 0x2D
  5516                           
  5517  004D                     eval_poly@x:	
  5518                           ; 3 bytes @ 0x2D
  5519                           
  5520                           
  5521                           ; 3 bytes @ 0x2D
  5522  004D                     	ds	3
  5523  0050                     eval_poly@d:	
  5524  0050                     ___ftsub@f1:	
  5525                           ; 2 bytes @ 0x30
  5526                           
  5527                           
  5528                           ; 3 bytes @ 0x30
  5529  0050                     	ds	2
  5530  0052                     eval_poly@n:	
  5531                           
  5532                           ; 2 bytes @ 0x32
  5533  0052                     	ds	2
  5534  0054                     eval_poly@res:	
  5535                           
  5536                           ; 3 bytes @ 0x34
  5537  0054                     	ds	3
  5538  0057                     ?_log:	
  5539  0057                     log@x:	
  5540                           ; 3 bytes @ 0x37
  5541                           
  5542                           
  5543                           ; 3 bytes @ 0x37
  5544  0057                     	ds	3
  5545  005A                     ??_log:	
  5546                           
  5547                           ; 1 bytes @ 0x3A
  5548  005A                     	ds	1
  5549  005B                     log@exponent:	
  5550                           
  5551                           ; 2 bytes @ 0x3B
  5552  005B                     	ds	2
  5553  005D                     ?_tempCalc:	
  5554  005D                     tempCalc@analogValue:	
  5555                           ; 3 bytes @ 0x3D
  5556                           
  5557                           
  5558                           ; 2 bytes @ 0x3D
  5559  005D                     	ds	3
  5560  0060                     tempCalc@R:	
  5561                           
  5562                           ; 3 bytes @ 0x40
  5563  0060                     	ds	3
  5564  0063                     _tempCalc$984:	
  5565                           
  5566                           ; 3 bytes @ 0x43
  5567  0063                     	ds	3
  5568  0066                     tempCalc@steinhart:	
  5569                           
  5570                           ; 3 bytes @ 0x46
  5571  0066                     	ds	3
  5572  0069                     ?___fttol:	
  5573  0069                     ___fttol@f1:	
  5574                           ; 4 bytes @ 0x49
  5575                           
  5576                           
  5577                           ; 3 bytes @ 0x49
  5578  0069                     	ds	4
  5579  006D                     ??_main:	
  5580                           
  5581                           ; 1 bytes @ 0x4D
  5582  006D                     	ds	3
  5583                           
  5584                           	psect	maintext
  5585  0676                     __pmaintext:	
  5586 ;;
  5587 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5588 ;;
  5589 ;; *************** function _main *****************
  5590 ;; Defined at:
  5591 ;;		line 20 in file "main.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  analogs         4   25[BANK1 ] unsigned int [2]
  5596 ;;  displayTemp2    3    0        float 
  5597 ;;  displayTemp     3    0        float 
  5598 ;;  dutyCycle6      2   23[BANK1 ] unsigned int 
  5599 ;;  pidPeriodCou    2   21[BANK1 ] int 
  5600 ;;  dutyCycle7      2   19[BANK1 ] unsigned int 
  5601 ;;  bCount          2   10[BANK1 ] unsigned int 
  5602 ;;  j               1   29[BANK1 ] unsigned char 
  5603 ;;  loop            1   18[BANK1 ] unsigned char 
  5604 ;;  tPadCount       1   17[BANK1 ] unsigned char 
  5605 ;;  resetDelay      1   16[BANK1 ] unsigned char 
  5606 ;;  startDelay      1   15[BANK1 ] unsigned char 
  5607 ;;  C_or_F          1   14[BANK1 ] unsigned char 
  5608 ;;  choice          1   13[BANK1 ] unsigned char 
  5609 ;;  x               1   12[BANK1 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : B1F/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Totals:         0       3      20       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;Total ram usage:       23 bytes
  5624 ;; Hardware stack levels required when called:    5
  5625 ;; This function calls:
  5626 ;;		_LCD_Clear
  5627 ;;		_LCD_Set_Cursor
  5628 ;;		_LCD_Write_Char
  5629 ;;		_LCD_Write_Int
  5630 ;;		_LCD_Write_String
  5631 ;;		_PID_Calculate
  5632 ;;		_PWM7_LoadDutyValue
  5633 ;;		_SYSTEM_Initialize
  5634 ;;		___fttol
  5635 ;;		_readAnalog
  5636 ;;		_tempCalc
  5637 ;; This function is called by:
  5638 ;;		Startup code after reset
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function _main
  5644  0676                     _main:	
  5645                           
  5646                           ;main.c: 22: SYSTEM_Initialize();
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5650  0676  318C  240D  3186   	fcall	_SYSTEM_Initialize
  5651                           
  5652                           ;main.c: 24: uint16_t analogs[2] = {0};
  5653  0679  0021               	movlb	1	; select bank1
  5654  067A  082B               	movf	(main@F13660+3)^(0+128),w
  5655  067B  00E2               	movwf	(main@analogs+3)^(0+128)
  5656  067C  082A               	movf	(main@F13660+2)^(0+128),w
  5657  067D  00E1               	movwf	(main@analogs+2)^(0+128)
  5658  067E  0829               	movf	(main@F13660+1)^(0+128),w
  5659  067F  00E0               	movwf	(main@analogs+1)^(0+128)
  5660  0680  0828               	movf	main@F13660^(0+128),w
  5661  0681  00DF               	movwf	main@analogs^(0+128)
  5662                           
  5663                           ;main.c: 26: float displayTemp, displayTemp2;
  5664                           ;main.c: 28: char j = 0;
  5665  0682  01E3               	clrf	main@j^(0+128)
  5666                           
  5667                           ;main.c: 30: char x = 0;
  5668  0683  01D2               	clrf	main@x^(0+128)
  5669                           
  5670                           ;main.c: 32: int pidPeriodCounter = 0;
  5671  0684  01DB               	clrf	main@pidPeriodCounter^(0+128)
  5672  0685  01DC               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5673                           
  5674                           ;main.c: 34: extern int pidMaxOutput;
  5675                           ;main.c: 36: unsigned char loop = 64;
  5676  0686  3040               	movlw	64
  5677  0687  0020               	movlb	0	; select bank0
  5678  0688  00ED               	movwf	??_main
  5679  0689  086D               	movf	??_main,w
  5680  068A  0021               	movlb	1	; select bank1
  5681  068B  00D8               	movwf	main@loop^(0+128)
  5682                           
  5683                           ;main.c: 38: char choice = 2;
  5684  068C  3002               	movlw	2
  5685  068D  0020               	movlb	0	; select bank0
  5686  068E  00ED               	movwf	??_main
  5687  068F  086D               	movf	??_main,w
  5688  0690  0021               	movlb	1	; select bank1
  5689  0691  00D3               	movwf	main@choice^(0+128)
  5690                           
  5691                           ;main.c: 40: char C_or_F = 1;
  5692  0692  01D4               	clrf	main@C_or_F^(0+128)
  5693  0693  0AD4               	incf	main@C_or_F^(0+128),f
  5694                           
  5695                           ;main.c: 42: unsigned int bCount = 0;
  5696  0694  01D0               	clrf	main@bCount^(0+128)
  5697  0695  01D1               	clrf	(main@bCount+1)^(0+128)
  5698                           
  5699                           ;main.c: 44: unsigned char startDelay = 0;
  5700  0696  01D5               	clrf	main@startDelay^(0+128)
  5701                           
  5702                           ;main.c: 46: unsigned char resetDelay = 0;
  5703  0697  01D6               	clrf	main@resetDelay^(0+128)
  5704                           
  5705                           ;main.c: 48: unsigned char tPadCount = 10;
  5706  0698  300A               	movlw	10
  5707  0699  0020               	movlb	0	; select bank0
  5708  069A  00ED               	movwf	??_main
  5709  069B  086D               	movf	??_main,w
  5710  069C  0021               	movlb	1	; select bank1
  5711  069D  00D7               	movwf	main@tPadCount^(0+128)
  5712                           
  5713                           ;main.c: 51: uint16_t dutyCycle6 = 523;
  5714  069E  300B               	movlw	11
  5715  069F  00DD               	movwf	main@dutyCycle6^(0+128)
  5716  06A0  3002               	movlw	2
  5717  06A1  00DE               	movwf	(main@dutyCycle6^(0+128)+1)
  5718                           
  5719                           ;main.c: 53: uint16_t dutyCycle7 = 523;
  5720  06A2  300B               	movlw	11
  5721  06A3  00D9               	movwf	main@dutyCycle7^(0+128)
  5722  06A4  3002               	movlw	2
  5723  06A5  00DA               	movwf	(main@dutyCycle7^(0+128)+1)
  5724                           
  5725                           ;main.c: 57: PWM7_LoadDutyValue(dutyCycle7);
  5726  06A6  085A               	movf	(main@dutyCycle7+1)^(0+128),w
  5727  06A7  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5728  06A8  0859               	movf	main@dutyCycle7^(0+128),w
  5729  06A9  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5730  06AA  318A  221B  3186   	fcall	_PWM7_LoadDutyValue
  5731                           
  5732                           ;main.c: 59: _delay((unsigned long)((300)*(32000000/4000.0)));
  5733  06AD  300D               	movlw	13
  5734  06AE  0020               	movlb	0	; select bank0
  5735  06AF  00EF               	movwf	??_main+2
  5736  06B0  302D               	movlw	45
  5737  06B1  00EE               	movwf	??_main+1
  5738  06B2  30E2               	movlw	226
  5739  06B3  00ED               	movwf	??_main
  5740  06B4                     u3157:	
  5741  06B4  0BED               	decfsz	??_main,f
  5742  06B5  2EB4               	goto	u3157
  5743  06B6  0BEE               	decfsz	??_main+1,f
  5744  06B7  2EB4               	goto	u3157
  5745  06B8  0BEF               	decfsz	??_main+2,f
  5746  06B9  2EB4               	goto	u3157
  5747  06BA  3200               	nop2
  5748                           
  5749                           ;main.c: 61: LCD_Clear();
  5750  06BB  3189  21B8  3186   	fcall	_LCD_Clear
  5751  06BE                     l2686:	
  5752                           ;main.c: 64: while (1)
  5753                           
  5754                           
  5755                           ;main.c: 65: {
  5756                           ;main.c: 66: pidPeriodCounter+=1;
  5757  06BE  3001               	movlw	1
  5758  06BF  0021               	movlb	1	; select bank1
  5759  06C0  07DB               	addwf	main@pidPeriodCounter^(0+128),f
  5760  06C1  3000               	movlw	0
  5761  06C2  3DDC               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  5762                           
  5763                           ;main.c: 68: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  5764  06C3  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  5765  06C4  3A80               	xorlw	128
  5766  06C5  0020               	movlb	0	; select bank0
  5767  06C6  00ED               	movwf	??_main
  5768  06C7  0021               	movlb	1	; select bank1
  5769  06C8  085C               	movf	(main@pidPeriodCounter+1)^(0+128),w
  5770  06C9  3A80               	xorlw	128
  5771  06CA  0020               	movlb	0	; select bank0
  5772  06CB  026D               	subwf	??_main,w
  5773  06CC  1D03               	skipz
  5774  06CD  2ED1               	goto	u3095
  5775  06CE  0021               	movlb	1	; select bank1
  5776  06CF  085B               	movf	main@pidPeriodCounter^(0+128),w
  5777  06D0  026C               	subwf	_pidMaxOutput^(0+128),w
  5778  06D1                     u3095:	
  5779  06D1  1803               	skipnc
  5780  06D2  2ED6               	goto	l2692
  5781  06D3  0021               	movlb	1	; select bank1
  5782  06D4  01DB               	clrf	main@pidPeriodCounter^(0+128)
  5783  06D5  01DC               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5784  06D6                     l2692:	
  5785                           
  5786                           ;main.c: 70: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  5787  06D6  0021               	movlb	1	; select bank1
  5788  06D7  085E               	movf	(main@dutyCycle6+1)^(0+128),w
  5789  06D8  025C               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  5790  06D9  1D03               	skipz
  5791  06DA  2EDD               	goto	u3105
  5792  06DB  085D               	movf	main@dutyCycle6^(0+128),w
  5793  06DC  025B               	subwf	main@pidPeriodCounter^(0+128),w
  5794  06DD                     u3105:	
  5795  06DD  1803               	skipnc
  5796  06DE  2EE2               	goto	l33
  5797  06DF  0020               	movlb	0	; select bank0
  5798  06E0  1518               	bsf	24,2	;volatile
  5799  06E1  2EE4               	goto	l2696
  5800  06E2                     l33:	
  5801                           
  5802                           ;main.c: 71: else LATC2=0;
  5803  06E2  0020               	movlb	0	; select bank0
  5804  06E3  1118               	bcf	24,2	;volatile
  5805  06E4                     l2696:	
  5806                           
  5807                           ;main.c: 73: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  5808  06E4  0021               	movlb	1	; select bank1
  5809  06E5  01E3               	clrf	main@j^(0+128)
  5810  06E6  3002               	movlw	2
  5811  06E7  0263               	subwf	main@j^(0+128),w
  5812  06E8  1803               	btfsc	3,0
  5813  06E9  2F08               	goto	l2708
  5814  06EA                     l2702:	
  5815  06EA  0863               	movf	main@j^(0+128),w
  5816  06EB  0020               	movlb	0	; select bank0
  5817  06EC  00ED               	movwf	??_main
  5818  06ED  01EE               	clrf	??_main+1
  5819  06EE  086D               	movf	??_main,w
  5820  06EF  00A6               	movwf	readAnalog@channel
  5821  06F0  086E               	movf	??_main+1,w
  5822  06F1  00A7               	movwf	readAnalog@channel+1
  5823  06F2  3185  255C  3186   	fcall	_readAnalog
  5824  06F5  0021               	movlb	1	; select bank1
  5825  06F6  3563               	lslf	main@j^(0+128),w
  5826  06F7  3EDF               	addlw	(low (main@analogs| 0))& (0+255)
  5827  06F8  0086               	movwf	6
  5828  06F9  0187               	clrf	7
  5829  06FA  0020               	movlb	0	; select bank0
  5830  06FB  0826               	movf	?_readAnalog,w
  5831  06FC  3FC0               	movwi [0]fsr1
  5832  06FD  0827               	movf	?_readAnalog+1,w
  5833  06FE  3FC1               	movwi [1]fsr1
  5834  06FF  3001               	movlw	1
  5835  0700  00ED               	movwf	??_main
  5836  0701  086D               	movf	??_main,w
  5837  0702  0021               	movlb	1	; select bank1
  5838  0703  07E3               	addwf	main@j^(0+128),f
  5839  0704  3002               	movlw	2
  5840  0705  0263               	subwf	main@j^(0+128),w
  5841  0706  1C03               	skipc
  5842  0707  2EEA               	goto	l2702
  5843  0708                     l2708:	
  5844                           
  5845                           ;main.c: 76: analogs[0]=tempCalc(analogs[0]);
  5846  0708  0860               	movf	(main@analogs+1)^(0+128),w
  5847  0709  0020               	movlb	0	; select bank0
  5848  070A  00DE               	movwf	tempCalc@analogValue+1
  5849  070B  0021               	movlb	1	; select bank1
  5850  070C  085F               	movf	main@analogs^(0+128),w
  5851  070D  0020               	movlb	0	; select bank0
  5852  070E  00DD               	movwf	tempCalc@analogValue
  5853  070F  3184  2447  3186   	fcall	_tempCalc
  5854  0712  0020               	movlb	0	; select bank0
  5855  0713  085D               	movf	?_tempCalc,w
  5856  0714  00E9               	movwf	___fttol@f1
  5857  0715  085E               	movf	?_tempCalc+1,w
  5858  0716  00EA               	movwf	___fttol@f1+1
  5859  0717  085F               	movf	?_tempCalc+2,w
  5860  0718  00EB               	movwf	___fttol@f1+2
  5861  0719  318E  26B2  3186   	fcall	___fttol
  5862  071C  0020               	movlb	0	; select bank0
  5863  071D  086A               	movf	?___fttol+1,w
  5864  071E  0021               	movlb	1	; select bank1
  5865  071F  00E0               	movwf	(main@analogs+1)^(0+128)
  5866  0720  0020               	movlb	0	; select bank0
  5867  0721  0869               	movf	?___fttol,w
  5868  0722  0021               	movlb	1	; select bank1
  5869  0723  00DF               	movwf	main@analogs^(0+128)
  5870                           
  5871                           ;main.c: 78: analogs[1]=tempCalc(analogs[1]);
  5872  0724  0862               	movf	((main@analogs+1)^(0+128)+2),w
  5873  0725  0020               	movlb	0	; select bank0
  5874  0726  00DE               	movwf	tempCalc@analogValue+1
  5875  0727  0021               	movlb	1	; select bank1
  5876  0728  0861               	movf	(main@analogs^(0+128)+2),w
  5877  0729  0020               	movlb	0	; select bank0
  5878  072A  00DD               	movwf	tempCalc@analogValue
  5879  072B  3184  2447  3186   	fcall	_tempCalc
  5880  072E  0020               	movlb	0	; select bank0
  5881  072F  085D               	movf	?_tempCalc,w
  5882  0730  00E9               	movwf	___fttol@f1
  5883  0731  085E               	movf	?_tempCalc+1,w
  5884  0732  00EA               	movwf	___fttol@f1+1
  5885  0733  085F               	movf	?_tempCalc+2,w
  5886  0734  00EB               	movwf	___fttol@f1+2
  5887  0735  318E  26B2  3186   	fcall	___fttol
  5888  0738  0020               	movlb	0	; select bank0
  5889  0739  086A               	movf	?___fttol+1,w
  5890  073A  0021               	movlb	1	; select bank1
  5891  073B  00E2               	movwf	((main@analogs+1)^(0+128)+2)
  5892  073C  0020               	movlb	0	; select bank0
  5893  073D  0869               	movf	?___fttol,w
  5894  073E  0021               	movlb	1	; select bank1
  5895  073F  00E1               	movwf	(main@analogs^(0+128)+2)
  5896                           
  5897                           ;main.c: 80: dutyCycle7=502;
  5898  0740  30F6               	movlw	246
  5899  0741  00D9               	movwf	main@dutyCycle7^(0+128)
  5900  0742  3001               	movlw	1
  5901  0743  00DA               	movwf	(main@dutyCycle7^(0+128)+1)
  5902                           
  5903                           ;main.c: 82: if(loop>253)
  5904  0744  30FE               	movlw	254
  5905  0745  0258               	subwf	main@loop^(0+128),w
  5906  0746  1C03               	skipc
  5907  0747  2FC9               	goto	l2740
  5908                           
  5909                           ;main.c: 83: {
  5910                           ;main.c: 86: PWM7_LoadDutyValue(dutyCycle7);
  5911  0748  085A               	movf	(main@dutyCycle7+1)^(0+128),w
  5912  0749  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5913  074A  0859               	movf	main@dutyCycle7^(0+128),w
  5914  074B  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5915  074C  318A  221B  3186   	fcall	_PWM7_LoadDutyValue
  5916                           
  5917                           ;main.c: 88: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  5918  074F  01F4               	clrf	LCD_Set_Cursor@y
  5919  0750  3000               	movlw	0
  5920  0751  318B  23CE  3186   	fcall	_LCD_Set_Cursor
  5921  0754  3024               	movlw	low (STR_1| (0+32768))
  5922  0755  00F5               	movwf	LCD_Write_String@a
  5923  0756  3090               	movlw	high (STR_1| (0+32768))
  5924  0757  00F6               	movwf	LCD_Write_String@a+1
  5925  0758  318A  2249  3186   	fcall	_LCD_Write_String
  5926                           
  5927                           ;main.c: 89: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  5928  075B  01F4               	clrf	LCD_Set_Cursor@y
  5929  075C  3005               	movlw	5
  5930  075D  318B  23CE  3186   	fcall	_LCD_Set_Cursor
  5931  0760  0021               	movlb	1	; select bank1
  5932  0761  0862               	movf	((main@analogs+1)^(0+128)+2),w
  5933  0762  00FA               	movwf	LCD_Write_Int@value+1
  5934  0763  0861               	movf	(main@analogs^(0+128)+2),w
  5935  0764  00F9               	movwf	LCD_Write_Int@value
  5936  0765  01FB               	clrf	LCD_Write_Int@fieldLength
  5937  0766  03FB               	decf	LCD_Write_Int@fieldLength,f
  5938  0767  01FC               	clrf	LCD_Write_Int@numPlaces
  5939  0768  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5940  0769  01FD               	clrf	LCD_Write_Int@sign
  5941  076A  3181  217C  3186   	fcall	_LCD_Write_Int
  5942                           
  5943                           ;main.c: 90: LCD_Write_Char(0);
  5944  076D  3000               	movlw	0
  5945  076E  318A  22FC  3186   	fcall	_LCD_Write_Char
  5946                           
  5947                           ;main.c: 91: LCD_Write_Char(70);
  5948  0771  3046               	movlw	70
  5949  0772  318A  22FC  3186   	fcall	_LCD_Write_Char
  5950                           
  5951                           ;main.c: 92: LCD_Write_Char(' ');
  5952  0775  3020               	movlw	32
  5953  0776  318A  22FC  3186   	fcall	_LCD_Write_Char
  5954                           
  5955                           ;main.c: 94: { LCD_Set_Cursor(0,1); LCD_Write_String("Ambient:");};
  5956  0779  01F4               	clrf	LCD_Set_Cursor@y
  5957  077A  0AF4               	incf	LCD_Set_Cursor@y,f
  5958  077B  3000               	movlw	0
  5959  077C  318B  23CE  3186   	fcall	_LCD_Set_Cursor
  5960  077F  301B               	movlw	low (STR_2| (0+32768))
  5961  0780  00F5               	movwf	LCD_Write_String@a
  5962  0781  3090               	movlw	high (STR_2| (0+32768))
  5963  0782  00F6               	movwf	LCD_Write_String@a+1
  5964  0783  318A  2249  3186   	fcall	_LCD_Write_String
  5965                           
  5966                           ;main.c: 95: LCD_Write_Char(' ');
  5967  0786  3020               	movlw	32
  5968  0787  318A  22FC  3186   	fcall	_LCD_Write_Char
  5969                           
  5970                           ;main.c: 96: LCD_Write_Int(dutyCycle6,5,1,0);
  5971  078A  0021               	movlb	1	; select bank1
  5972  078B  085E               	movf	(main@dutyCycle6+1)^(0+128),w
  5973  078C  00FA               	movwf	LCD_Write_Int@value+1
  5974  078D  085D               	movf	main@dutyCycle6^(0+128),w
  5975  078E  00F9               	movwf	LCD_Write_Int@value
  5976  078F  3005               	movlw	5
  5977  0790  0020               	movlb	0	; select bank0
  5978  0791  00ED               	movwf	??_main
  5979  0792  086D               	movf	??_main,w
  5980  0793  00FB               	movwf	LCD_Write_Int@fieldLength
  5981  0794  01FC               	clrf	LCD_Write_Int@numPlaces
  5982  0795  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5983  0796  01FD               	clrf	LCD_Write_Int@sign
  5984  0797  3181  217C  3186   	fcall	_LCD_Write_Int
  5985                           
  5986                           ;main.c: 100: LCD_Write_Char(' ');
  5987  079A  3020               	movlw	32
  5988  079B  318A  22FC  3186   	fcall	_LCD_Write_Char
  5989                           
  5990                           ;main.c: 109: dutyCycle6 = PID_Calculate(750,analogs[1]);
  5991  079E  0021               	movlb	1	; select bank1
  5992  079F  0862               	movf	((main@analogs+1)^(0+128)+2),w
  5993  07A0  0020               	movlb	0	; select bank0
  5994  07A1  00A3               	movwf	PID_Calculate@temp+1
  5995  07A2  0021               	movlb	1	; select bank1
  5996  07A3  0861               	movf	(main@analogs^(0+128)+2),w
  5997  07A4  0020               	movlb	0	; select bank0
  5998  07A5  00A2               	movwf	PID_Calculate@temp
  5999  07A6  30EE               	movlw	238
  6000  07A7  00A0               	movwf	PID_Calculate@setpoint
  6001  07A8  3002               	movlw	2
  6002  07A9  00A1               	movwf	PID_Calculate@setpoint+1
  6003  07AA  3183  233B  3186   	fcall	_PID_Calculate
  6004  07AD  0020               	movlb	0	; select bank0
  6005  07AE  0820               	movf	?_PID_Calculate,w
  6006  07AF  00E9               	movwf	___fttol@f1
  6007  07B0  0821               	movf	?_PID_Calculate+1,w
  6008  07B1  00EA               	movwf	___fttol@f1+1
  6009  07B2  0822               	movf	?_PID_Calculate+2,w
  6010  07B3  00EB               	movwf	___fttol@f1+2
  6011  07B4  318E  26B2  3186   	fcall	___fttol
  6012  07B7  0020               	movlb	0	; select bank0
  6013  07B8  086A               	movf	?___fttol+1,w
  6014  07B9  0021               	movlb	1	; select bank1
  6015  07BA  00DE               	movwf	(main@dutyCycle6+1)^(0+128)
  6016  07BB  0020               	movlb	0	; select bank0
  6017  07BC  0869               	movf	?___fttol,w
  6018  07BD  0021               	movlb	1	; select bank1
  6019  07BE  00DD               	movwf	main@dutyCycle6^(0+128)
  6020                           
  6021                           ;main.c: 111: if(dutyCycle6<50)dutyCycle6=0;
  6022  07BF  3000               	movlw	0
  6023  07C0  025E               	subwf	(main@dutyCycle6+1)^(0+128),w
  6024  07C1  3032               	movlw	50
  6025  07C2  1903               	skipnz
  6026  07C3  025D               	subwf	main@dutyCycle6^(0+128),w
  6027  07C4  1803               	skipnc
  6028  07C5  2FC8               	goto	l38
  6029  07C6  01DD               	clrf	main@dutyCycle6^(0+128)
  6030  07C7  01DE               	clrf	(main@dutyCycle6+1)^(0+128)
  6031  07C8                     l38:	
  6032                           
  6033                           ;main.c: 112: loop=0;
  6034  07C8  01D8               	clrf	main@loop^(0+128)
  6035  07C9                     l2740:	
  6036                           
  6037                           ;main.c: 113: }
  6038                           ;main.c: 311: loop+=1;
  6039  07C9  3001               	movlw	1
  6040  07CA  0020               	movlb	0	; select bank0
  6041  07CB  00ED               	movwf	??_main
  6042  07CC  086D               	movf	??_main,w
  6043  07CD  0021               	movlb	1	; select bank1
  6044  07CE  07D8               	addwf	main@loop^(0+128),f
  6045  07CF  2EBE               	goto	l2686
  6046  07D0                     __end_of_main:	
  6047                           
  6048                           	psect	text1
  6049  0447                     __ptext1:	
  6050 ;; *************** function _tempCalc *****************
  6051 ;; Defined at:
  6052 ;;		line 4 in file "tempCalc.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  analogValue     2   61[BANK0 ] int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  steinhart       3   70[BANK0 ] float 
  6057 ;;  R               3   64[BANK0 ] float 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  3   61[BANK0 ] float 
  6060 ;; Registers used:
  6061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6067 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;Total ram usage:       12 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    4
  6074 ;; This function calls:
  6075 ;;		___awtoft
  6076 ;;		___ftadd
  6077 ;;		___ftdiv
  6078 ;;		___ftmul
  6079 ;;		___ftsub
  6080 ;;		_log
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _tempCalc
  6088  0447                     _tempCalc:	
  6089                           
  6090                           ;tempCalc.c: 6: float R, steinhart;
  6091                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6092                           
  6093                           ;incstack = 0
  6094                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6095  0447  3000               	movlw	0
  6096  0448  0020               	movlb	0	; select bank0
  6097  0449  00C0               	movwf	___ftadd@f1
  6098  044A  3080               	movlw	128
  6099  044B  00C1               	movwf	___ftadd@f1+1
  6100  044C  30BF               	movlw	191
  6101  044D  00C2               	movwf	___ftadd@f1+2
  6102  044E  085E               	movf	tempCalc@analogValue+1,w
  6103  044F  00F9               	movwf	___awtoft@c+1
  6104  0450  085D               	movf	tempCalc@analogValue,w
  6105  0451  00F8               	movwf	___awtoft@c
  6106  0452  318A  22B6  3184   	fcall	___awtoft
  6107  0455  0878               	movf	?___awtoft,w
  6108  0456  0020               	movlb	0	; select bank0
  6109  0457  00B0               	movwf	___ftdiv@f2
  6110  0458  0879               	movf	?___awtoft+1,w
  6111  0459  00B1               	movwf	___ftdiv@f2+1
  6112  045A  087A               	movf	?___awtoft+2,w
  6113  045B  00B2               	movwf	___ftdiv@f2+2
  6114  045C  30C0               	movlw	192
  6115  045D  00B3               	movwf	___ftdiv@f1
  6116  045E  307F               	movlw	127
  6117  045F  00B4               	movwf	___ftdiv@f1+1
  6118  0460  3044               	movlw	68
  6119  0461  00B5               	movwf	___ftdiv@f1+2
  6120  0462  318F  2757  3184   	fcall	___ftdiv
  6121  0465  0020               	movlb	0	; select bank0
  6122  0466  0830               	movf	?___ftdiv,w
  6123  0467  00C3               	movwf	___ftadd@f2
  6124  0468  0831               	movf	?___ftdiv+1,w
  6125  0469  00C4               	movwf	___ftadd@f2+1
  6126  046A  0832               	movf	?___ftdiv+2,w
  6127  046B  00C5               	movwf	___ftadd@f2+2
  6128  046C  3182  2245  3184   	fcall	___ftadd
  6129  046F  0020               	movlb	0	; select bank0
  6130  0470  0840               	movf	?___ftadd,w
  6131  0471  00E3               	movwf	_tempCalc$984
  6132  0472  0841               	movf	?___ftadd+1,w
  6133  0473  00E4               	movwf	_tempCalc$984+1
  6134  0474  0842               	movf	?___ftadd+2,w
  6135  0475  00E5               	movwf	_tempCalc$984+2
  6136                           
  6137                           ;tempCalc.c: 6: float R, steinhart;
  6138                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6139  0476  0863               	movf	_tempCalc$984,w
  6140  0477  00B0               	movwf	___ftdiv@f2
  6141  0478  0864               	movf	_tempCalc$984+1,w
  6142  0479  00B1               	movwf	___ftdiv@f2+1
  6143  047A  0865               	movf	_tempCalc$984+2,w
  6144  047B  00B2               	movwf	___ftdiv@f2+2
  6145  047C  3090               	movlw	144
  6146  047D  00B3               	movwf	___ftdiv@f1
  6147  047E  301C               	movlw	28
  6148  047F  00B4               	movwf	___ftdiv@f1+1
  6149  0480  3046               	movlw	70
  6150  0481  00B5               	movwf	___ftdiv@f1+2
  6151  0482  318F  2757  3184   	fcall	___ftdiv
  6152  0485  0020               	movlb	0	; select bank0
  6153  0486  0830               	movf	?___ftdiv,w
  6154  0487  00E0               	movwf	tempCalc@R
  6155  0488  0831               	movf	?___ftdiv+1,w
  6156  0489  00E1               	movwf	tempCalc@R+1
  6157  048A  0832               	movf	?___ftdiv+2,w
  6158  048B  00E2               	movwf	tempCalc@R+2
  6159                           
  6160                           ;tempCalc.c: 10: steinhart = R /9880;
  6161  048C  3060               	movlw	96
  6162  048D  00B0               	movwf	___ftdiv@f2
  6163  048E  301A               	movlw	26
  6164  048F  00B1               	movwf	___ftdiv@f2+1
  6165  0490  3046               	movlw	70
  6166  0491  00B2               	movwf	___ftdiv@f2+2
  6167  0492  0860               	movf	tempCalc@R,w
  6168  0493  00B3               	movwf	___ftdiv@f1
  6169  0494  0861               	movf	tempCalc@R+1,w
  6170  0495  00B4               	movwf	___ftdiv@f1+1
  6171  0496  0862               	movf	tempCalc@R+2,w
  6172  0497  00B5               	movwf	___ftdiv@f1+2
  6173  0498  318F  2757  3184   	fcall	___ftdiv
  6174  049B  0020               	movlb	0	; select bank0
  6175  049C  0830               	movf	?___ftdiv,w
  6176  049D  00E6               	movwf	tempCalc@steinhart
  6177  049E  0831               	movf	?___ftdiv+1,w
  6178  049F  00E7               	movwf	tempCalc@steinhart+1
  6179  04A0  0832               	movf	?___ftdiv+2,w
  6180  04A1  00E8               	movwf	tempCalc@steinhart+2
  6181                           
  6182                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6183  04A2  0866               	movf	tempCalc@steinhart,w
  6184  04A3  00D7               	movwf	log@x
  6185  04A4  0867               	movf	tempCalc@steinhart+1,w
  6186  04A5  00D8               	movwf	log@x+1
  6187  04A6  0868               	movf	tempCalc@steinhart+2,w
  6188  04A7  00D9               	movwf	log@x+2
  6189  04A8  3180  2018  3184   	fcall	_log
  6190  04AB  0020               	movlb	0	; select bank0
  6191  04AC  0857               	movf	?_log,w
  6192  04AD  00E6               	movwf	tempCalc@steinhart
  6193  04AE  0858               	movf	?_log+1,w
  6194  04AF  00E7               	movwf	tempCalc@steinhart+1
  6195  04B0  0859               	movf	?_log+2,w
  6196  04B1  00E8               	movwf	tempCalc@steinhart+2
  6197                           
  6198                           ;tempCalc.c: 12: steinhart /= 3940;
  6199  04B2  3040               	movlw	64
  6200  04B3  00B0               	movwf	___ftdiv@f2
  6201  04B4  3076               	movlw	118
  6202  04B5  00B1               	movwf	___ftdiv@f2+1
  6203  04B6  3045               	movlw	69
  6204  04B7  00B2               	movwf	___ftdiv@f2+2
  6205  04B8  0866               	movf	tempCalc@steinhart,w
  6206  04B9  00B3               	movwf	___ftdiv@f1
  6207  04BA  0867               	movf	tempCalc@steinhart+1,w
  6208  04BB  00B4               	movwf	___ftdiv@f1+1
  6209  04BC  0868               	movf	tempCalc@steinhart+2,w
  6210  04BD  00B5               	movwf	___ftdiv@f1+2
  6211  04BE  318F  2757  3184   	fcall	___ftdiv
  6212  04C1  0020               	movlb	0	; select bank0
  6213  04C2  0830               	movf	?___ftdiv,w
  6214  04C3  00E6               	movwf	tempCalc@steinhart
  6215  04C4  0831               	movf	?___ftdiv+1,w
  6216  04C5  00E7               	movwf	tempCalc@steinhart+1
  6217  04C6  0832               	movf	?___ftdiv+2,w
  6218  04C7  00E8               	movwf	tempCalc@steinhart+2
  6219                           
  6220                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  6221  04C8  30CF               	movlw	207
  6222  04C9  00C0               	movwf	___ftadd@f1
  6223  04CA  305B               	movlw	91
  6224  04CB  00C1               	movwf	___ftadd@f1+1
  6225  04CC  303B               	movlw	59
  6226  04CD  00C2               	movwf	___ftadd@f1+2
  6227  04CE  0866               	movf	tempCalc@steinhart,w
  6228  04CF  00C3               	movwf	___ftadd@f2
  6229  04D0  0867               	movf	tempCalc@steinhart+1,w
  6230  04D1  00C4               	movwf	___ftadd@f2+1
  6231  04D2  0868               	movf	tempCalc@steinhart+2,w
  6232  04D3  00C5               	movwf	___ftadd@f2+2
  6233  04D4  3182  2245  3184   	fcall	___ftadd
  6234  04D7  0020               	movlb	0	; select bank0
  6235  04D8  0840               	movf	?___ftadd,w
  6236  04D9  00E6               	movwf	tempCalc@steinhart
  6237  04DA  0841               	movf	?___ftadd+1,w
  6238  04DB  00E7               	movwf	tempCalc@steinhart+1
  6239  04DC  0842               	movf	?___ftadd+2,w
  6240  04DD  00E8               	movwf	tempCalc@steinhart+2
  6241                           
  6242                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  6243  04DE  0866               	movf	tempCalc@steinhart,w
  6244  04DF  00B0               	movwf	___ftdiv@f2
  6245  04E0  0867               	movf	tempCalc@steinhart+1,w
  6246  04E1  00B1               	movwf	___ftdiv@f2+1
  6247  04E2  0868               	movf	tempCalc@steinhart+2,w
  6248  04E3  00B2               	movwf	___ftdiv@f2+2
  6249  04E4  3000               	movlw	0
  6250  04E5  00B3               	movwf	___ftdiv@f1
  6251  04E6  3080               	movlw	128
  6252  04E7  00B4               	movwf	___ftdiv@f1+1
  6253  04E8  303F               	movlw	63
  6254  04E9  00B5               	movwf	___ftdiv@f1+2
  6255  04EA  318F  2757  3184   	fcall	___ftdiv
  6256  04ED  0020               	movlb	0	; select bank0
  6257  04EE  0830               	movf	?___ftdiv,w
  6258  04EF  00E6               	movwf	tempCalc@steinhart
  6259  04F0  0831               	movf	?___ftdiv+1,w
  6260  04F1  00E7               	movwf	tempCalc@steinhart+1
  6261  04F2  0832               	movf	?___ftdiv+2,w
  6262  04F3  00E8               	movwf	tempCalc@steinhart+2
  6263                           
  6264                           ;tempCalc.c: 16: steinhart -= 273.15;
  6265  04F4  3093               	movlw	147
  6266  04F5  00CD               	movwf	___ftsub@f2
  6267  04F6  3088               	movlw	136
  6268  04F7  00CE               	movwf	___ftsub@f2+1
  6269  04F8  3043               	movlw	67
  6270  04F9  00CF               	movwf	___ftsub@f2+2
  6271  04FA  0866               	movf	tempCalc@steinhart,w
  6272  04FB  00D0               	movwf	___ftsub@f1
  6273  04FC  0867               	movf	tempCalc@steinhart+1,w
  6274  04FD  00D1               	movwf	___ftsub@f1+1
  6275  04FE  0868               	movf	tempCalc@steinhart+2,w
  6276  04FF  00D2               	movwf	___ftsub@f1+2
  6277  0500  318A  2298  3184   	fcall	___ftsub
  6278  0503  0020               	movlb	0	; select bank0
  6279  0504  084D               	movf	?___ftsub,w
  6280  0505  00E6               	movwf	tempCalc@steinhart
  6281  0506  084E               	movf	?___ftsub+1,w
  6282  0507  00E7               	movwf	tempCalc@steinhart+1
  6283  0508  084F               	movf	?___ftsub+2,w
  6284  0509  00E8               	movwf	tempCalc@steinhart+2
  6285                           
  6286                           ;tempCalc.c: 18: steinhart*=10;
  6287  050A  3000               	movlw	0
  6288  050B  00A0               	movwf	___ftmul@f1
  6289  050C  3020               	movlw	32
  6290  050D  00A1               	movwf	___ftmul@f1+1
  6291  050E  3041               	movlw	65
  6292  050F  00A2               	movwf	___ftmul@f1+2
  6293  0510  0866               	movf	tempCalc@steinhart,w
  6294  0511  00A3               	movwf	___ftmul@f2
  6295  0512  0867               	movf	tempCalc@steinhart+1,w
  6296  0513  00A4               	movwf	___ftmul@f2+1
  6297  0514  0868               	movf	tempCalc@steinhart+2,w
  6298  0515  00A5               	movwf	___ftmul@f2+2
  6299  0516  3180  20C8  3184   	fcall	___ftmul
  6300  0519  0020               	movlb	0	; select bank0
  6301  051A  0820               	movf	?___ftmul,w
  6302  051B  00E6               	movwf	tempCalc@steinhart
  6303  051C  0821               	movf	?___ftmul+1,w
  6304  051D  00E7               	movwf	tempCalc@steinhart+1
  6305  051E  0822               	movf	?___ftmul+2,w
  6306  051F  00E8               	movwf	tempCalc@steinhart+2
  6307                           
  6308                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  6309  0520  3000               	movlw	0
  6310  0521  00C0               	movwf	___ftadd@f1
  6311  0522  30A0               	movlw	160
  6312  0523  00C1               	movwf	___ftadd@f1+1
  6313  0524  3043               	movlw	67
  6314  0525  00C2               	movwf	___ftadd@f1+2
  6315  0526  3000               	movlw	0
  6316  0527  00B0               	movwf	___ftdiv@f2
  6317  0528  30A0               	movlw	160
  6318  0529  00B1               	movwf	___ftdiv@f2+1
  6319  052A  3040               	movlw	64
  6320  052B  00B2               	movwf	___ftdiv@f2+2
  6321  052C  3000               	movlw	0
  6322  052D  00A0               	movwf	___ftmul@f1
  6323  052E  3010               	movlw	16
  6324  052F  00A1               	movwf	___ftmul@f1+1
  6325  0530  3041               	movlw	65
  6326  0531  00A2               	movwf	___ftmul@f1+2
  6327  0532  0866               	movf	tempCalc@steinhart,w
  6328  0533  00A3               	movwf	___ftmul@f2
  6329  0534  0867               	movf	tempCalc@steinhart+1,w
  6330  0535  00A4               	movwf	___ftmul@f2+1
  6331  0536  0868               	movf	tempCalc@steinhart+2,w
  6332  0537  00A5               	movwf	___ftmul@f2+2
  6333  0538  3180  20C8  3184   	fcall	___ftmul
  6334  053B  0020               	movlb	0	; select bank0
  6335  053C  0820               	movf	?___ftmul,w
  6336  053D  00B3               	movwf	___ftdiv@f1
  6337  053E  0821               	movf	?___ftmul+1,w
  6338  053F  00B4               	movwf	___ftdiv@f1+1
  6339  0540  0822               	movf	?___ftmul+2,w
  6340  0541  00B5               	movwf	___ftdiv@f1+2
  6341  0542  318F  2757  3184   	fcall	___ftdiv
  6342  0545  0020               	movlb	0	; select bank0
  6343  0546  0830               	movf	?___ftdiv,w
  6344  0547  00C3               	movwf	___ftadd@f2
  6345  0548  0831               	movf	?___ftdiv+1,w
  6346  0549  00C4               	movwf	___ftadd@f2+1
  6347  054A  0832               	movf	?___ftdiv+2,w
  6348  054B  00C5               	movwf	___ftadd@f2+2
  6349  054C  3182  2245         	fcall	___ftadd
  6350  054E  0020               	movlb	0	; select bank0
  6351  054F  0840               	movf	?___ftadd,w
  6352  0550  00E6               	movwf	tempCalc@steinhart
  6353  0551  0841               	movf	?___ftadd+1,w
  6354  0552  00E7               	movwf	tempCalc@steinhart+1
  6355  0553  0842               	movf	?___ftadd+2,w
  6356  0554  00E8               	movwf	tempCalc@steinhart+2
  6357                           
  6358                           ;tempCalc.c: 22: return steinhart;
  6359  0555  0866               	movf	tempCalc@steinhart,w
  6360  0556  00DD               	movwf	?_tempCalc
  6361  0557  0867               	movf	tempCalc@steinhart+1,w
  6362  0558  00DE               	movwf	?_tempCalc+1
  6363  0559  0868               	movf	tempCalc@steinhart+2,w
  6364  055A  00DF               	movwf	?_tempCalc+2
  6365  055B  0008               	return
  6366  055C                     __end_of_tempCalc:	
  6367                           
  6368                           	psect	text2
  6369  0018                     __ptext2:	
  6370 ;; *************** function _log *****************
  6371 ;; Defined at:
  6372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  x               3   55[BANK0 ] float 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  exponent        2   59[BANK0 ] int 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  3   55[BANK0 ] int 
  6379 ;; Registers used:
  6380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6386 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;Total ram usage:        6 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    3
  6393 ;; This function calls:
  6394 ;;		___awtoft
  6395 ;;		___ftadd
  6396 ;;		___ftge
  6397 ;;		___ftmul
  6398 ;;		_eval_poly
  6399 ;;		_frexp
  6400 ;; This function is called by:
  6401 ;;		_tempCalc
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _log
  6407  0018                     _log:	
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6411  0018  0020               	movlb	0	; select bank0
  6412  0019  0857               	movf	log@x,w
  6413  001A  00F0               	movwf	___ftge@ff1
  6414  001B  0858               	movf	log@x+1,w
  6415  001C  00F1               	movwf	___ftge@ff1+1
  6416  001D  0859               	movf	log@x+2,w
  6417  001E  00F2               	movwf	___ftge@ff1+2
  6418  001F  3000               	movlw	0
  6419  0020  00F3               	movwf	___ftge@ff2
  6420  0021  3000               	movlw	0
  6421  0022  00F4               	movwf	___ftge@ff2+1
  6422  0023  3000               	movlw	0
  6423  0024  00F5               	movwf	___ftge@ff2+2
  6424  0025  318B  2358  3180   	fcall	___ftge
  6425  0028  1803               	btfsc	3,0
  6426  0029  2837               	goto	l2220
  6427  002A  3021               	movlw	33
  6428  002B  0021               	movlb	1	; select bank1
  6429  002C  00B2               	movwf	_errno^(0+128)
  6430  002D  3000               	movlw	0
  6431  002E  00B3               	movwf	(_errno^(0+128)+1)
  6432  002F  3000               	movlw	0
  6433  0030  0020               	movlb	0	; select bank0
  6434  0031  00D7               	movwf	?_log
  6435  0032  3000               	movlw	0
  6436  0033  00D8               	movwf	?_log+1
  6437  0034  3000               	movlw	0
  6438  0035  00D9               	movwf	?_log+2
  6439  0036  0008               	return
  6440  0037                     l2220:	
  6441  0037  0020               	movlb	0	; select bank0
  6442  0038  0859               	movf	log@x+2,w
  6443  0039  0458               	iorwf	log@x+1,w
  6444  003A  0457               	iorwf	log@x,w
  6445  003B  1D03               	skipz
  6446  003C  284A               	goto	l2226
  6447  003D  3022               	movlw	34
  6448  003E  0021               	movlb	1	; select bank1
  6449  003F  00B2               	movwf	_errno^(0+128)
  6450  0040  3000               	movlw	0
  6451  0041  00B3               	movwf	(_errno^(0+128)+1)
  6452  0042  3000               	movlw	0
  6453  0043  0020               	movlb	0	; select bank0
  6454  0044  00D7               	movwf	?_log
  6455  0045  3000               	movlw	0
  6456  0046  00D8               	movwf	?_log+1
  6457  0047  3000               	movlw	0
  6458  0048  00D9               	movwf	?_log+2
  6459  0049  0008               	return
  6460  004A                     l2226:	
  6461  004A  3000               	movlw	0
  6462  004B  00C0               	movwf	___ftadd@f1
  6463  004C  3080               	movlw	128
  6464  004D  00C1               	movwf	___ftadd@f1+1
  6465  004E  30BF               	movlw	191
  6466  004F  00C2               	movwf	___ftadd@f1+2
  6467  0050  3000               	movlw	0
  6468  0051  00A0               	movwf	___ftmul@f1
  6469  0052  3000               	movlw	0
  6470  0053  00A1               	movwf	___ftmul@f1+1
  6471  0054  3040               	movlw	64
  6472  0055  00A2               	movwf	___ftmul@f1+2
  6473  0056  305B               	movlw	(low (log@exponent| 0))& (0+255)
  6474  0057  00DA               	movwf	??_log
  6475  0058  085A               	movf	??_log,w
  6476  0059  00F3               	movwf	frexp@eptr
  6477  005A  0857               	movf	log@x,w
  6478  005B  00F0               	movwf	frexp@value
  6479  005C  0858               	movf	log@x+1,w
  6480  005D  00F1               	movwf	frexp@value+1
  6481  005E  0859               	movf	log@x+2,w
  6482  005F  00F2               	movwf	frexp@value+2
  6483  0060  318B  2393  3180   	fcall	_frexp
  6484  0063  0870               	movf	?_frexp,w
  6485  0064  0020               	movlb	0	; select bank0
  6486  0065  00A3               	movwf	___ftmul@f2
  6487  0066  0871               	movf	?_frexp+1,w
  6488  0067  00A4               	movwf	___ftmul@f2+1
  6489  0068  0872               	movf	?_frexp+2,w
  6490  0069  00A5               	movwf	___ftmul@f2+2
  6491  006A  3180  20C8  3180   	fcall	___ftmul
  6492  006D  0020               	movlb	0	; select bank0
  6493  006E  0820               	movf	?___ftmul,w
  6494  006F  00C3               	movwf	___ftadd@f2
  6495  0070  0821               	movf	?___ftmul+1,w
  6496  0071  00C4               	movwf	___ftadd@f2+1
  6497  0072  0822               	movf	?___ftmul+2,w
  6498  0073  00C5               	movwf	___ftadd@f2+2
  6499  0074  3182  2245  3180   	fcall	___ftadd
  6500  0077  0020               	movlb	0	; select bank0
  6501  0078  0840               	movf	?___ftadd,w
  6502  0079  00D7               	movwf	log@x
  6503  007A  0841               	movf	?___ftadd+1,w
  6504  007B  00D8               	movwf	log@x+1
  6505  007C  0842               	movf	?___ftadd+2,w
  6506  007D  00D9               	movwf	log@x+2
  6507  007E  30FF               	movlw	255
  6508  007F  07DB               	addwf	log@exponent,f
  6509  0080  30FF               	movlw	255
  6510  0081  3DDC               	addwfc	log@exponent+1,f
  6511  0082  0857               	movf	log@x,w
  6512  0083  00CD               	movwf	eval_poly@x
  6513  0084  0858               	movf	log@x+1,w
  6514  0085  00CE               	movwf	eval_poly@x+1
  6515  0086  0859               	movf	log@x+2,w
  6516  0087  00CF               	movwf	eval_poly@x+2
  6517  0088  3000               	movlw	low (log@coeff| (0+32768))
  6518  0089  00D0               	movwf	eval_poly@d
  6519  008A  3090               	movlw	high (log@coeff| (0+32768))
  6520  008B  00D1               	movwf	eval_poly@d+1
  6521  008C  3008               	movlw	8
  6522  008D  00D2               	movwf	eval_poly@n
  6523  008E  3000               	movlw	0
  6524  008F  00D3               	movwf	eval_poly@n+1
  6525  0090  318C  24E5  3180   	fcall	_eval_poly
  6526  0093  0020               	movlb	0	; select bank0
  6527  0094  084D               	movf	?_eval_poly,w
  6528  0095  00D7               	movwf	log@x
  6529  0096  084E               	movf	?_eval_poly+1,w
  6530  0097  00D8               	movwf	log@x+1
  6531  0098  084F               	movf	?_eval_poly+2,w
  6532  0099  00D9               	movwf	log@x+2
  6533  009A  0857               	movf	log@x,w
  6534  009B  00C0               	movwf	___ftadd@f1
  6535  009C  0858               	movf	log@x+1,w
  6536  009D  00C1               	movwf	___ftadd@f1+1
  6537  009E  0859               	movf	log@x+2,w
  6538  009F  00C2               	movwf	___ftadd@f1+2
  6539  00A0  3072               	movlw	114
  6540  00A1  00A0               	movwf	___ftmul@f1
  6541  00A2  3031               	movlw	49
  6542  00A3  00A1               	movwf	___ftmul@f1+1
  6543  00A4  303F               	movlw	63
  6544  00A5  00A2               	movwf	___ftmul@f1+2
  6545  00A6  085C               	movf	log@exponent+1,w
  6546  00A7  00F9               	movwf	___awtoft@c+1
  6547  00A8  085B               	movf	log@exponent,w
  6548  00A9  00F8               	movwf	___awtoft@c
  6549  00AA  318A  22B6  3180   	fcall	___awtoft
  6550  00AD  0878               	movf	?___awtoft,w
  6551  00AE  0020               	movlb	0	; select bank0
  6552  00AF  00A3               	movwf	___ftmul@f2
  6553  00B0  0879               	movf	?___awtoft+1,w
  6554  00B1  00A4               	movwf	___ftmul@f2+1
  6555  00B2  087A               	movf	?___awtoft+2,w
  6556  00B3  00A5               	movwf	___ftmul@f2+2
  6557  00B4  3180  20C8  3180   	fcall	___ftmul
  6558  00B7  0020               	movlb	0	; select bank0
  6559  00B8  0820               	movf	?___ftmul,w
  6560  00B9  00C3               	movwf	___ftadd@f2
  6561  00BA  0821               	movf	?___ftmul+1,w
  6562  00BB  00C4               	movwf	___ftadd@f2+1
  6563  00BC  0822               	movf	?___ftmul+2,w
  6564  00BD  00C5               	movwf	___ftadd@f2+2
  6565  00BE  3182  2245         	fcall	___ftadd
  6566  00C0  0020               	movlb	0	; select bank0
  6567  00C1  0840               	movf	?___ftadd,w
  6568  00C2  00D7               	movwf	?_log
  6569  00C3  0841               	movf	?___ftadd+1,w
  6570  00C4  00D8               	movwf	?_log+1
  6571  00C5  0842               	movf	?___ftadd+2,w
  6572  00C6  00D9               	movwf	?_log+2
  6573  00C7  0008               	return
  6574  00C8                     __end_of_log:	
  6575                           
  6576                           	psect	text3
  6577  0B93                     __ptext3:	
  6578 ;; *************** function _frexp *****************
  6579 ;; Defined at:
  6580 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  value           3    0[COMMON] int 
  6583 ;;  eptr            1    3[COMMON] PTR int 
  6584 ;;		 -> log@exponent(2), 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  3    0[COMMON] PTR int 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;Total ram usage:        6 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_log
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _frexp
  6611  0B93                     _frexp:	
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6615  0B93  0872               	movf	frexp@value+2,w
  6616  0B94  0471               	iorwf	frexp@value+1,w
  6617  0B95  0470               	iorwf	frexp@value,w
  6618  0B96  1D03               	skipz
  6619  0B97  2BA5               	goto	l2054
  6620  0B98  0873               	movf	frexp@eptr,w
  6621  0B99  0086               	movwf	6
  6622  0B9A  0187               	clrf	7
  6623  0B9B  3000               	movlw	0
  6624  0B9C  3FC0               	movwi [0]fsr1
  6625  0B9D  3FC1               	movwi [1]fsr1
  6626  0B9E  3000               	movlw	0
  6627  0B9F  00F0               	movwf	?_frexp
  6628  0BA0  3000               	movlw	0
  6629  0BA1  00F1               	movwf	?_frexp+1
  6630  0BA2  3000               	movlw	0
  6631  0BA3  00F2               	movwf	?_frexp+2
  6632  0BA4  0008               	return
  6633  0BA5                     l2054:	
  6634  0BA5  0872               	movf	frexp@value+2,w
  6635  0BA6  397F               	andlw	127
  6636  0BA7  00F4               	movwf	??_frexp
  6637  0BA8  01F5               	clrf	??_frexp+1
  6638  0BA9  35F4               	lslf	??_frexp,f
  6639  0BAA  0DF5               	rlf	??_frexp+1,f
  6640  0BAB  0873               	movf	frexp@eptr,w
  6641  0BAC  0086               	movwf	6
  6642  0BAD  0187               	clrf	7
  6643  0BAE  0874               	movf	??_frexp,w
  6644  0BAF  3FC0               	movwi [0]fsr1
  6645  0BB0  0875               	movf	??_frexp+1,w
  6646  0BB1  3FC1               	movwi [1]fsr1
  6647  0BB2  0D71               	rlf	frexp@value+1,w
  6648  0BB3  0D71               	rlf	frexp@value+1,w
  6649  0BB4  3901               	andlw	1
  6650  0BB5  00F4               	movwf	??_frexp
  6651  0BB6  01F5               	clrf	??_frexp+1
  6652  0BB7  0873               	movf	frexp@eptr,w
  6653  0BB8  0086               	movwf	6
  6654  0BB9  0187               	clrf	7
  6655  0BBA  0874               	movf	??_frexp,w
  6656  0BBB  0481               	iorwf	1,f
  6657  0BBC  3141               	addfsr 1,1
  6658  0BBD  0875               	movf	??_frexp+1,w
  6659  0BBE  0481               	iorwf	1,f
  6660  0BBF  0873               	movf	frexp@eptr,w
  6661  0BC0  0086               	movwf	6
  6662  0BC1  0187               	clrf	7
  6663  0BC2  3082               	movlw	130
  6664  0BC3  0781               	addwf	1,f
  6665  0BC4  3141               	addfsr 1,1
  6666  0BC5  30FF               	movlw	255
  6667  0BC6  3D81               	addwfc	1,f
  6668  0BC7  317F               	addfsr 1,-1
  6669  0BC8  0872               	movf	frexp@value+2,w
  6670  0BC9  3980               	andlw	-128
  6671  0BCA  383F               	iorlw	63
  6672  0BCB  00F2               	movwf	frexp@value+2
  6673  0BCC  13F1               	bcf	frexp@value+1,7
  6674  0BCD  0008               	return
  6675  0BCE                     __end_of_frexp:	
  6676                           
  6677                           	psect	text4
  6678  0CE5                     __ptext4:	
  6679 ;; *************** function _eval_poly *****************
  6680 ;; Defined at:
  6681 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  x               3   45[BANK0 ] PTR int 
  6684 ;;  d               2   48[BANK0 ] PTR const 
  6685 ;;		 -> log@coeff(27), 
  6686 ;;  n               2   50[BANK0 ] int 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  res             3   52[BANK0 ] int 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  3   45[BANK0 ] int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:       10 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    2
  6705 ;; This function calls:
  6706 ;;		___ftadd
  6707 ;;		___ftmul
  6708 ;;		___wmul
  6709 ;; This function is called by:
  6710 ;;		_log
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function _eval_poly
  6716  0CE5                     _eval_poly:	
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6720  0CE5  0020               	movlb	0	; select bank0
  6721  0CE6  0853               	movf	eval_poly@n+1,w
  6722  0CE7  00F1               	movwf	___wmul@multiplier+1
  6723  0CE8  0852               	movf	eval_poly@n,w
  6724  0CE9  00F0               	movwf	___wmul@multiplier
  6725  0CEA  3003               	movlw	3
  6726  0CEB  00F2               	movwf	___wmul@multiplicand
  6727  0CEC  3000               	movlw	0
  6728  0CED  00F3               	movwf	___wmul@multiplicand+1
  6729  0CEE  318A  227D  318C   	fcall	___wmul
  6730  0CF1  0020               	movlb	0	; select bank0
  6731  0CF2  0850               	movf	eval_poly@d,w
  6732  0CF3  0770               	addwf	?___wmul,w
  6733  0CF4  0084               	movwf	4
  6734  0CF5  0851               	movf	eval_poly@d+1,w
  6735  0CF6  3D71               	addwfc	?___wmul+1,w
  6736  0CF7  0085               	movwf	5
  6737  0CF8  3F00               	moviw [0]fsr0
  6738  0CF9  00D4               	movwf	eval_poly@res
  6739  0CFA  3F01               	moviw [1]fsr0
  6740  0CFB  00D5               	movwf	eval_poly@res+1
  6741  0CFC  3F02               	moviw [2]fsr0
  6742  0CFD                     L1:	
  6743  0CFD  00D6               	movwf	eval_poly@res+2
  6744  0CFE  0852               	movf	eval_poly@n,w
  6745  0CFF  0453               	iorwf	eval_poly@n+1,w
  6746  0D00  1903               	btfsc	3,2
  6747  0D01  2D3E               	goto	l2072
  6748  0D02  30FF               	movlw	255
  6749  0D03  07D2               	addwf	eval_poly@n,f
  6750  0D04  30FF               	movlw	255
  6751  0D05  3DD3               	addwfc	eval_poly@n+1,f
  6752  0D06  0853               	movf	eval_poly@n+1,w
  6753  0D07  00F1               	movwf	___wmul@multiplier+1
  6754  0D08  0852               	movf	eval_poly@n,w
  6755  0D09  00F0               	movwf	___wmul@multiplier
  6756  0D0A  3003               	movlw	3
  6757  0D0B  00F2               	movwf	___wmul@multiplicand
  6758  0D0C  3000               	movlw	0
  6759  0D0D  00F3               	movwf	___wmul@multiplicand+1
  6760  0D0E  318A  227D  318C   	fcall	___wmul
  6761  0D11  0020               	movlb	0	; select bank0
  6762  0D12  0850               	movf	eval_poly@d,w
  6763  0D13  0770               	addwf	?___wmul,w
  6764  0D14  0084               	movwf	4
  6765  0D15  0851               	movf	eval_poly@d+1,w
  6766  0D16  3D71               	addwfc	?___wmul+1,w
  6767  0D17  0085               	movwf	5
  6768  0D18  3F00               	moviw [0]fsr0
  6769  0D19  00C0               	movwf	___ftadd@f1
  6770  0D1A  3F01               	moviw [1]fsr0
  6771  0D1B  00C1               	movwf	___ftadd@f1+1
  6772  0D1C  3F02               	moviw [2]fsr0
  6773  0D1D  00C2               	movwf	___ftadd@f1+2
  6774  0D1E  0854               	movf	eval_poly@res,w
  6775  0D1F  00A0               	movwf	___ftmul@f1
  6776  0D20  0855               	movf	eval_poly@res+1,w
  6777  0D21  00A1               	movwf	___ftmul@f1+1
  6778  0D22  0856               	movf	eval_poly@res+2,w
  6779  0D23  00A2               	movwf	___ftmul@f1+2
  6780  0D24  084D               	movf	eval_poly@x,w
  6781  0D25  00A3               	movwf	___ftmul@f2
  6782  0D26  084E               	movf	eval_poly@x+1,w
  6783  0D27  00A4               	movwf	___ftmul@f2+1
  6784  0D28  084F               	movf	eval_poly@x+2,w
  6785  0D29  00A5               	movwf	___ftmul@f2+2
  6786  0D2A  3180  20C8  318C   	fcall	___ftmul
  6787  0D2D  0020               	movlb	0	; select bank0
  6788  0D2E  0820               	movf	?___ftmul,w
  6789  0D2F  00C3               	movwf	___ftadd@f2
  6790  0D30  0821               	movf	?___ftmul+1,w
  6791  0D31  00C4               	movwf	___ftadd@f2+1
  6792  0D32  0822               	movf	?___ftmul+2,w
  6793  0D33  00C5               	movwf	___ftadd@f2+2
  6794  0D34  3182  2245  318C   	fcall	___ftadd
  6795  0D37  0020               	movlb	0	; select bank0
  6796  0D38  0840               	movf	?___ftadd,w
  6797  0D39  00D4               	movwf	eval_poly@res
  6798  0D3A  0841               	movf	?___ftadd+1,w
  6799  0D3B  00D5               	movwf	eval_poly@res+1
  6800  0D3C  0842               	movf	?___ftadd+2,w
  6801  0D3D  2CFD               	goto	L1
  6802  0D3E                     l2072:	
  6803  0D3E  0854               	movf	eval_poly@res,w
  6804  0D3F  00CD               	movwf	?_eval_poly
  6805  0D40  0855               	movf	eval_poly@res+1,w
  6806  0D41  00CE               	movwf	?_eval_poly+1
  6807  0D42  0856               	movf	eval_poly@res+2,w
  6808  0D43  00CF               	movwf	?_eval_poly+2
  6809  0D44  0008               	return
  6810  0D45                     __end_of_eval_poly:	
  6811                           
  6812                           	psect	text5
  6813  00C8                     __ptext5:	
  6814 ;; *************** function ___ftmul *****************
  6815 ;; Defined at:
  6816 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  f1              3    0[BANK0 ] float 
  6819 ;;  f2              3    3[BANK0 ] float 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6822 ;;  sign            1   15[BANK0 ] unsigned char 
  6823 ;;  cntr            1   14[BANK0 ] unsigned char 
  6824 ;;  exp             1   10[BANK0 ] unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  3    0[BANK0 ] float 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, pclath, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6834 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6837 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6838 ;;Total ram usage:       16 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    1
  6841 ;; This function calls:
  6842 ;;		___ftpack
  6843 ;; This function is called by:
  6844 ;;		_tempCalc
  6845 ;;		_log
  6846 ;;		_eval_poly
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           
  6851                           ;psect for function ___ftmul
  6852  00C8                     ___ftmul:	
  6853                           
  6854                           ;incstack = 0
  6855                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6856  00C8  0020               	movlb	0	; select bank0
  6857  00C9  0820               	movf	___ftmul@f1,w
  6858  00CA  00A6               	movwf	??___ftmul
  6859  00CB  0821               	movf	___ftmul@f1+1,w
  6860  00CC  00A7               	movwf	??___ftmul+1
  6861  00CD  0822               	movf	___ftmul@f1+2,w
  6862  00CE  00A8               	movwf	??___ftmul+2
  6863  00CF  1003               	clrc
  6864  00D0  0D27               	rlf	??___ftmul+1,w
  6865  00D1  0D28               	rlf	??___ftmul+2,w
  6866  00D2  00A9               	movwf	??___ftmul+3
  6867  00D3  0829               	movf	??___ftmul+3,w
  6868  00D4  00AA               	movwf	___ftmul@exp
  6869  00D5  082A               	movf	___ftmul@exp,w
  6870  00D6  1D03               	btfss	3,2
  6871  00D7  28DF               	goto	l1940
  6872  00D8  3000               	movlw	0
  6873  00D9  00A0               	movwf	?___ftmul
  6874  00DA  3000               	movlw	0
  6875  00DB  00A1               	movwf	?___ftmul+1
  6876  00DC  3000               	movlw	0
  6877  00DD  00A2               	movwf	?___ftmul+2
  6878  00DE  0008               	return
  6879  00DF                     l1940:	
  6880  00DF  0823               	movf	___ftmul@f2,w
  6881  00E0  00A6               	movwf	??___ftmul
  6882  00E1  0824               	movf	___ftmul@f2+1,w
  6883  00E2  00A7               	movwf	??___ftmul+1
  6884  00E3  0825               	movf	___ftmul@f2+2,w
  6885  00E4  00A8               	movwf	??___ftmul+2
  6886  00E5  1003               	clrc
  6887  00E6  0D27               	rlf	??___ftmul+1,w
  6888  00E7  0D28               	rlf	??___ftmul+2,w
  6889  00E8  00A9               	movwf	??___ftmul+3
  6890  00E9  0829               	movf	??___ftmul+3,w
  6891  00EA  00AF               	movwf	___ftmul@sign
  6892  00EB  082F               	movf	___ftmul@sign,w
  6893  00EC  1D03               	btfss	3,2
  6894  00ED  28F5               	goto	l1946
  6895  00EE  3000               	movlw	0
  6896  00EF  00A0               	movwf	?___ftmul
  6897  00F0  3000               	movlw	0
  6898  00F1  00A1               	movwf	?___ftmul+1
  6899  00F2  3000               	movlw	0
  6900  00F3  00A2               	movwf	?___ftmul+2
  6901  00F4  0008               	return
  6902  00F5                     l1946:	
  6903  00F5  082F               	movf	___ftmul@sign,w
  6904  00F6  3E7B               	addlw	123
  6905  00F7  00A6               	movwf	??___ftmul
  6906  00F8  0826               	movf	??___ftmul,w
  6907  00F9  07AA               	addwf	___ftmul@exp,f
  6908  00FA  0820               	movf	___ftmul@f1,w
  6909  00FB  00A6               	movwf	??___ftmul
  6910  00FC  0821               	movf	___ftmul@f1+1,w
  6911  00FD  00A7               	movwf	??___ftmul+1
  6912  00FE  0822               	movf	___ftmul@f1+2,w
  6913  00FF  00A8               	movwf	??___ftmul+2
  6914  0100  3010               	movlw	16
  6915  0101                     u2035:	
  6916  0101  36A8               	lsrf	??___ftmul+2,f
  6917  0102  0CA7               	rrf	??___ftmul+1,f
  6918  0103  0CA6               	rrf	??___ftmul,f
  6919  0104  0B89               	decfsz	9,f
  6920  0105  2901               	goto	u2035
  6921  0106  0826               	movf	??___ftmul,w
  6922  0107  00A9               	movwf	??___ftmul+3
  6923  0108  0829               	movf	??___ftmul+3,w
  6924  0109  00AF               	movwf	___ftmul@sign
  6925  010A  0823               	movf	___ftmul@f2,w
  6926  010B  00A6               	movwf	??___ftmul
  6927  010C  0824               	movf	___ftmul@f2+1,w
  6928  010D  00A7               	movwf	??___ftmul+1
  6929  010E  0825               	movf	___ftmul@f2+2,w
  6930  010F  00A8               	movwf	??___ftmul+2
  6931  0110  3010               	movlw	16
  6932  0111                     u2045:	
  6933  0111  36A8               	lsrf	??___ftmul+2,f
  6934  0112  0CA7               	rrf	??___ftmul+1,f
  6935  0113  0CA6               	rrf	??___ftmul,f
  6936  0114  0B89               	decfsz	9,f
  6937  0115  2911               	goto	u2045
  6938  0116  0826               	movf	??___ftmul,w
  6939  0117  00A9               	movwf	??___ftmul+3
  6940  0118  0829               	movf	??___ftmul+3,w
  6941  0119  06AF               	xorwf	___ftmul@sign,f
  6942  011A  3080               	movlw	128
  6943  011B  00A6               	movwf	??___ftmul
  6944  011C  0826               	movf	??___ftmul,w
  6945  011D  05AF               	andwf	___ftmul@sign,f
  6946  011E  17A1               	bsf	___ftmul@f1+1,7
  6947  011F  17A4               	bsf	___ftmul@f2+1,7
  6948  0120  30FF               	movlw	255
  6949  0121  05A3               	andwf	___ftmul@f2,f
  6950  0122  30FF               	movlw	255
  6951  0123  05A4               	andwf	___ftmul@f2+1,f
  6952  0124  3000               	movlw	0
  6953  0125  05A5               	andwf	___ftmul@f2+2,f
  6954  0126  3000               	movlw	0
  6955  0127  00AB               	movwf	___ftmul@f3_as_product
  6956  0128  3000               	movlw	0
  6957  0129  00AC               	movwf	___ftmul@f3_as_product+1
  6958  012A  3000               	movlw	0
  6959  012B  00AD               	movwf	___ftmul@f3_as_product+2
  6960  012C  3007               	movlw	7
  6961  012D  00A6               	movwf	??___ftmul
  6962  012E  0826               	movf	??___ftmul,w
  6963  012F  00AE               	movwf	___ftmul@cntr
  6964  0130                     l1958:	
  6965  0130  1C20               	btfss	___ftmul@f1,0
  6966  0131  2938               	goto	l1962
  6967  0132  0823               	movf	___ftmul@f2,w
  6968  0133  07AB               	addwf	___ftmul@f3_as_product,f
  6969  0134  0824               	movf	___ftmul@f2+1,w
  6970  0135  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6971  0136  0825               	movf	___ftmul@f2+2,w
  6972  0137  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6973  0138                     l1962:	
  6974  0138  3001               	movlw	1
  6975  0139                     u2065:	
  6976  0139  36A2               	lsrf	___ftmul@f1+2,f
  6977  013A  0CA1               	rrf	___ftmul@f1+1,f
  6978  013B  0CA0               	rrf	___ftmul@f1,f
  6979  013C  0B89               	decfsz	9,f
  6980  013D  2939               	goto	u2065
  6981  013E  3001               	movlw	1
  6982  013F                     u2075:	
  6983  013F  35A3               	lslf	___ftmul@f2,f
  6984  0140  0DA4               	rlf	___ftmul@f2+1,f
  6985  0141  0DA5               	rlf	___ftmul@f2+2,f
  6986  0142  0B89               	decfsz	9,f
  6987  0143  293F               	goto	u2075
  6988  0144  3001               	movlw	1
  6989  0145  02AE               	subwf	___ftmul@cntr,f
  6990  0146  1D03               	btfss	3,2
  6991  0147  2930               	goto	l1958
  6992  0148  3009               	movlw	9
  6993  0149  00A6               	movwf	??___ftmul
  6994  014A  0826               	movf	??___ftmul,w
  6995  014B  00AE               	movwf	___ftmul@cntr
  6996  014C                     l1970:	
  6997  014C  1C20               	btfss	___ftmul@f1,0
  6998  014D  2954               	goto	l1974
  6999  014E  0823               	movf	___ftmul@f2,w
  7000  014F  07AB               	addwf	___ftmul@f3_as_product,f
  7001  0150  0824               	movf	___ftmul@f2+1,w
  7002  0151  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7003  0152  0825               	movf	___ftmul@f2+2,w
  7004  0153  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7005  0154                     l1974:	
  7006  0154  3001               	movlw	1
  7007  0155                     u2105:	
  7008  0155  36A2               	lsrf	___ftmul@f1+2,f
  7009  0156  0CA1               	rrf	___ftmul@f1+1,f
  7010  0157  0CA0               	rrf	___ftmul@f1,f
  7011  0158  0B89               	decfsz	9,f
  7012  0159  2955               	goto	u2105
  7013  015A  3001               	movlw	1
  7014  015B                     u2115:	
  7015  015B  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7016  015C  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7017  015D  0CAB               	rrf	___ftmul@f3_as_product,f
  7018  015E  0B89               	decfsz	9,f
  7019  015F  295B               	goto	u2115
  7020  0160  3001               	movlw	1
  7021  0161  02AE               	subwf	___ftmul@cntr,f
  7022  0162  1D03               	btfss	3,2
  7023  0163  294C               	goto	l1970
  7024  0164  082B               	movf	___ftmul@f3_as_product,w
  7025  0165  00F0               	movwf	___ftpack@arg
  7026  0166  082C               	movf	___ftmul@f3_as_product+1,w
  7027  0167  00F1               	movwf	___ftpack@arg+1
  7028  0168  082D               	movf	___ftmul@f3_as_product+2,w
  7029  0169  00F2               	movwf	___ftpack@arg+2
  7030  016A  082A               	movf	___ftmul@exp,w
  7031  016B  00A6               	movwf	??___ftmul
  7032  016C  0826               	movf	??___ftmul,w
  7033  016D  00F3               	movwf	___ftpack@exp
  7034  016E  082F               	movf	___ftmul@sign,w
  7035  016F  00A7               	movwf	??___ftmul+1
  7036  0170  0827               	movf	??___ftmul+1,w
  7037  0171  00F4               	movwf	___ftpack@sign
  7038  0172  318D  2545         	fcall	___ftpack
  7039  0174  0870               	movf	?___ftpack,w
  7040  0175  0020               	movlb	0	; select bank0
  7041  0176  00A0               	movwf	?___ftmul
  7042  0177  0871               	movf	?___ftpack+1,w
  7043  0178  00A1               	movwf	?___ftmul+1
  7044  0179  0872               	movf	?___ftpack+2,w
  7045  017A  00A2               	movwf	?___ftmul+2
  7046  017B  0008               	return
  7047  017C                     __end_of___ftmul:	
  7048                           
  7049                           	psect	text6
  7050  0B58                     __ptext6:	
  7051 ;; *************** function ___ftge *****************
  7052 ;; Defined at:
  7053 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  ff1             3    0[COMMON] float 
  7056 ;;  ff2             3    3[COMMON] float 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;		None               void
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:        9 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_log
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function ___ftge
  7083  0B58                     ___ftge:	
  7084                           
  7085                           ;incstack = 0
  7086                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7087  0B58  1FF2               	btfss	___ftge@ff1+2,7
  7088  0B59  2B6E               	goto	l2030
  7089  0B5A  0970               	comf	___ftge@ff1,w
  7090  0B5B  00F6               	movwf	??___ftge
  7091  0B5C  0971               	comf	___ftge@ff1+1,w
  7092  0B5D  00F7               	movwf	??___ftge+1
  7093  0B5E  0972               	comf	___ftge@ff1+2,w
  7094  0B5F  00F8               	movwf	??___ftge+2
  7095  0B60  0AF6               	incf	??___ftge,f
  7096  0B61  1903               	skipnz
  7097  0B62  0AF7               	incf	??___ftge+1,f
  7098  0B63  1903               	skipnz
  7099  0B64  0AF8               	incf	??___ftge+2,f
  7100  0B65  3000               	movlw	0
  7101  0B66  0776               	addwf	??___ftge,w
  7102  0B67  00F0               	movwf	___ftge@ff1
  7103  0B68  3000               	movlw	0
  7104  0B69  3D77               	addwfc	??___ftge+1,w
  7105  0B6A  00F1               	movwf	___ftge@ff1+1
  7106  0B6B  3080               	movlw	128
  7107  0B6C  3D78               	addwfc	??___ftge+2,w
  7108  0B6D  00F2               	movwf	___ftge@ff1+2
  7109  0B6E                     l2030:	
  7110  0B6E  1FF5               	btfss	___ftge@ff2+2,7
  7111  0B6F  2B84               	goto	l2034
  7112  0B70  0973               	comf	___ftge@ff2,w
  7113  0B71  00F6               	movwf	??___ftge
  7114  0B72  0974               	comf	___ftge@ff2+1,w
  7115  0B73  00F7               	movwf	??___ftge+1
  7116  0B74  0975               	comf	___ftge@ff2+2,w
  7117  0B75  00F8               	movwf	??___ftge+2
  7118  0B76  0AF6               	incf	??___ftge,f
  7119  0B77  1903               	skipnz
  7120  0B78  0AF7               	incf	??___ftge+1,f
  7121  0B79  1903               	skipnz
  7122  0B7A  0AF8               	incf	??___ftge+2,f
  7123  0B7B  3000               	movlw	0
  7124  0B7C  0776               	addwf	??___ftge,w
  7125  0B7D  00F3               	movwf	___ftge@ff2
  7126  0B7E  3000               	movlw	0
  7127  0B7F  3D77               	addwfc	??___ftge+1,w
  7128  0B80  00F4               	movwf	___ftge@ff2+1
  7129  0B81  3080               	movlw	128
  7130  0B82  3D78               	addwfc	??___ftge+2,w
  7131  0B83  00F5               	movwf	___ftge@ff2+2
  7132  0B84                     l2034:	
  7133  0B84  3080               	movlw	128
  7134  0B85  06F2               	xorwf	___ftge@ff1+2,f
  7135  0B86  3080               	movlw	128
  7136  0B87  06F5               	xorwf	___ftge@ff2+2,f
  7137  0B88  0875               	movf	___ftge@ff2+2,w
  7138  0B89  0272               	subwf	___ftge@ff1+2,w
  7139  0B8A  1D03               	skipz
  7140  0B8B  0008               	return
  7141  0B8C  0874               	movf	___ftge@ff2+1,w
  7142  0B8D  0271               	subwf	___ftge@ff1+1,w
  7143  0B8E  1D03               	skipz
  7144  0B8F  0008               	return
  7145  0B90  0873               	movf	___ftge@ff2,w
  7146  0B91  0270               	subwf	___ftge@ff1,w
  7147  0B92  0008               	return
  7148  0B93                     __end_of___ftge:	
  7149                           
  7150                           	psect	text7
  7151  0A98                     __ptext7:	
  7152 ;; *************** function ___ftsub *****************
  7153 ;; Defined at:
  7154 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  f2              3   45[BANK0 ] float 
  7157 ;;  f1              3   48[BANK0 ] float 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  3   45[BANK0 ] float 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0, pclath, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7169 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;Total ram usage:        6 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    2
  7176 ;; This function calls:
  7177 ;;		___ftadd
  7178 ;; This function is called by:
  7179 ;;		_tempCalc
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function ___ftsub
  7185  0A98                     ___ftsub:	
  7186                           
  7187                           ;incstack = 0
  7188                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7189  0A98  0020               	movlb	0	; select bank0
  7190  0A99  084F               	movf	___ftsub@f2+2,w
  7191  0A9A  044E               	iorwf	___ftsub@f2+1,w
  7192  0A9B  044D               	iorwf	___ftsub@f2,w
  7193  0A9C  1903               	skipnz
  7194  0A9D  2AA0               	goto	l2418
  7195  0A9E  3080               	movlw	128
  7196  0A9F  06CF               	xorwf	___ftsub@f2+2,f
  7197  0AA0                     l2418:	
  7198  0AA0  0850               	movf	___ftsub@f1,w
  7199  0AA1  00C0               	movwf	___ftadd@f1
  7200  0AA2  0851               	movf	___ftsub@f1+1,w
  7201  0AA3  00C1               	movwf	___ftadd@f1+1
  7202  0AA4  0852               	movf	___ftsub@f1+2,w
  7203  0AA5  00C2               	movwf	___ftadd@f1+2
  7204  0AA6  084D               	movf	___ftsub@f2,w
  7205  0AA7  00C3               	movwf	___ftadd@f2
  7206  0AA8  084E               	movf	___ftsub@f2+1,w
  7207  0AA9  00C4               	movwf	___ftadd@f2+1
  7208  0AAA  084F               	movf	___ftsub@f2+2,w
  7209  0AAB  00C5               	movwf	___ftadd@f2+2
  7210  0AAC  3182  2245         	fcall	___ftadd
  7211  0AAE  0020               	movlb	0	; select bank0
  7212  0AAF  0840               	movf	?___ftadd,w
  7213  0AB0  00CD               	movwf	?___ftsub
  7214  0AB1  0841               	movf	?___ftadd+1,w
  7215  0AB2  00CE               	movwf	?___ftsub+1
  7216  0AB3  0842               	movf	?___ftadd+2,w
  7217  0AB4  00CF               	movwf	?___ftsub+2
  7218  0AB5  0008               	return
  7219  0AB6                     __end_of___ftsub:	
  7220                           
  7221                           	psect	text8
  7222  0245                     __ptext8:	
  7223 ;; *************** function ___ftadd *****************
  7224 ;; Defined at:
  7225 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  f1              3   32[BANK0 ] float 
  7228 ;;  f2              3   35[BANK0 ] float 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  exp1            1   44[BANK0 ] unsigned char 
  7231 ;;  exp2            1   43[BANK0 ] unsigned char 
  7232 ;;  sign            1   42[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  3   32[BANK0 ] float 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7242 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;Total ram usage:       13 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    1
  7249 ;; This function calls:
  7250 ;;		___ftpack
  7251 ;; This function is called by:
  7252 ;;		_tempCalc
  7253 ;;		___ftsub
  7254 ;;		_log
  7255 ;;		_eval_poly
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function ___ftadd
  7261  0245                     ___ftadd:	
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7265  0245  0020               	movlb	0	; select bank0
  7266  0246  0840               	movf	___ftadd@f1,w
  7267  0247  00C6               	movwf	??___ftadd
  7268  0248  0841               	movf	___ftadd@f1+1,w
  7269  0249  00C7               	movwf	??___ftadd+1
  7270  024A  0842               	movf	___ftadd@f1+2,w
  7271  024B  00C8               	movwf	??___ftadd+2
  7272  024C  1003               	clrc
  7273  024D  0D47               	rlf	??___ftadd+1,w
  7274  024E  0D48               	rlf	??___ftadd+2,w
  7275  024F  00C9               	movwf	??___ftadd+3
  7276  0250  0849               	movf	??___ftadd+3,w
  7277  0251  00CC               	movwf	___ftadd@exp1
  7278  0252  0843               	movf	___ftadd@f2,w
  7279  0253  00C6               	movwf	??___ftadd
  7280  0254  0844               	movf	___ftadd@f2+1,w
  7281  0255  00C7               	movwf	??___ftadd+1
  7282  0256  0845               	movf	___ftadd@f2+2,w
  7283  0257  00C8               	movwf	??___ftadd+2
  7284  0258  1003               	clrc
  7285  0259  0D47               	rlf	??___ftadd+1,w
  7286  025A  0D48               	rlf	??___ftadd+2,w
  7287  025B  00C9               	movwf	??___ftadd+3
  7288  025C  0849               	movf	??___ftadd+3,w
  7289  025D  00CB               	movwf	___ftadd@exp2
  7290  025E  084C               	movf	___ftadd@exp1,w
  7291  025F  1903               	btfsc	3,2
  7292  0260  2A6D               	goto	l1870
  7293  0261  084B               	movf	___ftadd@exp2,w
  7294  0262  024C               	subwf	___ftadd@exp1,w
  7295  0263  1803               	skipnc
  7296  0264  2A74               	goto	l1874
  7297  0265  034C               	decf	___ftadd@exp1,w
  7298  0266  3AFF               	xorlw	255
  7299  0267  074B               	addwf	___ftadd@exp2,w
  7300  0268  00C6               	movwf	??___ftadd
  7301  0269  3019               	movlw	25
  7302  026A  0246               	subwf	??___ftadd,w
  7303  026B  1C03               	skipc
  7304  026C  2A74               	goto	l1874
  7305  026D                     l1870:	
  7306  026D  0843               	movf	___ftadd@f2,w
  7307  026E  00C0               	movwf	?___ftadd
  7308  026F  0844               	movf	___ftadd@f2+1,w
  7309  0270  00C1               	movwf	?___ftadd+1
  7310  0271  0845               	movf	___ftadd@f2+2,w
  7311  0272  00C2               	movwf	?___ftadd+2
  7312  0273  0008               	return
  7313  0274                     l1874:	
  7314  0274  084B               	movf	___ftadd@exp2,w
  7315  0275  1903               	btfsc	3,2
  7316  0276  0008               	return
  7317  0277  084C               	movf	___ftadd@exp1,w
  7318  0278  024B               	subwf	___ftadd@exp2,w
  7319  0279  1803               	skipnc
  7320  027A  2A83               	goto	l1880
  7321  027B  034B               	decf	___ftadd@exp2,w
  7322  027C  3AFF               	xorlw	255
  7323  027D  074C               	addwf	___ftadd@exp1,w
  7324  027E  00C6               	movwf	??___ftadd
  7325  027F  3019               	movlw	25
  7326  0280  0246               	subwf	??___ftadd,w
  7327  0281  1803               	btfsc	3,0
  7328  0282  0008               	return
  7329  0283                     l1880:	
  7330  0283  3006               	movlw	6
  7331  0284  00C6               	movwf	??___ftadd
  7332  0285  0846               	movf	??___ftadd,w
  7333  0286  00CA               	movwf	___ftadd@sign
  7334  0287  1BC2               	btfsc	___ftadd@f1+2,7
  7335  0288  17CA               	bsf	___ftadd@sign,7
  7336  0289  1BC5               	btfsc	___ftadd@f2+2,7
  7337  028A  174A               	bsf	___ftadd@sign,6
  7338  028B  17C1               	bsf	___ftadd@f1+1,7
  7339  028C  30FF               	movlw	255
  7340  028D  05C0               	andwf	___ftadd@f1,f
  7341  028E  30FF               	movlw	255
  7342  028F  05C1               	andwf	___ftadd@f1+1,f
  7343  0290  3000               	movlw	0
  7344  0291  05C2               	andwf	___ftadd@f1+2,f
  7345  0292  17C4               	bsf	___ftadd@f2+1,7
  7346  0293  30FF               	movlw	255
  7347  0294  05C3               	andwf	___ftadd@f2,f
  7348  0295  30FF               	movlw	255
  7349  0296  05C4               	andwf	___ftadd@f2+1,f
  7350  0297  3000               	movlw	0
  7351  0298  05C5               	andwf	___ftadd@f2+2,f
  7352  0299  084B               	movf	___ftadd@exp2,w
  7353  029A  024C               	subwf	___ftadd@exp1,w
  7354  029B  1803               	skipnc
  7355  029C  2ABF               	goto	l1902
  7356  029D                     l1892:	
  7357  029D  3001               	movlw	1
  7358  029E                     u1875:	
  7359  029E  35C3               	lslf	___ftadd@f2,f
  7360  029F  0DC4               	rlf	___ftadd@f2+1,f
  7361  02A0  0DC5               	rlf	___ftadd@f2+2,f
  7362  02A1  0B89               	decfsz	9,f
  7363  02A2  2A9E               	goto	u1875
  7364  02A3  3001               	movlw	1
  7365  02A4  02CB               	subwf	___ftadd@exp2,f
  7366  02A5  084B               	movf	___ftadd@exp2,w
  7367  02A6  064C               	xorwf	___ftadd@exp1,w
  7368  02A7  1903               	skipnz
  7369  02A8  2ABA               	goto	l1900
  7370  02A9  3001               	movlw	1
  7371  02AA  02CA               	subwf	___ftadd@sign,f
  7372  02AB  084A               	movf	___ftadd@sign,w
  7373  02AC  3907               	andlw	7
  7374  02AD  1903               	btfsc	3,2
  7375  02AE  2ABA               	goto	l1900
  7376  02AF  2A9D               	goto	l1892
  7377  02B0                     l1898:	
  7378  02B0  3001               	movlw	1
  7379  02B1                     u1905:	
  7380  02B1  36C2               	lsrf	___ftadd@f1+2,f
  7381  02B2  0CC1               	rrf	___ftadd@f1+1,f
  7382  02B3  0CC0               	rrf	___ftadd@f1,f
  7383  02B4  0B89               	decfsz	9,f
  7384  02B5  2AB1               	goto	u1905
  7385  02B6  3001               	movlw	1
  7386  02B7  00C6               	movwf	??___ftadd
  7387  02B8  0846               	movf	??___ftadd,w
  7388  02B9  07CC               	addwf	___ftadd@exp1,f
  7389  02BA                     l1900:	
  7390  02BA  084C               	movf	___ftadd@exp1,w
  7391  02BB  064B               	xorwf	___ftadd@exp2,w
  7392  02BC  1903               	btfsc	3,2
  7393  02BD  2AE4               	goto	l614
  7394  02BE  2AB0               	goto	l1898
  7395  02BF                     l1902:	
  7396  02BF  084C               	movf	___ftadd@exp1,w
  7397  02C0  024B               	subwf	___ftadd@exp2,w
  7398  02C1  1803               	skipnc
  7399  02C2  2AE4               	goto	l614
  7400  02C3                     l1904:	
  7401  02C3  3001               	movlw	1
  7402  02C4                     u1935:	
  7403  02C4  35C0               	lslf	___ftadd@f1,f
  7404  02C5  0DC1               	rlf	___ftadd@f1+1,f
  7405  02C6  0DC2               	rlf	___ftadd@f1+2,f
  7406  02C7  0B89               	decfsz	9,f
  7407  02C8  2AC4               	goto	u1935
  7408  02C9  3001               	movlw	1
  7409  02CA  02CC               	subwf	___ftadd@exp1,f
  7410  02CB  084B               	movf	___ftadd@exp2,w
  7411  02CC  064C               	xorwf	___ftadd@exp1,w
  7412  02CD  1903               	skipnz
  7413  02CE  2AE0               	goto	l1912
  7414  02CF  3001               	movlw	1
  7415  02D0  02CA               	subwf	___ftadd@sign,f
  7416  02D1  084A               	movf	___ftadd@sign,w
  7417  02D2  3907               	andlw	7
  7418  02D3  1903               	btfsc	3,2
  7419  02D4  2AE0               	goto	l1912
  7420  02D5  2AC3               	goto	l1904
  7421  02D6                     l1910:	
  7422  02D6  3001               	movlw	1
  7423  02D7                     u1965:	
  7424  02D7  36C5               	lsrf	___ftadd@f2+2,f
  7425  02D8  0CC4               	rrf	___ftadd@f2+1,f
  7426  02D9  0CC3               	rrf	___ftadd@f2,f
  7427  02DA  0B89               	decfsz	9,f
  7428  02DB  2AD7               	goto	u1965
  7429  02DC  3001               	movlw	1
  7430  02DD  00C6               	movwf	??___ftadd
  7431  02DE  0846               	movf	??___ftadd,w
  7432  02DF  07CB               	addwf	___ftadd@exp2,f
  7433  02E0                     l1912:	
  7434  02E0  084C               	movf	___ftadd@exp1,w
  7435  02E1  064B               	xorwf	___ftadd@exp2,w
  7436  02E2  1D03               	skipz
  7437  02E3  2AD6               	goto	l1910
  7438  02E4                     l614:	
  7439  02E4  1FCA               	btfss	___ftadd@sign,7
  7440  02E5  2AF6               	goto	l1916
  7441  02E6  30FF               	movlw	255
  7442  02E7  06C0               	xorwf	___ftadd@f1,f
  7443  02E8  30FF               	movlw	255
  7444  02E9  06C1               	xorwf	___ftadd@f1+1,f
  7445  02EA  30FF               	movlw	255
  7446  02EB  06C2               	xorwf	___ftadd@f1+2,f
  7447  02EC  3001               	movlw	1
  7448  02ED  07C0               	addwf	___ftadd@f1,f
  7449  02EE  3000               	movlw	0
  7450  02EF  1803               	skipnc
  7451  02F0  3001               	movlw	1
  7452  02F1  07C1               	addwf	___ftadd@f1+1,f
  7453  02F2  3000               	movlw	0
  7454  02F3  1803               	skipnc
  7455  02F4  3001               	movlw	1
  7456  02F5  07C2               	addwf	___ftadd@f1+2,f
  7457  02F6                     l1916:	
  7458  02F6  1F4A               	btfss	___ftadd@sign,6
  7459  02F7  2B08               	goto	l1920
  7460  02F8  30FF               	movlw	255
  7461  02F9  06C3               	xorwf	___ftadd@f2,f
  7462  02FA  30FF               	movlw	255
  7463  02FB  06C4               	xorwf	___ftadd@f2+1,f
  7464  02FC  30FF               	movlw	255
  7465  02FD  06C5               	xorwf	___ftadd@f2+2,f
  7466  02FE  3001               	movlw	1
  7467  02FF  07C3               	addwf	___ftadd@f2,f
  7468  0300  3000               	movlw	0
  7469  0301  1803               	skipnc
  7470  0302  3001               	movlw	1
  7471  0303  07C4               	addwf	___ftadd@f2+1,f
  7472  0304  3000               	movlw	0
  7473  0305  1803               	skipnc
  7474  0306  3001               	movlw	1
  7475  0307  07C5               	addwf	___ftadd@f2+2,f
  7476  0308                     l1920:	
  7477  0308  01CA               	clrf	___ftadd@sign
  7478  0309  0840               	movf	___ftadd@f1,w
  7479  030A  07C3               	addwf	___ftadd@f2,f
  7480  030B  0841               	movf	___ftadd@f1+1,w
  7481  030C  3DC4               	addwfc	___ftadd@f2+1,f
  7482  030D  0842               	movf	___ftadd@f1+2,w
  7483  030E  3DC5               	addwfc	___ftadd@f2+2,f
  7484  030F  1FC5               	btfss	___ftadd@f2+2,7
  7485  0310  2B23               	goto	l1930
  7486  0311  30FF               	movlw	255
  7487  0312  06C3               	xorwf	___ftadd@f2,f
  7488  0313  30FF               	movlw	255
  7489  0314  06C4               	xorwf	___ftadd@f2+1,f
  7490  0315  30FF               	movlw	255
  7491  0316  06C5               	xorwf	___ftadd@f2+2,f
  7492  0317  3001               	movlw	1
  7493  0318  07C3               	addwf	___ftadd@f2,f
  7494  0319  3000               	movlw	0
  7495  031A  1803               	skipnc
  7496  031B  3001               	movlw	1
  7497  031C  07C4               	addwf	___ftadd@f2+1,f
  7498  031D  3000               	movlw	0
  7499  031E  1803               	skipnc
  7500  031F  3001               	movlw	1
  7501  0320  07C5               	addwf	___ftadd@f2+2,f
  7502  0321  01CA               	clrf	___ftadd@sign
  7503  0322  0ACA               	incf	___ftadd@sign,f
  7504  0323                     l1930:	
  7505  0323  0843               	movf	___ftadd@f2,w
  7506  0324  00F0               	movwf	___ftpack@arg
  7507  0325  0844               	movf	___ftadd@f2+1,w
  7508  0326  00F1               	movwf	___ftpack@arg+1
  7509  0327  0845               	movf	___ftadd@f2+2,w
  7510  0328  00F2               	movwf	___ftpack@arg+2
  7511  0329  084C               	movf	___ftadd@exp1,w
  7512  032A  00C6               	movwf	??___ftadd
  7513  032B  0846               	movf	??___ftadd,w
  7514  032C  00F3               	movwf	___ftpack@exp
  7515  032D  084A               	movf	___ftadd@sign,w
  7516  032E  00C7               	movwf	??___ftadd+1
  7517  032F  0847               	movf	??___ftadd+1,w
  7518  0330  00F4               	movwf	___ftpack@sign
  7519  0331  318D  2545         	fcall	___ftpack
  7520  0333  0870               	movf	?___ftpack,w
  7521  0334  0020               	movlb	0	; select bank0
  7522  0335  00C0               	movwf	?___ftadd
  7523  0336  0871               	movf	?___ftpack+1,w
  7524  0337  00C1               	movwf	?___ftadd+1
  7525  0338  0872               	movf	?___ftpack+2,w
  7526  0339  00C2               	movwf	?___ftadd+2
  7527  033A  0008               	return
  7528  033B                     __end_of___ftadd:	
  7529                           
  7530                           	psect	text9
  7531  0F57                     __ptext9:	
  7532 ;; *************** function ___ftdiv *****************
  7533 ;; Defined at:
  7534 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  f2              3   16[BANK0 ] float 
  7537 ;;  f1              3   19[BANK0 ] float 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  f3              3   27[BANK0 ] float 
  7540 ;;  sign            1   31[BANK0 ] unsigned char 
  7541 ;;  exp             1   30[BANK0 ] unsigned char 
  7542 ;;  cntr            1   26[BANK0 ] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  3   16[BANK0 ] float 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, pclath, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7552 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;Total ram usage:       16 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    1
  7559 ;; This function calls:
  7560 ;;		___ftpack
  7561 ;; This function is called by:
  7562 ;;		_tempCalc
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function ___ftdiv
  7568  0F57                     ___ftdiv:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7572  0F57  0020               	movlb	0	; select bank0
  7573  0F58  0833               	movf	___ftdiv@f1,w
  7574  0F59  00B6               	movwf	??___ftdiv
  7575  0F5A  0834               	movf	___ftdiv@f1+1,w
  7576  0F5B  00B7               	movwf	??___ftdiv+1
  7577  0F5C  0835               	movf	___ftdiv@f1+2,w
  7578  0F5D  00B8               	movwf	??___ftdiv+2
  7579  0F5E  1003               	clrc
  7580  0F5F  0D37               	rlf	??___ftdiv+1,w
  7581  0F60  0D38               	rlf	??___ftdiv+2,w
  7582  0F61  00B9               	movwf	??___ftdiv+3
  7583  0F62  0839               	movf	??___ftdiv+3,w
  7584  0F63  00BE               	movwf	___ftdiv@exp
  7585  0F64  083E               	movf	___ftdiv@exp,w
  7586  0F65  1D03               	btfss	3,2
  7587  0F66  2F6E               	goto	l2378
  7588  0F67  3000               	movlw	0
  7589  0F68  00B0               	movwf	?___ftdiv
  7590  0F69  3000               	movlw	0
  7591  0F6A  00B1               	movwf	?___ftdiv+1
  7592  0F6B  3000               	movlw	0
  7593  0F6C  00B2               	movwf	?___ftdiv+2
  7594  0F6D  0008               	return
  7595  0F6E                     l2378:	
  7596  0F6E  0830               	movf	___ftdiv@f2,w
  7597  0F6F  00B6               	movwf	??___ftdiv
  7598  0F70  0831               	movf	___ftdiv@f2+1,w
  7599  0F71  00B7               	movwf	??___ftdiv+1
  7600  0F72  0832               	movf	___ftdiv@f2+2,w
  7601  0F73  00B8               	movwf	??___ftdiv+2
  7602  0F74  1003               	clrc
  7603  0F75  0D37               	rlf	??___ftdiv+1,w
  7604  0F76  0D38               	rlf	??___ftdiv+2,w
  7605  0F77  00B9               	movwf	??___ftdiv+3
  7606  0F78  0839               	movf	??___ftdiv+3,w
  7607  0F79  00BF               	movwf	___ftdiv@sign
  7608  0F7A  083F               	movf	___ftdiv@sign,w
  7609  0F7B  1D03               	btfss	3,2
  7610  0F7C  2F84               	goto	l2384
  7611  0F7D  3000               	movlw	0
  7612  0F7E  00B0               	movwf	?___ftdiv
  7613  0F7F  3000               	movlw	0
  7614  0F80  00B1               	movwf	?___ftdiv+1
  7615  0F81  3000               	movlw	0
  7616  0F82  00B2               	movwf	?___ftdiv+2
  7617  0F83  0008               	return
  7618  0F84                     l2384:	
  7619  0F84  3000               	movlw	0
  7620  0F85  00BB               	movwf	___ftdiv@f3
  7621  0F86  3000               	movlw	0
  7622  0F87  00BC               	movwf	___ftdiv@f3+1
  7623  0F88  3000               	movlw	0
  7624  0F89  00BD               	movwf	___ftdiv@f3+2
  7625  0F8A  3089               	movlw	137
  7626  0F8B  073F               	addwf	___ftdiv@sign,w
  7627  0F8C  00B6               	movwf	??___ftdiv
  7628  0F8D  0836               	movf	??___ftdiv,w
  7629  0F8E  02BE               	subwf	___ftdiv@exp,f
  7630  0F8F  0833               	movf	___ftdiv@f1,w
  7631  0F90  00B6               	movwf	??___ftdiv
  7632  0F91  0834               	movf	___ftdiv@f1+1,w
  7633  0F92  00B7               	movwf	??___ftdiv+1
  7634  0F93  0835               	movf	___ftdiv@f1+2,w
  7635  0F94  00B8               	movwf	??___ftdiv+2
  7636  0F95  3010               	movlw	16
  7637  0F96                     u2605:	
  7638  0F96  36B8               	lsrf	??___ftdiv+2,f
  7639  0F97  0CB7               	rrf	??___ftdiv+1,f
  7640  0F98  0CB6               	rrf	??___ftdiv,f
  7641  0F99  0B89               	decfsz	9,f
  7642  0F9A  2F96               	goto	u2605
  7643  0F9B  0836               	movf	??___ftdiv,w
  7644  0F9C  00B9               	movwf	??___ftdiv+3
  7645  0F9D  0839               	movf	??___ftdiv+3,w
  7646  0F9E  00BF               	movwf	___ftdiv@sign
  7647  0F9F  0830               	movf	___ftdiv@f2,w
  7648  0FA0  00B6               	movwf	??___ftdiv
  7649  0FA1  0831               	movf	___ftdiv@f2+1,w
  7650  0FA2  00B7               	movwf	??___ftdiv+1
  7651  0FA3  0832               	movf	___ftdiv@f2+2,w
  7652  0FA4  00B8               	movwf	??___ftdiv+2
  7653  0FA5  3010               	movlw	16
  7654  0FA6                     u2615:	
  7655  0FA6  36B8               	lsrf	??___ftdiv+2,f
  7656  0FA7  0CB7               	rrf	??___ftdiv+1,f
  7657  0FA8  0CB6               	rrf	??___ftdiv,f
  7658  0FA9  0B89               	decfsz	9,f
  7659  0FAA  2FA6               	goto	u2615
  7660  0FAB  0836               	movf	??___ftdiv,w
  7661  0FAC  00B9               	movwf	??___ftdiv+3
  7662  0FAD  0839               	movf	??___ftdiv+3,w
  7663  0FAE  06BF               	xorwf	___ftdiv@sign,f
  7664  0FAF  3080               	movlw	128
  7665  0FB0  00B6               	movwf	??___ftdiv
  7666  0FB1  0836               	movf	??___ftdiv,w
  7667  0FB2  05BF               	andwf	___ftdiv@sign,f
  7668  0FB3  17B4               	bsf	___ftdiv@f1+1,7
  7669  0FB4  30FF               	movlw	255
  7670  0FB5  05B3               	andwf	___ftdiv@f1,f
  7671  0FB6  30FF               	movlw	255
  7672  0FB7  05B4               	andwf	___ftdiv@f1+1,f
  7673  0FB8  3000               	movlw	0
  7674  0FB9  05B5               	andwf	___ftdiv@f1+2,f
  7675  0FBA  17B1               	bsf	___ftdiv@f2+1,7
  7676  0FBB  30FF               	movlw	255
  7677  0FBC  05B0               	andwf	___ftdiv@f2,f
  7678  0FBD  30FF               	movlw	255
  7679  0FBE  05B1               	andwf	___ftdiv@f2+1,f
  7680  0FBF  3000               	movlw	0
  7681  0FC0  05B2               	andwf	___ftdiv@f2+2,f
  7682  0FC1  3018               	movlw	24
  7683  0FC2  00B6               	movwf	??___ftdiv
  7684  0FC3  0836               	movf	??___ftdiv,w
  7685  0FC4  00BA               	movwf	___ftdiv@cntr
  7686  0FC5                     l2398:	
  7687  0FC5  3001               	movlw	1
  7688  0FC6                     u2625:	
  7689  0FC6  35BB               	lslf	___ftdiv@f3,f
  7690  0FC7  0DBC               	rlf	___ftdiv@f3+1,f
  7691  0FC8  0DBD               	rlf	___ftdiv@f3+2,f
  7692  0FC9  0B89               	decfsz	9,f
  7693  0FCA  2FC6               	goto	u2625
  7694  0FCB  0832               	movf	___ftdiv@f2+2,w
  7695  0FCC  0235               	subwf	___ftdiv@f1+2,w
  7696  0FCD  1D03               	skipz
  7697  0FCE  2FD5               	goto	u2635
  7698  0FCF  0831               	movf	___ftdiv@f2+1,w
  7699  0FD0  0234               	subwf	___ftdiv@f1+1,w
  7700  0FD1  1D03               	skipz
  7701  0FD2  2FD5               	goto	u2635
  7702  0FD3  0830               	movf	___ftdiv@f2,w
  7703  0FD4  0233               	subwf	___ftdiv@f1,w
  7704  0FD5                     u2635:	
  7705  0FD5  1C03               	skipc
  7706  0FD6  2FDE               	goto	l2406
  7707  0FD7  0830               	movf	___ftdiv@f2,w
  7708  0FD8  02B3               	subwf	___ftdiv@f1,f
  7709  0FD9  0831               	movf	___ftdiv@f2+1,w
  7710  0FDA  3BB4               	subwfb	___ftdiv@f1+1,f
  7711  0FDB  0832               	movf	___ftdiv@f2+2,w
  7712  0FDC  3BB5               	subwfb	___ftdiv@f1+2,f
  7713  0FDD  143B               	bsf	___ftdiv@f3,0
  7714  0FDE                     l2406:	
  7715  0FDE  3001               	movlw	1
  7716  0FDF                     u2645:	
  7717  0FDF  35B3               	lslf	___ftdiv@f1,f
  7718  0FE0  0DB4               	rlf	___ftdiv@f1+1,f
  7719  0FE1  0DB5               	rlf	___ftdiv@f1+2,f
  7720  0FE2  0B89               	decfsz	9,f
  7721  0FE3  2FDF               	goto	u2645
  7722  0FE4  3001               	movlw	1
  7723  0FE5  02BA               	subwf	___ftdiv@cntr,f
  7724  0FE6  1D03               	btfss	3,2
  7725  0FE7  2FC5               	goto	l2398
  7726  0FE8  083B               	movf	___ftdiv@f3,w
  7727  0FE9  00F0               	movwf	___ftpack@arg
  7728  0FEA  083C               	movf	___ftdiv@f3+1,w
  7729  0FEB  00F1               	movwf	___ftpack@arg+1
  7730  0FEC  083D               	movf	___ftdiv@f3+2,w
  7731  0FED  00F2               	movwf	___ftpack@arg+2
  7732  0FEE  083E               	movf	___ftdiv@exp,w
  7733  0FEF  00B6               	movwf	??___ftdiv
  7734  0FF0  0836               	movf	??___ftdiv,w
  7735  0FF1  00F3               	movwf	___ftpack@exp
  7736  0FF2  083F               	movf	___ftdiv@sign,w
  7737  0FF3  00B7               	movwf	??___ftdiv+1
  7738  0FF4  0837               	movf	??___ftdiv+1,w
  7739  0FF5  00F4               	movwf	___ftpack@sign
  7740  0FF6  318D  2545         	fcall	___ftpack
  7741  0FF8  0870               	movf	?___ftpack,w
  7742  0FF9  0020               	movlb	0	; select bank0
  7743  0FFA  00B0               	movwf	?___ftdiv
  7744  0FFB  0871               	movf	?___ftpack+1,w
  7745  0FFC  00B1               	movwf	?___ftdiv+1
  7746  0FFD  0872               	movf	?___ftpack+2,w
  7747  0FFE  00B2               	movwf	?___ftdiv+2
  7748  0FFF  0008               	return
  7749  1000                     __end_of___ftdiv:	
  7750                           
  7751                           	psect	text10
  7752  055C                     __ptext10:	
  7753 ;; *************** function _readAnalog *****************
  7754 ;; Defined at:
  7755 ;;		line 38 in file "adc.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  channel         2    6[BANK0 ] int 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  value           2   11[COMMON] int 
  7760 ;;  analog_chann    2    9[COMMON] int 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  2    6[BANK0 ] int 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7774 ;;Total ram usage:       21 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    1
  7777 ;; This function calls:
  7778 ;;		_ADCRead
  7779 ;;		___aldiv
  7780 ;;		___bmul
  7781 ;; This function is called by:
  7782 ;;		_main
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           
  7787                           ;psect for function _readAnalog
  7788  055C                     _readAnalog:	
  7789                           
  7790                           ;adc.c: 40: int value;
  7791                           ;adc.c: 42: int analog_channel = channels[channel];
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7795  055C  0020               	movlb	0	; select bank0
  7796  055D  3526               	lslf	readAnalog@channel,w
  7797  055E  3EE4               	addlw	(low (_channels| 0))& (0+255)
  7798  055F  0086               	movwf	6
  7799  0560  0187               	clrf	7
  7800  0561  3F40               	moviw [0]fsr1
  7801  0562  00F9               	movwf	readAnalog@analog_channel
  7802  0563  3F41               	moviw [1]fsr1
  7803  0564  00FA               	movwf	readAnalog@analog_channel+1
  7804                           
  7805                           ;adc.c: 44: value = ADCRead(analog_channel);
  7806  0565  0879               	movf	readAnalog@analog_channel,w
  7807  0566  3189  21EC  3185   	fcall	_ADCRead
  7808  0569  0871               	movf	?_ADCRead+1,w
  7809  056A  00FC               	movwf	readAnalog@value+1
  7810  056B  0870               	movf	?_ADCRead,w
  7811  056C  00FB               	movwf	readAnalog@value
  7812                           
  7813                           ;adc.c: 46: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7814  056D  0020               	movlb	0	; select bank0
  7815  056E  0826               	movf	readAnalog@channel,w
  7816  056F  00A8               	movwf	??_readAnalog
  7817  0570  3001               	movlw	1
  7818  0571                     u2685:	
  7819  0571  35A8               	lslf	??_readAnalog,f
  7820  0572  3EFF               	addlw	-1
  7821  0573  1D03               	skipz
  7822  0574  2D71               	goto	u2685
  7823  0575  3528               	lslf	??_readAnalog,w
  7824  0576  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7825  0577  0086               	movwf	6
  7826  0578  0187               	clrf	7
  7827  0579  3F40               	moviw [0]fsr1
  7828  057A  00A9               	movwf	??_readAnalog+1
  7829  057B  3F41               	moviw [1]fsr1
  7830  057C  00AA               	movwf	??_readAnalog+2
  7831  057D  3F42               	moviw [2]fsr1
  7832  057E  00AB               	movwf	??_readAnalog+3
  7833  057F  3F43               	moviw [3]fsr1
  7834  0580  00AC               	movwf	??_readAnalog+4
  7835  0581  0021               	movlb	1	; select bank1
  7836  0582  0842               	movf	_sampleIndex^(0+128),w
  7837  0583  0020               	movlb	0	; select bank0
  7838  0584  00AD               	movwf	??_readAnalog+5
  7839  0585  3001               	movlw	1
  7840  0586                     u2695:	
  7841  0586  35AD               	lslf	??_readAnalog+5,f
  7842  0587  0B89               	decfsz	9,f
  7843  0588  2D86               	goto	u2695
  7844  0589  3028               	movlw	40
  7845  058A  00AE               	movwf	??_readAnalog+6
  7846  058B  082E               	movf	??_readAnalog+6,w
  7847  058C  00F0               	movwf	___bmul@multiplicand
  7848  058D  0826               	movf	readAnalog@channel,w
  7849  058E  318A  220A  3185   	fcall	___bmul
  7850  0591  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  7851  0592  0020               	movlb	0	; select bank0
  7852  0593  072D               	addwf	??_readAnalog+5,w
  7853  0594  00AF               	movwf	??_readAnalog+7
  7854  0595  082F               	movf	??_readAnalog+7,w
  7855  0596  0086               	movwf	6
  7856  0597  3001               	movlw	1	; select bank3/4
  7857  0598  0087               	movwf	7
  7858  0599  3F40               	moviw [0]fsr1
  7859  059A  00B0               	movwf	??_readAnalog+8
  7860  059B  3F41               	moviw [1]fsr1
  7861  059C  00B1               	movwf	??_readAnalog+9
  7862  059D  0830               	movf	??_readAnalog+8,w
  7863  059E  00B2               	movwf	??_readAnalog+10
  7864  059F  0831               	movf	??_readAnalog+9,w
  7865  05A0  00B3               	movwf	??_readAnalog+11
  7866  05A1  01B4               	clrf	??_readAnalog+12
  7867  05A2  01B5               	clrf	??_readAnalog+13
  7868  05A3  09B2               	comf	??_readAnalog+10,f
  7869  05A4  09B3               	comf	??_readAnalog+11,f
  7870  05A5  09B4               	comf	??_readAnalog+12,f
  7871  05A6  09B5               	comf	??_readAnalog+13,f
  7872  05A7  0AB2               	incf	??_readAnalog+10,f
  7873  05A8  1903               	skipnz
  7874  05A9  0AB3               	incf	??_readAnalog+11,f
  7875  05AA  1903               	skipnz
  7876  05AB  0AB4               	incf	??_readAnalog+12,f
  7877  05AC  1903               	skipnz
  7878  05AD  0AB5               	incf	??_readAnalog+13,f
  7879  05AE  0832               	movf	??_readAnalog+10,w
  7880  05AF  07A9               	addwf	??_readAnalog+1,f
  7881  05B0  0833               	movf	??_readAnalog+11,w
  7882  05B1  3DAA               	addwfc	??_readAnalog+2,f
  7883  05B2  0834               	movf	??_readAnalog+12,w
  7884  05B3  3DAB               	addwfc	??_readAnalog+3,f
  7885  05B4  0835               	movf	??_readAnalog+13,w
  7886  05B5  3DAC               	addwfc	??_readAnalog+4,f
  7887  05B6  0826               	movf	readAnalog@channel,w
  7888  05B7  00B6               	movwf	??_readAnalog+14
  7889  05B8  3001               	movlw	1
  7890  05B9                     u2705:	
  7891  05B9  35B6               	lslf	??_readAnalog+14,f
  7892  05BA  3EFF               	addlw	-1
  7893  05BB  1D03               	skipz
  7894  05BC  2DB9               	goto	u2705
  7895  05BD  3536               	lslf	??_readAnalog+14,w
  7896  05BE  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7897  05BF  0086               	movwf	6
  7898  05C0  0187               	clrf	7
  7899  05C1  0829               	movf	??_readAnalog+1,w
  7900  05C2  3FC0               	movwi [0]fsr1
  7901  05C3  082A               	movf	??_readAnalog+2,w
  7902  05C4  3FC1               	movwi [1]fsr1
  7903  05C5  082B               	movf	??_readAnalog+3,w
  7904  05C6  3FC2               	movwi [2]fsr1
  7905  05C7  082C               	movf	??_readAnalog+4,w
  7906  05C8  3FC3               	movwi [3]fsr1
  7907                           
  7908                           ;adc.c: 48: samples[channel][sampleIndex] = value;
  7909  05C9  0021               	movlb	1	; select bank1
  7910  05CA  0842               	movf	_sampleIndex^(0+128),w
  7911  05CB  0020               	movlb	0	; select bank0
  7912  05CC  00A8               	movwf	??_readAnalog
  7913  05CD  3001               	movlw	1
  7914  05CE                     u2715:	
  7915  05CE  35A8               	lslf	??_readAnalog,f
  7916  05CF  0B89               	decfsz	9,f
  7917  05D0  2DCE               	goto	u2715
  7918  05D1  3028               	movlw	40
  7919  05D2  00A9               	movwf	??_readAnalog+1
  7920  05D3  0829               	movf	??_readAnalog+1,w
  7921  05D4  00F0               	movwf	___bmul@multiplicand
  7922  05D5  0826               	movf	readAnalog@channel,w
  7923  05D6  318A  220A  3185   	fcall	___bmul
  7924  05D9  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  7925  05DA  0020               	movlb	0	; select bank0
  7926  05DB  0728               	addwf	??_readAnalog,w
  7927  05DC  00AA               	movwf	??_readAnalog+2
  7928  05DD  082A               	movf	??_readAnalog+2,w
  7929  05DE  0086               	movwf	6
  7930  05DF  3001               	movlw	1	; select bank3/4
  7931  05E0  0087               	movwf	7
  7932  05E1  087B               	movf	readAnalog@value,w
  7933  05E2  3FC0               	movwi [0]fsr1
  7934  05E3  087C               	movf	readAnalog@value+1,w
  7935  05E4  3FC1               	movwi [1]fsr1
  7936                           
  7937                           ;adc.c: 50: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7938  05E5  0826               	movf	readAnalog@channel,w
  7939  05E6  00A8               	movwf	??_readAnalog
  7940  05E7  3001               	movlw	1
  7941  05E8                     u2725:	
  7942  05E8  35A8               	lslf	??_readAnalog,f
  7943  05E9  3EFF               	addlw	-1
  7944  05EA  1D03               	skipz
  7945  05EB  2DE8               	goto	u2725
  7946  05EC  3528               	lslf	??_readAnalog,w
  7947  05ED  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7948  05EE  0086               	movwf	6
  7949  05EF  0187               	clrf	7
  7950  05F0  3F40               	moviw [0]fsr1
  7951  05F1  00A9               	movwf	??_readAnalog+1
  7952  05F2  3F41               	moviw [1]fsr1
  7953  05F3  00AA               	movwf	??_readAnalog+2
  7954  05F4  3F42               	moviw [2]fsr1
  7955  05F5  00AB               	movwf	??_readAnalog+3
  7956  05F6  3F43               	moviw [3]fsr1
  7957  05F7  00AC               	movwf	??_readAnalog+4
  7958  05F8  0021               	movlb	1	; select bank1
  7959  05F9  0842               	movf	_sampleIndex^(0+128),w
  7960  05FA  0020               	movlb	0	; select bank0
  7961  05FB  00AD               	movwf	??_readAnalog+5
  7962  05FC  3001               	movlw	1
  7963  05FD                     u2735:	
  7964  05FD  35AD               	lslf	??_readAnalog+5,f
  7965  05FE  0B89               	decfsz	9,f
  7966  05FF  2DFD               	goto	u2735
  7967  0600  3028               	movlw	40
  7968  0601  00AE               	movwf	??_readAnalog+6
  7969  0602  082E               	movf	??_readAnalog+6,w
  7970  0603  00F0               	movwf	___bmul@multiplicand
  7971  0604  0826               	movf	readAnalog@channel,w
  7972  0605  318A  220A  3185   	fcall	___bmul
  7973  0608  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  7974  0609  0020               	movlb	0	; select bank0
  7975  060A  072D               	addwf	??_readAnalog+5,w
  7976  060B  00AF               	movwf	??_readAnalog+7
  7977  060C  082F               	movf	??_readAnalog+7,w
  7978  060D  0086               	movwf	6
  7979  060E  3001               	movlw	1	; select bank3/4
  7980  060F  0087               	movwf	7
  7981  0610  3F40               	moviw [0]fsr1
  7982  0611  00B0               	movwf	??_readAnalog+8
  7983  0612  3F41               	moviw [1]fsr1
  7984  0613  00B1               	movwf	??_readAnalog+9
  7985  0614  0830               	movf	??_readAnalog+8,w
  7986  0615  00B2               	movwf	??_readAnalog+10
  7987  0616  0831               	movf	??_readAnalog+9,w
  7988  0617  00B3               	movwf	??_readAnalog+11
  7989  0618  01B4               	clrf	??_readAnalog+12
  7990  0619  01B5               	clrf	??_readAnalog+13
  7991  061A  0832               	movf	??_readAnalog+10,w
  7992  061B  07A9               	addwf	??_readAnalog+1,f
  7993  061C  0833               	movf	??_readAnalog+11,w
  7994  061D  3DAA               	addwfc	??_readAnalog+2,f
  7995  061E  0834               	movf	??_readAnalog+12,w
  7996  061F  3DAB               	addwfc	??_readAnalog+3,f
  7997  0620  0835               	movf	??_readAnalog+13,w
  7998  0621  3DAC               	addwfc	??_readAnalog+4,f
  7999  0622  0826               	movf	readAnalog@channel,w
  8000  0623  00B6               	movwf	??_readAnalog+14
  8001  0624  3001               	movlw	1
  8002  0625                     u2745:	
  8003  0625  35B6               	lslf	??_readAnalog+14,f
  8004  0626  3EFF               	addlw	-1
  8005  0627  1D03               	skipz
  8006  0628  2E25               	goto	u2745
  8007  0629  3536               	lslf	??_readAnalog+14,w
  8008  062A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8009  062B  0086               	movwf	6
  8010  062C  0187               	clrf	7
  8011  062D  0829               	movf	??_readAnalog+1,w
  8012  062E  3FC0               	movwi [0]fsr1
  8013  062F  082A               	movf	??_readAnalog+2,w
  8014  0630  3FC1               	movwi [1]fsr1
  8015  0631  082B               	movf	??_readAnalog+3,w
  8016  0632  3FC2               	movwi [2]fsr1
  8017  0633  082C               	movf	??_readAnalog+4,w
  8018  0634  3FC3               	movwi [3]fsr1
  8019                           
  8020                           ;adc.c: 52: if(channel>=(2-1))
  8021  0635  0827               	movf	readAnalog@channel+1,w
  8022  0636  3A80               	xorlw	128
  8023  0637  00A8               	movwf	??_readAnalog
  8024  0638  3080               	movlw	128
  8025  0639  0228               	subwf	??_readAnalog,w
  8026  063A  1D03               	skipz
  8027  063B  2E3E               	goto	u2755
  8028  063C  3001               	movlw	1
  8029  063D  0226               	subwf	readAnalog@channel,w
  8030  063E                     u2755:	
  8031  063E  1C03               	skipc
  8032  063F  2E4E               	goto	l2460
  8033                           
  8034                           ;adc.c: 53: {
  8035                           ;adc.c: 54: sampleIndex+=1;
  8036  0640  3001               	movlw	1
  8037  0641  0021               	movlb	1	; select bank1
  8038  0642  07C2               	addwf	_sampleIndex^(0+128),f
  8039  0643  3000               	movlw	0
  8040  0644  3DC3               	addwfc	(_sampleIndex+1)^(0+128),f
  8041                           
  8042                           ;adc.c: 55: if(sampleIndex >= 20)sampleIndex = 0;
  8043  0645  3000               	movlw	0
  8044  0646  0243               	subwf	(_sampleIndex+1)^(0+128),w
  8045  0647  3014               	movlw	20
  8046  0648  1903               	skipnz
  8047  0649  0242               	subwf	_sampleIndex^(0+128),w
  8048  064A  1C03               	skipc
  8049  064B  2E4E               	goto	l2460
  8050  064C  01C2               	clrf	_sampleIndex^(0+128)
  8051  064D  01C3               	clrf	(_sampleIndex+1)^(0+128)
  8052  064E                     l2460:	
  8053                           
  8054                           ;adc.c: 56: }
  8055                           ;adc.c: 58: value = totals[channel]/20;
  8056  064E  3000               	movlw	0
  8057  064F  00F3               	movwf	___aldiv@divisor+3
  8058  0650  3000               	movlw	0
  8059  0651  00F2               	movwf	___aldiv@divisor+2
  8060  0652  3000               	movlw	0
  8061  0653  00F1               	movwf	___aldiv@divisor+1
  8062  0654  3014               	movlw	20
  8063  0655  00F0               	movwf	___aldiv@divisor
  8064  0656  0020               	movlb	0	; select bank0
  8065  0657  0826               	movf	readAnalog@channel,w
  8066  0658  00A8               	movwf	??_readAnalog
  8067  0659  3001               	movlw	1
  8068  065A                     u2775:	
  8069  065A  35A8               	lslf	??_readAnalog,f
  8070  065B  3EFF               	addlw	-1
  8071  065C  1D03               	skipz
  8072  065D  2E5A               	goto	u2775
  8073  065E  3528               	lslf	??_readAnalog,w
  8074  065F  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8075  0660  0086               	movwf	6
  8076  0661  0187               	clrf	7
  8077  0662  3F40               	moviw [0]fsr1
  8078  0663  00F4               	movwf	___aldiv@dividend
  8079  0664  3F41               	moviw [1]fsr1
  8080  0665  00F5               	movwf	___aldiv@dividend+1
  8081  0666  3F42               	moviw [2]fsr1
  8082  0667  00F6               	movwf	___aldiv@dividend+2
  8083  0668  3F43               	moviw [3]fsr1
  8084  0669  00F7               	movwf	___aldiv@dividend+3
  8085  066A  318D  25A9         	fcall	___aldiv
  8086  066C  0871               	movf	?___aldiv+1,w
  8087  066D  00FC               	movwf	readAnalog@value+1
  8088  066E  0870               	movf	?___aldiv,w
  8089  066F  00FB               	movwf	readAnalog@value
  8090                           
  8091                           ;adc.c: 60: return value;
  8092  0670  087C               	movf	readAnalog@value+1,w
  8093  0671  0020               	movlb	0	; select bank0
  8094  0672  00A7               	movwf	?_readAnalog+1
  8095  0673  087B               	movf	readAnalog@value,w
  8096  0674  00A6               	movwf	?_readAnalog
  8097  0675  0008               	return
  8098  0676                     __end_of_readAnalog:	
  8099                           
  8100                           	psect	text11
  8101  0A0A                     __ptext11:	
  8102 ;; *************** function ___bmul *****************
  8103 ;; Defined at:
  8104 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  multiplier      1    wreg     unsigned char 
  8107 ;;  multiplicand    1    0[COMMON] unsigned char 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  multiplier      1    3[COMMON] unsigned char 
  8110 ;;  product         1    2[COMMON] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      unsigned char 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8120 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;Total ram usage:        4 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_readAnalog
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function ___bmul
  8135  0A0A                     ___bmul:	
  8136                           
  8137                           ;incstack = 0
  8138                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8139                           ;___bmul@multiplier stored from wreg
  8140  0A0A  00F3               	movwf	___bmul@multiplier
  8141  0A0B  01F2               	clrf	___bmul@product
  8142  0A0C                     l2238:	
  8143  0A0C  1C73               	btfss	___bmul@multiplier,0
  8144  0A0D  2A12               	goto	l2242
  8145  0A0E  0870               	movf	___bmul@multiplicand,w
  8146  0A0F  00F1               	movwf	??___bmul
  8147  0A10  0871               	movf	??___bmul,w
  8148  0A11  07F2               	addwf	___bmul@product,f
  8149  0A12                     l2242:	
  8150  0A12  1003               	clrc
  8151  0A13  0DF0               	rlf	___bmul@multiplicand,f
  8152  0A14  1003               	clrc
  8153  0A15  0CF3               	rrf	___bmul@multiplier,f
  8154  0A16  0873               	movf	___bmul@multiplier,w
  8155  0A17  1D03               	btfss	3,2
  8156  0A18  2A0C               	goto	l2238
  8157  0A19  0872               	movf	___bmul@product,w
  8158  0A1A  0008               	return
  8159  0A1B                     __end_of___bmul:	
  8160                           
  8161                           	psect	text12
  8162  0DA9                     __ptext12:	
  8163 ;; *************** function ___aldiv *****************
  8164 ;; Defined at:
  8165 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  divisor         4    0[COMMON] long 
  8168 ;;  dividend        4    4[COMMON] long 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  quotient        4    2[BANK0 ] long 
  8171 ;;  sign            1    1[BANK0 ] unsigned char 
  8172 ;;  counter         1    0[BANK0 ] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  4    0[COMMON] long 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8182 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;Total ram usage:       15 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_readAnalog
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           
  8196                           ;psect for function ___aldiv
  8197  0DA9                     ___aldiv:	
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8201  0DA9  0020               	movlb	0	; select bank0
  8202  0DAA  01A1               	clrf	___aldiv@sign
  8203  0DAB  1FF3               	btfss	___aldiv@divisor+3,7
  8204  0DAC  2DBA               	goto	l477
  8205  0DAD  09F0               	comf	___aldiv@divisor,f
  8206  0DAE  09F1               	comf	___aldiv@divisor+1,f
  8207  0DAF  09F2               	comf	___aldiv@divisor+2,f
  8208  0DB0  09F3               	comf	___aldiv@divisor+3,f
  8209  0DB1  0AF0               	incf	___aldiv@divisor,f
  8210  0DB2  1903               	skipnz
  8211  0DB3  0AF1               	incf	___aldiv@divisor+1,f
  8212  0DB4  1903               	skipnz
  8213  0DB5  0AF2               	incf	___aldiv@divisor+2,f
  8214  0DB6  1903               	skipnz
  8215  0DB7  0AF3               	incf	___aldiv@divisor+3,f
  8216  0DB8  01A1               	clrf	___aldiv@sign
  8217  0DB9  0AA1               	incf	___aldiv@sign,f
  8218  0DBA                     l477:	
  8219  0DBA  1FF7               	btfss	___aldiv@dividend+3,7
  8220  0DBB  2DCB               	goto	l2260
  8221  0DBC  09F4               	comf	___aldiv@dividend,f
  8222  0DBD  09F5               	comf	___aldiv@dividend+1,f
  8223  0DBE  09F6               	comf	___aldiv@dividend+2,f
  8224  0DBF  09F7               	comf	___aldiv@dividend+3,f
  8225  0DC0  0AF4               	incf	___aldiv@dividend,f
  8226  0DC1  1903               	skipnz
  8227  0DC2  0AF5               	incf	___aldiv@dividend+1,f
  8228  0DC3  1903               	skipnz
  8229  0DC4  0AF6               	incf	___aldiv@dividend+2,f
  8230  0DC5  1903               	skipnz
  8231  0DC6  0AF7               	incf	___aldiv@dividend+3,f
  8232  0DC7  3001               	movlw	1
  8233  0DC8  00F8               	movwf	??___aldiv
  8234  0DC9  0878               	movf	??___aldiv,w
  8235  0DCA  06A1               	xorwf	___aldiv@sign,f
  8236  0DCB                     l2260:	
  8237  0DCB  3000               	movlw	0
  8238  0DCC  00A5               	movwf	___aldiv@quotient+3
  8239  0DCD  3000               	movlw	0
  8240  0DCE  00A4               	movwf	___aldiv@quotient+2
  8241  0DCF  3000               	movlw	0
  8242  0DD0  00A3               	movwf	___aldiv@quotient+1
  8243  0DD1  3000               	movlw	0
  8244  0DD2  00A2               	movwf	___aldiv@quotient
  8245  0DD3  0873               	movf	___aldiv@divisor+3,w
  8246  0DD4  0472               	iorwf	___aldiv@divisor+2,w
  8247  0DD5  0471               	iorwf	___aldiv@divisor+1,w
  8248  0DD6  0470               	iorwf	___aldiv@divisor,w
  8249  0DD7  1903               	skipnz
  8250  0DD8  2E14               	goto	l2282
  8251  0DD9  01A0               	clrf	___aldiv@counter
  8252  0DDA  0AA0               	incf	___aldiv@counter,f
  8253  0DDB                     l2268:	
  8254  0DDB  1BF3               	btfsc	___aldiv@divisor+3,7
  8255  0DDC  2DE9               	goto	l2270
  8256  0DDD  3001               	movlw	1
  8257  0DDE                     u2325:	
  8258  0DDE  35F0               	lslf	___aldiv@divisor,f
  8259  0DDF  0DF1               	rlf	___aldiv@divisor+1,f
  8260  0DE0  0DF2               	rlf	___aldiv@divisor+2,f
  8261  0DE1  0DF3               	rlf	___aldiv@divisor+3,f
  8262  0DE2  0B89               	decfsz	9,f
  8263  0DE3  2DDE               	goto	u2325
  8264  0DE4  3001               	movlw	1
  8265  0DE5  00F8               	movwf	??___aldiv
  8266  0DE6  0878               	movf	??___aldiv,w
  8267  0DE7  07A0               	addwf	___aldiv@counter,f
  8268  0DE8  2DDB               	goto	l2268
  8269  0DE9                     l2270:	
  8270  0DE9  3001               	movlw	1
  8271  0DEA                     u2345:	
  8272  0DEA  35A2               	lslf	___aldiv@quotient,f
  8273  0DEB  0DA3               	rlf	___aldiv@quotient+1,f
  8274  0DEC  0DA4               	rlf	___aldiv@quotient+2,f
  8275  0DED  0DA5               	rlf	___aldiv@quotient+3,f
  8276  0DEE  0B89               	decfsz	9,f
  8277  0DEF  2DEA               	goto	u2345
  8278  0DF0  0873               	movf	___aldiv@divisor+3,w
  8279  0DF1  0277               	subwf	___aldiv@dividend+3,w
  8280  0DF2  1D03               	skipz
  8281  0DF3  2DFE               	goto	u2355
  8282  0DF4  0872               	movf	___aldiv@divisor+2,w
  8283  0DF5  0276               	subwf	___aldiv@dividend+2,w
  8284  0DF6  1D03               	skipz
  8285  0DF7  2DFE               	goto	u2355
  8286  0DF8  0871               	movf	___aldiv@divisor+1,w
  8287  0DF9  0275               	subwf	___aldiv@dividend+1,w
  8288  0DFA  1D03               	skipz
  8289  0DFB  2DFE               	goto	u2355
  8290  0DFC  0870               	movf	___aldiv@divisor,w
  8291  0DFD  0274               	subwf	___aldiv@dividend,w
  8292  0DFE                     u2355:	
  8293  0DFE  1C03               	skipc
  8294  0DFF  2E09               	goto	l2278
  8295  0E00  0870               	movf	___aldiv@divisor,w
  8296  0E01  02F4               	subwf	___aldiv@dividend,f
  8297  0E02  0871               	movf	___aldiv@divisor+1,w
  8298  0E03  3BF5               	subwfb	___aldiv@dividend+1,f
  8299  0E04  0872               	movf	___aldiv@divisor+2,w
  8300  0E05  3BF6               	subwfb	___aldiv@dividend+2,f
  8301  0E06  0873               	movf	___aldiv@divisor+3,w
  8302  0E07  3BF7               	subwfb	___aldiv@dividend+3,f
  8303  0E08  1422               	bsf	___aldiv@quotient,0
  8304  0E09                     l2278:	
  8305  0E09  3001               	movlw	1
  8306  0E0A                     u2365:	
  8307  0E0A  36F3               	lsrf	___aldiv@divisor+3,f
  8308  0E0B  0CF2               	rrf	___aldiv@divisor+2,f
  8309  0E0C  0CF1               	rrf	___aldiv@divisor+1,f
  8310  0E0D  0CF0               	rrf	___aldiv@divisor,f
  8311  0E0E  0B89               	decfsz	9,f
  8312  0E0F  2E0A               	goto	u2365
  8313  0E10  3001               	movlw	1
  8314  0E11  02A0               	subwf	___aldiv@counter,f
  8315  0E12  1D03               	btfss	3,2
  8316  0E13  2DE9               	goto	l2270
  8317  0E14                     l2282:	
  8318  0E14  0821               	movf	___aldiv@sign,w
  8319  0E15  1903               	btfsc	3,2
  8320  0E16  2E22               	goto	l2286
  8321  0E17  09A2               	comf	___aldiv@quotient,f
  8322  0E18  09A3               	comf	___aldiv@quotient+1,f
  8323  0E19  09A4               	comf	___aldiv@quotient+2,f
  8324  0E1A  09A5               	comf	___aldiv@quotient+3,f
  8325  0E1B  0AA2               	incf	___aldiv@quotient,f
  8326  0E1C  1903               	skipnz
  8327  0E1D  0AA3               	incf	___aldiv@quotient+1,f
  8328  0E1E  1903               	skipnz
  8329  0E1F  0AA4               	incf	___aldiv@quotient+2,f
  8330  0E20  1903               	skipnz
  8331  0E21  0AA5               	incf	___aldiv@quotient+3,f
  8332  0E22                     l2286:	
  8333  0E22  0825               	movf	___aldiv@quotient+3,w
  8334  0E23  00F3               	movwf	?___aldiv+3
  8335  0E24  0824               	movf	___aldiv@quotient+2,w
  8336  0E25  00F2               	movwf	?___aldiv+2
  8337  0E26  0823               	movf	___aldiv@quotient+1,w
  8338  0E27  00F1               	movwf	?___aldiv+1
  8339  0E28  0822               	movf	___aldiv@quotient,w
  8340  0E29  00F0               	movwf	?___aldiv
  8341  0E2A  0008               	return
  8342  0E2B                     __end_of___aldiv:	
  8343                           
  8344                           	psect	text13
  8345  09EC                     __ptext13:	
  8346 ;; *************** function _ADCRead *****************
  8347 ;; Defined at:
  8348 ;;		line 20 in file "adc.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  channel         1    wreg     enum E13559
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  channel         1    3[COMMON] enum E13559
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  2    0[COMMON] unsigned int 
  8355 ;; Registers used:
  8356 ;;		wreg
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:        4 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_readAnalog
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function _ADCRead
  8377  09EC                     _ADCRead:	
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in _ADCRead: [wreg]
  8381                           ;ADCRead@channel stored from wreg
  8382  09EC  00F3               	movwf	ADCRead@channel
  8383                           
  8384                           ;adc.c: 22: ADPCH = channel;
  8385  09ED  0873               	movf	ADCRead@channel,w
  8386  09EE  0021               	movlb	1	; select bank1
  8387  09EF  009E               	movwf	30	;volatile
  8388                           
  8389                           ;adc.c: 24: ADCON0bits.ADON = 1;
  8390  09F0  1793               	bsf	19,7	;volatile
  8391                           
  8392                           ;adc.c: 26: ADCON0bits.ADCONT = 0;
  8393  09F1  1313               	bcf	19,6	;volatile
  8394                           
  8395                           ;adc.c: 28: ADCON0bits.ADGO = 1;
  8396  09F2  1413               	bsf	19,0	;volatile
  8397  09F3                     l96:	
  8398                           ;adc.c: 31: {
  8399                           
  8400                           ;adc.c: 30: while(ADCON0bits.ADGO)
  8401                           
  8402  09F3  1813               	btfsc	19,0	;volatile
  8403  09F4  29F3               	goto	l96
  8404                           
  8405                           ;adc.c: 32: }
  8406                           ;adc.c: 34: return ((ADRESH<<8)+ADRESL);
  8407  09F5  080D               	movf	13,w	;volatile
  8408  09F6  00F1               	movwf	?_ADCRead+1
  8409  09F7  080C               	movf	12,w	;volatile
  8410  09F8  00F0               	movwf	?_ADCRead
  8411  09F9  0008               	return
  8412  09FA                     __end_of_ADCRead:	
  8413                           
  8414                           	psect	text14
  8415  0EB2                     __ptext14:	
  8416 ;; *************** function ___fttol *****************
  8417 ;; Defined at:
  8418 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  f1              3   73[BANK0 ] float 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  lval            4    5[BANK1 ] unsigned long 
  8423 ;;  exp1            1    9[BANK1 ] unsigned char 
  8424 ;;  sign1           1    4[BANK1 ] unsigned char 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  4   73[BANK0 ] long 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2, status,0
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;Total ram usage:       14 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function ___fttol
  8449  0EB2                     ___fttol:	
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8453  0EB2  0020               	movlb	0	; select bank0
  8454  0EB3  0869               	movf	___fttol@f1,w
  8455  0EB4  0021               	movlb	1	; select bank1
  8456  0EB5  00C6               	movwf	??___fttol^(0+128)
  8457  0EB6  0020               	movlb	0	; select bank0
  8458  0EB7  086A               	movf	___fttol@f1+1,w
  8459  0EB8  0021               	movlb	1	; select bank1
  8460  0EB9  00C7               	movwf	(??___fttol^(0+128)+1)
  8461  0EBA  0020               	movlb	0	; select bank0
  8462  0EBB  086B               	movf	___fttol@f1+2,w
  8463  0EBC  0021               	movlb	1	; select bank1
  8464  0EBD  00C8               	movwf	(??___fttol^(0+128)+2)
  8465  0EBE  1003               	clrc
  8466  0EBF  0D47               	rlf	(??___fttol^(0+128)+1),w
  8467  0EC0  0D48               	rlf	(??___fttol^(0+128)+2),w
  8468  0EC1  00C9               	movwf	(??___fttol+3)^(0+128)
  8469  0EC2  0849               	movf	(??___fttol+3)^(0+128),w
  8470  0EC3  00CF               	movwf	___fttol@exp1^(0+128)
  8471  0EC4  084F               	movf	___fttol@exp1^(0+128),w
  8472  0EC5  1D03               	btfss	3,2
  8473  0EC6  2ED1               	goto	l2616
  8474  0EC7  3000               	movlw	0
  8475  0EC8  0020               	movlb	0	; select bank0
  8476  0EC9  00EC               	movwf	?___fttol+3
  8477  0ECA  3000               	movlw	0
  8478  0ECB  00EB               	movwf	?___fttol+2
  8479  0ECC  3000               	movlw	0
  8480  0ECD  00EA               	movwf	?___fttol+1
  8481  0ECE  3000               	movlw	0
  8482  0ECF  00E9               	movwf	?___fttol
  8483  0ED0  0008               	return
  8484  0ED1                     l2616:	
  8485  0ED1  0020               	movlb	0	; select bank0
  8486  0ED2  0869               	movf	___fttol@f1,w
  8487  0ED3  0021               	movlb	1	; select bank1
  8488  0ED4  00C6               	movwf	??___fttol^(0+128)
  8489  0ED5  0020               	movlb	0	; select bank0
  8490  0ED6  086A               	movf	___fttol@f1+1,w
  8491  0ED7  0021               	movlb	1	; select bank1
  8492  0ED8  00C7               	movwf	(??___fttol^(0+128)+1)
  8493  0ED9  0020               	movlb	0	; select bank0
  8494  0EDA  086B               	movf	___fttol@f1+2,w
  8495  0EDB  0021               	movlb	1	; select bank1
  8496  0EDC  00C8               	movwf	(??___fttol^(0+128)+2)
  8497  0EDD  3017               	movlw	23
  8498  0EDE                     u3005:	
  8499  0EDE  36C8               	lsrf	(??___fttol^(0+128)+2),f
  8500  0EDF  0CC7               	rrf	(??___fttol^(0+128)+1),f
  8501  0EE0  0CC6               	rrf	??___fttol^(0+128),f
  8502  0EE1  0B89               	decfsz	9,f
  8503  0EE2  2EDE               	goto	u3005
  8504  0EE3  0846               	movf	??___fttol^(0+128),w
  8505  0EE4  00C9               	movwf	(??___fttol+3)^(0+128)
  8506  0EE5  0849               	movf	(??___fttol+3)^(0+128),w
  8507  0EE6  00CA               	movwf	___fttol@sign1^(0+128)
  8508  0EE7  0020               	movlb	0	; select bank0
  8509  0EE8  17EA               	bsf	___fttol@f1+1,7
  8510  0EE9  30FF               	movlw	255
  8511  0EEA  05E9               	andwf	___fttol@f1,f
  8512  0EEB  30FF               	movlw	255
  8513  0EEC  05EA               	andwf	___fttol@f1+1,f
  8514  0EED  3000               	movlw	0
  8515  0EEE  05EB               	andwf	___fttol@f1+2,f
  8516  0EEF  0869               	movf	___fttol@f1,w
  8517  0EF0  0021               	movlb	1	; select bank1
  8518  0EF1  00CB               	movwf	___fttol@lval^(0+128)
  8519  0EF2  0020               	movlb	0	; select bank0
  8520  0EF3  086A               	movf	___fttol@f1+1,w
  8521  0EF4  0021               	movlb	1	; select bank1
  8522  0EF5  00CC               	movwf	(___fttol@lval^(0+128)+1)
  8523  0EF6  0020               	movlb	0	; select bank0
  8524  0EF7  086B               	movf	___fttol@f1+2,w
  8525  0EF8  0021               	movlb	1	; select bank1
  8526  0EF9  00CD               	movwf	(___fttol@lval^(0+128)+2)
  8527  0EFA  01CE               	clrf	(___fttol@lval^(0+128)+3)
  8528  0EFB  308E               	movlw	142
  8529  0EFC  02CF               	subwf	___fttol@exp1^(0+128),f
  8530  0EFD  1FCF               	btfss	___fttol@exp1^(0+128),7
  8531  0EFE  2F1D               	goto	l2636
  8532  0EFF  084F               	movf	___fttol@exp1^(0+128),w
  8533  0F00  3A80               	xorlw	128
  8534  0F01  3E8F               	addlw	143
  8535  0F02  1803               	skipnc
  8536  0F03  2F0E               	goto	l2634
  8537  0F04  3000               	movlw	0
  8538  0F05  0020               	movlb	0	; select bank0
  8539  0F06  00EC               	movwf	?___fttol+3
  8540  0F07  3000               	movlw	0
  8541  0F08  00EB               	movwf	?___fttol+2
  8542  0F09  3000               	movlw	0
  8543  0F0A  00EA               	movwf	?___fttol+1
  8544  0F0B  3000               	movlw	0
  8545  0F0C  00E9               	movwf	?___fttol
  8546  0F0D  0008               	return
  8547  0F0E                     l2634:	
  8548  0F0E  3001               	movlw	1
  8549  0F0F                     u3035:	
  8550  0F0F  0021               	movlb	1	; select bank1
  8551  0F10  36CE               	lsrf	(___fttol@lval+3)^(0+128),f
  8552  0F11  0CCD               	rrf	(___fttol@lval+2)^(0+128),f
  8553  0F12  0CCC               	rrf	(___fttol@lval+1)^(0+128),f
  8554  0F13  0CCB               	rrf	___fttol@lval^(0+128),f
  8555  0F14  0B89               	decfsz	9,f
  8556  0F15  2F0F               	goto	u3035
  8557  0F16  3001               	movlw	1
  8558  0F17  00C6               	movwf	??___fttol^(0+128)
  8559  0F18  0846               	movf	??___fttol^(0+128),w
  8560  0F19  07CF               	addwf	___fttol@exp1^(0+128),f
  8561  0F1A  1903               	btfsc	3,2
  8562  0F1B  2F39               	goto	l2644
  8563  0F1C  2F0E               	goto	l2634
  8564  0F1D                     l2636:	
  8565  0F1D  3018               	movlw	24
  8566  0F1E  024F               	subwf	___fttol@exp1^(0+128),w
  8567  0F1F  1C03               	skipc
  8568  0F20  2F35               	goto	l674
  8569  0F21  3000               	movlw	0
  8570  0F22  0020               	movlb	0	; select bank0
  8571  0F23  00EC               	movwf	?___fttol+3
  8572  0F24  3000               	movlw	0
  8573  0F25  00EB               	movwf	?___fttol+2
  8574  0F26  3000               	movlw	0
  8575  0F27  00EA               	movwf	?___fttol+1
  8576  0F28  3000               	movlw	0
  8577  0F29  00E9               	movwf	?___fttol
  8578  0F2A  0008               	return
  8579  0F2B                     l2642:	
  8580  0F2B  3001               	movlw	1
  8581  0F2C                     u3065:	
  8582  0F2C  0021               	movlb	1	; select bank1
  8583  0F2D  35CB               	lslf	___fttol@lval^(0+128),f
  8584  0F2E  0DCC               	rlf	(___fttol@lval+1)^(0+128),f
  8585  0F2F  0DCD               	rlf	(___fttol@lval+2)^(0+128),f
  8586  0F30  0DCE               	rlf	(___fttol@lval+3)^(0+128),f
  8587  0F31  0B89               	decfsz	9,f
  8588  0F32  2F2C               	goto	u3065
  8589  0F33  3001               	movlw	1
  8590  0F34  02CF               	subwf	___fttol@exp1^(0+128),f
  8591  0F35                     l674:	
  8592  0F35  0021               	movlb	1	; select bank1
  8593  0F36  084F               	movf	___fttol@exp1^(0+128),w
  8594  0F37  1D03               	btfss	3,2
  8595  0F38  2F2B               	goto	l2642
  8596  0F39                     l2644:	
  8597  0F39  084A               	movf	___fttol@sign1^(0+128),w
  8598  0F3A  1903               	btfsc	3,2
  8599  0F3B  2F47               	goto	l2648
  8600  0F3C  09CB               	comf	___fttol@lval^(0+128),f
  8601  0F3D  09CC               	comf	(___fttol@lval+1)^(0+128),f
  8602  0F3E  09CD               	comf	(___fttol@lval+2)^(0+128),f
  8603  0F3F  09CE               	comf	(___fttol@lval+3)^(0+128),f
  8604  0F40  0ACB               	incf	___fttol@lval^(0+128),f
  8605  0F41  1903               	skipnz
  8606  0F42  0ACC               	incf	(___fttol@lval+1)^(0+128),f
  8607  0F43  1903               	skipnz
  8608  0F44  0ACD               	incf	(___fttol@lval+2)^(0+128),f
  8609  0F45  1903               	skipnz
  8610  0F46  0ACE               	incf	(___fttol@lval+3)^(0+128),f
  8611  0F47                     l2648:	
  8612  0F47  084E               	movf	(___fttol@lval+3)^(0+128),w
  8613  0F48  0020               	movlb	0	; select bank0
  8614  0F49  00EC               	movwf	?___fttol+3
  8615  0F4A  0021               	movlb	1	; select bank1
  8616  0F4B  084D               	movf	(___fttol@lval+2)^(0+128),w
  8617  0F4C  0020               	movlb	0	; select bank0
  8618  0F4D  00EB               	movwf	?___fttol+2
  8619  0F4E  0021               	movlb	1	; select bank1
  8620  0F4F  084C               	movf	(___fttol@lval+1)^(0+128),w
  8621  0F50  0020               	movlb	0	; select bank0
  8622  0F51  00EA               	movwf	?___fttol+1
  8623  0F52  0021               	movlb	1	; select bank1
  8624  0F53  084B               	movf	___fttol@lval^(0+128),w
  8625  0F54  0020               	movlb	0	; select bank0
  8626  0F55  00E9               	movwf	?___fttol
  8627  0F56  0008               	return
  8628  0F57                     __end_of___fttol:	
  8629                           
  8630                           	psect	text15
  8631  0C0D                     __ptext15:	
  8632 ;; *************** function _SYSTEM_Initialize *****************
  8633 ;; Defined at:
  8634 ;;		line 71 in file "system.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;		None
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  1    wreg      void 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;Total ram usage:        3 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    3
  8655 ;; This function calls:
  8656 ;;		_ADCC_Initialize
  8657 ;;		_InitCustomChars
  8658 ;;		_LCD_Clear
  8659 ;;		_LCD_Init
  8660 ;;		_OSCILLATOR_Initialize
  8661 ;;		_PIN_MANAGER_Initialize
  8662 ;;		_PWM_Initialize
  8663 ;;		_TMR2_Initialize
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function _SYSTEM_Initialize
  8671  0C0D                     _SYSTEM_Initialize:	
  8672                           
  8673                           ;system.c: 73: PIN_MANAGER_Initialize();
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8677  0C0D  318B  2328  318C   	fcall	_PIN_MANAGER_Initialize
  8678                           
  8679                           ;system.c: 74: OSCILLATOR_Initialize();
  8680  0C10  3189  21C0  318C   	fcall	_OSCILLATOR_Initialize
  8681                           
  8682                           ;system.c: 75: FVRCON = 0x00;
  8683  0C13  0032               	movlb	18	; select bank18
  8684  0C14  018C               	clrf	12	;volatile
  8685                           
  8686                           ;system.c: 76: ADCC_Initialize();
  8687  0C15  318A  2263  318C   	fcall	_ADCC_Initialize
  8688                           
  8689                           ;system.c: 77: PWM_Initialize();
  8690  0C18  3189  21D3  318C   	fcall	_PWM_Initialize
  8691                           
  8692                           ;system.c: 79: TMR2_Initialize();
  8693  0C1B  3189  21DE  318C   	fcall	_TMR2_Initialize
  8694                           
  8695                           ;system.c: 80: LCD_Init(0X00);
  8696  0C1E  3000               	movlw	0
  8697  0C1F  318E  262B  318C   	fcall	_LCD_Init
  8698                           
  8699                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  8700  0C22  3009               	movlw	9
  8701  0C23  00FA               	movwf	??_SYSTEM_Initialize+2
  8702  0C24  301E               	movlw	30
  8703  0C25  00F9               	movwf	??_SYSTEM_Initialize+1
  8704  0C26  30EB               	movlw	235
  8705  0C27  00F8               	movwf	??_SYSTEM_Initialize
  8706  0C28                     u3167:	
  8707  0C28  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8708  0C29  2C28               	goto	u3167
  8709  0C2A  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8710  0C2B  2C28               	goto	u3167
  8711  0C2C  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8712  0C2D  2C28               	goto	u3167
  8713  0C2E  0000               	nop
  8714                           
  8715                           ;system.c: 82: LCD_Clear();
  8716  0C2F  3189  21B8  318C   	fcall	_LCD_Clear
  8717                           
  8718                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  8719  0C32  3005               	movlw	5
  8720  0C33  00FA               	movwf	??_SYSTEM_Initialize+2
  8721  0C34  300F               	movlw	15
  8722  0C35  00F9               	movwf	??_SYSTEM_Initialize+1
  8723  0C36  30F4               	movlw	244
  8724  0C37  00F8               	movwf	??_SYSTEM_Initialize
  8725  0C38                     u3177:	
  8726  0C38  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8727  0C39  2C38               	goto	u3177
  8728  0C3A  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8729  0C3B  2C38               	goto	u3177
  8730  0C3C  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8731  0C3D  2C38               	goto	u3177
  8732                           
  8733                           ;system.c: 84: InitCustomChars();
  8734  0C3E  318A  22D6  318C   	fcall	_InitCustomChars
  8735                           
  8736                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  8737  0C41  3009               	movlw	9
  8738  0C42  00FA               	movwf	??_SYSTEM_Initialize+2
  8739  0C43  301E               	movlw	30
  8740  0C44  00F9               	movwf	??_SYSTEM_Initialize+1
  8741  0C45  30EB               	movlw	235
  8742  0C46  00F8               	movwf	??_SYSTEM_Initialize
  8743  0C47                     u3187:	
  8744  0C47  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8745  0C48  2C47               	goto	u3187
  8746  0C49  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8747  0C4A  2C47               	goto	u3187
  8748  0C4B  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8749  0C4C  2C47               	goto	u3187
  8750  0C4D  0000               	nop
  8751  0C4E  0008               	return
  8752  0C4F                     __end_of_SYSTEM_Initialize:	
  8753                           
  8754                           	psect	text16
  8755  09DE                     __ptext16:	
  8756 ;; *************** function _TMR2_Initialize *****************
  8757 ;; Defined at:
  8758 ;;		line 3 in file "tmr2.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_SYSTEM_Initialize
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function _TMR2_Initialize
  8787  09DE                     _TMR2_Initialize:	
  8788                           
  8789                           ;tmr2.c: 5: T2CON = 0x00;
  8790                           
  8791                           ;incstack = 0
  8792                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8793  09DE  0025               	movlb	5	; select bank5
  8794  09DF  018E               	clrf	14	;volatile
  8795                           
  8796                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8797  09E0  3001               	movlw	1
  8798  09E1  0090               	movwf	16	;volatile
  8799                           
  8800                           ;tmr2.c: 9: T2HLT = 0x00;
  8801  09E2  018F               	clrf	15	;volatile
  8802                           
  8803                           ;tmr2.c: 11: T2RST = 0x00;
  8804  09E3  0191               	clrf	17	;volatile
  8805                           
  8806                           ;tmr2.c: 13: T2PR = 0xFF;
  8807  09E4  30FF               	movlw	255
  8808  09E5  008D               	movwf	13	;volatile
  8809                           
  8810                           ;tmr2.c: 15: T2TMR = 0x00;
  8811  09E6  018C               	clrf	12	;volatile
  8812                           
  8813                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  8814  09E7  002E               	movlb	14	; select bank14
  8815  09E8  1090               	bcf	16,1	;volatile
  8816                           
  8817                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  8818  09E9  0025               	movlb	5	; select bank5
  8819  09EA  178E               	bsf	14,7	;volatile
  8820  09EB  0008               	return
  8821  09EC                     __end_of_TMR2_Initialize:	
  8822                           
  8823                           	psect	text17
  8824  09D3                     __ptext17:	
  8825 ;; *************** function _PWM_Initialize *****************
  8826 ;; Defined at:
  8827 ;;		line 3 in file "pwm.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_SYSTEM_Initialize
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           
  8855                           ;psect for function _PWM_Initialize
  8856  09D3                     _PWM_Initialize:	
  8857                           
  8858                           ;pwm.c: 14: PWM7CON = 0x80;
  8859                           
  8860                           ;incstack = 0
  8861                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  8862  09D3  3080               	movlw	128
  8863  09D4  0027               	movlb	7	; select bank7
  8864  09D5  0092               	movwf	18	;volatile
  8865                           
  8866                           ;pwm.c: 16: PWM7DCH = 0x00;
  8867  09D6  0191               	clrf	17	;volatile
  8868                           
  8869                           ;pwm.c: 18: PWM7DCL = 0x00;
  8870  09D7  0190               	clrf	16	;volatile
  8871                           
  8872                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
  8873  09D8  0024               	movlb	4	; select bank4
  8874  09D9  081F               	movf	31,w	;volatile
  8875  09DA  39F3               	andlw	-13
  8876  09DB  3804               	iorlw	4
  8877  09DC  009F               	movwf	31	;volatile
  8878  09DD  0008               	return
  8879  09DE                     __end_of_PWM_Initialize:	
  8880                           
  8881                           	psect	text18
  8882  0B28                     __ptext18:	
  8883 ;; *************** function _PIN_MANAGER_Initialize *****************
  8884 ;; Defined at:
  8885 ;;		line 5 in file "pin_manager.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  state           1    0[COMMON] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:        1 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_SYSTEM_Initialize
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _PIN_MANAGER_Initialize
  8914  0B28                     _PIN_MANAGER_Initialize:	
  8915                           
  8916                           ;pin_manager.c: 7: LATA = 0x00;
  8917                           
  8918                           ;incstack = 0
  8919                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8920  0B28  0020               	movlb	0	; select bank0
  8921  0B29  0196               	clrf	22	;volatile
  8922                           
  8923                           ;pin_manager.c: 8: LATB = 0x00;
  8924  0B2A  0197               	clrf	23	;volatile
  8925                           
  8926                           ;pin_manager.c: 9: LATC = 0x00;
  8927  0B2B  0198               	clrf	24	;volatile
  8928                           
  8929                           ;pin_manager.c: 11: WPUA = 0x00;
  8930  0B2C  003E               	movlb	30	; select bank30
  8931  0B2D  01B9               	clrf	57	;volatile
  8932                           
  8933                           ;pin_manager.c: 12: WPUB = 0x00;
  8934  0B2E  01C4               	clrf	68	;volatile
  8935                           
  8936                           ;pin_manager.c: 13: WPUC = 0x00;
  8937  0B2F  01CF               	clrf	79	;volatile
  8938                           
  8939                           ;pin_manager.c: 14: WPUE = 0x8;
  8940  0B30  3008               	movlw	8
  8941  0B31  00E5               	movwf	101	;volatile
  8942                           
  8943                           ;pin_manager.c: 16: TRISA = 0x0A;
  8944  0B32  300A               	movlw	10
  8945  0B33  0020               	movlb	0	; select bank0
  8946  0B34  0091               	movwf	17	;volatile
  8947                           
  8948                           ;pin_manager.c: 17: TRISB = 0x00;
  8949  0B35  0192               	clrf	18	;volatile
  8950                           
  8951                           ;pin_manager.c: 18: TRISC = 0x00;
  8952  0B36  0193               	clrf	19	;volatile
  8953                           
  8954                           ;pin_manager.c: 20: ANSELA = 0x0A;
  8955  0B37  300A               	movlw	10
  8956  0B38  003E               	movlb	30	; select bank30
  8957  0B39  00B8               	movwf	56	;volatile
  8958                           
  8959                           ;pin_manager.c: 21: ANSELB = 0x00;
  8960  0B3A  01C3               	clrf	67	;volatile
  8961                           
  8962                           ;pin_manager.c: 22: ANSELC = 0x00;
  8963  0B3B  01CE               	clrf	78	;volatile
  8964                           
  8965                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  8966  0B3C  002E               	movlb	14	; select bank14
  8967  0B3D  1216               	bcf	22,4	;volatile
  8968                           
  8969                           ;pin_manager.c: 25: bool state = GIE;
  8970  0B3E  3000               	movlw	0
  8971  0B3F  1B8B               	btfsc	11,7	;volatile
  8972  0B40  3001               	movlw	1
  8973  0B41  00F0               	movwf	PIN_MANAGER_Initialize@state
  8974                           
  8975                           ;pin_manager.c: 26: GIE = 0;
  8976  0B42  138B               	bcf	11,7	;volatile
  8977                           
  8978                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  8979  0B43  3055               	movlw	85
  8980  0B44  003D               	movlb	29	; select bank29
  8981  0B45  008F               	movwf	15	;volatile
  8982                           
  8983                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  8984  0B46  30AA               	movlw	170
  8985  0B47  008F               	movwf	15	;volatile
  8986                           
  8987                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  8988  0B48  100F               	bcf	15,0	;volatile
  8989                           
  8990                           ;pin_manager.c: 33: RC3PPS = 0X0F;
  8991  0B49  300F               	movlw	15
  8992  0B4A  003E               	movlb	30	; select bank30
  8993  0B4B  00A3               	movwf	35	;volatile
  8994                           
  8995                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  8996  0B4C  3055               	movlw	85
  8997  0B4D  003D               	movlb	29	; select bank29
  8998  0B4E  008F               	movwf	15	;volatile
  8999                           
  9000                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9001  0B4F  30AA               	movlw	170
  9002  0B50  008F               	movwf	15	;volatile
  9003                           
  9004                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9005  0B51  140F               	bsf	15,0	;volatile
  9006                           
  9007                           ;pin_manager.c: 40: GIE = state;
  9008  0B52  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9009  0B53  2B56               	goto	u2230
  9010  0B54  178B               	bsf	11,7	;volatile
  9011  0B55  0008               	return
  9012  0B56                     u2230:	
  9013  0B56  138B               	bcf	11,7	;volatile
  9014  0B57  0008               	return
  9015  0B58                     __end_of_PIN_MANAGER_Initialize:	
  9016                           
  9017                           	psect	text19
  9018  09C0                     __ptext19:	
  9019 ;; *************** function _OSCILLATOR_Initialize *****************
  9020 ;; Defined at:
  9021 ;;		line 89 in file "system.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;		None
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;		None
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;Total ram usage:        0 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_SYSTEM_Initialize
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           
  9049                           ;psect for function _OSCILLATOR_Initialize
  9050  09C0                     _OSCILLATOR_Initialize:	
  9051                           
  9052                           ;system.c: 91: OSCCON1 = 0x60;
  9053                           
  9054                           ;incstack = 0
  9055                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9056  09C0  3060               	movlw	96
  9057  09C1  0031               	movlb	17	; select bank17
  9058  09C2  008D               	movwf	13	;volatile
  9059                           
  9060                           ;system.c: 92: OSCCON3 = 0x00;
  9061  09C3  018F               	clrf	15	;volatile
  9062                           
  9063                           ;system.c: 93: OSCEN = 0x00;
  9064  09C4  0191               	clrf	17	;volatile
  9065                           
  9066                           ;system.c: 94: OSCFRQ = 0x06;
  9067  09C5  3006               	movlw	6
  9068  09C6  0093               	movwf	19	;volatile
  9069                           
  9070                           ;system.c: 95: OSCTUNE = 0x00;
  9071  09C7  0192               	clrf	18	;volatile
  9072  09C8  0008               	return
  9073  09C9                     __end_of_OSCILLATOR_Initialize:	
  9074                           
  9075                           	psect	text20
  9076  0E2B                     __ptext20:	
  9077 ;; *************** function _LCD_Init *****************
  9078 ;; Defined at:
  9079 ;;		line 154 in file "lcd.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  style           1    wreg     unsigned char 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  style           1    7[COMMON] unsigned char 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  1    wreg      void 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0, pclath, cstack
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        4 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    2
  9100 ;; This function calls:
  9101 ;;		_LCD_Cmd
  9102 ;;		_LCD_Port
  9103 ;; This function is called by:
  9104 ;;		_SYSTEM_Initialize
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _LCD_Init
  9110  0E2B                     _LCD_Init:	
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9114                           ;LCD_Init@style stored from wreg
  9115  0E2B  00F7               	movwf	LCD_Init@style
  9116                           
  9117                           ;lcd.c: 156: LCD_Port(0x00);
  9118  0E2C  3000               	movlw	0
  9119  0E2D  318A  2231  318E   	fcall	_LCD_Port
  9120                           
  9121                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  9122  0E30  3005               	movlw	5
  9123  0E31  00F6               	movwf	??_LCD_Init+2
  9124  0E32  300F               	movlw	15
  9125  0E33  00F5               	movwf	??_LCD_Init+1
  9126  0E34  30F4               	movlw	244
  9127  0E35  00F4               	movwf	??_LCD_Init
  9128  0E36                     u3197:	
  9129  0E36  0BF4               	decfsz	??_LCD_Init,f
  9130  0E37  2E36               	goto	u3197
  9131  0E38  0BF5               	decfsz	??_LCD_Init+1,f
  9132  0E39  2E36               	goto	u3197
  9133  0E3A  0BF6               	decfsz	??_LCD_Init+2,f
  9134  0E3B  2E36               	goto	u3197
  9135                           
  9136                           ;lcd.c: 160: LCD_Cmd(0x03);
  9137  0E3C  3003               	movlw	3
  9138  0E3D  3180  2004  318E   	fcall	_LCD_Cmd
  9139                           
  9140                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  9141  0E40  3068               	movlw	104
  9142  0E41  00F5               	movwf	??_LCD_Init+1
  9143  0E42  30E4               	movlw	228
  9144  0E43  00F4               	movwf	??_LCD_Init
  9145  0E44                     u3207:	
  9146  0E44  0BF4               	decfsz	??_LCD_Init,f
  9147  0E45  2E44               	goto	u3207
  9148  0E46  0BF5               	decfsz	??_LCD_Init+1,f
  9149  0E47  2E44               	goto	u3207
  9150  0E48  0000               	nop
  9151                           
  9152                           ;lcd.c: 164: LCD_Cmd(0x03);
  9153  0E49  3003               	movlw	3
  9154  0E4A  3180  2004  318E   	fcall	_LCD_Cmd
  9155                           
  9156                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9157  0E4D  3089               	movlw	137
  9158  0E4E  00F4               	movwf	??_LCD_Init
  9159  0E4F                     u3217:	
  9160  0E4F  3200               	nop2
  9161  0E50  3200               	nop2
  9162  0E51  0BF4               	decfsz	??_LCD_Init,f
  9163  0E52  2E4F               	goto	u3217
  9164                           
  9165                           ;lcd.c: 168: LCD_Cmd(0x03);
  9166  0E53  3003               	movlw	3
  9167  0E54  3180  2004  318E   	fcall	_LCD_Cmd
  9168                           
  9169                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9170  0E57  3089               	movlw	137
  9171  0E58  00F4               	movwf	??_LCD_Init
  9172  0E59                     u3227:	
  9173  0E59  3200               	nop2
  9174  0E5A  3200               	nop2
  9175  0E5B  0BF4               	decfsz	??_LCD_Init,f
  9176  0E5C  2E59               	goto	u3227
  9177                           
  9178                           ;lcd.c: 172: LCD_Cmd(0x02);
  9179  0E5D  3002               	movlw	2
  9180  0E5E  3180  2004  318E   	fcall	_LCD_Cmd
  9181                           
  9182                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9183  0E61  3089               	movlw	137
  9184  0E62  00F4               	movwf	??_LCD_Init
  9185  0E63                     u3237:	
  9186  0E63  3200               	nop2
  9187  0E64  3200               	nop2
  9188  0E65  0BF4               	decfsz	??_LCD_Init,f
  9189  0E66  2E63               	goto	u3237
  9190                           
  9191                           ;lcd.c: 176: LCD_Cmd(0x2);
  9192  0E67  3002               	movlw	2
  9193  0E68  3180  2004  318E   	fcall	_LCD_Cmd
  9194                           
  9195                           ;lcd.c: 178: LCD_Cmd(0x8);
  9196  0E6B  3008               	movlw	8
  9197  0E6C  3180  2004  318E   	fcall	_LCD_Cmd
  9198                           
  9199                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9200  0E6F  3089               	movlw	137
  9201  0E70  00F4               	movwf	??_LCD_Init
  9202  0E71                     u3247:	
  9203  0E71  3200               	nop2
  9204  0E72  3200               	nop2
  9205  0E73  0BF4               	decfsz	??_LCD_Init,f
  9206  0E74  2E71               	goto	u3247
  9207                           
  9208                           ;lcd.c: 182: LCD_Cmd(0x0);
  9209  0E75  3000               	movlw	0
  9210  0E76  3180  2004  318E   	fcall	_LCD_Cmd
  9211                           
  9212                           ;lcd.c: 184: LCD_Cmd(0x8);
  9213  0E79  3008               	movlw	8
  9214  0E7A  3180  2004  318E   	fcall	_LCD_Cmd
  9215                           
  9216                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9217  0E7D  3089               	movlw	137
  9218  0E7E  00F4               	movwf	??_LCD_Init
  9219  0E7F                     u3257:	
  9220  0E7F  3200               	nop2
  9221  0E80  3200               	nop2
  9222  0E81  0BF4               	decfsz	??_LCD_Init,f
  9223  0E82  2E7F               	goto	u3257
  9224                           
  9225                           ;lcd.c: 188: LCD_Cmd(0x0);
  9226  0E83  3000               	movlw	0
  9227  0E84  3180  2004  318E   	fcall	_LCD_Cmd
  9228                           
  9229                           ;lcd.c: 190: LCD_Cmd(0x1);
  9230  0E87  3001               	movlw	1
  9231  0E88  3180  2004  318E   	fcall	_LCD_Cmd
  9232                           
  9233                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  9234  0E8B  3034               	movlw	52
  9235  0E8C  00F5               	movwf	??_LCD_Init+1
  9236  0E8D  30F1               	movlw	241
  9237  0E8E  00F4               	movwf	??_LCD_Init
  9238  0E8F                     u3267:	
  9239  0E8F  0BF4               	decfsz	??_LCD_Init,f
  9240  0E90  2E8F               	goto	u3267
  9241  0E91  0BF5               	decfsz	??_LCD_Init+1,f
  9242  0E92  2E8F               	goto	u3267
  9243  0E93  3200               	nop2
  9244                           
  9245                           ;lcd.c: 194: LCD_Cmd(0x0);
  9246  0E94  3000               	movlw	0
  9247  0E95  3180  2004  318E   	fcall	_LCD_Cmd
  9248                           
  9249                           ;lcd.c: 196: LCD_Cmd(0x6);
  9250  0E98  3006               	movlw	6
  9251  0E99  3180  2004  318E   	fcall	_LCD_Cmd
  9252                           
  9253                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9254  0E9C  3089               	movlw	137
  9255  0E9D  00F4               	movwf	??_LCD_Init
  9256  0E9E                     u3277:	
  9257  0E9E  3200               	nop2
  9258  0E9F  3200               	nop2
  9259  0EA0  0BF4               	decfsz	??_LCD_Init,f
  9260  0EA1  2E9E               	goto	u3277
  9261                           
  9262                           ;lcd.c: 200: LCD_Cmd(0x0);
  9263  0EA2  3000               	movlw	0
  9264  0EA3  3180  2004  318E   	fcall	_LCD_Cmd
  9265                           
  9266                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9267  0EA6  0877               	movf	LCD_Init@style,w
  9268  0EA7  380C               	iorlw	12
  9269  0EA8  3180  2004  318E   	fcall	_LCD_Cmd
  9270                           
  9271                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9272  0EAB  3089               	movlw	137
  9273  0EAC  00F4               	movwf	??_LCD_Init
  9274  0EAD                     u3287:	
  9275  0EAD  3200               	nop2
  9276  0EAE  3200               	nop2
  9277  0EAF  0BF4               	decfsz	??_LCD_Init,f
  9278  0EB0  2EAD               	goto	u3287
  9279  0EB1  0008               	return
  9280  0EB2                     __end_of_LCD_Init:	
  9281                           
  9282                           	psect	text21
  9283  09B8                     __ptext21:	
  9284 ;; *************** function _LCD_Clear *****************
  9285 ;; Defined at:
  9286 ;;		line 75 in file "lcd.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;		None
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;		None
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  1    wreg      void 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0, pclath, cstack
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;Total ram usage:        0 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    2
  9307 ;; This function calls:
  9308 ;;		_LCD_Cmd
  9309 ;; This function is called by:
  9310 ;;		_main
  9311 ;;		_SYSTEM_Initialize
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           
  9316                           ;psect for function _LCD_Clear
  9317  09B8                     _LCD_Clear:	
  9318                           
  9319                           ;lcd.c: 77: LCD_Cmd(0);
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9323  09B8  3000               	movlw	0
  9324  09B9  3180  2004  3189   	fcall	_LCD_Cmd
  9325                           
  9326                           ;lcd.c: 78: LCD_Cmd(1);
  9327  09BC  3001               	movlw	1
  9328  09BD  3180  2004         	fcall	_LCD_Cmd
  9329  09BF  0008               	return
  9330  09C0                     __end_of_LCD_Clear:	
  9331                           
  9332                           	psect	text22
  9333  0AD6                     __ptext22:	
  9334 ;; *************** function _InitCustomChars *****************
  9335 ;; Defined at:
  9336 ;;		line 29 in file "lcd.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  i               1    6[COMMON] unsigned char 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;Total ram usage:        2 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    2
  9357 ;; This function calls:
  9358 ;;		_LCD_Cmd
  9359 ;;		_LCD_Write_Char
  9360 ;; This function is called by:
  9361 ;;		_SYSTEM_Initialize
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _InitCustomChars
  9367  0AD6                     _InitCustomChars:	
  9368                           
  9369                           ;lcd.c: 31: uint8_t i;
  9370                           ;lcd.c: 32: LCD_Cmd(0x04);
  9371                           
  9372                           ;incstack = 0
  9373                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9374  0AD6  3004               	movlw	4
  9375  0AD7  3180  2004  318A   	fcall	_LCD_Cmd
  9376                           
  9377                           ;lcd.c: 33: LCD_Cmd(0x00);
  9378  0ADA  3000               	movlw	0
  9379  0ADB  3180  2004  318A   	fcall	_LCD_Cmd
  9380                           
  9381                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9382  0ADE  01F6               	clrf	InitCustomChars@i
  9383  0ADF  3010               	movlw	16
  9384  0AE0  0276               	subwf	InitCustomChars@i,w
  9385  0AE1  1803               	btfsc	3,0
  9386  0AE2  2AF4               	goto	l2116
  9387  0AE3                     l2110:	
  9388                           
  9389                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9390  0AE3  0876               	movf	InitCustomChars@i,w
  9391  0AE4  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9392  0AE5  0086               	movwf	6
  9393  0AE6  3001               	movlw	1	; select bank2/3
  9394  0AE7  0087               	movwf	7
  9395  0AE8  0801               	movf	1,w
  9396  0AE9  318A  22FC  318A   	fcall	_LCD_Write_Char
  9397  0AEC  3001               	movlw	1
  9398  0AED  00F5               	movwf	??_InitCustomChars
  9399  0AEE  0875               	movf	??_InitCustomChars,w
  9400  0AEF  07F6               	addwf	InitCustomChars@i,f
  9401  0AF0  3010               	movlw	16
  9402  0AF1  0276               	subwf	InitCustomChars@i,w
  9403  0AF2  1C03               	skipc
  9404  0AF3  2AE3               	goto	l2110
  9405  0AF4                     l2116:	
  9406                           
  9407                           ;lcd.c: 36: LCD_Cmd(0);
  9408  0AF4  3000               	movlw	0
  9409  0AF5  3180  2004  318A   	fcall	_LCD_Cmd
  9410                           
  9411                           ;lcd.c: 37: LCD_Cmd(2);
  9412  0AF8  3002               	movlw	2
  9413  0AF9  3180  2004         	fcall	_LCD_Cmd
  9414  0AFB  0008               	return
  9415  0AFC                     __end_of_InitCustomChars:	
  9416                           
  9417                           	psect	text23
  9418  0A63                     __ptext23:	
  9419 ;; *************** function _ADCC_Initialize *****************
  9420 ;; Defined at:
  9421 ;;		line 64 in file "adc.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_SYSTEM_Initialize
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _ADCC_Initialize
  9450  0A63                     _ADCC_Initialize:	
  9451                           
  9452                           ;adc.c: 66: ADCON1 = 0x00;
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9456  0A63  0021               	movlb	1	; select bank1
  9457  0A64  0194               	clrf	20	;volatile
  9458                           
  9459                           ;adc.c: 68: ADCON2 = 0x00;
  9460  0A65  0195               	clrf	21	;volatile
  9461                           
  9462                           ;adc.c: 70: ADCON3 = 0x00;
  9463  0A66  0196               	clrf	22	;volatile
  9464                           
  9465                           ;adc.c: 72: ADACT = 0x00;
  9466  0A67  0199               	clrf	25	;volatile
  9467                           
  9468                           ;adc.c: 74: ADSTAT = 0x00;
  9469  0A68  0197               	clrf	23	;volatile
  9470                           
  9471                           ;adc.c: 77: ADCLK = 0x3F;
  9472  0A69  303F               	movlw	63
  9473  0A6A  0098               	movwf	24	;volatile
  9474                           
  9475                           ;adc.c: 85: ADREF = 0x00;
  9476  0A6B  019A               	clrf	26	;volatile
  9477                           
  9478                           ;adc.c: 87: ADCAP = 0x00;
  9479  0A6C  019B               	clrf	27	;volatile
  9480                           
  9481                           ;adc.c: 90: ADPRE = 0x07;
  9482  0A6D  3007               	movlw	7
  9483  0A6E  009C               	movwf	28	;volatile
  9484                           
  9485                           ;adc.c: 92: ADACQ = 0x00;
  9486  0A6F  019D               	clrf	29	;volatile
  9487                           
  9488                           ;adc.c: 94: ADPCH = 0x00;
  9489  0A70  019E               	clrf	30	;volatile
  9490                           
  9491                           ;adc.c: 96: ADRPT = 0x00;
  9492  0A71  0022               	movlb	2	; select bank2
  9493  0A72  018D               	clrf	13	;volatile
  9494                           
  9495                           ;adc.c: 98: ADLTHL = 0x00;
  9496  0A73  018E               	clrf	14	;volatile
  9497                           
  9498                           ;adc.c: 100: ADLTHH = 0x00;
  9499  0A74  018F               	clrf	15	;volatile
  9500                           
  9501                           ;adc.c: 102: ADUTHL = 0x00;
  9502  0A75  0190               	clrf	16	;volatile
  9503                           
  9504                           ;adc.c: 104: ADUTHH = 0x00;
  9505  0A76  0191               	clrf	17	;volatile
  9506                           
  9507                           ;adc.c: 106: ADSTPTL = 0x00;
  9508  0A77  0192               	clrf	18	;volatile
  9509                           
  9510                           ;adc.c: 108: ADSTPTH = 0x00;
  9511  0A78  0193               	clrf	19	;volatile
  9512                           
  9513                           ;adc.c: 110: ADCON0 = 0x84;
  9514  0A79  3084               	movlw	132
  9515  0A7A  0021               	movlb	1	; select bank1
  9516  0A7B  0093               	movwf	19	;volatile
  9517  0A7C  0008               	return
  9518  0A7D                     __end_of_ADCC_Initialize:	
  9519                           
  9520                           	psect	text24
  9521  0A1B                     __ptext24:	
  9522 ;; *************** function _PWM7_LoadDutyValue *****************
  9523 ;; Defined at:
  9524 ;;		line 32 in file "pwm.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2, status,0
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;Total ram usage:        4 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; This function calls:
  9545 ;;		Nothing
  9546 ;; This function is called by:
  9547 ;;		_main
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           
  9552                           ;psect for function _PWM7_LoadDutyValue
  9553  0A1B                     _PWM7_LoadDutyValue:	
  9554                           
  9555                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9556                           
  9557                           ;incstack = 0
  9558                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9559  0A1B  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9560  0A1C  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9561  0A1D  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9562  0A1E  00F2               	movwf	??_PWM7_LoadDutyValue
  9563  0A1F  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9564  0A20  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9565  0A21  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9566  0A22  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9567  0A23  0872               	movf	??_PWM7_LoadDutyValue,w
  9568  0A24  0027               	movlb	7	; select bank7
  9569  0A25  0091               	movwf	17	;volatile
  9570                           
  9571                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9572  0A26  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9573  0A27  3903               	andlw	3
  9574  0A28  00F2               	movwf	??_PWM7_LoadDutyValue
  9575  0A29  3005               	movlw	5
  9576  0A2A                     u2675:	
  9577  0A2A  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9578  0A2B  3EFF               	addlw	-1
  9579  0A2C  1D03               	skipz
  9580  0A2D  2A2A               	goto	u2675
  9581  0A2E  3572               	lslf	??_PWM7_LoadDutyValue,w
  9582  0A2F  0090               	movwf	16	;volatile
  9583  0A30  0008               	return
  9584  0A31                     __end_of_PWM7_LoadDutyValue:	
  9585                           
  9586                           	psect	text25
  9587  033B                     __ptext25:	
  9588 ;; *************** function _PID_Calculate *****************
  9589 ;; Defined at:
  9590 ;;		line 21 in file "pid.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  setpoint        2    0[BANK0 ] int 
  9593 ;;  temp            2    2[BANK0 ] int 
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;		None
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  3    0[BANK0 ] float 
  9598 ;; Registers used:
  9599 ;;		wreg, status,2, status,0, pclath, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;Total ram usage:        6 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:    2
  9612 ;; This function calls:
  9613 ;;		___awtoft
  9614 ;;		___wmul
  9615 ;; This function is called by:
  9616 ;;		_main
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           
  9621                           ;psect for function _PID_Calculate
  9622  033B                     _PID_Calculate:	
  9623                           
  9624                           ;pid.c: 23: pidCount+=1;
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
  9628  033B  3001               	movlw	1
  9629  033C  0021               	movlb	1	; select bank1
  9630  033D  07BA               	addwf	_pidCount^(0+128),f
  9631  033E  3000               	movlw	0
  9632  033F  3DBB               	addwfc	(_pidCount+1)^(0+128),f
  9633                           
  9634                           ;pid.c: 26: error = setpoint - temp;
  9635  0340  0020               	movlb	0	; select bank0
  9636  0341  0922               	comf	PID_Calculate@temp,w
  9637  0342  00A4               	movwf	??_PID_Calculate
  9638  0343  0923               	comf	PID_Calculate@temp+1,w
  9639  0344  00A5               	movwf	??_PID_Calculate+1
  9640  0345  0AA4               	incf	??_PID_Calculate,f
  9641  0346  1903               	skipnz
  9642  0347  0AA5               	incf	??_PID_Calculate+1,f
  9643  0348  0820               	movf	PID_Calculate@setpoint,w
  9644  0349  0724               	addwf	??_PID_Calculate,w
  9645  034A  0021               	movlb	1	; select bank1
  9646  034B  00B4               	movwf	_error^(0+128)
  9647  034C  0020               	movlb	0	; select bank0
  9648  034D  0821               	movf	PID_Calculate@setpoint+1,w
  9649  034E  3D25               	addwfc	??_PID_Calculate+1,w
  9650  034F  0021               	movlb	1	; select bank1
  9651  0350  00B5               	movwf	(_error+1)^(0+128)
  9652                           
  9653                           ;pid.c: 28: errorValue = error * Kp;
  9654  0351  0835               	movf	(_error+1)^(0+128),w
  9655  0352  00F1               	movwf	___wmul@multiplier+1
  9656  0353  0834               	movf	_error^(0+128),w
  9657  0354  00F0               	movwf	___wmul@multiplier
  9658  0355  086B               	movf	(_Kp+1)^(0+128),w
  9659  0356  00F3               	movwf	___wmul@multiplicand+1
  9660  0357  086A               	movf	_Kp^(0+128),w
  9661  0358  00F2               	movwf	___wmul@multiplicand
  9662  0359  318A  227D  3183   	fcall	___wmul
  9663  035C  0871               	movf	?___wmul+1,w
  9664  035D  0021               	movlb	1	; select bank1
  9665  035E  00B7               	movwf	(_errorValue+1)^(0+128)
  9666  035F  0870               	movf	?___wmul,w
  9667  0360  00B6               	movwf	_errorValue^(0+128)
  9668                           
  9669                           ;pid.c: 31: if(error>0)signPositive=1;
  9670  0361  0835               	movf	(_error+1)^(0+128),w
  9671  0362  3A80               	xorlw	128
  9672  0363  0020               	movlb	0	; select bank0
  9673  0364  00A4               	movwf	??_PID_Calculate
  9674  0365  3080               	movlw	128
  9675  0366  0224               	subwf	??_PID_Calculate,w
  9676  0367  1D03               	skipz
  9677  0368  2B6C               	goto	u2925
  9678  0369  3001               	movlw	1
  9679  036A  0021               	movlb	1	; select bank1
  9680  036B  0234               	subwf	_error^(0+128),w
  9681  036C                     u2925:	
  9682  036C  1C03               	skipc
  9683  036D  2B74               	goto	l2574
  9684  036E  3001               	movlw	1
  9685  036F  0021               	movlb	1	; select bank1
  9686  0370  00C4               	movwf	_signPositive^(0+128)
  9687  0371  3000               	movlw	0
  9688  0372  00C5               	movwf	(_signPositive^(0+128)+1)
  9689  0373  2B77               	goto	l2576
  9690  0374                     l2574:	
  9691                           
  9692                           ;pid.c: 33: else signPositive=0;
  9693  0374  0021               	movlb	1	; select bank1
  9694  0375  01C4               	clrf	_signPositive^(0+128)
  9695  0376  01C5               	clrf	(_signPositive+1)^(0+128)
  9696  0377                     l2576:	
  9697                           
  9698                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
  9699  0377  0839               	movf	(_lastSign+1)^(0+128),w
  9700  0378  0645               	xorwf	(_signPositive+1)^(0+128),w
  9701  0379  1D03               	skipz
  9702  037A  2B7D               	goto	u2935
  9703  037B  0838               	movf	_lastSign^(0+128),w
  9704  037C  0644               	xorwf	_signPositive^(0+128),w
  9705  037D                     u2935:	
  9706  037D  1903               	skipnz
  9707  037E  2B81               	goto	l2580
  9708  037F  01BC               	clrf	_pidIntegrated^(0+128)
  9709  0380  01BD               	clrf	(_pidIntegrated+1)^(0+128)
  9710  0381                     l2580:	
  9711                           
  9712                           ;pid.c: 37: lastSign=signPositive;
  9713  0381  0845               	movf	(_signPositive+1)^(0+128),w
  9714  0382  00B9               	movwf	(_lastSign+1)^(0+128)
  9715  0383  0844               	movf	_signPositive^(0+128),w
  9716  0384  00B8               	movwf	_lastSign^(0+128)
  9717                           
  9718                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
  9719  0385  0940               	comf	_pidPrevError^(0+128),w
  9720  0386  0020               	movlb	0	; select bank0
  9721  0387  00A4               	movwf	??_PID_Calculate
  9722  0388  0021               	movlb	1	; select bank1
  9723  0389  0941               	comf	(_pidPrevError+1)^(0+128),w
  9724  038A  0020               	movlb	0	; select bank0
  9725  038B  00A5               	movwf	??_PID_Calculate+1
  9726  038C  0AA4               	incf	??_PID_Calculate,f
  9727  038D  1903               	skipnz
  9728  038E  0AA5               	incf	??_PID_Calculate+1,f
  9729  038F  0021               	movlb	1	; select bank1
  9730  0390  0834               	movf	_error^(0+128),w
  9731  0391  0020               	movlb	0	; select bank0
  9732  0392  0724               	addwf	??_PID_Calculate,w
  9733  0393  00F0               	movwf	___wmul@multiplier
  9734  0394  0021               	movlb	1	; select bank1
  9735  0395  0835               	movf	(_error+1)^(0+128),w
  9736  0396  0020               	movlb	0	; select bank0
  9737  0397  3D25               	addwfc	??_PID_Calculate+1,w
  9738  0398  00F1               	movwf	___wmul@multiplier+1
  9739  0399  0021               	movlb	1	; select bank1
  9740  039A  082D               	movf	(_Kd+1)^(0+128),w
  9741  039B  00F3               	movwf	___wmul@multiplicand+1
  9742  039C  082C               	movf	_Kd^(0+128),w
  9743  039D  00F2               	movwf	___wmul@multiplicand
  9744  039E  318A  227D  3183   	fcall	___wmul
  9745  03A1  0871               	movf	?___wmul+1,w
  9746  03A2  0021               	movlb	1	; select bank1
  9747  03A3  00B1               	movwf	(_derivativeValue+1)^(0+128)
  9748  03A4  0870               	movf	?___wmul,w
  9749  03A5  00B0               	movwf	_derivativeValue^(0+128)
  9750                           
  9751                           ;pid.c: 42: pidPrevError = error;
  9752  03A6  0835               	movf	(_error+1)^(0+128),w
  9753  03A7  00C1               	movwf	(_pidPrevError+1)^(0+128)
  9754  03A8  0834               	movf	_error^(0+128),w
  9755  03A9  00C0               	movwf	_pidPrevError^(0+128)
  9756                           
  9757                           ;pid.c: 45: if(pidCount>20)
  9758  03AA  083B               	movf	(_pidCount+1)^(0+128),w
  9759  03AB  3A80               	xorlw	128
  9760  03AC  0020               	movlb	0	; select bank0
  9761  03AD  00A4               	movwf	??_PID_Calculate
  9762  03AE  3080               	movlw	128
  9763  03AF  0224               	subwf	??_PID_Calculate,w
  9764  03B0  1D03               	skipz
  9765  03B1  2BB5               	goto	u2945
  9766  03B2  3015               	movlw	21
  9767  03B3  0021               	movlb	1	; select bank1
  9768  03B4  023A               	subwf	_pidCount^(0+128),w
  9769  03B5                     u2945:	
  9770  03B5  1C03               	skipc
  9771  03B6  2BF8               	goto	l2598
  9772                           
  9773                           ;pid.c: 46: {
  9774                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
  9775  03B7  0021               	movlb	1	; select bank1
  9776  03B8  0835               	movf	(_error+1)^(0+128),w
  9777  03B9  00F1               	movwf	___wmul@multiplier+1
  9778  03BA  0834               	movf	_error^(0+128),w
  9779  03BB  00F0               	movwf	___wmul@multiplier
  9780  03BC  0869               	movf	(_Ki+1)^(0+128),w
  9781  03BD  00F3               	movwf	___wmul@multiplicand+1
  9782  03BE  0868               	movf	_Ki^(0+128),w
  9783  03BF  00F2               	movwf	___wmul@multiplicand
  9784  03C0  318A  227D  3183   	fcall	___wmul
  9785  03C3  0021               	movlb	1	; select bank1
  9786  03C4  083C               	movf	_pidIntegrated^(0+128),w
  9787  03C5  0770               	addwf	?___wmul,w
  9788  03C6  00BC               	movwf	_pidIntegrated^(0+128)
  9789  03C7  083D               	movf	(_pidIntegrated+1)^(0+128),w
  9790  03C8  3D71               	addwfc	?___wmul+1,w
  9791  03C9  00BD               	movwf	(_pidIntegrated+1)^(0+128)
  9792                           
  9793                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
  9794  03CA  083D               	movf	(_pidIntegrated+1)^(0+128),w
  9795  03CB  3A80               	xorlw	128
  9796  03CC  0020               	movlb	0	; select bank0
  9797  03CD  00A4               	movwf	??_PID_Calculate
  9798  03CE  0021               	movlb	1	; select bank1
  9799  03CF  083F               	movf	(_pidMinOutput+1)^(0+128),w
  9800  03D0  3A80               	xorlw	128
  9801  03D1  0020               	movlb	0	; select bank0
  9802  03D2  0224               	subwf	??_PID_Calculate,w
  9803  03D3  1D03               	skipz
  9804  03D4  2BD8               	goto	u2955
  9805  03D5  0021               	movlb	1	; select bank1
  9806  03D6  083E               	movf	_pidMinOutput^(0+128),w
  9807  03D7  023C               	subwf	_pidIntegrated^(0+128),w
  9808  03D8                     u2955:	
  9809  03D8  1803               	skipnc
  9810  03D9  2BDF               	goto	l223
  9811                           
  9812                           ;pid.c: 50: {
  9813                           ;pid.c: 51: pidIntegrated= pidMinOutput;
  9814  03DA  0021               	movlb	1	; select bank1
  9815  03DB  083F               	movf	(_pidMinOutput+1)^(0+128),w
  9816  03DC  00BD               	movwf	(_pidIntegrated+1)^(0+128)
  9817  03DD  083E               	movf	_pidMinOutput^(0+128),w
  9818  03DE  00BC               	movwf	_pidIntegrated^(0+128)
  9819  03DF                     l223:	
  9820                           
  9821                           ;pid.c: 52: }
  9822                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
  9823  03DF  0021               	movlb	1	; select bank1
  9824  03E0  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  9825  03E1  3A80               	xorlw	128
  9826  03E2  0020               	movlb	0	; select bank0
  9827  03E3  00A4               	movwf	??_PID_Calculate
  9828  03E4  0021               	movlb	1	; select bank1
  9829  03E5  083D               	movf	(_pidIntegrated+1)^(0+128),w
  9830  03E6  3A80               	xorlw	128
  9831  03E7  0020               	movlb	0	; select bank0
  9832  03E8  0224               	subwf	??_PID_Calculate,w
  9833  03E9  1D03               	skipz
  9834  03EA  2BEE               	goto	u2965
  9835  03EB  0021               	movlb	1	; select bank1
  9836  03EC  083C               	movf	_pidIntegrated^(0+128),w
  9837  03ED  026C               	subwf	_pidMaxOutput^(0+128),w
  9838  03EE                     u2965:	
  9839  03EE  1803               	skipnc
  9840  03EF  2BF5               	goto	l2596
  9841                           
  9842                           ;pid.c: 55: {
  9843                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
  9844  03F0  0021               	movlb	1	; select bank1
  9845  03F1  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  9846  03F2  00BD               	movwf	(_pidIntegrated+1)^(0+128)
  9847  03F3  086C               	movf	_pidMaxOutput^(0+128),w
  9848  03F4  00BC               	movwf	_pidIntegrated^(0+128)
  9849  03F5                     l2596:	
  9850                           
  9851                           ;pid.c: 57: }
  9852                           ;pid.c: 58: pidCount=0;
  9853  03F5  0021               	movlb	1	; select bank1
  9854  03F6  01BA               	clrf	_pidCount^(0+128)
  9855  03F7  01BB               	clrf	(_pidCount+1)^(0+128)
  9856  03F8                     l2598:	
  9857                           
  9858                           ;pid.c: 59: }
  9859                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
  9860  03F8  0021               	movlb	1	; select bank1
  9861  03F9  083C               	movf	_pidIntegrated^(0+128),w
  9862  03FA  0736               	addwf	_errorValue^(0+128),w
  9863  03FB  0020               	movlb	0	; select bank0
  9864  03FC  00A4               	movwf	??_PID_Calculate
  9865  03FD  0021               	movlb	1	; select bank1
  9866  03FE  083D               	movf	(_pidIntegrated+1)^(0+128),w
  9867  03FF  3D37               	addwfc	(_errorValue+1)^(0+128),w
  9868  0400  0020               	movlb	0	; select bank0
  9869  0401  00A5               	movwf	??_PID_Calculate+1
  9870  0402  0021               	movlb	1	; select bank1
  9871  0403  0830               	movf	_derivativeValue^(0+128),w
  9872  0404  0020               	movlb	0	; select bank0
  9873  0405  0724               	addwf	??_PID_Calculate,w
  9874  0406  0021               	movlb	1	; select bank1
  9875  0407  00AE               	movwf	_Result^(0+128)
  9876  0408  0831               	movf	(_derivativeValue+1)^(0+128),w
  9877  0409  0020               	movlb	0	; select bank0
  9878  040A  3D25               	addwfc	??_PID_Calculate+1,w
  9879  040B  0021               	movlb	1	; select bank1
  9880  040C  00AF               	movwf	(_Result+1)^(0+128)
  9881                           
  9882                           ;pid.c: 64: if (Result < pidMinOutput)
  9883  040D  082F               	movf	(_Result+1)^(0+128),w
  9884  040E  3A80               	xorlw	128
  9885  040F  0020               	movlb	0	; select bank0
  9886  0410  00A4               	movwf	??_PID_Calculate
  9887  0411  0021               	movlb	1	; select bank1
  9888  0412  083F               	movf	(_pidMinOutput+1)^(0+128),w
  9889  0413  3A80               	xorlw	128
  9890  0414  0020               	movlb	0	; select bank0
  9891  0415  0224               	subwf	??_PID_Calculate,w
  9892  0416  1D03               	skipz
  9893  0417  2C1B               	goto	u2975
  9894  0418  0021               	movlb	1	; select bank1
  9895  0419  083E               	movf	_pidMinOutput^(0+128),w
  9896  041A  022E               	subwf	_Result^(0+128),w
  9897  041B                     u2975:	
  9898  041B  1803               	skipnc
  9899  041C  2C22               	goto	l225
  9900                           
  9901                           ;pid.c: 65: {
  9902                           ;pid.c: 66: Result = pidMinOutput;
  9903  041D  0021               	movlb	1	; select bank1
  9904  041E  083F               	movf	(_pidMinOutput+1)^(0+128),w
  9905  041F  00AF               	movwf	(_Result+1)^(0+128)
  9906  0420  083E               	movf	_pidMinOutput^(0+128),w
  9907  0421  00AE               	movwf	_Result^(0+128)
  9908  0422                     l225:	
  9909                           
  9910                           ;pid.c: 67: }
  9911                           ;pid.c: 69: if (Result > pidMaxOutput)
  9912  0422  0021               	movlb	1	; select bank1
  9913  0423  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  9914  0424  3A80               	xorlw	128
  9915  0425  0020               	movlb	0	; select bank0
  9916  0426  00A4               	movwf	??_PID_Calculate
  9917  0427  0021               	movlb	1	; select bank1
  9918  0428  082F               	movf	(_Result+1)^(0+128),w
  9919  0429  3A80               	xorlw	128
  9920  042A  0020               	movlb	0	; select bank0
  9921  042B  0224               	subwf	??_PID_Calculate,w
  9922  042C  1D03               	skipz
  9923  042D  2C31               	goto	u2985
  9924  042E  0021               	movlb	1	; select bank1
  9925  042F  082E               	movf	_Result^(0+128),w
  9926  0430  026C               	subwf	_pidMaxOutput^(0+128),w
  9927  0431                     u2985:	
  9928  0431  1803               	skipnc
  9929  0432  2C38               	goto	l2606
  9930                           
  9931                           ;pid.c: 70: {
  9932                           ;pid.c: 71: Result = pidMaxOutput;
  9933  0433  0021               	movlb	1	; select bank1
  9934  0434  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  9935  0435  00AF               	movwf	(_Result+1)^(0+128)
  9936  0436  086C               	movf	_pidMaxOutput^(0+128),w
  9937  0437  00AE               	movwf	_Result^(0+128)
  9938  0438                     l2606:	
  9939                           
  9940                           ;pid.c: 72: }
  9941                           ;pid.c: 74: return (Result);
  9942  0438  0021               	movlb	1	; select bank1
  9943  0439  082F               	movf	(_Result+1)^(0+128),w
  9944  043A  00F9               	movwf	___awtoft@c+1
  9945  043B  082E               	movf	_Result^(0+128),w
  9946  043C  00F8               	movwf	___awtoft@c
  9947  043D  318A  22B6         	fcall	___awtoft
  9948  043F  0878               	movf	?___awtoft,w
  9949  0440  0020               	movlb	0	; select bank0
  9950  0441  00A0               	movwf	?_PID_Calculate
  9951  0442  0879               	movf	?___awtoft+1,w
  9952  0443  00A1               	movwf	?_PID_Calculate+1
  9953  0444  087A               	movf	?___awtoft+2,w
  9954  0445  00A2               	movwf	?_PID_Calculate+2
  9955  0446  0008               	return
  9956  0447                     __end_of_PID_Calculate:	
  9957                           
  9958                           	psect	text26
  9959  0A7D                     __ptext26:	
  9960 ;; *************** function ___wmul *****************
  9961 ;; Defined at:
  9962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  multiplier      2    0[COMMON] unsigned int 
  9965 ;;  multiplicand    2    2[COMMON] unsigned int 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  product         2    4[COMMON] unsigned int 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  2    0[COMMON] unsigned int 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;Total ram usage:        6 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_PID_Calculate
  9987 ;;		_eval_poly
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           
  9992                           ;psect for function ___wmul
  9993  0A7D                     ___wmul:	
  9994                           
  9995                           ;incstack = 0
  9996                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9997  0A7D  01F4               	clrf	___wmul@product
  9998  0A7E  01F5               	clrf	___wmul@product+1
  9999  0A7F                     l1852:	
 10000  0A7F  1C70               	btfss	___wmul@multiplier,0
 10001  0A80  2A85               	goto	l422
 10002  0A81  0872               	movf	___wmul@multiplicand,w
 10003  0A82  07F4               	addwf	___wmul@product,f
 10004  0A83  0873               	movf	___wmul@multiplicand+1,w
 10005  0A84  3DF5               	addwfc	___wmul@product+1,f
 10006  0A85                     l422:	
 10007  0A85  3001               	movlw	1
 10008  0A86                     u1755:	
 10009  0A86  35F2               	lslf	___wmul@multiplicand,f
 10010  0A87  0DF3               	rlf	___wmul@multiplicand+1,f
 10011  0A88  0B89               	decfsz	9,f
 10012  0A89  2A86               	goto	u1755
 10013  0A8A  3001               	movlw	1
 10014  0A8B                     u1765:	
 10015  0A8B  36F1               	lsrf	___wmul@multiplier+1,f
 10016  0A8C  0CF0               	rrf	___wmul@multiplier,f
 10017  0A8D  0B89               	decfsz	9,f
 10018  0A8E  2A8B               	goto	u1765
 10019  0A8F  0870               	movf	___wmul@multiplier,w
 10020  0A90  0471               	iorwf	___wmul@multiplier+1,w
 10021  0A91  1D03               	btfss	3,2
 10022  0A92  2A7F               	goto	l1852
 10023  0A93  0875               	movf	___wmul@product+1,w
 10024  0A94  00F1               	movwf	?___wmul+1
 10025  0A95  0874               	movf	___wmul@product,w
 10026  0A96  00F0               	movwf	?___wmul
 10027  0A97  0008               	return
 10028  0A98                     __end_of___wmul:	
 10029                           
 10030                           	psect	text27
 10031  0AB6                     __ptext27:	
 10032 ;; *************** function ___awtoft *****************
 10033 ;; Defined at:
 10034 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  c               2    8[COMMON] int 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  sign            1   13[COMMON] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  3    8[COMMON] float 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        6 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    1
 10055 ;; This function calls:
 10056 ;;		___ftpack
 10057 ;; This function is called by:
 10058 ;;		_PID_Calculate
 10059 ;;		_tempCalc
 10060 ;;		_log
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           
 10065                           ;psect for function ___awtoft
 10066  0AB6                     ___awtoft:	
 10067                           
 10068                           ;incstack = 0
 10069                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 10070  0AB6  01FD               	clrf	___awtoft@sign
 10071  0AB7  1FF9               	btfss	___awtoft@c+1,7
 10072  0AB8  2AC0               	goto	l2022
 10073  0AB9  09F8               	comf	___awtoft@c,f
 10074  0ABA  09F9               	comf	___awtoft@c+1,f
 10075  0ABB  0AF8               	incf	___awtoft@c,f
 10076  0ABC  1903               	skipnz
 10077  0ABD  0AF9               	incf	___awtoft@c+1,f
 10078  0ABE  01FD               	clrf	___awtoft@sign
 10079  0ABF  0AFD               	incf	___awtoft@sign,f
 10080  0AC0                     l2022:	
 10081  0AC0  0878               	movf	___awtoft@c,w
 10082  0AC1  00F0               	movwf	___ftpack@arg
 10083  0AC2  0879               	movf	___awtoft@c+1,w
 10084  0AC3  00F1               	movwf	___ftpack@arg+1
 10085  0AC4  01F2               	clrf	___ftpack@arg+2
 10086  0AC5  308E               	movlw	142
 10087  0AC6  00FB               	movwf	??___awtoft
 10088  0AC7  087B               	movf	??___awtoft,w
 10089  0AC8  00F3               	movwf	___ftpack@exp
 10090  0AC9  087D               	movf	___awtoft@sign,w
 10091  0ACA  00FC               	movwf	??___awtoft+1
 10092  0ACB  087C               	movf	??___awtoft+1,w
 10093  0ACC  00F4               	movwf	___ftpack@sign
 10094  0ACD  318D  2545         	fcall	___ftpack
 10095  0ACF  0870               	movf	?___ftpack,w
 10096  0AD0  00F8               	movwf	?___awtoft
 10097  0AD1  0871               	movf	?___ftpack+1,w
 10098  0AD2  00F9               	movwf	?___awtoft+1
 10099  0AD3  0872               	movf	?___ftpack+2,w
 10100  0AD4  00FA               	movwf	?___awtoft+2
 10101  0AD5  0008               	return
 10102  0AD6                     __end_of___awtoft:	
 10103                           
 10104                           	psect	text28
 10105  0D45                     __ptext28:	
 10106 ;; *************** function ___ftpack *****************
 10107 ;; Defined at:
 10108 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  arg             3    0[COMMON] unsigned um
 10111 ;;  exp             1    3[COMMON] unsigned char 
 10112 ;;  sign            1    4[COMMON] unsigned char 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  3    0[COMMON] float 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10124 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;Total ram usage:        8 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		___awtoft
 10134 ;;		___ftadd
 10135 ;;		___ftdiv
 10136 ;;		___ftmul
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function ___ftpack
 10142  0D45                     ___ftpack:	
 10143                           
 10144                           ;incstack = 0
 10145                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10146  0D45  0873               	movf	___ftpack@exp,w
 10147  0D46  1903               	btfsc	3,2
 10148  0D47  2D4D               	goto	l1806
 10149  0D48  0872               	movf	___ftpack@arg+2,w
 10150  0D49  0471               	iorwf	___ftpack@arg+1,w
 10151  0D4A  0470               	iorwf	___ftpack@arg,w
 10152  0D4B  1D03               	skipz
 10153  0D4C  2D5E               	goto	l1812
 10154  0D4D                     l1806:	
 10155  0D4D  3000               	movlw	0
 10156  0D4E  00F0               	movwf	?___ftpack
 10157  0D4F  3000               	movlw	0
 10158  0D50  00F1               	movwf	?___ftpack+1
 10159  0D51  3000               	movlw	0
 10160  0D52  00F2               	movwf	?___ftpack+2
 10161  0D53  0008               	return
 10162  0D54                     l1810:	
 10163  0D54  3001               	movlw	1
 10164  0D55  00F5               	movwf	??___ftpack
 10165  0D56  0875               	movf	??___ftpack,w
 10166  0D57  07F3               	addwf	___ftpack@exp,f
 10167  0D58  3001               	movlw	1
 10168  0D59                     u1605:	
 10169  0D59  36F2               	lsrf	___ftpack@arg+2,f
 10170  0D5A  0CF1               	rrf	___ftpack@arg+1,f
 10171  0D5B  0CF0               	rrf	___ftpack@arg,f
 10172  0D5C  0B89               	decfsz	9,f
 10173  0D5D  2D59               	goto	u1605
 10174  0D5E                     l1812:	
 10175  0D5E  30FE               	movlw	254
 10176  0D5F  0572               	andwf	___ftpack@arg+2,w
 10177  0D60  1903               	btfsc	3,2
 10178  0D61  2D77               	goto	l583
 10179  0D62  2D54               	goto	l1810
 10180  0D63                     l1814:	
 10181  0D63  3001               	movlw	1
 10182  0D64  00F5               	movwf	??___ftpack
 10183  0D65  0875               	movf	??___ftpack,w
 10184  0D66  07F3               	addwf	___ftpack@exp,f
 10185  0D67  3001               	movlw	1
 10186  0D68  07F0               	addwf	___ftpack@arg,f
 10187  0D69  3000               	movlw	0
 10188  0D6A  1803               	skipnc
 10189  0D6B  3001               	movlw	1
 10190  0D6C  07F1               	addwf	___ftpack@arg+1,f
 10191  0D6D  3000               	movlw	0
 10192  0D6E  1803               	skipnc
 10193  0D6F  3001               	movlw	1
 10194  0D70  07F2               	addwf	___ftpack@arg+2,f
 10195  0D71  3001               	movlw	1
 10196  0D72                     u1625:	
 10197  0D72  36F2               	lsrf	___ftpack@arg+2,f
 10198  0D73  0CF1               	rrf	___ftpack@arg+1,f
 10199  0D74  0CF0               	rrf	___ftpack@arg,f
 10200  0D75  0B89               	decfsz	9,f
 10201  0D76  2D72               	goto	u1625
 10202  0D77                     l583:	
 10203  0D77  30FF               	movlw	255
 10204  0D78  0572               	andwf	___ftpack@arg+2,w
 10205  0D79  1903               	btfsc	3,2
 10206  0D7A  2D84               	goto	l1822
 10207  0D7B  2D63               	goto	l1814
 10208  0D7C                     l1820:	
 10209  0D7C  3001               	movlw	1
 10210  0D7D  02F3               	subwf	___ftpack@exp,f
 10211  0D7E  3001               	movlw	1
 10212  0D7F                     u1645:	
 10213  0D7F  35F0               	lslf	___ftpack@arg,f
 10214  0D80  0DF1               	rlf	___ftpack@arg+1,f
 10215  0D81  0DF2               	rlf	___ftpack@arg+2,f
 10216  0D82  0B89               	decfsz	9,f
 10217  0D83  2D7F               	goto	u1645
 10218  0D84                     l1822:	
 10219  0D84  1BF1               	btfsc	___ftpack@arg+1,7
 10220  0D85  2D8A               	goto	l590
 10221  0D86  3002               	movlw	2
 10222  0D87  0273               	subwf	___ftpack@exp,w
 10223  0D88  1803               	skipnc
 10224  0D89  2D7C               	goto	l1820
 10225  0D8A                     l590:	
 10226  0D8A  1873               	btfsc	___ftpack@exp,0
 10227  0D8B  2D92               	goto	l591
 10228  0D8C  30FF               	movlw	255
 10229  0D8D  05F0               	andwf	___ftpack@arg,f
 10230  0D8E  307F               	movlw	127
 10231  0D8F  05F1               	andwf	___ftpack@arg+1,f
 10232  0D90  30FF               	movlw	255
 10233  0D91  05F2               	andwf	___ftpack@arg+2,f
 10234  0D92                     l591:	
 10235  0D92  1003               	clrc
 10236  0D93  0CF3               	rrf	___ftpack@exp,f
 10237  0D94  0873               	movf	___ftpack@exp,w
 10238  0D95  00F5               	movwf	??___ftpack
 10239  0D96  01F6               	clrf	??___ftpack+1
 10240  0D97  01F7               	clrf	??___ftpack+2
 10241  0D98  3010               	movlw	16
 10242  0D99                     u1685:	
 10243  0D99  35F5               	lslf	??___ftpack,f
 10244  0D9A  0DF6               	rlf	??___ftpack+1,f
 10245  0D9B  0DF7               	rlf	??___ftpack+2,f
 10246  0D9C  0B89               	decfsz	9,f
 10247  0D9D  2D99               	goto	u1685
 10248  0D9E  0875               	movf	??___ftpack,w
 10249  0D9F  04F0               	iorwf	___ftpack@arg,f
 10250  0DA0  0876               	movf	??___ftpack+1,w
 10251  0DA1  04F1               	iorwf	___ftpack@arg+1,f
 10252  0DA2  0877               	movf	??___ftpack+2,w
 10253  0DA3  04F2               	iorwf	___ftpack@arg+2,f
 10254  0DA4  0874               	movf	___ftpack@sign,w
 10255  0DA5  1903               	btfsc	3,2
 10256  0DA6  0008               	return
 10257  0DA7  17F2               	bsf	___ftpack@arg+2,7
 10258  0DA8  0008               	return
 10259  0DA9                     __end_of___ftpack:	
 10260                           
 10261                           	psect	text29
 10262  0A49                     __ptext29:	
 10263 ;; *************** function _LCD_Write_String *****************
 10264 ;; Defined at:
 10265 ;;		line 239 in file "lcd.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  a               2    5[COMMON] PTR const unsigned char 
 10268 ;;		 -> STR_2(9), STR_1(5), 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  i               2    8[COMMON] int 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;Total ram usage:        5 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    2
 10287 ;; This function calls:
 10288 ;;		_LCD_Write_Char
 10289 ;; This function is called by:
 10290 ;;		_main
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function _LCD_Write_String
 10296  0A49                     _LCD_Write_String:	
 10297                           
 10298                           ;lcd.c: 241: int i;
 10299                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10300                           
 10301                           ;incstack = 0
 10302                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10303  0A49  01F8               	clrf	LCD_Write_String@i
 10304  0A4A  01F9               	clrf	LCD_Write_String@i+1
 10305  0A4B                     l2512:	
 10306  0A4B  0875               	movf	LCD_Write_String@a,w
 10307  0A4C  0778               	addwf	LCD_Write_String@i,w
 10308  0A4D  0084               	movwf	4
 10309  0A4E  0876               	movf	LCD_Write_String@a+1,w
 10310  0A4F  3D79               	addwfc	LCD_Write_String@i+1,w
 10311  0A50  0085               	movwf	5
 10312  0A51  0012               	moviw fsr0++
 10313  0A52  1903               	btfsc	3,2
 10314  0A53  0008               	return
 10315                           
 10316                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10317  0A54  0875               	movf	LCD_Write_String@a,w
 10318  0A55  0778               	addwf	LCD_Write_String@i,w
 10319  0A56  0084               	movwf	4
 10320  0A57  0876               	movf	LCD_Write_String@a+1,w
 10321  0A58  3D79               	addwfc	LCD_Write_String@i+1,w
 10322  0A59  0085               	movwf	5
 10323  0A5A  0800               	movf	0,w	;code access
 10324  0A5B  318A  22FC  318A   	fcall	_LCD_Write_Char
 10325  0A5E  3001               	movlw	1
 10326  0A5F  07F8               	addwf	LCD_Write_String@i,f
 10327  0A60  3000               	movlw	0
 10328  0A61  3DF9               	addwfc	LCD_Write_String@i+1,f
 10329  0A62  2A4B               	goto	l2512
 10330  0A63                     __end_of_LCD_Write_String:	
 10331                           
 10332                           	psect	text30
 10333  017C                     __ptext30:	
 10334 ;; *************** function _LCD_Write_Int *****************
 10335 ;; Defined at:
 10336 ;;		line 246 in file "lcd.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  value           2    9[COMMON] int 
 10339 ;;  fieldLength     1   11[COMMON] char 
 10340 ;;  numPlaces       1   12[COMMON] char 
 10341 ;;  sign            1   13[COMMON] char 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  str             5    5[BANK0 ] unsigned char [5]
 10344 ;;  i               2   12[BANK0 ] int 
 10345 ;;  j               2   10[BANK0 ] int 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10355 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;Total ram usage:       19 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; Hardware stack levels required when called:    2
 10362 ;; This function calls:
 10363 ;;		_LCD_Write_Char
 10364 ;;		___awdiv
 10365 ;;		___awmod
 10366 ;; This function is called by:
 10367 ;;		_main
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _LCD_Write_Int
 10373  017C                     _LCD_Write_Int:	
 10374                           
 10375                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10376                           
 10377                           ;incstack = 0
 10378                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10379  017C  3030               	movlw	low LCD_Write_Int@F13690
 10380  017D  0086               	movwf	6
 10381  017E  3001               	movlw	high LCD_Write_Int@F13690
 10382  017F  0087               	movwf	7
 10383  0180  3025               	movlw	low LCD_Write_Int@str
 10384  0181  0084               	movwf	4
 10385  0182  3000               	movlw	high LCD_Write_Int@str
 10386  0183  0085               	movwf	5
 10387  0184  3005               	movlw	5
 10388  0185  0020               	movlb	0	; select bank0
 10389  0186  00A0               	movwf	??_LCD_Write_Int
 10390  0187                     u2830:	
 10391  0187  0016               	moviw fsr1++
 10392  0188  001A               	movwi fsr0++
 10393  0189  0BA0               	decfsz	??_LCD_Write_Int,f
 10394  018A  2987               	goto	u2830
 10395                           
 10396                           ;lcd.c: 249: int i=4,j=0;
 10397  018B  3004               	movlw	4
 10398  018C  00AC               	movwf	LCD_Write_Int@i
 10399  018D  3000               	movlw	0
 10400  018E  00AD               	movwf	LCD_Write_Int@i+1
 10401  018F  01AA               	clrf	LCD_Write_Int@j
 10402  0190  01AB               	clrf	LCD_Write_Int@j+1
 10403                           
 10404                           ;lcd.c: 251: if(value<0)
 10405  0191  1FFA               	btfss	LCD_Write_Int@value+1,7
 10406  0192  299D               	goto	l2526
 10407                           
 10408                           ;lcd.c: 252: {
 10409                           ;lcd.c: 253: LCD_Write_Char('-');
 10410  0193  302D               	movlw	45
 10411  0194  318A  22FC  3181   	fcall	_LCD_Write_Char
 10412                           
 10413                           ;lcd.c: 254: value=value*-1;
 10414  0197  09F9               	comf	LCD_Write_Int@value,f
 10415  0198  09FA               	comf	LCD_Write_Int@value+1,f
 10416  0199  0AF9               	incf	LCD_Write_Int@value,f
 10417  019A  1903               	skipnz
 10418  019B  0AFA               	incf	LCD_Write_Int@value+1,f
 10419                           
 10420                           ;lcd.c: 255: }
 10421  019C  29A4               	goto	l2536
 10422  019D                     l2526:	
 10423                           
 10424                           ;lcd.c: 257: else
 10425                           ;lcd.c: 258: {
 10426                           ;lcd.c: 259: if(sign == 1)
 10427  019D  037D               	decf	LCD_Write_Int@sign,w
 10428  019E  1D03               	btfss	3,2
 10429  019F  29A4               	goto	l2536
 10430                           
 10431                           ;lcd.c: 260: {
 10432                           ;lcd.c: 261: LCD_Write_Char('+');
 10433  01A0  302B               	movlw	43
 10434  01A1  318A  22FC  3181   	fcall	_LCD_Write_Char
 10435  01A4                     l2536:	
 10436                           ;lcd.c: 262: }
 10437                           ;lcd.c: 263: }
 10438                           ;lcd.c: 265: while(value)
 10439                           
 10440  01A4  0879               	movf	LCD_Write_Int@value,w
 10441  01A5  047A               	iorwf	LCD_Write_Int@value+1,w
 10442  01A6  1903               	btfsc	3,2
 10443  01A7  29D1               	goto	l2538
 10444                           
 10445                           ;lcd.c: 266: {
 10446                           ;lcd.c: 267: str[i]=value%10;
 10447  01A8  300A               	movlw	10
 10448  01A9  00F0               	movwf	___awmod@divisor
 10449  01AA  3000               	movlw	0
 10450  01AB  00F1               	movwf	___awmod@divisor+1
 10451  01AC  087A               	movf	LCD_Write_Int@value+1,w
 10452  01AD  00F3               	movwf	___awmod@dividend+1
 10453  01AE  0879               	movf	LCD_Write_Int@value,w
 10454  01AF  00F2               	movwf	___awmod@dividend
 10455  01B0  318C  244F  3181   	fcall	___awmod
 10456  01B3  0870               	movf	?___awmod,w
 10457  01B4  0020               	movlb	0	; select bank0
 10458  01B5  00A0               	movwf	??_LCD_Write_Int
 10459  01B6  082C               	movf	LCD_Write_Int@i,w
 10460  01B7  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10461  01B8  0086               	movwf	6
 10462  01B9  0187               	clrf	7
 10463  01BA  0820               	movf	??_LCD_Write_Int,w
 10464  01BB  0081               	movwf	1
 10465                           
 10466                           ;lcd.c: 268: value=value/10;
 10467  01BC  300A               	movlw	10
 10468  01BD  00F0               	movwf	___awdiv@divisor
 10469  01BE  3000               	movlw	0
 10470  01BF  00F1               	movwf	___awdiv@divisor+1
 10471  01C0  087A               	movf	LCD_Write_Int@value+1,w
 10472  01C1  00F3               	movwf	___awdiv@dividend+1
 10473  01C2  0879               	movf	LCD_Write_Int@value,w
 10474  01C3  00F2               	movwf	___awdiv@dividend
 10475  01C4  318C  2494  3181   	fcall	___awdiv
 10476  01C7  0871               	movf	?___awdiv+1,w
 10477  01C8  00FA               	movwf	LCD_Write_Int@value+1
 10478  01C9  0870               	movf	?___awdiv,w
 10479  01CA  00F9               	movwf	LCD_Write_Int@value
 10480                           
 10481                           ;lcd.c: 269: i--;
 10482  01CB  30FF               	movlw	255
 10483  01CC  0020               	movlb	0	; select bank0
 10484  01CD  07AC               	addwf	LCD_Write_Int@i,f
 10485  01CE  30FF               	movlw	255
 10486  01CF  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10487  01D0  29A4               	goto	l2536
 10488  01D1                     l2538:	
 10489                           
 10490                           ;lcd.c: 270: }
 10491                           ;lcd.c: 271: if(fieldLength==-1)
 10492  01D1  0A7B               	incf	LCD_Write_Int@fieldLength,w
 10493  01D2  1903               	btfsc	3,2
 10494  01D3  29DA               	goto	l2544
 10495  01D4  29E3               	goto	l2546
 10496  01D5                     l2542:	
 10497                           ;lcd.c: 272: {
 10498                           ;lcd.c: 273: while(str[j]==0)
 10499                           
 10500                           
 10501                           ;lcd.c: 274: {
 10502                           ;lcd.c: 275: j++;
 10503  01D5  3001               	movlw	1
 10504  01D6  0020               	movlb	0	; select bank0
 10505  01D7  07AA               	addwf	LCD_Write_Int@j,f
 10506  01D8  3000               	movlw	0
 10507  01D9  3DAB               	addwfc	LCD_Write_Int@j+1,f
 10508  01DA                     l2544:	
 10509  01DA  0020               	movlb	0	; select bank0
 10510  01DB  082A               	movf	LCD_Write_Int@j,w
 10511  01DC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10512  01DD  0086               	movwf	6
 10513  01DE  0187               	clrf	7
 10514  01DF  0801               	movf	1,w
 10515  01E0  1D03               	btfss	3,2
 10516  01E1  29F4               	goto	l2548
 10517  01E2  29D5               	goto	l2542
 10518  01E3                     l2546:	
 10519                           ;lcd.c: 276: }
 10520                           ;lcd.c: 277: }
 10521                           
 10522                           
 10523                           ;lcd.c: 278: else
 10524                           ;lcd.c: 279: {
 10525                           ;lcd.c: 280: j=5-fieldLength;
 10526  01E3  087B               	movf	LCD_Write_Int@fieldLength,w
 10527  01E4  0020               	movlb	0	; select bank0
 10528  01E5  00A0               	movwf	??_LCD_Write_Int
 10529  01E6  01A1               	clrf	??_LCD_Write_Int+1
 10530  01E7  1BA0               	btfsc	??_LCD_Write_Int,7
 10531  01E8  03A1               	decf	??_LCD_Write_Int+1,f
 10532  01E9  09A0               	comf	??_LCD_Write_Int,f
 10533  01EA  09A1               	comf	??_LCD_Write_Int+1,f
 10534  01EB  0AA0               	incf	??_LCD_Write_Int,f
 10535  01EC  1903               	skipnz
 10536  01ED  0AA1               	incf	??_LCD_Write_Int+1,f
 10537  01EE  0820               	movf	??_LCD_Write_Int,w
 10538  01EF  3E05               	addlw	5
 10539  01F0  00AA               	movwf	LCD_Write_Int@j
 10540  01F1  3000               	movlw	0
 10541  01F2  3D21               	addwfc	??_LCD_Write_Int+1,w
 10542  01F3  00AB               	movwf	LCD_Write_Int@j+1
 10543  01F4                     l2548:	
 10544                           
 10545                           ;lcd.c: 281: }
 10546                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10547  01F4  082B               	movf	LCD_Write_Int@j+1,w
 10548  01F5  00AD               	movwf	LCD_Write_Int@i+1
 10549  01F6  082A               	movf	LCD_Write_Int@j,w
 10550  01F7  00AC               	movwf	LCD_Write_Int@i
 10551  01F8                     l2554:	
 10552  01F8  087C               	movf	LCD_Write_Int@numPlaces,w
 10553  01F9  00A0               	movwf	??_LCD_Write_Int
 10554  01FA  01A1               	clrf	??_LCD_Write_Int+1
 10555  01FB  1BA0               	btfsc	??_LCD_Write_Int,7
 10556  01FC  03A1               	decf	??_LCD_Write_Int+1,f
 10557  01FD  09A0               	comf	??_LCD_Write_Int,f
 10558  01FE  09A1               	comf	??_LCD_Write_Int+1,f
 10559  01FF  0AA0               	incf	??_LCD_Write_Int,f
 10560  0200  1903               	skipnz
 10561  0201  0AA1               	incf	??_LCD_Write_Int+1,f
 10562  0202  0820               	movf	??_LCD_Write_Int,w
 10563  0203  3E05               	addlw	5
 10564  0204  00A2               	movwf	??_LCD_Write_Int+2
 10565  0205  3000               	movlw	0
 10566  0206  3D21               	addwfc	??_LCD_Write_Int+1,w
 10567  0207  00A3               	movwf	??_LCD_Write_Int+3
 10568  0208  082D               	movf	LCD_Write_Int@i+1,w
 10569  0209  3A80               	xorlw	128
 10570  020A  00A4               	movwf	??_LCD_Write_Int+4
 10571  020B  0823               	movf	??_LCD_Write_Int+3,w
 10572  020C  3A80               	xorlw	128
 10573  020D  0224               	subwf	??_LCD_Write_Int+4,w
 10574  020E  1D03               	skipz
 10575  020F  2A12               	goto	u2895
 10576  0210  0822               	movf	??_LCD_Write_Int+2,w
 10577  0211  022C               	subwf	LCD_Write_Int@i,w
 10578  0212                     u2895:	
 10579  0212  1803               	btfsc	3,0
 10580  0213  2A24               	goto	l2556
 10581                           
 10582                           ;lcd.c: 284: {
 10583                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10584  0214  0020               	movlb	0	; select bank0
 10585  0215  082C               	movf	LCD_Write_Int@i,w
 10586  0216  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10587  0217  0086               	movwf	6
 10588  0218  0187               	clrf	7
 10589  0219  0801               	movf	1,w
 10590  021A  3E30               	addlw	48
 10591  021B  318A  22FC  3181   	fcall	_LCD_Write_Char
 10592  021E  3001               	movlw	1
 10593  021F  0020               	movlb	0	; select bank0
 10594  0220  07AC               	addwf	LCD_Write_Int@i,f
 10595  0221  3000               	movlw	0
 10596  0222  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10597  0223  29F8               	goto	l2554
 10598  0224                     l2556:	
 10599                           
 10600                           ;lcd.c: 286: }
 10601                           ;lcd.c: 288: if(numPlaces == 1)
 10602  0224  037C               	decf	LCD_Write_Int@numPlaces,w
 10603  0225  1D03               	btfss	3,2
 10604  0226  2A31               	goto	l2560
 10605                           
 10606                           ;lcd.c: 289: {
 10607                           ;lcd.c: 290: LCD_Write_Char(46);
 10608  0227  302E               	movlw	46
 10609  0228  318A  22FC  3181   	fcall	_LCD_Write_Char
 10610                           
 10611                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10612  022B  0020               	movlb	0	; select bank0
 10613  022C  0829               	movf	LCD_Write_Int@str+4,w
 10614  022D  3E30               	addlw	48
 10615  022E  318A  22FC  3181   	fcall	_LCD_Write_Char
 10616  0231                     l2560:	
 10617                           
 10618                           ;lcd.c: 292: }
 10619                           ;lcd.c: 294: if(numPlaces == 2)
 10620  0231  3002               	movlw	2
 10621  0232  067C               	xorwf	LCD_Write_Int@numPlaces,w
 10622  0233  1D03               	btfss	3,2
 10623  0234  0008               	return
 10624                           
 10625                           ;lcd.c: 295: {
 10626                           ;lcd.c: 296: LCD_Write_Char(46);
 10627  0235  302E               	movlw	46
 10628  0236  318A  22FC  3181   	fcall	_LCD_Write_Char
 10629                           
 10630                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10631  0239  0020               	movlb	0	; select bank0
 10632  023A  0828               	movf	LCD_Write_Int@str+3,w
 10633  023B  3E30               	addlw	48
 10634  023C  318A  22FC  3181   	fcall	_LCD_Write_Char
 10635                           
 10636                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10637  023F  0020               	movlb	0	; select bank0
 10638  0240  0829               	movf	LCD_Write_Int@str+4,w
 10639  0241  3E30               	addlw	48
 10640  0242  318A  22FC         	fcall	_LCD_Write_Char
 10641  0244  0008               	return
 10642  0245                     __end_of_LCD_Write_Int:	
 10643                           
 10644                           	psect	text31
 10645  0C4F                     __ptext31:	
 10646 ;; *************** function ___awmod *****************
 10647 ;; Defined at:
 10648 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  divisor         2    0[COMMON] int 
 10651 ;;  dividend        2    2[COMMON] int 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  sign            1    6[COMMON] unsigned char 
 10654 ;;  counter         1    5[COMMON] unsigned char 
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  2    0[COMMON] int 
 10657 ;; Registers used:
 10658 ;;		wreg, status,2, status,0
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;Total ram usage:        7 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_LCD_Write_Int
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function ___awmod
 10679  0C4F                     ___awmod:	
 10680                           
 10681                           ;incstack = 0
 10682                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10683  0C4F  01F6               	clrf	___awmod@sign
 10684  0C50  1FF3               	btfss	___awmod@dividend+1,7
 10685  0C51  2C59               	goto	l2342
 10686  0C52  09F2               	comf	___awmod@dividend,f
 10687  0C53  09F3               	comf	___awmod@dividend+1,f
 10688  0C54  0AF2               	incf	___awmod@dividend,f
 10689  0C55  1903               	skipnz
 10690  0C56  0AF3               	incf	___awmod@dividend+1,f
 10691  0C57  01F6               	clrf	___awmod@sign
 10692  0C58  0AF6               	incf	___awmod@sign,f
 10693  0C59                     l2342:	
 10694  0C59  1FF1               	btfss	___awmod@divisor+1,7
 10695  0C5A  2C60               	goto	l2346
 10696  0C5B  09F0               	comf	___awmod@divisor,f
 10697  0C5C  09F1               	comf	___awmod@divisor+1,f
 10698  0C5D  0AF0               	incf	___awmod@divisor,f
 10699  0C5E  1903               	skipnz
 10700  0C5F  0AF1               	incf	___awmod@divisor+1,f
 10701  0C60                     l2346:	
 10702  0C60  0870               	movf	___awmod@divisor,w
 10703  0C61  0471               	iorwf	___awmod@divisor+1,w
 10704  0C62  1903               	btfsc	3,2
 10705  0C63  2C87               	goto	l2364
 10706  0C64  01F5               	clrf	___awmod@counter
 10707  0C65  0AF5               	incf	___awmod@counter,f
 10708  0C66                     l2354:	
 10709  0C66  1BF1               	btfsc	___awmod@divisor+1,7
 10710  0C67  2C72               	goto	l2356
 10711  0C68  3001               	movlw	1
 10712  0C69                     u2525:	
 10713  0C69  35F0               	lslf	___awmod@divisor,f
 10714  0C6A  0DF1               	rlf	___awmod@divisor+1,f
 10715  0C6B  0B89               	decfsz	9,f
 10716  0C6C  2C69               	goto	u2525
 10717  0C6D  3001               	movlw	1
 10718  0C6E  00F4               	movwf	??___awmod
 10719  0C6F  0874               	movf	??___awmod,w
 10720  0C70  07F5               	addwf	___awmod@counter,f
 10721  0C71  2C66               	goto	l2354
 10722  0C72                     l2356:	
 10723  0C72  0871               	movf	___awmod@divisor+1,w
 10724  0C73  0273               	subwf	___awmod@dividend+1,w
 10725  0C74  1D03               	skipz
 10726  0C75  2C78               	goto	u2545
 10727  0C76  0870               	movf	___awmod@divisor,w
 10728  0C77  0272               	subwf	___awmod@dividend,w
 10729  0C78                     u2545:	
 10730  0C78  1C03               	skipc
 10731  0C79  2C7E               	goto	l2360
 10732  0C7A  0870               	movf	___awmod@divisor,w
 10733  0C7B  02F2               	subwf	___awmod@dividend,f
 10734  0C7C  0871               	movf	___awmod@divisor+1,w
 10735  0C7D  3BF3               	subwfb	___awmod@dividend+1,f
 10736  0C7E                     l2360:	
 10737  0C7E  3001               	movlw	1
 10738  0C7F                     u2555:	
 10739  0C7F  36F1               	lsrf	___awmod@divisor+1,f
 10740  0C80  0CF0               	rrf	___awmod@divisor,f
 10741  0C81  0B89               	decfsz	9,f
 10742  0C82  2C7F               	goto	u2555
 10743  0C83  3001               	movlw	1
 10744  0C84  02F5               	subwf	___awmod@counter,f
 10745  0C85  1D03               	btfss	3,2
 10746  0C86  2C72               	goto	l2356
 10747  0C87                     l2364:	
 10748  0C87  0876               	movf	___awmod@sign,w
 10749  0C88  1903               	btfsc	3,2
 10750  0C89  2C8F               	goto	l2368
 10751  0C8A  09F2               	comf	___awmod@dividend,f
 10752  0C8B  09F3               	comf	___awmod@dividend+1,f
 10753  0C8C  0AF2               	incf	___awmod@dividend,f
 10754  0C8D  1903               	skipnz
 10755  0C8E  0AF3               	incf	___awmod@dividend+1,f
 10756  0C8F                     l2368:	
 10757  0C8F  0873               	movf	___awmod@dividend+1,w
 10758  0C90  00F1               	movwf	?___awmod+1
 10759  0C91  0872               	movf	___awmod@dividend,w
 10760  0C92  00F0               	movwf	?___awmod
 10761  0C93  0008               	return
 10762  0C94                     __end_of___awmod:	
 10763                           
 10764                           	psect	text32
 10765  0C94                     __ptext32:	
 10766 ;; *************** function ___awdiv *****************
 10767 ;; Defined at:
 10768 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  divisor         2    0[COMMON] int 
 10771 ;;  dividend        2    2[COMMON] int 
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;  quotient        2    7[COMMON] int 
 10774 ;;  sign            1    6[COMMON] unsigned char 
 10775 ;;  counter         1    5[COMMON] unsigned char 
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  2    0[COMMON] int 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2, status,0
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;Total ram usage:        9 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		_LCD_Write_Int
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           
 10799                           ;psect for function ___awdiv
 10800  0C94                     ___awdiv:	
 10801                           
 10802                           ;incstack = 0
 10803                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10804  0C94  01F6               	clrf	___awdiv@sign
 10805  0C95  1FF1               	btfss	___awdiv@divisor+1,7
 10806  0C96  2C9E               	goto	l2298
 10807  0C97  09F0               	comf	___awdiv@divisor,f
 10808  0C98  09F1               	comf	___awdiv@divisor+1,f
 10809  0C99  0AF0               	incf	___awdiv@divisor,f
 10810  0C9A  1903               	skipnz
 10811  0C9B  0AF1               	incf	___awdiv@divisor+1,f
 10812  0C9C  01F6               	clrf	___awdiv@sign
 10813  0C9D  0AF6               	incf	___awdiv@sign,f
 10814  0C9E                     l2298:	
 10815  0C9E  1FF3               	btfss	___awdiv@dividend+1,7
 10816  0C9F  2CA9               	goto	l2304
 10817  0CA0  09F2               	comf	___awdiv@dividend,f
 10818  0CA1  09F3               	comf	___awdiv@dividend+1,f
 10819  0CA2  0AF2               	incf	___awdiv@dividend,f
 10820  0CA3  1903               	skipnz
 10821  0CA4  0AF3               	incf	___awdiv@dividend+1,f
 10822  0CA5  3001               	movlw	1
 10823  0CA6  00F4               	movwf	??___awdiv
 10824  0CA7  0874               	movf	??___awdiv,w
 10825  0CA8  06F6               	xorwf	___awdiv@sign,f
 10826  0CA9                     l2304:	
 10827  0CA9  01F7               	clrf	___awdiv@quotient
 10828  0CAA  01F8               	clrf	___awdiv@quotient+1
 10829  0CAB  0870               	movf	___awdiv@divisor,w
 10830  0CAC  0471               	iorwf	___awdiv@divisor+1,w
 10831  0CAD  1903               	btfsc	3,2
 10832  0CAE  2CD8               	goto	l2326
 10833  0CAF  01F5               	clrf	___awdiv@counter
 10834  0CB0  0AF5               	incf	___awdiv@counter,f
 10835  0CB1                     l2314:	
 10836  0CB1  1BF1               	btfsc	___awdiv@divisor+1,7
 10837  0CB2  2CBD               	goto	l2316
 10838  0CB3  3001               	movlw	1
 10839  0CB4                     u2425:	
 10840  0CB4  35F0               	lslf	___awdiv@divisor,f
 10841  0CB5  0DF1               	rlf	___awdiv@divisor+1,f
 10842  0CB6  0B89               	decfsz	9,f
 10843  0CB7  2CB4               	goto	u2425
 10844  0CB8  3001               	movlw	1
 10845  0CB9  00F4               	movwf	??___awdiv
 10846  0CBA  0874               	movf	??___awdiv,w
 10847  0CBB  07F5               	addwf	___awdiv@counter,f
 10848  0CBC  2CB1               	goto	l2314
 10849  0CBD                     l2316:	
 10850  0CBD  3001               	movlw	1
 10851  0CBE                     u2445:	
 10852  0CBE  35F7               	lslf	___awdiv@quotient,f
 10853  0CBF  0DF8               	rlf	___awdiv@quotient+1,f
 10854  0CC0  0B89               	decfsz	9,f
 10855  0CC1  2CBE               	goto	u2445
 10856  0CC2  0871               	movf	___awdiv@divisor+1,w
 10857  0CC3  0273               	subwf	___awdiv@dividend+1,w
 10858  0CC4  1D03               	skipz
 10859  0CC5  2CC8               	goto	u2455
 10860  0CC6  0870               	movf	___awdiv@divisor,w
 10861  0CC7  0272               	subwf	___awdiv@dividend,w
 10862  0CC8                     u2455:	
 10863  0CC8  1C03               	skipc
 10864  0CC9  2CCF               	goto	l2322
 10865  0CCA  0870               	movf	___awdiv@divisor,w
 10866  0CCB  02F2               	subwf	___awdiv@dividend,f
 10867  0CCC  0871               	movf	___awdiv@divisor+1,w
 10868  0CCD  3BF3               	subwfb	___awdiv@dividend+1,f
 10869  0CCE  1477               	bsf	___awdiv@quotient,0
 10870  0CCF                     l2322:	
 10871  0CCF  3001               	movlw	1
 10872  0CD0                     u2465:	
 10873  0CD0  36F1               	lsrf	___awdiv@divisor+1,f
 10874  0CD1  0CF0               	rrf	___awdiv@divisor,f
 10875  0CD2  0B89               	decfsz	9,f
 10876  0CD3  2CD0               	goto	u2465
 10877  0CD4  3001               	movlw	1
 10878  0CD5  02F5               	subwf	___awdiv@counter,f
 10879  0CD6  1D03               	btfss	3,2
 10880  0CD7  2CBD               	goto	l2316
 10881  0CD8                     l2326:	
 10882  0CD8  0876               	movf	___awdiv@sign,w
 10883  0CD9  1903               	btfsc	3,2
 10884  0CDA  2CE0               	goto	l2330
 10885  0CDB  09F7               	comf	___awdiv@quotient,f
 10886  0CDC  09F8               	comf	___awdiv@quotient+1,f
 10887  0CDD  0AF7               	incf	___awdiv@quotient,f
 10888  0CDE  1903               	skipnz
 10889  0CDF  0AF8               	incf	___awdiv@quotient+1,f
 10890  0CE0                     l2330:	
 10891  0CE0  0878               	movf	___awdiv@quotient+1,w
 10892  0CE1  00F1               	movwf	?___awdiv+1
 10893  0CE2  0877               	movf	___awdiv@quotient,w
 10894  0CE3  00F0               	movwf	?___awdiv
 10895  0CE4  0008               	return
 10896  0CE5                     __end_of___awdiv:	
 10897                           
 10898                           	psect	text33
 10899  0AFC                     __ptext33:	
 10900 ;; *************** function _LCD_Write_Char *****************
 10901 ;; Defined at:
 10902 ;;		line 223 in file "lcd.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  a               1    wreg     const unsigned char 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;  a               1    4[COMMON] const unsigned char 
 10907 ;;  y               1    3[COMMON] unsigned char 
 10908 ;;  temp            1    2[COMMON] unsigned char 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  1    wreg      void 
 10911 ;; Registers used:
 10912 ;;		wreg, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;Total ram usage:        4 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    1
 10925 ;; This function calls:
 10926 ;;		_LCD_Port
 10927 ;; This function is called by:
 10928 ;;		_main
 10929 ;;		_InitCustomChars
 10930 ;;		_LCD_Write_String
 10931 ;;		_LCD_Write_Int
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function _LCD_Write_Char
 10937  0AFC                     _LCD_Write_Char:	
 10938                           
 10939                           ;incstack = 0
 10940                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10941                           ;LCD_Write_Char@a stored from wreg
 10942  0AFC  00F4               	movwf	LCD_Write_Char@a
 10943                           
 10944                           ;lcd.c: 225: char temp,y;
 10945                           ;lcd.c: 226: temp = a&0x0F;
 10946  0AFD  0874               	movf	LCD_Write_Char@a,w
 10947  0AFE  390F               	andlw	15
 10948  0AFF  00F1               	movwf	??_LCD_Write_Char
 10949  0B00  0871               	movf	??_LCD_Write_Char,w
 10950  0B01  00F2               	movwf	LCD_Write_Char@temp
 10951                           
 10952                           ;lcd.c: 227: y = a&0xF0;
 10953  0B02  0874               	movf	LCD_Write_Char@a,w
 10954  0B03  39F0               	andlw	240
 10955  0B04  00F1               	movwf	??_LCD_Write_Char
 10956  0B05  0871               	movf	??_LCD_Write_Char,w
 10957  0B06  00F3               	movwf	LCD_Write_Char@y
 10958                           
 10959                           ;lcd.c: 228: RA0 = 1;
 10960  0B07  0020               	movlb	0	; select bank0
 10961  0B08  140C               	bsf	12,0	;volatile
 10962                           
 10963                           ;lcd.c: 229: LCD_Port(y>>4);
 10964  0B09  0873               	movf	LCD_Write_Char@y,w
 10965  0B0A  00F1               	movwf	??_LCD_Write_Char
 10966  0B0B  3004               	movlw	4
 10967  0B0C                     u2135:	
 10968  0B0C  36F1               	lsrf	??_LCD_Write_Char,f
 10969  0B0D  0B89               	decfsz	9,f
 10970  0B0E  2B0C               	goto	u2135
 10971  0B0F  0871               	movf	??_LCD_Write_Char,w
 10972  0B10  318A  2231  318A   	fcall	_LCD_Port
 10973                           
 10974                           ;lcd.c: 230: RA2 = 1;
 10975  0B13  0020               	movlb	0	; select bank0
 10976  0B14  150C               	bsf	12,2	;volatile
 10977                           
 10978                           ;lcd.c: 231: RA2 = 0;
 10979  0B15  110C               	bcf	12,2	;volatile
 10980                           
 10981                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 10982  0B16  306A               	movlw	106
 10983  0B17  00F1               	movwf	??_LCD_Write_Char
 10984  0B18                     u3297:	
 10985  0B18  0BF1               	decfsz	??_LCD_Write_Char,f
 10986  0B19  2B18               	goto	u3297
 10987  0B1A  0000               	nop
 10988                           
 10989                           ;lcd.c: 233: LCD_Port(temp);
 10990  0B1B  0872               	movf	LCD_Write_Char@temp,w
 10991  0B1C  318A  2231  318A   	fcall	_LCD_Port
 10992                           
 10993                           ;lcd.c: 234: RA2 = 1;
 10994  0B1F  0020               	movlb	0	; select bank0
 10995  0B20  150C               	bsf	12,2	;volatile
 10996                           
 10997                           ;lcd.c: 235: RA2 = 0;
 10998  0B21  110C               	bcf	12,2	;volatile
 10999                           
 11000                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11001  0B22  306A               	movlw	106
 11002  0B23  00F1               	movwf	??_LCD_Write_Char
 11003  0B24                     u3307:	
 11004  0B24  0BF1               	decfsz	??_LCD_Write_Char,f
 11005  0B25  2B24               	goto	u3307
 11006  0B26  0000               	nop
 11007  0B27  0008               	return
 11008  0B28                     __end_of_LCD_Write_Char:	
 11009                           
 11010                           	psect	text34
 11011  0BCE                     __ptext34:	
 11012 ;; *************** function _LCD_Set_Cursor *****************
 11013 ;; Defined at:
 11014 ;;		line 82 in file "lcd.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  x               1    wreg     unsigned char 
 11017 ;;  y               1    4[COMMON] unsigned char 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  x               1    7[COMMON] unsigned char 
 11020 ;;  temp            1   10[COMMON] unsigned char 
 11021 ;;  w               1    9[COMMON] unsigned char 
 11022 ;;  z               1    8[COMMON] unsigned char 
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, status,2, status,0, pclath, cstack
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;Total ram usage:        7 bytes
 11037 ;; Hardware stack levels used:    1
 11038 ;; Hardware stack levels required when called:    2
 11039 ;; This function calls:
 11040 ;;		_LCD_Cmd
 11041 ;; This function is called by:
 11042 ;;		_main
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           
 11047                           ;psect for function _LCD_Set_Cursor
 11048  0BCE                     _LCD_Set_Cursor:	
 11049                           
 11050                           ;incstack = 0
 11051                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11052                           ;LCD_Set_Cursor@x stored from wreg
 11053  0BCE  00F7               	movwf	LCD_Set_Cursor@x
 11054                           
 11055                           ;lcd.c: 86: char temp,z,w;
 11056                           ;lcd.c: 88: if(y == 0)
 11057  0BCF  0874               	movf	LCD_Set_Cursor@y,w
 11058  0BD0  1D03               	btfss	3,2
 11059  0BD1  2BEE               	goto	l2496
 11060                           
 11061                           ;lcd.c: 89: {
 11062                           ;lcd.c: 90: temp = 0x80 + x;
 11063  0BD2  0877               	movf	LCD_Set_Cursor@x,w
 11064  0BD3  3E80               	addlw	128
 11065  0BD4  00F5               	movwf	??_LCD_Set_Cursor
 11066  0BD5  0875               	movf	??_LCD_Set_Cursor,w
 11067  0BD6  00FA               	movwf	LCD_Set_Cursor@temp
 11068                           
 11069                           ;lcd.c: 91: z = temp>>4;
 11070  0BD7  087A               	movf	LCD_Set_Cursor@temp,w
 11071  0BD8  00F5               	movwf	??_LCD_Set_Cursor
 11072  0BD9  3004               	movlw	4
 11073  0BDA                     u2795:	
 11074  0BDA  36F5               	lsrf	??_LCD_Set_Cursor,f
 11075  0BDB  0B89               	decfsz	9,f
 11076  0BDC  2BDA               	goto	u2795
 11077  0BDD  0875               	movf	??_LCD_Set_Cursor,w
 11078  0BDE  00F6               	movwf	??_LCD_Set_Cursor+1
 11079  0BDF  0876               	movf	??_LCD_Set_Cursor+1,w
 11080  0BE0  00F8               	movwf	LCD_Set_Cursor@z
 11081                           
 11082                           ;lcd.c: 92: w = temp & 0x0F;
 11083  0BE1  087A               	movf	LCD_Set_Cursor@temp,w
 11084  0BE2  390F               	andlw	15
 11085  0BE3  00F5               	movwf	??_LCD_Set_Cursor
 11086  0BE4  0875               	movf	??_LCD_Set_Cursor,w
 11087  0BE5  00F9               	movwf	LCD_Set_Cursor@w
 11088                           
 11089                           ;lcd.c: 93: LCD_Cmd(z);
 11090  0BE6  0878               	movf	LCD_Set_Cursor@z,w
 11091  0BE7  3180  2004  318B   	fcall	_LCD_Cmd
 11092                           
 11093                           ;lcd.c: 94: LCD_Cmd(w);
 11094  0BEA  0879               	movf	LCD_Set_Cursor@w,w
 11095  0BEB  3180  2004         	fcall	_LCD_Cmd
 11096                           
 11097                           ;lcd.c: 95: }
 11098  0BED  0008               	return
 11099  0BEE                     l2496:	
 11100                           
 11101                           ;lcd.c: 97: else if(y == 1)
 11102  0BEE  0374               	decf	LCD_Set_Cursor@y,w
 11103  0BEF  1D03               	btfss	3,2
 11104  0BF0  0008               	return
 11105                           
 11106                           ;lcd.c: 98: {
 11107                           ;lcd.c: 99: temp = 0xC0 + x;
 11108  0BF1  0877               	movf	LCD_Set_Cursor@x,w
 11109  0BF2  3EC0               	addlw	192
 11110  0BF3  00F5               	movwf	??_LCD_Set_Cursor
 11111  0BF4  0875               	movf	??_LCD_Set_Cursor,w
 11112  0BF5  00FA               	movwf	LCD_Set_Cursor@temp
 11113                           
 11114                           ;lcd.c: 100: z = temp>>4;
 11115  0BF6  087A               	movf	LCD_Set_Cursor@temp,w
 11116  0BF7  00F5               	movwf	??_LCD_Set_Cursor
 11117  0BF8  3004               	movlw	4
 11118  0BF9                     u2815:	
 11119  0BF9  36F5               	lsrf	??_LCD_Set_Cursor,f
 11120  0BFA  0B89               	decfsz	9,f
 11121  0BFB  2BF9               	goto	u2815
 11122  0BFC  0875               	movf	??_LCD_Set_Cursor,w
 11123  0BFD  00F6               	movwf	??_LCD_Set_Cursor+1
 11124  0BFE  0876               	movf	??_LCD_Set_Cursor+1,w
 11125  0BFF  00F8               	movwf	LCD_Set_Cursor@z
 11126                           
 11127                           ;lcd.c: 101: w = temp & 0x0F;
 11128  0C00  087A               	movf	LCD_Set_Cursor@temp,w
 11129  0C01  390F               	andlw	15
 11130  0C02  00F5               	movwf	??_LCD_Set_Cursor
 11131  0C03  0875               	movf	??_LCD_Set_Cursor,w
 11132  0C04  00F9               	movwf	LCD_Set_Cursor@w
 11133                           
 11134                           ;lcd.c: 102: LCD_Cmd(z);
 11135  0C05  0878               	movf	LCD_Set_Cursor@z,w
 11136  0C06  3180  2004  318B   	fcall	_LCD_Cmd
 11137                           
 11138                           ;lcd.c: 103: LCD_Cmd(w);
 11139  0C09  0879               	movf	LCD_Set_Cursor@w,w
 11140  0C0A  3180  2004         	fcall	_LCD_Cmd
 11141  0C0C  0008               	return
 11142  0C0D                     __end_of_LCD_Set_Cursor:	
 11143                           
 11144                           	psect	text35
 11145  0004                     __ptext35:	
 11146 ;; *************** function _LCD_Cmd *****************
 11147 ;; Defined at:
 11148 ;;		line 65 in file "lcd.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  a               1    wreg     unsigned char 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  a               1    3[COMMON] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      void 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0, pclath, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;Total ram usage:        3 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    1
 11169 ;; This function calls:
 11170 ;;		_LCD_Port
 11171 ;; This function is called by:
 11172 ;;		_InitCustomChars
 11173 ;;		_LCD_Clear
 11174 ;;		_LCD_Set_Cursor
 11175 ;;		_LCD_Init
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           
 11180                           ;psect for function _LCD_Cmd
 11181  0004                     _LCD_Cmd:	
 11182                           
 11183                           ;incstack = 0
 11184                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11185                           ;LCD_Cmd@a stored from wreg
 11186  0004  00F3               	movwf	LCD_Cmd@a
 11187                           
 11188                           ;lcd.c: 67: RA0 = 0;
 11189  0005  0020               	movlb	0	; select bank0
 11190  0006  100C               	bcf	12,0	;volatile
 11191                           
 11192                           ;lcd.c: 68: LCD_Port(a);
 11193  0007  0873               	movf	LCD_Cmd@a,w
 11194  0008  318A  2231  3180   	fcall	_LCD_Port
 11195                           
 11196                           ;lcd.c: 69: RA2 = 1;
 11197  000B  0020               	movlb	0	; select bank0
 11198  000C  150C               	bsf	12,2	;volatile
 11199                           
 11200                           ;lcd.c: 70: RA2 = 0;
 11201  000D  110C               	bcf	12,2	;volatile
 11202                           
 11203                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11204  000E  302A               	movlw	42
 11205  000F  00F2               	movwf	??_LCD_Cmd+1
 11206  0010  308D               	movlw	141
 11207  0011  00F1               	movwf	??_LCD_Cmd
 11208  0012                     u3317:	
 11209  0012  0BF1               	decfsz	??_LCD_Cmd,f
 11210  0013  2812               	goto	u3317
 11211  0014  0BF2               	decfsz	??_LCD_Cmd+1,f
 11212  0015  2812               	goto	u3317
 11213  0016  3200               	nop2
 11214  0017  0008               	return
 11215  0018                     __end_of_LCD_Cmd:	
 11216                           
 11217                           	psect	text36
 11218  0A31                     __ptext36:	
 11219 ;; *************** function _LCD_Port *****************
 11220 ;; Defined at:
 11221 ;;		line 41 in file "lcd.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  a               1    wreg     unsigned char 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  a               1    0[COMMON] unsigned char 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		wreg
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;Total ram usage:        1 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_LCD_Cmd
 11245 ;;		_LCD_Init
 11246 ;;		_LCD_Write_Char
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function _LCD_Port
 11252  0A31                     _LCD_Port:	
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _LCD_Port: [wreg]
 11256                           ;LCD_Port@a stored from wreg
 11257  0A31  00F0               	movwf	LCD_Port@a
 11258                           
 11259                           ;lcd.c: 43: if(a & 1)
 11260  0A32  1C70               	btfss	LCD_Port@a,0
 11261  0A33  2A37               	goto	l135
 11262                           
 11263                           ;lcd.c: 44: RA7 = 1;
 11264  0A34  0020               	movlb	0	; select bank0
 11265  0A35  178C               	bsf	12,7	;volatile
 11266  0A36  2A39               	goto	l1838
 11267  0A37                     l135:	
 11268                           
 11269                           ;lcd.c: 45: else
 11270                           ;lcd.c: 46: RA7 = 0;
 11271  0A37  0020               	movlb	0	; select bank0
 11272  0A38  138C               	bcf	12,7	;volatile
 11273  0A39                     l1838:	
 11274                           
 11275                           ;lcd.c: 48: if(a & 2)
 11276  0A39  1CF0               	btfss	LCD_Port@a,1
 11277  0A3A  2A3D               	goto	l137
 11278                           
 11279                           ;lcd.c: 49: RA6 = 1;
 11280  0A3B  170C               	bsf	12,6	;volatile
 11281  0A3C  2A3E               	goto	l1842
 11282  0A3D                     l137:	
 11283                           
 11284                           ;lcd.c: 50: else
 11285                           ;lcd.c: 51: RA6 = 0;
 11286  0A3D  130C               	bcf	12,6	;volatile
 11287  0A3E                     l1842:	
 11288                           
 11289                           ;lcd.c: 53: if(a & 4)
 11290  0A3E  1D70               	btfss	LCD_Port@a,2
 11291  0A3F  2A42               	goto	l139
 11292                           
 11293                           ;lcd.c: 54: RC0 = 1;
 11294  0A40  140E               	bsf	14,0	;volatile
 11295  0A41  2A43               	goto	l1846
 11296  0A42                     l139:	
 11297                           
 11298                           ;lcd.c: 55: else
 11299                           ;lcd.c: 56: RC0 = 0;
 11300  0A42  100E               	bcf	14,0	;volatile
 11301  0A43                     l1846:	
 11302                           
 11303                           ;lcd.c: 58: if(a & 8)
 11304  0A43  1DF0               	btfss	LCD_Port@a,3
 11305  0A44  2A47               	goto	l141
 11306                           
 11307                           ;lcd.c: 59: RC1 = 1;
 11308  0A45  148E               	bsf	14,1	;volatile
 11309  0A46  0008               	return
 11310  0A47                     l141:	
 11311                           
 11312                           ;lcd.c: 60: else
 11313                           ;lcd.c: 61: RC1 = 0;
 11314  0A47  108E               	bcf	14,1	;volatile
 11315  0A48  0008               	return
 11316  0A49                     __end_of_LCD_Port:	
 11317  007E                     btemp	set	126	;btemp
 11318  007E                     wtemp	set	126
 11319  007E                     wtemp0	set	126
 11320  0080                     wtemp1	set	128
 11321  0082                     wtemp2	set	130
 11322  0084                     wtemp3	set	132
 11323  0086                     wtemp4	set	134
 11324  0088                     wtemp5	set	136
 11325  007F                     wtemp6	set	127
 11326  007E                     ttemp	set	126
 11327  007E                     ttemp0	set	126
 11328  0081                     ttemp1	set	129
 11329  0084                     ttemp2	set	132
 11330  0087                     ttemp3	set	135
 11331  007F                     ttemp4	set	127
 11332  007E                     ltemp	set	126
 11333  007E                     ltemp0	set	126
 11334  0082                     ltemp1	set	130
 11335  0086                     ltemp2	set	134
 11336  0080                     ltemp3	set	128


Data Sizes:
    Strings     14
    Constant    27
    Data        26
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     30      78
    BANK2            80      0      21
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _PID_Calculate->___awtoft
    ___awtoft->___ftpack
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->___fttol
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    ___fttol->_tempCalc

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   38823
                                             77 BANK0      3     3      0
                                             10 BANK1     20    20      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30184
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15852
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7053
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     940
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             73 BANK0      4     0      4
                                              0 BANK1     10    10      0
                      _PID_Calculate (ARG)
                           _tempCalc (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    2891
                                              0 BANK0      6     2      4
                           ___awtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     784
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1957
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     539
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___wmul
     _tempCalc (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      15       9       26.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Mar 25 02:58:40 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000  
                             l33 06E2                               l38 07C8                               l96 09F3  
                             _Kd 00AC                               _Ki 00E8                               _Kp 00EA  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l141 0A47                              l135 0A37                              l223 03DF  
                            l137 0A3D                              l225 0422                              l139 0A42  
                            l422 0A85                              l614 02E4                              l477 0DBA  
                            l590 0D8A                              l591 0D92                              l583 0D77  
                            l674 0F35                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0018                  __end_of_ADCRead 09FA                     ___awmod@sign 0076  
                _TMR2_Initialize 09DE                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00DF                  __end_of_LCD_Cmd 0018                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0BCE                     ___ftdiv@sign 003F  
                           l2022 0AC0                             l2110 0AE3                             l2030 0B6E  
                           l2034 0B84                             l2116 0AF4                             l2220 0037  
                           l2054 0BA5                             l2304 0CA9                             l2072 0D3E  
                           l2330 0CE0                             l2322 0CCF                             l2314 0CB1  
                           l2242 0A12                             l2226 004A                             l2316 0CBD  
                           l2260 0DCB                             l2326 0CD8                             l2342 0C59  
                           l2270 0DE9                             l2238 0A0C                             l2406 0FDE  
                           l2360 0C7E                             l2512 0A4B                             l2354 0C66  
                           l2346 0C60                             l1810 0D54                             l2282 0E14  
                           l2418 0AA0                             l2356 0C72                             l2364 0C87  
                           l1820 0D7C                             l1812 0D5E                             l2268 0DDB  
                           l2460 064E                             l1900 02BA                             l2542 01D5  
                           l2526 019D                             l1822 0D84                             l1814 0D63  
                           l1806 0D4D                             l2606 0438                             l2286 0E22  
                           l2278 0E09                             l1910 02D6                             l1902 02BF  
                           l2702 06EA                             l2368 0C8F                             l2560 0231  
                           l2544 01DA                             l2536 01A4                             l2616 0ED1  
                           l2384 0F84                             l1920 0308                             l1912 02E0  
                           l1904 02C3                             l1842 0A3E                             l2298 0C9E  
                           l2554 01F8                             l2546 01E3                             l2538 01D1  
                           l2642 0F2B                             l2634 0F0E                             l2378 0F6E  
                           l1930 0323                             l2556 0224                             l2548 01F4  
                           l1852 0A7F                             l2580 0381                             l2644 0F39  
                           l2636 0F1D                             l1916 02F6                             l1940 00DF  
                           l2740 07C9                             l2708 0708                             l1846 0A43  
                           l1838 0A39                             l2574 0374                             l2398 0FC5  
                           l1870 026D                             l2496 0BEE                             l2576 0377  
                           l2648 0F47                             l1880 0283                             l1874 0274  
                           l1970 014C                             l1962 0138                             l1946 00F5  
                           l2596 03F5                             l1892 029D                             l2692 06D6  
                           l2598 03F8                             l1974 0154                             l1958 0130  
                           l2686 06BE                             l2696 06E4                             l1898 02B0  
                           ?_log 0057                             STR_1 1024                             STR_2 101B  
                           u2105 0155                             u2115 015B                             u2035 0101  
                           u3005 0EDE                             u2045 0111                             _LATA 0016  
                           u2230 0B56                             _LATB 0017                             u2135 0B0C  
                           _LATC 0018                             u2065 0139                             u3105 06DD  
                           u3035 0F0F                             u2075 013F                             u1605 0D59  
                           u2325 0DDE                             u3207 0E44                             u2425 0CB4  
                           u1625 0D72                             u3217 0E4F                             u3065 0F2C  
                           u2345 0DEA                             _T2PR 028D                             u3307 0B24  
                           u3227 0E59                             u2355 0DFE                             u3317 0012  
                           u2445 0CBE                             u2525 0C69                             u1645 0D7F  
                           u3237 0E63                             u2365 0E0A                             u2605 0F96  
                           u3157 06B4                             u2455 0CC8                             u3247 0E71  
                           u3167 0C28                             u2615 0FA6                             u3095 06D1  
                           u2465 0CD0                             u2545 0C78                             u3257 0E7F  
                           u3177 0C38                             u2705 05B9                             u2625 0FC6  
                           u1905 02B1                             u2555 0C7F                             u1755 0A86  
                           u3267 0E8F                             u3187 0C47                             u2715 05CE  
                           u2635 0FD5                             u1685 0D99                             u1765 0A8B  
                           u3277 0E9E                             u3197 0E36                             u2725 05E8  
                           u2645 0FDF                             u2830 0187                             u2815 0BF9  
                           u3287 0EAD                             u2735 05FD                             u1935 02C4  
                           u3297 0B18                             u2745 0625                             u2675 0A2A  
                           u2755 063E                             u1875 029E                             u2925 036C  
                           u2685 0571                             u1965 02D7                             u2935 037D  
                           u2775 065A                             u2695 0586                             u2945 03B5  
                           u2795 0BDA                             u2955 03D8                             u2965 03EE  
                           u2895 0212                             u2975 041B                             u2985 0431  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _main 0676  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 017C                     ___ftmul@sign 002F                     ___fttol@exp1 00CF  
                          ??_log 005A                     ___fttol@lval 00CB                 __end_of_LCD_Init 0EB2  
               __end_of_LCD_Port 0A49   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 09C9  
                __end_of___aldiv 0E2B                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0CE5  
                          _ADPRE 009C                  __end_of___ftadd 033B                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 0C94                            _ADRPT 010D                  __end_of___ftdiv 1000  
                __end_of___ftmul 017C                  ___awdiv@divisor 0070                  __end_of___ftsub 0AB6  
                __end_of___fttol 0F57                            _T2CON 028E                            _LATC2 00C2  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 0C0D  
                  ___awtoft@sign 007D                            _frexp 0B93                            _errno 00B2  
                          _error 00B4                    ___ftpack@sign 0074                            main@j 00E3  
                          main@x 00D2                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0AFC  
                __initialization 07D0                      log@exponent 005B                     __end_of_main 07D0  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 09EC                        ??_ADCRead 0073  
                  main@tPadCount 00D7                           ??_main 006D                    ___fttol@sign1 00CA  
              __end_of_LCD_Clear 09C0                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 0AD6                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0DA9  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893           __end_of_LCD_Write_Char 0B28                   __CFG_PWRTE$OFF 0000  
                         _Result 00AE                     _CCPTMRS1bits 021F                           ___bmul 0A0A  
                         ___ftge 0B58           LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078  
                         ___wmul 0A7D                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 09D3  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 00C6                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _totals 00A0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 055C                  _ADCC_Initialize 0A63                 LCD_Write_Int@str 0025  
                _InitCustomChars 0AD6                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078                    _pidIntegrated 00BC  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 0C0D                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00B0  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078              ___bmul@multiplicand 0070  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 09DE  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0069  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 09C9  
                   __pidataBANK2 09FA              ??_SYSTEM_Initialize 0078                    __end_of_frexp 0BCE  
               ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0C4F                       __pbssBANK1 00A0                       __pbssBANK2 0130  
                     __pbssBANK3 01A0               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070           __size_of_PID_Calculate 010C                  ?_PWM_Initialize 0070  
                     __pmaintext 0676                          ?___bmul 0070                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0A7D  
                        _ADCRead 09EC        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 0AFC  
                        _LCD_Cmd 0004                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 00DD  
                 main@dutyCycle7 00D9            PID_Calculate@setpoint 0020                        ?_tempCalc 005D  
                     _readAnalog 055C                          ___aldiv 0DA9                  __size_of___bmul 0011  
                        ___cgram 0120                  __size_of___ftge 003B                          ___awdiv 0C94  
                        ___ftadd 0245                          ___awmod 0C4F                          ___ftdiv 0F57  
                __size_of___wmul 001B                          ___ftmul 00C8                          ___ftsub 0A98  
                        ___fttol 0EB2                       _errorValue 00B6                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0D45                 ??_LCD_Set_Cursor 0075  
                        __ptext1 0447                          __ptext2 0018                          __ptext3 0B93  
                        __ptext4 0CE5                          __ptext5 00C8                          __ptext6 0B58  
                        __ptext7 0A98                          __ptext8 0245                          __ptext9 0F57  
                  _PID_Calculate 033B                   main@resetDelay 00D6            _OSCILLATOR_Initialize 09C0  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 01A0                        _LCD_Clear 09B8       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 09AD             end_of_initialization 07FD                          init_ram 09B2  
                        initloop 09B3                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00D5                LCD_Write_Int@sign 007D                       main@F13660 00A8  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_PID_Calculate 0020                 ?_InitCustomChars 0070                       main@C_or_F 00D4  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                       main@bCount 00D0  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                     main@choice 00D3                      ___ftdiv@exp 003E                __size_of_LCD_Init 0087  
              __size_of_LCD_Port 0018                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                 __end_of___bmul 0A1B                   __end_of___ftge 0B93                   __end_of___wmul 0A98  
               _LCD_Write_String 0A49           ?_OSCILLATOR_Initialize 0070              start_initialization 07D0  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0030                      __end_of_log 00C8                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0245  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                     _pidMaxOutput 00EC  
                    __pdataBANK1 00E4                      __pdataBANK2 0120                  ??_PID_Calculate 0024  
     __end_of_PWM7_LoadDutyValue 0A31                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00BE  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00C6         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 011A                     _pidPrevError 00C0           _PIN_MANAGER_Initialize 0B28  
                       ?___aldiv 0070                __size_of_tempCalc 0115                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0069  
                      _eval_poly 0CE5                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0E2B  
                 ___wmul@product 0074                         _LCD_Port 0A31                        clear_ram0 09AC  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 0A63                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   _tempCalc$984 0063          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 00A5  
                       ___awtoft 0AB6                         ___ftpack 0D45         __size_of_ADCC_Initialize 001A  
                       _channels 00E4                PID_Calculate@temp 0022                         __ptext10 055C  
                       __ptext11 0A0A                         __ptext20 0E2B                         __ptext12 0DA9  
                       __ptext21 09B8                         __ptext13 09EC                         __ptext30 017C  
                       __ptext22 0AD6                         __ptext14 0EB2                         __ptext31 0C4F  
                       __ptext23 0A63                         __ptext15 0C0D                         __ptext32 0C94  
                       __ptext24 0A1B                         __ptext16 09DE                         __ptext33 0AFC  
                       __ptext25 033B                         __ptext17 09D3                         __ptext34 0BCE  
                       __ptext26 0A7D                         __ptext18 0B28                         __ptext35 0004  
                       __ptext27 0AB6                         __ptext19 09C0                         __ptext36 0A31  
                       __ptext28 0D45                         __ptext29 0A49               __end_of_readAnalog 0676  
        __size_of_LCD_Set_Cursor 003F                     _signPositive 00C4                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026                         _lastSign 00B8              LCD_Write_Int@F13690 0130  
                       _pidCount 00BA                    __size_of_main 015A             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 0447                         main@loop 00D8      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00C2  
             _PWM7_LoadDutyValue 0A1B               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00DB               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0079            __end_of_PID_Calculate 0447             ??_PWM7_LoadDutyValue 0072  
                   ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9   __end_of_PIN_MANAGER_Initialize 0B58  
              ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
