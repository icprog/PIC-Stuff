

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Apr 06 11:45:29 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x2350,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  001C                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0198                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021B                     	;# 
   702  021B                     	;# 
   703  021C                     	;# 
   704  021C                     	;# 
   705  021D                     	;# 
   706  021D                     	;# 
   707  021E                     	;# 
   708  021F                     	;# 
   709  028C                     	;# 
   710  028C                     	;# 
   711  028D                     	;# 
   712  028D                     	;# 
   713  028E                     	;# 
   714  028F                     	;# 
   715  0290                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0296                     	;# 
   726  0297                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  0299                     	;# 
   731  029A                     	;# 
   732  029B                     	;# 
   733  029C                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  030C                     	;# 
   737  030C                     	;# 
   738  030D                     	;# 
   739  030E                     	;# 
   740  030F                     	;# 
   741  0310                     	;# 
   742  0310                     	;# 
   743  0311                     	;# 
   744  0312                     	;# 
   745  0313                     	;# 
   746  0314                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0316                     	;# 
   750  0317                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031B                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  031F                     	;# 
   761  038C                     	;# 
   762  038D                     	;# 
   763  038E                     	;# 
   764  0390                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  040C                     	;# 
   768  040D                     	;# 
   769  040E                     	;# 
   770  040F                     	;# 
   771  0410                     	;# 
   772  0411                     	;# 
   773  0416                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  0418                     	;# 
   777  0418                     	;# 
   778  0419                     	;# 
   779  041A                     	;# 
   780  041A                     	;# 
   781  041B                     	;# 
   782  041C                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  041F                     	;# 
   787  048C                     	;# 
   788  048C                     	;# 
   789  048D                     	;# 
   790  048E                     	;# 
   791  048F                     	;# 
   792  048F                     	;# 
   793  0490                     	;# 
   794  0491                     	;# 
   795  0492                     	;# 
   796  0492                     	;# 
   797  0493                     	;# 
   798  0494                     	;# 
   799  0495                     	;# 
   800  0495                     	;# 
   801  0496                     	;# 
   802  0497                     	;# 
   803  0498                     	;# 
   804  0499                     	;# 
   805  049A                     	;# 
   806  049B                     	;# 
   807  049C                     	;# 
   808  049D                     	;# 
   809  050C                     	;# 
   810  050C                     	;# 
   811  050D                     	;# 
   812  050E                     	;# 
   813  050F                     	;# 
   814  050F                     	;# 
   815  0510                     	;# 
   816  0511                     	;# 
   817  0512                     	;# 
   818  0512                     	;# 
   819  0513                     	;# 
   820  0514                     	;# 
   821  0515                     	;# 
   822  0515                     	;# 
   823  0516                     	;# 
   824  0517                     	;# 
   825  0518                     	;# 
   826  0519                     	;# 
   827  051A                     	;# 
   828  051B                     	;# 
   829  051C                     	;# 
   830  051D                     	;# 
   831  058C                     	;# 
   832  058C                     	;# 
   833  058D                     	;# 
   834  058E                     	;# 
   835  058F                     	;# 
   836  058F                     	;# 
   837  0590                     	;# 
   838  0591                     	;# 
   839  0592                     	;# 
   840  0593                     	;# 
   841  060C                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0618                     	;# 
   853  0619                     	;# 
   854  061A                     	;# 
   855  061B                     	;# 
   856  061C                     	;# 
   857  061D                     	;# 
   858  061E                     	;# 
   859  068C                     	;# 
   860  068D                     	;# 
   861  068E                     	;# 
   862  068F                     	;# 
   863  0690                     	;# 
   864  0691                     	;# 
   865  0692                     	;# 
   866  0693                     	;# 
   867  0694                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  091F                     	;# 
   927  098F                     	;# 
   928  098F                     	;# 
   929  0990                     	;# 
   930  0991                     	;# 
   931  0992                     	;# 
   932  0993                     	;# 
   933  0994                     	;# 
   934  0995                     	;# 
   935  0996                     	;# 
   936  0997                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E16                     	;# 
   945  0E17                     	;# 
   946  0E18                     	;# 
   947  0E19                     	;# 
   948  0E1A                     	;# 
   949  0E1B                     	;# 
   950  0E1C                     	;# 
   951  0E1D                     	;# 
   952  0E1E                     	;# 
   953  0E1F                     	;# 
   954  0E20                     	;# 
   955  0E21                     	;# 
   956  0E22                     	;# 
   957  0E23                     	;# 
   958  0E24                     	;# 
   959  0E25                     	;# 
   960  0E26                     	;# 
   961  0E27                     	;# 
   962  0E28                     	;# 
   963  0E29                     	;# 
   964  0E2A                     	;# 
   965  0E2B                     	;# 
   966  0E2C                     	;# 
   967  0E2D                     	;# 
   968  0E2E                     	;# 
   969  0E2F                     	;# 
   970  0E30                     	;# 
   971  0E31                     	;# 
   972  0E32                     	;# 
   973  0E33                     	;# 
   974  0E34                     	;# 
   975  0E35                     	;# 
   976  0E36                     	;# 
   977  0E37                     	;# 
   978  0E8F                     	;# 
   979  0E90                     	;# 
   980  0E91                     	;# 
   981  0E92                     	;# 
   982  0E93                     	;# 
   983  0E94                     	;# 
   984  0E95                     	;# 
   985  0E96                     	;# 
   986  0E97                     	;# 
   987  0E9C                     	;# 
   988  0E9D                     	;# 
   989  0E9E                     	;# 
   990  0EA1                     	;# 
   991  0EA2                     	;# 
   992  0EA3                     	;# 
   993  0EA4                     	;# 
   994  0EA5                     	;# 
   995  0EA9                     	;# 
   996  0EAA                     	;# 
   997  0EAB                     	;# 
   998  0EAC                     	;# 
   999  0EB1                     	;# 
  1000  0EB2                     	;# 
  1001  0EB3                     	;# 
  1002  0EB8                     	;# 
  1003  0EB9                     	;# 
  1004  0EBA                     	;# 
  1005  0EBB                     	;# 
  1006  0EBC                     	;# 
  1007  0EBD                     	;# 
  1008  0EBE                     	;# 
  1009  0EC3                     	;# 
  1010  0EC5                     	;# 
  1011  0EC6                     	;# 
  1012  0EC7                     	;# 
  1013  0EC8                     	;# 
  1014  0EC9                     	;# 
  1015  0ECA                     	;# 
  1016  0ECB                     	;# 
  1017  0ECC                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0F24                     	;# 
  1039  0F25                     	;# 
  1040  0F26                     	;# 
  1041  0F27                     	;# 
  1042  0F38                     	;# 
  1043  0F39                     	;# 
  1044  0F3A                     	;# 
  1045  0F3B                     	;# 
  1046  0F3C                     	;# 
  1047  0F3D                     	;# 
  1048  0F3E                     	;# 
  1049  0F3F                     	;# 
  1050  0F40                     	;# 
  1051  0F41                     	;# 
  1052  0F43                     	;# 
  1053  0F44                     	;# 
  1054  0F45                     	;# 
  1055  0F46                     	;# 
  1056  0F47                     	;# 
  1057  0F48                     	;# 
  1058  0F49                     	;# 
  1059  0F4A                     	;# 
  1060  0F4B                     	;# 
  1061  0F4C                     	;# 
  1062  0F4E                     	;# 
  1063  0F4F                     	;# 
  1064  0F50                     	;# 
  1065  0F51                     	;# 
  1066  0F52                     	;# 
  1067  0F53                     	;# 
  1068  0F54                     	;# 
  1069  0F55                     	;# 
  1070  0F56                     	;# 
  1071  0F57                     	;# 
  1072  0F65                     	;# 
  1073  0F68                     	;# 
  1074  0F69                     	;# 
  1075  0F6A                     	;# 
  1076  0F6B                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0013                     	;# 
  1107  0016                     	;# 
  1108  0017                     	;# 
  1109  0018                     	;# 
  1110  001C                     	;# 
  1111  001C                     	;# 
  1112  001D                     	;# 
  1113  001D                     	;# 
  1114  001E                     	;# 
  1115  001F                     	;# 
  1116  008C                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008E                     	;# 
  1121  008F                     	;# 
  1122  0090                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0116                     	;# 
  1153  0117                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  018C                     	;# 
  1180  018D                     	;# 
  1181  018E                     	;# 
  1182  018F                     	;# 
  1183  0190                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0198                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019C                     	;# 
  1193  020C                     	;# 
  1194  020D                     	;# 
  1195  020E                     	;# 
  1196  020F                     	;# 
  1197  020F                     	;# 
  1198  0210                     	;# 
  1199  0210                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0296                     	;# 
  1239  0297                     	;# 
  1240  0298                     	;# 
  1241  0298                     	;# 
  1242  0299                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029B                     	;# 
  1246  029C                     	;# 
  1247  029C                     	;# 
  1248  029D                     	;# 
  1249  030C                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  0310                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0314                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  0318                     	;# 
  1266  0319                     	;# 
  1267  031A                     	;# 
  1268  031B                     	;# 
  1269  031C                     	;# 
  1270  031C                     	;# 
  1271  031D                     	;# 
  1272  031E                     	;# 
  1273  031F                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  040C                     	;# 
  1281  040D                     	;# 
  1282  040E                     	;# 
  1283  040F                     	;# 
  1284  0410                     	;# 
  1285  0411                     	;# 
  1286  0416                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  041F                     	;# 
  1300  048C                     	;# 
  1301  048C                     	;# 
  1302  048D                     	;# 
  1303  048E                     	;# 
  1304  048F                     	;# 
  1305  048F                     	;# 
  1306  0490                     	;# 
  1307  0491                     	;# 
  1308  0492                     	;# 
  1309  0492                     	;# 
  1310  0493                     	;# 
  1311  0494                     	;# 
  1312  0495                     	;# 
  1313  0495                     	;# 
  1314  0496                     	;# 
  1315  0497                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  050C                     	;# 
  1323  050C                     	;# 
  1324  050D                     	;# 
  1325  050E                     	;# 
  1326  050F                     	;# 
  1327  050F                     	;# 
  1328  0510                     	;# 
  1329  0511                     	;# 
  1330  0512                     	;# 
  1331  0512                     	;# 
  1332  0513                     	;# 
  1333  0514                     	;# 
  1334  0515                     	;# 
  1335  0515                     	;# 
  1336  0516                     	;# 
  1337  0517                     	;# 
  1338  0518                     	;# 
  1339  0519                     	;# 
  1340  051A                     	;# 
  1341  051B                     	;# 
  1342  051C                     	;# 
  1343  051D                     	;# 
  1344  058C                     	;# 
  1345  058C                     	;# 
  1346  058D                     	;# 
  1347  058E                     	;# 
  1348  058F                     	;# 
  1349  058F                     	;# 
  1350  0590                     	;# 
  1351  0591                     	;# 
  1352  0592                     	;# 
  1353  0593                     	;# 
  1354  060C                     	;# 
  1355  060D                     	;# 
  1356  060E                     	;# 
  1357  060F                     	;# 
  1358  0610                     	;# 
  1359  0611                     	;# 
  1360  0612                     	;# 
  1361  0613                     	;# 
  1362  0614                     	;# 
  1363  0616                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061D                     	;# 
  1371  061E                     	;# 
  1372  068C                     	;# 
  1373  068D                     	;# 
  1374  068E                     	;# 
  1375  068F                     	;# 
  1376  0690                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  070C                     	;# 
  1382  070D                     	;# 
  1383  070E                     	;# 
  1384  070F                     	;# 
  1385  0710                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  071A                     	;# 
  1395  071B                     	;# 
  1396  071C                     	;# 
  1397  071D                     	;# 
  1398  071E                     	;# 
  1399  0796                     	;# 
  1400  0797                     	;# 
  1401  0798                     	;# 
  1402  0799                     	;# 
  1403  079A                     	;# 
  1404  079B                     	;# 
  1405  080C                     	;# 
  1406  080D                     	;# 
  1407  080E                     	;# 
  1408  080F                     	;# 
  1409  0810                     	;# 
  1410  0811                     	;# 
  1411  0812                     	;# 
  1412  0813                     	;# 
  1413  0814                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081D                     	;# 
  1418  081E                     	;# 
  1419  081F                     	;# 
  1420  088C                     	;# 
  1421  088D                     	;# 
  1422  088E                     	;# 
  1423  088F                     	;# 
  1424  0890                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0893                     	;# 
  1428  0895                     	;# 
  1429  0896                     	;# 
  1430  0897                     	;# 
  1431  0898                     	;# 
  1432  0899                     	;# 
  1433  089A                     	;# 
  1434  089B                     	;# 
  1435  090C                     	;# 
  1436  090E                     	;# 
  1437  090F                     	;# 
  1438  091F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  0E0F                     	;# 
  1451  0E10                     	;# 
  1452  0E11                     	;# 
  1453  0E12                     	;# 
  1454  0E13                     	;# 
  1455  0E14                     	;# 
  1456  0E15                     	;# 
  1457  0E16                     	;# 
  1458  0E17                     	;# 
  1459  0E18                     	;# 
  1460  0E19                     	;# 
  1461  0E1A                     	;# 
  1462  0E1B                     	;# 
  1463  0E1C                     	;# 
  1464  0E1D                     	;# 
  1465  0E1E                     	;# 
  1466  0E1F                     	;# 
  1467  0E20                     	;# 
  1468  0E21                     	;# 
  1469  0E22                     	;# 
  1470  0E23                     	;# 
  1471  0E24                     	;# 
  1472  0E25                     	;# 
  1473  0E26                     	;# 
  1474  0E27                     	;# 
  1475  0E28                     	;# 
  1476  0E29                     	;# 
  1477  0E2A                     	;# 
  1478  0E2B                     	;# 
  1479  0E2C                     	;# 
  1480  0E2D                     	;# 
  1481  0E2E                     	;# 
  1482  0E2F                     	;# 
  1483  0E30                     	;# 
  1484  0E31                     	;# 
  1485  0E32                     	;# 
  1486  0E33                     	;# 
  1487  0E34                     	;# 
  1488  0E35                     	;# 
  1489  0E36                     	;# 
  1490  0E37                     	;# 
  1491  0E8F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E93                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0E96                     	;# 
  1499  0E97                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0EA1                     	;# 
  1504  0EA2                     	;# 
  1505  0EA3                     	;# 
  1506  0EA4                     	;# 
  1507  0EA5                     	;# 
  1508  0EA9                     	;# 
  1509  0EAA                     	;# 
  1510  0EAB                     	;# 
  1511  0EAC                     	;# 
  1512  0EB1                     	;# 
  1513  0EB2                     	;# 
  1514  0EB3                     	;# 
  1515  0EB8                     	;# 
  1516  0EB9                     	;# 
  1517  0EBA                     	;# 
  1518  0EBB                     	;# 
  1519  0EBC                     	;# 
  1520  0EBD                     	;# 
  1521  0EBE                     	;# 
  1522  0EC3                     	;# 
  1523  0EC5                     	;# 
  1524  0EC6                     	;# 
  1525  0EC7                     	;# 
  1526  0EC8                     	;# 
  1527  0EC9                     	;# 
  1528  0ECA                     	;# 
  1529  0ECB                     	;# 
  1530  0ECC                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F38                     	;# 
  1556  0F39                     	;# 
  1557  0F3A                     	;# 
  1558  0F3B                     	;# 
  1559  0F3C                     	;# 
  1560  0F3D                     	;# 
  1561  0F3E                     	;# 
  1562  0F3F                     	;# 
  1563  0F40                     	;# 
  1564  0F41                     	;# 
  1565  0F43                     	;# 
  1566  0F44                     	;# 
  1567  0F45                     	;# 
  1568  0F46                     	;# 
  1569  0F47                     	;# 
  1570  0F48                     	;# 
  1571  0F49                     	;# 
  1572  0F4A                     	;# 
  1573  0F4B                     	;# 
  1574  0F4C                     	;# 
  1575  0F4E                     	;# 
  1576  0F4F                     	;# 
  1577  0F50                     	;# 
  1578  0F51                     	;# 
  1579  0F52                     	;# 
  1580  0F53                     	;# 
  1581  0F54                     	;# 
  1582  0F55                     	;# 
  1583  0F56                     	;# 
  1584  0F57                     	;# 
  1585  0F65                     	;# 
  1586  0F68                     	;# 
  1587  0F69                     	;# 
  1588  0F6A                     	;# 
  1589  0F6B                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0010                     	;# 
  1617  0011                     	;# 
  1618  0012                     	;# 
  1619  0013                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  001C                     	;# 
  1624  001C                     	;# 
  1625  001D                     	;# 
  1626  001D                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008C                     	;# 
  1631  008D                     	;# 
  1632  008E                     	;# 
  1633  008E                     	;# 
  1634  008F                     	;# 
  1635  0090                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0093                     	;# 
  1639  0094                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0098                     	;# 
  1644  0099                     	;# 
  1645  009A                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  010E                     	;# 
  1654  010F                     	;# 
  1655  0110                     	;# 
  1656  0110                     	;# 
  1657  0111                     	;# 
  1658  0112                     	;# 
  1659  0112                     	;# 
  1660  0113                     	;# 
  1661  0114                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  018F                     	;# 
  1696  0190                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0196                     	;# 
  1700  0197                     	;# 
  1701  0198                     	;# 
  1702  0199                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  020F                     	;# 
  1710  020F                     	;# 
  1711  0210                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0214                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0218                     	;# 
  1725  0219                     	;# 
  1726  021A                     	;# 
  1727  021B                     	;# 
  1728  021B                     	;# 
  1729  021C                     	;# 
  1730  021C                     	;# 
  1731  021D                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028C                     	;# 
  1737  028D                     	;# 
  1738  028D                     	;# 
  1739  028E                     	;# 
  1740  028F                     	;# 
  1741  0290                     	;# 
  1742  0290                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0292                     	;# 
  1746  0293                     	;# 
  1747  0293                     	;# 
  1748  0294                     	;# 
  1749  0295                     	;# 
  1750  0296                     	;# 
  1751  0296                     	;# 
  1752  0297                     	;# 
  1753  0298                     	;# 
  1754  0298                     	;# 
  1755  0299                     	;# 
  1756  0299                     	;# 
  1757  029A                     	;# 
  1758  029B                     	;# 
  1759  029C                     	;# 
  1760  029C                     	;# 
  1761  029D                     	;# 
  1762  030C                     	;# 
  1763  030C                     	;# 
  1764  030D                     	;# 
  1765  030E                     	;# 
  1766  030F                     	;# 
  1767  0310                     	;# 
  1768  0310                     	;# 
  1769  0311                     	;# 
  1770  0312                     	;# 
  1771  0313                     	;# 
  1772  0314                     	;# 
  1773  0314                     	;# 
  1774  0315                     	;# 
  1775  0316                     	;# 
  1776  0317                     	;# 
  1777  0318                     	;# 
  1778  0318                     	;# 
  1779  0319                     	;# 
  1780  031A                     	;# 
  1781  031B                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  031F                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  038E                     	;# 
  1790  0390                     	;# 
  1791  0391                     	;# 
  1792  0392                     	;# 
  1793  040C                     	;# 
  1794  040D                     	;# 
  1795  040E                     	;# 
  1796  040F                     	;# 
  1797  0410                     	;# 
  1798  0411                     	;# 
  1799  0416                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041A                     	;# 
  1807  041B                     	;# 
  1808  041C                     	;# 
  1809  041C                     	;# 
  1810  041D                     	;# 
  1811  041E                     	;# 
  1812  041F                     	;# 
  1813  048C                     	;# 
  1814  048C                     	;# 
  1815  048D                     	;# 
  1816  048E                     	;# 
  1817  048F                     	;# 
  1818  048F                     	;# 
  1819  0490                     	;# 
  1820  0491                     	;# 
  1821  0492                     	;# 
  1822  0492                     	;# 
  1823  0493                     	;# 
  1824  0494                     	;# 
  1825  0495                     	;# 
  1826  0495                     	;# 
  1827  0496                     	;# 
  1828  0497                     	;# 
  1829  0498                     	;# 
  1830  0499                     	;# 
  1831  049A                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  050C                     	;# 
  1836  050C                     	;# 
  1837  050D                     	;# 
  1838  050E                     	;# 
  1839  050F                     	;# 
  1840  050F                     	;# 
  1841  0510                     	;# 
  1842  0511                     	;# 
  1843  0512                     	;# 
  1844  0512                     	;# 
  1845  0513                     	;# 
  1846  0514                     	;# 
  1847  0515                     	;# 
  1848  0515                     	;# 
  1849  0516                     	;# 
  1850  0517                     	;# 
  1851  0518                     	;# 
  1852  0519                     	;# 
  1853  051A                     	;# 
  1854  051B                     	;# 
  1855  051C                     	;# 
  1856  051D                     	;# 
  1857  058C                     	;# 
  1858  058C                     	;# 
  1859  058D                     	;# 
  1860  058E                     	;# 
  1861  058F                     	;# 
  1862  058F                     	;# 
  1863  0590                     	;# 
  1864  0591                     	;# 
  1865  0592                     	;# 
  1866  0593                     	;# 
  1867  060C                     	;# 
  1868  060D                     	;# 
  1869  060E                     	;# 
  1870  060F                     	;# 
  1871  0610                     	;# 
  1872  0611                     	;# 
  1873  0612                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0616                     	;# 
  1877  0617                     	;# 
  1878  0618                     	;# 
  1879  0619                     	;# 
  1880  061A                     	;# 
  1881  061B                     	;# 
  1882  061C                     	;# 
  1883  061D                     	;# 
  1884  061E                     	;# 
  1885  068C                     	;# 
  1886  068D                     	;# 
  1887  068E                     	;# 
  1888  068F                     	;# 
  1889  0690                     	;# 
  1890  0691                     	;# 
  1891  0692                     	;# 
  1892  0693                     	;# 
  1893  0694                     	;# 
  1894  070C                     	;# 
  1895  070D                     	;# 
  1896  070E                     	;# 
  1897  070F                     	;# 
  1898  0710                     	;# 
  1899  0711                     	;# 
  1900  0712                     	;# 
  1901  0713                     	;# 
  1902  0714                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0718                     	;# 
  1906  0719                     	;# 
  1907  071A                     	;# 
  1908  071B                     	;# 
  1909  071C                     	;# 
  1910  071D                     	;# 
  1911  071E                     	;# 
  1912  0796                     	;# 
  1913  0797                     	;# 
  1914  0798                     	;# 
  1915  0799                     	;# 
  1916  079A                     	;# 
  1917  079B                     	;# 
  1918  080C                     	;# 
  1919  080D                     	;# 
  1920  080E                     	;# 
  1921  080F                     	;# 
  1922  0810                     	;# 
  1923  0811                     	;# 
  1924  0812                     	;# 
  1925  0813                     	;# 
  1926  0814                     	;# 
  1927  081A                     	;# 
  1928  081B                     	;# 
  1929  081C                     	;# 
  1930  081D                     	;# 
  1931  081E                     	;# 
  1932  081F                     	;# 
  1933  088C                     	;# 
  1934  088D                     	;# 
  1935  088E                     	;# 
  1936  088F                     	;# 
  1937  0890                     	;# 
  1938  0891                     	;# 
  1939  0892                     	;# 
  1940  0893                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0897                     	;# 
  1944  0898                     	;# 
  1945  0899                     	;# 
  1946  089A                     	;# 
  1947  089B                     	;# 
  1948  090C                     	;# 
  1949  090E                     	;# 
  1950  090F                     	;# 
  1951  091F                     	;# 
  1952  091F                     	;# 
  1953  098F                     	;# 
  1954  098F                     	;# 
  1955  0990                     	;# 
  1956  0991                     	;# 
  1957  0992                     	;# 
  1958  0993                     	;# 
  1959  0994                     	;# 
  1960  0995                     	;# 
  1961  0996                     	;# 
  1962  0997                     	;# 
  1963  0E0F                     	;# 
  1964  0E10                     	;# 
  1965  0E11                     	;# 
  1966  0E12                     	;# 
  1967  0E13                     	;# 
  1968  0E14                     	;# 
  1969  0E15                     	;# 
  1970  0E16                     	;# 
  1971  0E17                     	;# 
  1972  0E18                     	;# 
  1973  0E19                     	;# 
  1974  0E1A                     	;# 
  1975  0E1B                     	;# 
  1976  0E1C                     	;# 
  1977  0E1D                     	;# 
  1978  0E1E                     	;# 
  1979  0E1F                     	;# 
  1980  0E20                     	;# 
  1981  0E21                     	;# 
  1982  0E22                     	;# 
  1983  0E23                     	;# 
  1984  0E24                     	;# 
  1985  0E25                     	;# 
  1986  0E26                     	;# 
  1987  0E27                     	;# 
  1988  0E28                     	;# 
  1989  0E29                     	;# 
  1990  0E2A                     	;# 
  1991  0E2B                     	;# 
  1992  0E2C                     	;# 
  1993  0E2D                     	;# 
  1994  0E2E                     	;# 
  1995  0E2F                     	;# 
  1996  0E30                     	;# 
  1997  0E31                     	;# 
  1998  0E32                     	;# 
  1999  0E33                     	;# 
  2000  0E34                     	;# 
  2001  0E35                     	;# 
  2002  0E36                     	;# 
  2003  0E37                     	;# 
  2004  0E8F                     	;# 
  2005  0E90                     	;# 
  2006  0E91                     	;# 
  2007  0E92                     	;# 
  2008  0E93                     	;# 
  2009  0E94                     	;# 
  2010  0E95                     	;# 
  2011  0E96                     	;# 
  2012  0E97                     	;# 
  2013  0E9C                     	;# 
  2014  0E9D                     	;# 
  2015  0E9E                     	;# 
  2016  0EA1                     	;# 
  2017  0EA2                     	;# 
  2018  0EA3                     	;# 
  2019  0EA4                     	;# 
  2020  0EA5                     	;# 
  2021  0EA9                     	;# 
  2022  0EAA                     	;# 
  2023  0EAB                     	;# 
  2024  0EAC                     	;# 
  2025  0EB1                     	;# 
  2026  0EB2                     	;# 
  2027  0EB3                     	;# 
  2028  0EB8                     	;# 
  2029  0EB9                     	;# 
  2030  0EBA                     	;# 
  2031  0EBB                     	;# 
  2032  0EBC                     	;# 
  2033  0EBD                     	;# 
  2034  0EBE                     	;# 
  2035  0EC3                     	;# 
  2036  0EC5                     	;# 
  2037  0EC6                     	;# 
  2038  0EC7                     	;# 
  2039  0EC8                     	;# 
  2040  0EC9                     	;# 
  2041  0ECA                     	;# 
  2042  0ECB                     	;# 
  2043  0ECC                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F38                     	;# 
  2069  0F39                     	;# 
  2070  0F3A                     	;# 
  2071  0F3B                     	;# 
  2072  0F3C                     	;# 
  2073  0F3D                     	;# 
  2074  0F3E                     	;# 
  2075  0F3F                     	;# 
  2076  0F40                     	;# 
  2077  0F41                     	;# 
  2078  0F43                     	;# 
  2079  0F44                     	;# 
  2080  0F45                     	;# 
  2081  0F46                     	;# 
  2082  0F47                     	;# 
  2083  0F48                     	;# 
  2084  0F49                     	;# 
  2085  0F4A                     	;# 
  2086  0F4B                     	;# 
  2087  0F4C                     	;# 
  2088  0F4E                     	;# 
  2089  0F4F                     	;# 
  2090  0F50                     	;# 
  2091  0F51                     	;# 
  2092  0F52                     	;# 
  2093  0F53                     	;# 
  2094  0F54                     	;# 
  2095  0F55                     	;# 
  2096  0F56                     	;# 
  2097  0F57                     	;# 
  2098  0F65                     	;# 
  2099  0F68                     	;# 
  2100  0F69                     	;# 
  2101  0F6A                     	;# 
  2102  0F6B                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0010                     	;# 
  2130  0011                     	;# 
  2131  0012                     	;# 
  2132  0013                     	;# 
  2133  0016                     	;# 
  2134  0017                     	;# 
  2135  0018                     	;# 
  2136  001C                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001D                     	;# 
  2140  001E                     	;# 
  2141  001F                     	;# 
  2142  008C                     	;# 
  2143  008C                     	;# 
  2144  008D                     	;# 
  2145  008E                     	;# 
  2146  008E                     	;# 
  2147  008F                     	;# 
  2148  0090                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0093                     	;# 
  2152  0094                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009C                     	;# 
  2161  009D                     	;# 
  2162  009E                     	;# 
  2163  010C                     	;# 
  2164  010D                     	;# 
  2165  010E                     	;# 
  2166  010E                     	;# 
  2167  010F                     	;# 
  2168  0110                     	;# 
  2169  0110                     	;# 
  2170  0111                     	;# 
  2171  0112                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0116                     	;# 
  2179  0117                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  018C                     	;# 
  2206  018D                     	;# 
  2207  018E                     	;# 
  2208  018F                     	;# 
  2209  0190                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0196                     	;# 
  2213  0197                     	;# 
  2214  0198                     	;# 
  2215  0199                     	;# 
  2216  019A                     	;# 
  2217  019B                     	;# 
  2218  019C                     	;# 
  2219  020C                     	;# 
  2220  020D                     	;# 
  2221  020E                     	;# 
  2222  020F                     	;# 
  2223  020F                     	;# 
  2224  0210                     	;# 
  2225  0210                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0213                     	;# 
  2230  0214                     	;# 
  2231  0215                     	;# 
  2232  0215                     	;# 
  2233  0216                     	;# 
  2234  0216                     	;# 
  2235  0217                     	;# 
  2236  0217                     	;# 
  2237  0218                     	;# 
  2238  0219                     	;# 
  2239  021A                     	;# 
  2240  021B                     	;# 
  2241  021B                     	;# 
  2242  021C                     	;# 
  2243  021C                     	;# 
  2244  021D                     	;# 
  2245  021D                     	;# 
  2246  021E                     	;# 
  2247  021F                     	;# 
  2248  028C                     	;# 
  2249  028C                     	;# 
  2250  028D                     	;# 
  2251  028D                     	;# 
  2252  028E                     	;# 
  2253  028F                     	;# 
  2254  0290                     	;# 
  2255  0290                     	;# 
  2256  0291                     	;# 
  2257  0292                     	;# 
  2258  0292                     	;# 
  2259  0293                     	;# 
  2260  0293                     	;# 
  2261  0294                     	;# 
  2262  0295                     	;# 
  2263  0296                     	;# 
  2264  0296                     	;# 
  2265  0297                     	;# 
  2266  0298                     	;# 
  2267  0298                     	;# 
  2268  0299                     	;# 
  2269  0299                     	;# 
  2270  029A                     	;# 
  2271  029B                     	;# 
  2272  029C                     	;# 
  2273  029C                     	;# 
  2274  029D                     	;# 
  2275  030C                     	;# 
  2276  030C                     	;# 
  2277  030D                     	;# 
  2278  030E                     	;# 
  2279  030F                     	;# 
  2280  0310                     	;# 
  2281  0310                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0314                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0317                     	;# 
  2290  0318                     	;# 
  2291  0318                     	;# 
  2292  0319                     	;# 
  2293  031A                     	;# 
  2294  031B                     	;# 
  2295  031C                     	;# 
  2296  031C                     	;# 
  2297  031D                     	;# 
  2298  031E                     	;# 
  2299  031F                     	;# 
  2300  038C                     	;# 
  2301  038D                     	;# 
  2302  038E                     	;# 
  2303  0390                     	;# 
  2304  0391                     	;# 
  2305  0392                     	;# 
  2306  040C                     	;# 
  2307  040D                     	;# 
  2308  040E                     	;# 
  2309  040F                     	;# 
  2310  0410                     	;# 
  2311  0411                     	;# 
  2312  0416                     	;# 
  2313  0416                     	;# 
  2314  0417                     	;# 
  2315  0418                     	;# 
  2316  0418                     	;# 
  2317  0419                     	;# 
  2318  041A                     	;# 
  2319  041A                     	;# 
  2320  041B                     	;# 
  2321  041C                     	;# 
  2322  041C                     	;# 
  2323  041D                     	;# 
  2324  041E                     	;# 
  2325  041F                     	;# 
  2326  048C                     	;# 
  2327  048C                     	;# 
  2328  048D                     	;# 
  2329  048E                     	;# 
  2330  048F                     	;# 
  2331  048F                     	;# 
  2332  0490                     	;# 
  2333  0491                     	;# 
  2334  0492                     	;# 
  2335  0492                     	;# 
  2336  0493                     	;# 
  2337  0494                     	;# 
  2338  0495                     	;# 
  2339  0495                     	;# 
  2340  0496                     	;# 
  2341  0497                     	;# 
  2342  0498                     	;# 
  2343  0499                     	;# 
  2344  049A                     	;# 
  2345  049B                     	;# 
  2346  049C                     	;# 
  2347  049D                     	;# 
  2348  050C                     	;# 
  2349  050C                     	;# 
  2350  050D                     	;# 
  2351  050E                     	;# 
  2352  050F                     	;# 
  2353  050F                     	;# 
  2354  0510                     	;# 
  2355  0511                     	;# 
  2356  0512                     	;# 
  2357  0512                     	;# 
  2358  0513                     	;# 
  2359  0514                     	;# 
  2360  0515                     	;# 
  2361  0515                     	;# 
  2362  0516                     	;# 
  2363  0517                     	;# 
  2364  0518                     	;# 
  2365  0519                     	;# 
  2366  051A                     	;# 
  2367  051B                     	;# 
  2368  051C                     	;# 
  2369  051D                     	;# 
  2370  058C                     	;# 
  2371  058C                     	;# 
  2372  058D                     	;# 
  2373  058E                     	;# 
  2374  058F                     	;# 
  2375  058F                     	;# 
  2376  0590                     	;# 
  2377  0591                     	;# 
  2378  0592                     	;# 
  2379  0593                     	;# 
  2380  060C                     	;# 
  2381  060D                     	;# 
  2382  060E                     	;# 
  2383  060F                     	;# 
  2384  0610                     	;# 
  2385  0611                     	;# 
  2386  0612                     	;# 
  2387  0613                     	;# 
  2388  0614                     	;# 
  2389  0616                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061D                     	;# 
  2397  061E                     	;# 
  2398  068C                     	;# 
  2399  068D                     	;# 
  2400  068E                     	;# 
  2401  068F                     	;# 
  2402  0690                     	;# 
  2403  0691                     	;# 
  2404  0692                     	;# 
  2405  0693                     	;# 
  2406  0694                     	;# 
  2407  070C                     	;# 
  2408  070D                     	;# 
  2409  070E                     	;# 
  2410  070F                     	;# 
  2411  0710                     	;# 
  2412  0711                     	;# 
  2413  0712                     	;# 
  2414  0713                     	;# 
  2415  0714                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  071A                     	;# 
  2421  071B                     	;# 
  2422  071C                     	;# 
  2423  071D                     	;# 
  2424  071E                     	;# 
  2425  0796                     	;# 
  2426  0797                     	;# 
  2427  0798                     	;# 
  2428  0799                     	;# 
  2429  079A                     	;# 
  2430  079B                     	;# 
  2431  080C                     	;# 
  2432  080D                     	;# 
  2433  080E                     	;# 
  2434  080F                     	;# 
  2435  0810                     	;# 
  2436  0811                     	;# 
  2437  0812                     	;# 
  2438  0813                     	;# 
  2439  0814                     	;# 
  2440  081A                     	;# 
  2441  081B                     	;# 
  2442  081C                     	;# 
  2443  081D                     	;# 
  2444  081E                     	;# 
  2445  081F                     	;# 
  2446  088C                     	;# 
  2447  088D                     	;# 
  2448  088E                     	;# 
  2449  088F                     	;# 
  2450  0890                     	;# 
  2451  0891                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0895                     	;# 
  2455  0896                     	;# 
  2456  0897                     	;# 
  2457  0898                     	;# 
  2458  0899                     	;# 
  2459  089A                     	;# 
  2460  089B                     	;# 
  2461  090C                     	;# 
  2462  090E                     	;# 
  2463  090F                     	;# 
  2464  091F                     	;# 
  2465  091F                     	;# 
  2466  098F                     	;# 
  2467  098F                     	;# 
  2468  0990                     	;# 
  2469  0991                     	;# 
  2470  0992                     	;# 
  2471  0993                     	;# 
  2472  0994                     	;# 
  2473  0995                     	;# 
  2474  0996                     	;# 
  2475  0997                     	;# 
  2476  0E0F                     	;# 
  2477  0E10                     	;# 
  2478  0E11                     	;# 
  2479  0E12                     	;# 
  2480  0E13                     	;# 
  2481  0E14                     	;# 
  2482  0E15                     	;# 
  2483  0E16                     	;# 
  2484  0E17                     	;# 
  2485  0E18                     	;# 
  2486  0E19                     	;# 
  2487  0E1A                     	;# 
  2488  0E1B                     	;# 
  2489  0E1C                     	;# 
  2490  0E1D                     	;# 
  2491  0E1E                     	;# 
  2492  0E1F                     	;# 
  2493  0E20                     	;# 
  2494  0E21                     	;# 
  2495  0E22                     	;# 
  2496  0E23                     	;# 
  2497  0E24                     	;# 
  2498  0E25                     	;# 
  2499  0E26                     	;# 
  2500  0E27                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E30                     	;# 
  2510  0E31                     	;# 
  2511  0E32                     	;# 
  2512  0E33                     	;# 
  2513  0E34                     	;# 
  2514  0E35                     	;# 
  2515  0E36                     	;# 
  2516  0E37                     	;# 
  2517  0E8F                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E93                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E96                     	;# 
  2525  0E97                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA9                     	;# 
  2535  0EAA                     	;# 
  2536  0EAB                     	;# 
  2537  0EAC                     	;# 
  2538  0EB1                     	;# 
  2539  0EB2                     	;# 
  2540  0EB3                     	;# 
  2541  0EB8                     	;# 
  2542  0EB9                     	;# 
  2543  0EBA                     	;# 
  2544  0EBB                     	;# 
  2545  0EBC                     	;# 
  2546  0EBD                     	;# 
  2547  0EBE                     	;# 
  2548  0EC3                     	;# 
  2549  0EC5                     	;# 
  2550  0EC6                     	;# 
  2551  0EC7                     	;# 
  2552  0EC8                     	;# 
  2553  0EC9                     	;# 
  2554  0ECA                     	;# 
  2555  0ECB                     	;# 
  2556  0ECC                     	;# 
  2557  0F10                     	;# 
  2558  0F11                     	;# 
  2559  0F12                     	;# 
  2560  0F13                     	;# 
  2561  0F14                     	;# 
  2562  0F15                     	;# 
  2563  0F16                     	;# 
  2564  0F17                     	;# 
  2565  0F18                     	;# 
  2566  0F19                     	;# 
  2567  0F1A                     	;# 
  2568  0F1B                     	;# 
  2569  0F1C                     	;# 
  2570  0F1D                     	;# 
  2571  0F1E                     	;# 
  2572  0F1F                     	;# 
  2573  0F20                     	;# 
  2574  0F21                     	;# 
  2575  0F22                     	;# 
  2576  0F23                     	;# 
  2577  0F24                     	;# 
  2578  0F25                     	;# 
  2579  0F26                     	;# 
  2580  0F27                     	;# 
  2581  0F38                     	;# 
  2582  0F39                     	;# 
  2583  0F3A                     	;# 
  2584  0F3B                     	;# 
  2585  0F3C                     	;# 
  2586  0F3D                     	;# 
  2587  0F3E                     	;# 
  2588  0F3F                     	;# 
  2589  0F40                     	;# 
  2590  0F41                     	;# 
  2591  0F43                     	;# 
  2592  0F44                     	;# 
  2593  0F45                     	;# 
  2594  0F46                     	;# 
  2595  0F47                     	;# 
  2596  0F48                     	;# 
  2597  0F49                     	;# 
  2598  0F4A                     	;# 
  2599  0F4B                     	;# 
  2600  0F4C                     	;# 
  2601  0F4E                     	;# 
  2602  0F4F                     	;# 
  2603  0F50                     	;# 
  2604  0F51                     	;# 
  2605  0F52                     	;# 
  2606  0F53                     	;# 
  2607  0F54                     	;# 
  2608  0F55                     	;# 
  2609  0F56                     	;# 
  2610  0F57                     	;# 
  2611  0F65                     	;# 
  2612  0F68                     	;# 
  2613  0F69                     	;# 
  2614  0F6A                     	;# 
  2615  0F6B                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  0010                     	;# 
  2643  0011                     	;# 
  2644  0012                     	;# 
  2645  0013                     	;# 
  2646  0016                     	;# 
  2647  0017                     	;# 
  2648  0018                     	;# 
  2649  001C                     	;# 
  2650  001C                     	;# 
  2651  001D                     	;# 
  2652  001D                     	;# 
  2653  001E                     	;# 
  2654  001F                     	;# 
  2655  008C                     	;# 
  2656  008C                     	;# 
  2657  008D                     	;# 
  2658  008E                     	;# 
  2659  008E                     	;# 
  2660  008F                     	;# 
  2661  0090                     	;# 
  2662  0090                     	;# 
  2663  0091                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  010C                     	;# 
  2677  010D                     	;# 
  2678  010E                     	;# 
  2679  010E                     	;# 
  2680  010F                     	;# 
  2681  0110                     	;# 
  2682  0110                     	;# 
  2683  0111                     	;# 
  2684  0112                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0116                     	;# 
  2692  0117                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  018E                     	;# 
  2721  018F                     	;# 
  2722  0190                     	;# 
  2723  0191                     	;# 
  2724  0192                     	;# 
  2725  0196                     	;# 
  2726  0197                     	;# 
  2727  0198                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019B                     	;# 
  2731  019C                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  020F                     	;# 
  2736  020F                     	;# 
  2737  0210                     	;# 
  2738  0210                     	;# 
  2739  0211                     	;# 
  2740  0211                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0218                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021B                     	;# 
  2755  021C                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028C                     	;# 
  2763  028D                     	;# 
  2764  028D                     	;# 
  2765  028E                     	;# 
  2766  028F                     	;# 
  2767  0290                     	;# 
  2768  0290                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0292                     	;# 
  2772  0293                     	;# 
  2773  0293                     	;# 
  2774  0294                     	;# 
  2775  0295                     	;# 
  2776  0296                     	;# 
  2777  0296                     	;# 
  2778  0297                     	;# 
  2779  0298                     	;# 
  2780  0298                     	;# 
  2781  0299                     	;# 
  2782  0299                     	;# 
  2783  029A                     	;# 
  2784  029B                     	;# 
  2785  029C                     	;# 
  2786  029C                     	;# 
  2787  029D                     	;# 
  2788  030C                     	;# 
  2789  030C                     	;# 
  2790  030D                     	;# 
  2791  030E                     	;# 
  2792  030F                     	;# 
  2793  0310                     	;# 
  2794  0310                     	;# 
  2795  0311                     	;# 
  2796  0312                     	;# 
  2797  0313                     	;# 
  2798  0314                     	;# 
  2799  0314                     	;# 
  2800  0315                     	;# 
  2801  0316                     	;# 
  2802  0317                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031B                     	;# 
  2808  031C                     	;# 
  2809  031C                     	;# 
  2810  031D                     	;# 
  2811  031E                     	;# 
  2812  031F                     	;# 
  2813  038C                     	;# 
  2814  038D                     	;# 
  2815  038E                     	;# 
  2816  0390                     	;# 
  2817  0391                     	;# 
  2818  0392                     	;# 
  2819  040C                     	;# 
  2820  040D                     	;# 
  2821  040E                     	;# 
  2822  040F                     	;# 
  2823  0410                     	;# 
  2824  0411                     	;# 
  2825  0416                     	;# 
  2826  0416                     	;# 
  2827  0417                     	;# 
  2828  0418                     	;# 
  2829  0418                     	;# 
  2830  0419                     	;# 
  2831  041A                     	;# 
  2832  041A                     	;# 
  2833  041B                     	;# 
  2834  041C                     	;# 
  2835  041C                     	;# 
  2836  041D                     	;# 
  2837  041E                     	;# 
  2838  041F                     	;# 
  2839  048C                     	;# 
  2840  048C                     	;# 
  2841  048D                     	;# 
  2842  048E                     	;# 
  2843  048F                     	;# 
  2844  048F                     	;# 
  2845  0490                     	;# 
  2846  0491                     	;# 
  2847  0492                     	;# 
  2848  0492                     	;# 
  2849  0493                     	;# 
  2850  0494                     	;# 
  2851  0495                     	;# 
  2852  0495                     	;# 
  2853  0496                     	;# 
  2854  0497                     	;# 
  2855  0498                     	;# 
  2856  0499                     	;# 
  2857  049A                     	;# 
  2858  049B                     	;# 
  2859  049C                     	;# 
  2860  049D                     	;# 
  2861  050C                     	;# 
  2862  050C                     	;# 
  2863  050D                     	;# 
  2864  050E                     	;# 
  2865  050F                     	;# 
  2866  050F                     	;# 
  2867  0510                     	;# 
  2868  0511                     	;# 
  2869  0512                     	;# 
  2870  0512                     	;# 
  2871  0513                     	;# 
  2872  0514                     	;# 
  2873  0515                     	;# 
  2874  0515                     	;# 
  2875  0516                     	;# 
  2876  0517                     	;# 
  2877  0518                     	;# 
  2878  0519                     	;# 
  2879  051A                     	;# 
  2880  051B                     	;# 
  2881  051C                     	;# 
  2882  051D                     	;# 
  2883  058C                     	;# 
  2884  058C                     	;# 
  2885  058D                     	;# 
  2886  058E                     	;# 
  2887  058F                     	;# 
  2888  058F                     	;# 
  2889  0590                     	;# 
  2890  0591                     	;# 
  2891  0592                     	;# 
  2892  0593                     	;# 
  2893  060C                     	;# 
  2894  060D                     	;# 
  2895  060E                     	;# 
  2896  060F                     	;# 
  2897  0610                     	;# 
  2898  0611                     	;# 
  2899  0612                     	;# 
  2900  0613                     	;# 
  2901  0614                     	;# 
  2902  0616                     	;# 
  2903  0617                     	;# 
  2904  0618                     	;# 
  2905  0619                     	;# 
  2906  061A                     	;# 
  2907  061B                     	;# 
  2908  061C                     	;# 
  2909  061D                     	;# 
  2910  061E                     	;# 
  2911  068C                     	;# 
  2912  068D                     	;# 
  2913  068E                     	;# 
  2914  068F                     	;# 
  2915  0690                     	;# 
  2916  0691                     	;# 
  2917  0692                     	;# 
  2918  0693                     	;# 
  2919  0694                     	;# 
  2920  070C                     	;# 
  2921  070D                     	;# 
  2922  070E                     	;# 
  2923  070F                     	;# 
  2924  0710                     	;# 
  2925  0711                     	;# 
  2926  0712                     	;# 
  2927  0713                     	;# 
  2928  0714                     	;# 
  2929  0716                     	;# 
  2930  0717                     	;# 
  2931  0718                     	;# 
  2932  0719                     	;# 
  2933  071A                     	;# 
  2934  071B                     	;# 
  2935  071C                     	;# 
  2936  071D                     	;# 
  2937  071E                     	;# 
  2938  0796                     	;# 
  2939  0797                     	;# 
  2940  0798                     	;# 
  2941  0799                     	;# 
  2942  079A                     	;# 
  2943  079B                     	;# 
  2944  080C                     	;# 
  2945  080D                     	;# 
  2946  080E                     	;# 
  2947  080F                     	;# 
  2948  0810                     	;# 
  2949  0811                     	;# 
  2950  0812                     	;# 
  2951  0813                     	;# 
  2952  0814                     	;# 
  2953  081A                     	;# 
  2954  081B                     	;# 
  2955  081C                     	;# 
  2956  081D                     	;# 
  2957  081E                     	;# 
  2958  081F                     	;# 
  2959  088C                     	;# 
  2960  088D                     	;# 
  2961  088E                     	;# 
  2962  088F                     	;# 
  2963  0890                     	;# 
  2964  0891                     	;# 
  2965  0892                     	;# 
  2966  0893                     	;# 
  2967  0895                     	;# 
  2968  0896                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  089A                     	;# 
  2973  089B                     	;# 
  2974  090C                     	;# 
  2975  090E                     	;# 
  2976  090F                     	;# 
  2977  091F                     	;# 
  2978  091F                     	;# 
  2979  098F                     	;# 
  2980  098F                     	;# 
  2981  0990                     	;# 
  2982  0991                     	;# 
  2983  0992                     	;# 
  2984  0993                     	;# 
  2985  0994                     	;# 
  2986  0995                     	;# 
  2987  0996                     	;# 
  2988  0997                     	;# 
  2989  0E0F                     	;# 
  2990  0E10                     	;# 
  2991  0E11                     	;# 
  2992  0E12                     	;# 
  2993  0E13                     	;# 
  2994  0E14                     	;# 
  2995  0E15                     	;# 
  2996  0E16                     	;# 
  2997  0E17                     	;# 
  2998  0E18                     	;# 
  2999  0E19                     	;# 
  3000  0E1A                     	;# 
  3001  0E1B                     	;# 
  3002  0E1C                     	;# 
  3003  0E1D                     	;# 
  3004  0E1E                     	;# 
  3005  0E1F                     	;# 
  3006  0E20                     	;# 
  3007  0E21                     	;# 
  3008  0E22                     	;# 
  3009  0E23                     	;# 
  3010  0E24                     	;# 
  3011  0E25                     	;# 
  3012  0E26                     	;# 
  3013  0E27                     	;# 
  3014  0E28                     	;# 
  3015  0E29                     	;# 
  3016  0E2A                     	;# 
  3017  0E2B                     	;# 
  3018  0E2C                     	;# 
  3019  0E2D                     	;# 
  3020  0E2E                     	;# 
  3021  0E2F                     	;# 
  3022  0E30                     	;# 
  3023  0E31                     	;# 
  3024  0E32                     	;# 
  3025  0E33                     	;# 
  3026  0E34                     	;# 
  3027  0E35                     	;# 
  3028  0E36                     	;# 
  3029  0E37                     	;# 
  3030  0E8F                     	;# 
  3031  0E90                     	;# 
  3032  0E91                     	;# 
  3033  0E92                     	;# 
  3034  0E93                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E96                     	;# 
  3038  0E97                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA9                     	;# 
  3048  0EAA                     	;# 
  3049  0EAB                     	;# 
  3050  0EAC                     	;# 
  3051  0EB1                     	;# 
  3052  0EB2                     	;# 
  3053  0EB3                     	;# 
  3054  0EB8                     	;# 
  3055  0EB9                     	;# 
  3056  0EBA                     	;# 
  3057  0EBB                     	;# 
  3058  0EBC                     	;# 
  3059  0EBD                     	;# 
  3060  0EBE                     	;# 
  3061  0EC3                     	;# 
  3062  0EC5                     	;# 
  3063  0EC6                     	;# 
  3064  0EC7                     	;# 
  3065  0EC8                     	;# 
  3066  0EC9                     	;# 
  3067  0ECA                     	;# 
  3068  0ECB                     	;# 
  3069  0ECC                     	;# 
  3070  0F10                     	;# 
  3071  0F11                     	;# 
  3072  0F12                     	;# 
  3073  0F13                     	;# 
  3074  0F14                     	;# 
  3075  0F15                     	;# 
  3076  0F16                     	;# 
  3077  0F17                     	;# 
  3078  0F18                     	;# 
  3079  0F19                     	;# 
  3080  0F1A                     	;# 
  3081  0F1B                     	;# 
  3082  0F1C                     	;# 
  3083  0F1D                     	;# 
  3084  0F1E                     	;# 
  3085  0F1F                     	;# 
  3086  0F20                     	;# 
  3087  0F21                     	;# 
  3088  0F22                     	;# 
  3089  0F23                     	;# 
  3090  0F24                     	;# 
  3091  0F25                     	;# 
  3092  0F26                     	;# 
  3093  0F27                     	;# 
  3094  0F38                     	;# 
  3095  0F39                     	;# 
  3096  0F3A                     	;# 
  3097  0F3B                     	;# 
  3098  0F3C                     	;# 
  3099  0F3D                     	;# 
  3100  0F3E                     	;# 
  3101  0F3F                     	;# 
  3102  0F40                     	;# 
  3103  0F41                     	;# 
  3104  0F43                     	;# 
  3105  0F44                     	;# 
  3106  0F45                     	;# 
  3107  0F46                     	;# 
  3108  0F47                     	;# 
  3109  0F48                     	;# 
  3110  0F49                     	;# 
  3111  0F4A                     	;# 
  3112  0F4B                     	;# 
  3113  0F4C                     	;# 
  3114  0F4E                     	;# 
  3115  0F4F                     	;# 
  3116  0F50                     	;# 
  3117  0F51                     	;# 
  3118  0F52                     	;# 
  3119  0F53                     	;# 
  3120  0F54                     	;# 
  3121  0F55                     	;# 
  3122  0F56                     	;# 
  3123  0F57                     	;# 
  3124  0F65                     	;# 
  3125  0F68                     	;# 
  3126  0F69                     	;# 
  3127  0F6A                     	;# 
  3128  0F6B                     	;# 
  3129  0FE4                     	;# 
  3130  0FE5                     	;# 
  3131  0FE6                     	;# 
  3132  0FE7                     	;# 
  3133  0FE8                     	;# 
  3134  0FE9                     	;# 
  3135  0FEA                     	;# 
  3136  0FEB                     	;# 
  3137  0FED                     	;# 
  3138  0FEE                     	;# 
  3139  0FEF                     	;# 
  3140  0000                     	;# 
  3141  0001                     	;# 
  3142  0002                     	;# 
  3143  0003                     	;# 
  3144  0004                     	;# 
  3145  0005                     	;# 
  3146  0006                     	;# 
  3147  0007                     	;# 
  3148  0008                     	;# 
  3149  0009                     	;# 
  3150  000A                     	;# 
  3151  000B                     	;# 
  3152  000C                     	;# 
  3153  000D                     	;# 
  3154  000E                     	;# 
  3155  0010                     	;# 
  3156  0011                     	;# 
  3157  0012                     	;# 
  3158  0013                     	;# 
  3159  0016                     	;# 
  3160  0017                     	;# 
  3161  0018                     	;# 
  3162  001C                     	;# 
  3163  001C                     	;# 
  3164  001D                     	;# 
  3165  001D                     	;# 
  3166  001E                     	;# 
  3167  001F                     	;# 
  3168  008C                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  008E                     	;# 
  3173  008F                     	;# 
  3174  0090                     	;# 
  3175  0090                     	;# 
  3176  0091                     	;# 
  3177  0093                     	;# 
  3178  0094                     	;# 
  3179  0095                     	;# 
  3180  0096                     	;# 
  3181  0097                     	;# 
  3182  0098                     	;# 
  3183  0099                     	;# 
  3184  009A                     	;# 
  3185  009B                     	;# 
  3186  009C                     	;# 
  3187  009D                     	;# 
  3188  009E                     	;# 
  3189  010C                     	;# 
  3190  010D                     	;# 
  3191  010E                     	;# 
  3192  010E                     	;# 
  3193  010F                     	;# 
  3194  0110                     	;# 
  3195  0110                     	;# 
  3196  0111                     	;# 
  3197  0112                     	;# 
  3198  0112                     	;# 
  3199  0113                     	;# 
  3200  0114                     	;# 
  3201  0114                     	;# 
  3202  0115                     	;# 
  3203  0116                     	;# 
  3204  0116                     	;# 
  3205  0117                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  0196                     	;# 
  3239  0197                     	;# 
  3240  0198                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019B                     	;# 
  3244  019C                     	;# 
  3245  020C                     	;# 
  3246  020D                     	;# 
  3247  020E                     	;# 
  3248  020F                     	;# 
  3249  020F                     	;# 
  3250  0210                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0213                     	;# 
  3256  0214                     	;# 
  3257  0215                     	;# 
  3258  0215                     	;# 
  3259  0216                     	;# 
  3260  0216                     	;# 
  3261  0217                     	;# 
  3262  0217                     	;# 
  3263  0218                     	;# 
  3264  0219                     	;# 
  3265  021A                     	;# 
  3266  021B                     	;# 
  3267  021B                     	;# 
  3268  021C                     	;# 
  3269  021C                     	;# 
  3270  021D                     	;# 
  3271  021D                     	;# 
  3272  021E                     	;# 
  3273  021F                     	;# 
  3274  028C                     	;# 
  3275  028C                     	;# 
  3276  028D                     	;# 
  3277  028D                     	;# 
  3278  028E                     	;# 
  3279  028F                     	;# 
  3280  0290                     	;# 
  3281  0290                     	;# 
  3282  0291                     	;# 
  3283  0292                     	;# 
  3284  0292                     	;# 
  3285  0293                     	;# 
  3286  0293                     	;# 
  3287  0294                     	;# 
  3288  0295                     	;# 
  3289  0296                     	;# 
  3290  0296                     	;# 
  3291  0297                     	;# 
  3292  0298                     	;# 
  3293  0298                     	;# 
  3294  0299                     	;# 
  3295  0299                     	;# 
  3296  029A                     	;# 
  3297  029B                     	;# 
  3298  029C                     	;# 
  3299  029C                     	;# 
  3300  029D                     	;# 
  3301  030C                     	;# 
  3302  030C                     	;# 
  3303  030D                     	;# 
  3304  030E                     	;# 
  3305  030F                     	;# 
  3306  0310                     	;# 
  3307  0310                     	;# 
  3308  0311                     	;# 
  3309  0312                     	;# 
  3310  0313                     	;# 
  3311  0314                     	;# 
  3312  0314                     	;# 
  3313  0315                     	;# 
  3314  0316                     	;# 
  3315  0317                     	;# 
  3316  0318                     	;# 
  3317  0318                     	;# 
  3318  0319                     	;# 
  3319  031A                     	;# 
  3320  031B                     	;# 
  3321  031C                     	;# 
  3322  031C                     	;# 
  3323  031D                     	;# 
  3324  031E                     	;# 
  3325  031F                     	;# 
  3326  038C                     	;# 
  3327  038D                     	;# 
  3328  038E                     	;# 
  3329  0390                     	;# 
  3330  0391                     	;# 
  3331  0392                     	;# 
  3332  040C                     	;# 
  3333  040D                     	;# 
  3334  040E                     	;# 
  3335  040F                     	;# 
  3336  0410                     	;# 
  3337  0411                     	;# 
  3338  0416                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  0418                     	;# 
  3343  0419                     	;# 
  3344  041A                     	;# 
  3345  041A                     	;# 
  3346  041B                     	;# 
  3347  041C                     	;# 
  3348  041C                     	;# 
  3349  041D                     	;# 
  3350  041E                     	;# 
  3351  041F                     	;# 
  3352  048C                     	;# 
  3353  048C                     	;# 
  3354  048D                     	;# 
  3355  048E                     	;# 
  3356  048F                     	;# 
  3357  048F                     	;# 
  3358  0490                     	;# 
  3359  0491                     	;# 
  3360  0492                     	;# 
  3361  0492                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0495                     	;# 
  3366  0496                     	;# 
  3367  0497                     	;# 
  3368  0498                     	;# 
  3369  0499                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  050C                     	;# 
  3375  050C                     	;# 
  3376  050D                     	;# 
  3377  050E                     	;# 
  3378  050F                     	;# 
  3379  050F                     	;# 
  3380  0510                     	;# 
  3381  0511                     	;# 
  3382  0512                     	;# 
  3383  0512                     	;# 
  3384  0513                     	;# 
  3385  0514                     	;# 
  3386  0515                     	;# 
  3387  0515                     	;# 
  3388  0516                     	;# 
  3389  0517                     	;# 
  3390  0518                     	;# 
  3391  0519                     	;# 
  3392  051A                     	;# 
  3393  051B                     	;# 
  3394  051C                     	;# 
  3395  051D                     	;# 
  3396  058C                     	;# 
  3397  058C                     	;# 
  3398  058D                     	;# 
  3399  058E                     	;# 
  3400  058F                     	;# 
  3401  058F                     	;# 
  3402  0590                     	;# 
  3403  0591                     	;# 
  3404  0592                     	;# 
  3405  0593                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0616                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061B                     	;# 
  3421  061C                     	;# 
  3422  061D                     	;# 
  3423  061E                     	;# 
  3424  068C                     	;# 
  3425  068D                     	;# 
  3426  068E                     	;# 
  3427  068F                     	;# 
  3428  0690                     	;# 
  3429  0691                     	;# 
  3430  0692                     	;# 
  3431  0693                     	;# 
  3432  0694                     	;# 
  3433  070C                     	;# 
  3434  070D                     	;# 
  3435  070E                     	;# 
  3436  070F                     	;# 
  3437  0710                     	;# 
  3438  0711                     	;# 
  3439  0712                     	;# 
  3440  0713                     	;# 
  3441  0714                     	;# 
  3442  0716                     	;# 
  3443  0717                     	;# 
  3444  0718                     	;# 
  3445  0719                     	;# 
  3446  071A                     	;# 
  3447  071B                     	;# 
  3448  071C                     	;# 
  3449  071D                     	;# 
  3450  071E                     	;# 
  3451  0796                     	;# 
  3452  0797                     	;# 
  3453  0798                     	;# 
  3454  0799                     	;# 
  3455  079A                     	;# 
  3456  079B                     	;# 
  3457  080C                     	;# 
  3458  080D                     	;# 
  3459  080E                     	;# 
  3460  080F                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0813                     	;# 
  3465  0814                     	;# 
  3466  081A                     	;# 
  3467  081B                     	;# 
  3468  081C                     	;# 
  3469  081D                     	;# 
  3470  081E                     	;# 
  3471  081F                     	;# 
  3472  088C                     	;# 
  3473  088D                     	;# 
  3474  088E                     	;# 
  3475  088F                     	;# 
  3476  0890                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0895                     	;# 
  3481  0896                     	;# 
  3482  0897                     	;# 
  3483  0898                     	;# 
  3484  0899                     	;# 
  3485  089A                     	;# 
  3486  089B                     	;# 
  3487  090C                     	;# 
  3488  090E                     	;# 
  3489  090F                     	;# 
  3490  091F                     	;# 
  3491  091F                     	;# 
  3492  098F                     	;# 
  3493  098F                     	;# 
  3494  0990                     	;# 
  3495  0991                     	;# 
  3496  0992                     	;# 
  3497  0993                     	;# 
  3498  0994                     	;# 
  3499  0995                     	;# 
  3500  0996                     	;# 
  3501  0997                     	;# 
  3502  0E0F                     	;# 
  3503  0E10                     	;# 
  3504  0E11                     	;# 
  3505  0E12                     	;# 
  3506  0E13                     	;# 
  3507  0E14                     	;# 
  3508  0E15                     	;# 
  3509  0E16                     	;# 
  3510  0E17                     	;# 
  3511  0E18                     	;# 
  3512  0E19                     	;# 
  3513  0E1A                     	;# 
  3514  0E1B                     	;# 
  3515  0E1C                     	;# 
  3516  0E1D                     	;# 
  3517  0E1E                     	;# 
  3518  0E1F                     	;# 
  3519  0E20                     	;# 
  3520  0E21                     	;# 
  3521  0E22                     	;# 
  3522  0E23                     	;# 
  3523  0E24                     	;# 
  3524  0E25                     	;# 
  3525  0E26                     	;# 
  3526  0E27                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E30                     	;# 
  3536  0E31                     	;# 
  3537  0E32                     	;# 
  3538  0E33                     	;# 
  3539  0E34                     	;# 
  3540  0E35                     	;# 
  3541  0E36                     	;# 
  3542  0E37                     	;# 
  3543  0E8F                     	;# 
  3544  0E90                     	;# 
  3545  0E91                     	;# 
  3546  0E92                     	;# 
  3547  0E93                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E96                     	;# 
  3551  0E97                     	;# 
  3552  0E9C                     	;# 
  3553  0E9D                     	;# 
  3554  0E9E                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA9                     	;# 
  3561  0EAA                     	;# 
  3562  0EAB                     	;# 
  3563  0EAC                     	;# 
  3564  0EB1                     	;# 
  3565  0EB2                     	;# 
  3566  0EB3                     	;# 
  3567  0EB8                     	;# 
  3568  0EB9                     	;# 
  3569  0EBA                     	;# 
  3570  0EBB                     	;# 
  3571  0EBC                     	;# 
  3572  0EBD                     	;# 
  3573  0EBE                     	;# 
  3574  0EC3                     	;# 
  3575  0EC5                     	;# 
  3576  0EC6                     	;# 
  3577  0EC7                     	;# 
  3578  0EC8                     	;# 
  3579  0EC9                     	;# 
  3580  0ECA                     	;# 
  3581  0ECB                     	;# 
  3582  0ECC                     	;# 
  3583  0F10                     	;# 
  3584  0F11                     	;# 
  3585  0F12                     	;# 
  3586  0F13                     	;# 
  3587  0F14                     	;# 
  3588  0F15                     	;# 
  3589  0F16                     	;# 
  3590  0F17                     	;# 
  3591  0F18                     	;# 
  3592  0F19                     	;# 
  3593  0F1A                     	;# 
  3594  0F1B                     	;# 
  3595  0F1C                     	;# 
  3596  0F1D                     	;# 
  3597  0F1E                     	;# 
  3598  0F1F                     	;# 
  3599  0F20                     	;# 
  3600  0F21                     	;# 
  3601  0F22                     	;# 
  3602  0F23                     	;# 
  3603  0F24                     	;# 
  3604  0F25                     	;# 
  3605  0F26                     	;# 
  3606  0F27                     	;# 
  3607  0F38                     	;# 
  3608  0F39                     	;# 
  3609  0F3A                     	;# 
  3610  0F3B                     	;# 
  3611  0F3C                     	;# 
  3612  0F3D                     	;# 
  3613  0F3E                     	;# 
  3614  0F3F                     	;# 
  3615  0F40                     	;# 
  3616  0F41                     	;# 
  3617  0F43                     	;# 
  3618  0F44                     	;# 
  3619  0F45                     	;# 
  3620  0F46                     	;# 
  3621  0F47                     	;# 
  3622  0F48                     	;# 
  3623  0F49                     	;# 
  3624  0F4A                     	;# 
  3625  0F4B                     	;# 
  3626  0F4C                     	;# 
  3627  0F4E                     	;# 
  3628  0F4F                     	;# 
  3629  0F50                     	;# 
  3630  0F51                     	;# 
  3631  0F52                     	;# 
  3632  0F53                     	;# 
  3633  0F54                     	;# 
  3634  0F55                     	;# 
  3635  0F56                     	;# 
  3636  0F57                     	;# 
  3637  0F65                     	;# 
  3638  0F68                     	;# 
  3639  0F69                     	;# 
  3640  0F6A                     	;# 
  3641  0F6B                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0000                     	;# 
  3654  0001                     	;# 
  3655  0002                     	;# 
  3656  0003                     	;# 
  3657  0004                     	;# 
  3658  0005                     	;# 
  3659  0006                     	;# 
  3660  0007                     	;# 
  3661  0008                     	;# 
  3662  0009                     	;# 
  3663  000A                     	;# 
  3664  000B                     	;# 
  3665  000C                     	;# 
  3666  000D                     	;# 
  3667  000E                     	;# 
  3668  0010                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  001C                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008C                     	;# 
  3683  008D                     	;# 
  3684  008E                     	;# 
  3685  008E                     	;# 
  3686  008F                     	;# 
  3687  0090                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009C                     	;# 
  3700  009D                     	;# 
  3701  009E                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  010E                     	;# 
  3706  010F                     	;# 
  3707  0110                     	;# 
  3708  0110                     	;# 
  3709  0111                     	;# 
  3710  0112                     	;# 
  3711  0112                     	;# 
  3712  0113                     	;# 
  3713  0114                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0116                     	;# 
  3718  0117                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  018F                     	;# 
  3748  0190                     	;# 
  3749  0191                     	;# 
  3750  0192                     	;# 
  3751  0196                     	;# 
  3752  0197                     	;# 
  3753  0198                     	;# 
  3754  0199                     	;# 
  3755  019A                     	;# 
  3756  019B                     	;# 
  3757  019C                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  020F                     	;# 
  3762  020F                     	;# 
  3763  0210                     	;# 
  3764  0210                     	;# 
  3765  0211                     	;# 
  3766  0211                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0218                     	;# 
  3777  0219                     	;# 
  3778  021A                     	;# 
  3779  021B                     	;# 
  3780  021B                     	;# 
  3781  021C                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  028F                     	;# 
  3793  0290                     	;# 
  3794  0290                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0292                     	;# 
  3798  0293                     	;# 
  3799  0293                     	;# 
  3800  0294                     	;# 
  3801  0295                     	;# 
  3802  0296                     	;# 
  3803  0296                     	;# 
  3804  0297                     	;# 
  3805  0298                     	;# 
  3806  0298                     	;# 
  3807  0299                     	;# 
  3808  0299                     	;# 
  3809  029A                     	;# 
  3810  029B                     	;# 
  3811  029C                     	;# 
  3812  029C                     	;# 
  3813  029D                     	;# 
  3814  030C                     	;# 
  3815  030C                     	;# 
  3816  030D                     	;# 
  3817  030E                     	;# 
  3818  030F                     	;# 
  3819  0310                     	;# 
  3820  0310                     	;# 
  3821  0311                     	;# 
  3822  0312                     	;# 
  3823  0313                     	;# 
  3824  0314                     	;# 
  3825  0314                     	;# 
  3826  0315                     	;# 
  3827  0316                     	;# 
  3828  0317                     	;# 
  3829  0318                     	;# 
  3830  0318                     	;# 
  3831  0319                     	;# 
  3832  031A                     	;# 
  3833  031B                     	;# 
  3834  031C                     	;# 
  3835  031C                     	;# 
  3836  031D                     	;# 
  3837  031E                     	;# 
  3838  031F                     	;# 
  3839  038C                     	;# 
  3840  038D                     	;# 
  3841  038E                     	;# 
  3842  0390                     	;# 
  3843  0391                     	;# 
  3844  0392                     	;# 
  3845  040C                     	;# 
  3846  040D                     	;# 
  3847  040E                     	;# 
  3848  040F                     	;# 
  3849  0410                     	;# 
  3850  0411                     	;# 
  3851  0416                     	;# 
  3852  0416                     	;# 
  3853  0417                     	;# 
  3854  0418                     	;# 
  3855  0418                     	;# 
  3856  0419                     	;# 
  3857  041A                     	;# 
  3858  041A                     	;# 
  3859  041B                     	;# 
  3860  041C                     	;# 
  3861  041C                     	;# 
  3862  041D                     	;# 
  3863  041E                     	;# 
  3864  041F                     	;# 
  3865  048C                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  048F                     	;# 
  3870  048F                     	;# 
  3871  0490                     	;# 
  3872  0491                     	;# 
  3873  0492                     	;# 
  3874  0492                     	;# 
  3875  0493                     	;# 
  3876  0494                     	;# 
  3877  0495                     	;# 
  3878  0495                     	;# 
  3879  0496                     	;# 
  3880  0497                     	;# 
  3881  0498                     	;# 
  3882  0499                     	;# 
  3883  049A                     	;# 
  3884  049B                     	;# 
  3885  049C                     	;# 
  3886  049D                     	;# 
  3887  050C                     	;# 
  3888  050C                     	;# 
  3889  050D                     	;# 
  3890  050E                     	;# 
  3891  050F                     	;# 
  3892  050F                     	;# 
  3893  0510                     	;# 
  3894  0511                     	;# 
  3895  0512                     	;# 
  3896  0512                     	;# 
  3897  0513                     	;# 
  3898  0514                     	;# 
  3899  0515                     	;# 
  3900  0515                     	;# 
  3901  0516                     	;# 
  3902  0517                     	;# 
  3903  0518                     	;# 
  3904  0519                     	;# 
  3905  051A                     	;# 
  3906  051B                     	;# 
  3907  051C                     	;# 
  3908  051D                     	;# 
  3909  058C                     	;# 
  3910  058C                     	;# 
  3911  058D                     	;# 
  3912  058E                     	;# 
  3913  058F                     	;# 
  3914  058F                     	;# 
  3915  0590                     	;# 
  3916  0591                     	;# 
  3917  0592                     	;# 
  3918  0593                     	;# 
  3919  060C                     	;# 
  3920  060D                     	;# 
  3921  060E                     	;# 
  3922  060F                     	;# 
  3923  0610                     	;# 
  3924  0611                     	;# 
  3925  0612                     	;# 
  3926  0613                     	;# 
  3927  0614                     	;# 
  3928  0616                     	;# 
  3929  0617                     	;# 
  3930  0618                     	;# 
  3931  0619                     	;# 
  3932  061A                     	;# 
  3933  061B                     	;# 
  3934  061C                     	;# 
  3935  061D                     	;# 
  3936  061E                     	;# 
  3937  068C                     	;# 
  3938  068D                     	;# 
  3939  068E                     	;# 
  3940  068F                     	;# 
  3941  0690                     	;# 
  3942  0691                     	;# 
  3943  0692                     	;# 
  3944  0693                     	;# 
  3945  0694                     	;# 
  3946  070C                     	;# 
  3947  070D                     	;# 
  3948  070E                     	;# 
  3949  070F                     	;# 
  3950  0710                     	;# 
  3951  0711                     	;# 
  3952  0712                     	;# 
  3953  0713                     	;# 
  3954  0714                     	;# 
  3955  0716                     	;# 
  3956  0717                     	;# 
  3957  0718                     	;# 
  3958  0719                     	;# 
  3959  071A                     	;# 
  3960  071B                     	;# 
  3961  071C                     	;# 
  3962  071D                     	;# 
  3963  071E                     	;# 
  3964  0796                     	;# 
  3965  0797                     	;# 
  3966  0798                     	;# 
  3967  0799                     	;# 
  3968  079A                     	;# 
  3969  079B                     	;# 
  3970  080C                     	;# 
  3971  080D                     	;# 
  3972  080E                     	;# 
  3973  080F                     	;# 
  3974  0810                     	;# 
  3975  0811                     	;# 
  3976  0812                     	;# 
  3977  0813                     	;# 
  3978  0814                     	;# 
  3979  081A                     	;# 
  3980  081B                     	;# 
  3981  081C                     	;# 
  3982  081D                     	;# 
  3983  081E                     	;# 
  3984  081F                     	;# 
  3985  088C                     	;# 
  3986  088D                     	;# 
  3987  088E                     	;# 
  3988  088F                     	;# 
  3989  0890                     	;# 
  3990  0891                     	;# 
  3991  0892                     	;# 
  3992  0893                     	;# 
  3993  0895                     	;# 
  3994  0896                     	;# 
  3995  0897                     	;# 
  3996  0898                     	;# 
  3997  0899                     	;# 
  3998  089A                     	;# 
  3999  089B                     	;# 
  4000  090C                     	;# 
  4001  090E                     	;# 
  4002  090F                     	;# 
  4003  091F                     	;# 
  4004  091F                     	;# 
  4005  098F                     	;# 
  4006  098F                     	;# 
  4007  0990                     	;# 
  4008  0991                     	;# 
  4009  0992                     	;# 
  4010  0993                     	;# 
  4011  0994                     	;# 
  4012  0995                     	;# 
  4013  0996                     	;# 
  4014  0997                     	;# 
  4015  0E0F                     	;# 
  4016  0E10                     	;# 
  4017  0E11                     	;# 
  4018  0E12                     	;# 
  4019  0E13                     	;# 
  4020  0E14                     	;# 
  4021  0E15                     	;# 
  4022  0E16                     	;# 
  4023  0E17                     	;# 
  4024  0E18                     	;# 
  4025  0E19                     	;# 
  4026  0E1A                     	;# 
  4027  0E1B                     	;# 
  4028  0E1C                     	;# 
  4029  0E1D                     	;# 
  4030  0E1E                     	;# 
  4031  0E1F                     	;# 
  4032  0E20                     	;# 
  4033  0E21                     	;# 
  4034  0E22                     	;# 
  4035  0E23                     	;# 
  4036  0E24                     	;# 
  4037  0E25                     	;# 
  4038  0E26                     	;# 
  4039  0E27                     	;# 
  4040  0E28                     	;# 
  4041  0E29                     	;# 
  4042  0E2A                     	;# 
  4043  0E2B                     	;# 
  4044  0E2C                     	;# 
  4045  0E2D                     	;# 
  4046  0E2E                     	;# 
  4047  0E2F                     	;# 
  4048  0E30                     	;# 
  4049  0E31                     	;# 
  4050  0E32                     	;# 
  4051  0E33                     	;# 
  4052  0E34                     	;# 
  4053  0E35                     	;# 
  4054  0E36                     	;# 
  4055  0E37                     	;# 
  4056  0E8F                     	;# 
  4057  0E90                     	;# 
  4058  0E91                     	;# 
  4059  0E92                     	;# 
  4060  0E93                     	;# 
  4061  0E94                     	;# 
  4062  0E95                     	;# 
  4063  0E96                     	;# 
  4064  0E97                     	;# 
  4065  0E9C                     	;# 
  4066  0E9D                     	;# 
  4067  0E9E                     	;# 
  4068  0EA1                     	;# 
  4069  0EA2                     	;# 
  4070  0EA3                     	;# 
  4071  0EA4                     	;# 
  4072  0EA5                     	;# 
  4073  0EA9                     	;# 
  4074  0EAA                     	;# 
  4075  0EAB                     	;# 
  4076  0EAC                     	;# 
  4077  0EB1                     	;# 
  4078  0EB2                     	;# 
  4079  0EB3                     	;# 
  4080  0EB8                     	;# 
  4081  0EB9                     	;# 
  4082  0EBA                     	;# 
  4083  0EBB                     	;# 
  4084  0EBC                     	;# 
  4085  0EBD                     	;# 
  4086  0EBE                     	;# 
  4087  0EC3                     	;# 
  4088  0EC5                     	;# 
  4089  0EC6                     	;# 
  4090  0EC7                     	;# 
  4091  0EC8                     	;# 
  4092  0EC9                     	;# 
  4093  0ECA                     	;# 
  4094  0ECB                     	;# 
  4095  0ECC                     	;# 
  4096  0F10                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F22                     	;# 
  4115  0F23                     	;# 
  4116  0F24                     	;# 
  4117  0F25                     	;# 
  4118  0F26                     	;# 
  4119  0F27                     	;# 
  4120  0F38                     	;# 
  4121  0F39                     	;# 
  4122  0F3A                     	;# 
  4123  0F3B                     	;# 
  4124  0F3C                     	;# 
  4125  0F3D                     	;# 
  4126  0F3E                     	;# 
  4127  0F3F                     	;# 
  4128  0F40                     	;# 
  4129  0F41                     	;# 
  4130  0F43                     	;# 
  4131  0F44                     	;# 
  4132  0F45                     	;# 
  4133  0F46                     	;# 
  4134  0F47                     	;# 
  4135  0F48                     	;# 
  4136  0F49                     	;# 
  4137  0F4A                     	;# 
  4138  0F4B                     	;# 
  4139  0F4C                     	;# 
  4140  0F4E                     	;# 
  4141  0F4F                     	;# 
  4142  0F50                     	;# 
  4143  0F51                     	;# 
  4144  0F52                     	;# 
  4145  0F53                     	;# 
  4146  0F54                     	;# 
  4147  0F55                     	;# 
  4148  0F56                     	;# 
  4149  0F57                     	;# 
  4150  0F65                     	;# 
  4151  0F68                     	;# 
  4152  0F69                     	;# 
  4153  0F6A                     	;# 
  4154  0F6B                     	;# 
  4155  0FE4                     	;# 
  4156  0FE5                     	;# 
  4157  0FE6                     	;# 
  4158  0FE7                     	;# 
  4159  0FE8                     	;# 
  4160  0FE9                     	;# 
  4161  0FEA                     	;# 
  4162  0FEB                     	;# 
  4163  0FED                     	;# 
  4164  0FEE                     	;# 
  4165  0FEF                     	;# 
  4166  0000                     	;# 
  4167  0001                     	;# 
  4168  0002                     	;# 
  4169  0003                     	;# 
  4170  0004                     	;# 
  4171  0005                     	;# 
  4172  0006                     	;# 
  4173  0007                     	;# 
  4174  0008                     	;# 
  4175  0009                     	;# 
  4176  000A                     	;# 
  4177  000B                     	;# 
  4178  000C                     	;# 
  4179  000D                     	;# 
  4180  000E                     	;# 
  4181  0010                     	;# 
  4182  0011                     	;# 
  4183  0012                     	;# 
  4184  0013                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  001C                     	;# 
  4189  001C                     	;# 
  4190  001D                     	;# 
  4191  001D                     	;# 
  4192  001E                     	;# 
  4193  001F                     	;# 
  4194  008C                     	;# 
  4195  008C                     	;# 
  4196  008D                     	;# 
  4197  008E                     	;# 
  4198  008E                     	;# 
  4199  008F                     	;# 
  4200  0090                     	;# 
  4201  0090                     	;# 
  4202  0091                     	;# 
  4203  0093                     	;# 
  4204  0094                     	;# 
  4205  0095                     	;# 
  4206  0096                     	;# 
  4207  0097                     	;# 
  4208  0098                     	;# 
  4209  0099                     	;# 
  4210  009A                     	;# 
  4211  009B                     	;# 
  4212  009C                     	;# 
  4213  009D                     	;# 
  4214  009E                     	;# 
  4215  010C                     	;# 
  4216  010D                     	;# 
  4217  010E                     	;# 
  4218  010E                     	;# 
  4219  010F                     	;# 
  4220  0110                     	;# 
  4221  0110                     	;# 
  4222  0111                     	;# 
  4223  0112                     	;# 
  4224  0112                     	;# 
  4225  0113                     	;# 
  4226  0114                     	;# 
  4227  0114                     	;# 
  4228  0115                     	;# 
  4229  0116                     	;# 
  4230  0116                     	;# 
  4231  0117                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  018C                     	;# 
  4258  018D                     	;# 
  4259  018E                     	;# 
  4260  018F                     	;# 
  4261  0190                     	;# 
  4262  0191                     	;# 
  4263  0192                     	;# 
  4264  0196                     	;# 
  4265  0197                     	;# 
  4266  0198                     	;# 
  4267  0199                     	;# 
  4268  019A                     	;# 
  4269  019B                     	;# 
  4270  019C                     	;# 
  4271  020C                     	;# 
  4272  020D                     	;# 
  4273  020E                     	;# 
  4274  020F                     	;# 
  4275  020F                     	;# 
  4276  0210                     	;# 
  4277  0210                     	;# 
  4278  0211                     	;# 
  4279  0211                     	;# 
  4280  0212                     	;# 
  4281  0213                     	;# 
  4282  0214                     	;# 
  4283  0215                     	;# 
  4284  0215                     	;# 
  4285  0216                     	;# 
  4286  0216                     	;# 
  4287  0217                     	;# 
  4288  0217                     	;# 
  4289  0218                     	;# 
  4290  0219                     	;# 
  4291  021A                     	;# 
  4292  021B                     	;# 
  4293  021B                     	;# 
  4294  021C                     	;# 
  4295  021C                     	;# 
  4296  021D                     	;# 
  4297  021D                     	;# 
  4298  021E                     	;# 
  4299  021F                     	;# 
  4300  028C                     	;# 
  4301  028C                     	;# 
  4302  028D                     	;# 
  4303  028D                     	;# 
  4304  028E                     	;# 
  4305  028F                     	;# 
  4306  0290                     	;# 
  4307  0290                     	;# 
  4308  0291                     	;# 
  4309  0292                     	;# 
  4310  0292                     	;# 
  4311  0293                     	;# 
  4312  0293                     	;# 
  4313  0294                     	;# 
  4314  0295                     	;# 
  4315  0296                     	;# 
  4316  0296                     	;# 
  4317  0297                     	;# 
  4318  0298                     	;# 
  4319  0298                     	;# 
  4320  0299                     	;# 
  4321  0299                     	;# 
  4322  029A                     	;# 
  4323  029B                     	;# 
  4324  029C                     	;# 
  4325  029C                     	;# 
  4326  029D                     	;# 
  4327  030C                     	;# 
  4328  030C                     	;# 
  4329  030D                     	;# 
  4330  030E                     	;# 
  4331  030F                     	;# 
  4332  0310                     	;# 
  4333  0310                     	;# 
  4334  0311                     	;# 
  4335  0312                     	;# 
  4336  0313                     	;# 
  4337  0314                     	;# 
  4338  0314                     	;# 
  4339  0315                     	;# 
  4340  0316                     	;# 
  4341  0317                     	;# 
  4342  0318                     	;# 
  4343  0318                     	;# 
  4344  0319                     	;# 
  4345  031A                     	;# 
  4346  031B                     	;# 
  4347  031C                     	;# 
  4348  031C                     	;# 
  4349  031D                     	;# 
  4350  031E                     	;# 
  4351  031F                     	;# 
  4352  038C                     	;# 
  4353  038D                     	;# 
  4354  038E                     	;# 
  4355  0390                     	;# 
  4356  0391                     	;# 
  4357  0392                     	;# 
  4358  040C                     	;# 
  4359  040D                     	;# 
  4360  040E                     	;# 
  4361  040F                     	;# 
  4362  0410                     	;# 
  4363  0411                     	;# 
  4364  0416                     	;# 
  4365  0416                     	;# 
  4366  0417                     	;# 
  4367  0418                     	;# 
  4368  0418                     	;# 
  4369  0419                     	;# 
  4370  041A                     	;# 
  4371  041A                     	;# 
  4372  041B                     	;# 
  4373  041C                     	;# 
  4374  041C                     	;# 
  4375  041D                     	;# 
  4376  041E                     	;# 
  4377  041F                     	;# 
  4378  048C                     	;# 
  4379  048C                     	;# 
  4380  048D                     	;# 
  4381  048E                     	;# 
  4382  048F                     	;# 
  4383  048F                     	;# 
  4384  0490                     	;# 
  4385  0491                     	;# 
  4386  0492                     	;# 
  4387  0492                     	;# 
  4388  0493                     	;# 
  4389  0494                     	;# 
  4390  0495                     	;# 
  4391  0495                     	;# 
  4392  0496                     	;# 
  4393  0497                     	;# 
  4394  0498                     	;# 
  4395  0499                     	;# 
  4396  049A                     	;# 
  4397  049B                     	;# 
  4398  049C                     	;# 
  4399  049D                     	;# 
  4400  050C                     	;# 
  4401  050C                     	;# 
  4402  050D                     	;# 
  4403  050E                     	;# 
  4404  050F                     	;# 
  4405  050F                     	;# 
  4406  0510                     	;# 
  4407  0511                     	;# 
  4408  0512                     	;# 
  4409  0512                     	;# 
  4410  0513                     	;# 
  4411  0514                     	;# 
  4412  0515                     	;# 
  4413  0515                     	;# 
  4414  0516                     	;# 
  4415  0517                     	;# 
  4416  0518                     	;# 
  4417  0519                     	;# 
  4418  051A                     	;# 
  4419  051B                     	;# 
  4420  051C                     	;# 
  4421  051D                     	;# 
  4422  058C                     	;# 
  4423  058C                     	;# 
  4424  058D                     	;# 
  4425  058E                     	;# 
  4426  058F                     	;# 
  4427  058F                     	;# 
  4428  0590                     	;# 
  4429  0591                     	;# 
  4430  0592                     	;# 
  4431  0593                     	;# 
  4432  060C                     	;# 
  4433  060D                     	;# 
  4434  060E                     	;# 
  4435  060F                     	;# 
  4436  0610                     	;# 
  4437  0611                     	;# 
  4438  0612                     	;# 
  4439  0613                     	;# 
  4440  0614                     	;# 
  4441  0616                     	;# 
  4442  0617                     	;# 
  4443  0618                     	;# 
  4444  0619                     	;# 
  4445  061A                     	;# 
  4446  061B                     	;# 
  4447  061C                     	;# 
  4448  061D                     	;# 
  4449  061E                     	;# 
  4450  068C                     	;# 
  4451  068D                     	;# 
  4452  068E                     	;# 
  4453  068F                     	;# 
  4454  0690                     	;# 
  4455  0691                     	;# 
  4456  0692                     	;# 
  4457  0693                     	;# 
  4458  0694                     	;# 
  4459  070C                     	;# 
  4460  070D                     	;# 
  4461  070E                     	;# 
  4462  070F                     	;# 
  4463  0710                     	;# 
  4464  0711                     	;# 
  4465  0712                     	;# 
  4466  0713                     	;# 
  4467  0714                     	;# 
  4468  0716                     	;# 
  4469  0717                     	;# 
  4470  0718                     	;# 
  4471  0719                     	;# 
  4472  071A                     	;# 
  4473  071B                     	;# 
  4474  071C                     	;# 
  4475  071D                     	;# 
  4476  071E                     	;# 
  4477  0796                     	;# 
  4478  0797                     	;# 
  4479  0798                     	;# 
  4480  0799                     	;# 
  4481  079A                     	;# 
  4482  079B                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081B                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  091F                     	;# 
  4518  098F                     	;# 
  4519  098F                     	;# 
  4520  0990                     	;# 
  4521  0991                     	;# 
  4522  0992                     	;# 
  4523  0993                     	;# 
  4524  0994                     	;# 
  4525  0995                     	;# 
  4526  0996                     	;# 
  4527  0997                     	;# 
  4528  0E0F                     	;# 
  4529  0E10                     	;# 
  4530  0E11                     	;# 
  4531  0E12                     	;# 
  4532  0E13                     	;# 
  4533  0E14                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E17                     	;# 
  4537  0E18                     	;# 
  4538  0E19                     	;# 
  4539  0E1A                     	;# 
  4540  0E1B                     	;# 
  4541  0E1C                     	;# 
  4542  0E1D                     	;# 
  4543  0E1E                     	;# 
  4544  0E1F                     	;# 
  4545  0E20                     	;# 
  4546  0E21                     	;# 
  4547  0E22                     	;# 
  4548  0E23                     	;# 
  4549  0E24                     	;# 
  4550  0E25                     	;# 
  4551  0E26                     	;# 
  4552  0E27                     	;# 
  4553  0E28                     	;# 
  4554  0E29                     	;# 
  4555  0E2A                     	;# 
  4556  0E2B                     	;# 
  4557  0E2C                     	;# 
  4558  0E2D                     	;# 
  4559  0E2E                     	;# 
  4560  0E2F                     	;# 
  4561  0E30                     	;# 
  4562  0E31                     	;# 
  4563  0E32                     	;# 
  4564  0E33                     	;# 
  4565  0E34                     	;# 
  4566  0E35                     	;# 
  4567  0E36                     	;# 
  4568  0E37                     	;# 
  4569  0E8F                     	;# 
  4570  0E90                     	;# 
  4571  0E91                     	;# 
  4572  0E92                     	;# 
  4573  0E93                     	;# 
  4574  0E94                     	;# 
  4575  0E95                     	;# 
  4576  0E96                     	;# 
  4577  0E97                     	;# 
  4578  0E9C                     	;# 
  4579  0E9D                     	;# 
  4580  0E9E                     	;# 
  4581  0EA1                     	;# 
  4582  0EA2                     	;# 
  4583  0EA3                     	;# 
  4584  0EA4                     	;# 
  4585  0EA5                     	;# 
  4586  0EA9                     	;# 
  4587  0EAA                     	;# 
  4588  0EAB                     	;# 
  4589  0EAC                     	;# 
  4590  0EB1                     	;# 
  4591  0EB2                     	;# 
  4592  0EB3                     	;# 
  4593  0EB8                     	;# 
  4594  0EB9                     	;# 
  4595  0EBA                     	;# 
  4596  0EBB                     	;# 
  4597  0EBC                     	;# 
  4598  0EBD                     	;# 
  4599  0EBE                     	;# 
  4600  0EC3                     	;# 
  4601  0EC5                     	;# 
  4602  0EC6                     	;# 
  4603  0EC7                     	;# 
  4604  0EC8                     	;# 
  4605  0EC9                     	;# 
  4606  0ECA                     	;# 
  4607  0ECB                     	;# 
  4608  0ECC                     	;# 
  4609  0F10                     	;# 
  4610  0F11                     	;# 
  4611  0F12                     	;# 
  4612  0F13                     	;# 
  4613  0F14                     	;# 
  4614  0F15                     	;# 
  4615  0F16                     	;# 
  4616  0F17                     	;# 
  4617  0F18                     	;# 
  4618  0F19                     	;# 
  4619  0F1A                     	;# 
  4620  0F1B                     	;# 
  4621  0F1C                     	;# 
  4622  0F1D                     	;# 
  4623  0F1E                     	;# 
  4624  0F1F                     	;# 
  4625  0F20                     	;# 
  4626  0F21                     	;# 
  4627  0F22                     	;# 
  4628  0F23                     	;# 
  4629  0F24                     	;# 
  4630  0F25                     	;# 
  4631  0F26                     	;# 
  4632  0F27                     	;# 
  4633  0F38                     	;# 
  4634  0F39                     	;# 
  4635  0F3A                     	;# 
  4636  0F3B                     	;# 
  4637  0F3C                     	;# 
  4638  0F3D                     	;# 
  4639  0F3E                     	;# 
  4640  0F3F                     	;# 
  4641  0F40                     	;# 
  4642  0F41                     	;# 
  4643  0F43                     	;# 
  4644  0F44                     	;# 
  4645  0F45                     	;# 
  4646  0F46                     	;# 
  4647  0F47                     	;# 
  4648  0F48                     	;# 
  4649  0F49                     	;# 
  4650  0F4A                     	;# 
  4651  0F4B                     	;# 
  4652  0F4C                     	;# 
  4653  0F4E                     	;# 
  4654  0F4F                     	;# 
  4655  0F50                     	;# 
  4656  0F51                     	;# 
  4657  0F52                     	;# 
  4658  0F53                     	;# 
  4659  0F54                     	;# 
  4660  0F55                     	;# 
  4661  0F56                     	;# 
  4662  0F57                     	;# 
  4663  0F65                     	;# 
  4664  0F68                     	;# 
  4665  0F69                     	;# 
  4666  0F6A                     	;# 
  4667  0F6B                     	;# 
  4668  0FE4                     	;# 
  4669  0FE5                     	;# 
  4670  0FE6                     	;# 
  4671  0FE7                     	;# 
  4672  0FE8                     	;# 
  4673  0FE9                     	;# 
  4674  0FEA                     	;# 
  4675  0FEB                     	;# 
  4676  0FED                     	;# 
  4677  0FEE                     	;# 
  4678  0FEF                     	;# 
  4679  0000                     	;# 
  4680  0001                     	;# 
  4681  0002                     	;# 
  4682  0003                     	;# 
  4683  0004                     	;# 
  4684  0005                     	;# 
  4685  0006                     	;# 
  4686  0007                     	;# 
  4687  0008                     	;# 
  4688  0009                     	;# 
  4689  000A                     	;# 
  4690  000B                     	;# 
  4691  000C                     	;# 
  4692  000D                     	;# 
  4693  000E                     	;# 
  4694  0010                     	;# 
  4695  0011                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0016                     	;# 
  4699  0017                     	;# 
  4700  0018                     	;# 
  4701  001C                     	;# 
  4702  001C                     	;# 
  4703  001D                     	;# 
  4704  001D                     	;# 
  4705  001E                     	;# 
  4706  001F                     	;# 
  4707  008C                     	;# 
  4708  008C                     	;# 
  4709  008D                     	;# 
  4710  008E                     	;# 
  4711  008E                     	;# 
  4712  008F                     	;# 
  4713  0090                     	;# 
  4714  0090                     	;# 
  4715  0091                     	;# 
  4716  0093                     	;# 
  4717  0094                     	;# 
  4718  0095                     	;# 
  4719  0096                     	;# 
  4720  0097                     	;# 
  4721  0098                     	;# 
  4722  0099                     	;# 
  4723  009A                     	;# 
  4724  009B                     	;# 
  4725  009C                     	;# 
  4726  009D                     	;# 
  4727  009E                     	;# 
  4728  010C                     	;# 
  4729  010D                     	;# 
  4730  010E                     	;# 
  4731  010E                     	;# 
  4732  010F                     	;# 
  4733  0110                     	;# 
  4734  0110                     	;# 
  4735  0111                     	;# 
  4736  0112                     	;# 
  4737  0112                     	;# 
  4738  0113                     	;# 
  4739  0114                     	;# 
  4740  0114                     	;# 
  4741  0115                     	;# 
  4742  0116                     	;# 
  4743  0116                     	;# 
  4744  0117                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  018F                     	;# 
  4774  0190                     	;# 
  4775  0191                     	;# 
  4776  0192                     	;# 
  4777  0196                     	;# 
  4778  0197                     	;# 
  4779  0198                     	;# 
  4780  0199                     	;# 
  4781  019A                     	;# 
  4782  019B                     	;# 
  4783  019C                     	;# 
  4784  020C                     	;# 
  4785  020D                     	;# 
  4786  020E                     	;# 
  4787  020F                     	;# 
  4788  020F                     	;# 
  4789  0210                     	;# 
  4790  0210                     	;# 
  4791  0211                     	;# 
  4792  0211                     	;# 
  4793  0212                     	;# 
  4794  0213                     	;# 
  4795  0214                     	;# 
  4796  0215                     	;# 
  4797  0215                     	;# 
  4798  0216                     	;# 
  4799  0216                     	;# 
  4800  0217                     	;# 
  4801  0217                     	;# 
  4802  0218                     	;# 
  4803  0219                     	;# 
  4804  021A                     	;# 
  4805  021B                     	;# 
  4806  021B                     	;# 
  4807  021C                     	;# 
  4808  021C                     	;# 
  4809  021D                     	;# 
  4810  021D                     	;# 
  4811  021E                     	;# 
  4812  021F                     	;# 
  4813  028C                     	;# 
  4814  028C                     	;# 
  4815  028D                     	;# 
  4816  028D                     	;# 
  4817  028E                     	;# 
  4818  028F                     	;# 
  4819  0290                     	;# 
  4820  0290                     	;# 
  4821  0291                     	;# 
  4822  0292                     	;# 
  4823  0292                     	;# 
  4824  0293                     	;# 
  4825  0293                     	;# 
  4826  0294                     	;# 
  4827  0295                     	;# 
  4828  0296                     	;# 
  4829  0296                     	;# 
  4830  0297                     	;# 
  4831  0298                     	;# 
  4832  0298                     	;# 
  4833  0299                     	;# 
  4834  0299                     	;# 
  4835  029A                     	;# 
  4836  029B                     	;# 
  4837  029C                     	;# 
  4838  029C                     	;# 
  4839  029D                     	;# 
  4840  030C                     	;# 
  4841  030C                     	;# 
  4842  030D                     	;# 
  4843  030E                     	;# 
  4844  030F                     	;# 
  4845  0310                     	;# 
  4846  0310                     	;# 
  4847  0311                     	;# 
  4848  0312                     	;# 
  4849  0313                     	;# 
  4850  0314                     	;# 
  4851  0314                     	;# 
  4852  0315                     	;# 
  4853  0316                     	;# 
  4854  0317                     	;# 
  4855  0318                     	;# 
  4856  0318                     	;# 
  4857  0319                     	;# 
  4858  031A                     	;# 
  4859  031B                     	;# 
  4860  031C                     	;# 
  4861  031C                     	;# 
  4862  031D                     	;# 
  4863  031E                     	;# 
  4864  031F                     	;# 
  4865  038C                     	;# 
  4866  038D                     	;# 
  4867  038E                     	;# 
  4868  0390                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  040C                     	;# 
  4872  040D                     	;# 
  4873  040E                     	;# 
  4874  040F                     	;# 
  4875  0410                     	;# 
  4876  0411                     	;# 
  4877  0416                     	;# 
  4878  0416                     	;# 
  4879  0417                     	;# 
  4880  0418                     	;# 
  4881  0418                     	;# 
  4882  0419                     	;# 
  4883  041A                     	;# 
  4884  041A                     	;# 
  4885  041B                     	;# 
  4886  041C                     	;# 
  4887  041C                     	;# 
  4888  041D                     	;# 
  4889  041E                     	;# 
  4890  041F                     	;# 
  4891  048C                     	;# 
  4892  048C                     	;# 
  4893  048D                     	;# 
  4894  048E                     	;# 
  4895  048F                     	;# 
  4896  048F                     	;# 
  4897  0490                     	;# 
  4898  0491                     	;# 
  4899  0492                     	;# 
  4900  0492                     	;# 
  4901  0493                     	;# 
  4902  0494                     	;# 
  4903  0495                     	;# 
  4904  0495                     	;# 
  4905  0496                     	;# 
  4906  0497                     	;# 
  4907  0498                     	;# 
  4908  0499                     	;# 
  4909  049A                     	;# 
  4910  049B                     	;# 
  4911  049C                     	;# 
  4912  049D                     	;# 
  4913  050C                     	;# 
  4914  050C                     	;# 
  4915  050D                     	;# 
  4916  050E                     	;# 
  4917  050F                     	;# 
  4918  050F                     	;# 
  4919  0510                     	;# 
  4920  0511                     	;# 
  4921  0512                     	;# 
  4922  0512                     	;# 
  4923  0513                     	;# 
  4924  0514                     	;# 
  4925  0515                     	;# 
  4926  0515                     	;# 
  4927  0516                     	;# 
  4928  0517                     	;# 
  4929  0518                     	;# 
  4930  0519                     	;# 
  4931  051A                     	;# 
  4932  051B                     	;# 
  4933  051C                     	;# 
  4934  051D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  060C                     	;# 
  4946  060D                     	;# 
  4947  060E                     	;# 
  4948  060F                     	;# 
  4949  0610                     	;# 
  4950  0611                     	;# 
  4951  0612                     	;# 
  4952  0613                     	;# 
  4953  0614                     	;# 
  4954  0616                     	;# 
  4955  0617                     	;# 
  4956  0618                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061D                     	;# 
  4962  061E                     	;# 
  4963  068C                     	;# 
  4964  068D                     	;# 
  4965  068E                     	;# 
  4966  068F                     	;# 
  4967  0690                     	;# 
  4968  0691                     	;# 
  4969  0692                     	;# 
  4970  0693                     	;# 
  4971  0694                     	;# 
  4972  070C                     	;# 
  4973  070D                     	;# 
  4974  070E                     	;# 
  4975  070F                     	;# 
  4976  0710                     	;# 
  4977  0711                     	;# 
  4978  0712                     	;# 
  4979  0713                     	;# 
  4980  0714                     	;# 
  4981  0716                     	;# 
  4982  0717                     	;# 
  4983  0718                     	;# 
  4984  0719                     	;# 
  4985  071A                     	;# 
  4986  071B                     	;# 
  4987  071C                     	;# 
  4988  071D                     	;# 
  4989  071E                     	;# 
  4990  0796                     	;# 
  4991  0797                     	;# 
  4992  0798                     	;# 
  4993  0799                     	;# 
  4994  079A                     	;# 
  4995  079B                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0812                     	;# 
  5003  0813                     	;# 
  5004  0814                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  0E0F                     	;# 
  5042  0E10                     	;# 
  5043  0E11                     	;# 
  5044  0E12                     	;# 
  5045  0E13                     	;# 
  5046  0E14                     	;# 
  5047  0E15                     	;# 
  5048  0E16                     	;# 
  5049  0E17                     	;# 
  5050  0E18                     	;# 
  5051  0E19                     	;# 
  5052  0E1A                     	;# 
  5053  0E1B                     	;# 
  5054  0E1C                     	;# 
  5055  0E1D                     	;# 
  5056  0E1E                     	;# 
  5057  0E1F                     	;# 
  5058  0E20                     	;# 
  5059  0E21                     	;# 
  5060  0E22                     	;# 
  5061  0E23                     	;# 
  5062  0E24                     	;# 
  5063  0E25                     	;# 
  5064  0E26                     	;# 
  5065  0E27                     	;# 
  5066  0E28                     	;# 
  5067  0E29                     	;# 
  5068  0E2A                     	;# 
  5069  0E2B                     	;# 
  5070  0E2C                     	;# 
  5071  0E2D                     	;# 
  5072  0E2E                     	;# 
  5073  0E2F                     	;# 
  5074  0E30                     	;# 
  5075  0E31                     	;# 
  5076  0E32                     	;# 
  5077  0E33                     	;# 
  5078  0E34                     	;# 
  5079  0E35                     	;# 
  5080  0E36                     	;# 
  5081  0E37                     	;# 
  5082  0E8F                     	;# 
  5083  0E90                     	;# 
  5084  0E91                     	;# 
  5085  0E92                     	;# 
  5086  0E93                     	;# 
  5087  0E94                     	;# 
  5088  0E95                     	;# 
  5089  0E96                     	;# 
  5090  0E97                     	;# 
  5091  0E9C                     	;# 
  5092  0E9D                     	;# 
  5093  0E9E                     	;# 
  5094  0EA1                     	;# 
  5095  0EA2                     	;# 
  5096  0EA3                     	;# 
  5097  0EA4                     	;# 
  5098  0EA5                     	;# 
  5099  0EA9                     	;# 
  5100  0EAA                     	;# 
  5101  0EAB                     	;# 
  5102  0EAC                     	;# 
  5103  0EB1                     	;# 
  5104  0EB2                     	;# 
  5105  0EB3                     	;# 
  5106  0EB8                     	;# 
  5107  0EB9                     	;# 
  5108  0EBA                     	;# 
  5109  0EBB                     	;# 
  5110  0EBC                     	;# 
  5111  0EBD                     	;# 
  5112  0EBE                     	;# 
  5113  0EC3                     	;# 
  5114  0EC5                     	;# 
  5115  0EC6                     	;# 
  5116  0EC7                     	;# 
  5117  0EC8                     	;# 
  5118  0EC9                     	;# 
  5119  0ECA                     	;# 
  5120  0ECB                     	;# 
  5121  0ECC                     	;# 
  5122  0F10                     	;# 
  5123  0F11                     	;# 
  5124  0F12                     	;# 
  5125  0F13                     	;# 
  5126  0F14                     	;# 
  5127  0F15                     	;# 
  5128  0F16                     	;# 
  5129  0F17                     	;# 
  5130  0F18                     	;# 
  5131  0F19                     	;# 
  5132  0F1A                     	;# 
  5133  0F1B                     	;# 
  5134  0F1C                     	;# 
  5135  0F1D                     	;# 
  5136  0F1E                     	;# 
  5137  0F1F                     	;# 
  5138  0F20                     	;# 
  5139  0F21                     	;# 
  5140  0F22                     	;# 
  5141  0F23                     	;# 
  5142  0F24                     	;# 
  5143  0F25                     	;# 
  5144  0F26                     	;# 
  5145  0F27                     	;# 
  5146  0F38                     	;# 
  5147  0F39                     	;# 
  5148  0F3A                     	;# 
  5149  0F3B                     	;# 
  5150  0F3C                     	;# 
  5151  0F3D                     	;# 
  5152  0F3E                     	;# 
  5153  0F3F                     	;# 
  5154  0F40                     	;# 
  5155  0F41                     	;# 
  5156  0F43                     	;# 
  5157  0F44                     	;# 
  5158  0F45                     	;# 
  5159  0F46                     	;# 
  5160  0F47                     	;# 
  5161  0F48                     	;# 
  5162  0F49                     	;# 
  5163  0F4A                     	;# 
  5164  0F4B                     	;# 
  5165  0F4C                     	;# 
  5166  0F4E                     	;# 
  5167  0F4F                     	;# 
  5168  0F50                     	;# 
  5169  0F51                     	;# 
  5170  0F52                     	;# 
  5171  0F53                     	;# 
  5172  0F54                     	;# 
  5173  0F55                     	;# 
  5174  0F56                     	;# 
  5175  0F57                     	;# 
  5176  0F65                     	;# 
  5177  0F68                     	;# 
  5178  0F69                     	;# 
  5179  0F6A                     	;# 
  5180  0F6B                     	;# 
  5181  0FE4                     	;# 
  5182  0FE5                     	;# 
  5183  0FE6                     	;# 
  5184  0FE7                     	;# 
  5185  0FE8                     	;# 
  5186  0FE9                     	;# 
  5187  0FEA                     	;# 
  5188  0FEB                     	;# 
  5189  0FED                     	;# 
  5190  0FEE                     	;# 
  5191  0FEF                     	;_samples
  5192                           
  5193                           	psect	idataBANK1
  5194  1662                     __pidataBANK1:	
  5195                           
  5196                           ;initializer for _setpoint
  5197  1662  34CA               	retlw	202
  5198  1663  3408               	retlw	8
  5199  1664  340B               	retlw	11
  5200  1665  3402               	retlw	2
  5201                           
  5202                           ;initializer for _Kd
  5203  1666  3401               	retlw	1
  5204  1667  3400               	retlw	0
  5205                           
  5206                           ;initializer for _Ki
  5207  1668  3401               	retlw	1
  5208  1669  3400               	retlw	0
  5209                           
  5210                           ;initializer for _Kp
  5211  166A  3404               	retlw	4
  5212  166B  3400               	retlw	0
  5213                           
  5214                           ;initializer for _pidMaxOutput
  5215  166C  34FF               	retlw	255
  5216  166D  3407               	retlw	7
  5217                           
  5218                           ;initializer for _loop
  5219  166E  3440               	retlw	64
  5220                           
  5221                           	psect	idataBANK3
  5222  175D                     __pidataBANK3:	
  5223                           
  5224                           ;initializer for ___cgram
  5225  175D  340C               	retlw	12
  5226  175E  3412               	retlw	18
  5227  175F  3412               	retlw	18
  5228  1760  340C               	retlw	12
  5229  1761  3400               	retlw	0
  5230  1762  3400               	retlw	0
  5231  1763  3400               	retlw	0
  5232  1764  3400               	retlw	0
  5233  1765  3408               	retlw	8
  5234  1766  3404               	retlw	4
  5235  1767  3402               	retlw	2
  5236  1768  341F               	retlw	31
  5237  1769  3402               	retlw	2
  5238  176A  3404               	retlw	4
  5239  176B  3408               	retlw	8
  5240  176C  3400               	retlw	0
  5241                           
  5242                           ;initializer for _channels
  5243  176D  3401               	retlw	1
  5244  176E  3400               	retlw	0
  5245  176F  3403               	retlw	3
  5246  1770  3400               	retlw	0
  5247                           
  5248                           ;initializer for _desc
  5249  1771  3470               	retlw	low (STR_1| (0+32768))
  5250  1772  3490               	retlw	high (STR_1| (0+32768))
  5251  1773  347B               	retlw	low (STR_2| (0+32768))
  5252  1774  3490               	retlw	high (STR_2| (0+32768))
  5253                           
  5254                           ;initializer for _highRangeSet
  5255  1775  34BE               	retlw	190
  5256  1776  340A               	retlw	10
  5257  1777  34FF               	retlw	255
  5258  1778  3403               	retlw	3
  5259                           
  5260                           ;initializer for _lowRangeSet
  5261  1779  34EE               	retlw	238
  5262  177A  3402               	retlw	2
  5263  177B  3400               	retlw	0
  5264  177C  3400               	retlw	0
  5265                           
  5266                           	psect	stringtext
  5267  1000                     __pstringtext:	
  5268  1000                     log@coeff:	
  5269  1000  3400               	retlw	0
  5270  1001  3400               	retlw	0
  5271  1002  3400               	retlw	0
  5272  1003  3400               	retlw	0
  5273  1004  3480               	retlw	128
  5274  1005  343F               	retlw	63
  5275  1006  34F0               	retlw	240
  5276  1007  34FF               	retlw	255
  5277  1008  34BE               	retlw	190
  5278  1009  34E2               	retlw	226
  5279  100A  34A9               	retlw	169
  5280  100B  343E               	retlw	62
  5281  100C  3483               	retlw	131
  5282  100D  3476               	retlw	118
  5283  100E  34BE               	retlw	190
  5284  100F  34AE               	retlw	174
  5285  1010  342B               	retlw	43
  5286  1011  343E               	retlw	62
  5287  1012  343C               	retlw	60
  5288  1013  34C3               	retlw	195
  5289  1014  34BD               	retlw	189
  5290  1015  34D2               	retlw	210
  5291  1016  3413               	retlw	19
  5292  1017  343D               	retlw	61
  5293  1018  3478               	retlw	120
  5294  1019  34D3               	retlw	211
  5295  101A  34BB               	retlw	187
  5296  101B                     __end_oflog@coeff:	
  5297  0016                     _LATA	set	22
  5298  0017                     _LATB	set	23
  5299  0018                     _LATC	set	24
  5300  0011                     _TRISA	set	17
  5301  0012                     _TRISB	set	18
  5302  0013                     _TRISC	set	19
  5303  005F                     _GIE	set	95
  5304  00C2                     _LATC2	set	194
  5305  0060                     _RA0	set	96
  5306  0062                     _RA2	set	98
  5307  0066                     _RA6	set	102
  5308  0067                     _RA7	set	103
  5309  0068                     _RB0	set	104
  5310  0069                     _RB1	set	105
  5311  006A                     _RB2	set	106
  5312  0070                     _RC0	set	112
  5313  0071                     _RC1	set	113
  5314  009D                     _ADACQ	set	157
  5315  0099                     _ADACT	set	153
  5316  009B                     _ADCAP	set	155
  5317  0098                     _ADCLK	set	152
  5318  0093                     _ADCON0	set	147
  5319  0093                     _ADCON0bits	set	147
  5320  0094                     _ADCON1	set	148
  5321  0095                     _ADCON2	set	149
  5322  0096                     _ADCON3	set	150
  5323  009E                     _ADPCH	set	158
  5324  009C                     _ADPRE	set	156
  5325  009A                     _ADREF	set	154
  5326  008D                     _ADRESH	set	141
  5327  008C                     _ADRESL	set	140
  5328  0097                     _ADSTAT	set	151
  5329  010F                     _ADLTHH	set	271
  5330  010E                     _ADLTHL	set	270
  5331  010D                     _ADRPT	set	269
  5332  0113                     _ADSTPTH	set	275
  5333  0112                     _ADSTPTL	set	274
  5334  0111                     _ADUTHH	set	273
  5335  0110                     _ADUTHL	set	272
  5336  021F                     _CCPTMRS1bits	set	543
  5337  0290                     _T2CLKCON	set	656
  5338  028E                     _T2CON	set	654
  5339  028E                     _T2CONbits	set	654
  5340  028F                     _T2HLT	set	655
  5341  028D                     _T2PR	set	653
  5342  0291                     _T2RST	set	657
  5343  028C                     _T2TMR	set	652
  5344  0392                     _PWM7CON	set	914
  5345  0391                     _PWM7DCH	set	913
  5346  0390                     _PWM7DCL	set	912
  5347  0716                     _PIE0bits	set	1814
  5348  0710                     _PIR4bits	set	1808
  5349  088D                     _OSCCON1	set	2189
  5350  088F                     _OSCCON3	set	2191
  5351  0891                     _OSCEN	set	2193
  5352  0893                     _OSCFRQ	set	2195
  5353  0892                     _OSCTUNE	set	2194
  5354  090C                     _FVRCON	set	2316
  5355  0E8F                     _PPSLOCK	set	3727
  5356  0E8F                     _PPSLOCKbits	set	3727
  5357  0F38                     _ANSELA	set	3896
  5358  0F43                     _ANSELB	set	3907
  5359  0F4E                     _ANSELC	set	3918
  5360  0F23                     _RC3PPS	set	3875
  5361  0F39                     _WPUA	set	3897
  5362  0F44                     _WPUB	set	3908
  5363  0F4F                     _WPUC	set	3919
  5364  0F65                     _WPUE	set	3941
  5365  101B                     STR_8:	
  5366  101B  3441               	retlw	65	;'A'
  5367  101C  346C               	retlw	108	;'l'
  5368  101D  3474               	retlw	116	;'t'
  5369  101E  3465               	retlw	101	;'e'
  5370  101F  3472               	retlw	114	;'r'
  5371  1020  3420               	retlw	32	;' '
  5372  1021  3477               	retlw	119	;'w'
  5373  1022  3469               	retlw	105	;'i'
  5374  1023  3474               	retlw	116	;'t'
  5375  1024  3468               	retlw	104	;'h'
  5376  1025  3420               	retlw	32	;' '
  5377  1026  3455               	retlw	85	;'U'
  5378  1027  3470               	retlw	112	;'p'
  5379  1028  342F               	retlw	47	;'/'
  5380  1029  3444               	retlw	68	;'D'
  5381  102A  346E               	retlw	110	;'n'
  5382  102B  3400               	retlw	0
  5383  102C                     STR_9:	
  5384  102C  3445               	retlw	69	;'E'
  5385  102D  346E               	retlw	110	;'n'
  5386  102E  3474               	retlw	116	;'t'
  5387  102F  3465               	retlw	101	;'e'
  5388  1030  3472               	retlw	114	;'r'
  5389  1031  3420               	retlw	32	;' '
  5390  1032  344B               	retlw	75	;'K'
  5391  1033  3465               	retlw	101	;'e'
  5392  1034  3479               	retlw	121	;'y'
  5393  1035  3420               	retlw	32	;' '
  5394  1036  3474               	retlw	116	;'t'
  5395  1037  346F               	retlw	111	;'o'
  5396  1038  3420               	retlw	32	;' '
  5397  1039  3453               	retlw	83	;'S'
  5398  103A  3465               	retlw	101	;'e'
  5399  103B  3474               	retlw	116	;'t'
  5400  103C  3400               	retlw	0
  5401  103D                     STR_5:	
  5402  103D  3420               	retlw	32	;' '
  5403  103E  3420               	retlw	32	;' '
  5404  103F  3420               	retlw	32	;' '
  5405  1040  3447               	retlw	71	;'G'
  5406  1041  346F               	retlw	111	;'o'
  5407  1042  346F               	retlw	111	;'o'
  5408  1043  3464               	retlw	100	;'d'
  5409  1044  342D               	retlw	45	;'-'
  5410  1045  3442               	retlw	66	;'B'
  5411  1046  3479               	retlw	121	;'y'
  5412  1047  3465               	retlw	101	;'e'
  5413  1048  3421               	retlw	33	;'!'
  5414  1049  3421               	retlw	33	;'!'
  5415  104A  3420               	retlw	32	;' '
  5416  104B  3420               	retlw	32	;' '
  5417  104C  3420               	retlw	32	;' '
  5418  104D  3400               	retlw	0
  5419  104E                     STR_4:	
  5420  104E  3445               	retlw	69	;'E'
  5421  104F  346E               	retlw	110	;'n'
  5422  1050  3474               	retlw	116	;'t'
  5423  1051  3465               	retlw	101	;'e'
  5424  1052  3472               	retlw	114	;'r'
  5425  1053  3420               	retlw	32	;' '
  5426  1054  3474               	retlw	116	;'t'
  5427  1055  346F               	retlw	111	;'o'
  5428  1056  3420               	retlw	32	;' '
  5429  1057  3453               	retlw	83	;'S'
  5430  1058  3465               	retlw	101	;'e'
  5431  1059  346C               	retlw	108	;'l'
  5432  105A  3465               	retlw	101	;'e'
  5433  105B  3463               	retlw	99	;'c'
  5434  105C  3474               	retlw	116	;'t'
  5435  105D  3420               	retlw	32	;' '
  5436  105E  3400               	retlw	0
  5437  105F                     STR_3:	
  5438  105F  3455               	retlw	85	;'U'
  5439  1060  3470               	retlw	112	;'p'
  5440  1061  342F               	retlw	47	;'/'
  5441  1062  3444               	retlw	68	;'D'
  5442  1063  346F               	retlw	111	;'o'
  5443  1064  3477               	retlw	119	;'w'
  5444  1065  346E               	retlw	110	;'n'
  5445  1066  3420               	retlw	32	;' '
  5446  1067  3474               	retlw	116	;'t'
  5447  1068  346F               	retlw	111	;'o'
  5448  1069  3420               	retlw	32	;' '
  5449  106A  3441               	retlw	65	;'A'
  5450  106B  346C               	retlw	108	;'l'
  5451  106C  3474               	retlw	116	;'t'
  5452  106D  3465               	retlw	101	;'e'
  5453  106E  3472               	retlw	114	;'r'
  5454  106F  3400               	retlw	0
  5455  1070                     STR_1:	
  5456  1070  3420               	retlw	32	;' '
  5457  1071  3450               	retlw	80	;'P'
  5458  1072  3469               	retlw	105	;'i'
  5459  1073  3474               	retlw	116	;'t'
  5460  1074  3420               	retlw	32	;' '
  5461  1075  3454               	retlw	84	;'T'
  5462  1076  3465               	retlw	101	;'e'
  5463  1077  346D               	retlw	109	;'m'
  5464  1078  3470               	retlw	112	;'p'
  5465  1079  343A               	retlw	58	;':'
  5466  107A  3400               	retlw	0
  5467  107B                     STR_2:	
  5468  107B  3442               	retlw	66	;'B'
  5469  107C  3461               	retlw	97	;'a'
  5470  107D  3463               	retlw	99	;'c'
  5471  107E  346B               	retlw	107	;'k'
  5472  107F  344C               	retlw	76	;'L'
  5473  1080  3469               	retlw	105	;'i'
  5474  1081  3467               	retlw	103	;'g'
  5475  1082  3468               	retlw	104	;'h'
  5476  1083  3474               	retlw	116	;'t'
  5477  1084  343A               	retlw	58	;':'
  5478  1085  3400               	retlw	0
  5479  1086                     STR_7:	
  5480  1086  344F               	retlw	79	;'O'
  5481  1087  3475               	retlw	117	;'u'
  5482  1088  3474               	retlw	116	;'t'
  5483  1089  3470               	retlw	112	;'p'
  5484  108A  3475               	retlw	117	;'u'
  5485  108B  3474               	retlw	116	;'t'
  5486  108C  343A               	retlw	58	;':'
  5487  108D  3400               	retlw	0
  5488  108E                     STR_6:	
  5489  108E  3450               	retlw	80	;'P'
  5490  108F  3469               	retlw	105	;'i'
  5491  1090  3474               	retlw	116	;'t'
  5492  1091  343A               	retlw	58	;':'
  5493  1092  3400               	retlw	0
  5494                           
  5495                           ; #config settings
  5496  0000                     
  5497                           	psect	cinit
  5498  07B7                     start_initialization:	
  5499  07B7                     __initialization:		;BIGRAM
  5500                           
  5501                           ; Initialize objects allocated to BANK1
  5502  07B7  3062               	movlw	low __pidataBANK1
  5503  07B8  0084               	movwf	4
  5504  07B9  3096               	movlw	(high __pidataBANK1)| (0+128)
  5505  07BA  0085               	movwf	5
  5506  07BB  30E2               	movlw	low __pdataBANK1
  5507  07BC  0086               	movwf	6
  5508  07BD  3000               	movlw	high __pdataBANK1
  5509  07BE  0087               	movwf	7
  5510  07BF  3000               	movlw	0
  5511  07C0  00FF               	movwf	btemp+1
  5512  07C1  300D               	movlw	13
  5513  07C2  3196  2656  3187   	fcall	init_ram
  5514                           
  5515                           ; Initialize objects allocated to BANK3
  5516  07C5  305D               	movlw	low __pidataBANK3
  5517  07C6  0084               	movwf	4
  5518  07C7  3097               	movlw	(high __pidataBANK3)| (0+128)
  5519  07C8  0085               	movwf	5
  5520  07C9  30A0               	movlw	low __pdataBANK3
  5521  07CA  0086               	movwf	6
  5522  07CB  3001               	movlw	high __pdataBANK3
  5523  07CC  0087               	movwf	7
  5524  07CD  3000               	movlw	0
  5525  07CE  00FF               	movwf	btemp+1
  5526  07CF  3020               	movlw	32
  5527  07D0  3196  2656  3187   	fcall	init_ram
  5528                           
  5529                           ; Clear objects allocated to BIGRAM
  5530  07D3  3050               	movlw	low (0+9040)
  5531  07D4  0084               	movwf	4
  5532  07D5  3023               	movlw	high (0+9040)
  5533  07D6  0085               	movwf	5
  5534  07D7  30A0               	movlw	160
  5535  07D8  00FE               	movwf	btemp
  5536  07D9  3000               	movlw	0
  5537  07DA  00FF               	movwf	btemp+1
  5538  07DB  3196  264A  3187   	fcall	clear_ram0
  5539                           
  5540                           ; Clear objects allocated to BANK1
  5541  07DE  30A0               	movlw	low __pbssBANK1
  5542  07DF  0084               	movwf	4
  5543  07E0  3000               	movlw	high __pbssBANK1
  5544  07E1  0085               	movwf	5
  5545  07E2  3029               	movlw	41
  5546  07E3  00FE               	movwf	btemp
  5547  07E4  3000               	movlw	0
  5548  07E5  00FF               	movwf	btemp+1
  5549  07E6  3196  264A  3187   	fcall	clear_ram0
  5550                           
  5551                           ; Clear objects allocated to BANK3
  5552  07E9  0023               	movlb	3	; select bank3
  5553  07EA  01C0               	clrf	__pbssBANK3& (0+127)
  5554  07EB  01C1               	clrf	(__pbssBANK3+1)& (0+127)
  5555  07EC  01C2               	clrf	(__pbssBANK3+2)& (0+127)
  5556  07ED  01C3               	clrf	(__pbssBANK3+3)& (0+127)
  5557  07EE  01C4               	clrf	(__pbssBANK3+4)& (0+127)
  5558  07EF  01C5               	clrf	(__pbssBANK3+5)& (0+127)
  5559  07F0  01C6               	clrf	(__pbssBANK3+6)& (0+127)
  5560  07F1  01C7               	clrf	(__pbssBANK3+7)& (0+127)
  5561  07F2  01C8               	clrf	(__pbssBANK3+8)& (0+127)
  5562                           
  5563                           ; Clear objects allocated to BANK4
  5564  07F3  3020               	movlw	low __pbssBANK4
  5565  07F4  0084               	movwf	4
  5566  07F5  3002               	movlw	high __pbssBANK4
  5567  07F6  0085               	movwf	5
  5568  07F7  3050               	movlw	80
  5569  07F8  00FE               	movwf	btemp
  5570  07F9  3000               	movlw	0
  5571  07FA  00FF               	movwf	btemp+1
  5572  07FB  3196  264A         	fcall	clear_ram0
  5573  07FD                     end_of_initialization:	
  5574                           ;End of C runtime variable initialization code
  5575                           
  5576  07FD                     __end_of__initialization:	
  5577  07FD  0020               	movlb	0
  5578  07FE  3185  2D3A         	ljmp	_main	;jump to C main() function
  5579                           
  5580                           	psect	bssBANK1
  5581  00A0                     __pbssBANK1:	
  5582  00A0                     _totals:	
  5583  00A0                     	ds	8
  5584  00A8                     _Result:	
  5585  00A8                     	ds	2
  5586  00AA                     _derivativeValue:	
  5587  00AA                     	ds	2
  5588  00AC                     _errno:	
  5589  00AC                     	ds	2
  5590  00AE                     _error:	
  5591  00AE                     	ds	2
  5592  00B0                     _errorValue:	
  5593  00B0                     	ds	2
  5594  00B2                     _lastSign:	
  5595  00B2                     	ds	2
  5596  00B4                     _menuDelay:	
  5597  00B4                     	ds	2
  5598  00B6                     _pidCount:	
  5599  00B6                     	ds	2
  5600  00B8                     _pidIntegrated:	
  5601  00B8                     	ds	2
  5602  00BA                     _pidMinOutput:	
  5603  00BA                     	ds	2
  5604  00BC                     _pidPrevError:	
  5605  00BC                     	ds	2
  5606  00BE                     _sampleIndex:	
  5607  00BE                     	ds	2
  5608  00C0                     _signPositive:	
  5609  00C0                     	ds	2
  5610  00C2                     _timer:	
  5611  00C2                     	ds	2
  5612  00C4                     _choice:	
  5613  00C4                     	ds	1
  5614  00C5                     _delayCount:	
  5615  00C5                     	ds	1
  5616  00C6                     _key:	
  5617  00C6                     	ds	1
  5618  00C7                     _testKey:	
  5619  00C7                     	ds	1
  5620  00C8                     _timer2:	
  5621  00C8                     	ds	1
  5622                           
  5623                           	psect	dataBANK1
  5624  00E2                     __pdataBANK1:	
  5625  00E2                     _setpoint:	
  5626  00E2                     	ds	4
  5627  00E6                     _Kd:	
  5628  00E6                     	ds	2
  5629  00E8                     _Ki:	
  5630  00E8                     	ds	2
  5631  00EA                     _Kp:	
  5632  00EA                     	ds	2
  5633  00EC                     _pidMaxOutput:	
  5634  00EC                     	ds	2
  5635  00EE                     _loop:	
  5636  00EE                     	ds	1
  5637                           
  5638                           	psect	bssBANK3
  5639  01C0                     __pbssBANK3:	
  5640  01C0                     LCD_Write_Int@F13694:	
  5641  01C0                     	ds	5
  5642  01C5                     main@F13664:	
  5643  01C5                     	ds	4
  5644                           
  5645                           	psect	dataBANK3
  5646  01A0                     __pdataBANK3:	
  5647  01A0                     ___cgram:	
  5648  01A0                     	ds	16
  5649  01B0                     _channels:	
  5650  01B0                     	ds	4
  5651  01B4                     _desc:	
  5652  01B4                     	ds	4
  5653  01B8                     _highRangeSet:	
  5654  01B8                     	ds	4
  5655  01BC                     _lowRangeSet:	
  5656  01BC                     	ds	4
  5657                           
  5658                           	psect	bssBANK4
  5659  0220                     __pbssBANK4:	
  5660  0220                     main@F13670:	
  5661  0220                     	ds	80
  5662                           
  5663                           	psect	inittext
  5664  1656                     init_ram:	
  5665  1656  00FE               	movwf	126
  5666  1657                     initloop:	
  5667  1657  0012               	moviw fsr0++
  5668  1658  001E               	movwi fsr1++
  5669  1659  3001               	movlw	1
  5670  165A  02FE               	subwf	126,f
  5671  165B  3000               	movlw	0
  5672  165C  3BFF               	subwfb	127,f
  5673  165D  087F               	movf	127,w
  5674  165E  047E               	iorwf	126,w
  5675  165F  1903               	btfsc	3,2
  5676  1660  3400               	retlw	0
  5677  1661  2E57               	goto	initloop
  5678                           
  5679                           	psect	clrtext
  5680  164A                     clear_ram0:	
  5681                           ;	Called with FSR0 containing the base address, and
  5682                           ;	btemp/btemp+1 has the size to clear
  5683                           
  5684  164A  0064               	clrwdt	;clear the watchdog before getting into this loop
  5685  164B                     clrloop0:	
  5686  164B  0180               	clrf	0	;clear RAM location pointed to by FSR
  5687  164C  3101               	addfsr 0,1
  5688  164D  3001               	movlw	1
  5689  164E  02FE               	subwf	126,f
  5690  164F  3000               	movlw	0
  5691  1650  3BFF               	subwfb	127,f
  5692  1651  087F               	movf	127,w
  5693  1652  047E               	iorwf	126,w
  5694  1653  1903               	btfsc	3,2
  5695  1654  3400               	retlw	0	;all done for this memory range, return
  5696  1655  2E4B               	goto	clrloop0	;have we reached the end yet?
  5697                           
  5698                           	psect	cstackBANK2
  5699  0120                     __pcstackBANK2:	
  5700  0120                     main@outputSamples:	
  5701                           
  5702                           ; 80 bytes @ 0x0
  5703  0120                     	ds	80
  5704                           
  5705                           	psect	cstackBANK1
  5706  00C9                     __pcstackBANK1:	
  5707  00C9                     ??_main:	
  5708                           
  5709                           ; 1 bytes @ 0x0
  5710  00C9                     	ds	10
  5711  00D3                     main@pidPeriodCounter:	
  5712                           
  5713                           ; 2 bytes @ 0xA
  5714  00D3                     	ds	2
  5715  00D5                     main@currentTemperature:	
  5716                           
  5717                           ; 2 bytes @ 0xC
  5718  00D5                     	ds	2
  5719  00D7                     main@outputTotal:	
  5720                           
  5721                           ; 4 bytes @ 0xE
  5722  00D7                     	ds	4
  5723  00DB                     main@dutyCycle6:	
  5724                           
  5725                           ; 2 bytes @ 0x12
  5726  00DB                     	ds	2
  5727  00DD                     main@analogs:	
  5728                           
  5729                           ; 4 bytes @ 0x14
  5730  00DD                     	ds	4
  5731  00E1                     main@j:	
  5732                           
  5733                           ; 1 bytes @ 0x18
  5734  00E1                     	ds	1
  5735                           
  5736                           	psect	cstackCOMMON
  5737  0070                     __pcstackCOMMON:	
  5738  0070                     ?___ftge:	
  5739  0070                     ?_LCD_Cmd:	
  5740                           ; 1 bit 
  5741                           
  5742  0070                     ?_LCD_Write_Char:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745  0070                     ?_OSCILLATOR_Initialize:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748  0070                     ??_OSCILLATOR_Initialize:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751  0070                     ?_ADCC_Initialize:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754  0070                     ??_ADCC_Initialize:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757  0070                     ?_PWM_Initialize:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760  0070                     ??_PWM_Initialize:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763  0070                     ?_TMR2_Initialize:	
  5764                           ; 1 bytes @ 0x0
  5765                           
  5766  0070                     ??_TMR2_Initialize:	
  5767                           ; 1 bytes @ 0x0
  5768                           
  5769  0070                     ?_InitCustomChars:	
  5770                           ; 1 bytes @ 0x0
  5771                           
  5772  0070                     ?_LCD_Port:	
  5773                           ; 1 bytes @ 0x0
  5774                           
  5775  0070                     ??_LCD_Port:	
  5776                           ; 1 bytes @ 0x0
  5777                           
  5778  0070                     ?_LCD_Clear:	
  5779                           ; 1 bytes @ 0x0
  5780                           
  5781  0070                     ?_LCD_Init:	
  5782                           ; 1 bytes @ 0x0
  5783                           
  5784  0070                     ?_PIN_MANAGER_Initialize:	
  5785                           ; 1 bytes @ 0x0
  5786                           
  5787  0070                     ??_PIN_MANAGER_Initialize:	
  5788                           ; 1 bytes @ 0x0
  5789                           
  5790  0070                     ?_SYSTEM_Initialize:	
  5791                           ; 1 bytes @ 0x0
  5792                           
  5793  0070                     ?_PWM7_LoadDutyValue:	
  5794                           ; 1 bytes @ 0x0
  5795                           
  5796  0070                     ?_readKey:	
  5797                           ; 1 bytes @ 0x0
  5798                           
  5799  0070                     ??_readKey:	
  5800                           ; 1 bytes @ 0x0
  5801                           
  5802  0070                     ?_menuChoice:	
  5803                           ; 1 bytes @ 0x0
  5804                           
  5805  0070                     ?_main:	
  5806                           ; 1 bytes @ 0x0
  5807                           
  5808  0070                     ?_ADCRead:	
  5809                           ; 1 bytes @ 0x0
  5810                           
  5811  0070                     ?___wmul:	
  5812                           ; 2 bytes @ 0x0
  5813                           
  5814  0070                     ?___awdiv:	
  5815                           ; 2 bytes @ 0x0
  5816                           
  5817  0070                     ?___awmod:	
  5818                           ; 2 bytes @ 0x0
  5819                           
  5820  0070                     ?___ftpack:	
  5821                           ; 2 bytes @ 0x0
  5822                           
  5823  0070                     ?_frexp:	
  5824                           ; 3 bytes @ 0x0
  5825                           
  5826  0070                     ?___aldiv:	
  5827                           ; 3 bytes @ 0x0
  5828                           
  5829  0070                     ?___fttol:	
  5830                           ; 4 bytes @ 0x0
  5831                           
  5832  0070                     LCD_Port@a:	
  5833                           ; 4 bytes @ 0x0
  5834                           
  5835  0070                     PIN_MANAGER_Initialize@state:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ___wmul@multiplier:	
  5842                           ; 2 bytes @ 0x0
  5843                           
  5844  0070                     ___awdiv@divisor:	
  5845                           ; 2 bytes @ 0x0
  5846                           
  5847  0070                     ___awmod@divisor:	
  5848                           ; 2 bytes @ 0x0
  5849                           
  5850  0070                     ___ftpack@arg:	
  5851                           ; 2 bytes @ 0x0
  5852                           
  5853  0070                     ___ftge@ff1:	
  5854                           ; 3 bytes @ 0x0
  5855                           
  5856  0070                     ___fttol@f1:	
  5857                           ; 3 bytes @ 0x0
  5858                           
  5859  0070                     frexp@value:	
  5860                           ; 3 bytes @ 0x0
  5861                           
  5862  0070                     ___aldiv@divisor:	
  5863                           ; 3 bytes @ 0x0
  5864                           
  5865                           
  5866                           ; 4 bytes @ 0x0
  5867  0070                     	ds	1
  5868  0071                     ??_LCD_Cmd:	
  5869  0071                     ??_LCD_Write_Char:	
  5870                           ; 1 bytes @ 0x1
  5871                           
  5872                           
  5873                           ; 1 bytes @ 0x1
  5874  0071                     	ds	1
  5875  0072                     ??_PWM7_LoadDutyValue:	
  5876  0072                     LCD_Write_Char@temp:	
  5877                           ; 1 bytes @ 0x2
  5878                           
  5879  0072                     ___wmul@multiplicand:	
  5880                           ; 1 bytes @ 0x2
  5881                           
  5882  0072                     ___awdiv@dividend:	
  5883                           ; 2 bytes @ 0x2
  5884                           
  5885  0072                     ___awmod@dividend:	
  5886                           ; 2 bytes @ 0x2
  5887                           
  5888                           
  5889                           ; 2 bytes @ 0x2
  5890  0072                     	ds	1
  5891  0073                     ??_ADCRead:	
  5892  0073                     LCD_Cmd@a:	
  5893                           ; 1 bytes @ 0x3
  5894                           
  5895  0073                     LCD_Write_Char@y:	
  5896                           ; 1 bytes @ 0x3
  5897                           
  5898  0073                     ADCRead@channel:	
  5899                           ; 1 bytes @ 0x3
  5900                           
  5901  0073                     ___ftpack@exp:	
  5902                           ; 1 bytes @ 0x3
  5903                           
  5904  0073                     frexp@eptr:	
  5905                           ; 1 bytes @ 0x3
  5906                           
  5907  0073                     ___ftge@ff2:	
  5908                           ; 1 bytes @ 0x3
  5909                           
  5910                           
  5911                           ; 3 bytes @ 0x3
  5912  0073                     	ds	1
  5913  0074                     ??_frexp:	
  5914  0074                     ??_LCD_Clear:	
  5915                           ; 1 bytes @ 0x4
  5916                           
  5917  0074                     ?_LCD_Set_Cursor:	
  5918                           ; 1 bytes @ 0x4
  5919                           
  5920  0074                     ??_LCD_Init:	
  5921                           ; 1 bytes @ 0x4
  5922                           
  5923  0074                     ??___wmul:	
  5924                           ; 1 bytes @ 0x4
  5925                           
  5926  0074                     ??___awdiv:	
  5927                           ; 1 bytes @ 0x4
  5928                           
  5929  0074                     ??___awmod:	
  5930                           ; 1 bytes @ 0x4
  5931                           
  5932  0074                     ??___fttol:	
  5933                           ; 1 bytes @ 0x4
  5934                           
  5935  0074                     LCD_Set_Cursor@y:	
  5936                           ; 1 bytes @ 0x4
  5937                           
  5938  0074                     LCD_Write_Char@a:	
  5939                           ; 1 bytes @ 0x4
  5940                           
  5941  0074                     ___ftpack@sign:	
  5942                           ; 1 bytes @ 0x4
  5943                           
  5944  0074                     ___wmul@product:	
  5945                           ; 1 bytes @ 0x4
  5946                           
  5947  0074                     ___aldiv@dividend:	
  5948                           ; 2 bytes @ 0x4
  5949                           
  5950                           
  5951                           ; 4 bytes @ 0x4
  5952  0074                     	ds	1
  5953  0075                     ??___ftpack:	
  5954  0075                     ??_InitCustomChars:	
  5955                           ; 1 bytes @ 0x5
  5956                           
  5957  0075                     ??_LCD_Set_Cursor:	
  5958                           ; 1 bytes @ 0x5
  5959                           
  5960  0075                     ?_LCD_Write_String:	
  5961                           ; 1 bytes @ 0x5
  5962                           
  5963  0075                     ___awdiv@counter:	
  5964                           ; 1 bytes @ 0x5
  5965                           
  5966  0075                     ___awmod@counter:	
  5967                           ; 1 bytes @ 0x5
  5968                           
  5969  0075                     LCD_Write_String@a:	
  5970                           ; 1 bytes @ 0x5
  5971                           
  5972                           
  5973                           ; 2 bytes @ 0x5
  5974  0075                     	ds	1
  5975  0076                     ??___ftge:	
  5976  0076                     ?_PID_Calculate:	
  5977                           ; 1 bytes @ 0x6
  5978                           
  5979  0076                     InitCustomChars@i:	
  5980                           ; 2 bytes @ 0x6
  5981                           
  5982  0076                     ___awdiv@sign:	
  5983                           ; 1 bytes @ 0x6
  5984                           
  5985  0076                     ___awmod@sign:	
  5986                           ; 1 bytes @ 0x6
  5987                           
  5988  0076                     PID_Calculate@setpoint:	
  5989                           ; 1 bytes @ 0x6
  5990                           
  5991                           
  5992                           ; 2 bytes @ 0x6
  5993  0076                     	ds	1
  5994  0077                     ??_LCD_Write_String:	
  5995  0077                     LCD_Set_Cursor@x:	
  5996                           ; 1 bytes @ 0x7
  5997                           
  5998  0077                     LCD_Init@style:	
  5999                           ; 1 bytes @ 0x7
  6000                           
  6001  0077                     ___awdiv@quotient:	
  6002                           ; 1 bytes @ 0x7
  6003                           
  6004                           
  6005                           ; 2 bytes @ 0x7
  6006  0077                     	ds	1
  6007  0078                     ??_SYSTEM_Initialize:	
  6008  0078                     ??___aldiv:	
  6009                           ; 1 bytes @ 0x8
  6010                           
  6011  0078                     ?___awtoft:	
  6012                           ; 1 bytes @ 0x8
  6013                           
  6014  0078                     LCD_Set_Cursor@z:	
  6015                           ; 3 bytes @ 0x8
  6016                           
  6017  0078                     ___fttol@sign1:	
  6018                           ; 1 bytes @ 0x8
  6019                           
  6020  0078                     LCD_Write_String@i:	
  6021                           ; 1 bytes @ 0x8
  6022                           
  6023  0078                     PID_Calculate@temp:	
  6024                           ; 2 bytes @ 0x8
  6025                           
  6026  0078                     ___awtoft@c:	
  6027                           ; 2 bytes @ 0x8
  6028                           
  6029                           
  6030                           ; 2 bytes @ 0x8
  6031  0078                     	ds	1
  6032  0079                     ?_LCD_Write_Int:	
  6033  0079                     LCD_Set_Cursor@w:	
  6034                           ; 1 bytes @ 0x9
  6035                           
  6036  0079                     LCD_Write_Int@value:	
  6037                           ; 1 bytes @ 0x9
  6038                           
  6039  0079                     readAnalog@analog_channel:	
  6040                           ; 2 bytes @ 0x9
  6041                           
  6042  0079                     ___fttol@lval:	
  6043                           ; 2 bytes @ 0x9
  6044                           
  6045                           
  6046                           ; 4 bytes @ 0x9
  6047  0079                     	ds	1
  6048  007A                     ??_PID_Calculate:	
  6049  007A                     LCD_Set_Cursor@temp:	
  6050                           ; 1 bytes @ 0xA
  6051                           
  6052                           
  6053                           ; 1 bytes @ 0xA
  6054  007A                     	ds	1
  6055  007B                     ??___awtoft:	
  6056  007B                     LCD_Write_Int@fieldLength:	
  6057                           ; 1 bytes @ 0xB
  6058                           
  6059  007B                     readAnalog@value:	
  6060                           ; 1 bytes @ 0xB
  6061                           
  6062                           
  6063                           ; 2 bytes @ 0xB
  6064  007B                     	ds	1
  6065  007C                     LCD_Write_Int@numPlaces:	
  6066                           
  6067                           ; 1 bytes @ 0xC
  6068  007C                     	ds	1
  6069  007D                     LCD_Write_Int@sign:	
  6070  007D                     ___awtoft@sign:	
  6071                           ; 1 bytes @ 0xD
  6072                           
  6073  007D                     ___fttol@exp1:	
  6074                           ; 1 bytes @ 0xD
  6075                           
  6076                           
  6077                           ; 1 bytes @ 0xD
  6078  007D                     	ds	1
  6079  007E                     ??_eval_poly:	
  6080  007E                     ??_tempCalc:	
  6081                           ; 1 bytes @ 0xE
  6082                           
  6083  007E                     ??___ftsub:	
  6084                           ; 1 bytes @ 0xE
  6085                           
  6086                           
  6087                           	psect	cstackBANK0
  6088  0020                     __pcstackBANK0:	
  6089                           ; 1 bytes @ 0xE
  6090                           
  6091  0020                     ??_LCD_Write_Int:	
  6092  0020                     ?___ftmul:	
  6093                           ; 1 bytes @ 0x0
  6094                           
  6095  0020                     ___aldiv@counter:	
  6096                           ; 3 bytes @ 0x0
  6097                           
  6098  0020                     ___ftmul@f1:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101                           
  6102                           ; 3 bytes @ 0x0
  6103  0020                     	ds	1
  6104  0021                     ___aldiv@sign:	
  6105                           
  6106                           ; 1 bytes @ 0x1
  6107  0021                     	ds	1
  6108  0022                     ___aldiv@quotient:	
  6109                           
  6110                           ; 4 bytes @ 0x2
  6111  0022                     	ds	1
  6112  0023                     ___ftmul@f2:	
  6113                           
  6114                           ; 3 bytes @ 0x3
  6115  0023                     	ds	2
  6116  0025                     LCD_Write_Int@str:	
  6117                           
  6118                           ; 5 bytes @ 0x5
  6119  0025                     	ds	1
  6120  0026                     ??___ftmul:	
  6121  0026                     ?_readAnalog:	
  6122                           ; 1 bytes @ 0x6
  6123                           
  6124  0026                     readAnalog@channel:	
  6125                           ; 2 bytes @ 0x6
  6126                           
  6127                           
  6128                           ; 2 bytes @ 0x6
  6129  0026                     	ds	2
  6130  0028                     ??_readAnalog:	
  6131                           
  6132                           ; 1 bytes @ 0x8
  6133  0028                     	ds	2
  6134  002A                     ___ftmul@exp:	
  6135  002A                     LCD_Write_Int@j:	
  6136                           ; 1 bytes @ 0xA
  6137                           
  6138                           
  6139                           ; 2 bytes @ 0xA
  6140  002A                     	ds	1
  6141  002B                     ___ftmul@f3_as_product:	
  6142                           
  6143                           ; 3 bytes @ 0xB
  6144  002B                     	ds	1
  6145  002C                     LCD_Write_Int@i:	
  6146                           
  6147                           ; 2 bytes @ 0xC
  6148  002C                     	ds	2
  6149  002E                     ??_menuChoice:	
  6150  002E                     ___ftmul@cntr:	
  6151                           ; 1 bytes @ 0xE
  6152                           
  6153                           
  6154                           ; 1 bytes @ 0xE
  6155  002E                     	ds	1
  6156  002F                     ___ftmul@sign:	
  6157                           
  6158                           ; 1 bytes @ 0xF
  6159  002F                     	ds	1
  6160  0030                     ?___ftdiv:	
  6161  0030                     ___ftdiv@f2:	
  6162                           ; 3 bytes @ 0x10
  6163                           
  6164                           
  6165                           ; 3 bytes @ 0x10
  6166  0030                     	ds	3
  6167  0033                     ___ftdiv@f1:	
  6168                           
  6169                           ; 3 bytes @ 0x13
  6170  0033                     	ds	3
  6171  0036                     ??___ftdiv:	
  6172                           
  6173                           ; 1 bytes @ 0x16
  6174  0036                     	ds	4
  6175  003A                     ___ftdiv@cntr:	
  6176                           
  6177                           ; 1 bytes @ 0x1A
  6178  003A                     	ds	1
  6179  003B                     ___ftdiv@f3:	
  6180                           
  6181                           ; 3 bytes @ 0x1B
  6182  003B                     	ds	3
  6183  003E                     ___ftdiv@exp:	
  6184                           
  6185                           ; 1 bytes @ 0x1E
  6186  003E                     	ds	1
  6187  003F                     ___ftdiv@sign:	
  6188                           
  6189                           ; 1 bytes @ 0x1F
  6190  003F                     	ds	1
  6191  0040                     ?___ftadd:	
  6192  0040                     ___ftadd@f1:	
  6193                           ; 3 bytes @ 0x20
  6194                           
  6195                           
  6196                           ; 3 bytes @ 0x20
  6197  0040                     	ds	3
  6198  0043                     ___ftadd@f2:	
  6199                           
  6200                           ; 3 bytes @ 0x23
  6201  0043                     	ds	3
  6202  0046                     ??___ftadd:	
  6203                           
  6204                           ; 1 bytes @ 0x26
  6205  0046                     	ds	4
  6206  004A                     ___ftadd@sign:	
  6207                           
  6208                           ; 1 bytes @ 0x2A
  6209  004A                     	ds	1
  6210  004B                     ___ftadd@exp2:	
  6211                           
  6212                           ; 1 bytes @ 0x2B
  6213  004B                     	ds	1
  6214  004C                     ___ftadd@exp1:	
  6215                           
  6216                           ; 1 bytes @ 0x2C
  6217  004C                     	ds	1
  6218  004D                     ?_eval_poly:	
  6219  004D                     ?___ftsub:	
  6220                           ; 3 bytes @ 0x2D
  6221                           
  6222  004D                     ___ftsub@f2:	
  6223                           ; 3 bytes @ 0x2D
  6224                           
  6225  004D                     eval_poly@x:	
  6226                           ; 3 bytes @ 0x2D
  6227                           
  6228                           
  6229                           ; 3 bytes @ 0x2D
  6230  004D                     	ds	3
  6231  0050                     eval_poly@d:	
  6232  0050                     ___ftsub@f1:	
  6233                           ; 2 bytes @ 0x30
  6234                           
  6235                           
  6236                           ; 3 bytes @ 0x30
  6237  0050                     	ds	2
  6238  0052                     eval_poly@n:	
  6239                           
  6240                           ; 2 bytes @ 0x32
  6241  0052                     	ds	2
  6242  0054                     eval_poly@res:	
  6243                           
  6244                           ; 3 bytes @ 0x34
  6245  0054                     	ds	3
  6246  0057                     ?_log:	
  6247  0057                     log@x:	
  6248                           ; 3 bytes @ 0x37
  6249                           
  6250                           
  6251                           ; 3 bytes @ 0x37
  6252  0057                     	ds	3
  6253  005A                     ??_log:	
  6254                           
  6255                           ; 1 bytes @ 0x3A
  6256  005A                     	ds	1
  6257  005B                     log@exponent:	
  6258                           
  6259                           ; 2 bytes @ 0x3B
  6260  005B                     	ds	2
  6261  005D                     ?_tempCalc:	
  6262  005D                     tempCalc@analogValue:	
  6263                           ; 2 bytes @ 0x3D
  6264                           
  6265                           
  6266                           ; 2 bytes @ 0x3D
  6267  005D                     	ds	2
  6268  005F                     tempCalc@R:	
  6269                           
  6270                           ; 3 bytes @ 0x3F
  6271  005F                     	ds	3
  6272  0062                     _tempCalc$1013:	
  6273                           
  6274                           ; 3 bytes @ 0x42
  6275  0062                     	ds	3
  6276  0065                     tempCalc@steinhart:	
  6277                           
  6278                           ; 3 bytes @ 0x45
  6279  0065                     	ds	3
  6280  0068                     main@x:	
  6281                           
  6282                           ; 1 bytes @ 0x48
  6283  0068                     	ds	1
  6284  0069                     main@output:	
  6285                           
  6286                           ; 2 bytes @ 0x49
  6287  0069                     	ds	2
  6288  006B                     main@holdOutput:	
  6289                           
  6290                           ; 1 bytes @ 0x4B
  6291  006B                     	ds	1
  6292  006C                     main@lidOpenCount:	
  6293                           
  6294                           ; 1 bytes @ 0x4C
  6295  006C                     	ds	1
  6296  006D                     main@lastTemperature:	
  6297                           
  6298                           ; 2 bytes @ 0x4D
  6299  006D                     	ds	2
  6300  006F                     main@outputIndex:	
  6301                           
  6302                           ; 1 bytes @ 0x4F
  6303  006F                     	ds	1
  6304                           
  6305                           	psect	maintext
  6306  053A                     __pmaintext:	
  6307 ;;
  6308 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6309 ;;
  6310 ;; *************** function _main *****************
  6311 ;; Defined at:
  6312 ;;		line 29 in file "main.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  outputSample   80    0[BANK2 ] int [40]
  6317 ;;  analogs         4   20[BANK1 ] unsigned int [2]
  6318 ;;  outputTotal     4   14[BANK1 ] long 
  6319 ;;  dutyCycle6      2   18[BANK1 ] unsigned int 
  6320 ;;  currentTempe    2   12[BANK1 ] int 
  6321 ;;  pidPeriodCou    2   10[BANK1 ] int 
  6322 ;;  lastTemperat    2   77[BANK0 ] int 
  6323 ;;  output          2   73[BANK0 ] int 
  6324 ;;  j               1   24[BANK1 ] unsigned char 
  6325 ;;  outputIndex     1   79[BANK0 ] unsigned char 
  6326 ;;  lidOpenCount    1   76[BANK0 ] unsigned char 
  6327 ;;  holdOutput      1   75[BANK0 ] unsigned char 
  6328 ;;  x               1   72[BANK0 ] unsigned char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : B1F/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Locals:         0       8      15      80       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Totals:         0       8      25      80       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;Total ram usage:      113 bytes
  6343 ;; Hardware stack levels required when called:    5
  6344 ;; This function calls:
  6345 ;;		_LCD_Clear
  6346 ;;		_LCD_Set_Cursor
  6347 ;;		_LCD_Write_Char
  6348 ;;		_LCD_Write_Int
  6349 ;;		_LCD_Write_String
  6350 ;;		_PID_Calculate
  6351 ;;		_PWM7_LoadDutyValue
  6352 ;;		_SYSTEM_Initialize
  6353 ;;		___aldiv
  6354 ;;		_menuChoice
  6355 ;;		_readAnalog
  6356 ;;		_tempCalc
  6357 ;; This function is called by:
  6358 ;;		Startup code after reset
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function _main
  6364  053A                     _main:	
  6365                           
  6366                           ;main.c: 31: SYSTEM_Initialize();
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6370  053A  3188  20B5  3185   	fcall	_SYSTEM_Initialize
  6371                           
  6372                           ;main.c: 33: uint16_t analogs[2] = {0};
  6373  053D  0023               	movlb	3	; select bank3
  6374  053E  0848               	movf	(main@F13664+3)^(0+384),w
  6375  053F  0021               	movlb	1	; select bank1
  6376  0540  00E0               	movwf	(main@analogs+3)^(0+128)
  6377  0541  0023               	movlb	3	; select bank3
  6378  0542  0847               	movf	(main@F13664+2)^(0+384),w
  6379  0543  0021               	movlb	1	; select bank1
  6380  0544  00DF               	movwf	(main@analogs+2)^(0+128)
  6381  0545  0023               	movlb	3	; select bank3
  6382  0546  0846               	movf	(main@F13664+1)^(0+384),w
  6383  0547  0021               	movlb	1	; select bank1
  6384  0548  00DE               	movwf	(main@analogs+1)^(0+128)
  6385  0549  0023               	movlb	3	; select bank3
  6386  054A  0845               	movf	main@F13664^(0+384),w
  6387  054B  0021               	movlb	1	; select bank1
  6388  054C  00DD               	movwf	main@analogs^(0+128)
  6389                           
  6390                           ;main.c: 35: extern int16_t setpoint[2];
  6391                           ;main.c: 43: int output = 0;
  6392  054D  0020               	movlb	0	; select bank0
  6393  054E  01E9               	clrf	main@output
  6394  054F  01EA               	clrf	main@output+1
  6395                           
  6396                           ;main.c: 45: int32_t outputTotal = 0;
  6397  0550  3000               	movlw	0
  6398  0551  0021               	movlb	1	; select bank1
  6399  0552  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6400  0553  3000               	movlw	0
  6401  0554  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6402  0555  3000               	movlw	0
  6403  0556  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6404  0557  3000               	movlw	0
  6405  0558  00D7               	movwf	main@outputTotal^(0+128)
  6406                           
  6407                           ;main.c: 47: char outputIndex = 0;
  6408  0559  0020               	movlb	0	; select bank0
  6409  055A  01EF               	clrf	main@outputIndex
  6410                           
  6411                           ;main.c: 49: int16_t outputSamples[40]= {0};
  6412  055B  3020               	movlw	low main@F13670
  6413  055C  0086               	movwf	6
  6414  055D  3002               	movlw	high main@F13670
  6415  055E  0087               	movwf	7
  6416  055F  3020               	movlw	low main@outputSamples
  6417  0560  0084               	movwf	4
  6418  0561  3001               	movlw	high main@outputSamples
  6419  0562  0085               	movwf	5
  6420  0563  3050               	movlw	80
  6421  0564  0021               	movlb	1	; select bank1
  6422  0565  00C9               	movwf	??_main^(0+128)
  6423  0566                     u3560:	
  6424  0566  0016               	moviw fsr1++
  6425  0567  001A               	movwi fsr0++
  6426  0568  0BC9               	decfsz	??_main^(0+128),f
  6427  0569  2D66               	goto	u3560
  6428                           
  6429                           ;main.c: 51: char holdOutput = 0;
  6430  056A  0020               	movlb	0	; select bank0
  6431  056B  01EB               	clrf	main@holdOutput
  6432                           
  6433                           ;main.c: 53: int currentTemperature = 750;
  6434  056C  30EE               	movlw	238
  6435  056D  0021               	movlb	1	; select bank1
  6436  056E  00D5               	movwf	main@currentTemperature^(0+128)
  6437  056F  3002               	movlw	2
  6438  0570  00D6               	movwf	(main@currentTemperature^(0+128)+1)
  6439                           
  6440                           ;main.c: 55: int lastTemperature = 750;
  6441  0571  30EE               	movlw	238
  6442  0572  0020               	movlb	0	; select bank0
  6443  0573  00ED               	movwf	main@lastTemperature
  6444  0574  3002               	movlw	2
  6445  0575  00EE               	movwf	main@lastTemperature+1
  6446                           
  6447                           ;main.c: 57: char lidOpenCount = 0;
  6448  0576  01EC               	clrf	main@lidOpenCount
  6449                           
  6450                           ;main.c: 61: char j = 0;
  6451  0577  0021               	movlb	1	; select bank1
  6452  0578  01E1               	clrf	main@j^(0+128)
  6453                           
  6454                           ;main.c: 63: char x = 0;
  6455  0579  0020               	movlb	0	; select bank0
  6456  057A  01E8               	clrf	main@x
  6457                           
  6458                           ;main.c: 65: int pidPeriodCounter = 0;
  6459  057B  0021               	movlb	1	; select bank1
  6460  057C  01D3               	clrf	main@pidPeriodCounter^(0+128)
  6461  057D  01D4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6462                           
  6463                           ;main.c: 67: extern int pidMaxOutput;
  6464                           ;main.c: 69: extern unsigned char loop;
  6465                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6466  057E  01DB               	clrf	main@dutyCycle6^(0+128)
  6467  057F  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6468                           
  6469                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6470  0580  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6471  0581  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6472  0582  0864               	movf	(_setpoint^(0+128)+2),w
  6473  0583  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6474  0584  3196  268B  3185   	fcall	_PWM7_LoadDutyValue
  6475                           
  6476                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6477  0587  300D               	movlw	13
  6478  0588  0021               	movlb	1	; select bank1
  6479  0589  00CB               	movwf	(??_main^(0+128)+2)
  6480  058A  302D               	movlw	45
  6481  058B  00CA               	movwf	(??_main^(0+128)+1)
  6482  058C  30E2               	movlw	226
  6483  058D  00C9               	movwf	??_main^(0+128)
  6484  058E                     u3697:	
  6485  058E  0BC9               	decfsz	??_main^(0+128),f
  6486  058F  2D8E               	goto	u3697
  6487  0590  0BCA               	decfsz	(??_main^(0+128)+1),f
  6488  0591  2D8E               	goto	u3697
  6489  0592  0BCB               	decfsz	(??_main^(0+128)+2),f
  6490  0593  2D8E               	goto	u3697
  6491  0594  3200               	nop2
  6492                           
  6493                           ;main.c: 94: LCD_Clear();
  6494  0595  3196  262E  3185   	fcall	_LCD_Clear
  6495  0598                     l3142:	
  6496                           ;main.c: 96: while (1)
  6497                           
  6498                           
  6499                           ;main.c: 97: {
  6500                           ;main.c: 98: if(loop>253)
  6501  0598  30FE               	movlw	254
  6502  0599  0021               	movlb	1	; select bank1
  6503  059A  026E               	subwf	_loop^(0+128),w
  6504  059B  1C03               	skipc
  6505  059C  2F05               	goto	l3210
  6506                           
  6507                           ;main.c: 99: {
  6508                           ;main.c: 100: PWM7_LoadDutyValue(setpoint[1]);
  6509  059D  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6510  059E  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6511  059F  0864               	movf	(_setpoint^(0+128)+2),w
  6512  05A0  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6513  05A1  3196  268B  3185   	fcall	_PWM7_LoadDutyValue
  6514                           
  6515                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6516  05A4  01F4               	clrf	LCD_Set_Cursor@y
  6517  05A5  3000               	movlw	0
  6518  05A6  3188  2076  3185   	fcall	_LCD_Set_Cursor
  6519  05A9  308E               	movlw	low (STR_6| (0+32768))
  6520  05AA  00F5               	movwf	LCD_Write_String@a
  6521  05AB  3090               	movlw	high (STR_6| (0+32768))
  6522  05AC  00F6               	movwf	LCD_Write_String@a+1
  6523  05AD  3196  26EA  3185   	fcall	_LCD_Write_String
  6524                           
  6525                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6526  05B0  01F4               	clrf	LCD_Set_Cursor@y
  6527  05B1  3005               	movlw	5
  6528  05B2  3188  2076  3185   	fcall	_LCD_Set_Cursor
  6529  05B5  0021               	movlb	1	; select bank1
  6530  05B6  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6531  05B7  00FA               	movwf	LCD_Write_Int@value+1
  6532  05B8  085F               	movf	(main@analogs^(0+128)+2),w
  6533  05B9  00F9               	movwf	LCD_Write_Int@value
  6534  05BA  01FB               	clrf	LCD_Write_Int@fieldLength
  6535  05BB  03FB               	decf	LCD_Write_Int@fieldLength,f
  6536  05BC  01FC               	clrf	LCD_Write_Int@numPlaces
  6537  05BD  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6538  05BE  01FD               	clrf	LCD_Write_Int@sign
  6539  05BF  318D  2566  3185   	fcall	_LCD_Write_Int
  6540                           
  6541                           ;main.c: 104: LCD_Write_Char(0);
  6542  05C2  3000               	movlw	0
  6543  05C3  3197  27A3  3185   	fcall	_LCD_Write_Char
  6544                           
  6545                           ;main.c: 105: LCD_Write_Char(70);
  6546  05C6  3046               	movlw	70
  6547  05C7  3197  27A3  3185   	fcall	_LCD_Write_Char
  6548                           
  6549                           ;main.c: 106: LCD_Write_Char(' ');
  6550  05CA  3020               	movlw	32
  6551  05CB  3197  27A3  3185   	fcall	_LCD_Write_Char
  6552                           
  6553                           ;main.c: 107: LCD_Write_Char(' ');
  6554  05CE  3020               	movlw	32
  6555  05CF  3197  27A3  3185   	fcall	_LCD_Write_Char
  6556                           
  6557                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6558  05D2  01F4               	clrf	LCD_Set_Cursor@y
  6559  05D3  0AF4               	incf	LCD_Set_Cursor@y,f
  6560  05D4  3000               	movlw	0
  6561  05D5  3188  2076  3185   	fcall	_LCD_Set_Cursor
  6562  05D8  3086               	movlw	low (STR_7| (0+32768))
  6563  05D9  00F5               	movwf	LCD_Write_String@a
  6564  05DA  3090               	movlw	high (STR_7| (0+32768))
  6565  05DB  00F6               	movwf	LCD_Write_String@a+1
  6566  05DC  3196  26EA  3185   	fcall	_LCD_Write_String
  6567                           
  6568                           ;main.c: 110: LCD_Write_Char(' ');
  6569  05DF  3020               	movlw	32
  6570  05E0  3197  27A3  3185   	fcall	_LCD_Write_Char
  6571                           
  6572                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  6573  05E3  0021               	movlb	1	; select bank1
  6574  05E4  085C               	movf	(main@dutyCycle6+1)^(0+128),w
  6575  05E5  00FA               	movwf	LCD_Write_Int@value+1
  6576  05E6  085B               	movf	main@dutyCycle6^(0+128),w
  6577  05E7  00F9               	movwf	LCD_Write_Int@value
  6578  05E8  3005               	movlw	5
  6579  05E9  00C9               	movwf	??_main^(0+128)
  6580  05EA  0849               	movf	??_main^(0+128),w
  6581  05EB  00FB               	movwf	LCD_Write_Int@fieldLength
  6582  05EC  01FC               	clrf	LCD_Write_Int@numPlaces
  6583  05ED  01FD               	clrf	LCD_Write_Int@sign
  6584  05EE  318D  2566  3185   	fcall	_LCD_Write_Int
  6585                           
  6586                           ;main.c: 116: if(holdOutput==0)
  6587  05F1  0020               	movlb	0	; select bank0
  6588  05F2  086B               	movf	main@holdOutput,w
  6589  05F3  1D03               	btfss	3,2
  6590  05F4  2E98               	goto	l3184
  6591                           
  6592                           ;main.c: 117: {
  6593                           ;main.c: 118: output = PID_Calculate(setpoint[0],analogs[1]);
  6594  05F5  0021               	movlb	1	; select bank1
  6595  05F6  0863               	movf	(_setpoint+1)^(0+128),w
  6596  05F7  00F7               	movwf	PID_Calculate@setpoint+1
  6597  05F8  0862               	movf	_setpoint^(0+128),w
  6598  05F9  00F6               	movwf	PID_Calculate@setpoint
  6599  05FA  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6600  05FB  00F9               	movwf	PID_Calculate@temp+1
  6601  05FC  085F               	movf	(main@analogs^(0+128)+2),w
  6602  05FD  00F8               	movwf	PID_Calculate@temp
  6603  05FE  318E  262F  3185   	fcall	_PID_Calculate
  6604  0601  0877               	movf	?_PID_Calculate+1,w
  6605  0602  0020               	movlb	0	; select bank0
  6606  0603  00EA               	movwf	main@output+1
  6607  0604  0876               	movf	?_PID_Calculate,w
  6608  0605  00E9               	movwf	main@output
  6609                           
  6610                           ;main.c: 119: outputTotal = outputTotal - outputSamples[outputIndex];
  6611  0606  0021               	movlb	1	; select bank1
  6612  0607  0857               	movf	main@outputTotal^(0+128),w
  6613  0608  00C9               	movwf	??_main^(0+128)
  6614  0609  0858               	movf	(main@outputTotal+1)^(0+128),w
  6615  060A  00CA               	movwf	(??_main^(0+128)+1)
  6616  060B  0859               	movf	(main@outputTotal+2)^(0+128),w
  6617  060C  00CB               	movwf	(??_main^(0+128)+2)
  6618  060D  085A               	movf	(main@outputTotal+3)^(0+128),w
  6619  060E  00CC               	movwf	(??_main^(0+128)+3)
  6620  060F  0020               	movlb	0	; select bank0
  6621  0610  356F               	lslf	main@outputIndex,w
  6622  0611  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6623  0612  0086               	movwf	6
  6624  0613  3001               	movlw	1	; select bank2/3
  6625  0614  0087               	movwf	7
  6626  0615  3F40               	moviw [0]fsr1
  6627  0616  0021               	movlb	1	; select bank1
  6628  0617  00CD               	movwf	(??_main+4)^(0+128)
  6629  0618  3F41               	moviw [1]fsr1
  6630  0619  00CE               	movwf	((??_main+4)^(0+128)+1)
  6631  061A  084D               	movf	(??_main+4)^(0+128),w
  6632  061B  00CF               	movwf	(??_main+6)^(0+128)
  6633  061C  084E               	movf	(??_main+5)^(0+128),w
  6634  061D  00D0               	movwf	((??_main+6)^(0+128)+1)
  6635  061E  3000               	movlw	0
  6636  061F  1BD0               	btfsc	((??_main+6)^(0+128)+1),7
  6637  0620  30FF               	movlw	255
  6638  0621  00D1               	movwf	((??_main+6)^(0+128)+2)
  6639  0622  00D2               	movwf	((??_main+6)^(0+128)+3)
  6640  0623  09CF               	comf	(??_main+6)^(0+128),f
  6641  0624  09D0               	comf	((??_main+6)^(0+128)+1),f
  6642  0625  09D1               	comf	((??_main+6)^(0+128)+2),f
  6643  0626  09D2               	comf	((??_main+6)^(0+128)+3),f
  6644  0627  0ACF               	incf	(??_main+6)^(0+128),f
  6645  0628  1903               	skipnz
  6646  0629  0AD0               	incf	((??_main+6)^(0+128)+1),f
  6647  062A  1903               	skipnz
  6648  062B  0AD1               	incf	((??_main+6)^(0+128)+2),f
  6649  062C  1903               	skipnz
  6650  062D  0AD2               	incf	((??_main+6)^(0+128)+3),f
  6651  062E  084F               	movf	(??_main+6)^(0+128),w
  6652  062F  07C9               	addwf	??_main^(0+128),f
  6653  0630  0850               	movf	(??_main+7)^(0+128),w
  6654  0631  3DCA               	addwfc	(??_main^(0+128)+1),f
  6655  0632  0851               	movf	(??_main+8)^(0+128),w
  6656  0633  3DCB               	addwfc	(??_main^(0+128)+2),f
  6657  0634  0852               	movf	(??_main+9)^(0+128),w
  6658  0635  3DCC               	addwfc	(??_main^(0+128)+3),f
  6659  0636  084C               	movf	(??_main+3)^(0+128),w
  6660  0637  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6661  0638  084B               	movf	(??_main+2)^(0+128),w
  6662  0639  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6663  063A  084A               	movf	(??_main+1)^(0+128),w
  6664  063B  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6665  063C  0849               	movf	??_main^(0+128),w
  6666  063D  00D7               	movwf	main@outputTotal^(0+128)
  6667                           
  6668                           ;main.c: 120: outputSamples[outputIndex] = output;
  6669  063E  0020               	movlb	0	; select bank0
  6670  063F  356F               	lslf	main@outputIndex,w
  6671  0640  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6672  0641  0086               	movwf	6
  6673  0642  3001               	movlw	1	; select bank2/3
  6674  0643  0087               	movwf	7
  6675  0644  0869               	movf	main@output,w
  6676  0645  3FC0               	movwi [0]fsr1
  6677  0646  086A               	movf	main@output+1,w
  6678  0647  3FC1               	movwi [1]fsr1
  6679                           
  6680                           ;main.c: 121: outputTotal = outputTotal + outputSamples[outputIndex];
  6681  0648  0021               	movlb	1	; select bank1
  6682  0649  0857               	movf	main@outputTotal^(0+128),w
  6683  064A  00C9               	movwf	??_main^(0+128)
  6684  064B  0858               	movf	(main@outputTotal+1)^(0+128),w
  6685  064C  00CA               	movwf	(??_main^(0+128)+1)
  6686  064D  0859               	movf	(main@outputTotal+2)^(0+128),w
  6687  064E  00CB               	movwf	(??_main^(0+128)+2)
  6688  064F  085A               	movf	(main@outputTotal+3)^(0+128),w
  6689  0650  00CC               	movwf	(??_main^(0+128)+3)
  6690  0651  0020               	movlb	0	; select bank0
  6691  0652  356F               	lslf	main@outputIndex,w
  6692  0653  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6693  0654  0086               	movwf	6
  6694  0655  3001               	movlw	1	; select bank2/3
  6695  0656  0087               	movwf	7
  6696  0657  3F40               	moviw [0]fsr1
  6697  0658  0021               	movlb	1	; select bank1
  6698  0659  00CD               	movwf	(??_main+4)^(0+128)
  6699  065A  3F41               	moviw [1]fsr1
  6700  065B  00CE               	movwf	((??_main+4)^(0+128)+1)
  6701  065C  084D               	movf	(??_main+4)^(0+128),w
  6702  065D  00CF               	movwf	(??_main+6)^(0+128)
  6703  065E  084E               	movf	(??_main+5)^(0+128),w
  6704  065F  00D0               	movwf	((??_main+6)^(0+128)+1)
  6705  0660  3000               	movlw	0
  6706  0661  1BD0               	btfsc	((??_main+6)^(0+128)+1),7
  6707  0662  30FF               	movlw	255
  6708  0663  00D1               	movwf	((??_main+6)^(0+128)+2)
  6709  0664  00D2               	movwf	((??_main+6)^(0+128)+3)
  6710  0665  084F               	movf	(??_main+6)^(0+128),w
  6711  0666  07C9               	addwf	??_main^(0+128),f
  6712  0667  0850               	movf	(??_main+7)^(0+128),w
  6713  0668  3DCA               	addwfc	(??_main^(0+128)+1),f
  6714  0669  0851               	movf	(??_main+8)^(0+128),w
  6715  066A  3DCB               	addwfc	(??_main^(0+128)+2),f
  6716  066B  0852               	movf	(??_main+9)^(0+128),w
  6717  066C  3DCC               	addwfc	(??_main^(0+128)+3),f
  6718  066D  084C               	movf	(??_main+3)^(0+128),w
  6719  066E  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6720  066F  084B               	movf	(??_main+2)^(0+128),w
  6721  0670  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6722  0671  084A               	movf	(??_main+1)^(0+128),w
  6723  0672  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6724  0673  0849               	movf	??_main^(0+128),w
  6725  0674  00D7               	movwf	main@outputTotal^(0+128)
  6726                           
  6727                           ;main.c: 122: dutyCycle6 = outputTotal/40;
  6728  0675  3000               	movlw	0
  6729  0676  00F3               	movwf	___aldiv@divisor+3
  6730  0677  3000               	movlw	0
  6731  0678  00F2               	movwf	___aldiv@divisor+2
  6732  0679  3000               	movlw	0
  6733  067A  00F1               	movwf	___aldiv@divisor+1
  6734  067B  3028               	movlw	40
  6735  067C  00F0               	movwf	___aldiv@divisor
  6736  067D  085A               	movf	(main@outputTotal+3)^(0+128),w
  6737  067E  00F7               	movwf	___aldiv@dividend+3
  6738  067F  0859               	movf	(main@outputTotal+2)^(0+128),w
  6739  0680  00F6               	movwf	___aldiv@dividend+2
  6740  0681  0858               	movf	(main@outputTotal+1)^(0+128),w
  6741  0682  00F5               	movwf	___aldiv@dividend+1
  6742  0683  0857               	movf	main@outputTotal^(0+128),w
  6743  0684  00F4               	movwf	___aldiv@dividend
  6744  0685  318A  2251  3185   	fcall	___aldiv
  6745  0688  0871               	movf	?___aldiv+1,w
  6746  0689  0021               	movlb	1	; select bank1
  6747  068A  00DC               	movwf	(main@dutyCycle6+1)^(0+128)
  6748  068B  0870               	movf	?___aldiv,w
  6749  068C  00DB               	movwf	main@dutyCycle6^(0+128)
  6750                           
  6751                           ;main.c: 124: outputIndex+=1;
  6752  068D  3001               	movlw	1
  6753  068E  00C9               	movwf	??_main^(0+128)
  6754  068F  0849               	movf	??_main^(0+128),w
  6755  0690  0020               	movlb	0	; select bank0
  6756  0691  07EF               	addwf	main@outputIndex,f
  6757                           
  6758                           ;main.c: 125: if(outputIndex >= 40)outputIndex = 0;
  6759  0692  3028               	movlw	40
  6760  0693  026F               	subwf	main@outputIndex,w
  6761  0694  1C03               	skipc
  6762  0695  2E9E               	goto	l3188
  6763  0696  01EF               	clrf	main@outputIndex
  6764                           
  6765                           ;main.c: 126: }
  6766  0697  2E9E               	goto	l3188
  6767  0698                     l3184:	
  6768                           
  6769                           ;main.c: 127: else
  6770                           ;main.c: 128: {
  6771                           ;main.c: 129: dutyCycle6=0;
  6772  0698  0021               	movlb	1	; select bank1
  6773  0699  01DB               	clrf	main@dutyCycle6^(0+128)
  6774  069A  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6775                           
  6776                           ;main.c: 130: holdOutput-=1;
  6777  069B  3001               	movlw	1
  6778  069C  0020               	movlb	0	; select bank0
  6779  069D  02EB               	subwf	main@holdOutput,f
  6780  069E                     l3188:	
  6781                           
  6782                           ;main.c: 131: }
  6783                           ;main.c: 133: currentTemperature=analogs[1];
  6784  069E  0021               	movlb	1	; select bank1
  6785  069F  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6786  06A0  00D6               	movwf	(main@currentTemperature+1)^(0+128)
  6787  06A1  085F               	movf	(main@analogs^(0+128)+2),w
  6788  06A2  00D5               	movwf	main@currentTemperature^(0+128)
  6789                           
  6790                           ;main.c: 135: if(lidOpenCount<10)
  6791  06A3  300A               	movlw	10
  6792  06A4  0020               	movlb	0	; select bank0
  6793  06A5  026C               	subwf	main@lidOpenCount,w
  6794  06A6  1803               	skipnc
  6795  06A7  2EAF               	goto	l3194
  6796                           
  6797                           ;main.c: 136: {
  6798                           ;main.c: 137: lidOpenCount+=1;
  6799  06A8  3001               	movlw	1
  6800  06A9  0021               	movlb	1	; select bank1
  6801  06AA  00C9               	movwf	??_main^(0+128)
  6802  06AB  0849               	movf	??_main^(0+128),w
  6803  06AC  0020               	movlb	0	; select bank0
  6804  06AD  07EC               	addwf	main@lidOpenCount,f
  6805                           
  6806                           ;main.c: 138: }
  6807  06AE  2EB8               	goto	l3198
  6808  06AF                     l3194:	
  6809                           
  6810                           ;main.c: 139: else
  6811                           ;main.c: 140: {
  6812                           ;main.c: 141: lastTemperature=currentTemperature;
  6813  06AF  0021               	movlb	1	; select bank1
  6814  06B0  0856               	movf	(main@currentTemperature+1)^(0+128),w
  6815  06B1  0020               	movlb	0	; select bank0
  6816  06B2  00EE               	movwf	main@lastTemperature+1
  6817  06B3  0021               	movlb	1	; select bank1
  6818  06B4  0855               	movf	main@currentTemperature^(0+128),w
  6819  06B5  0020               	movlb	0	; select bank0
  6820  06B6  00ED               	movwf	main@lastTemperature
  6821                           
  6822                           ;main.c: 142: lidOpenCount=0;
  6823  06B7  01EC               	clrf	main@lidOpenCount
  6824  06B8                     l3198:	
  6825                           
  6826                           ;main.c: 143: }
  6827                           ;main.c: 145: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6828  06B8  0021               	movlb	1	; select bank1
  6829  06B9  0955               	comf	main@currentTemperature^(0+128),w
  6830  06BA  00C9               	movwf	??_main^(0+128)
  6831  06BB  0956               	comf	(main@currentTemperature+1)^(0+128),w
  6832  06BC  00CA               	movwf	(??_main^(0+128)+1)
  6833  06BD  0AC9               	incf	??_main^(0+128),f
  6834  06BE  1903               	skipnz
  6835  06BF  0ACA               	incf	(??_main^(0+128)+1),f
  6836  06C0  0020               	movlb	0	; select bank0
  6837  06C1  086D               	movf	main@lastTemperature,w
  6838  06C2  0021               	movlb	1	; select bank1
  6839  06C3  0749               	addwf	??_main^(0+128),w
  6840  06C4  00CB               	movwf	(??_main+2)^(0+128)
  6841  06C5  0020               	movlb	0	; select bank0
  6842  06C6  086E               	movf	main@lastTemperature+1,w
  6843  06C7  0021               	movlb	1	; select bank1
  6844  06C8  3D4A               	addwfc	(??_main+1)^(0+128),w
  6845  06C9  00CC               	movwf	(??_main+3)^(0+128)
  6846  06CA  084C               	movf	(??_main+3)^(0+128),w
  6847  06CB  3A80               	xorlw	128
  6848  06CC  00CD               	movwf	(??_main+4)^(0+128)
  6849  06CD  3080               	movlw	128
  6850  06CE  024D               	subwf	(??_main+4)^(0+128),w
  6851  06CF  1D03               	skipz
  6852  06D0  2ED3               	goto	u3615
  6853  06D1  3065               	movlw	101
  6854  06D2  024B               	subwf	(??_main+2)^(0+128),w
  6855  06D3                     u3615:	
  6856  06D3  1803               	skipnc
  6857  06D4  2EF2               	goto	l3202
  6858  06D5  0021               	movlb	1	; select bank1
  6859  06D6  0955               	comf	main@currentTemperature^(0+128),w
  6860  06D7  00C9               	movwf	??_main^(0+128)
  6861  06D8  0956               	comf	(main@currentTemperature+1)^(0+128),w
  6862  06D9  00CA               	movwf	(??_main^(0+128)+1)
  6863  06DA  0AC9               	incf	??_main^(0+128),f
  6864  06DB  1903               	skipnz
  6865  06DC  0ACA               	incf	(??_main^(0+128)+1),f
  6866  06DD  0020               	movlb	0	; select bank0
  6867  06DE  086D               	movf	main@lastTemperature,w
  6868  06DF  0021               	movlb	1	; select bank1
  6869  06E0  0749               	addwf	??_main^(0+128),w
  6870  06E1  00CB               	movwf	(??_main+2)^(0+128)
  6871  06E2  0020               	movlb	0	; select bank0
  6872  06E3  086E               	movf	main@lastTemperature+1,w
  6873  06E4  0021               	movlb	1	; select bank1
  6874  06E5  3D4A               	addwfc	(??_main+1)^(0+128),w
  6875  06E6  00CC               	movwf	(??_main+3)^(0+128)
  6876  06E7  084C               	movf	(??_main+3)^(0+128),w
  6877  06E8  3A80               	xorlw	128
  6878  06E9  00CD               	movwf	(??_main+4)^(0+128)
  6879  06EA  307F               	movlw	127
  6880  06EB  024D               	subwf	(??_main+4)^(0+128),w
  6881  06EC  1D03               	skipz
  6882  06ED  2EF0               	goto	u3625
  6883  06EE  309C               	movlw	156
  6884  06EF  024B               	subwf	(??_main+2)^(0+128),w
  6885  06F0                     u3625:	
  6886  06F0  1803               	skipnc
  6887  06F1  2EFA               	goto	l3206
  6888  06F2                     l3202:	
  6889                           
  6890                           ;main.c: 146: {
  6891                           ;main.c: 147: dutyCycle6=0;
  6892  06F2  0021               	movlb	1	; select bank1
  6893  06F3  01DB               	clrf	main@dutyCycle6^(0+128)
  6894  06F4  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6895                           
  6896                           ;main.c: 148: holdOutput=60;
  6897  06F5  303C               	movlw	60
  6898  06F6  00C9               	movwf	??_main^(0+128)
  6899  06F7  0849               	movf	??_main^(0+128),w
  6900  06F8  0020               	movlb	0	; select bank0
  6901  06F9  00EB               	movwf	main@holdOutput
  6902  06FA                     l3206:	
  6903                           
  6904                           ;main.c: 149: }
  6905                           ;main.c: 151: if(dutyCycle6<50)dutyCycle6=0;
  6906  06FA  3000               	movlw	0
  6907  06FB  0021               	movlb	1	; select bank1
  6908  06FC  025C               	subwf	(main@dutyCycle6+1)^(0+128),w
  6909  06FD  3032               	movlw	50
  6910  06FE  1903               	skipnz
  6911  06FF  025B               	subwf	main@dutyCycle6^(0+128),w
  6912  0700  1803               	skipnc
  6913  0701  2F04               	goto	l433
  6914  0702  01DB               	clrf	main@dutyCycle6^(0+128)
  6915  0703  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6916  0704                     l433:	
  6917                           
  6918                           ;main.c: 153: loop=0;
  6919  0704  01EE               	clrf	_loop^(0+128)
  6920  0705                     l3210:	
  6921                           
  6922                           ;main.c: 154: }
  6923                           ;main.c: 156: pidPeriodCounter+=1;
  6924  0705  3001               	movlw	1
  6925  0706  07D3               	addwf	main@pidPeriodCounter^(0+128),f
  6926  0707  3000               	movlw	0
  6927  0708  3DD4               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6928                           
  6929                           ;main.c: 158: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6930  0709  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  6931  070A  3A80               	xorlw	128
  6932  070B  00C9               	movwf	??_main^(0+128)
  6933  070C  0854               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6934  070D  3A80               	xorlw	128
  6935  070E  0249               	subwf	??_main^(0+128),w
  6936  070F  1D03               	skipz
  6937  0710  2F13               	goto	u3645
  6938  0711  0853               	movf	main@pidPeriodCounter^(0+128),w
  6939  0712  026C               	subwf	_pidMaxOutput^(0+128),w
  6940  0713                     u3645:	
  6941  0713  1803               	skipnc
  6942  0714  2F18               	goto	l3216
  6943  0715  0021               	movlb	1	; select bank1
  6944  0716  01D3               	clrf	main@pidPeriodCounter^(0+128)
  6945  0717  01D4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6946  0718                     l3216:	
  6947                           
  6948                           ;main.c: 160: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6949  0718  0021               	movlb	1	; select bank1
  6950  0719  085C               	movf	(main@dutyCycle6+1)^(0+128),w
  6951  071A  0254               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6952  071B  1D03               	skipz
  6953  071C  2F1F               	goto	u3655
  6954  071D  085B               	movf	main@dutyCycle6^(0+128),w
  6955  071E  0253               	subwf	main@pidPeriodCounter^(0+128),w
  6956  071F                     u3655:	
  6957  071F  1803               	skipnc
  6958  0720  2F24               	goto	l435
  6959  0721  0020               	movlb	0	; select bank0
  6960  0722  1518               	bsf	24,2	;volatile
  6961  0723  2F26               	goto	l3220
  6962  0724                     l435:	
  6963                           
  6964                           ;main.c: 161: else LATC2=0;
  6965  0724  0020               	movlb	0	; select bank0
  6966  0725  1118               	bcf	24,2	;volatile
  6967  0726                     l3220:	
  6968                           
  6969                           ;main.c: 163: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6970  0726  0021               	movlb	1	; select bank1
  6971  0727  01E1               	clrf	main@j^(0+128)
  6972  0728  3002               	movlw	2
  6973  0729  0261               	subwf	main@j^(0+128),w
  6974  072A  1803               	btfsc	3,0
  6975  072B  2F4C               	goto	l3232
  6976  072C                     l3226:	
  6977  072C  0861               	movf	main@j^(0+128),w
  6978  072D  00C9               	movwf	??_main^(0+128)
  6979  072E  01CA               	clrf	(??_main^(0+128)+1)
  6980  072F  0849               	movf	??_main^(0+128),w
  6981  0730  0020               	movlb	0	; select bank0
  6982  0731  00A6               	movwf	readAnalog@channel
  6983  0732  0021               	movlb	1	; select bank1
  6984  0733  084A               	movf	(??_main+1)^(0+128),w
  6985  0734  0020               	movlb	0	; select bank0
  6986  0735  00A7               	movwf	readAnalog@channel+1
  6987  0736  3181  21BD  3185   	fcall	_readAnalog
  6988  0739  0021               	movlb	1	; select bank1
  6989  073A  3561               	lslf	main@j^(0+128),w
  6990  073B  3EDD               	addlw	(low (main@analogs| 0))& (0+255)
  6991  073C  0086               	movwf	6
  6992  073D  0187               	clrf	7
  6993  073E  0020               	movlb	0	; select bank0
  6994  073F  0826               	movf	?_readAnalog,w
  6995  0740  3FC0               	movwi [0]fsr1
  6996  0741  0827               	movf	?_readAnalog+1,w
  6997  0742  3FC1               	movwi [1]fsr1
  6998  0743  3001               	movlw	1
  6999  0744  0021               	movlb	1	; select bank1
  7000  0745  00C9               	movwf	??_main^(0+128)
  7001  0746  0849               	movf	??_main^(0+128),w
  7002  0747  07E1               	addwf	main@j^(0+128),f
  7003  0748  3002               	movlw	2
  7004  0749  0261               	subwf	main@j^(0+128),w
  7005  074A  1C03               	skipc
  7006  074B  2F2C               	goto	l3226
  7007  074C                     l3232:	
  7008                           
  7009                           ;main.c: 165: analogs[0]=tempCalc(analogs[0]);
  7010  074C  085E               	movf	(main@analogs+1)^(0+128),w
  7011  074D  0020               	movlb	0	; select bank0
  7012  074E  00DE               	movwf	tempCalc@analogValue+1
  7013  074F  0021               	movlb	1	; select bank1
  7014  0750  085D               	movf	main@analogs^(0+128),w
  7015  0751  0020               	movlb	0	; select bank0
  7016  0752  00DD               	movwf	tempCalc@analogValue
  7017  0753  3180  20A0  3185   	fcall	_tempCalc
  7018  0756  0020               	movlb	0	; select bank0
  7019  0757  085E               	movf	?_tempCalc+1,w
  7020  0758  0021               	movlb	1	; select bank1
  7021  0759  00DE               	movwf	(main@analogs+1)^(0+128)
  7022  075A  0020               	movlb	0	; select bank0
  7023  075B  085D               	movf	?_tempCalc,w
  7024  075C  0021               	movlb	1	; select bank1
  7025  075D  00DD               	movwf	main@analogs^(0+128)
  7026                           
  7027                           ;main.c: 167: analogs[1]=tempCalc(analogs[1]);
  7028  075E  0860               	movf	((main@analogs+1)^(0+128)+2),w
  7029  075F  0020               	movlb	0	; select bank0
  7030  0760  00DE               	movwf	tempCalc@analogValue+1
  7031  0761  0021               	movlb	1	; select bank1
  7032  0762  085F               	movf	(main@analogs^(0+128)+2),w
  7033  0763  0020               	movlb	0	; select bank0
  7034  0764  00DD               	movwf	tempCalc@analogValue
  7035  0765  3180  20A0  3185   	fcall	_tempCalc
  7036  0768  0020               	movlb	0	; select bank0
  7037  0769  085E               	movf	?_tempCalc+1,w
  7038  076A  0021               	movlb	1	; select bank1
  7039  076B  00E0               	movwf	((main@analogs+1)^(0+128)+2)
  7040  076C  0020               	movlb	0	; select bank0
  7041  076D  085D               	movf	?_tempCalc,w
  7042  076E  0021               	movlb	1	; select bank1
  7043  076F  00DF               	movwf	(main@analogs^(0+128)+2)
  7044                           
  7045                           ;main.c: 170: if(RB2==1)
  7046  0770  0020               	movlb	0	; select bank0
  7047  0771  1D0D               	btfss	13,2	;volatile
  7048  0772  2FB1               	goto	l3250
  7049                           
  7050                           ;main.c: 171: {
  7051                           ;main.c: 172: LCD_Clear();
  7052  0773  3196  262E  3185   	fcall	_LCD_Clear
  7053                           
  7054                           ;main.c: 173: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7055  0776  01F4               	clrf	LCD_Set_Cursor@y
  7056  0777  3000               	movlw	0
  7057  0778  3188  2076  3185   	fcall	_LCD_Set_Cursor
  7058  077B  301B               	movlw	low (STR_8| (0+32768))
  7059  077C  00F5               	movwf	LCD_Write_String@a
  7060  077D  3090               	movlw	high (STR_8| (0+32768))
  7061  077E  00F6               	movwf	LCD_Write_String@a+1
  7062  077F  3196  26EA  3185   	fcall	_LCD_Write_String
  7063                           
  7064                           ;main.c: 174: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7065  0782  01F4               	clrf	LCD_Set_Cursor@y
  7066  0783  0AF4               	incf	LCD_Set_Cursor@y,f
  7067  0784  3000               	movlw	0
  7068  0785  3188  2076  3185   	fcall	_LCD_Set_Cursor
  7069  0788  302C               	movlw	low (STR_9| (0+32768))
  7070  0789  00F5               	movwf	LCD_Write_String@a
  7071  078A  3090               	movlw	high (STR_9| (0+32768))
  7072  078B  00F6               	movwf	LCD_Write_String@a+1
  7073  078C  3196  26EA  3185   	fcall	_LCD_Write_String
  7074                           
  7075                           ;main.c: 175: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7076  078F  303D               	movlw	61
  7077  0790  0021               	movlb	1	; select bank1
  7078  0791  00CB               	movwf	(??_main^(0+128)+2)
  7079  0792  30E1               	movlw	225
  7080  0793  00CA               	movwf	(??_main^(0+128)+1)
  7081  0794  307A               	movlw	122
  7082  0795  00C9               	movwf	??_main^(0+128)
  7083  0796                     u3707:	
  7084  0796  0BC9               	decfsz	??_main^(0+128),f
  7085  0797  2F96               	goto	u3707
  7086  0798  0BCA               	decfsz	(??_main^(0+128)+1),f
  7087  0799  2F96               	goto	u3707
  7088  079A  0BCB               	decfsz	(??_main^(0+128)+2),f
  7089  079B  2F96               	goto	u3707
  7090  079C  3200               	nop2
  7091                           
  7092                           ;main.c: 176: LCD_Clear();
  7093  079D  3196  262E  3185   	fcall	_LCD_Clear
  7094                           
  7095                           ;main.c: 177: menuChoice();
  7096  07A0  3182  22FA  3185   	fcall	_menuChoice
  7097                           
  7098                           ;main.c: 178: _delay((unsigned long)((500)*(32000000/4000.0)));
  7099  07A3  3015               	movlw	21
  7100  07A4  0021               	movlb	1	; select bank1
  7101  07A5  00CB               	movwf	(??_main^(0+128)+2)
  7102  07A6  304B               	movlw	75
  7103  07A7  00CA               	movwf	(??_main^(0+128)+1)
  7104  07A8  30D1               	movlw	209
  7105  07A9  00C9               	movwf	??_main^(0+128)
  7106  07AA                     u3717:	
  7107  07AA  0BC9               	decfsz	??_main^(0+128),f
  7108  07AB  2FAA               	goto	u3717
  7109  07AC  0BCA               	decfsz	(??_main^(0+128)+1),f
  7110  07AD  2FAA               	goto	u3717
  7111  07AE  0BCB               	decfsz	(??_main^(0+128)+2),f
  7112  07AF  2FAA               	goto	u3717
  7113  07B0  0000               	nop
  7114  07B1                     l3250:	
  7115                           
  7116                           ;main.c: 179: }
  7117                           ;main.c: 415: loop+=1;
  7118  07B1  3001               	movlw	1
  7119  07B2  0021               	movlb	1	; select bank1
  7120  07B3  00C9               	movwf	??_main^(0+128)
  7121  07B4  0849               	movf	??_main^(0+128),w
  7122  07B5  07EE               	addwf	_loop^(0+128),f
  7123  07B6  2D98               	goto	l3142
  7124  07B7                     __end_of_main:	
  7125                           
  7126                           	psect	text1
  7127  00A0                     __ptext1:	
  7128 ;; *************** function _tempCalc *****************
  7129 ;; Defined at:
  7130 ;;		line 4 in file "tempCalc.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  analogValue     2   61[BANK0 ] int 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  steinhart       3   69[BANK0 ] float 
  7135 ;;  R               3   63[BANK0 ] float 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  2   61[BANK0 ] int 
  7138 ;; Registers used:
  7139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;Total ram usage:       11 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    4
  7152 ;; This function calls:
  7153 ;;		___awtoft
  7154 ;;		___ftadd
  7155 ;;		___ftdiv
  7156 ;;		___ftmul
  7157 ;;		___ftsub
  7158 ;;		___fttol
  7159 ;;		_log
  7160 ;; This function is called by:
  7161 ;;		_main
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _tempCalc
  7167  00A0                     _tempCalc:	
  7168                           
  7169                           ;tempCalc.c: 6: float R, steinhart;
  7170                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7174  00A0  3000               	movlw	0
  7175  00A1  0020               	movlb	0	; select bank0
  7176  00A2  00C0               	movwf	___ftadd@f1
  7177  00A3  3080               	movlw	128
  7178  00A4  00C1               	movwf	___ftadd@f1+1
  7179  00A5  30BF               	movlw	191
  7180  00A6  00C2               	movwf	___ftadd@f1+2
  7181  00A7  085E               	movf	tempCalc@analogValue+1,w
  7182  00A8  00F9               	movwf	___awtoft@c+1
  7183  00A9  085D               	movf	tempCalc@analogValue,w
  7184  00AA  00F8               	movwf	___awtoft@c
  7185  00AB  3197  273D  3180   	fcall	___awtoft
  7186  00AE  0878               	movf	?___awtoft,w
  7187  00AF  0020               	movlb	0	; select bank0
  7188  00B0  00B0               	movwf	___ftdiv@f2
  7189  00B1  0879               	movf	?___awtoft+1,w
  7190  00B2  00B1               	movwf	___ftdiv@f2+1
  7191  00B3  087A               	movf	?___awtoft+2,w
  7192  00B4  00B2               	movwf	___ftdiv@f2+2
  7193  00B5  30C0               	movlw	192
  7194  00B6  00B3               	movwf	___ftdiv@f1
  7195  00B7  307F               	movlw	127
  7196  00B8  00B4               	movwf	___ftdiv@f1+1
  7197  00B9  3044               	movlw	68
  7198  00BA  00B5               	movwf	___ftdiv@f1+2
  7199  00BB  318B  2359  3180   	fcall	___ftdiv
  7200  00BE  0020               	movlb	0	; select bank0
  7201  00BF  0830               	movf	?___ftdiv,w
  7202  00C0  00C3               	movwf	___ftadd@f2
  7203  00C1  0831               	movf	?___ftdiv+1,w
  7204  00C2  00C4               	movwf	___ftadd@f2+1
  7205  00C3  0832               	movf	?___ftdiv+2,w
  7206  00C4  00C5               	movwf	___ftadd@f2+2
  7207  00C5  318F  270A  3180   	fcall	___ftadd
  7208  00C8  0020               	movlb	0	; select bank0
  7209  00C9  0840               	movf	?___ftadd,w
  7210  00CA  00E2               	movwf	_tempCalc$1013
  7211  00CB  0841               	movf	?___ftadd+1,w
  7212  00CC  00E3               	movwf	_tempCalc$1013+1
  7213  00CD  0842               	movf	?___ftadd+2,w
  7214  00CE  00E4               	movwf	_tempCalc$1013+2
  7215                           
  7216                           ;tempCalc.c: 6: float R, steinhart;
  7217                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7218  00CF  0862               	movf	_tempCalc$1013,w
  7219  00D0  00B0               	movwf	___ftdiv@f2
  7220  00D1  0863               	movf	_tempCalc$1013+1,w
  7221  00D2  00B1               	movwf	___ftdiv@f2+1
  7222  00D3  0864               	movf	_tempCalc$1013+2,w
  7223  00D4  00B2               	movwf	___ftdiv@f2+2
  7224  00D5  3088               	movlw	136
  7225  00D6  00B3               	movwf	___ftdiv@f1
  7226  00D7  301A               	movlw	26
  7227  00D8  00B4               	movwf	___ftdiv@f1+1
  7228  00D9  3046               	movlw	70
  7229  00DA  00B5               	movwf	___ftdiv@f1+2
  7230  00DB  318B  2359  3180   	fcall	___ftdiv
  7231  00DE  0020               	movlb	0	; select bank0
  7232  00DF  0830               	movf	?___ftdiv,w
  7233  00E0  00DF               	movwf	tempCalc@R
  7234  00E1  0831               	movf	?___ftdiv+1,w
  7235  00E2  00E0               	movwf	tempCalc@R+1
  7236  00E3  0832               	movf	?___ftdiv+2,w
  7237  00E4  00E1               	movwf	tempCalc@R+2
  7238                           
  7239                           ;tempCalc.c: 10: steinhart = R /9990;
  7240  00E5  3018               	movlw	24
  7241  00E6  00B0               	movwf	___ftdiv@f2
  7242  00E7  301C               	movlw	28
  7243  00E8  00B1               	movwf	___ftdiv@f2+1
  7244  00E9  3046               	movlw	70
  7245  00EA  00B2               	movwf	___ftdiv@f2+2
  7246  00EB  085F               	movf	tempCalc@R,w
  7247  00EC  00B3               	movwf	___ftdiv@f1
  7248  00ED  0860               	movf	tempCalc@R+1,w
  7249  00EE  00B4               	movwf	___ftdiv@f1+1
  7250  00EF  0861               	movf	tempCalc@R+2,w
  7251  00F0  00B5               	movwf	___ftdiv@f1+2
  7252  00F1  318B  2359  3180   	fcall	___ftdiv
  7253  00F4  0020               	movlb	0	; select bank0
  7254  00F5  0830               	movf	?___ftdiv,w
  7255  00F6  00E5               	movwf	tempCalc@steinhart
  7256  00F7  0831               	movf	?___ftdiv+1,w
  7257  00F8  00E6               	movwf	tempCalc@steinhart+1
  7258  00F9  0832               	movf	?___ftdiv+2,w
  7259  00FA  00E7               	movwf	tempCalc@steinhart+2
  7260                           
  7261                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7262  00FB  0865               	movf	tempCalc@steinhart,w
  7263  00FC  00D7               	movwf	log@x
  7264  00FD  0866               	movf	tempCalc@steinhart+1,w
  7265  00FE  00D8               	movwf	log@x+1
  7266  00FF  0867               	movf	tempCalc@steinhart+2,w
  7267  0100  00D9               	movwf	log@x+2
  7268  0101  318C  2402  3180   	fcall	_log
  7269  0104  0020               	movlb	0	; select bank0
  7270  0105  0857               	movf	?_log,w
  7271  0106  00E5               	movwf	tempCalc@steinhart
  7272  0107  0858               	movf	?_log+1,w
  7273  0108  00E6               	movwf	tempCalc@steinhart+1
  7274  0109  0859               	movf	?_log+2,w
  7275  010A  00E7               	movwf	tempCalc@steinhart+2
  7276                           
  7277                           ;tempCalc.c: 12: steinhart /= 4030;
  7278  010B  30E0               	movlw	224
  7279  010C  00B0               	movwf	___ftdiv@f2
  7280  010D  307B               	movlw	123
  7281  010E  00B1               	movwf	___ftdiv@f2+1
  7282  010F  3045               	movlw	69
  7283  0110  00B2               	movwf	___ftdiv@f2+2
  7284  0111  0865               	movf	tempCalc@steinhart,w
  7285  0112  00B3               	movwf	___ftdiv@f1
  7286  0113  0866               	movf	tempCalc@steinhart+1,w
  7287  0114  00B4               	movwf	___ftdiv@f1+1
  7288  0115  0867               	movf	tempCalc@steinhart+2,w
  7289  0116  00B5               	movwf	___ftdiv@f1+2
  7290  0117  318B  2359  3180   	fcall	___ftdiv
  7291  011A  0020               	movlb	0	; select bank0
  7292  011B  0830               	movf	?___ftdiv,w
  7293  011C  00E5               	movwf	tempCalc@steinhart
  7294  011D  0831               	movf	?___ftdiv+1,w
  7295  011E  00E6               	movwf	tempCalc@steinhart+1
  7296  011F  0832               	movf	?___ftdiv+2,w
  7297  0120  00E7               	movwf	tempCalc@steinhart+2
  7298                           
  7299                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7300  0121  30CF               	movlw	207
  7301  0122  00C0               	movwf	___ftadd@f1
  7302  0123  305B               	movlw	91
  7303  0124  00C1               	movwf	___ftadd@f1+1
  7304  0125  303B               	movlw	59
  7305  0126  00C2               	movwf	___ftadd@f1+2
  7306  0127  0865               	movf	tempCalc@steinhart,w
  7307  0128  00C3               	movwf	___ftadd@f2
  7308  0129  0866               	movf	tempCalc@steinhart+1,w
  7309  012A  00C4               	movwf	___ftadd@f2+1
  7310  012B  0867               	movf	tempCalc@steinhart+2,w
  7311  012C  00C5               	movwf	___ftadd@f2+2
  7312  012D  318F  270A  3180   	fcall	___ftadd
  7313  0130  0020               	movlb	0	; select bank0
  7314  0131  0840               	movf	?___ftadd,w
  7315  0132  00E5               	movwf	tempCalc@steinhart
  7316  0133  0841               	movf	?___ftadd+1,w
  7317  0134  00E6               	movwf	tempCalc@steinhart+1
  7318  0135  0842               	movf	?___ftadd+2,w
  7319  0136  00E7               	movwf	tempCalc@steinhart+2
  7320                           
  7321                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7322  0137  0865               	movf	tempCalc@steinhart,w
  7323  0138  00B0               	movwf	___ftdiv@f2
  7324  0139  0866               	movf	tempCalc@steinhart+1,w
  7325  013A  00B1               	movwf	___ftdiv@f2+1
  7326  013B  0867               	movf	tempCalc@steinhart+2,w
  7327  013C  00B2               	movwf	___ftdiv@f2+2
  7328  013D  3000               	movlw	0
  7329  013E  00B3               	movwf	___ftdiv@f1
  7330  013F  3080               	movlw	128
  7331  0140  00B4               	movwf	___ftdiv@f1+1
  7332  0141  303F               	movlw	63
  7333  0142  00B5               	movwf	___ftdiv@f1+2
  7334  0143  318B  2359  3180   	fcall	___ftdiv
  7335  0146  0020               	movlb	0	; select bank0
  7336  0147  0830               	movf	?___ftdiv,w
  7337  0148  00E5               	movwf	tempCalc@steinhart
  7338  0149  0831               	movf	?___ftdiv+1,w
  7339  014A  00E6               	movwf	tempCalc@steinhart+1
  7340  014B  0832               	movf	?___ftdiv+2,w
  7341  014C  00E7               	movwf	tempCalc@steinhart+2
  7342                           
  7343                           ;tempCalc.c: 17: steinhart -= 273.15;
  7344  014D  3093               	movlw	147
  7345  014E  00CD               	movwf	___ftsub@f2
  7346  014F  3088               	movlw	136
  7347  0150  00CE               	movwf	___ftsub@f2+1
  7348  0151  3043               	movlw	67
  7349  0152  00CF               	movwf	___ftsub@f2+2
  7350  0153  0865               	movf	tempCalc@steinhart,w
  7351  0154  00D0               	movwf	___ftsub@f1
  7352  0155  0866               	movf	tempCalc@steinhart+1,w
  7353  0156  00D1               	movwf	___ftsub@f1+1
  7354  0157  0867               	movf	tempCalc@steinhart+2,w
  7355  0158  00D2               	movwf	___ftsub@f1+2
  7356  0159  3197  271F  3180   	fcall	___ftsub
  7357  015C  0020               	movlb	0	; select bank0
  7358  015D  084D               	movf	?___ftsub,w
  7359  015E  00E5               	movwf	tempCalc@steinhart
  7360  015F  084E               	movf	?___ftsub+1,w
  7361  0160  00E6               	movwf	tempCalc@steinhart+1
  7362  0161  084F               	movf	?___ftsub+2,w
  7363  0162  00E7               	movwf	tempCalc@steinhart+2
  7364                           
  7365                           ;tempCalc.c: 19: steinhart*=10;
  7366  0163  3000               	movlw	0
  7367  0164  00A0               	movwf	___ftmul@f1
  7368  0165  3020               	movlw	32
  7369  0166  00A1               	movwf	___ftmul@f1+1
  7370  0167  3041               	movlw	65
  7371  0168  00A2               	movwf	___ftmul@f1+2
  7372  0169  0865               	movf	tempCalc@steinhart,w
  7373  016A  00A3               	movwf	___ftmul@f2
  7374  016B  0866               	movf	tempCalc@steinhart+1,w
  7375  016C  00A4               	movwf	___ftmul@f2+1
  7376  016D  0867               	movf	tempCalc@steinhart+2,w
  7377  016E  00A5               	movwf	___ftmul@f2+2
  7378  016F  318C  24B2  3180   	fcall	___ftmul
  7379  0172  0020               	movlb	0	; select bank0
  7380  0173  0820               	movf	?___ftmul,w
  7381  0174  00E5               	movwf	tempCalc@steinhart
  7382  0175  0821               	movf	?___ftmul+1,w
  7383  0176  00E6               	movwf	tempCalc@steinhart+1
  7384  0177  0822               	movf	?___ftmul+2,w
  7385  0178  00E7               	movwf	tempCalc@steinhart+2
  7386                           
  7387                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7388  0179  3000               	movlw	0
  7389  017A  00C0               	movwf	___ftadd@f1
  7390  017B  30A0               	movlw	160
  7391  017C  00C1               	movwf	___ftadd@f1+1
  7392  017D  3043               	movlw	67
  7393  017E  00C2               	movwf	___ftadd@f1+2
  7394  017F  3000               	movlw	0
  7395  0180  00B0               	movwf	___ftdiv@f2
  7396  0181  30A0               	movlw	160
  7397  0182  00B1               	movwf	___ftdiv@f2+1
  7398  0183  3040               	movlw	64
  7399  0184  00B2               	movwf	___ftdiv@f2+2
  7400  0185  3000               	movlw	0
  7401  0186  00A0               	movwf	___ftmul@f1
  7402  0187  3010               	movlw	16
  7403  0188  00A1               	movwf	___ftmul@f1+1
  7404  0189  3041               	movlw	65
  7405  018A  00A2               	movwf	___ftmul@f1+2
  7406  018B  0865               	movf	tempCalc@steinhart,w
  7407  018C  00A3               	movwf	___ftmul@f2
  7408  018D  0866               	movf	tempCalc@steinhart+1,w
  7409  018E  00A4               	movwf	___ftmul@f2+1
  7410  018F  0867               	movf	tempCalc@steinhart+2,w
  7411  0190  00A5               	movwf	___ftmul@f2+2
  7412  0191  318C  24B2  3180   	fcall	___ftmul
  7413  0194  0020               	movlb	0	; select bank0
  7414  0195  0820               	movf	?___ftmul,w
  7415  0196  00B3               	movwf	___ftdiv@f1
  7416  0197  0821               	movf	?___ftmul+1,w
  7417  0198  00B4               	movwf	___ftdiv@f1+1
  7418  0199  0822               	movf	?___ftmul+2,w
  7419  019A  00B5               	movwf	___ftdiv@f1+2
  7420  019B  318B  2359  3180   	fcall	___ftdiv
  7421  019E  0020               	movlb	0	; select bank0
  7422  019F  0830               	movf	?___ftdiv,w
  7423  01A0  00C3               	movwf	___ftadd@f2
  7424  01A1  0831               	movf	?___ftdiv+1,w
  7425  01A2  00C4               	movwf	___ftadd@f2+1
  7426  01A3  0832               	movf	?___ftdiv+2,w
  7427  01A4  00C5               	movwf	___ftadd@f2+2
  7428  01A5  318F  270A  3180   	fcall	___ftadd
  7429  01A8  0020               	movlb	0	; select bank0
  7430  01A9  0840               	movf	?___ftadd,w
  7431  01AA  00E5               	movwf	tempCalc@steinhart
  7432  01AB  0841               	movf	?___ftadd+1,w
  7433  01AC  00E6               	movwf	tempCalc@steinhart+1
  7434  01AD  0842               	movf	?___ftadd+2,w
  7435  01AE  00E7               	movwf	tempCalc@steinhart+2
  7436                           
  7437                           ;tempCalc.c: 23: return (int)steinhart;
  7438  01AF  0865               	movf	tempCalc@steinhart,w
  7439  01B0  00F0               	movwf	___fttol@f1
  7440  01B1  0866               	movf	tempCalc@steinhart+1,w
  7441  01B2  00F1               	movwf	___fttol@f1+1
  7442  01B3  0867               	movf	tempCalc@steinhart+2,w
  7443  01B4  00F2               	movwf	___fttol@f1+2
  7444  01B5  318A  22D3         	fcall	___fttol
  7445  01B7  0871               	movf	?___fttol+1,w
  7446  01B8  0020               	movlb	0	; select bank0
  7447  01B9  00DE               	movwf	?_tempCalc+1
  7448  01BA  0870               	movf	?___fttol,w
  7449  01BB  00DD               	movwf	?_tempCalc
  7450  01BC  0008               	return
  7451  01BD                     __end_of_tempCalc:	
  7452                           
  7453                           	psect	text2
  7454  0C02                     __ptext2:	
  7455 ;; *************** function _log *****************
  7456 ;; Defined at:
  7457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  x               3   55[BANK0 ] int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  exponent        2   59[BANK0 ] int 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  3   55[BANK0 ] int 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;Total ram usage:        6 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    3
  7478 ;; This function calls:
  7479 ;;		___awtoft
  7480 ;;		___ftadd
  7481 ;;		___ftge
  7482 ;;		___ftmul
  7483 ;;		_eval_poly
  7484 ;;		_frexp
  7485 ;; This function is called by:
  7486 ;;		_tempCalc
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _log
  7492  0C02                     _log:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7496  0C02  0020               	movlb	0	; select bank0
  7497  0C03  0857               	movf	log@x,w
  7498  0C04  00F0               	movwf	___ftge@ff1
  7499  0C05  0858               	movf	log@x+1,w
  7500  0C06  00F1               	movwf	___ftge@ff1+1
  7501  0C07  0859               	movf	log@x+2,w
  7502  0C08  00F2               	movwf	___ftge@ff1+2
  7503  0C09  3000               	movlw	0
  7504  0C0A  00F3               	movwf	___ftge@ff2
  7505  0C0B  3000               	movlw	0
  7506  0C0C  00F4               	movwf	___ftge@ff2+1
  7507  0C0D  3000               	movlw	0
  7508  0C0E  00F5               	movwf	___ftge@ff2+2
  7509  0C0F  3188  2000  318C   	fcall	___ftge
  7510  0C12  1803               	btfsc	3,0
  7511  0C13  2C21               	goto	l2678
  7512  0C14  3021               	movlw	33
  7513  0C15  0021               	movlb	1	; select bank1
  7514  0C16  00AC               	movwf	_errno^(0+128)
  7515  0C17  3000               	movlw	0
  7516  0C18  00AD               	movwf	(_errno^(0+128)+1)
  7517  0C19  3000               	movlw	0
  7518  0C1A  0020               	movlb	0	; select bank0
  7519  0C1B  00D7               	movwf	?_log
  7520  0C1C  3000               	movlw	0
  7521  0C1D  00D8               	movwf	?_log+1
  7522  0C1E  3000               	movlw	0
  7523  0C1F  00D9               	movwf	?_log+2
  7524  0C20  0008               	return
  7525  0C21                     l2678:	
  7526  0C21  0020               	movlb	0	; select bank0
  7527  0C22  0859               	movf	log@x+2,w
  7528  0C23  0458               	iorwf	log@x+1,w
  7529  0C24  0457               	iorwf	log@x,w
  7530  0C25  1D03               	skipz
  7531  0C26  2C34               	goto	l2684
  7532  0C27  3022               	movlw	34
  7533  0C28  0021               	movlb	1	; select bank1
  7534  0C29  00AC               	movwf	_errno^(0+128)
  7535  0C2A  3000               	movlw	0
  7536  0C2B  00AD               	movwf	(_errno^(0+128)+1)
  7537  0C2C  3000               	movlw	0
  7538  0C2D  0020               	movlb	0	; select bank0
  7539  0C2E  00D7               	movwf	?_log
  7540  0C2F  3000               	movlw	0
  7541  0C30  00D8               	movwf	?_log+1
  7542  0C31  3000               	movlw	0
  7543  0C32  00D9               	movwf	?_log+2
  7544  0C33  0008               	return
  7545  0C34                     l2684:	
  7546  0C34  3000               	movlw	0
  7547  0C35  00C0               	movwf	___ftadd@f1
  7548  0C36  3080               	movlw	128
  7549  0C37  00C1               	movwf	___ftadd@f1+1
  7550  0C38  30BF               	movlw	191
  7551  0C39  00C2               	movwf	___ftadd@f1+2
  7552  0C3A  3000               	movlw	0
  7553  0C3B  00A0               	movwf	___ftmul@f1
  7554  0C3C  3000               	movlw	0
  7555  0C3D  00A1               	movwf	___ftmul@f1+1
  7556  0C3E  3040               	movlw	64
  7557  0C3F  00A2               	movwf	___ftmul@f1+2
  7558  0C40  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7559  0C41  00DA               	movwf	??_log
  7560  0C42  085A               	movf	??_log,w
  7561  0C43  00F3               	movwf	frexp@eptr
  7562  0C44  0857               	movf	log@x,w
  7563  0C45  00F0               	movwf	frexp@value
  7564  0C46  0858               	movf	log@x+1,w
  7565  0C47  00F1               	movwf	frexp@value+1
  7566  0C48  0859               	movf	log@x+2,w
  7567  0C49  00F2               	movwf	frexp@value+2
  7568  0C4A  3188  203B  318C   	fcall	_frexp
  7569  0C4D  0870               	movf	?_frexp,w
  7570  0C4E  0020               	movlb	0	; select bank0
  7571  0C4F  00A3               	movwf	___ftmul@f2
  7572  0C50  0871               	movf	?_frexp+1,w
  7573  0C51  00A4               	movwf	___ftmul@f2+1
  7574  0C52  0872               	movf	?_frexp+2,w
  7575  0C53  00A5               	movwf	___ftmul@f2+2
  7576  0C54  318C  24B2  318C   	fcall	___ftmul
  7577  0C57  0020               	movlb	0	; select bank0
  7578  0C58  0820               	movf	?___ftmul,w
  7579  0C59  00C3               	movwf	___ftadd@f2
  7580  0C5A  0821               	movf	?___ftmul+1,w
  7581  0C5B  00C4               	movwf	___ftadd@f2+1
  7582  0C5C  0822               	movf	?___ftmul+2,w
  7583  0C5D  00C5               	movwf	___ftadd@f2+2
  7584  0C5E  318F  270A  318C   	fcall	___ftadd
  7585  0C61  0020               	movlb	0	; select bank0
  7586  0C62  0840               	movf	?___ftadd,w
  7587  0C63  00D7               	movwf	log@x
  7588  0C64  0841               	movf	?___ftadd+1,w
  7589  0C65  00D8               	movwf	log@x+1
  7590  0C66  0842               	movf	?___ftadd+2,w
  7591  0C67  00D9               	movwf	log@x+2
  7592  0C68  30FF               	movlw	255
  7593  0C69  07DB               	addwf	log@exponent,f
  7594  0C6A  30FF               	movlw	255
  7595  0C6B  3DDC               	addwfc	log@exponent+1,f
  7596  0C6C  0857               	movf	log@x,w
  7597  0C6D  00CD               	movwf	eval_poly@x
  7598  0C6E  0858               	movf	log@x+1,w
  7599  0C6F  00CE               	movwf	eval_poly@x+1
  7600  0C70  0859               	movf	log@x+2,w
  7601  0C71  00CF               	movwf	eval_poly@x+2
  7602  0C72  3000               	movlw	low (log@coeff| (0+32768))
  7603  0C73  00D0               	movwf	eval_poly@d
  7604  0C74  3090               	movlw	high (log@coeff| (0+32768))
  7605  0C75  00D1               	movwf	eval_poly@d+1
  7606  0C76  3008               	movlw	8
  7607  0C77  00D2               	movwf	eval_poly@n
  7608  0C78  3000               	movlw	0
  7609  0C79  00D3               	movwf	eval_poly@n+1
  7610  0C7A  3189  218D  318C   	fcall	_eval_poly
  7611  0C7D  0020               	movlb	0	; select bank0
  7612  0C7E  084D               	movf	?_eval_poly,w
  7613  0C7F  00D7               	movwf	log@x
  7614  0C80  084E               	movf	?_eval_poly+1,w
  7615  0C81  00D8               	movwf	log@x+1
  7616  0C82  084F               	movf	?_eval_poly+2,w
  7617  0C83  00D9               	movwf	log@x+2
  7618  0C84  0857               	movf	log@x,w
  7619  0C85  00C0               	movwf	___ftadd@f1
  7620  0C86  0858               	movf	log@x+1,w
  7621  0C87  00C1               	movwf	___ftadd@f1+1
  7622  0C88  0859               	movf	log@x+2,w
  7623  0C89  00C2               	movwf	___ftadd@f1+2
  7624  0C8A  3072               	movlw	114
  7625  0C8B  00A0               	movwf	___ftmul@f1
  7626  0C8C  3031               	movlw	49
  7627  0C8D  00A1               	movwf	___ftmul@f1+1
  7628  0C8E  303F               	movlw	63
  7629  0C8F  00A2               	movwf	___ftmul@f1+2
  7630  0C90  085C               	movf	log@exponent+1,w
  7631  0C91  00F9               	movwf	___awtoft@c+1
  7632  0C92  085B               	movf	log@exponent,w
  7633  0C93  00F8               	movwf	___awtoft@c
  7634  0C94  3197  273D  318C   	fcall	___awtoft
  7635  0C97  0878               	movf	?___awtoft,w
  7636  0C98  0020               	movlb	0	; select bank0
  7637  0C99  00A3               	movwf	___ftmul@f2
  7638  0C9A  0879               	movf	?___awtoft+1,w
  7639  0C9B  00A4               	movwf	___ftmul@f2+1
  7640  0C9C  087A               	movf	?___awtoft+2,w
  7641  0C9D  00A5               	movwf	___ftmul@f2+2
  7642  0C9E  318C  24B2  318C   	fcall	___ftmul
  7643  0CA1  0020               	movlb	0	; select bank0
  7644  0CA2  0820               	movf	?___ftmul,w
  7645  0CA3  00C3               	movwf	___ftadd@f2
  7646  0CA4  0821               	movf	?___ftmul+1,w
  7647  0CA5  00C4               	movwf	___ftadd@f2+1
  7648  0CA6  0822               	movf	?___ftmul+2,w
  7649  0CA7  00C5               	movwf	___ftadd@f2+2
  7650  0CA8  318F  270A         	fcall	___ftadd
  7651  0CAA  0020               	movlb	0	; select bank0
  7652  0CAB  0840               	movf	?___ftadd,w
  7653  0CAC  00D7               	movwf	?_log
  7654  0CAD  0841               	movf	?___ftadd+1,w
  7655  0CAE  00D8               	movwf	?_log+1
  7656  0CAF  0842               	movf	?___ftadd+2,w
  7657  0CB0  00D9               	movwf	?_log+2
  7658  0CB1  0008               	return
  7659  0CB2                     __end_of_log:	
  7660                           
  7661                           	psect	text3
  7662  083B                     __ptext3:	
  7663 ;; *************** function _frexp *****************
  7664 ;; Defined at:
  7665 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  value           3    0[COMMON] int 
  7668 ;;  eptr            1    3[COMMON] PTR int 
  7669 ;;		 -> log@exponent(2), 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  3    0[COMMON] PTR int 
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        6 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_log
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _frexp
  7696  083B                     _frexp:	
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7700  083B  0872               	movf	frexp@value+2,w
  7701  083C  0471               	iorwf	frexp@value+1,w
  7702  083D  0470               	iorwf	frexp@value,w
  7703  083E  1D03               	skipz
  7704  083F  284D               	goto	l2442
  7705  0840  0873               	movf	frexp@eptr,w
  7706  0841  0086               	movwf	6
  7707  0842  0187               	clrf	7
  7708  0843  3000               	movlw	0
  7709  0844  3FC0               	movwi [0]fsr1
  7710  0845  3FC1               	movwi [1]fsr1
  7711  0846  3000               	movlw	0
  7712  0847  00F0               	movwf	?_frexp
  7713  0848  3000               	movlw	0
  7714  0849  00F1               	movwf	?_frexp+1
  7715  084A  3000               	movlw	0
  7716  084B  00F2               	movwf	?_frexp+2
  7717  084C  0008               	return
  7718  084D                     l2442:	
  7719  084D  0872               	movf	frexp@value+2,w
  7720  084E  397F               	andlw	127
  7721  084F  00F4               	movwf	??_frexp
  7722  0850  01F5               	clrf	??_frexp+1
  7723  0851  35F4               	lslf	??_frexp,f
  7724  0852  0DF5               	rlf	??_frexp+1,f
  7725  0853  0873               	movf	frexp@eptr,w
  7726  0854  0086               	movwf	6
  7727  0855  0187               	clrf	7
  7728  0856  0874               	movf	??_frexp,w
  7729  0857  3FC0               	movwi [0]fsr1
  7730  0858  0875               	movf	??_frexp+1,w
  7731  0859  3FC1               	movwi [1]fsr1
  7732  085A  0D71               	rlf	frexp@value+1,w
  7733  085B  0D71               	rlf	frexp@value+1,w
  7734  085C  3901               	andlw	1
  7735  085D  00F4               	movwf	??_frexp
  7736  085E  01F5               	clrf	??_frexp+1
  7737  085F  0873               	movf	frexp@eptr,w
  7738  0860  0086               	movwf	6
  7739  0861  0187               	clrf	7
  7740  0862  0874               	movf	??_frexp,w
  7741  0863  0481               	iorwf	1,f
  7742  0864  3141               	addfsr 1,1
  7743  0865  0875               	movf	??_frexp+1,w
  7744  0866  0481               	iorwf	1,f
  7745  0867  0873               	movf	frexp@eptr,w
  7746  0868  0086               	movwf	6
  7747  0869  0187               	clrf	7
  7748  086A  3082               	movlw	130
  7749  086B  0781               	addwf	1,f
  7750  086C  3141               	addfsr 1,1
  7751  086D  30FF               	movlw	255
  7752  086E  3D81               	addwfc	1,f
  7753  086F  317F               	addfsr 1,-1
  7754  0870  0872               	movf	frexp@value+2,w
  7755  0871  3980               	andlw	-128
  7756  0872  383F               	iorlw	63
  7757  0873  00F2               	movwf	frexp@value+2
  7758  0874  13F1               	bcf	frexp@value+1,7
  7759  0875  0008               	return
  7760  0876                     __end_of_frexp:	
  7761                           
  7762                           	psect	text4
  7763  098D                     __ptext4:	
  7764 ;; *************** function _eval_poly *****************
  7765 ;; Defined at:
  7766 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  x               3   45[BANK0 ] PTR int 
  7769 ;;  d               2   48[BANK0 ] PTR const 
  7770 ;;		 -> log@coeff(27), 
  7771 ;;  n               2   50[BANK0 ] int 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  res             3   52[BANK0 ] int 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  3   45[BANK0 ] int 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7783 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;Total ram usage:       10 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    2
  7790 ;; This function calls:
  7791 ;;		___ftadd
  7792 ;;		___ftmul
  7793 ;;		___wmul
  7794 ;; This function is called by:
  7795 ;;		_log
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _eval_poly
  7801  098D                     _eval_poly:	
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7805  098D  0020               	movlb	0	; select bank0
  7806  098E  0853               	movf	eval_poly@n+1,w
  7807  098F  00F1               	movwf	___wmul@multiplier+1
  7808  0990  0852               	movf	eval_poly@n,w
  7809  0991  00F0               	movwf	___wmul@multiplier
  7810  0992  3003               	movlw	3
  7811  0993  00F2               	movwf	___wmul@multiplicand
  7812  0994  3000               	movlw	0
  7813  0995  00F3               	movwf	___wmul@multiplicand+1
  7814  0996  3197  2704  3189   	fcall	___wmul
  7815  0999  0020               	movlb	0	; select bank0
  7816  099A  0850               	movf	eval_poly@d,w
  7817  099B  0770               	addwf	?___wmul,w
  7818  099C  0084               	movwf	4
  7819  099D  0851               	movf	eval_poly@d+1,w
  7820  099E  3D71               	addwfc	?___wmul+1,w
  7821  099F  0085               	movwf	5
  7822  09A0  3F00               	moviw [0]fsr0
  7823  09A1  00D4               	movwf	eval_poly@res
  7824  09A2  3F01               	moviw [1]fsr0
  7825  09A3  00D5               	movwf	eval_poly@res+1
  7826  09A4  3F02               	moviw [2]fsr0
  7827  09A5                     L1:	
  7828  09A5  00D6               	movwf	eval_poly@res+2
  7829  09A6  0852               	movf	eval_poly@n,w
  7830  09A7  0453               	iorwf	eval_poly@n+1,w
  7831  09A8  1903               	btfsc	3,2
  7832  09A9  29E6               	goto	l2460
  7833  09AA  30FF               	movlw	255
  7834  09AB  07D2               	addwf	eval_poly@n,f
  7835  09AC  30FF               	movlw	255
  7836  09AD  3DD3               	addwfc	eval_poly@n+1,f
  7837  09AE  0853               	movf	eval_poly@n+1,w
  7838  09AF  00F1               	movwf	___wmul@multiplier+1
  7839  09B0  0852               	movf	eval_poly@n,w
  7840  09B1  00F0               	movwf	___wmul@multiplier
  7841  09B2  3003               	movlw	3
  7842  09B3  00F2               	movwf	___wmul@multiplicand
  7843  09B4  3000               	movlw	0
  7844  09B5  00F3               	movwf	___wmul@multiplicand+1
  7845  09B6  3197  2704  3189   	fcall	___wmul
  7846  09B9  0020               	movlb	0	; select bank0
  7847  09BA  0850               	movf	eval_poly@d,w
  7848  09BB  0770               	addwf	?___wmul,w
  7849  09BC  0084               	movwf	4
  7850  09BD  0851               	movf	eval_poly@d+1,w
  7851  09BE  3D71               	addwfc	?___wmul+1,w
  7852  09BF  0085               	movwf	5
  7853  09C0  3F00               	moviw [0]fsr0
  7854  09C1  00C0               	movwf	___ftadd@f1
  7855  09C2  3F01               	moviw [1]fsr0
  7856  09C3  00C1               	movwf	___ftadd@f1+1
  7857  09C4  3F02               	moviw [2]fsr0
  7858  09C5  00C2               	movwf	___ftadd@f1+2
  7859  09C6  0854               	movf	eval_poly@res,w
  7860  09C7  00A0               	movwf	___ftmul@f1
  7861  09C8  0855               	movf	eval_poly@res+1,w
  7862  09C9  00A1               	movwf	___ftmul@f1+1
  7863  09CA  0856               	movf	eval_poly@res+2,w
  7864  09CB  00A2               	movwf	___ftmul@f1+2
  7865  09CC  084D               	movf	eval_poly@x,w
  7866  09CD  00A3               	movwf	___ftmul@f2
  7867  09CE  084E               	movf	eval_poly@x+1,w
  7868  09CF  00A4               	movwf	___ftmul@f2+1
  7869  09D0  084F               	movf	eval_poly@x+2,w
  7870  09D1  00A5               	movwf	___ftmul@f2+2
  7871  09D2  318C  24B2  3189   	fcall	___ftmul
  7872  09D5  0020               	movlb	0	; select bank0
  7873  09D6  0820               	movf	?___ftmul,w
  7874  09D7  00C3               	movwf	___ftadd@f2
  7875  09D8  0821               	movf	?___ftmul+1,w
  7876  09D9  00C4               	movwf	___ftadd@f2+1
  7877  09DA  0822               	movf	?___ftmul+2,w
  7878  09DB  00C5               	movwf	___ftadd@f2+2
  7879  09DC  318F  270A  3189   	fcall	___ftadd
  7880  09DF  0020               	movlb	0	; select bank0
  7881  09E0  0840               	movf	?___ftadd,w
  7882  09E1  00D4               	movwf	eval_poly@res
  7883  09E2  0841               	movf	?___ftadd+1,w
  7884  09E3  00D5               	movwf	eval_poly@res+1
  7885  09E4  0842               	movf	?___ftadd+2,w
  7886  09E5  29A5               	goto	L1
  7887  09E6                     l2460:	
  7888  09E6  0854               	movf	eval_poly@res,w
  7889  09E7  00CD               	movwf	?_eval_poly
  7890  09E8  0855               	movf	eval_poly@res+1,w
  7891  09E9  00CE               	movwf	?_eval_poly+1
  7892  09EA  0856               	movf	eval_poly@res+2,w
  7893  09EB  00CF               	movwf	?_eval_poly+2
  7894  09EC  0008               	return
  7895  09ED                     __end_of_eval_poly:	
  7896                           
  7897                           	psect	text5
  7898  0CB2                     __ptext5:	
  7899 ;; *************** function ___ftmul *****************
  7900 ;; Defined at:
  7901 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  f1              3    0[BANK0 ] float 
  7904 ;;  f2              3    3[BANK0 ] float 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7907 ;;  sign            1   15[BANK0 ] unsigned char 
  7908 ;;  cntr            1   14[BANK0 ] unsigned char 
  7909 ;;  exp             1   10[BANK0 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  3    0[BANK0 ] float 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7919 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;Total ram usage:       16 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    1
  7926 ;; This function calls:
  7927 ;;		___ftpack
  7928 ;; This function is called by:
  7929 ;;		_tempCalc
  7930 ;;		_log
  7931 ;;		_eval_poly
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function ___ftmul
  7937  0CB2                     ___ftmul:	
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7941  0CB2  0020               	movlb	0	; select bank0
  7942  0CB3  0820               	movf	___ftmul@f1,w
  7943  0CB4  00A6               	movwf	??___ftmul
  7944  0CB5  0821               	movf	___ftmul@f1+1,w
  7945  0CB6  00A7               	movwf	??___ftmul+1
  7946  0CB7  0822               	movf	___ftmul@f1+2,w
  7947  0CB8  00A8               	movwf	??___ftmul+2
  7948  0CB9  1003               	clrc
  7949  0CBA  0D27               	rlf	??___ftmul+1,w
  7950  0CBB  0D28               	rlf	??___ftmul+2,w
  7951  0CBC  00A9               	movwf	??___ftmul+3
  7952  0CBD  0829               	movf	??___ftmul+3,w
  7953  0CBE  00AA               	movwf	___ftmul@exp
  7954  0CBF  082A               	movf	___ftmul@exp,w
  7955  0CC0  1D03               	btfss	3,2
  7956  0CC1  2CC9               	goto	l2246
  7957  0CC2  3000               	movlw	0
  7958  0CC3  00A0               	movwf	?___ftmul
  7959  0CC4  3000               	movlw	0
  7960  0CC5  00A1               	movwf	?___ftmul+1
  7961  0CC6  3000               	movlw	0
  7962  0CC7  00A2               	movwf	?___ftmul+2
  7963  0CC8  0008               	return
  7964  0CC9                     l2246:	
  7965  0CC9  0823               	movf	___ftmul@f2,w
  7966  0CCA  00A6               	movwf	??___ftmul
  7967  0CCB  0824               	movf	___ftmul@f2+1,w
  7968  0CCC  00A7               	movwf	??___ftmul+1
  7969  0CCD  0825               	movf	___ftmul@f2+2,w
  7970  0CCE  00A8               	movwf	??___ftmul+2
  7971  0CCF  1003               	clrc
  7972  0CD0  0D27               	rlf	??___ftmul+1,w
  7973  0CD1  0D28               	rlf	??___ftmul+2,w
  7974  0CD2  00A9               	movwf	??___ftmul+3
  7975  0CD3  0829               	movf	??___ftmul+3,w
  7976  0CD4  00AF               	movwf	___ftmul@sign
  7977  0CD5  082F               	movf	___ftmul@sign,w
  7978  0CD6  1D03               	btfss	3,2
  7979  0CD7  2CDF               	goto	l2252
  7980  0CD8  3000               	movlw	0
  7981  0CD9  00A0               	movwf	?___ftmul
  7982  0CDA  3000               	movlw	0
  7983  0CDB  00A1               	movwf	?___ftmul+1
  7984  0CDC  3000               	movlw	0
  7985  0CDD  00A2               	movwf	?___ftmul+2
  7986  0CDE  0008               	return
  7987  0CDF                     l2252:	
  7988  0CDF  082F               	movf	___ftmul@sign,w
  7989  0CE0  3E7B               	addlw	123
  7990  0CE1  00A6               	movwf	??___ftmul
  7991  0CE2  0826               	movf	??___ftmul,w
  7992  0CE3  07AA               	addwf	___ftmul@exp,f
  7993  0CE4  0820               	movf	___ftmul@f1,w
  7994  0CE5  00A6               	movwf	??___ftmul
  7995  0CE6  0821               	movf	___ftmul@f1+1,w
  7996  0CE7  00A7               	movwf	??___ftmul+1
  7997  0CE8  0822               	movf	___ftmul@f1+2,w
  7998  0CE9  00A8               	movwf	??___ftmul+2
  7999  0CEA  3010               	movlw	16
  8000  0CEB                     u2305:	
  8001  0CEB  36A8               	lsrf	??___ftmul+2,f
  8002  0CEC  0CA7               	rrf	??___ftmul+1,f
  8003  0CED  0CA6               	rrf	??___ftmul,f
  8004  0CEE  0B89               	decfsz	9,f
  8005  0CEF  2CEB               	goto	u2305
  8006  0CF0  0826               	movf	??___ftmul,w
  8007  0CF1  00A9               	movwf	??___ftmul+3
  8008  0CF2  0829               	movf	??___ftmul+3,w
  8009  0CF3  00AF               	movwf	___ftmul@sign
  8010  0CF4  0823               	movf	___ftmul@f2,w
  8011  0CF5  00A6               	movwf	??___ftmul
  8012  0CF6  0824               	movf	___ftmul@f2+1,w
  8013  0CF7  00A7               	movwf	??___ftmul+1
  8014  0CF8  0825               	movf	___ftmul@f2+2,w
  8015  0CF9  00A8               	movwf	??___ftmul+2
  8016  0CFA  3010               	movlw	16
  8017  0CFB                     u2315:	
  8018  0CFB  36A8               	lsrf	??___ftmul+2,f
  8019  0CFC  0CA7               	rrf	??___ftmul+1,f
  8020  0CFD  0CA6               	rrf	??___ftmul,f
  8021  0CFE  0B89               	decfsz	9,f
  8022  0CFF  2CFB               	goto	u2315
  8023  0D00  0826               	movf	??___ftmul,w
  8024  0D01  00A9               	movwf	??___ftmul+3
  8025  0D02  0829               	movf	??___ftmul+3,w
  8026  0D03  06AF               	xorwf	___ftmul@sign,f
  8027  0D04  3080               	movlw	128
  8028  0D05  00A6               	movwf	??___ftmul
  8029  0D06  0826               	movf	??___ftmul,w
  8030  0D07  05AF               	andwf	___ftmul@sign,f
  8031  0D08  17A1               	bsf	___ftmul@f1+1,7
  8032  0D09  17A4               	bsf	___ftmul@f2+1,7
  8033  0D0A  30FF               	movlw	255
  8034  0D0B  05A3               	andwf	___ftmul@f2,f
  8035  0D0C  30FF               	movlw	255
  8036  0D0D  05A4               	andwf	___ftmul@f2+1,f
  8037  0D0E  3000               	movlw	0
  8038  0D0F  05A5               	andwf	___ftmul@f2+2,f
  8039  0D10  3000               	movlw	0
  8040  0D11  00AB               	movwf	___ftmul@f3_as_product
  8041  0D12  3000               	movlw	0
  8042  0D13  00AC               	movwf	___ftmul@f3_as_product+1
  8043  0D14  3000               	movlw	0
  8044  0D15  00AD               	movwf	___ftmul@f3_as_product+2
  8045  0D16  3007               	movlw	7
  8046  0D17  00A6               	movwf	??___ftmul
  8047  0D18  0826               	movf	??___ftmul,w
  8048  0D19  00AE               	movwf	___ftmul@cntr
  8049  0D1A                     l2264:	
  8050  0D1A  1C20               	btfss	___ftmul@f1,0
  8051  0D1B  2D22               	goto	l2268
  8052  0D1C  0823               	movf	___ftmul@f2,w
  8053  0D1D  07AB               	addwf	___ftmul@f3_as_product,f
  8054  0D1E  0824               	movf	___ftmul@f2+1,w
  8055  0D1F  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8056  0D20  0825               	movf	___ftmul@f2+2,w
  8057  0D21  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8058  0D22                     l2268:	
  8059  0D22  3001               	movlw	1
  8060  0D23                     u2335:	
  8061  0D23  36A2               	lsrf	___ftmul@f1+2,f
  8062  0D24  0CA1               	rrf	___ftmul@f1+1,f
  8063  0D25  0CA0               	rrf	___ftmul@f1,f
  8064  0D26  0B89               	decfsz	9,f
  8065  0D27  2D23               	goto	u2335
  8066  0D28  3001               	movlw	1
  8067  0D29                     u2345:	
  8068  0D29  35A3               	lslf	___ftmul@f2,f
  8069  0D2A  0DA4               	rlf	___ftmul@f2+1,f
  8070  0D2B  0DA5               	rlf	___ftmul@f2+2,f
  8071  0D2C  0B89               	decfsz	9,f
  8072  0D2D  2D29               	goto	u2345
  8073  0D2E  3001               	movlw	1
  8074  0D2F  02AE               	subwf	___ftmul@cntr,f
  8075  0D30  1D03               	btfss	3,2
  8076  0D31  2D1A               	goto	l2264
  8077  0D32  3009               	movlw	9
  8078  0D33  00A6               	movwf	??___ftmul
  8079  0D34  0826               	movf	??___ftmul,w
  8080  0D35  00AE               	movwf	___ftmul@cntr
  8081  0D36                     l2276:	
  8082  0D36  1C20               	btfss	___ftmul@f1,0
  8083  0D37  2D3E               	goto	l2280
  8084  0D38  0823               	movf	___ftmul@f2,w
  8085  0D39  07AB               	addwf	___ftmul@f3_as_product,f
  8086  0D3A  0824               	movf	___ftmul@f2+1,w
  8087  0D3B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8088  0D3C  0825               	movf	___ftmul@f2+2,w
  8089  0D3D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8090  0D3E                     l2280:	
  8091  0D3E  3001               	movlw	1
  8092  0D3F                     u2375:	
  8093  0D3F  36A2               	lsrf	___ftmul@f1+2,f
  8094  0D40  0CA1               	rrf	___ftmul@f1+1,f
  8095  0D41  0CA0               	rrf	___ftmul@f1,f
  8096  0D42  0B89               	decfsz	9,f
  8097  0D43  2D3F               	goto	u2375
  8098  0D44  3001               	movlw	1
  8099  0D45                     u2385:	
  8100  0D45  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8101  0D46  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8102  0D47  0CAB               	rrf	___ftmul@f3_as_product,f
  8103  0D48  0B89               	decfsz	9,f
  8104  0D49  2D45               	goto	u2385
  8105  0D4A  3001               	movlw	1
  8106  0D4B  02AE               	subwf	___ftmul@cntr,f
  8107  0D4C  1D03               	btfss	3,2
  8108  0D4D  2D36               	goto	l2276
  8109  0D4E  082B               	movf	___ftmul@f3_as_product,w
  8110  0D4F  00F0               	movwf	___ftpack@arg
  8111  0D50  082C               	movf	___ftmul@f3_as_product+1,w
  8112  0D51  00F1               	movwf	___ftpack@arg+1
  8113  0D52  082D               	movf	___ftmul@f3_as_product+2,w
  8114  0D53  00F2               	movwf	___ftpack@arg+2
  8115  0D54  082A               	movf	___ftmul@exp,w
  8116  0D55  00A6               	movwf	??___ftmul
  8117  0D56  0826               	movf	??___ftmul,w
  8118  0D57  00F3               	movwf	___ftpack@exp
  8119  0D58  082F               	movf	___ftmul@sign,w
  8120  0D59  00A7               	movwf	??___ftmul+1
  8121  0D5A  0827               	movf	??___ftmul+1,w
  8122  0D5B  00F4               	movwf	___ftpack@sign
  8123  0D5C  3189  21ED         	fcall	___ftpack
  8124  0D5E  0870               	movf	?___ftpack,w
  8125  0D5F  0020               	movlb	0	; select bank0
  8126  0D60  00A0               	movwf	?___ftmul
  8127  0D61  0871               	movf	?___ftpack+1,w
  8128  0D62  00A1               	movwf	?___ftmul+1
  8129  0D63  0872               	movf	?___ftpack+2,w
  8130  0D64  00A2               	movwf	?___ftmul+2
  8131  0D65  0008               	return
  8132  0D66                     __end_of___ftmul:	
  8133                           
  8134                           	psect	text6
  8135  0800                     __ptext6:	
  8136 ;; *************** function ___ftge *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  ff1             3    0[COMMON] float 
  8141 ;;  ff2             3    3[COMMON] float 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;		None               void
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;Total ram usage:        9 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_log
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function ___ftge
  8168  0800                     ___ftge:	
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8172  0800  1FF2               	btfss	___ftge@ff1+2,7
  8173  0801  2816               	goto	l2418
  8174  0802  0970               	comf	___ftge@ff1,w
  8175  0803  00F6               	movwf	??___ftge
  8176  0804  0971               	comf	___ftge@ff1+1,w
  8177  0805  00F7               	movwf	??___ftge+1
  8178  0806  0972               	comf	___ftge@ff1+2,w
  8179  0807  00F8               	movwf	??___ftge+2
  8180  0808  0AF6               	incf	??___ftge,f
  8181  0809  1903               	skipnz
  8182  080A  0AF7               	incf	??___ftge+1,f
  8183  080B  1903               	skipnz
  8184  080C  0AF8               	incf	??___ftge+2,f
  8185  080D  3000               	movlw	0
  8186  080E  0776               	addwf	??___ftge,w
  8187  080F  00F0               	movwf	___ftge@ff1
  8188  0810  3000               	movlw	0
  8189  0811  3D77               	addwfc	??___ftge+1,w
  8190  0812  00F1               	movwf	___ftge@ff1+1
  8191  0813  3080               	movlw	128
  8192  0814  3D78               	addwfc	??___ftge+2,w
  8193  0815  00F2               	movwf	___ftge@ff1+2
  8194  0816                     l2418:	
  8195  0816  1FF5               	btfss	___ftge@ff2+2,7
  8196  0817  282C               	goto	l2422
  8197  0818  0973               	comf	___ftge@ff2,w
  8198  0819  00F6               	movwf	??___ftge
  8199  081A  0974               	comf	___ftge@ff2+1,w
  8200  081B  00F7               	movwf	??___ftge+1
  8201  081C  0975               	comf	___ftge@ff2+2,w
  8202  081D  00F8               	movwf	??___ftge+2
  8203  081E  0AF6               	incf	??___ftge,f
  8204  081F  1903               	skipnz
  8205  0820  0AF7               	incf	??___ftge+1,f
  8206  0821  1903               	skipnz
  8207  0822  0AF8               	incf	??___ftge+2,f
  8208  0823  3000               	movlw	0
  8209  0824  0776               	addwf	??___ftge,w
  8210  0825  00F3               	movwf	___ftge@ff2
  8211  0826  3000               	movlw	0
  8212  0827  3D77               	addwfc	??___ftge+1,w
  8213  0828  00F4               	movwf	___ftge@ff2+1
  8214  0829  3080               	movlw	128
  8215  082A  3D78               	addwfc	??___ftge+2,w
  8216  082B  00F5               	movwf	___ftge@ff2+2
  8217  082C                     l2422:	
  8218  082C  3080               	movlw	128
  8219  082D  06F2               	xorwf	___ftge@ff1+2,f
  8220  082E  3080               	movlw	128
  8221  082F  06F5               	xorwf	___ftge@ff2+2,f
  8222  0830  0875               	movf	___ftge@ff2+2,w
  8223  0831  0272               	subwf	___ftge@ff1+2,w
  8224  0832  1D03               	skipz
  8225  0833  0008               	return
  8226  0834  0874               	movf	___ftge@ff2+1,w
  8227  0835  0271               	subwf	___ftge@ff1+1,w
  8228  0836  1D03               	skipz
  8229  0837  0008               	return
  8230  0838  0873               	movf	___ftge@ff2,w
  8231  0839  0270               	subwf	___ftge@ff1,w
  8232  083A  0008               	return
  8233  083B                     __end_of___ftge:	
  8234                           
  8235                           	psect	text7
  8236  173D                     __ptext7:	
  8237 ;; *************** function ___awtoft *****************
  8238 ;; Defined at:
  8239 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  c               2    8[COMMON] int 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  sign            1   13[COMMON] unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  3    8[COMMON] float 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        6 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    1
  8260 ;; This function calls:
  8261 ;;		___ftpack
  8262 ;; This function is called by:
  8263 ;;		_tempCalc
  8264 ;;		_log
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function ___awtoft
  8270  173D                     ___awtoft:	
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8274  173D  01FD               	clrf	___awtoft@sign
  8275  173E  1FF9               	btfss	___awtoft@c+1,7
  8276  173F  2F47               	goto	l2410
  8277  1740  09F8               	comf	___awtoft@c,f
  8278  1741  09F9               	comf	___awtoft@c+1,f
  8279  1742  0AF8               	incf	___awtoft@c,f
  8280  1743  1903               	skipnz
  8281  1744  0AF9               	incf	___awtoft@c+1,f
  8282  1745  01FD               	clrf	___awtoft@sign
  8283  1746  0AFD               	incf	___awtoft@sign,f
  8284  1747                     l2410:	
  8285  1747  0878               	movf	___awtoft@c,w
  8286  1748  00F0               	movwf	___ftpack@arg
  8287  1749  0879               	movf	___awtoft@c+1,w
  8288  174A  00F1               	movwf	___ftpack@arg+1
  8289  174B  01F2               	clrf	___ftpack@arg+2
  8290  174C  308E               	movlw	142
  8291  174D  00FB               	movwf	??___awtoft
  8292  174E  087B               	movf	??___awtoft,w
  8293  174F  00F3               	movwf	___ftpack@exp
  8294  1750  087D               	movf	___awtoft@sign,w
  8295  1751  00FC               	movwf	??___awtoft+1
  8296  1752  087C               	movf	??___awtoft+1,w
  8297  1753  00F4               	movwf	___ftpack@sign
  8298  1754  3189  21ED         	fcall	___ftpack
  8299  1756  0870               	movf	?___ftpack,w
  8300  1757  00F8               	movwf	?___awtoft
  8301  1758  0871               	movf	?___ftpack+1,w
  8302  1759  00F9               	movwf	?___awtoft+1
  8303  175A  0872               	movf	?___ftpack+2,w
  8304  175B  00FA               	movwf	?___awtoft+2
  8305  175C  0008               	return
  8306  175D                     __end_of___awtoft:	
  8307                           
  8308                           	psect	text8
  8309  0AD3                     __ptext8:	
  8310 ;; *************** function ___fttol *****************
  8311 ;; Defined at:
  8312 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  f1              3    0[COMMON] float 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  lval            4    9[COMMON] unsigned long 
  8317 ;;  exp1            1   13[COMMON] unsigned char 
  8318 ;;  sign1           1    8[COMMON] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  4    0[COMMON] long 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:       14 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_tempCalc
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function ___fttol
  8343  0AD3                     ___fttol:	
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8347  0AD3  0870               	movf	___fttol@f1,w
  8348  0AD4  00F4               	movwf	??___fttol
  8349  0AD5  0871               	movf	___fttol@f1+1,w
  8350  0AD6  00F5               	movwf	??___fttol+1
  8351  0AD7  0872               	movf	___fttol@f1+2,w
  8352  0AD8  00F6               	movwf	??___fttol+2
  8353  0AD9  1003               	clrc
  8354  0ADA  0D75               	rlf	??___fttol+1,w
  8355  0ADB  0D76               	rlf	??___fttol+2,w
  8356  0ADC  00F7               	movwf	??___fttol+3
  8357  0ADD  0877               	movf	??___fttol+3,w
  8358  0ADE  00FD               	movwf	___fttol@exp1
  8359  0ADF  087D               	movf	___fttol@exp1,w
  8360  0AE0  1D03               	btfss	3,2
  8361  0AE1  2AEB               	goto	l2820
  8362  0AE2  3000               	movlw	0
  8363  0AE3  00F3               	movwf	?___fttol+3
  8364  0AE4  3000               	movlw	0
  8365  0AE5  00F2               	movwf	?___fttol+2
  8366  0AE6  3000               	movlw	0
  8367  0AE7  00F1               	movwf	?___fttol+1
  8368  0AE8  3000               	movlw	0
  8369  0AE9  00F0               	movwf	?___fttol
  8370  0AEA  0008               	return
  8371  0AEB                     l2820:	
  8372  0AEB  0870               	movf	___fttol@f1,w
  8373  0AEC  00F4               	movwf	??___fttol
  8374  0AED  0871               	movf	___fttol@f1+1,w
  8375  0AEE  00F5               	movwf	??___fttol+1
  8376  0AEF  0872               	movf	___fttol@f1+2,w
  8377  0AF0  00F6               	movwf	??___fttol+2
  8378  0AF1  3017               	movlw	23
  8379  0AF2                     u3125:	
  8380  0AF2  36F6               	lsrf	??___fttol+2,f
  8381  0AF3  0CF5               	rrf	??___fttol+1,f
  8382  0AF4  0CF4               	rrf	??___fttol,f
  8383  0AF5  0B89               	decfsz	9,f
  8384  0AF6  2AF2               	goto	u3125
  8385  0AF7  0874               	movf	??___fttol,w
  8386  0AF8  00F7               	movwf	??___fttol+3
  8387  0AF9  0877               	movf	??___fttol+3,w
  8388  0AFA  00F8               	movwf	___fttol@sign1
  8389  0AFB  17F1               	bsf	___fttol@f1+1,7
  8390  0AFC  30FF               	movlw	255
  8391  0AFD  05F0               	andwf	___fttol@f1,f
  8392  0AFE  30FF               	movlw	255
  8393  0AFF  05F1               	andwf	___fttol@f1+1,f
  8394  0B00  3000               	movlw	0
  8395  0B01  05F2               	andwf	___fttol@f1+2,f
  8396  0B02  0870               	movf	___fttol@f1,w
  8397  0B03  00F9               	movwf	___fttol@lval
  8398  0B04  0871               	movf	___fttol@f1+1,w
  8399  0B05  00FA               	movwf	___fttol@lval+1
  8400  0B06  0872               	movf	___fttol@f1+2,w
  8401  0B07  00FB               	movwf	___fttol@lval+2
  8402  0B08  01FC               	clrf	___fttol@lval+3
  8403  0B09  308E               	movlw	142
  8404  0B0A  02FD               	subwf	___fttol@exp1,f
  8405  0B0B  1FFD               	btfss	___fttol@exp1,7
  8406  0B0C  2B29               	goto	l2840
  8407  0B0D  087D               	movf	___fttol@exp1,w
  8408  0B0E  3A80               	xorlw	128
  8409  0B0F  3E8F               	addlw	143
  8410  0B10  1803               	skipnc
  8411  0B11  2B1B               	goto	l2838
  8412  0B12  3000               	movlw	0
  8413  0B13  00F3               	movwf	?___fttol+3
  8414  0B14  3000               	movlw	0
  8415  0B15  00F2               	movwf	?___fttol+2
  8416  0B16  3000               	movlw	0
  8417  0B17  00F1               	movwf	?___fttol+1
  8418  0B18  3000               	movlw	0
  8419  0B19  00F0               	movwf	?___fttol
  8420  0B1A  0008               	return
  8421  0B1B                     l2838:	
  8422  0B1B  3001               	movlw	1
  8423  0B1C                     u3155:	
  8424  0B1C  36FC               	lsrf	___fttol@lval+3,f
  8425  0B1D  0CFB               	rrf	___fttol@lval+2,f
  8426  0B1E  0CFA               	rrf	___fttol@lval+1,f
  8427  0B1F  0CF9               	rrf	___fttol@lval,f
  8428  0B20  0B89               	decfsz	9,f
  8429  0B21  2B1C               	goto	u3155
  8430  0B22  3001               	movlw	1
  8431  0B23  00F4               	movwf	??___fttol
  8432  0B24  0874               	movf	??___fttol,w
  8433  0B25  07FD               	addwf	___fttol@exp1,f
  8434  0B26  1903               	btfsc	3,2
  8435  0B27  2B42               	goto	l2848
  8436  0B28  2B1B               	goto	l2838
  8437  0B29                     l2840:	
  8438  0B29  3018               	movlw	24
  8439  0B2A  027D               	subwf	___fttol@exp1,w
  8440  0B2B  1C03               	skipc
  8441  0B2C  2B3F               	goto	l776
  8442  0B2D  3000               	movlw	0
  8443  0B2E  00F3               	movwf	?___fttol+3
  8444  0B2F  3000               	movlw	0
  8445  0B30  00F2               	movwf	?___fttol+2
  8446  0B31  3000               	movlw	0
  8447  0B32  00F1               	movwf	?___fttol+1
  8448  0B33  3000               	movlw	0
  8449  0B34  00F0               	movwf	?___fttol
  8450  0B35  0008               	return
  8451  0B36                     l2846:	
  8452  0B36  3001               	movlw	1
  8453  0B37                     u3185:	
  8454  0B37  35F9               	lslf	___fttol@lval,f
  8455  0B38  0DFA               	rlf	___fttol@lval+1,f
  8456  0B39  0DFB               	rlf	___fttol@lval+2,f
  8457  0B3A  0DFC               	rlf	___fttol@lval+3,f
  8458  0B3B  0B89               	decfsz	9,f
  8459  0B3C  2B37               	goto	u3185
  8460  0B3D  3001               	movlw	1
  8461  0B3E  02FD               	subwf	___fttol@exp1,f
  8462  0B3F                     l776:	
  8463  0B3F  087D               	movf	___fttol@exp1,w
  8464  0B40  1D03               	btfss	3,2
  8465  0B41  2B36               	goto	l2846
  8466  0B42                     l2848:	
  8467  0B42  0878               	movf	___fttol@sign1,w
  8468  0B43  1903               	btfsc	3,2
  8469  0B44  2B50               	goto	l2852
  8470  0B45  09F9               	comf	___fttol@lval,f
  8471  0B46  09FA               	comf	___fttol@lval+1,f
  8472  0B47  09FB               	comf	___fttol@lval+2,f
  8473  0B48  09FC               	comf	___fttol@lval+3,f
  8474  0B49  0AF9               	incf	___fttol@lval,f
  8475  0B4A  1903               	skipnz
  8476  0B4B  0AFA               	incf	___fttol@lval+1,f
  8477  0B4C  1903               	skipnz
  8478  0B4D  0AFB               	incf	___fttol@lval+2,f
  8479  0B4E  1903               	skipnz
  8480  0B4F  0AFC               	incf	___fttol@lval+3,f
  8481  0B50                     l2852:	
  8482  0B50  087C               	movf	___fttol@lval+3,w
  8483  0B51  00F3               	movwf	?___fttol+3
  8484  0B52  087B               	movf	___fttol@lval+2,w
  8485  0B53  00F2               	movwf	?___fttol+2
  8486  0B54  087A               	movf	___fttol@lval+1,w
  8487  0B55  00F1               	movwf	?___fttol+1
  8488  0B56  0879               	movf	___fttol@lval,w
  8489  0B57  00F0               	movwf	?___fttol
  8490  0B58  0008               	return
  8491  0B59                     __end_of___fttol:	
  8492                           
  8493                           	psect	text9
  8494  171F                     __ptext9:	
  8495 ;; *************** function ___ftsub *****************
  8496 ;; Defined at:
  8497 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  f2              3   45[BANK0 ] float 
  8500 ;;  f1              3   48[BANK0 ] float 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  3   45[BANK0 ] float 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8512 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;Total ram usage:        6 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    2
  8519 ;; This function calls:
  8520 ;;		___ftadd
  8521 ;; This function is called by:
  8522 ;;		_tempCalc
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           
  8527                           ;psect for function ___ftsub
  8528  171F                     ___ftsub:	
  8529                           
  8530                           ;incstack = 0
  8531                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8532  171F  0020               	movlb	0	; select bank0
  8533  1720  084F               	movf	___ftsub@f2+2,w
  8534  1721  044E               	iorwf	___ftsub@f2+1,w
  8535  1722  044D               	iorwf	___ftsub@f2,w
  8536  1723  1903               	skipnz
  8537  1724  2F27               	goto	l2810
  8538  1725  3080               	movlw	128
  8539  1726  06CF               	xorwf	___ftsub@f2+2,f
  8540  1727                     l2810:	
  8541  1727  0850               	movf	___ftsub@f1,w
  8542  1728  00C0               	movwf	___ftadd@f1
  8543  1729  0851               	movf	___ftsub@f1+1,w
  8544  172A  00C1               	movwf	___ftadd@f1+1
  8545  172B  0852               	movf	___ftsub@f1+2,w
  8546  172C  00C2               	movwf	___ftadd@f1+2
  8547  172D  084D               	movf	___ftsub@f2,w
  8548  172E  00C3               	movwf	___ftadd@f2
  8549  172F  084E               	movf	___ftsub@f2+1,w
  8550  1730  00C4               	movwf	___ftadd@f2+1
  8551  1731  084F               	movf	___ftsub@f2+2,w
  8552  1732  00C5               	movwf	___ftadd@f2+2
  8553  1733  318F  270A         	fcall	___ftadd
  8554  1735  0020               	movlb	0	; select bank0
  8555  1736  0840               	movf	?___ftadd,w
  8556  1737  00CD               	movwf	?___ftsub
  8557  1738  0841               	movf	?___ftadd+1,w
  8558  1739  00CE               	movwf	?___ftsub+1
  8559  173A  0842               	movf	?___ftadd+2,w
  8560  173B  00CF               	movwf	?___ftsub+2
  8561  173C  0008               	return
  8562  173D                     __end_of___ftsub:	
  8563                           
  8564                           	psect	text10
  8565  0F0A                     __ptext10:	
  8566 ;; *************** function ___ftadd *****************
  8567 ;; Defined at:
  8568 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  f1              3   32[BANK0 ] float 
  8571 ;;  f2              3   35[BANK0 ] float 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  exp1            1   44[BANK0 ] unsigned char 
  8574 ;;  exp2            1   43[BANK0 ] unsigned char 
  8575 ;;  sign            1   42[BANK0 ] unsigned char 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  3   32[BANK0 ] float 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, pclath, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8585 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;Total ram usage:       13 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    1
  8592 ;; This function calls:
  8593 ;;		___ftpack
  8594 ;; This function is called by:
  8595 ;;		_tempCalc
  8596 ;;		___ftsub
  8597 ;;		_log
  8598 ;;		_eval_poly
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           
  8603                           ;psect for function ___ftadd
  8604  0F0A                     ___ftadd:	
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8608  0F0A  0020               	movlb	0	; select bank0
  8609  0F0B  0840               	movf	___ftadd@f1,w
  8610  0F0C  00C6               	movwf	??___ftadd
  8611  0F0D  0841               	movf	___ftadd@f1+1,w
  8612  0F0E  00C7               	movwf	??___ftadd+1
  8613  0F0F  0842               	movf	___ftadd@f1+2,w
  8614  0F10  00C8               	movwf	??___ftadd+2
  8615  0F11  1003               	clrc
  8616  0F12  0D47               	rlf	??___ftadd+1,w
  8617  0F13  0D48               	rlf	??___ftadd+2,w
  8618  0F14  00C9               	movwf	??___ftadd+3
  8619  0F15  0849               	movf	??___ftadd+3,w
  8620  0F16  00CC               	movwf	___ftadd@exp1
  8621  0F17  0843               	movf	___ftadd@f2,w
  8622  0F18  00C6               	movwf	??___ftadd
  8623  0F19  0844               	movf	___ftadd@f2+1,w
  8624  0F1A  00C7               	movwf	??___ftadd+1
  8625  0F1B  0845               	movf	___ftadd@f2+2,w
  8626  0F1C  00C8               	movwf	??___ftadd+2
  8627  0F1D  1003               	clrc
  8628  0F1E  0D47               	rlf	??___ftadd+1,w
  8629  0F1F  0D48               	rlf	??___ftadd+2,w
  8630  0F20  00C9               	movwf	??___ftadd+3
  8631  0F21  0849               	movf	??___ftadd+3,w
  8632  0F22  00CB               	movwf	___ftadd@exp2
  8633  0F23  084C               	movf	___ftadd@exp1,w
  8634  0F24  1903               	btfsc	3,2
  8635  0F25  2F32               	goto	l2176
  8636  0F26  084B               	movf	___ftadd@exp2,w
  8637  0F27  024C               	subwf	___ftadd@exp1,w
  8638  0F28  1803               	skipnc
  8639  0F29  2F39               	goto	l2180
  8640  0F2A  034C               	decf	___ftadd@exp1,w
  8641  0F2B  3AFF               	xorlw	255
  8642  0F2C  074B               	addwf	___ftadd@exp2,w
  8643  0F2D  00C6               	movwf	??___ftadd
  8644  0F2E  3019               	movlw	25
  8645  0F2F  0246               	subwf	??___ftadd,w
  8646  0F30  1C03               	skipc
  8647  0F31  2F39               	goto	l2180
  8648  0F32                     l2176:	
  8649  0F32  0843               	movf	___ftadd@f2,w
  8650  0F33  00C0               	movwf	?___ftadd
  8651  0F34  0844               	movf	___ftadd@f2+1,w
  8652  0F35  00C1               	movwf	?___ftadd+1
  8653  0F36  0845               	movf	___ftadd@f2+2,w
  8654  0F37  00C2               	movwf	?___ftadd+2
  8655  0F38  0008               	return
  8656  0F39                     l2180:	
  8657  0F39  084B               	movf	___ftadd@exp2,w
  8658  0F3A  1903               	btfsc	3,2
  8659  0F3B  0008               	return
  8660  0F3C  084C               	movf	___ftadd@exp1,w
  8661  0F3D  024B               	subwf	___ftadd@exp2,w
  8662  0F3E  1803               	skipnc
  8663  0F3F  2F48               	goto	l2186
  8664  0F40  034B               	decf	___ftadd@exp2,w
  8665  0F41  3AFF               	xorlw	255
  8666  0F42  074C               	addwf	___ftadd@exp1,w
  8667  0F43  00C6               	movwf	??___ftadd
  8668  0F44  3019               	movlw	25
  8669  0F45  0246               	subwf	??___ftadd,w
  8670  0F46  1803               	btfsc	3,0
  8671  0F47  0008               	return
  8672  0F48                     l2186:	
  8673  0F48  3006               	movlw	6
  8674  0F49  00C6               	movwf	??___ftadd
  8675  0F4A  0846               	movf	??___ftadd,w
  8676  0F4B  00CA               	movwf	___ftadd@sign
  8677  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8678  0F4D  17CA               	bsf	___ftadd@sign,7
  8679  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8680  0F4F  174A               	bsf	___ftadd@sign,6
  8681  0F50  17C1               	bsf	___ftadd@f1+1,7
  8682  0F51  30FF               	movlw	255
  8683  0F52  05C0               	andwf	___ftadd@f1,f
  8684  0F53  30FF               	movlw	255
  8685  0F54  05C1               	andwf	___ftadd@f1+1,f
  8686  0F55  3000               	movlw	0
  8687  0F56  05C2               	andwf	___ftadd@f1+2,f
  8688  0F57  17C4               	bsf	___ftadd@f2+1,7
  8689  0F58  30FF               	movlw	255
  8690  0F59  05C3               	andwf	___ftadd@f2,f
  8691  0F5A  30FF               	movlw	255
  8692  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8693  0F5C  3000               	movlw	0
  8694  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8695  0F5E  084B               	movf	___ftadd@exp2,w
  8696  0F5F  024C               	subwf	___ftadd@exp1,w
  8697  0F60  1803               	skipnc
  8698  0F61  2F84               	goto	l2208
  8699  0F62                     l2198:	
  8700  0F62  3001               	movlw	1
  8701  0F63                     u2145:	
  8702  0F63  35C3               	lslf	___ftadd@f2,f
  8703  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8704  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8705  0F66  0B89               	decfsz	9,f
  8706  0F67  2F63               	goto	u2145
  8707  0F68  3001               	movlw	1
  8708  0F69  02CB               	subwf	___ftadd@exp2,f
  8709  0F6A  084B               	movf	___ftadd@exp2,w
  8710  0F6B  064C               	xorwf	___ftadd@exp1,w
  8711  0F6C  1903               	skipnz
  8712  0F6D  2F7F               	goto	l2206
  8713  0F6E  3001               	movlw	1
  8714  0F6F  02CA               	subwf	___ftadd@sign,f
  8715  0F70  084A               	movf	___ftadd@sign,w
  8716  0F71  3907               	andlw	7
  8717  0F72  1903               	btfsc	3,2
  8718  0F73  2F7F               	goto	l2206
  8719  0F74  2F62               	goto	l2198
  8720  0F75                     l2204:	
  8721  0F75  3001               	movlw	1
  8722  0F76                     u2175:	
  8723  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8724  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8725  0F78  0CC0               	rrf	___ftadd@f1,f
  8726  0F79  0B89               	decfsz	9,f
  8727  0F7A  2F76               	goto	u2175
  8728  0F7B  3001               	movlw	1
  8729  0F7C  00C6               	movwf	??___ftadd
  8730  0F7D  0846               	movf	??___ftadd,w
  8731  0F7E  07CC               	addwf	___ftadd@exp1,f
  8732  0F7F                     l2206:	
  8733  0F7F  084C               	movf	___ftadd@exp1,w
  8734  0F80  064B               	xorwf	___ftadd@exp2,w
  8735  0F81  1903               	btfsc	3,2
  8736  0F82  2FA9               	goto	l716
  8737  0F83  2F75               	goto	l2204
  8738  0F84                     l2208:	
  8739  0F84  084C               	movf	___ftadd@exp1,w
  8740  0F85  024B               	subwf	___ftadd@exp2,w
  8741  0F86  1803               	skipnc
  8742  0F87  2FA9               	goto	l716
  8743  0F88                     l2210:	
  8744  0F88  3001               	movlw	1
  8745  0F89                     u2205:	
  8746  0F89  35C0               	lslf	___ftadd@f1,f
  8747  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8748  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8749  0F8C  0B89               	decfsz	9,f
  8750  0F8D  2F89               	goto	u2205
  8751  0F8E  3001               	movlw	1
  8752  0F8F  02CC               	subwf	___ftadd@exp1,f
  8753  0F90  084B               	movf	___ftadd@exp2,w
  8754  0F91  064C               	xorwf	___ftadd@exp1,w
  8755  0F92  1903               	skipnz
  8756  0F93  2FA5               	goto	l2218
  8757  0F94  3001               	movlw	1
  8758  0F95  02CA               	subwf	___ftadd@sign,f
  8759  0F96  084A               	movf	___ftadd@sign,w
  8760  0F97  3907               	andlw	7
  8761  0F98  1903               	btfsc	3,2
  8762  0F99  2FA5               	goto	l2218
  8763  0F9A  2F88               	goto	l2210
  8764  0F9B                     l2216:	
  8765  0F9B  3001               	movlw	1
  8766  0F9C                     u2235:	
  8767  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8768  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8769  0F9E  0CC3               	rrf	___ftadd@f2,f
  8770  0F9F  0B89               	decfsz	9,f
  8771  0FA0  2F9C               	goto	u2235
  8772  0FA1  3001               	movlw	1
  8773  0FA2  00C6               	movwf	??___ftadd
  8774  0FA3  0846               	movf	??___ftadd,w
  8775  0FA4  07CB               	addwf	___ftadd@exp2,f
  8776  0FA5                     l2218:	
  8777  0FA5  084C               	movf	___ftadd@exp1,w
  8778  0FA6  064B               	xorwf	___ftadd@exp2,w
  8779  0FA7  1D03               	skipz
  8780  0FA8  2F9B               	goto	l2216
  8781  0FA9                     l716:	
  8782  0FA9  1FCA               	btfss	___ftadd@sign,7
  8783  0FAA  2FBB               	goto	l2222
  8784  0FAB  30FF               	movlw	255
  8785  0FAC  06C0               	xorwf	___ftadd@f1,f
  8786  0FAD  30FF               	movlw	255
  8787  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8788  0FAF  30FF               	movlw	255
  8789  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8790  0FB1  3001               	movlw	1
  8791  0FB2  07C0               	addwf	___ftadd@f1,f
  8792  0FB3  3000               	movlw	0
  8793  0FB4  1803               	skipnc
  8794  0FB5  3001               	movlw	1
  8795  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8796  0FB7  3000               	movlw	0
  8797  0FB8  1803               	skipnc
  8798  0FB9  3001               	movlw	1
  8799  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8800  0FBB                     l2222:	
  8801  0FBB  1F4A               	btfss	___ftadd@sign,6
  8802  0FBC  2FCD               	goto	l2226
  8803  0FBD  30FF               	movlw	255
  8804  0FBE  06C3               	xorwf	___ftadd@f2,f
  8805  0FBF  30FF               	movlw	255
  8806  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8807  0FC1  30FF               	movlw	255
  8808  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8809  0FC3  3001               	movlw	1
  8810  0FC4  07C3               	addwf	___ftadd@f2,f
  8811  0FC5  3000               	movlw	0
  8812  0FC6  1803               	skipnc
  8813  0FC7  3001               	movlw	1
  8814  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8815  0FC9  3000               	movlw	0
  8816  0FCA  1803               	skipnc
  8817  0FCB  3001               	movlw	1
  8818  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8819  0FCD                     l2226:	
  8820  0FCD  01CA               	clrf	___ftadd@sign
  8821  0FCE  0840               	movf	___ftadd@f1,w
  8822  0FCF  07C3               	addwf	___ftadd@f2,f
  8823  0FD0  0841               	movf	___ftadd@f1+1,w
  8824  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8825  0FD2  0842               	movf	___ftadd@f1+2,w
  8826  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8827  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8828  0FD5  2FE8               	goto	l2236
  8829  0FD6  30FF               	movlw	255
  8830  0FD7  06C3               	xorwf	___ftadd@f2,f
  8831  0FD8  30FF               	movlw	255
  8832  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8833  0FDA  30FF               	movlw	255
  8834  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8835  0FDC  3001               	movlw	1
  8836  0FDD  07C3               	addwf	___ftadd@f2,f
  8837  0FDE  3000               	movlw	0
  8838  0FDF  1803               	skipnc
  8839  0FE0  3001               	movlw	1
  8840  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8841  0FE2  3000               	movlw	0
  8842  0FE3  1803               	skipnc
  8843  0FE4  3001               	movlw	1
  8844  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8845  0FE6  01CA               	clrf	___ftadd@sign
  8846  0FE7  0ACA               	incf	___ftadd@sign,f
  8847  0FE8                     l2236:	
  8848  0FE8  0843               	movf	___ftadd@f2,w
  8849  0FE9  00F0               	movwf	___ftpack@arg
  8850  0FEA  0844               	movf	___ftadd@f2+1,w
  8851  0FEB  00F1               	movwf	___ftpack@arg+1
  8852  0FEC  0845               	movf	___ftadd@f2+2,w
  8853  0FED  00F2               	movwf	___ftpack@arg+2
  8854  0FEE  084C               	movf	___ftadd@exp1,w
  8855  0FEF  00C6               	movwf	??___ftadd
  8856  0FF0  0846               	movf	??___ftadd,w
  8857  0FF1  00F3               	movwf	___ftpack@exp
  8858  0FF2  084A               	movf	___ftadd@sign,w
  8859  0FF3  00C7               	movwf	??___ftadd+1
  8860  0FF4  0847               	movf	??___ftadd+1,w
  8861  0FF5  00F4               	movwf	___ftpack@sign
  8862  0FF6  3189  21ED         	fcall	___ftpack
  8863  0FF8  0870               	movf	?___ftpack,w
  8864  0FF9  0020               	movlb	0	; select bank0
  8865  0FFA  00C0               	movwf	?___ftadd
  8866  0FFB  0871               	movf	?___ftpack+1,w
  8867  0FFC  00C1               	movwf	?___ftadd+1
  8868  0FFD  0872               	movf	?___ftpack+2,w
  8869  0FFE  00C2               	movwf	?___ftadd+2
  8870  0FFF  0008               	return
  8871  1000                     __end_of___ftadd:	
  8872                           
  8873                           	psect	text11
  8874  0B59                     __ptext11:	
  8875 ;; *************** function ___ftdiv *****************
  8876 ;; Defined at:
  8877 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  f2              3   16[BANK0 ] float 
  8880 ;;  f1              3   19[BANK0 ] float 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  f3              3   27[BANK0 ] float 
  8883 ;;  sign            1   31[BANK0 ] unsigned char 
  8884 ;;  exp             1   30[BANK0 ] unsigned char 
  8885 ;;  cntr            1   26[BANK0 ] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  3   16[BANK0 ] float 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, pclath, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;Total ram usage:       16 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    1
  8902 ;; This function calls:
  8903 ;;		___ftpack
  8904 ;; This function is called by:
  8905 ;;		_tempCalc
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function ___ftdiv
  8911  0B59                     ___ftdiv:	
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8915  0B59  0020               	movlb	0	; select bank0
  8916  0B5A  0833               	movf	___ftdiv@f1,w
  8917  0B5B  00B6               	movwf	??___ftdiv
  8918  0B5C  0834               	movf	___ftdiv@f1+1,w
  8919  0B5D  00B7               	movwf	??___ftdiv+1
  8920  0B5E  0835               	movf	___ftdiv@f1+2,w
  8921  0B5F  00B8               	movwf	??___ftdiv+2
  8922  0B60  1003               	clrc
  8923  0B61  0D37               	rlf	??___ftdiv+1,w
  8924  0B62  0D38               	rlf	??___ftdiv+2,w
  8925  0B63  00B9               	movwf	??___ftdiv+3
  8926  0B64  0839               	movf	??___ftdiv+3,w
  8927  0B65  00BE               	movwf	___ftdiv@exp
  8928  0B66  083E               	movf	___ftdiv@exp,w
  8929  0B67  1D03               	btfss	3,2
  8930  0B68  2B70               	goto	l2770
  8931  0B69  3000               	movlw	0
  8932  0B6A  00B0               	movwf	?___ftdiv
  8933  0B6B  3000               	movlw	0
  8934  0B6C  00B1               	movwf	?___ftdiv+1
  8935  0B6D  3000               	movlw	0
  8936  0B6E  00B2               	movwf	?___ftdiv+2
  8937  0B6F  0008               	return
  8938  0B70                     l2770:	
  8939  0B70  0830               	movf	___ftdiv@f2,w
  8940  0B71  00B6               	movwf	??___ftdiv
  8941  0B72  0831               	movf	___ftdiv@f2+1,w
  8942  0B73  00B7               	movwf	??___ftdiv+1
  8943  0B74  0832               	movf	___ftdiv@f2+2,w
  8944  0B75  00B8               	movwf	??___ftdiv+2
  8945  0B76  1003               	clrc
  8946  0B77  0D37               	rlf	??___ftdiv+1,w
  8947  0B78  0D38               	rlf	??___ftdiv+2,w
  8948  0B79  00B9               	movwf	??___ftdiv+3
  8949  0B7A  0839               	movf	??___ftdiv+3,w
  8950  0B7B  00BF               	movwf	___ftdiv@sign
  8951  0B7C  083F               	movf	___ftdiv@sign,w
  8952  0B7D  1D03               	btfss	3,2
  8953  0B7E  2B86               	goto	l2776
  8954  0B7F  3000               	movlw	0
  8955  0B80  00B0               	movwf	?___ftdiv
  8956  0B81  3000               	movlw	0
  8957  0B82  00B1               	movwf	?___ftdiv+1
  8958  0B83  3000               	movlw	0
  8959  0B84  00B2               	movwf	?___ftdiv+2
  8960  0B85  0008               	return
  8961  0B86                     l2776:	
  8962  0B86  3000               	movlw	0
  8963  0B87  00BB               	movwf	___ftdiv@f3
  8964  0B88  3000               	movlw	0
  8965  0B89  00BC               	movwf	___ftdiv@f3+1
  8966  0B8A  3000               	movlw	0
  8967  0B8B  00BD               	movwf	___ftdiv@f3+2
  8968  0B8C  3089               	movlw	137
  8969  0B8D  073F               	addwf	___ftdiv@sign,w
  8970  0B8E  00B6               	movwf	??___ftdiv
  8971  0B8F  0836               	movf	??___ftdiv,w
  8972  0B90  02BE               	subwf	___ftdiv@exp,f
  8973  0B91  0833               	movf	___ftdiv@f1,w
  8974  0B92  00B6               	movwf	??___ftdiv
  8975  0B93  0834               	movf	___ftdiv@f1+1,w
  8976  0B94  00B7               	movwf	??___ftdiv+1
  8977  0B95  0835               	movf	___ftdiv@f1+2,w
  8978  0B96  00B8               	movwf	??___ftdiv+2
  8979  0B97  3010               	movlw	16
  8980  0B98                     u3045:	
  8981  0B98  36B8               	lsrf	??___ftdiv+2,f
  8982  0B99  0CB7               	rrf	??___ftdiv+1,f
  8983  0B9A  0CB6               	rrf	??___ftdiv,f
  8984  0B9B  0B89               	decfsz	9,f
  8985  0B9C  2B98               	goto	u3045
  8986  0B9D  0836               	movf	??___ftdiv,w
  8987  0B9E  00B9               	movwf	??___ftdiv+3
  8988  0B9F  0839               	movf	??___ftdiv+3,w
  8989  0BA0  00BF               	movwf	___ftdiv@sign
  8990  0BA1  0830               	movf	___ftdiv@f2,w
  8991  0BA2  00B6               	movwf	??___ftdiv
  8992  0BA3  0831               	movf	___ftdiv@f2+1,w
  8993  0BA4  00B7               	movwf	??___ftdiv+1
  8994  0BA5  0832               	movf	___ftdiv@f2+2,w
  8995  0BA6  00B8               	movwf	??___ftdiv+2
  8996  0BA7  3010               	movlw	16
  8997  0BA8                     u3055:	
  8998  0BA8  36B8               	lsrf	??___ftdiv+2,f
  8999  0BA9  0CB7               	rrf	??___ftdiv+1,f
  9000  0BAA  0CB6               	rrf	??___ftdiv,f
  9001  0BAB  0B89               	decfsz	9,f
  9002  0BAC  2BA8               	goto	u3055
  9003  0BAD  0836               	movf	??___ftdiv,w
  9004  0BAE  00B9               	movwf	??___ftdiv+3
  9005  0BAF  0839               	movf	??___ftdiv+3,w
  9006  0BB0  06BF               	xorwf	___ftdiv@sign,f
  9007  0BB1  3080               	movlw	128
  9008  0BB2  00B6               	movwf	??___ftdiv
  9009  0BB3  0836               	movf	??___ftdiv,w
  9010  0BB4  05BF               	andwf	___ftdiv@sign,f
  9011  0BB5  17B4               	bsf	___ftdiv@f1+1,7
  9012  0BB6  30FF               	movlw	255
  9013  0BB7  05B3               	andwf	___ftdiv@f1,f
  9014  0BB8  30FF               	movlw	255
  9015  0BB9  05B4               	andwf	___ftdiv@f1+1,f
  9016  0BBA  3000               	movlw	0
  9017  0BBB  05B5               	andwf	___ftdiv@f1+2,f
  9018  0BBC  17B1               	bsf	___ftdiv@f2+1,7
  9019  0BBD  30FF               	movlw	255
  9020  0BBE  05B0               	andwf	___ftdiv@f2,f
  9021  0BBF  30FF               	movlw	255
  9022  0BC0  05B1               	andwf	___ftdiv@f2+1,f
  9023  0BC1  3000               	movlw	0
  9024  0BC2  05B2               	andwf	___ftdiv@f2+2,f
  9025  0BC3  3018               	movlw	24
  9026  0BC4  00B6               	movwf	??___ftdiv
  9027  0BC5  0836               	movf	??___ftdiv,w
  9028  0BC6  00BA               	movwf	___ftdiv@cntr
  9029  0BC7                     l2790:	
  9030  0BC7  3001               	movlw	1
  9031  0BC8                     u3065:	
  9032  0BC8  35BB               	lslf	___ftdiv@f3,f
  9033  0BC9  0DBC               	rlf	___ftdiv@f3+1,f
  9034  0BCA  0DBD               	rlf	___ftdiv@f3+2,f
  9035  0BCB  0B89               	decfsz	9,f
  9036  0BCC  2BC8               	goto	u3065
  9037  0BCD  0832               	movf	___ftdiv@f2+2,w
  9038  0BCE  0235               	subwf	___ftdiv@f1+2,w
  9039  0BCF  1D03               	skipz
  9040  0BD0  2BD7               	goto	u3075
  9041  0BD1  0831               	movf	___ftdiv@f2+1,w
  9042  0BD2  0234               	subwf	___ftdiv@f1+1,w
  9043  0BD3  1D03               	skipz
  9044  0BD4  2BD7               	goto	u3075
  9045  0BD5  0830               	movf	___ftdiv@f2,w
  9046  0BD6  0233               	subwf	___ftdiv@f1,w
  9047  0BD7                     u3075:	
  9048  0BD7  1C03               	skipc
  9049  0BD8  2BE0               	goto	l2798
  9050  0BD9  0830               	movf	___ftdiv@f2,w
  9051  0BDA  02B3               	subwf	___ftdiv@f1,f
  9052  0BDB  0831               	movf	___ftdiv@f2+1,w
  9053  0BDC  3BB4               	subwfb	___ftdiv@f1+1,f
  9054  0BDD  0832               	movf	___ftdiv@f2+2,w
  9055  0BDE  3BB5               	subwfb	___ftdiv@f1+2,f
  9056  0BDF  143B               	bsf	___ftdiv@f3,0
  9057  0BE0                     l2798:	
  9058  0BE0  3001               	movlw	1
  9059  0BE1                     u3085:	
  9060  0BE1  35B3               	lslf	___ftdiv@f1,f
  9061  0BE2  0DB4               	rlf	___ftdiv@f1+1,f
  9062  0BE3  0DB5               	rlf	___ftdiv@f1+2,f
  9063  0BE4  0B89               	decfsz	9,f
  9064  0BE5  2BE1               	goto	u3085
  9065  0BE6  3001               	movlw	1
  9066  0BE7  02BA               	subwf	___ftdiv@cntr,f
  9067  0BE8  1D03               	btfss	3,2
  9068  0BE9  2BC7               	goto	l2790
  9069  0BEA  083B               	movf	___ftdiv@f3,w
  9070  0BEB  00F0               	movwf	___ftpack@arg
  9071  0BEC  083C               	movf	___ftdiv@f3+1,w
  9072  0BED  00F1               	movwf	___ftpack@arg+1
  9073  0BEE  083D               	movf	___ftdiv@f3+2,w
  9074  0BEF  00F2               	movwf	___ftpack@arg+2
  9075  0BF0  083E               	movf	___ftdiv@exp,w
  9076  0BF1  00B6               	movwf	??___ftdiv
  9077  0BF2  0836               	movf	??___ftdiv,w
  9078  0BF3  00F3               	movwf	___ftpack@exp
  9079  0BF4  083F               	movf	___ftdiv@sign,w
  9080  0BF5  00B7               	movwf	??___ftdiv+1
  9081  0BF6  0837               	movf	??___ftdiv+1,w
  9082  0BF7  00F4               	movwf	___ftpack@sign
  9083  0BF8  3189  21ED         	fcall	___ftpack
  9084  0BFA  0870               	movf	?___ftpack,w
  9085  0BFB  0020               	movlb	0	; select bank0
  9086  0BFC  00B0               	movwf	?___ftdiv
  9087  0BFD  0871               	movf	?___ftpack+1,w
  9088  0BFE  00B1               	movwf	?___ftdiv+1
  9089  0BFF  0872               	movf	?___ftpack+2,w
  9090  0C00  00B2               	movwf	?___ftdiv+2
  9091  0C01  0008               	return
  9092  0C02                     __end_of___ftdiv:	
  9093                           
  9094                           	psect	text12
  9095  09ED                     __ptext12:	
  9096 ;; *************** function ___ftpack *****************
  9097 ;; Defined at:
  9098 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  arg             3    0[COMMON] unsigned um
  9101 ;;  exp             1    3[COMMON] unsigned char 
  9102 ;;  sign            1    4[COMMON] unsigned char 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  3    0[COMMON] float 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9114 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;Total ram usage:        8 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		___awtoft
  9124 ;;		___ftadd
  9125 ;;		___ftdiv
  9126 ;;		___ftmul
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function ___ftpack
  9132  09ED                     ___ftpack:	
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9136  09ED  0873               	movf	___ftpack@exp,w
  9137  09EE  1903               	btfsc	3,2
  9138  09EF  29F5               	goto	l2112
  9139  09F0  0872               	movf	___ftpack@arg+2,w
  9140  09F1  0471               	iorwf	___ftpack@arg+1,w
  9141  09F2  0470               	iorwf	___ftpack@arg,w
  9142  09F3  1D03               	skipz
  9143  09F4  2A06               	goto	l2118
  9144  09F5                     l2112:	
  9145  09F5  3000               	movlw	0
  9146  09F6  00F0               	movwf	?___ftpack
  9147  09F7  3000               	movlw	0
  9148  09F8  00F1               	movwf	?___ftpack+1
  9149  09F9  3000               	movlw	0
  9150  09FA  00F2               	movwf	?___ftpack+2
  9151  09FB  0008               	return
  9152  09FC                     l2116:	
  9153  09FC  3001               	movlw	1
  9154  09FD  00F5               	movwf	??___ftpack
  9155  09FE  0875               	movf	??___ftpack,w
  9156  09FF  07F3               	addwf	___ftpack@exp,f
  9157  0A00  3001               	movlw	1
  9158  0A01                     u1875:	
  9159  0A01  36F2               	lsrf	___ftpack@arg+2,f
  9160  0A02  0CF1               	rrf	___ftpack@arg+1,f
  9161  0A03  0CF0               	rrf	___ftpack@arg,f
  9162  0A04  0B89               	decfsz	9,f
  9163  0A05  2A01               	goto	u1875
  9164  0A06                     l2118:	
  9165  0A06  30FE               	movlw	254
  9166  0A07  0572               	andwf	___ftpack@arg+2,w
  9167  0A08  1903               	btfsc	3,2
  9168  0A09  2A1F               	goto	l685
  9169  0A0A  29FC               	goto	l2116
  9170  0A0B                     l2120:	
  9171  0A0B  3001               	movlw	1
  9172  0A0C  00F5               	movwf	??___ftpack
  9173  0A0D  0875               	movf	??___ftpack,w
  9174  0A0E  07F3               	addwf	___ftpack@exp,f
  9175  0A0F  3001               	movlw	1
  9176  0A10  07F0               	addwf	___ftpack@arg,f
  9177  0A11  3000               	movlw	0
  9178  0A12  1803               	skipnc
  9179  0A13  3001               	movlw	1
  9180  0A14  07F1               	addwf	___ftpack@arg+1,f
  9181  0A15  3000               	movlw	0
  9182  0A16  1803               	skipnc
  9183  0A17  3001               	movlw	1
  9184  0A18  07F2               	addwf	___ftpack@arg+2,f
  9185  0A19  3001               	movlw	1
  9186  0A1A                     u1895:	
  9187  0A1A  36F2               	lsrf	___ftpack@arg+2,f
  9188  0A1B  0CF1               	rrf	___ftpack@arg+1,f
  9189  0A1C  0CF0               	rrf	___ftpack@arg,f
  9190  0A1D  0B89               	decfsz	9,f
  9191  0A1E  2A1A               	goto	u1895
  9192  0A1F                     l685:	
  9193  0A1F  30FF               	movlw	255
  9194  0A20  0572               	andwf	___ftpack@arg+2,w
  9195  0A21  1903               	btfsc	3,2
  9196  0A22  2A2C               	goto	l2128
  9197  0A23  2A0B               	goto	l2120
  9198  0A24                     l2126:	
  9199  0A24  3001               	movlw	1
  9200  0A25  02F3               	subwf	___ftpack@exp,f
  9201  0A26  3001               	movlw	1
  9202  0A27                     u1915:	
  9203  0A27  35F0               	lslf	___ftpack@arg,f
  9204  0A28  0DF1               	rlf	___ftpack@arg+1,f
  9205  0A29  0DF2               	rlf	___ftpack@arg+2,f
  9206  0A2A  0B89               	decfsz	9,f
  9207  0A2B  2A27               	goto	u1915
  9208  0A2C                     l2128:	
  9209  0A2C  1BF1               	btfsc	___ftpack@arg+1,7
  9210  0A2D  2A32               	goto	l692
  9211  0A2E  3002               	movlw	2
  9212  0A2F  0273               	subwf	___ftpack@exp,w
  9213  0A30  1803               	skipnc
  9214  0A31  2A24               	goto	l2126
  9215  0A32                     l692:	
  9216  0A32  1873               	btfsc	___ftpack@exp,0
  9217  0A33  2A3A               	goto	l693
  9218  0A34  30FF               	movlw	255
  9219  0A35  05F0               	andwf	___ftpack@arg,f
  9220  0A36  307F               	movlw	127
  9221  0A37  05F1               	andwf	___ftpack@arg+1,f
  9222  0A38  30FF               	movlw	255
  9223  0A39  05F2               	andwf	___ftpack@arg+2,f
  9224  0A3A                     l693:	
  9225  0A3A  1003               	clrc
  9226  0A3B  0CF3               	rrf	___ftpack@exp,f
  9227  0A3C  0873               	movf	___ftpack@exp,w
  9228  0A3D  00F5               	movwf	??___ftpack
  9229  0A3E  01F6               	clrf	??___ftpack+1
  9230  0A3F  01F7               	clrf	??___ftpack+2
  9231  0A40  3010               	movlw	16
  9232  0A41                     u1955:	
  9233  0A41  35F5               	lslf	??___ftpack,f
  9234  0A42  0DF6               	rlf	??___ftpack+1,f
  9235  0A43  0DF7               	rlf	??___ftpack+2,f
  9236  0A44  0B89               	decfsz	9,f
  9237  0A45  2A41               	goto	u1955
  9238  0A46  0875               	movf	??___ftpack,w
  9239  0A47  04F0               	iorwf	___ftpack@arg,f
  9240  0A48  0876               	movf	??___ftpack+1,w
  9241  0A49  04F1               	iorwf	___ftpack@arg+1,f
  9242  0A4A  0877               	movf	??___ftpack+2,w
  9243  0A4B  04F2               	iorwf	___ftpack@arg+2,f
  9244  0A4C  0874               	movf	___ftpack@sign,w
  9245  0A4D  1903               	btfsc	3,2
  9246  0A4E  0008               	return
  9247  0A4F  17F2               	bsf	___ftpack@arg+2,7
  9248  0A50  0008               	return
  9249  0A51                     __end_of___ftpack:	
  9250                           
  9251                           	psect	text13
  9252  01BD                     __ptext13:	
  9253 ;; *************** function _readAnalog *****************
  9254 ;; Defined at:
  9255 ;;		line 34 in file "adc.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  channel         2    6[BANK0 ] int 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  value           2   11[COMMON] int 
  9260 ;;  analog_chann    2    9[COMMON] int 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    6[BANK0 ] int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;Total ram usage:       22 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		_ADCRead
  9279 ;;		___aldiv
  9280 ;;		___wmul
  9281 ;; This function is called by:
  9282 ;;		_main
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function _readAnalog
  9288  01BD                     _readAnalog:	
  9289                           
  9290                           ;adc.c: 36: int value;
  9291                           ;adc.c: 38: int analog_channel = channels[channel];
  9292                           
  9293                           ;incstack = 0
  9294                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9295  01BD  0020               	movlb	0	; select bank0
  9296  01BE  3526               	lslf	readAnalog@channel,w
  9297  01BF  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  9298  01C0  0086               	movwf	6
  9299  01C1  3001               	movlw	1	; select bank3/4
  9300  01C2  0087               	movwf	7
  9301  01C3  3F40               	moviw [0]fsr1
  9302  01C4  00F9               	movwf	readAnalog@analog_channel
  9303  01C5  3F41               	moviw [1]fsr1
  9304  01C6  00FA               	movwf	readAnalog@analog_channel+1
  9305                           
  9306                           ;adc.c: 40: value = ADCRead(analog_channel);
  9307  01C7  0879               	movf	readAnalog@analog_channel,w
  9308  01C8  3196  267D  3181   	fcall	_ADCRead
  9309  01CB  0871               	movf	?_ADCRead+1,w
  9310  01CC  00FC               	movwf	readAnalog@value+1
  9311  01CD  0870               	movf	?_ADCRead,w
  9312  01CE  00FB               	movwf	readAnalog@value
  9313                           
  9314                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9315  01CF  0020               	movlb	0	; select bank0
  9316  01D0  0826               	movf	readAnalog@channel,w
  9317  01D1  00A8               	movwf	??_readAnalog
  9318  01D2  3001               	movlw	1
  9319  01D3                     u3285:	
  9320  01D3  35A8               	lslf	??_readAnalog,f
  9321  01D4  3EFF               	addlw	-1
  9322  01D5  1D03               	skipz
  9323  01D6  29D3               	goto	u3285
  9324  01D7  3528               	lslf	??_readAnalog,w
  9325  01D8  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9326  01D9  0086               	movwf	6
  9327  01DA  0187               	clrf	7
  9328  01DB  3F40               	moviw [0]fsr1
  9329  01DC  00A9               	movwf	??_readAnalog+1
  9330  01DD  3F41               	moviw [1]fsr1
  9331  01DE  00AA               	movwf	??_readAnalog+2
  9332  01DF  3F42               	moviw [2]fsr1
  9333  01E0  00AB               	movwf	??_readAnalog+3
  9334  01E1  3F43               	moviw [3]fsr1
  9335  01E2  00AC               	movwf	??_readAnalog+4
  9336  01E3  0021               	movlb	1	; select bank1
  9337  01E4  083F               	movf	(_sampleIndex+1)^(0+128),w
  9338  01E5  0020               	movlb	0	; select bank0
  9339  01E6  00AE               	movwf	??_readAnalog+6
  9340  01E7  0021               	movlb	1	; select bank1
  9341  01E8  083E               	movf	_sampleIndex^(0+128),w
  9342  01E9  0020               	movlb	0	; select bank0
  9343  01EA  00AD               	movwf	??_readAnalog+5
  9344  01EB  35AD               	lslf	??_readAnalog+5,f
  9345  01EC  0DAE               	rlf	??_readAnalog+6,f
  9346  01ED  0827               	movf	readAnalog@channel+1,w
  9347  01EE  00F1               	movwf	___wmul@multiplier+1
  9348  01EF  0826               	movf	readAnalog@channel,w
  9349  01F0  00F0               	movwf	___wmul@multiplier
  9350  01F1  3050               	movlw	80
  9351  01F2  00F2               	movwf	___wmul@multiplicand
  9352  01F3  3000               	movlw	0
  9353  01F4  00F3               	movwf	___wmul@multiplicand+1
  9354  01F5  3197  2704  3181   	fcall	___wmul
  9355  01F8  3050               	movlw	80
  9356  01F9  0020               	movlb	0	; select bank0
  9357  01FA  00AF               	movwf	??_readAnalog+7
  9358  01FB  3023               	movlw	35
  9359  01FC  00B0               	movwf	??_readAnalog+8
  9360  01FD  0870               	movf	?___wmul,w
  9361  01FE  072F               	addwf	??_readAnalog+7,w
  9362  01FF  00B1               	movwf	??_readAnalog+9
  9363  0200  0871               	movf	?___wmul+1,w
  9364  0201  3D30               	addwfc	??_readAnalog+8,w
  9365  0202  00B2               	movwf	??_readAnalog+10
  9366  0203  0831               	movf	??_readAnalog+9,w
  9367  0204  072D               	addwf	??_readAnalog+5,w
  9368  0205  0084               	movwf	4
  9369  0206  0832               	movf	??_readAnalog+10,w
  9370  0207  3D2E               	addwfc	??_readAnalog+6,w
  9371  0208  0085               	movwf	5
  9372  0209  3F00               	moviw [0]fsr0
  9373  020A  00B3               	movwf	??_readAnalog+11
  9374  020B  3F01               	moviw [1]fsr0
  9375  020C  00B4               	movwf	??_readAnalog+12
  9376  020D  01B5               	clrf	??_readAnalog+13
  9377  020E  01B6               	clrf	??_readAnalog+14
  9378  020F  09B3               	comf	??_readAnalog+11,f
  9379  0210  09B4               	comf	??_readAnalog+12,f
  9380  0211  09B5               	comf	??_readAnalog+13,f
  9381  0212  09B6               	comf	??_readAnalog+14,f
  9382  0213  0AB3               	incf	??_readAnalog+11,f
  9383  0214  1903               	skipnz
  9384  0215  0AB4               	incf	??_readAnalog+12,f
  9385  0216  1903               	skipnz
  9386  0217  0AB5               	incf	??_readAnalog+13,f
  9387  0218  1903               	skipnz
  9388  0219  0AB6               	incf	??_readAnalog+14,f
  9389  021A  0833               	movf	??_readAnalog+11,w
  9390  021B  07A9               	addwf	??_readAnalog+1,f
  9391  021C  0834               	movf	??_readAnalog+12,w
  9392  021D  3DAA               	addwfc	??_readAnalog+2,f
  9393  021E  0835               	movf	??_readAnalog+13,w
  9394  021F  3DAB               	addwfc	??_readAnalog+3,f
  9395  0220  0836               	movf	??_readAnalog+14,w
  9396  0221  3DAC               	addwfc	??_readAnalog+4,f
  9397  0222  0826               	movf	readAnalog@channel,w
  9398  0223  00B7               	movwf	??_readAnalog+15
  9399  0224  3001               	movlw	1
  9400  0225                     u3295:	
  9401  0225  35B7               	lslf	??_readAnalog+15,f
  9402  0226  3EFF               	addlw	-1
  9403  0227  1D03               	skipz
  9404  0228  2A25               	goto	u3295
  9405  0229  3537               	lslf	??_readAnalog+15,w
  9406  022A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9407  022B  0086               	movwf	6
  9408  022C  0187               	clrf	7
  9409  022D  0829               	movf	??_readAnalog+1,w
  9410  022E  3FC0               	movwi [0]fsr1
  9411  022F  082A               	movf	??_readAnalog+2,w
  9412  0230  3FC1               	movwi [1]fsr1
  9413  0231  082B               	movf	??_readAnalog+3,w
  9414  0232  3FC2               	movwi [2]fsr1
  9415  0233  082C               	movf	??_readAnalog+4,w
  9416  0234  3FC3               	movwi [3]fsr1
  9417                           
  9418                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9419  0235  0021               	movlb	1	; select bank1
  9420  0236  083F               	movf	(_sampleIndex+1)^(0+128),w
  9421  0237  0020               	movlb	0	; select bank0
  9422  0238  00A9               	movwf	??_readAnalog+1
  9423  0239  0021               	movlb	1	; select bank1
  9424  023A  083E               	movf	_sampleIndex^(0+128),w
  9425  023B  0020               	movlb	0	; select bank0
  9426  023C  00A8               	movwf	??_readAnalog
  9427  023D  35A8               	lslf	??_readAnalog,f
  9428  023E  0DA9               	rlf	??_readAnalog+1,f
  9429  023F  0827               	movf	readAnalog@channel+1,w
  9430  0240  00F1               	movwf	___wmul@multiplier+1
  9431  0241  0826               	movf	readAnalog@channel,w
  9432  0242  00F0               	movwf	___wmul@multiplier
  9433  0243  3050               	movlw	80
  9434  0244  00F2               	movwf	___wmul@multiplicand
  9435  0245  3000               	movlw	0
  9436  0246  00F3               	movwf	___wmul@multiplicand+1
  9437  0247  3197  2704  3181   	fcall	___wmul
  9438  024A  3050               	movlw	80
  9439  024B  0020               	movlb	0	; select bank0
  9440  024C  00AA               	movwf	??_readAnalog+2
  9441  024D  3023               	movlw	35
  9442  024E  00AB               	movwf	??_readAnalog+3
  9443  024F  0870               	movf	?___wmul,w
  9444  0250  072A               	addwf	??_readAnalog+2,w
  9445  0251  00AC               	movwf	??_readAnalog+4
  9446  0252  0871               	movf	?___wmul+1,w
  9447  0253  3D2B               	addwfc	??_readAnalog+3,w
  9448  0254  00AD               	movwf	??_readAnalog+5
  9449  0255  0828               	movf	??_readAnalog,w
  9450  0256  072C               	addwf	??_readAnalog+4,w
  9451  0257  0086               	movwf	6
  9452  0258  0829               	movf	??_readAnalog+1,w
  9453  0259  3D2D               	addwfc	??_readAnalog+5,w
  9454  025A  0087               	movwf	7
  9455  025B  087B               	movf	readAnalog@value,w
  9456  025C  3FC0               	movwi [0]fsr1
  9457  025D  087C               	movf	readAnalog@value+1,w
  9458  025E  3FC1               	movwi [1]fsr1
  9459                           
  9460                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9461  025F  0826               	movf	readAnalog@channel,w
  9462  0260  00A8               	movwf	??_readAnalog
  9463  0261  3001               	movlw	1
  9464  0262                     u3305:	
  9465  0262  35A8               	lslf	??_readAnalog,f
  9466  0263  3EFF               	addlw	-1
  9467  0264  1D03               	skipz
  9468  0265  2A62               	goto	u3305
  9469  0266  3528               	lslf	??_readAnalog,w
  9470  0267  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9471  0268  0086               	movwf	6
  9472  0269  0187               	clrf	7
  9473  026A  3F40               	moviw [0]fsr1
  9474  026B  00A9               	movwf	??_readAnalog+1
  9475  026C  3F41               	moviw [1]fsr1
  9476  026D  00AA               	movwf	??_readAnalog+2
  9477  026E  3F42               	moviw [2]fsr1
  9478  026F  00AB               	movwf	??_readAnalog+3
  9479  0270  3F43               	moviw [3]fsr1
  9480  0271  00AC               	movwf	??_readAnalog+4
  9481  0272  0021               	movlb	1	; select bank1
  9482  0273  083F               	movf	(_sampleIndex+1)^(0+128),w
  9483  0274  0020               	movlb	0	; select bank0
  9484  0275  00AE               	movwf	??_readAnalog+6
  9485  0276  0021               	movlb	1	; select bank1
  9486  0277  083E               	movf	_sampleIndex^(0+128),w
  9487  0278  0020               	movlb	0	; select bank0
  9488  0279  00AD               	movwf	??_readAnalog+5
  9489  027A  35AD               	lslf	??_readAnalog+5,f
  9490  027B  0DAE               	rlf	??_readAnalog+6,f
  9491  027C  0827               	movf	readAnalog@channel+1,w
  9492  027D  00F1               	movwf	___wmul@multiplier+1
  9493  027E  0826               	movf	readAnalog@channel,w
  9494  027F  00F0               	movwf	___wmul@multiplier
  9495  0280  3050               	movlw	80
  9496  0281  00F2               	movwf	___wmul@multiplicand
  9497  0282  3000               	movlw	0
  9498  0283  00F3               	movwf	___wmul@multiplicand+1
  9499  0284  3197  2704  3181   	fcall	___wmul
  9500  0287  3050               	movlw	80
  9501  0288  0020               	movlb	0	; select bank0
  9502  0289  00AF               	movwf	??_readAnalog+7
  9503  028A  3023               	movlw	35
  9504  028B  00B0               	movwf	??_readAnalog+8
  9505  028C  0870               	movf	?___wmul,w
  9506  028D  072F               	addwf	??_readAnalog+7,w
  9507  028E  00B1               	movwf	??_readAnalog+9
  9508  028F  0871               	movf	?___wmul+1,w
  9509  0290  3D30               	addwfc	??_readAnalog+8,w
  9510  0291  00B2               	movwf	??_readAnalog+10
  9511  0292  0831               	movf	??_readAnalog+9,w
  9512  0293  072D               	addwf	??_readAnalog+5,w
  9513  0294  0084               	movwf	4
  9514  0295  0832               	movf	??_readAnalog+10,w
  9515  0296  3D2E               	addwfc	??_readAnalog+6,w
  9516  0297  0085               	movwf	5
  9517  0298  3F00               	moviw [0]fsr0
  9518  0299  00B3               	movwf	??_readAnalog+11
  9519  029A  3F01               	moviw [1]fsr0
  9520  029B  00B4               	movwf	??_readAnalog+12
  9521  029C  01B5               	clrf	??_readAnalog+13
  9522  029D  01B6               	clrf	??_readAnalog+14
  9523  029E  0833               	movf	??_readAnalog+11,w
  9524  029F  07A9               	addwf	??_readAnalog+1,f
  9525  02A0  0834               	movf	??_readAnalog+12,w
  9526  02A1  3DAA               	addwfc	??_readAnalog+2,f
  9527  02A2  0835               	movf	??_readAnalog+13,w
  9528  02A3  3DAB               	addwfc	??_readAnalog+3,f
  9529  02A4  0836               	movf	??_readAnalog+14,w
  9530  02A5  3DAC               	addwfc	??_readAnalog+4,f
  9531  02A6  0826               	movf	readAnalog@channel,w
  9532  02A7  00B7               	movwf	??_readAnalog+15
  9533  02A8  3001               	movlw	1
  9534  02A9                     u3315:	
  9535  02A9  35B7               	lslf	??_readAnalog+15,f
  9536  02AA  3EFF               	addlw	-1
  9537  02AB  1D03               	skipz
  9538  02AC  2AA9               	goto	u3315
  9539  02AD  3537               	lslf	??_readAnalog+15,w
  9540  02AE  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9541  02AF  0086               	movwf	6
  9542  02B0  0187               	clrf	7
  9543  02B1  0829               	movf	??_readAnalog+1,w
  9544  02B2  3FC0               	movwi [0]fsr1
  9545  02B3  082A               	movf	??_readAnalog+2,w
  9546  02B4  3FC1               	movwi [1]fsr1
  9547  02B5  082B               	movf	??_readAnalog+3,w
  9548  02B6  3FC2               	movwi [2]fsr1
  9549  02B7  082C               	movf	??_readAnalog+4,w
  9550  02B8  3FC3               	movwi [3]fsr1
  9551                           
  9552                           ;adc.c: 48: if(channel>=(2-1))
  9553  02B9  0827               	movf	readAnalog@channel+1,w
  9554  02BA  3A80               	xorlw	128
  9555  02BB  00A8               	movwf	??_readAnalog
  9556  02BC  3080               	movlw	128
  9557  02BD  0228               	subwf	??_readAnalog,w
  9558  02BE  1D03               	skipz
  9559  02BF  2AC2               	goto	u3325
  9560  02C0  3001               	movlw	1
  9561  02C1  0226               	subwf	readAnalog@channel,w
  9562  02C2                     u3325:	
  9563  02C2  1C03               	skipc
  9564  02C3  2AD2               	goto	l2956
  9565                           
  9566                           ;adc.c: 49: {
  9567                           ;adc.c: 50: sampleIndex+=1;
  9568  02C4  3001               	movlw	1
  9569  02C5  0021               	movlb	1	; select bank1
  9570  02C6  07BE               	addwf	_sampleIndex^(0+128),f
  9571  02C7  3000               	movlw	0
  9572  02C8  3DBF               	addwfc	(_sampleIndex+1)^(0+128),f
  9573                           
  9574                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9575  02C9  3000               	movlw	0
  9576  02CA  023F               	subwf	(_sampleIndex+1)^(0+128),w
  9577  02CB  3028               	movlw	40
  9578  02CC  1903               	skipnz
  9579  02CD  023E               	subwf	_sampleIndex^(0+128),w
  9580  02CE  1C03               	skipc
  9581  02CF  2AD2               	goto	l2956
  9582  02D0  01BE               	clrf	_sampleIndex^(0+128)
  9583  02D1  01BF               	clrf	(_sampleIndex+1)^(0+128)
  9584  02D2                     l2956:	
  9585                           
  9586                           ;adc.c: 52: }
  9587                           ;adc.c: 54: value = totals[channel]/40;
  9588  02D2  3000               	movlw	0
  9589  02D3  00F3               	movwf	___aldiv@divisor+3
  9590  02D4  3000               	movlw	0
  9591  02D5  00F2               	movwf	___aldiv@divisor+2
  9592  02D6  3000               	movlw	0
  9593  02D7  00F1               	movwf	___aldiv@divisor+1
  9594  02D8  3028               	movlw	40
  9595  02D9  00F0               	movwf	___aldiv@divisor
  9596  02DA  0020               	movlb	0	; select bank0
  9597  02DB  0826               	movf	readAnalog@channel,w
  9598  02DC  00A8               	movwf	??_readAnalog
  9599  02DD  3001               	movlw	1
  9600  02DE                     u3345:	
  9601  02DE  35A8               	lslf	??_readAnalog,f
  9602  02DF  3EFF               	addlw	-1
  9603  02E0  1D03               	skipz
  9604  02E1  2ADE               	goto	u3345
  9605  02E2  3528               	lslf	??_readAnalog,w
  9606  02E3  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9607  02E4  0086               	movwf	6
  9608  02E5  0187               	clrf	7
  9609  02E6  3F40               	moviw [0]fsr1
  9610  02E7  00F4               	movwf	___aldiv@dividend
  9611  02E8  3F41               	moviw [1]fsr1
  9612  02E9  00F5               	movwf	___aldiv@dividend+1
  9613  02EA  3F42               	moviw [2]fsr1
  9614  02EB  00F6               	movwf	___aldiv@dividend+2
  9615  02EC  3F43               	moviw [3]fsr1
  9616  02ED  00F7               	movwf	___aldiv@dividend+3
  9617  02EE  318A  2251         	fcall	___aldiv
  9618  02F0  0871               	movf	?___aldiv+1,w
  9619  02F1  00FC               	movwf	readAnalog@value+1
  9620  02F2  0870               	movf	?___aldiv,w
  9621  02F3  00FB               	movwf	readAnalog@value
  9622                           
  9623                           ;adc.c: 56: return value;
  9624  02F4  087C               	movf	readAnalog@value+1,w
  9625  02F5  0020               	movlb	0	; select bank0
  9626  02F6  00A7               	movwf	?_readAnalog+1
  9627  02F7  087B               	movf	readAnalog@value,w
  9628  02F8  00A6               	movwf	?_readAnalog
  9629  02F9  0008               	return
  9630  02FA                     __end_of_readAnalog:	
  9631                           
  9632                           	psect	text14
  9633  0A51                     __ptext14:	
  9634 ;; *************** function ___aldiv *****************
  9635 ;; Defined at:
  9636 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  divisor         4    0[COMMON] long 
  9639 ;;  dividend        4    4[COMMON] long 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;  quotient        4    2[BANK0 ] long 
  9642 ;;  sign            1    1[BANK0 ] unsigned char 
  9643 ;;  counter         1    0[BANK0 ] unsigned char 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  4    0[COMMON] long 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:       15 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_readAnalog
  9663 ;;		_main
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           
  9668                           ;psect for function ___aldiv
  9669  0A51                     ___aldiv:	
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9673  0A51  0020               	movlb	0	; select bank0
  9674  0A52  01A1               	clrf	___aldiv@sign
  9675  0A53  1FF3               	btfss	___aldiv@divisor+3,7
  9676  0A54  2A62               	goto	l579
  9677  0A55  09F0               	comf	___aldiv@divisor,f
  9678  0A56  09F1               	comf	___aldiv@divisor+1,f
  9679  0A57  09F2               	comf	___aldiv@divisor+2,f
  9680  0A58  09F3               	comf	___aldiv@divisor+3,f
  9681  0A59  0AF0               	incf	___aldiv@divisor,f
  9682  0A5A  1903               	skipnz
  9683  0A5B  0AF1               	incf	___aldiv@divisor+1,f
  9684  0A5C  1903               	skipnz
  9685  0A5D  0AF2               	incf	___aldiv@divisor+2,f
  9686  0A5E  1903               	skipnz
  9687  0A5F  0AF3               	incf	___aldiv@divisor+3,f
  9688  0A60  01A1               	clrf	___aldiv@sign
  9689  0A61  0AA1               	incf	___aldiv@sign,f
  9690  0A62                     l579:	
  9691  0A62  1FF7               	btfss	___aldiv@dividend+3,7
  9692  0A63  2A73               	goto	l2734
  9693  0A64  09F4               	comf	___aldiv@dividend,f
  9694  0A65  09F5               	comf	___aldiv@dividend+1,f
  9695  0A66  09F6               	comf	___aldiv@dividend+2,f
  9696  0A67  09F7               	comf	___aldiv@dividend+3,f
  9697  0A68  0AF4               	incf	___aldiv@dividend,f
  9698  0A69  1903               	skipnz
  9699  0A6A  0AF5               	incf	___aldiv@dividend+1,f
  9700  0A6B  1903               	skipnz
  9701  0A6C  0AF6               	incf	___aldiv@dividend+2,f
  9702  0A6D  1903               	skipnz
  9703  0A6E  0AF7               	incf	___aldiv@dividend+3,f
  9704  0A6F  3001               	movlw	1
  9705  0A70  00F8               	movwf	??___aldiv
  9706  0A71  0878               	movf	??___aldiv,w
  9707  0A72  06A1               	xorwf	___aldiv@sign,f
  9708  0A73                     l2734:	
  9709  0A73  3000               	movlw	0
  9710  0A74  00A5               	movwf	___aldiv@quotient+3
  9711  0A75  3000               	movlw	0
  9712  0A76  00A4               	movwf	___aldiv@quotient+2
  9713  0A77  3000               	movlw	0
  9714  0A78  00A3               	movwf	___aldiv@quotient+1
  9715  0A79  3000               	movlw	0
  9716  0A7A  00A2               	movwf	___aldiv@quotient
  9717  0A7B  0873               	movf	___aldiv@divisor+3,w
  9718  0A7C  0472               	iorwf	___aldiv@divisor+2,w
  9719  0A7D  0471               	iorwf	___aldiv@divisor+1,w
  9720  0A7E  0470               	iorwf	___aldiv@divisor,w
  9721  0A7F  1903               	skipnz
  9722  0A80  2ABC               	goto	l2756
  9723  0A81  01A0               	clrf	___aldiv@counter
  9724  0A82  0AA0               	incf	___aldiv@counter,f
  9725  0A83                     l2742:	
  9726  0A83  1BF3               	btfsc	___aldiv@divisor+3,7
  9727  0A84  2A91               	goto	l2744
  9728  0A85  3001               	movlw	1
  9729  0A86                     u2955:	
  9730  0A86  35F0               	lslf	___aldiv@divisor,f
  9731  0A87  0DF1               	rlf	___aldiv@divisor+1,f
  9732  0A88  0DF2               	rlf	___aldiv@divisor+2,f
  9733  0A89  0DF3               	rlf	___aldiv@divisor+3,f
  9734  0A8A  0B89               	decfsz	9,f
  9735  0A8B  2A86               	goto	u2955
  9736  0A8C  3001               	movlw	1
  9737  0A8D  00F8               	movwf	??___aldiv
  9738  0A8E  0878               	movf	??___aldiv,w
  9739  0A8F  07A0               	addwf	___aldiv@counter,f
  9740  0A90  2A83               	goto	l2742
  9741  0A91                     l2744:	
  9742  0A91  3001               	movlw	1
  9743  0A92                     u2975:	
  9744  0A92  35A2               	lslf	___aldiv@quotient,f
  9745  0A93  0DA3               	rlf	___aldiv@quotient+1,f
  9746  0A94  0DA4               	rlf	___aldiv@quotient+2,f
  9747  0A95  0DA5               	rlf	___aldiv@quotient+3,f
  9748  0A96  0B89               	decfsz	9,f
  9749  0A97  2A92               	goto	u2975
  9750  0A98  0873               	movf	___aldiv@divisor+3,w
  9751  0A99  0277               	subwf	___aldiv@dividend+3,w
  9752  0A9A  1D03               	skipz
  9753  0A9B  2AA6               	goto	u2985
  9754  0A9C  0872               	movf	___aldiv@divisor+2,w
  9755  0A9D  0276               	subwf	___aldiv@dividend+2,w
  9756  0A9E  1D03               	skipz
  9757  0A9F  2AA6               	goto	u2985
  9758  0AA0  0871               	movf	___aldiv@divisor+1,w
  9759  0AA1  0275               	subwf	___aldiv@dividend+1,w
  9760  0AA2  1D03               	skipz
  9761  0AA3  2AA6               	goto	u2985
  9762  0AA4  0870               	movf	___aldiv@divisor,w
  9763  0AA5  0274               	subwf	___aldiv@dividend,w
  9764  0AA6                     u2985:	
  9765  0AA6  1C03               	skipc
  9766  0AA7  2AB1               	goto	l2752
  9767  0AA8  0870               	movf	___aldiv@divisor,w
  9768  0AA9  02F4               	subwf	___aldiv@dividend,f
  9769  0AAA  0871               	movf	___aldiv@divisor+1,w
  9770  0AAB  3BF5               	subwfb	___aldiv@dividend+1,f
  9771  0AAC  0872               	movf	___aldiv@divisor+2,w
  9772  0AAD  3BF6               	subwfb	___aldiv@dividend+2,f
  9773  0AAE  0873               	movf	___aldiv@divisor+3,w
  9774  0AAF  3BF7               	subwfb	___aldiv@dividend+3,f
  9775  0AB0  1422               	bsf	___aldiv@quotient,0
  9776  0AB1                     l2752:	
  9777  0AB1  3001               	movlw	1
  9778  0AB2                     u2995:	
  9779  0AB2  36F3               	lsrf	___aldiv@divisor+3,f
  9780  0AB3  0CF2               	rrf	___aldiv@divisor+2,f
  9781  0AB4  0CF1               	rrf	___aldiv@divisor+1,f
  9782  0AB5  0CF0               	rrf	___aldiv@divisor,f
  9783  0AB6  0B89               	decfsz	9,f
  9784  0AB7  2AB2               	goto	u2995
  9785  0AB8  3001               	movlw	1
  9786  0AB9  02A0               	subwf	___aldiv@counter,f
  9787  0ABA  1D03               	btfss	3,2
  9788  0ABB  2A91               	goto	l2744
  9789  0ABC                     l2756:	
  9790  0ABC  0821               	movf	___aldiv@sign,w
  9791  0ABD  1903               	btfsc	3,2
  9792  0ABE  2ACA               	goto	l2760
  9793  0ABF  09A2               	comf	___aldiv@quotient,f
  9794  0AC0  09A3               	comf	___aldiv@quotient+1,f
  9795  0AC1  09A4               	comf	___aldiv@quotient+2,f
  9796  0AC2  09A5               	comf	___aldiv@quotient+3,f
  9797  0AC3  0AA2               	incf	___aldiv@quotient,f
  9798  0AC4  1903               	skipnz
  9799  0AC5  0AA3               	incf	___aldiv@quotient+1,f
  9800  0AC6  1903               	skipnz
  9801  0AC7  0AA4               	incf	___aldiv@quotient+2,f
  9802  0AC8  1903               	skipnz
  9803  0AC9  0AA5               	incf	___aldiv@quotient+3,f
  9804  0ACA                     l2760:	
  9805  0ACA  0825               	movf	___aldiv@quotient+3,w
  9806  0ACB  00F3               	movwf	?___aldiv+3
  9807  0ACC  0824               	movf	___aldiv@quotient+2,w
  9808  0ACD  00F2               	movwf	?___aldiv+2
  9809  0ACE  0823               	movf	___aldiv@quotient+1,w
  9810  0ACF  00F1               	movwf	?___aldiv+1
  9811  0AD0  0822               	movf	___aldiv@quotient,w
  9812  0AD1  00F0               	movwf	?___aldiv
  9813  0AD2  0008               	return
  9814  0AD3                     __end_of___aldiv:	
  9815                           
  9816                           	psect	text15
  9817  167D                     __ptext15:	
  9818 ;; *************** function _ADCRead *****************
  9819 ;; Defined at:
  9820 ;;		line 16 in file "adc.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  channel         1    wreg     enum E13559
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  channel         1    3[COMMON] enum E13559
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  2    0[COMMON] unsigned int 
  9827 ;; Registers used:
  9828 ;;		wreg
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9834 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;Total ram usage:        4 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_readAnalog
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           
  9848                           ;psect for function _ADCRead
  9849  167D                     _ADCRead:	
  9850                           
  9851                           ;incstack = 0
  9852                           ; Regs used in _ADCRead: [wreg]
  9853                           ;ADCRead@channel stored from wreg
  9854  167D  00F3               	movwf	ADCRead@channel
  9855                           
  9856                           ;adc.c: 18: ADPCH = channel;
  9857  167E  0873               	movf	ADCRead@channel,w
  9858  167F  0021               	movlb	1	; select bank1
  9859  1680  009E               	movwf	30	;volatile
  9860                           
  9861                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9862  1681  1793               	bsf	19,7	;volatile
  9863                           
  9864                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9865  1682  1313               	bcf	19,6	;volatile
  9866                           
  9867                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9868  1683  1413               	bsf	19,0	;volatile
  9869  1684                     l288:	
  9870                           ;adc.c: 27: {
  9871                           
  9872                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9873                           
  9874  1684  1813               	btfsc	19,0	;volatile
  9875  1685  2E84               	goto	l288
  9876                           
  9877                           ;adc.c: 28: }
  9878                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9879  1686  080D               	movf	13,w	;volatile
  9880  1687  00F1               	movwf	?_ADCRead+1
  9881  1688  080C               	movf	12,w	;volatile
  9882  1689  00F0               	movwf	?_ADCRead
  9883  168A  0008               	return
  9884  168B                     __end_of_ADCRead:	
  9885                           
  9886                           	psect	text16
  9887  02FA                     __ptext16:	
  9888 ;; *************** function _menuChoice *****************
  9889 ;; Defined at:
  9890 ;;		line 52 in file "menu.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;Total ram usage:        5 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    3
  9911 ;; This function calls:
  9912 ;;		_LCD_Clear
  9913 ;;		_LCD_Set_Cursor
  9914 ;;		_LCD_Write_Char
  9915 ;;		_LCD_Write_Int
  9916 ;;		_LCD_Write_String
  9917 ;;		_PWM7_LoadDutyValue
  9918 ;;		_readKey
  9919 ;; This function is called by:
  9920 ;;		_main
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           
  9925                           ;psect for function _menuChoice
  9926  02FA                     _menuChoice:	
  9927  02FA                     l2992:	
  9928                           ;menu.c: 54: while(RB2 != 1)
  9929                           
  9930                           ;incstack = 0
  9931                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9932                           
  9933  02FA  0020               	movlb	0	; select bank0
  9934  02FB  190D               	btfsc	13,2	;volatile
  9935  02FC  2B53               	goto	l2994
  9936                           
  9937                           ;menu.c: 55: {
  9938                           ;menu.c: 56: choice = readKey();
  9939  02FD  3196  26A1  3182   	fcall	_readKey
  9940  0300  0020               	movlb	0	; select bank0
  9941  0301  00AE               	movwf	??_menuChoice
  9942  0302  082E               	movf	??_menuChoice,w
  9943  0303  0021               	movlb	1	; select bank1
  9944  0304  00C4               	movwf	_choice^(0+128)
  9945                           
  9946                           ;menu.c: 58: if(timer > 4000)
  9947  0305  0843               	movf	(_timer+1)^(0+128),w
  9948  0306  3A80               	xorlw	128
  9949  0307  0020               	movlb	0	; select bank0
  9950  0308  00AE               	movwf	??_menuChoice
  9951  0309  308F               	movlw	143
  9952  030A  022E               	subwf	??_menuChoice,w
  9953  030B  1D03               	skipz
  9954  030C  2B10               	goto	u3355
  9955  030D  30A1               	movlw	161
  9956  030E  0021               	movlb	1	; select bank1
  9957  030F  0242               	subwf	_timer^(0+128),w
  9958  0310                     u3355:	
  9959  0310  1C03               	skipc
  9960  0311  2B16               	goto	l2970
  9961                           
  9962                           ;menu.c: 59: {
  9963                           ;menu.c: 60: timer = 0;
  9964  0312  0021               	movlb	1	; select bank1
  9965  0313  01C2               	clrf	_timer^(0+128)
  9966  0314  01C3               	clrf	(_timer+1)^(0+128)
  9967                           
  9968                           ;menu.c: 61: goto Exit;
  9969  0315  2D2E               	goto	l3102
  9970  0316                     l2970:	
  9971                           
  9972                           ;menu.c: 62: }
  9973                           ;menu.c: 64: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9974  0316  307E               	movlw	126
  9975  0317  0021               	movlb	1	; select bank1
  9976  0318  0248               	subwf	_timer2^(0+128),w
  9977  0319  1C03               	skipc
  9978  031A  2B24               	goto	l2976
  9979  031B  01F4               	clrf	LCD_Set_Cursor@y
  9980  031C  3000               	movlw	0
  9981  031D  3188  2076  3182   	fcall	_LCD_Set_Cursor
  9982  0320  305F               	movlw	low (STR_3| (0+32768))
  9983  0321  00F5               	movwf	LCD_Write_String@a
  9984  0322  3090               	movlw	high (STR_3| (0+32768))
  9985  0323  2B2C               	goto	L3
  9986  0324                     l2976:	
  9987  0324  01F4               	clrf	LCD_Set_Cursor@y
  9988  0325  3000               	movlw	0
  9989  0326  3188  2076  3182   	fcall	_LCD_Set_Cursor
  9990  0329  304E               	movlw	low (STR_4| (0+32768))
  9991  032A  00F5               	movwf	LCD_Write_String@a
  9992  032B  3090               	movlw	high (STR_4| (0+32768))
  9993  032C                     L3:	
  9994  032C  00F6               	movwf	LCD_Write_String@a+1
  9995  032D  3196  26EA  3182   	fcall	_LCD_Write_String
  9996                           
  9997                           ;menu.c: 66: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
  9998  0330  01F4               	clrf	LCD_Set_Cursor@y
  9999  0331  0AF4               	incf	LCD_Set_Cursor@y,f
 10000  0332  3000               	movlw	0
 10001  0333  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10002  0336  0021               	movlb	1	; select bank1
 10003  0337  3544               	lslf	_choice^(0+128),w
 10004  0338  3EB4               	addlw	(low (_desc| (0+256)))& (0+255)
 10005  0339  0086               	movwf	6
 10006  033A  3001               	movlw	1	; select bank3/4
 10007  033B  0087               	movwf	7
 10008  033C  3F40               	moviw [0]fsr1
 10009  033D  00F5               	movwf	LCD_Write_String@a
 10010  033E  3F41               	moviw [1]fsr1
 10011  033F  00F6               	movwf	LCD_Write_String@a+1
 10012  0340  3196  26EA  3182   	fcall	_LCD_Write_String
 10013                           
 10014                           ;menu.c: 68: if(timer2>249)timer2=0;
 10015  0343  30FA               	movlw	250
 10016  0344  0021               	movlb	1	; select bank1
 10017  0345  0248               	subwf	_timer2^(0+128),w
 10018  0346  1803               	btfsc	3,0
 10019  0347  01C8               	clrf	_timer2^(0+128)
 10020                           
 10021                           ;menu.c: 70: timer+=1;
 10022  0348  3001               	movlw	1
 10023  0349  07C2               	addwf	_timer^(0+128),f
 10024  034A  3000               	movlw	0
 10025  034B  3DC3               	addwfc	(_timer+1)^(0+128),f
 10026                           
 10027                           ;menu.c: 71: timer2+=1;
 10028  034C  3001               	movlw	1
 10029  034D  0020               	movlb	0	; select bank0
 10030  034E  00AE               	movwf	??_menuChoice
 10031  034F  082E               	movf	??_menuChoice,w
 10032  0350  0021               	movlb	1	; select bank1
 10033  0351  07C8               	addwf	_timer2^(0+128),f
 10034  0352  2AFA               	goto	l2992
 10035  0353                     l2994:	
 10036                           
 10037                           ;menu.c: 72: }
 10038                           ;menu.c: 73: timer=0;
 10039  0353  0021               	movlb	1	; select bank1
 10040  0354  01C2               	clrf	_timer^(0+128)
 10041  0355  01C3               	clrf	(_timer+1)^(0+128)
 10042                           
 10043                           ;menu.c: 74: timer2=0;
 10044  0356  01C8               	clrf	_timer2^(0+128)
 10045                           
 10046                           ;menu.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10047  0357  3029               	movlw	41
 10048  0358  0020               	movlb	0	; select bank0
 10049  0359  00B0               	movwf	??_menuChoice+2
 10050  035A  3096               	movlw	150
 10051  035B  00AF               	movwf	??_menuChoice+1
 10052  035C  30A6               	movlw	166
 10053  035D  00AE               	movwf	??_menuChoice
 10054  035E                     u3727:	
 10055  035E  0BAE               	decfsz	??_menuChoice,f
 10056  035F  2B5E               	goto	u3727
 10057  0360  0BAF               	decfsz	??_menuChoice+1,f
 10058  0361  2B5E               	goto	u3727
 10059  0362  0BB0               	decfsz	??_menuChoice+2,f
 10060  0363  2B5E               	goto	u3727
 10061                           
 10062                           ;menu.c: 78: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10063  0364  0021               	movlb	1	; select bank1
 10064  0365  0844               	movf	_choice^(0+128),w
 10065  0366  1D03               	btfss	3,2
 10066  0367  2B7C               	goto	l3004
 10067  0368  01F4               	clrf	LCD_Set_Cursor@y
 10068  0369  0AF4               	incf	LCD_Set_Cursor@y,f
 10069  036A  300A               	movlw	10
 10070  036B  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10071  036E  0021               	movlb	1	; select bank1
 10072  036F  3544               	lslf	_choice^(0+128),w
 10073  0370  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10074  0371  0086               	movwf	6
 10075  0372  0187               	clrf	7
 10076  0373  3F40               	moviw [0]fsr1
 10077  0374  00F9               	movwf	LCD_Write_Int@value
 10078  0375  3F41               	moviw [1]fsr1
 10079  0376  00FA               	movwf	LCD_Write_Int@value+1
 10080  0377  01FB               	clrf	LCD_Write_Int@fieldLength
 10081  0378  03FB               	decf	LCD_Write_Int@fieldLength,f
 10082  0379  01FC               	clrf	LCD_Write_Int@numPlaces
 10083  037A  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10084  037B  2B8E               	goto	L4
 10085  037C                     l3004:	
 10086  037C  01F4               	clrf	LCD_Set_Cursor@y
 10087  037D  0AF4               	incf	LCD_Set_Cursor@y,f
 10088  037E  300A               	movlw	10
 10089  037F  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10090  0382  0021               	movlb	1	; select bank1
 10091  0383  3544               	lslf	_choice^(0+128),w
 10092  0384  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10093  0385  0086               	movwf	6
 10094  0386  0187               	clrf	7
 10095  0387  3F40               	moviw [0]fsr1
 10096  0388  00F9               	movwf	LCD_Write_Int@value
 10097  0389  3F41               	moviw [1]fsr1
 10098  038A  00FA               	movwf	LCD_Write_Int@value+1
 10099  038B  01FB               	clrf	LCD_Write_Int@fieldLength
 10100  038C  03FB               	decf	LCD_Write_Int@fieldLength,f
 10101  038D  01FC               	clrf	LCD_Write_Int@numPlaces
 10102  038E                     L4:	
 10103  038E  01FD               	clrf	LCD_Write_Int@sign
 10104  038F  318D  2566  3182   	fcall	_LCD_Write_Int
 10105                           
 10106                           ;menu.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10107  0392  3052               	movlw	82
 10108  0393  0020               	movlb	0	; select bank0
 10109  0394  00B0               	movwf	??_menuChoice+2
 10110  0395  302C               	movlw	44
 10111  0396  00AF               	movwf	??_menuChoice+1
 10112  0397  304F               	movlw	79
 10113  0398  00AE               	movwf	??_menuChoice
 10114  0399                     u3737:	
 10115  0399  0BAE               	decfsz	??_menuChoice,f
 10116  039A  2B99               	goto	u3737
 10117  039B  0BAF               	decfsz	??_menuChoice+1,f
 10118  039C  2B99               	goto	u3737
 10119  039D  0BB0               	decfsz	??_menuChoice+2,f
 10120  039E  2B99               	goto	u3737
 10121  039F  3200               	nop2
 10122                           
 10123                           ;menu.c: 82: while(RB2 != 1)
 10124  03A0  2D00               	goto	l3100
 10125  03A1                     l3020:	
 10126                           ;menu.c: 89: goto Exit;
 10127                           
 10128                           
 10129                           ;menu.c: 90: }
 10130                           ;menu.c: 91: _delay((unsigned long)((2)*(32000000/4000.0)));
 10131  03A1  3015               	movlw	21
 10132  03A2  0020               	movlb	0	; select bank0
 10133  03A3  00AF               	movwf	??_menuChoice+1
 10134  03A4  30C6               	movlw	198
 10135  03A5  00AE               	movwf	??_menuChoice
 10136  03A6                     u3757:	
 10137  03A6  0BAE               	decfsz	??_menuChoice,f
 10138  03A7  2BA6               	goto	u3757
 10139  03A8  0BAF               	decfsz	??_menuChoice+1,f
 10140  03A9  2BA6               	goto	u3757
 10141  03AA  0000               	nop
 10142                           
 10143                           ;menu.c: 92: timer+=1;
 10144  03AB  3001               	movlw	1
 10145  03AC  0021               	movlb	1	; select bank1
 10146  03AD  07C2               	addwf	_timer^(0+128),f
 10147  03AE  3000               	movlw	0
 10148  03AF  3DC3               	addwfc	(_timer+1)^(0+128),f
 10149                           
 10150                           ;menu.c: 94: if(RB0==1)
 10151  03B0  0020               	movlb	0	; select bank0
 10152  03B1  1C0D               	btfss	13,0	;volatile
 10153  03B2  2C45               	goto	l3054
 10154                           
 10155                           ;menu.c: 95: {
 10156                           ;menu.c: 96: delayCount+=2;
 10157  03B3  3002               	movlw	2
 10158  03B4  00AE               	movwf	??_menuChoice
 10159  03B5  082E               	movf	??_menuChoice,w
 10160  03B6  0021               	movlb	1	; select bank1
 10161  03B7  07C5               	addwf	_delayCount^(0+128),f
 10162                           
 10163                           ;menu.c: 98: setpoint[choice]+=1;
 10164  03B8  3544               	lslf	_choice^(0+128),w
 10165  03B9  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10166  03BA  0086               	movwf	6
 10167  03BB  0187               	clrf	7
 10168  03BC  3001               	movlw	1
 10169  03BD  0781               	addwf	1,f
 10170  03BE  3141               	addfsr 1,1
 10171  03BF  1803               	skipnc
 10172  03C0  0A81               	incf	1,f
 10173                           
 10174                           ;menu.c: 99: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10175  03C1  3544               	lslf	_choice^(0+128),w
 10176  03C2  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10177  03C3  0086               	movwf	6
 10178  03C4  0187               	clrf	7
 10179  03C5  3F40               	moviw [0]fsr1
 10180  03C6  0020               	movlb	0	; select bank0
 10181  03C7  00AE               	movwf	??_menuChoice
 10182  03C8  3F41               	moviw [1]fsr1
 10183  03C9  00AF               	movwf	??_menuChoice+1
 10184  03CA  0021               	movlb	1	; select bank1
 10185  03CB  3544               	lslf	_choice^(0+128),w
 10186  03CC  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10187  03CD  0086               	movwf	6
 10188  03CE  3001               	movlw	1	; select bank3/4
 10189  03CF  0087               	movwf	7
 10190  03D0  3F40               	moviw [0]fsr1
 10191  03D1  0020               	movlb	0	; select bank0
 10192  03D2  00B0               	movwf	??_menuChoice+2
 10193  03D3  3F41               	moviw [1]fsr1
 10194  03D4  00B1               	movwf	??_menuChoice+3
 10195  03D5  0831               	movf	??_menuChoice+3,w
 10196  03D6  3A80               	xorlw	128
 10197  03D7  00B2               	movwf	??_menuChoice+4
 10198  03D8  082F               	movf	??_menuChoice+1,w
 10199  03D9  3A80               	xorlw	128
 10200  03DA  0232               	subwf	??_menuChoice+4,w
 10201  03DB  1D03               	skipz
 10202  03DC  2BDF               	goto	u3425
 10203  03DD  082E               	movf	??_menuChoice,w
 10204  03DE  0230               	subwf	??_menuChoice+2,w
 10205  03DF                     u3425:	
 10206  03DF  1803               	skipnc
 10207  03E0  2BEF               	goto	l3032
 10208  03E1  0021               	movlb	1	; select bank1
 10209  03E2  3544               	lslf	_choice^(0+128),w
 10210  03E3  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10211  03E4  0086               	movwf	6
 10212  03E5  3001               	movlw	1	; select bank3/4
 10213  03E6  0087               	movwf	7
 10214  03E7  3544               	lslf	_choice^(0+128),w
 10215  03E8  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10216  03E9  0084               	movwf	4
 10217  03EA  0185               	clrf	5
 10218  03EB  3F40               	moviw [0]fsr1
 10219  03EC  3F80               	movwi [0]fsr0
 10220  03ED  3F41               	moviw [1]fsr1
 10221  03EE  3F81               	movwi [1]fsr0
 10222  03EF                     l3032:	
 10223                           
 10224                           ;menu.c: 100: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10225  03EF  0021               	movlb	1	; select bank1
 10226  03F0  0844               	movf	_choice^(0+128),w
 10227  03F1  1D03               	btfss	3,2
 10228  03F2  2C07               	goto	l3038
 10229  03F3  01F4               	clrf	LCD_Set_Cursor@y
 10230  03F4  0AF4               	incf	LCD_Set_Cursor@y,f
 10231  03F5  300A               	movlw	10
 10232  03F6  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10233  03F9  0021               	movlb	1	; select bank1
 10234  03FA  3544               	lslf	_choice^(0+128),w
 10235  03FB  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10236  03FC  0086               	movwf	6
 10237  03FD  0187               	clrf	7
 10238  03FE  3F40               	moviw [0]fsr1
 10239  03FF  00F9               	movwf	LCD_Write_Int@value
 10240  0400  3F41               	moviw [1]fsr1
 10241  0401  00FA               	movwf	LCD_Write_Int@value+1
 10242  0402  01FB               	clrf	LCD_Write_Int@fieldLength
 10243  0403  03FB               	decf	LCD_Write_Int@fieldLength,f
 10244  0404  01FC               	clrf	LCD_Write_Int@numPlaces
 10245  0405  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10246  0406  2C19               	goto	L5
 10247  0407                     l3038:	
 10248  0407  01F4               	clrf	LCD_Set_Cursor@y
 10249  0408  0AF4               	incf	LCD_Set_Cursor@y,f
 10250  0409  300A               	movlw	10
 10251  040A  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10252  040D  0021               	movlb	1	; select bank1
 10253  040E  3544               	lslf	_choice^(0+128),w
 10254  040F  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10255  0410  0086               	movwf	6
 10256  0411  0187               	clrf	7
 10257  0412  3F40               	moviw [0]fsr1
 10258  0413  00F9               	movwf	LCD_Write_Int@value
 10259  0414  3F41               	moviw [1]fsr1
 10260  0415  00FA               	movwf	LCD_Write_Int@value+1
 10261  0416  01FB               	clrf	LCD_Write_Int@fieldLength
 10262  0417  03FB               	decf	LCD_Write_Int@fieldLength,f
 10263  0418  01FC               	clrf	LCD_Write_Int@numPlaces
 10264  0419                     L5:	
 10265  0419  01FD               	clrf	LCD_Write_Int@sign
 10266  041A  318D  2566  3182   	fcall	_LCD_Write_Int
 10267                           
 10268                           ;menu.c: 101: LCD_Write_Char(' ');
 10269  041D  3020               	movlw	32
 10270  041E  3197  27A3  3182   	fcall	_LCD_Write_Char
 10271                           
 10272                           ;menu.c: 102: menuDelay=1255;
 10273  0421  30E7               	movlw	231
 10274  0422  0021               	movlb	1	; select bank1
 10275  0423  00B4               	movwf	_menuDelay^(0+128)
 10276  0424  3004               	movlw	4
 10277  0425  00B5               	movwf	(_menuDelay^(0+128)+1)
 10278                           
 10279                           ;menu.c: 103: if(delayCount<30)
 10280  0426  301E               	movlw	30
 10281  0427  0245               	subwf	_delayCount^(0+128),w
 10282  0428  1803               	skipnc
 10283  0429  2C38               	goto	l370
 10284                           
 10285                           ;menu.c: 104: {
 10286                           ;menu.c: 105: _delay((unsigned long)((150)*(32000000/4000.0)));
 10287  042A  3007               	movlw	7
 10288  042B  0020               	movlb	0	; select bank0
 10289  042C  00B0               	movwf	??_menuChoice+2
 10290  042D  3017               	movlw	23
 10291  042E  00AF               	movwf	??_menuChoice+1
 10292  042F  306F               	movlw	111
 10293  0430  00AE               	movwf	??_menuChoice
 10294  0431                     u3767:	
 10295  0431  0BAE               	decfsz	??_menuChoice,f
 10296  0432  2C31               	goto	u3767
 10297  0433  0BAF               	decfsz	??_menuChoice+1,f
 10298  0434  2C31               	goto	u3767
 10299  0435  0BB0               	decfsz	??_menuChoice+2,f
 10300  0436  2C31               	goto	u3767
 10301  0437  0000               	nop
 10302  0438                     l370:	
 10303                           
 10304                           ;menu.c: 106: }
 10305                           ;menu.c: 107: if(delayCount>(30+10))delayCount=(30+10);
 10306  0438  3029               	movlw	41
 10307  0439  0021               	movlb	1	; select bank1
 10308  043A  0245               	subwf	_delayCount^(0+128),w
 10309  043B  1C03               	skipc
 10310  043C  2C43               	goto	l3052
 10311  043D  3028               	movlw	40
 10312  043E  0020               	movlb	0	; select bank0
 10313  043F  00AE               	movwf	??_menuChoice
 10314  0440  082E               	movf	??_menuChoice,w
 10315  0441  0021               	movlb	1	; select bank1
 10316  0442  00C5               	movwf	_delayCount^(0+128)
 10317  0443                     l3052:	
 10318                           
 10319                           ;menu.c: 109: timer=0;
 10320  0443  01C2               	clrf	_timer^(0+128)
 10321  0444  01C3               	clrf	(_timer+1)^(0+128)
 10322  0445                     l3054:	
 10323                           
 10324                           ;menu.c: 110: }
 10325                           ;menu.c: 113: if(RB1==1)
 10326  0445  0020               	movlb	0	; select bank0
 10327  0446  1C8D               	btfss	13,1	;volatile
 10328  0447  2CDB               	goto	l3086
 10329                           
 10330                           ;menu.c: 114: {
 10331                           ;menu.c: 115: delayCount+=2;
 10332  0448  3002               	movlw	2
 10333  0449  00AE               	movwf	??_menuChoice
 10334  044A  082E               	movf	??_menuChoice,w
 10335  044B  0021               	movlb	1	; select bank1
 10336  044C  07C5               	addwf	_delayCount^(0+128),f
 10337                           
 10338                           ;menu.c: 116: setpoint[choice]-=1;
 10339  044D  3544               	lslf	_choice^(0+128),w
 10340  044E  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10341  044F  0086               	movwf	6
 10342  0450  0187               	clrf	7
 10343  0451  30FF               	movlw	255
 10344  0452  0781               	addwf	1,f
 10345  0453  3141               	addfsr 1,1
 10346  0454  30FF               	movlw	255
 10347  0455  3D81               	addwfc	1,f
 10348  0456  317F               	addfsr 1,-1
 10349                           
 10350                           ;menu.c: 117: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10351  0457  3544               	lslf	_choice^(0+128),w
 10352  0458  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10353  0459  0086               	movwf	6
 10354  045A  3001               	movlw	1	; select bank3/4
 10355  045B  0087               	movwf	7
 10356  045C  3F40               	moviw [0]fsr1
 10357  045D  0020               	movlb	0	; select bank0
 10358  045E  00AE               	movwf	??_menuChoice
 10359  045F  3F41               	moviw [1]fsr1
 10360  0460  00AF               	movwf	??_menuChoice+1
 10361  0461  0021               	movlb	1	; select bank1
 10362  0462  3544               	lslf	_choice^(0+128),w
 10363  0463  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10364  0464  0086               	movwf	6
 10365  0465  0187               	clrf	7
 10366  0466  3F40               	moviw [0]fsr1
 10367  0467  0020               	movlb	0	; select bank0
 10368  0468  00B0               	movwf	??_menuChoice+2
 10369  0469  3F41               	moviw [1]fsr1
 10370  046A  00B1               	movwf	??_menuChoice+3
 10371  046B  0831               	movf	??_menuChoice+3,w
 10372  046C  3A80               	xorlw	128
 10373  046D  00B2               	movwf	??_menuChoice+4
 10374  046E  082F               	movf	??_menuChoice+1,w
 10375  046F  3A80               	xorlw	128
 10376  0470  0232               	subwf	??_menuChoice+4,w
 10377  0471  1D03               	skipz
 10378  0472  2C75               	goto	u3475
 10379  0473  082E               	movf	??_menuChoice,w
 10380  0474  0230               	subwf	??_menuChoice+2,w
 10381  0475                     u3475:	
 10382  0475  1803               	skipnc
 10383  0476  2C85               	goto	l3064
 10384  0477  0021               	movlb	1	; select bank1
 10385  0478  3544               	lslf	_choice^(0+128),w
 10386  0479  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10387  047A  0086               	movwf	6
 10388  047B  3001               	movlw	1	; select bank3/4
 10389  047C  0087               	movwf	7
 10390  047D  3544               	lslf	_choice^(0+128),w
 10391  047E  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10392  047F  0084               	movwf	4
 10393  0480  0185               	clrf	5
 10394  0481  3F40               	moviw [0]fsr1
 10395  0482  3F80               	movwi [0]fsr0
 10396  0483  3F41               	moviw [1]fsr1
 10397  0484  3F81               	movwi [1]fsr0
 10398  0485                     l3064:	
 10399                           
 10400                           ;menu.c: 118: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10401  0485  0021               	movlb	1	; select bank1
 10402  0486  0844               	movf	_choice^(0+128),w
 10403  0487  1D03               	btfss	3,2
 10404  0488  2C9D               	goto	l3070
 10405  0489  01F4               	clrf	LCD_Set_Cursor@y
 10406  048A  0AF4               	incf	LCD_Set_Cursor@y,f
 10407  048B  300A               	movlw	10
 10408  048C  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10409  048F  0021               	movlb	1	; select bank1
 10410  0490  3544               	lslf	_choice^(0+128),w
 10411  0491  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10412  0492  0086               	movwf	6
 10413  0493  0187               	clrf	7
 10414  0494  3F40               	moviw [0]fsr1
 10415  0495  00F9               	movwf	LCD_Write_Int@value
 10416  0496  3F41               	moviw [1]fsr1
 10417  0497  00FA               	movwf	LCD_Write_Int@value+1
 10418  0498  01FB               	clrf	LCD_Write_Int@fieldLength
 10419  0499  03FB               	decf	LCD_Write_Int@fieldLength,f
 10420  049A  01FC               	clrf	LCD_Write_Int@numPlaces
 10421  049B  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10422  049C  2CAF               	goto	L6
 10423  049D                     l3070:	
 10424  049D  01F4               	clrf	LCD_Set_Cursor@y
 10425  049E  0AF4               	incf	LCD_Set_Cursor@y,f
 10426  049F  300A               	movlw	10
 10427  04A0  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10428  04A3  0021               	movlb	1	; select bank1
 10429  04A4  3544               	lslf	_choice^(0+128),w
 10430  04A5  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10431  04A6  0086               	movwf	6
 10432  04A7  0187               	clrf	7
 10433  04A8  3F40               	moviw [0]fsr1
 10434  04A9  00F9               	movwf	LCD_Write_Int@value
 10435  04AA  3F41               	moviw [1]fsr1
 10436  04AB  00FA               	movwf	LCD_Write_Int@value+1
 10437  04AC  01FB               	clrf	LCD_Write_Int@fieldLength
 10438  04AD  03FB               	decf	LCD_Write_Int@fieldLength,f
 10439  04AE  01FC               	clrf	LCD_Write_Int@numPlaces
 10440  04AF                     L6:	
 10441  04AF  01FD               	clrf	LCD_Write_Int@sign
 10442  04B0  318D  2566  3182   	fcall	_LCD_Write_Int
 10443                           
 10444                           ;menu.c: 119: LCD_Write_Char(' ');
 10445  04B3  3020               	movlw	32
 10446  04B4  3197  27A3  3182   	fcall	_LCD_Write_Char
 10447                           
 10448                           ;menu.c: 120: menuDelay=1255;
 10449  04B7  30E7               	movlw	231
 10450  04B8  0021               	movlb	1	; select bank1
 10451  04B9  00B4               	movwf	_menuDelay^(0+128)
 10452  04BA  3004               	movlw	4
 10453  04BB  00B5               	movwf	(_menuDelay^(0+128)+1)
 10454                           
 10455                           ;menu.c: 122: if(delayCount<30)
 10456  04BC  301E               	movlw	30
 10457  04BD  0245               	subwf	_delayCount^(0+128),w
 10458  04BE  1803               	skipnc
 10459  04BF  2CCE               	goto	l376
 10460                           
 10461                           ;menu.c: 123: {
 10462                           ;menu.c: 124: _delay((unsigned long)((150)*(32000000/4000.0)));
 10463  04C0  3007               	movlw	7
 10464  04C1  0020               	movlb	0	; select bank0
 10465  04C2  00B0               	movwf	??_menuChoice+2
 10466  04C3  3017               	movlw	23
 10467  04C4  00AF               	movwf	??_menuChoice+1
 10468  04C5  306F               	movlw	111
 10469  04C6  00AE               	movwf	??_menuChoice
 10470  04C7                     u3777:	
 10471  04C7  0BAE               	decfsz	??_menuChoice,f
 10472  04C8  2CC7               	goto	u3777
 10473  04C9  0BAF               	decfsz	??_menuChoice+1,f
 10474  04CA  2CC7               	goto	u3777
 10475  04CB  0BB0               	decfsz	??_menuChoice+2,f
 10476  04CC  2CC7               	goto	u3777
 10477  04CD  0000               	nop
 10478  04CE                     l376:	
 10479                           
 10480                           ;menu.c: 125: }
 10481                           ;menu.c: 127: if(delayCount>(30+10))delayCount=(30+10);
 10482  04CE  3029               	movlw	41
 10483  04CF  0021               	movlb	1	; select bank1
 10484  04D0  0245               	subwf	_delayCount^(0+128),w
 10485  04D1  1C03               	skipc
 10486  04D2  2CD9               	goto	l3084
 10487  04D3  3028               	movlw	40
 10488  04D4  0020               	movlb	0	; select bank0
 10489  04D5  00AE               	movwf	??_menuChoice
 10490  04D6  082E               	movf	??_menuChoice,w
 10491  04D7  0021               	movlb	1	; select bank1
 10492  04D8  00C5               	movwf	_delayCount^(0+128)
 10493  04D9                     l3084:	
 10494                           
 10495                           ;menu.c: 129: timer=0;
 10496  04D9  01C2               	clrf	_timer^(0+128)
 10497  04DA  01C3               	clrf	(_timer+1)^(0+128)
 10498  04DB                     l3086:	
 10499                           
 10500                           ;menu.c: 130: }
 10501                           ;menu.c: 132: PWM7_LoadDutyValue(setpoint[1]);
 10502  04DB  0021               	movlb	1	; select bank1
 10503  04DC  0865               	movf	((_setpoint+1)^(0+128)+2),w
 10504  04DD  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10505  04DE  0864               	movf	(_setpoint^(0+128)+2),w
 10506  04DF  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10507  04E0  3196  268B  3182   	fcall	_PWM7_LoadDutyValue
 10508                           
 10509                           ;menu.c: 135: if(delayCount>0)delayCount-=1;
 10510  04E3  0021               	movlb	1	; select bank1
 10511  04E4  0845               	movf	_delayCount^(0+128),w
 10512  04E5  1903               	btfsc	3,2
 10513  04E6  2CE9               	goto	l3092
 10514  04E7  3001               	movlw	1
 10515  04E8  02C5               	subwf	_delayCount^(0+128),f
 10516  04E9                     l3092:	
 10517                           
 10518                           ;menu.c: 137: if(!(RB1 || RB0))
 10519  04E9  0020               	movlb	0	; select bank0
 10520  04EA  1C8D               	btfss	13,1	;volatile
 10521  04EB  180D               	btfsc	13,0	;volatile
 10522  04EC  2D00               	goto	l3100
 10523                           
 10524                           ;menu.c: 138: {
 10525                           ;menu.c: 139: if(menuDelay>0)
 10526  04ED  0021               	movlb	1	; select bank1
 10527  04EE  0835               	movf	(_menuDelay+1)^(0+128),w
 10528  04EF  3A80               	xorlw	128
 10529  04F0  0020               	movlb	0	; select bank0
 10530  04F1  00AE               	movwf	??_menuChoice
 10531  04F2  3080               	movlw	128
 10532  04F3  022E               	subwf	??_menuChoice,w
 10533  04F4  1D03               	skipz
 10534  04F5  2CF9               	goto	u3545
 10535  04F6  3001               	movlw	1
 10536  04F7  0021               	movlb	1	; select bank1
 10537  04F8  0234               	subwf	_menuDelay^(0+128),w
 10538  04F9                     u3545:	
 10539  04F9  1C03               	skipc
 10540  04FA  2D00               	goto	l3100
 10541                           
 10542                           ;menu.c: 140: {
 10543                           ;menu.c: 141: menuDelay-=1;
 10544  04FB  30FF               	movlw	255
 10545  04FC  0021               	movlb	1	; select bank1
 10546  04FD  07B4               	addwf	_menuDelay^(0+128),f
 10547  04FE  30FF               	movlw	255
 10548  04FF  3DB5               	addwfc	(_menuDelay+1)^(0+128),f
 10549  0500                     l3100:	
 10550  0500  0020               	movlb	0	; select bank0
 10551  0501  190D               	btfsc	13,2	;volatile
 10552  0502  2D2E               	goto	l3102
 10553                           
 10554                           ;menu.c: 83: {
 10555                           ;menu.c: 84: if(timer > 4000)
 10556  0503  0021               	movlb	1	; select bank1
 10557  0504  0843               	movf	(_timer+1)^(0+128),w
 10558  0505  3A80               	xorlw	128
 10559  0506  0020               	movlb	0	; select bank0
 10560  0507  00AE               	movwf	??_menuChoice
 10561  0508  308F               	movlw	143
 10562  0509  022E               	subwf	??_menuChoice,w
 10563  050A  1D03               	skipz
 10564  050B  2D0F               	goto	u3405
 10565  050C  30A1               	movlw	161
 10566  050D  0021               	movlb	1	; select bank1
 10567  050E  0242               	subwf	_timer^(0+128),w
 10568  050F                     u3405:	
 10569  050F  1C03               	skipc
 10570  0510  2BA1               	goto	l3020
 10571                           
 10572                           ;menu.c: 85: {
 10573                           ;menu.c: 86: timer = 0;
 10574  0511  0021               	movlb	1	; select bank1
 10575  0512  01C2               	clrf	_timer^(0+128)
 10576  0513  01C3               	clrf	(_timer+1)^(0+128)
 10577                           
 10578                           ;menu.c: 87: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10579  0514  01F4               	clrf	LCD_Set_Cursor@y
 10580  0515  3000               	movlw	0
 10581  0516  3188  2076  3182   	fcall	_LCD_Set_Cursor
 10582  0519  303D               	movlw	low (STR_5| (0+32768))
 10583  051A  00F5               	movwf	LCD_Write_String@a
 10584  051B  3090               	movlw	high (STR_5| (0+32768))
 10585  051C  00F6               	movwf	LCD_Write_String@a+1
 10586  051D  3196  26EA  3182   	fcall	_LCD_Write_String
 10587                           
 10588                           ;menu.c: 88: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10589  0520  3052               	movlw	82
 10590  0521  0020               	movlb	0	; select bank0
 10591  0522  00B0               	movwf	??_menuChoice+2
 10592  0523  302C               	movlw	44
 10593  0524  00AF               	movwf	??_menuChoice+1
 10594  0525  304F               	movlw	79
 10595  0526  00AE               	movwf	??_menuChoice
 10596  0527                     u3747:	
 10597  0527  0BAE               	decfsz	??_menuChoice,f
 10598  0528  2D27               	goto	u3747
 10599  0529  0BAF               	decfsz	??_menuChoice+1,f
 10600  052A  2D27               	goto	u3747
 10601  052B  0BB0               	decfsz	??_menuChoice+2,f
 10602  052C  2D27               	goto	u3747
 10603  052D  3200               	nop2
 10604  052E                     l3102:	
 10605                           ;menu.c: 142: }
 10606                           ;menu.c: 143: }
 10607                           ;menu.c: 144: }
 10608                           ;menu.c: 145: Exit:
 10609                           
 10610                           
 10611                           ;menu.c: 146: timer=0;
 10612  052E  0021               	movlb	1	; select bank1
 10613  052F  01C2               	clrf	_timer^(0+128)
 10614  0530  01C3               	clrf	(_timer+1)^(0+128)
 10615                           
 10616                           ;menu.c: 147: loop=254;
 10617  0531  30FE               	movlw	254
 10618  0532  0020               	movlb	0	; select bank0
 10619  0533  00AE               	movwf	??_menuChoice
 10620  0534  082E               	movf	??_menuChoice,w
 10621  0535  0021               	movlb	1	; select bank1
 10622  0536  00EE               	movwf	_loop^(0+128)
 10623                           
 10624                           ;menu.c: 148: LCD_Clear();
 10625  0537  3196  262E         	fcall	_LCD_Clear
 10626  0539  0008               	return
 10627  053A                     __end_of_menuChoice:	
 10628                           
 10629                           	psect	text17
 10630  16A1                     __ptext17:	
 10631 ;; *************** function _readKey *****************
 10632 ;; Defined at:
 10633 ;;		line 37 in file "menu.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;		None
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      unsigned char 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, status,0
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;Total ram usage:        1 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_menuChoice
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           
 10661                           ;psect for function _readKey
 10662  16A1                     _readKey:	
 10663                           
 10664                           ;menu.c: 39: if(RB1==1)
 10665                           
 10666                           ;incstack = 0
 10667                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10668  16A1  0020               	movlb	0	; select bank0
 10669  16A2  1C8D               	btfss	13,1	;volatile
 10670  16A3  2EAA               	goto	l2714
 10671                           
 10672                           ;menu.c: 40: {
 10673                           ;menu.c: 41: if(key>0)key-=1;
 10674  16A4  0021               	movlb	1	; select bank1
 10675  16A5  0846               	movf	_key^(0+128),w
 10676  16A6  1903               	btfsc	3,2
 10677  16A7  2EAA               	goto	l2714
 10678  16A8  3001               	movlw	1
 10679  16A9  02C6               	subwf	_key^(0+128),f
 10680  16AA                     l2714:	
 10681                           
 10682                           ;menu.c: 42: }
 10683                           ;menu.c: 44: if(RB0==1)
 10684  16AA  0020               	movlb	0	; select bank0
 10685  16AB  1C0D               	btfss	13,0	;volatile
 10686  16AC  2EB5               	goto	l2720
 10687                           
 10688                           ;menu.c: 45: {
 10689                           ;menu.c: 46: if(key<1)key+=1;
 10690  16AD  0021               	movlb	1	; select bank1
 10691  16AE  0846               	movf	_key^(0+128),w
 10692  16AF  1D03               	btfss	3,2
 10693  16B0  2EB5               	goto	l2720
 10694  16B1  3001               	movlw	1
 10695  16B2  00F0               	movwf	??_readKey
 10696  16B3  0870               	movf	??_readKey,w
 10697  16B4  07C6               	addwf	_key^(0+128),f
 10698  16B5                     l2720:	
 10699                           
 10700                           ;menu.c: 47: }
 10701                           ;menu.c: 49: return key;
 10702  16B5  0021               	movlb	1	; select bank1
 10703  16B6  0846               	movf	_key^(0+128),w
 10704  16B7  0008               	return
 10705  16B8                     __end_of_readKey:	
 10706                           
 10707                           	psect	text18
 10708  168B                     __ptext18:	
 10709 ;; *************** function _PWM7_LoadDutyValue *****************
 10710 ;; Defined at:
 10711 ;;		line 32 in file "pwm.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;		None
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;Total ram usage:        4 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_menuChoice
 10735 ;;		_main
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           
 10740                           ;psect for function _PWM7_LoadDutyValue
 10741  168B                     _PWM7_LoadDutyValue:	
 10742                           
 10743                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10744                           
 10745                           ;incstack = 0
 10746                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10747  168B  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10748  168C  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10749  168D  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10750  168E  00F2               	movwf	??_PWM7_LoadDutyValue
 10751  168F  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10752  1690  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10753  1691  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10754  1692  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10755  1693  0872               	movf	??_PWM7_LoadDutyValue,w
 10756  1694  0027               	movlb	7	; select bank7
 10757  1695  0091               	movwf	17	;volatile
 10758                           
 10759                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10760  1696  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10761  1697  3903               	andlw	3
 10762  1698  00F2               	movwf	??_PWM7_LoadDutyValue
 10763  1699  3005               	movlw	5
 10764  169A                     u2865:	
 10765  169A  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10766  169B  3EFF               	addlw	-1
 10767  169C  1D03               	skipz
 10768  169D  2E9A               	goto	u2865
 10769  169E  3572               	lslf	??_PWM7_LoadDutyValue,w
 10770  169F  0090               	movwf	16	;volatile
 10771  16A0  0008               	return
 10772  16A1                     __end_of_PWM7_LoadDutyValue:	
 10773                           
 10774                           	psect	text19
 10775  16EA                     __ptext19:	
 10776 ;; *************** function _LCD_Write_String *****************
 10777 ;; Defined at:
 10778 ;;		line 239 in file "lcd.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;  a               2    5[COMMON] PTR const unsigned char 
 10781 ;;		 -> STR_9(17), STR_8(17), STR_7(8), STR_6(5), 
 10782 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(11), 
 10783 ;;		 -> STR_1(11), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  i               2    8[COMMON] int 
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      void 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;Total ram usage:        5 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    2
 10802 ;; This function calls:
 10803 ;;		_LCD_Write_Char
 10804 ;; This function is called by:
 10805 ;;		_menuChoice
 10806 ;;		_main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           
 10811                           ;psect for function _LCD_Write_String
 10812  16EA                     _LCD_Write_String:	
 10813                           
 10814                           ;lcd.c: 241: int i;
 10815                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10816                           
 10817                           ;incstack = 0
 10818                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10819  16EA  01F8               	clrf	LCD_Write_String@i
 10820  16EB  01F9               	clrf	LCD_Write_String@i+1
 10821  16EC                     l2542:	
 10822  16EC  0875               	movf	LCD_Write_String@a,w
 10823  16ED  0778               	addwf	LCD_Write_String@i,w
 10824  16EE  0084               	movwf	4
 10825  16EF  0876               	movf	LCD_Write_String@a+1,w
 10826  16F0  3D79               	addwfc	LCD_Write_String@i+1,w
 10827  16F1  0085               	movwf	5
 10828  16F2  0012               	moviw fsr0++
 10829  16F3  1903               	btfsc	3,2
 10830  16F4  0008               	return
 10831                           
 10832                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10833  16F5  0875               	movf	LCD_Write_String@a,w
 10834  16F6  0778               	addwf	LCD_Write_String@i,w
 10835  16F7  0084               	movwf	4
 10836  16F8  0876               	movf	LCD_Write_String@a+1,w
 10837  16F9  3D79               	addwfc	LCD_Write_String@i+1,w
 10838  16FA  0085               	movwf	5
 10839  16FB  0800               	movf	0,w	;code access
 10840  16FC  3197  27A3  3196   	fcall	_LCD_Write_Char
 10841  16FF  3001               	movlw	1
 10842  1700  07F8               	addwf	LCD_Write_String@i,f
 10843  1701  3000               	movlw	0
 10844  1702  3DF9               	addwfc	LCD_Write_String@i+1,f
 10845  1703  2EEC               	goto	l2542
 10846  1704                     __end_of_LCD_Write_String:	
 10847                           
 10848                           	psect	text20
 10849  0D66                     __ptext20:	
 10850 ;; *************** function _LCD_Write_Int *****************
 10851 ;; Defined at:
 10852 ;;		line 246 in file "lcd.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  value           2    9[COMMON] int 
 10855 ;;  fieldLength     1   11[COMMON] char 
 10856 ;;  numPlaces       1   12[COMMON] char 
 10857 ;;  sign            1   13[COMMON] char 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  str             5    5[BANK0 ] unsigned char [5]
 10860 ;;  i               2   12[BANK0 ] int 
 10861 ;;  j               2   10[BANK0 ] int 
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10871 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;Total ram usage:       19 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:    2
 10878 ;; This function calls:
 10879 ;;		_LCD_Write_Char
 10880 ;;		___awdiv
 10881 ;;		___awmod
 10882 ;; This function is called by:
 10883 ;;		_menuChoice
 10884 ;;		_main
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           
 10889                           ;psect for function _LCD_Write_Int
 10890  0D66                     _LCD_Write_Int:	
 10891                           
 10892                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10893                           
 10894                           ;incstack = 0
 10895                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10896  0D66  30C0               	movlw	low LCD_Write_Int@F13694
 10897  0D67  0086               	movwf	6
 10898  0D68  3001               	movlw	high LCD_Write_Int@F13694
 10899  0D69  0087               	movwf	7
 10900  0D6A  3025               	movlw	low LCD_Write_Int@str
 10901  0D6B  0084               	movwf	4
 10902  0D6C  3000               	movlw	high LCD_Write_Int@str
 10903  0D6D  0085               	movwf	5
 10904  0D6E  3005               	movlw	5
 10905  0D6F  0020               	movlb	0	; select bank0
 10906  0D70  00A0               	movwf	??_LCD_Write_Int
 10907  0D71                     u2730:	
 10908  0D71  0016               	moviw fsr1++
 10909  0D72  001A               	movwi fsr0++
 10910  0D73  0BA0               	decfsz	??_LCD_Write_Int,f
 10911  0D74  2D71               	goto	u2730
 10912                           
 10913                           ;lcd.c: 249: int i=4,j=0;
 10914  0D75  3004               	movlw	4
 10915  0D76  00AC               	movwf	LCD_Write_Int@i
 10916  0D77  3000               	movlw	0
 10917  0D78  00AD               	movwf	LCD_Write_Int@i+1
 10918  0D79  01AA               	clrf	LCD_Write_Int@j
 10919  0D7A  01AB               	clrf	LCD_Write_Int@j+1
 10920                           
 10921                           ;lcd.c: 251: if(value<0)
 10922  0D7B  1FFA               	btfss	LCD_Write_Int@value+1,7
 10923  0D7C  2D87               	goto	l2556
 10924                           
 10925                           ;lcd.c: 252: {
 10926                           ;lcd.c: 253: LCD_Write_Char('-');
 10927  0D7D  302D               	movlw	45
 10928  0D7E  3197  27A3  318D   	fcall	_LCD_Write_Char
 10929                           
 10930                           ;lcd.c: 254: value=value*-1;
 10931  0D81  09F9               	comf	LCD_Write_Int@value,f
 10932  0D82  09FA               	comf	LCD_Write_Int@value+1,f
 10933  0D83  0AF9               	incf	LCD_Write_Int@value,f
 10934  0D84  1903               	skipnz
 10935  0D85  0AFA               	incf	LCD_Write_Int@value+1,f
 10936                           
 10937                           ;lcd.c: 255: }
 10938  0D86  2D8E               	goto	l2566
 10939  0D87                     l2556:	
 10940                           
 10941                           ;lcd.c: 257: else
 10942                           ;lcd.c: 258: {
 10943                           ;lcd.c: 259: if(sign == 1)
 10944  0D87  037D               	decf	LCD_Write_Int@sign,w
 10945  0D88  1D03               	btfss	3,2
 10946  0D89  2D8E               	goto	l2566
 10947                           
 10948                           ;lcd.c: 260: {
 10949                           ;lcd.c: 261: LCD_Write_Char('+');
 10950  0D8A  302B               	movlw	43
 10951  0D8B  3197  27A3  318D   	fcall	_LCD_Write_Char
 10952  0D8E                     l2566:	
 10953                           ;lcd.c: 262: }
 10954                           ;lcd.c: 263: }
 10955                           ;lcd.c: 265: while(value)
 10956                           
 10957  0D8E  0879               	movf	LCD_Write_Int@value,w
 10958  0D8F  047A               	iorwf	LCD_Write_Int@value+1,w
 10959  0D90  1903               	btfsc	3,2
 10960  0D91  2DBB               	goto	l2568
 10961                           
 10962                           ;lcd.c: 266: {
 10963                           ;lcd.c: 267: str[i]=value%10;
 10964  0D92  300A               	movlw	10
 10965  0D93  00F0               	movwf	___awmod@divisor
 10966  0D94  3000               	movlw	0
 10967  0D95  00F1               	movwf	___awmod@divisor+1
 10968  0D96  087A               	movf	LCD_Write_Int@value+1,w
 10969  0D97  00F3               	movwf	___awmod@dividend+1
 10970  0D98  0879               	movf	LCD_Write_Int@value,w
 10971  0D99  00F2               	movwf	___awmod@dividend
 10972  0D9A  3188  20F7  318D   	fcall	___awmod
 10973  0D9D  0870               	movf	?___awmod,w
 10974  0D9E  0020               	movlb	0	; select bank0
 10975  0D9F  00A0               	movwf	??_LCD_Write_Int
 10976  0DA0  082C               	movf	LCD_Write_Int@i,w
 10977  0DA1  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10978  0DA2  0086               	movwf	6
 10979  0DA3  0187               	clrf	7
 10980  0DA4  0820               	movf	??_LCD_Write_Int,w
 10981  0DA5  0081               	movwf	1
 10982                           
 10983                           ;lcd.c: 268: value=value/10;
 10984  0DA6  300A               	movlw	10
 10985  0DA7  00F0               	movwf	___awdiv@divisor
 10986  0DA8  3000               	movlw	0
 10987  0DA9  00F1               	movwf	___awdiv@divisor+1
 10988  0DAA  087A               	movf	LCD_Write_Int@value+1,w
 10989  0DAB  00F3               	movwf	___awdiv@dividend+1
 10990  0DAC  0879               	movf	LCD_Write_Int@value,w
 10991  0DAD  00F2               	movwf	___awdiv@dividend
 10992  0DAE  3189  213C  318D   	fcall	___awdiv
 10993  0DB1  0871               	movf	?___awdiv+1,w
 10994  0DB2  00FA               	movwf	LCD_Write_Int@value+1
 10995  0DB3  0870               	movf	?___awdiv,w
 10996  0DB4  00F9               	movwf	LCD_Write_Int@value
 10997                           
 10998                           ;lcd.c: 269: i--;
 10999  0DB5  30FF               	movlw	255
 11000  0DB6  0020               	movlb	0	; select bank0
 11001  0DB7  07AC               	addwf	LCD_Write_Int@i,f
 11002  0DB8  30FF               	movlw	255
 11003  0DB9  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11004  0DBA  2D8E               	goto	l2566
 11005  0DBB                     l2568:	
 11006                           
 11007                           ;lcd.c: 270: }
 11008                           ;lcd.c: 271: if(fieldLength==-1)
 11009  0DBB  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11010  0DBC  1903               	btfsc	3,2
 11011  0DBD  2DC4               	goto	l2574
 11012  0DBE  2DCD               	goto	l2576
 11013  0DBF                     l2572:	
 11014                           ;lcd.c: 272: {
 11015                           ;lcd.c: 273: while(str[j]==0)
 11016                           
 11017                           
 11018                           ;lcd.c: 274: {
 11019                           ;lcd.c: 275: j++;
 11020  0DBF  3001               	movlw	1
 11021  0DC0  0020               	movlb	0	; select bank0
 11022  0DC1  07AA               	addwf	LCD_Write_Int@j,f
 11023  0DC2  3000               	movlw	0
 11024  0DC3  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11025  0DC4                     l2574:	
 11026  0DC4  0020               	movlb	0	; select bank0
 11027  0DC5  082A               	movf	LCD_Write_Int@j,w
 11028  0DC6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11029  0DC7  0086               	movwf	6
 11030  0DC8  0187               	clrf	7
 11031  0DC9  0801               	movf	1,w
 11032  0DCA  1D03               	btfss	3,2
 11033  0DCB  2DDE               	goto	l2578
 11034  0DCC  2DBF               	goto	l2572
 11035  0DCD                     l2576:	
 11036                           ;lcd.c: 276: }
 11037                           ;lcd.c: 277: }
 11038                           
 11039                           
 11040                           ;lcd.c: 278: else
 11041                           ;lcd.c: 279: {
 11042                           ;lcd.c: 280: j=5-fieldLength;
 11043  0DCD  087B               	movf	LCD_Write_Int@fieldLength,w
 11044  0DCE  0020               	movlb	0	; select bank0
 11045  0DCF  00A0               	movwf	??_LCD_Write_Int
 11046  0DD0  01A1               	clrf	??_LCD_Write_Int+1
 11047  0DD1  1BA0               	btfsc	??_LCD_Write_Int,7
 11048  0DD2  03A1               	decf	??_LCD_Write_Int+1,f
 11049  0DD3  09A0               	comf	??_LCD_Write_Int,f
 11050  0DD4  09A1               	comf	??_LCD_Write_Int+1,f
 11051  0DD5  0AA0               	incf	??_LCD_Write_Int,f
 11052  0DD6  1903               	skipnz
 11053  0DD7  0AA1               	incf	??_LCD_Write_Int+1,f
 11054  0DD8  0820               	movf	??_LCD_Write_Int,w
 11055  0DD9  3E05               	addlw	5
 11056  0DDA  00AA               	movwf	LCD_Write_Int@j
 11057  0DDB  3000               	movlw	0
 11058  0DDC  3D21               	addwfc	??_LCD_Write_Int+1,w
 11059  0DDD  00AB               	movwf	LCD_Write_Int@j+1
 11060  0DDE                     l2578:	
 11061                           
 11062                           ;lcd.c: 281: }
 11063                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11064  0DDE  082B               	movf	LCD_Write_Int@j+1,w
 11065  0DDF  00AD               	movwf	LCD_Write_Int@i+1
 11066  0DE0  082A               	movf	LCD_Write_Int@j,w
 11067  0DE1  00AC               	movwf	LCD_Write_Int@i
 11068  0DE2                     l2584:	
 11069  0DE2  087C               	movf	LCD_Write_Int@numPlaces,w
 11070  0DE3  00A0               	movwf	??_LCD_Write_Int
 11071  0DE4  01A1               	clrf	??_LCD_Write_Int+1
 11072  0DE5  1BA0               	btfsc	??_LCD_Write_Int,7
 11073  0DE6  03A1               	decf	??_LCD_Write_Int+1,f
 11074  0DE7  09A0               	comf	??_LCD_Write_Int,f
 11075  0DE8  09A1               	comf	??_LCD_Write_Int+1,f
 11076  0DE9  0AA0               	incf	??_LCD_Write_Int,f
 11077  0DEA  1903               	skipnz
 11078  0DEB  0AA1               	incf	??_LCD_Write_Int+1,f
 11079  0DEC  0820               	movf	??_LCD_Write_Int,w
 11080  0DED  3E05               	addlw	5
 11081  0DEE  00A2               	movwf	??_LCD_Write_Int+2
 11082  0DEF  3000               	movlw	0
 11083  0DF0  3D21               	addwfc	??_LCD_Write_Int+1,w
 11084  0DF1  00A3               	movwf	??_LCD_Write_Int+3
 11085  0DF2  082D               	movf	LCD_Write_Int@i+1,w
 11086  0DF3  3A80               	xorlw	128
 11087  0DF4  00A4               	movwf	??_LCD_Write_Int+4
 11088  0DF5  0823               	movf	??_LCD_Write_Int+3,w
 11089  0DF6  3A80               	xorlw	128
 11090  0DF7  0224               	subwf	??_LCD_Write_Int+4,w
 11091  0DF8  1D03               	skipz
 11092  0DF9  2DFC               	goto	u2795
 11093  0DFA  0822               	movf	??_LCD_Write_Int+2,w
 11094  0DFB  022C               	subwf	LCD_Write_Int@i,w
 11095  0DFC                     u2795:	
 11096  0DFC  1803               	btfsc	3,0
 11097  0DFD  2E0E               	goto	l2586
 11098                           
 11099                           ;lcd.c: 284: {
 11100                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11101  0DFE  0020               	movlb	0	; select bank0
 11102  0DFF  082C               	movf	LCD_Write_Int@i,w
 11103  0E00  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11104  0E01  0086               	movwf	6
 11105  0E02  0187               	clrf	7
 11106  0E03  0801               	movf	1,w
 11107  0E04  3E30               	addlw	48
 11108  0E05  3197  27A3  318D   	fcall	_LCD_Write_Char
 11109  0E08  3001               	movlw	1
 11110  0E09  0020               	movlb	0	; select bank0
 11111  0E0A  07AC               	addwf	LCD_Write_Int@i,f
 11112  0E0B  3000               	movlw	0
 11113  0E0C  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11114  0E0D  2DE2               	goto	l2584
 11115  0E0E                     l2586:	
 11116                           
 11117                           ;lcd.c: 286: }
 11118                           ;lcd.c: 288: if(numPlaces == 1)
 11119  0E0E  037C               	decf	LCD_Write_Int@numPlaces,w
 11120  0E0F  1D03               	btfss	3,2
 11121  0E10  2E1B               	goto	l2590
 11122                           
 11123                           ;lcd.c: 289: {
 11124                           ;lcd.c: 290: LCD_Write_Char(46);
 11125  0E11  302E               	movlw	46
 11126  0E12  3197  27A3  318D   	fcall	_LCD_Write_Char
 11127                           
 11128                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11129  0E15  0020               	movlb	0	; select bank0
 11130  0E16  0829               	movf	LCD_Write_Int@str+4,w
 11131  0E17  3E30               	addlw	48
 11132  0E18  3197  27A3  318D   	fcall	_LCD_Write_Char
 11133  0E1B                     l2590:	
 11134                           
 11135                           ;lcd.c: 292: }
 11136                           ;lcd.c: 294: if(numPlaces == 2)
 11137  0E1B  3002               	movlw	2
 11138  0E1C  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11139  0E1D  1D03               	btfss	3,2
 11140  0E1E  0008               	return
 11141                           
 11142                           ;lcd.c: 295: {
 11143                           ;lcd.c: 296: LCD_Write_Char(46);
 11144  0E1F  302E               	movlw	46
 11145  0E20  3197  27A3  318D   	fcall	_LCD_Write_Char
 11146                           
 11147                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11148  0E23  0020               	movlb	0	; select bank0
 11149  0E24  0828               	movf	LCD_Write_Int@str+3,w
 11150  0E25  3E30               	addlw	48
 11151  0E26  3197  27A3  318D   	fcall	_LCD_Write_Char
 11152                           
 11153                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11154  0E29  0020               	movlb	0	; select bank0
 11155  0E2A  0829               	movf	LCD_Write_Int@str+4,w
 11156  0E2B  3E30               	addlw	48
 11157  0E2C  3197  27A3         	fcall	_LCD_Write_Char
 11158  0E2E  0008               	return
 11159  0E2F                     __end_of_LCD_Write_Int:	
 11160                           
 11161                           	psect	text21
 11162  08F7                     __ptext21:	
 11163 ;; *************** function ___awmod *****************
 11164 ;; Defined at:
 11165 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  divisor         2    0[COMMON] int 
 11168 ;;  dividend        2    2[COMMON] int 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  sign            1    6[COMMON] unsigned char 
 11171 ;;  counter         1    5[COMMON] unsigned char 
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  2    0[COMMON] int 
 11174 ;; Registers used:
 11175 ;;		wreg, status,2, status,0
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;Total ram usage:        7 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_LCD_Write_Int
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function ___awmod
 11196  08F7                     ___awmod:	
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11200  08F7  01F6               	clrf	___awmod@sign
 11201  08F8  1FF3               	btfss	___awmod@dividend+1,7
 11202  08F9  2901               	goto	l2372
 11203  08FA  09F2               	comf	___awmod@dividend,f
 11204  08FB  09F3               	comf	___awmod@dividend+1,f
 11205  08FC  0AF2               	incf	___awmod@dividend,f
 11206  08FD  1903               	skipnz
 11207  08FE  0AF3               	incf	___awmod@dividend+1,f
 11208  08FF  01F6               	clrf	___awmod@sign
 11209  0900  0AF6               	incf	___awmod@sign,f
 11210  0901                     l2372:	
 11211  0901  1FF1               	btfss	___awmod@divisor+1,7
 11212  0902  2908               	goto	l2376
 11213  0903  09F0               	comf	___awmod@divisor,f
 11214  0904  09F1               	comf	___awmod@divisor+1,f
 11215  0905  0AF0               	incf	___awmod@divisor,f
 11216  0906  1903               	skipnz
 11217  0907  0AF1               	incf	___awmod@divisor+1,f
 11218  0908                     l2376:	
 11219  0908  0870               	movf	___awmod@divisor,w
 11220  0909  0471               	iorwf	___awmod@divisor+1,w
 11221  090A  1903               	btfsc	3,2
 11222  090B  292F               	goto	l2394
 11223  090C  01F5               	clrf	___awmod@counter
 11224  090D  0AF5               	incf	___awmod@counter,f
 11225  090E                     l2384:	
 11226  090E  1BF1               	btfsc	___awmod@divisor+1,7
 11227  090F  291A               	goto	l2386
 11228  0910  3001               	movlw	1
 11229  0911                     u2545:	
 11230  0911  35F0               	lslf	___awmod@divisor,f
 11231  0912  0DF1               	rlf	___awmod@divisor+1,f
 11232  0913  0B89               	decfsz	9,f
 11233  0914  2911               	goto	u2545
 11234  0915  3001               	movlw	1
 11235  0916  00F4               	movwf	??___awmod
 11236  0917  0874               	movf	??___awmod,w
 11237  0918  07F5               	addwf	___awmod@counter,f
 11238  0919  290E               	goto	l2384
 11239  091A                     l2386:	
 11240  091A  0871               	movf	___awmod@divisor+1,w
 11241  091B  0273               	subwf	___awmod@dividend+1,w
 11242  091C  1D03               	skipz
 11243  091D  2920               	goto	u2565
 11244  091E  0870               	movf	___awmod@divisor,w
 11245  091F  0272               	subwf	___awmod@dividend,w
 11246  0920                     u2565:	
 11247  0920  1C03               	skipc
 11248  0921  2926               	goto	l2390
 11249  0922  0870               	movf	___awmod@divisor,w
 11250  0923  02F2               	subwf	___awmod@dividend,f
 11251  0924  0871               	movf	___awmod@divisor+1,w
 11252  0925  3BF3               	subwfb	___awmod@dividend+1,f
 11253  0926                     l2390:	
 11254  0926  3001               	movlw	1
 11255  0927                     u2575:	
 11256  0927  36F1               	lsrf	___awmod@divisor+1,f
 11257  0928  0CF0               	rrf	___awmod@divisor,f
 11258  0929  0B89               	decfsz	9,f
 11259  092A  2927               	goto	u2575
 11260  092B  3001               	movlw	1
 11261  092C  02F5               	subwf	___awmod@counter,f
 11262  092D  1D03               	btfss	3,2
 11263  092E  291A               	goto	l2386
 11264  092F                     l2394:	
 11265  092F  0876               	movf	___awmod@sign,w
 11266  0930  1903               	btfsc	3,2
 11267  0931  2937               	goto	l2398
 11268  0932  09F2               	comf	___awmod@dividend,f
 11269  0933  09F3               	comf	___awmod@dividend+1,f
 11270  0934  0AF2               	incf	___awmod@dividend,f
 11271  0935  1903               	skipnz
 11272  0936  0AF3               	incf	___awmod@dividend+1,f
 11273  0937                     l2398:	
 11274  0937  0873               	movf	___awmod@dividend+1,w
 11275  0938  00F1               	movwf	?___awmod+1
 11276  0939  0872               	movf	___awmod@dividend,w
 11277  093A  00F0               	movwf	?___awmod
 11278  093B  0008               	return
 11279  093C                     __end_of___awmod:	
 11280                           
 11281                           	psect	text22
 11282  093C                     __ptext22:	
 11283 ;; *************** function ___awdiv *****************
 11284 ;; Defined at:
 11285 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;  divisor         2    0[COMMON] int 
 11288 ;;  dividend        2    2[COMMON] int 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  quotient        2    7[COMMON] int 
 11291 ;;  sign            1    6[COMMON] unsigned char 
 11292 ;;  counter         1    5[COMMON] unsigned char 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  2    0[COMMON] int 
 11295 ;; Registers used:
 11296 ;;		wreg, status,2, status,0
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;Total ram usage:        9 bytes
 11307 ;; Hardware stack levels used:    1
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_LCD_Write_Int
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           
 11316                           ;psect for function ___awdiv
 11317  093C                     ___awdiv:	
 11318                           
 11319                           ;incstack = 0
 11320                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11321  093C  01F6               	clrf	___awdiv@sign
 11322  093D  1FF1               	btfss	___awdiv@divisor+1,7
 11323  093E  2946               	goto	l2328
 11324  093F  09F0               	comf	___awdiv@divisor,f
 11325  0940  09F1               	comf	___awdiv@divisor+1,f
 11326  0941  0AF0               	incf	___awdiv@divisor,f
 11327  0942  1903               	skipnz
 11328  0943  0AF1               	incf	___awdiv@divisor+1,f
 11329  0944  01F6               	clrf	___awdiv@sign
 11330  0945  0AF6               	incf	___awdiv@sign,f
 11331  0946                     l2328:	
 11332  0946  1FF3               	btfss	___awdiv@dividend+1,7
 11333  0947  2951               	goto	l2334
 11334  0948  09F2               	comf	___awdiv@dividend,f
 11335  0949  09F3               	comf	___awdiv@dividend+1,f
 11336  094A  0AF2               	incf	___awdiv@dividend,f
 11337  094B  1903               	skipnz
 11338  094C  0AF3               	incf	___awdiv@dividend+1,f
 11339  094D  3001               	movlw	1
 11340  094E  00F4               	movwf	??___awdiv
 11341  094F  0874               	movf	??___awdiv,w
 11342  0950  06F6               	xorwf	___awdiv@sign,f
 11343  0951                     l2334:	
 11344  0951  01F7               	clrf	___awdiv@quotient
 11345  0952  01F8               	clrf	___awdiv@quotient+1
 11346  0953  0870               	movf	___awdiv@divisor,w
 11347  0954  0471               	iorwf	___awdiv@divisor+1,w
 11348  0955  1903               	btfsc	3,2
 11349  0956  2980               	goto	l2356
 11350  0957  01F5               	clrf	___awdiv@counter
 11351  0958  0AF5               	incf	___awdiv@counter,f
 11352  0959                     l2344:	
 11353  0959  1BF1               	btfsc	___awdiv@divisor+1,7
 11354  095A  2965               	goto	l2346
 11355  095B  3001               	movlw	1
 11356  095C                     u2445:	
 11357  095C  35F0               	lslf	___awdiv@divisor,f
 11358  095D  0DF1               	rlf	___awdiv@divisor+1,f
 11359  095E  0B89               	decfsz	9,f
 11360  095F  295C               	goto	u2445
 11361  0960  3001               	movlw	1
 11362  0961  00F4               	movwf	??___awdiv
 11363  0962  0874               	movf	??___awdiv,w
 11364  0963  07F5               	addwf	___awdiv@counter,f
 11365  0964  2959               	goto	l2344
 11366  0965                     l2346:	
 11367  0965  3001               	movlw	1
 11368  0966                     u2465:	
 11369  0966  35F7               	lslf	___awdiv@quotient,f
 11370  0967  0DF8               	rlf	___awdiv@quotient+1,f
 11371  0968  0B89               	decfsz	9,f
 11372  0969  2966               	goto	u2465
 11373  096A  0871               	movf	___awdiv@divisor+1,w
 11374  096B  0273               	subwf	___awdiv@dividend+1,w
 11375  096C  1D03               	skipz
 11376  096D  2970               	goto	u2475
 11377  096E  0870               	movf	___awdiv@divisor,w
 11378  096F  0272               	subwf	___awdiv@dividend,w
 11379  0970                     u2475:	
 11380  0970  1C03               	skipc
 11381  0971  2977               	goto	l2352
 11382  0972  0870               	movf	___awdiv@divisor,w
 11383  0973  02F2               	subwf	___awdiv@dividend,f
 11384  0974  0871               	movf	___awdiv@divisor+1,w
 11385  0975  3BF3               	subwfb	___awdiv@dividend+1,f
 11386  0976  1477               	bsf	___awdiv@quotient,0
 11387  0977                     l2352:	
 11388  0977  3001               	movlw	1
 11389  0978                     u2485:	
 11390  0978  36F1               	lsrf	___awdiv@divisor+1,f
 11391  0979  0CF0               	rrf	___awdiv@divisor,f
 11392  097A  0B89               	decfsz	9,f
 11393  097B  2978               	goto	u2485
 11394  097C  3001               	movlw	1
 11395  097D  02F5               	subwf	___awdiv@counter,f
 11396  097E  1D03               	btfss	3,2
 11397  097F  2965               	goto	l2346
 11398  0980                     l2356:	
 11399  0980  0876               	movf	___awdiv@sign,w
 11400  0981  1903               	btfsc	3,2
 11401  0982  2988               	goto	l2360
 11402  0983  09F7               	comf	___awdiv@quotient,f
 11403  0984  09F8               	comf	___awdiv@quotient+1,f
 11404  0985  0AF7               	incf	___awdiv@quotient,f
 11405  0986  1903               	skipnz
 11406  0987  0AF8               	incf	___awdiv@quotient+1,f
 11407  0988                     l2360:	
 11408  0988  0878               	movf	___awdiv@quotient+1,w
 11409  0989  00F1               	movwf	?___awdiv+1
 11410  098A  0877               	movf	___awdiv@quotient,w
 11411  098B  00F0               	movwf	?___awdiv
 11412  098C  0008               	return
 11413  098D                     __end_of___awdiv:	
 11414                           
 11415                           	psect	text23
 11416  0876                     __ptext23:	
 11417 ;; *************** function _LCD_Set_Cursor *****************
 11418 ;; Defined at:
 11419 ;;		line 82 in file "lcd.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  x               1    wreg     unsigned char 
 11422 ;;  y               1    4[COMMON] unsigned char 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  x               1    7[COMMON] unsigned char 
 11425 ;;  temp            1   10[COMMON] unsigned char 
 11426 ;;  w               1    9[COMMON] unsigned char 
 11427 ;;  z               1    8[COMMON] unsigned char 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0, pclath, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;Total ram usage:        7 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    2
 11444 ;; This function calls:
 11445 ;;		_LCD_Cmd
 11446 ;; This function is called by:
 11447 ;;		_menuChoice
 11448 ;;		_main
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           
 11453                           ;psect for function _LCD_Set_Cursor
 11454  0876                     _LCD_Set_Cursor:	
 11455                           
 11456                           ;incstack = 0
 11457                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11458                           ;LCD_Set_Cursor@x stored from wreg
 11459  0876  00F7               	movwf	LCD_Set_Cursor@x
 11460                           
 11461                           ;lcd.c: 86: char temp,z,w;
 11462                           ;lcd.c: 88: if(y == 0)
 11463  0877  0874               	movf	LCD_Set_Cursor@y,w
 11464  0878  1D03               	btfss	3,2
 11465  0879  2896               	goto	l2492
 11466                           
 11467                           ;lcd.c: 89: {
 11468                           ;lcd.c: 90: temp = 0x80 + x;
 11469  087A  0877               	movf	LCD_Set_Cursor@x,w
 11470  087B  3E80               	addlw	128
 11471  087C  00F5               	movwf	??_LCD_Set_Cursor
 11472  087D  0875               	movf	??_LCD_Set_Cursor,w
 11473  087E  00FA               	movwf	LCD_Set_Cursor@temp
 11474                           
 11475                           ;lcd.c: 91: z = temp>>4;
 11476  087F  087A               	movf	LCD_Set_Cursor@temp,w
 11477  0880  00F5               	movwf	??_LCD_Set_Cursor
 11478  0881  3004               	movlw	4
 11479  0882                     u2695:	
 11480  0882  36F5               	lsrf	??_LCD_Set_Cursor,f
 11481  0883  0B89               	decfsz	9,f
 11482  0884  2882               	goto	u2695
 11483  0885  0875               	movf	??_LCD_Set_Cursor,w
 11484  0886  00F6               	movwf	??_LCD_Set_Cursor+1
 11485  0887  0876               	movf	??_LCD_Set_Cursor+1,w
 11486  0888  00F8               	movwf	LCD_Set_Cursor@z
 11487                           
 11488                           ;lcd.c: 92: w = temp & 0x0F;
 11489  0889  087A               	movf	LCD_Set_Cursor@temp,w
 11490  088A  390F               	andlw	15
 11491  088B  00F5               	movwf	??_LCD_Set_Cursor
 11492  088C  0875               	movf	??_LCD_Set_Cursor,w
 11493  088D  00F9               	movwf	LCD_Set_Cursor@w
 11494                           
 11495                           ;lcd.c: 93: LCD_Cmd(z);
 11496  088E  0878               	movf	LCD_Set_Cursor@z,w
 11497  088F  3180  2005  3188   	fcall	_LCD_Cmd
 11498                           
 11499                           ;lcd.c: 94: LCD_Cmd(w);
 11500  0892  0879               	movf	LCD_Set_Cursor@w,w
 11501  0893  3180  2005         	fcall	_LCD_Cmd
 11502                           
 11503                           ;lcd.c: 95: }
 11504  0895  0008               	return
 11505  0896                     l2492:	
 11506                           
 11507                           ;lcd.c: 97: else if(y == 1)
 11508  0896  0374               	decf	LCD_Set_Cursor@y,w
 11509  0897  1D03               	btfss	3,2
 11510  0898  0008               	return
 11511                           
 11512                           ;lcd.c: 98: {
 11513                           ;lcd.c: 99: temp = 0xC0 + x;
 11514  0899  0877               	movf	LCD_Set_Cursor@x,w
 11515  089A  3EC0               	addlw	192
 11516  089B  00F5               	movwf	??_LCD_Set_Cursor
 11517  089C  0875               	movf	??_LCD_Set_Cursor,w
 11518  089D  00FA               	movwf	LCD_Set_Cursor@temp
 11519                           
 11520                           ;lcd.c: 100: z = temp>>4;
 11521  089E  087A               	movf	LCD_Set_Cursor@temp,w
 11522  089F  00F5               	movwf	??_LCD_Set_Cursor
 11523  08A0  3004               	movlw	4
 11524  08A1                     u2715:	
 11525  08A1  36F5               	lsrf	??_LCD_Set_Cursor,f
 11526  08A2  0B89               	decfsz	9,f
 11527  08A3  28A1               	goto	u2715
 11528  08A4  0875               	movf	??_LCD_Set_Cursor,w
 11529  08A5  00F6               	movwf	??_LCD_Set_Cursor+1
 11530  08A6  0876               	movf	??_LCD_Set_Cursor+1,w
 11531  08A7  00F8               	movwf	LCD_Set_Cursor@z
 11532                           
 11533                           ;lcd.c: 101: w = temp & 0x0F;
 11534  08A8  087A               	movf	LCD_Set_Cursor@temp,w
 11535  08A9  390F               	andlw	15
 11536  08AA  00F5               	movwf	??_LCD_Set_Cursor
 11537  08AB  0875               	movf	??_LCD_Set_Cursor,w
 11538  08AC  00F9               	movwf	LCD_Set_Cursor@w
 11539                           
 11540                           ;lcd.c: 102: LCD_Cmd(z);
 11541  08AD  0878               	movf	LCD_Set_Cursor@z,w
 11542  08AE  3180  2005  3188   	fcall	_LCD_Cmd
 11543                           
 11544                           ;lcd.c: 103: LCD_Cmd(w);
 11545  08B1  0879               	movf	LCD_Set_Cursor@w,w
 11546  08B2  3180  2005         	fcall	_LCD_Cmd
 11547  08B4  0008               	return
 11548  08B5                     __end_of_LCD_Set_Cursor:	
 11549                           
 11550                           	psect	text24
 11551  08B5                     __ptext24:	
 11552 ;; *************** function _SYSTEM_Initialize *****************
 11553 ;; Defined at:
 11554 ;;		line 71 in file "system.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;		None
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1    wreg      void 
 11561 ;; Registers used:
 11562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;Total ram usage:        3 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:    3
 11575 ;; This function calls:
 11576 ;;		_ADCC_Initialize
 11577 ;;		_InitCustomChars
 11578 ;;		_LCD_Clear
 11579 ;;		_LCD_Init
 11580 ;;		_OSCILLATOR_Initialize
 11581 ;;		_PIN_MANAGER_Initialize
 11582 ;;		_PWM_Initialize
 11583 ;;		_TMR2_Initialize
 11584 ;; This function is called by:
 11585 ;;		_main
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           
 11590                           ;psect for function _SYSTEM_Initialize
 11591  08B5                     _SYSTEM_Initialize:	
 11592                           
 11593                           ;system.c: 73: PIN_MANAGER_Initialize();
 11594                           
 11595                           ;incstack = 0
 11596                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11597  08B5  3197  27CF  3188   	fcall	_PIN_MANAGER_Initialize
 11598                           
 11599                           ;system.c: 74: OSCILLATOR_Initialize();
 11600  08B8  3196  2636  3188   	fcall	_OSCILLATOR_Initialize
 11601                           
 11602                           ;system.c: 75: FVRCON = 0x00;
 11603  08BB  0032               	movlb	18	; select bank18
 11604  08BC  018C               	clrf	12	;volatile
 11605                           
 11606                           ;system.c: 76: ADCC_Initialize();
 11607  08BD  3196  26D0  3188   	fcall	_ADCC_Initialize
 11608                           
 11609                           ;system.c: 77: PWM_Initialize();
 11610  08C0  3196  263F  3188   	fcall	_PWM_Initialize
 11611                           
 11612                           ;system.c: 79: TMR2_Initialize();
 11613  08C3  3196  266F  3188   	fcall	_TMR2_Initialize
 11614                           
 11615                           ;system.c: 80: LCD_Init(0X00);
 11616  08C6  3000               	movlw	0
 11617  08C7  3180  2019  3188   	fcall	_LCD_Init
 11618                           
 11619                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11620  08CA  3009               	movlw	9
 11621  08CB  00FA               	movwf	??_SYSTEM_Initialize+2
 11622  08CC  301E               	movlw	30
 11623  08CD  00F9               	movwf	??_SYSTEM_Initialize+1
 11624  08CE  30EB               	movlw	235
 11625  08CF  00F8               	movwf	??_SYSTEM_Initialize
 11626  08D0                     u3787:	
 11627  08D0  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11628  08D1  28D0               	goto	u3787
 11629  08D2  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11630  08D3  28D0               	goto	u3787
 11631  08D4  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11632  08D5  28D0               	goto	u3787
 11633  08D6  0000               	nop
 11634                           
 11635                           ;system.c: 82: LCD_Clear();
 11636  08D7  3196  262E  3188   	fcall	_LCD_Clear
 11637                           
 11638                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11639  08DA  3005               	movlw	5
 11640  08DB  00FA               	movwf	??_SYSTEM_Initialize+2
 11641  08DC  300F               	movlw	15
 11642  08DD  00F9               	movwf	??_SYSTEM_Initialize+1
 11643  08DE  30F4               	movlw	244
 11644  08DF  00F8               	movwf	??_SYSTEM_Initialize
 11645  08E0                     u3797:	
 11646  08E0  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11647  08E1  28E0               	goto	u3797
 11648  08E2  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11649  08E3  28E0               	goto	u3797
 11650  08E4  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11651  08E5  28E0               	goto	u3797
 11652                           
 11653                           ;system.c: 84: InitCustomChars();
 11654  08E6  3197  277D  3188   	fcall	_InitCustomChars
 11655                           
 11656                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11657  08E9  3009               	movlw	9
 11658  08EA  00FA               	movwf	??_SYSTEM_Initialize+2
 11659  08EB  301E               	movlw	30
 11660  08EC  00F9               	movwf	??_SYSTEM_Initialize+1
 11661  08ED  30EB               	movlw	235
 11662  08EE  00F8               	movwf	??_SYSTEM_Initialize
 11663  08EF                     u3807:	
 11664  08EF  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11665  08F0  28EF               	goto	u3807
 11666  08F1  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11667  08F2  28EF               	goto	u3807
 11668  08F3  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11669  08F4  28EF               	goto	u3807
 11670  08F5  0000               	nop
 11671  08F6  0008               	return
 11672  08F7                     __end_of_SYSTEM_Initialize:	
 11673                           
 11674                           	psect	text25
 11675  166F                     __ptext25:	
 11676 ;; *************** function _TMR2_Initialize *****************
 11677 ;; Defined at:
 11678 ;;		line 3 in file "tmr2.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;		None
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, status,2
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;Total ram usage:        0 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_SYSTEM_Initialize
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           
 11706                           ;psect for function _TMR2_Initialize
 11707  166F                     _TMR2_Initialize:	
 11708                           
 11709                           ;tmr2.c: 5: T2CON = 0x00;
 11710                           
 11711                           ;incstack = 0
 11712                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11713  166F  0025               	movlb	5	; select bank5
 11714  1670  018E               	clrf	14	;volatile
 11715                           
 11716                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11717  1671  3001               	movlw	1
 11718  1672  0090               	movwf	16	;volatile
 11719                           
 11720                           ;tmr2.c: 9: T2HLT = 0x00;
 11721  1673  018F               	clrf	15	;volatile
 11722                           
 11723                           ;tmr2.c: 11: T2RST = 0x00;
 11724  1674  0191               	clrf	17	;volatile
 11725                           
 11726                           ;tmr2.c: 13: T2PR = 0xFF;
 11727  1675  30FF               	movlw	255
 11728  1676  008D               	movwf	13	;volatile
 11729                           
 11730                           ;tmr2.c: 15: T2TMR = 0x00;
 11731  1677  018C               	clrf	12	;volatile
 11732                           
 11733                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11734  1678  002E               	movlb	14	; select bank14
 11735  1679  1090               	bcf	16,1	;volatile
 11736                           
 11737                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11738  167A  0025               	movlb	5	; select bank5
 11739  167B  178E               	bsf	14,7	;volatile
 11740  167C  0008               	return
 11741  167D                     __end_of_TMR2_Initialize:	
 11742                           
 11743                           	psect	text26
 11744  163F                     __ptext26:	
 11745 ;; *************** function _PWM_Initialize *****************
 11746 ;; Defined at:
 11747 ;;		line 3 in file "pwm.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1    wreg      void 
 11754 ;; Registers used:
 11755 ;;		wreg, status,2, status,0
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; This function calls:
 11768 ;;		Nothing
 11769 ;; This function is called by:
 11770 ;;		_SYSTEM_Initialize
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           
 11775                           ;psect for function _PWM_Initialize
 11776  163F                     _PWM_Initialize:	
 11777                           
 11778                           ;pwm.c: 14: PWM7CON = 0x80;
 11779                           
 11780                           ;incstack = 0
 11781                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11782  163F  3080               	movlw	128
 11783  1640  0027               	movlb	7	; select bank7
 11784  1641  0092               	movwf	18	;volatile
 11785                           
 11786                           ;pwm.c: 16: PWM7DCH = 0x00;
 11787  1642  0191               	clrf	17	;volatile
 11788                           
 11789                           ;pwm.c: 18: PWM7DCL = 0x00;
 11790  1643  0190               	clrf	16	;volatile
 11791                           
 11792                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11793  1644  0024               	movlb	4	; select bank4
 11794  1645  081F               	movf	31,w	;volatile
 11795  1646  39F3               	andlw	-13
 11796  1647  3804               	iorlw	4
 11797  1648  009F               	movwf	31	;volatile
 11798  1649  0008               	return
 11799  164A                     __end_of_PWM_Initialize:	
 11800                           
 11801                           	psect	text27
 11802  17CF                     __ptext27:	
 11803 ;; *************** function _PIN_MANAGER_Initialize *****************
 11804 ;; Defined at:
 11805 ;;		line 5 in file "pin_manager.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;		None
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  state           1    0[COMMON] unsigned char 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        1 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_SYSTEM_Initialize
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function _PIN_MANAGER_Initialize
 11834  17CF                     _PIN_MANAGER_Initialize:	
 11835                           
 11836                           ;pin_manager.c: 7: LATA = 0x00;
 11837                           
 11838                           ;incstack = 0
 11839                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11840  17CF  0020               	movlb	0	; select bank0
 11841  17D0  0196               	clrf	22	;volatile
 11842                           
 11843                           ;pin_manager.c: 8: LATB = 0x00;
 11844  17D1  0197               	clrf	23	;volatile
 11845                           
 11846                           ;pin_manager.c: 9: LATC = 0x00;
 11847  17D2  0198               	clrf	24	;volatile
 11848                           
 11849                           ;pin_manager.c: 11: WPUA = 0x00;
 11850  17D3  003E               	movlb	30	; select bank30
 11851  17D4  01B9               	clrf	57	;volatile
 11852                           
 11853                           ;pin_manager.c: 12: WPUB = 0x00;
 11854  17D5  01C4               	clrf	68	;volatile
 11855                           
 11856                           ;pin_manager.c: 13: WPUC = 0x00;
 11857  17D6  01CF               	clrf	79	;volatile
 11858                           
 11859                           ;pin_manager.c: 14: WPUE = 0x8;
 11860  17D7  3008               	movlw	8
 11861  17D8  00E5               	movwf	101	;volatile
 11862                           
 11863                           ;pin_manager.c: 16: TRISA = 0x0A;
 11864  17D9  300A               	movlw	10
 11865  17DA  0020               	movlb	0	; select bank0
 11866  17DB  0091               	movwf	17	;volatile
 11867                           
 11868                           ;pin_manager.c: 17: TRISB = 0x07;
 11869  17DC  3007               	movlw	7
 11870  17DD  0092               	movwf	18	;volatile
 11871                           
 11872                           ;pin_manager.c: 18: TRISC = 0x00;
 11873  17DE  0193               	clrf	19	;volatile
 11874                           
 11875                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11876  17DF  300A               	movlw	10
 11877  17E0  003E               	movlb	30	; select bank30
 11878  17E1  00B8               	movwf	56	;volatile
 11879                           
 11880                           ;pin_manager.c: 21: ANSELB = 0x00;
 11881  17E2  01C3               	clrf	67	;volatile
 11882                           
 11883                           ;pin_manager.c: 22: ANSELC = 0x00;
 11884  17E3  01CE               	clrf	78	;volatile
 11885                           
 11886                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11887  17E4  002E               	movlb	14	; select bank14
 11888  17E5  1216               	bcf	22,4	;volatile
 11889                           
 11890                           ;pin_manager.c: 25: bool state = GIE;
 11891  17E6  3000               	movlw	0
 11892  17E7  1B8B               	btfsc	11,7	;volatile
 11893  17E8  3001               	movlw	1
 11894  17E9  00F0               	movwf	PIN_MANAGER_Initialize@state
 11895                           
 11896                           ;pin_manager.c: 26: GIE = 0;
 11897  17EA  138B               	bcf	11,7	;volatile
 11898                           
 11899                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11900  17EB  3055               	movlw	85
 11901  17EC  003D               	movlb	29	; select bank29
 11902  17ED  008F               	movwf	15	;volatile
 11903                           
 11904                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11905  17EE  30AA               	movlw	170
 11906  17EF  008F               	movwf	15	;volatile
 11907                           
 11908                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11909  17F0  100F               	bcf	15,0	;volatile
 11910                           
 11911                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11912  17F1  300F               	movlw	15
 11913  17F2  003E               	movlb	30	; select bank30
 11914  17F3  00A3               	movwf	35	;volatile
 11915                           
 11916                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11917  17F4  3055               	movlw	85
 11918  17F5  003D               	movlb	29	; select bank29
 11919  17F6  008F               	movwf	15	;volatile
 11920                           
 11921                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11922  17F7  30AA               	movlw	170
 11923  17F8  008F               	movwf	15	;volatile
 11924                           
 11925                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11926  17F9  140F               	bsf	15,0	;volatile
 11927                           
 11928                           ;pin_manager.c: 40: GIE = state;
 11929  17FA  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11930  17FB  2FFE               	goto	u2820
 11931  17FC  178B               	bsf	11,7	;volatile
 11932  17FD  0008               	return
 11933  17FE                     u2820:	
 11934  17FE  138B               	bcf	11,7	;volatile
 11935  17FF  0008               	return
 11936  1800                     __end_of_PIN_MANAGER_Initialize:	
 11937                           
 11938                           	psect	text28
 11939  1636                     __ptext28:	
 11940 ;; *************** function _OSCILLATOR_Initialize *****************
 11941 ;; Defined at:
 11942 ;;		line 89 in file "system.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      void 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_SYSTEM_Initialize
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           
 11970                           ;psect for function _OSCILLATOR_Initialize
 11971  1636                     _OSCILLATOR_Initialize:	
 11972                           
 11973                           ;system.c: 91: OSCCON1 = 0x60;
 11974                           
 11975                           ;incstack = 0
 11976                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11977  1636  3060               	movlw	96
 11978  1637  0031               	movlb	17	; select bank17
 11979  1638  008D               	movwf	13	;volatile
 11980                           
 11981                           ;system.c: 92: OSCCON3 = 0x00;
 11982  1639  018F               	clrf	15	;volatile
 11983                           
 11984                           ;system.c: 93: OSCEN = 0x00;
 11985  163A  0191               	clrf	17	;volatile
 11986                           
 11987                           ;system.c: 94: OSCFRQ = 0x06;
 11988  163B  3006               	movlw	6
 11989  163C  0093               	movwf	19	;volatile
 11990                           
 11991                           ;system.c: 95: OSCTUNE = 0x00;
 11992  163D  0192               	clrf	18	;volatile
 11993  163E  0008               	return
 11994  163F                     __end_of_OSCILLATOR_Initialize:	
 11995                           
 11996                           	psect	text29
 11997  0019                     __ptext29:	
 11998 ;; *************** function _LCD_Init *****************
 11999 ;; Defined at:
 12000 ;;		line 154 in file "lcd.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  style           1    wreg     unsigned char 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  style           1    7[COMMON] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;Total ram usage:        4 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    2
 12021 ;; This function calls:
 12022 ;;		_LCD_Cmd
 12023 ;;		_LCD_Port
 12024 ;; This function is called by:
 12025 ;;		_SYSTEM_Initialize
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           
 12030                           ;psect for function _LCD_Init
 12031  0019                     _LCD_Init:	
 12032                           
 12033                           ;incstack = 0
 12034                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12035                           ;LCD_Init@style stored from wreg
 12036  0019  00F7               	movwf	LCD_Init@style
 12037                           
 12038                           ;lcd.c: 156: LCD_Port(0x00);
 12039  001A  3000               	movlw	0
 12040  001B  3196  26B8  3180   	fcall	_LCD_Port
 12041                           
 12042                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12043  001E  3005               	movlw	5
 12044  001F  00F6               	movwf	??_LCD_Init+2
 12045  0020  300F               	movlw	15
 12046  0021  00F5               	movwf	??_LCD_Init+1
 12047  0022  30F4               	movlw	244
 12048  0023  00F4               	movwf	??_LCD_Init
 12049  0024                     u3817:	
 12050  0024  0BF4               	decfsz	??_LCD_Init,f
 12051  0025  2824               	goto	u3817
 12052  0026  0BF5               	decfsz	??_LCD_Init+1,f
 12053  0027  2824               	goto	u3817
 12054  0028  0BF6               	decfsz	??_LCD_Init+2,f
 12055  0029  2824               	goto	u3817
 12056                           
 12057                           ;lcd.c: 160: LCD_Cmd(0x03);
 12058  002A  3003               	movlw	3
 12059  002B  3180  2005  3180   	fcall	_LCD_Cmd
 12060                           
 12061                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12062  002E  3068               	movlw	104
 12063  002F  00F5               	movwf	??_LCD_Init+1
 12064  0030  30E4               	movlw	228
 12065  0031  00F4               	movwf	??_LCD_Init
 12066  0032                     u3827:	
 12067  0032  0BF4               	decfsz	??_LCD_Init,f
 12068  0033  2832               	goto	u3827
 12069  0034  0BF5               	decfsz	??_LCD_Init+1,f
 12070  0035  2832               	goto	u3827
 12071  0036  0000               	nop
 12072                           
 12073                           ;lcd.c: 164: LCD_Cmd(0x03);
 12074  0037  3003               	movlw	3
 12075  0038  3180  2005  3180   	fcall	_LCD_Cmd
 12076                           
 12077                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12078  003B  3089               	movlw	137
 12079  003C  00F4               	movwf	??_LCD_Init
 12080  003D                     u3837:	
 12081  003D  3200               	nop2
 12082  003E  3200               	nop2
 12083  003F  0BF4               	decfsz	??_LCD_Init,f
 12084  0040  283D               	goto	u3837
 12085                           
 12086                           ;lcd.c: 168: LCD_Cmd(0x03);
 12087  0041  3003               	movlw	3
 12088  0042  3180  2005  3180   	fcall	_LCD_Cmd
 12089                           
 12090                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12091  0045  3089               	movlw	137
 12092  0046  00F4               	movwf	??_LCD_Init
 12093  0047                     u3847:	
 12094  0047  3200               	nop2
 12095  0048  3200               	nop2
 12096  0049  0BF4               	decfsz	??_LCD_Init,f
 12097  004A  2847               	goto	u3847
 12098                           
 12099                           ;lcd.c: 172: LCD_Cmd(0x02);
 12100  004B  3002               	movlw	2
 12101  004C  3180  2005  3180   	fcall	_LCD_Cmd
 12102                           
 12103                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12104  004F  3089               	movlw	137
 12105  0050  00F4               	movwf	??_LCD_Init
 12106  0051                     u3857:	
 12107  0051  3200               	nop2
 12108  0052  3200               	nop2
 12109  0053  0BF4               	decfsz	??_LCD_Init,f
 12110  0054  2851               	goto	u3857
 12111                           
 12112                           ;lcd.c: 176: LCD_Cmd(0x2);
 12113  0055  3002               	movlw	2
 12114  0056  3180  2005  3180   	fcall	_LCD_Cmd
 12115                           
 12116                           ;lcd.c: 178: LCD_Cmd(0x8);
 12117  0059  3008               	movlw	8
 12118  005A  3180  2005  3180   	fcall	_LCD_Cmd
 12119                           
 12120                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12121  005D  3089               	movlw	137
 12122  005E  00F4               	movwf	??_LCD_Init
 12123  005F                     u3867:	
 12124  005F  3200               	nop2
 12125  0060  3200               	nop2
 12126  0061  0BF4               	decfsz	??_LCD_Init,f
 12127  0062  285F               	goto	u3867
 12128                           
 12129                           ;lcd.c: 182: LCD_Cmd(0x0);
 12130  0063  3000               	movlw	0
 12131  0064  3180  2005  3180   	fcall	_LCD_Cmd
 12132                           
 12133                           ;lcd.c: 184: LCD_Cmd(0x8);
 12134  0067  3008               	movlw	8
 12135  0068  3180  2005  3180   	fcall	_LCD_Cmd
 12136                           
 12137                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12138  006B  3089               	movlw	137
 12139  006C  00F4               	movwf	??_LCD_Init
 12140  006D                     u3877:	
 12141  006D  3200               	nop2
 12142  006E  3200               	nop2
 12143  006F  0BF4               	decfsz	??_LCD_Init,f
 12144  0070  286D               	goto	u3877
 12145                           
 12146                           ;lcd.c: 188: LCD_Cmd(0x0);
 12147  0071  3000               	movlw	0
 12148  0072  3180  2005  3180   	fcall	_LCD_Cmd
 12149                           
 12150                           ;lcd.c: 190: LCD_Cmd(0x1);
 12151  0075  3001               	movlw	1
 12152  0076  3180  2005  3180   	fcall	_LCD_Cmd
 12153                           
 12154                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12155  0079  3034               	movlw	52
 12156  007A  00F5               	movwf	??_LCD_Init+1
 12157  007B  30F1               	movlw	241
 12158  007C  00F4               	movwf	??_LCD_Init
 12159  007D                     u3887:	
 12160  007D  0BF4               	decfsz	??_LCD_Init,f
 12161  007E  287D               	goto	u3887
 12162  007F  0BF5               	decfsz	??_LCD_Init+1,f
 12163  0080  287D               	goto	u3887
 12164  0081  3200               	nop2
 12165                           
 12166                           ;lcd.c: 194: LCD_Cmd(0x0);
 12167  0082  3000               	movlw	0
 12168  0083  3180  2005  3180   	fcall	_LCD_Cmd
 12169                           
 12170                           ;lcd.c: 196: LCD_Cmd(0x6);
 12171  0086  3006               	movlw	6
 12172  0087  3180  2005  3180   	fcall	_LCD_Cmd
 12173                           
 12174                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12175  008A  3089               	movlw	137
 12176  008B  00F4               	movwf	??_LCD_Init
 12177  008C                     u3897:	
 12178  008C  3200               	nop2
 12179  008D  3200               	nop2
 12180  008E  0BF4               	decfsz	??_LCD_Init,f
 12181  008F  288C               	goto	u3897
 12182                           
 12183                           ;lcd.c: 200: LCD_Cmd(0x0);
 12184  0090  3000               	movlw	0
 12185  0091  3180  2005  3180   	fcall	_LCD_Cmd
 12186                           
 12187                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12188  0094  0877               	movf	LCD_Init@style,w
 12189  0095  380C               	iorlw	12
 12190  0096  3180  2005  3180   	fcall	_LCD_Cmd
 12191                           
 12192                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12193  0099  3089               	movlw	137
 12194  009A  00F4               	movwf	??_LCD_Init
 12195  009B                     u3907:	
 12196  009B  3200               	nop2
 12197  009C  3200               	nop2
 12198  009D  0BF4               	decfsz	??_LCD_Init,f
 12199  009E  289B               	goto	u3907
 12200  009F  0008               	return
 12201  00A0                     __end_of_LCD_Init:	
 12202                           
 12203                           	psect	text30
 12204  162E                     __ptext30:	
 12205 ;; *************** function _LCD_Clear *****************
 12206 ;; Defined at:
 12207 ;;		line 75 in file "lcd.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;		None
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0, pclath, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    2
 12228 ;; This function calls:
 12229 ;;		_LCD_Cmd
 12230 ;; This function is called by:
 12231 ;;		_SYSTEM_Initialize
 12232 ;;		_menuChoice
 12233 ;;		_main
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           
 12238                           ;psect for function _LCD_Clear
 12239  162E                     _LCD_Clear:	
 12240                           
 12241                           ;lcd.c: 77: LCD_Cmd(0);
 12242                           
 12243                           ;incstack = 0
 12244                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12245  162E  3000               	movlw	0
 12246  162F  3180  2005  3196   	fcall	_LCD_Cmd
 12247                           
 12248                           ;lcd.c: 78: LCD_Cmd(1);
 12249  1632  3001               	movlw	1
 12250  1633  3180  2005         	fcall	_LCD_Cmd
 12251  1635  0008               	return
 12252  1636                     __end_of_LCD_Clear:	
 12253                           
 12254                           	psect	text31
 12255  177D                     __ptext31:	
 12256 ;; *************** function _InitCustomChars *****************
 12257 ;; Defined at:
 12258 ;;		line 29 in file "lcd.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  i               1    6[COMMON] unsigned char 
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;Total ram usage:        2 bytes
 12277 ;; Hardware stack levels used:    1
 12278 ;; Hardware stack levels required when called:    2
 12279 ;; This function calls:
 12280 ;;		_LCD_Cmd
 12281 ;;		_LCD_Write_Char
 12282 ;; This function is called by:
 12283 ;;		_SYSTEM_Initialize
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           
 12288                           ;psect for function _InitCustomChars
 12289  177D                     _InitCustomChars:	
 12290                           
 12291                           ;lcd.c: 31: uint8_t i;
 12292                           ;lcd.c: 32: LCD_Cmd(0x04);
 12293                           
 12294                           ;incstack = 0
 12295                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12296  177D  3004               	movlw	4
 12297  177E  3180  2005  3197   	fcall	_LCD_Cmd
 12298                           
 12299                           ;lcd.c: 33: LCD_Cmd(0x00);
 12300  1781  3000               	movlw	0
 12301  1782  3180  2005  3197   	fcall	_LCD_Cmd
 12302                           
 12303                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12304  1785  01F6               	clrf	InitCustomChars@i
 12305  1786  3010               	movlw	16
 12306  1787  0276               	subwf	InitCustomChars@i,w
 12307  1788  1803               	btfsc	3,0
 12308  1789  2F9B               	goto	l2478
 12309  178A                     l2472:	
 12310                           
 12311                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12312  178A  0876               	movf	InitCustomChars@i,w
 12313  178B  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 12314  178C  0086               	movwf	6
 12315  178D  3001               	movlw	1	; select bank3/4
 12316  178E  0087               	movwf	7
 12317  178F  0801               	movf	1,w
 12318  1790  3197  27A3  3197   	fcall	_LCD_Write_Char
 12319  1793  3001               	movlw	1
 12320  1794  00F5               	movwf	??_InitCustomChars
 12321  1795  0875               	movf	??_InitCustomChars,w
 12322  1796  07F6               	addwf	InitCustomChars@i,f
 12323  1797  3010               	movlw	16
 12324  1798  0276               	subwf	InitCustomChars@i,w
 12325  1799  1C03               	skipc
 12326  179A  2F8A               	goto	l2472
 12327  179B                     l2478:	
 12328                           
 12329                           ;lcd.c: 36: LCD_Cmd(0);
 12330  179B  3000               	movlw	0
 12331  179C  3180  2005  3197   	fcall	_LCD_Cmd
 12332                           
 12333                           ;lcd.c: 37: LCD_Cmd(2);
 12334  179F  3002               	movlw	2
 12335  17A0  3180  2005         	fcall	_LCD_Cmd
 12336  17A2  0008               	return
 12337  17A3                     __end_of_InitCustomChars:	
 12338                           
 12339                           	psect	text32
 12340  17A3                     __ptext32:	
 12341 ;; *************** function _LCD_Write_Char *****************
 12342 ;; Defined at:
 12343 ;;		line 223 in file "lcd.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  a               1    wreg     const unsigned char 
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;  a               1    4[COMMON] const unsigned char 
 12348 ;;  y               1    3[COMMON] unsigned char 
 12349 ;;  temp            1    2[COMMON] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  1    wreg      void 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0, pclath, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:        4 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    1
 12366 ;; This function calls:
 12367 ;;		_LCD_Port
 12368 ;; This function is called by:
 12369 ;;		_InitCustomChars
 12370 ;;		_LCD_Write_String
 12371 ;;		_LCD_Write_Int
 12372 ;;		_menuChoice
 12373 ;;		_main
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           
 12378                           ;psect for function _LCD_Write_Char
 12379  17A3                     _LCD_Write_Char:	
 12380                           
 12381                           ;incstack = 0
 12382                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12383                           ;LCD_Write_Char@a stored from wreg
 12384  17A3  00F4               	movwf	LCD_Write_Char@a
 12385                           
 12386                           ;lcd.c: 225: char temp,y;
 12387                           ;lcd.c: 226: temp = a&0x0F;
 12388  17A4  0874               	movf	LCD_Write_Char@a,w
 12389  17A5  390F               	andlw	15
 12390  17A6  00F1               	movwf	??_LCD_Write_Char
 12391  17A7  0871               	movf	??_LCD_Write_Char,w
 12392  17A8  00F2               	movwf	LCD_Write_Char@temp
 12393                           
 12394                           ;lcd.c: 227: y = a&0xF0;
 12395  17A9  0874               	movf	LCD_Write_Char@a,w
 12396  17AA  39F0               	andlw	240
 12397  17AB  00F1               	movwf	??_LCD_Write_Char
 12398  17AC  0871               	movf	??_LCD_Write_Char,w
 12399  17AD  00F3               	movwf	LCD_Write_Char@y
 12400                           
 12401                           ;lcd.c: 228: RA0 = 1;
 12402  17AE  0020               	movlb	0	; select bank0
 12403  17AF  140C               	bsf	12,0	;volatile
 12404                           
 12405                           ;lcd.c: 229: LCD_Port(y>>4);
 12406  17B0  0873               	movf	LCD_Write_Char@y,w
 12407  17B1  00F1               	movwf	??_LCD_Write_Char
 12408  17B2  3004               	movlw	4
 12409  17B3                     u2405:	
 12410  17B3  36F1               	lsrf	??_LCD_Write_Char,f
 12411  17B4  0B89               	decfsz	9,f
 12412  17B5  2FB3               	goto	u2405
 12413  17B6  0871               	movf	??_LCD_Write_Char,w
 12414  17B7  3196  26B8  3197   	fcall	_LCD_Port
 12415                           
 12416                           ;lcd.c: 230: RA2 = 1;
 12417  17BA  0020               	movlb	0	; select bank0
 12418  17BB  150C               	bsf	12,2	;volatile
 12419                           
 12420                           ;lcd.c: 231: RA2 = 0;
 12421  17BC  110C               	bcf	12,2	;volatile
 12422                           
 12423                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12424  17BD  306A               	movlw	106
 12425  17BE  00F1               	movwf	??_LCD_Write_Char
 12426  17BF                     u3917:	
 12427  17BF  0BF1               	decfsz	??_LCD_Write_Char,f
 12428  17C0  2FBF               	goto	u3917
 12429  17C1  0000               	nop
 12430                           
 12431                           ;lcd.c: 233: LCD_Port(temp);
 12432  17C2  0872               	movf	LCD_Write_Char@temp,w
 12433  17C3  3196  26B8  3197   	fcall	_LCD_Port
 12434                           
 12435                           ;lcd.c: 234: RA2 = 1;
 12436  17C6  0020               	movlb	0	; select bank0
 12437  17C7  150C               	bsf	12,2	;volatile
 12438                           
 12439                           ;lcd.c: 235: RA2 = 0;
 12440  17C8  110C               	bcf	12,2	;volatile
 12441                           
 12442                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12443  17C9  306A               	movlw	106
 12444  17CA  00F1               	movwf	??_LCD_Write_Char
 12445  17CB                     u3927:	
 12446  17CB  0BF1               	decfsz	??_LCD_Write_Char,f
 12447  17CC  2FCB               	goto	u3927
 12448  17CD  0000               	nop
 12449  17CE  0008               	return
 12450  17CF                     __end_of_LCD_Write_Char:	
 12451                           
 12452                           	psect	text33
 12453  0005                     __ptext33:	
 12454 ;; *************** function _LCD_Cmd *****************
 12455 ;; Defined at:
 12456 ;;		line 65 in file "lcd.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  a               1    wreg     unsigned char 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;  a               1    3[COMMON] unsigned char 
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0, pclath, cstack
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        3 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    1
 12477 ;; This function calls:
 12478 ;;		_LCD_Port
 12479 ;; This function is called by:
 12480 ;;		_InitCustomChars
 12481 ;;		_LCD_Clear
 12482 ;;		_LCD_Set_Cursor
 12483 ;;		_LCD_Init
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           
 12488                           ;psect for function _LCD_Cmd
 12489  0005                     _LCD_Cmd:	
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12493                           ;LCD_Cmd@a stored from wreg
 12494  0005  00F3               	movwf	LCD_Cmd@a
 12495                           
 12496                           ;lcd.c: 67: RA0 = 0;
 12497  0006  0020               	movlb	0	; select bank0
 12498  0007  100C               	bcf	12,0	;volatile
 12499                           
 12500                           ;lcd.c: 68: LCD_Port(a);
 12501  0008  0873               	movf	LCD_Cmd@a,w
 12502  0009  3196  26B8  3180   	fcall	_LCD_Port
 12503                           
 12504                           ;lcd.c: 69: RA2 = 1;
 12505  000C  0020               	movlb	0	; select bank0
 12506  000D  150C               	bsf	12,2	;volatile
 12507                           
 12508                           ;lcd.c: 70: RA2 = 0;
 12509  000E  110C               	bcf	12,2	;volatile
 12510                           
 12511                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12512  000F  302A               	movlw	42
 12513  0010  00F2               	movwf	??_LCD_Cmd+1
 12514  0011  308D               	movlw	141
 12515  0012  00F1               	movwf	??_LCD_Cmd
 12516  0013                     u3937:	
 12517  0013  0BF1               	decfsz	??_LCD_Cmd,f
 12518  0014  2813               	goto	u3937
 12519  0015  0BF2               	decfsz	??_LCD_Cmd+1,f
 12520  0016  2813               	goto	u3937
 12521  0017  3200               	nop2
 12522  0018  0008               	return
 12523  0019                     __end_of_LCD_Cmd:	
 12524                           
 12525                           	psect	text34
 12526  16B8                     __ptext34:	
 12527 ;; *************** function _LCD_Port *****************
 12528 ;; Defined at:
 12529 ;;		line 41 in file "lcd.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  a               1    wreg     unsigned char 
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;  a               1    0[COMMON] unsigned char 
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;Total ram usage:        1 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; This function calls:
 12550 ;;		Nothing
 12551 ;; This function is called by:
 12552 ;;		_LCD_Cmd
 12553 ;;		_LCD_Init
 12554 ;;		_LCD_Write_Char
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           
 12559                           ;psect for function _LCD_Port
 12560  16B8                     _LCD_Port:	
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in _LCD_Port: [wreg]
 12564                           ;LCD_Port@a stored from wreg
 12565  16B8  00F0               	movwf	LCD_Port@a
 12566                           
 12567                           ;lcd.c: 43: if(a & 1)
 12568  16B9  1C70               	btfss	LCD_Port@a,0
 12569  16BA  2EBE               	goto	l28
 12570                           
 12571                           ;lcd.c: 44: RA7 = 1;
 12572  16BB  0020               	movlb	0	; select bank0
 12573  16BC  178C               	bsf	12,7	;volatile
 12574  16BD  2EC0               	goto	l2144
 12575  16BE                     l28:	
 12576                           
 12577                           ;lcd.c: 45: else
 12578                           ;lcd.c: 46: RA7 = 0;
 12579  16BE  0020               	movlb	0	; select bank0
 12580  16BF  138C               	bcf	12,7	;volatile
 12581  16C0                     l2144:	
 12582                           
 12583                           ;lcd.c: 48: if(a & 2)
 12584  16C0  1CF0               	btfss	LCD_Port@a,1
 12585  16C1  2EC4               	goto	l30
 12586                           
 12587                           ;lcd.c: 49: RA6 = 1;
 12588  16C2  170C               	bsf	12,6	;volatile
 12589  16C3  2EC5               	goto	l2148
 12590  16C4                     l30:	
 12591                           
 12592                           ;lcd.c: 50: else
 12593                           ;lcd.c: 51: RA6 = 0;
 12594  16C4  130C               	bcf	12,6	;volatile
 12595  16C5                     l2148:	
 12596                           
 12597                           ;lcd.c: 53: if(a & 4)
 12598  16C5  1D70               	btfss	LCD_Port@a,2
 12599  16C6  2EC9               	goto	l32
 12600                           
 12601                           ;lcd.c: 54: RC0 = 1;
 12602  16C7  140E               	bsf	14,0	;volatile
 12603  16C8  2ECA               	goto	l2152
 12604  16C9                     l32:	
 12605                           
 12606                           ;lcd.c: 55: else
 12607                           ;lcd.c: 56: RC0 = 0;
 12608  16C9  100E               	bcf	14,0	;volatile
 12609  16CA                     l2152:	
 12610                           
 12611                           ;lcd.c: 58: if(a & 8)
 12612  16CA  1DF0               	btfss	LCD_Port@a,3
 12613  16CB  2ECE               	goto	l34
 12614                           
 12615                           ;lcd.c: 59: RC1 = 1;
 12616  16CC  148E               	bsf	14,1	;volatile
 12617  16CD  0008               	return
 12618  16CE                     l34:	
 12619                           
 12620                           ;lcd.c: 60: else
 12621                           ;lcd.c: 61: RC1 = 0;
 12622  16CE  108E               	bcf	14,1	;volatile
 12623  16CF  0008               	return
 12624  16D0                     __end_of_LCD_Port:	
 12625                           
 12626                           	psect	text35
 12627  16D0                     __ptext35:	
 12628 ;; *************** function _ADCC_Initialize *****************
 12629 ;; Defined at:
 12630 ;;		line 60 in file "adc.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;		None
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1    wreg      void 
 12637 ;; Registers used:
 12638 ;;		wreg, status,2
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:        0 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; This function calls:
 12651 ;;		Nothing
 12652 ;; This function is called by:
 12653 ;;		_SYSTEM_Initialize
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           
 12658                           ;psect for function _ADCC_Initialize
 12659  16D0                     _ADCC_Initialize:	
 12660                           
 12661                           ;adc.c: 62: ADCON1 = 0x00;
 12662                           
 12663                           ;incstack = 0
 12664                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12665  16D0  0021               	movlb	1	; select bank1
 12666  16D1  0194               	clrf	20	;volatile
 12667                           
 12668                           ;adc.c: 64: ADCON2 = 0x00;
 12669  16D2  0195               	clrf	21	;volatile
 12670                           
 12671                           ;adc.c: 66: ADCON3 = 0x00;
 12672  16D3  0196               	clrf	22	;volatile
 12673                           
 12674                           ;adc.c: 68: ADACT = 0x00;
 12675  16D4  0199               	clrf	25	;volatile
 12676                           
 12677                           ;adc.c: 70: ADSTAT = 0x00;
 12678  16D5  0197               	clrf	23	;volatile
 12679                           
 12680                           ;adc.c: 73: ADCLK = 0x3F;
 12681  16D6  303F               	movlw	63
 12682  16D7  0098               	movwf	24	;volatile
 12683                           
 12684                           ;adc.c: 81: ADREF = 0x00;
 12685  16D8  019A               	clrf	26	;volatile
 12686                           
 12687                           ;adc.c: 83: ADCAP = 0x00;
 12688  16D9  019B               	clrf	27	;volatile
 12689                           
 12690                           ;adc.c: 86: ADPRE = 0x07;
 12691  16DA  3007               	movlw	7
 12692  16DB  009C               	movwf	28	;volatile
 12693                           
 12694                           ;adc.c: 88: ADACQ = 0x00;
 12695  16DC  019D               	clrf	29	;volatile
 12696                           
 12697                           ;adc.c: 90: ADPCH = 0x00;
 12698  16DD  019E               	clrf	30	;volatile
 12699                           
 12700                           ;adc.c: 92: ADRPT = 0x00;
 12701  16DE  0022               	movlb	2	; select bank2
 12702  16DF  018D               	clrf	13	;volatile
 12703                           
 12704                           ;adc.c: 94: ADLTHL = 0x00;
 12705  16E0  018E               	clrf	14	;volatile
 12706                           
 12707                           ;adc.c: 96: ADLTHH = 0x00;
 12708  16E1  018F               	clrf	15	;volatile
 12709                           
 12710                           ;adc.c: 98: ADUTHL = 0x00;
 12711  16E2  0190               	clrf	16	;volatile
 12712                           
 12713                           ;adc.c: 100: ADUTHH = 0x00;
 12714  16E3  0191               	clrf	17	;volatile
 12715                           
 12716                           ;adc.c: 102: ADSTPTL = 0x00;
 12717  16E4  0192               	clrf	18	;volatile
 12718                           
 12719                           ;adc.c: 104: ADSTPTH = 0x00;
 12720  16E5  0193               	clrf	19	;volatile
 12721                           
 12722                           ;adc.c: 106: ADCON0 = 0x84;
 12723  16E6  3084               	movlw	132
 12724  16E7  0021               	movlb	1	; select bank1
 12725  16E8  0093               	movwf	19	;volatile
 12726  16E9  0008               	return
 12727  16EA                     __end_of_ADCC_Initialize:	
 12728                           
 12729                           	psect	text36
 12730  0E2F                     __ptext36:	
 12731 ;; *************** function _PID_Calculate *****************
 12732 ;; Defined at:
 12733 ;;		line 21 in file "pid.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  setpoint        2    6[COMMON] int 
 12736 ;;  temp            2    8[COMMON] int 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;		None
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  2    6[COMMON] int 
 12741 ;; Registers used:
 12742 ;;		wreg, status,2, status,0, pclath, cstack
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;Total ram usage:        6 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    1
 12755 ;; This function calls:
 12756 ;;		___wmul
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _PID_Calculate
 12764  0E2F                     _PID_Calculate:	
 12765                           
 12766                           ;pid.c: 23: pidCount+=1;
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12770  0E2F  3001               	movlw	1
 12771  0E30  0021               	movlb	1	; select bank1
 12772  0E31  07B6               	addwf	_pidCount^(0+128),f
 12773  0E32  3000               	movlw	0
 12774  0E33  3DB7               	addwfc	(_pidCount+1)^(0+128),f
 12775                           
 12776                           ;pid.c: 26: error = setpoint - temp;
 12777  0E34  0978               	comf	PID_Calculate@temp,w
 12778  0E35  00FA               	movwf	??_PID_Calculate
 12779  0E36  0979               	comf	PID_Calculate@temp+1,w
 12780  0E37  00FB               	movwf	??_PID_Calculate+1
 12781  0E38  0AFA               	incf	??_PID_Calculate,f
 12782  0E39  1903               	skipnz
 12783  0E3A  0AFB               	incf	??_PID_Calculate+1,f
 12784  0E3B  0876               	movf	PID_Calculate@setpoint,w
 12785  0E3C  077A               	addwf	??_PID_Calculate,w
 12786  0E3D  00AE               	movwf	_error^(0+128)
 12787  0E3E  0877               	movf	PID_Calculate@setpoint+1,w
 12788  0E3F  3D7B               	addwfc	??_PID_Calculate+1,w
 12789  0E40  00AF               	movwf	(_error+1)^(0+128)
 12790                           
 12791                           ;pid.c: 28: errorValue = error * Kp;
 12792  0E41  082F               	movf	(_error+1)^(0+128),w
 12793  0E42  00F1               	movwf	___wmul@multiplier+1
 12794  0E43  082E               	movf	_error^(0+128),w
 12795  0E44  00F0               	movwf	___wmul@multiplier
 12796  0E45  086B               	movf	(_Kp+1)^(0+128),w
 12797  0E46  00F3               	movwf	___wmul@multiplicand+1
 12798  0E47  086A               	movf	_Kp^(0+128),w
 12799  0E48  00F2               	movwf	___wmul@multiplicand
 12800  0E49  3197  2704  318E   	fcall	___wmul
 12801  0E4C  0871               	movf	?___wmul+1,w
 12802  0E4D  0021               	movlb	1	; select bank1
 12803  0E4E  00B1               	movwf	(_errorValue+1)^(0+128)
 12804  0E4F  0870               	movf	?___wmul,w
 12805  0E50  00B0               	movwf	_errorValue^(0+128)
 12806                           
 12807                           ;pid.c: 31: if(error>0)signPositive=1;
 12808  0E51  082F               	movf	(_error+1)^(0+128),w
 12809  0E52  3A80               	xorlw	128
 12810  0E53  00FA               	movwf	??_PID_Calculate
 12811  0E54  3080               	movlw	128
 12812  0E55  027A               	subwf	??_PID_Calculate,w
 12813  0E56  1D03               	skipz
 12814  0E57  2E5A               	goto	u3215
 12815  0E58  3001               	movlw	1
 12816  0E59  022E               	subwf	_error^(0+128),w
 12817  0E5A                     u3215:	
 12818  0E5A  1C03               	skipc
 12819  0E5B  2E62               	goto	l2908
 12820  0E5C  3001               	movlw	1
 12821  0E5D  0021               	movlb	1	; select bank1
 12822  0E5E  00C0               	movwf	_signPositive^(0+128)
 12823  0E5F  3000               	movlw	0
 12824  0E60  00C1               	movwf	(_signPositive^(0+128)+1)
 12825  0E61  2E65               	goto	l2910
 12826  0E62                     l2908:	
 12827                           
 12828                           ;pid.c: 33: else signPositive=0;
 12829  0E62  0021               	movlb	1	; select bank1
 12830  0E63  01C0               	clrf	_signPositive^(0+128)
 12831  0E64  01C1               	clrf	(_signPositive+1)^(0+128)
 12832  0E65                     l2910:	
 12833                           
 12834                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 12835  0E65  0833               	movf	(_lastSign+1)^(0+128),w
 12836  0E66  0641               	xorwf	(_signPositive+1)^(0+128),w
 12837  0E67  1D03               	skipz
 12838  0E68  2E6B               	goto	u3225
 12839  0E69  0832               	movf	_lastSign^(0+128),w
 12840  0E6A  0640               	xorwf	_signPositive^(0+128),w
 12841  0E6B                     u3225:	
 12842  0E6B  1903               	skipnz
 12843  0E6C  2E6F               	goto	l2914
 12844  0E6D  01B8               	clrf	_pidIntegrated^(0+128)
 12845  0E6E  01B9               	clrf	(_pidIntegrated+1)^(0+128)
 12846  0E6F                     l2914:	
 12847                           
 12848                           ;pid.c: 37: lastSign=signPositive;
 12849  0E6F  0841               	movf	(_signPositive+1)^(0+128),w
 12850  0E70  00B3               	movwf	(_lastSign+1)^(0+128)
 12851  0E71  0840               	movf	_signPositive^(0+128),w
 12852  0E72  00B2               	movwf	_lastSign^(0+128)
 12853                           
 12854                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 12855  0E73  093C               	comf	_pidPrevError^(0+128),w
 12856  0E74  00FA               	movwf	??_PID_Calculate
 12857  0E75  093D               	comf	(_pidPrevError+1)^(0+128),w
 12858  0E76  00FB               	movwf	??_PID_Calculate+1
 12859  0E77  0AFA               	incf	??_PID_Calculate,f
 12860  0E78  1903               	skipnz
 12861  0E79  0AFB               	incf	??_PID_Calculate+1,f
 12862  0E7A  082E               	movf	_error^(0+128),w
 12863  0E7B  077A               	addwf	??_PID_Calculate,w
 12864  0E7C  00F0               	movwf	___wmul@multiplier
 12865  0E7D  082F               	movf	(_error+1)^(0+128),w
 12866  0E7E  3D7B               	addwfc	??_PID_Calculate+1,w
 12867  0E7F  00F1               	movwf	___wmul@multiplier+1
 12868  0E80  0867               	movf	(_Kd+1)^(0+128),w
 12869  0E81  00F3               	movwf	___wmul@multiplicand+1
 12870  0E82  0866               	movf	_Kd^(0+128),w
 12871  0E83  00F2               	movwf	___wmul@multiplicand
 12872  0E84  3197  2704  318E   	fcall	___wmul
 12873  0E87  0871               	movf	?___wmul+1,w
 12874  0E88  0021               	movlb	1	; select bank1
 12875  0E89  00AB               	movwf	(_derivativeValue+1)^(0+128)
 12876  0E8A  0870               	movf	?___wmul,w
 12877  0E8B  00AA               	movwf	_derivativeValue^(0+128)
 12878                           
 12879                           ;pid.c: 42: pidPrevError = error;
 12880  0E8C  082F               	movf	(_error+1)^(0+128),w
 12881  0E8D  00BD               	movwf	(_pidPrevError+1)^(0+128)
 12882  0E8E  082E               	movf	_error^(0+128),w
 12883  0E8F  00BC               	movwf	_pidPrevError^(0+128)
 12884                           
 12885                           ;pid.c: 45: if(pidCount>20)
 12886  0E90  0837               	movf	(_pidCount+1)^(0+128),w
 12887  0E91  3A80               	xorlw	128
 12888  0E92  00FA               	movwf	??_PID_Calculate
 12889  0E93  3080               	movlw	128
 12890  0E94  027A               	subwf	??_PID_Calculate,w
 12891  0E95  1D03               	skipz
 12892  0E96  2E99               	goto	u3235
 12893  0E97  3015               	movlw	21
 12894  0E98  0236               	subwf	_pidCount^(0+128),w
 12895  0E99                     u3235:	
 12896  0E99  1C03               	skipc
 12897  0E9A  2ED4               	goto	l2932
 12898                           
 12899                           ;pid.c: 46: {
 12900                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 12901  0E9B  0021               	movlb	1	; select bank1
 12902  0E9C  082F               	movf	(_error+1)^(0+128),w
 12903  0E9D  00F1               	movwf	___wmul@multiplier+1
 12904  0E9E  082E               	movf	_error^(0+128),w
 12905  0E9F  00F0               	movwf	___wmul@multiplier
 12906  0EA0  0869               	movf	(_Ki+1)^(0+128),w
 12907  0EA1  00F3               	movwf	___wmul@multiplicand+1
 12908  0EA2  0868               	movf	_Ki^(0+128),w
 12909  0EA3  00F2               	movwf	___wmul@multiplicand
 12910  0EA4  3197  2704  318E   	fcall	___wmul
 12911  0EA7  0021               	movlb	1	; select bank1
 12912  0EA8  0838               	movf	_pidIntegrated^(0+128),w
 12913  0EA9  0770               	addwf	?___wmul,w
 12914  0EAA  00B8               	movwf	_pidIntegrated^(0+128)
 12915  0EAB  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12916  0EAC  3D71               	addwfc	?___wmul+1,w
 12917  0EAD  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12918                           
 12919                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 12920  0EAE  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12921  0EAF  3A80               	xorlw	128
 12922  0EB0  00FA               	movwf	??_PID_Calculate
 12923  0EB1  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12924  0EB2  3A80               	xorlw	128
 12925  0EB3  027A               	subwf	??_PID_Calculate,w
 12926  0EB4  1D03               	skipz
 12927  0EB5  2EB8               	goto	u3245
 12928  0EB6  083A               	movf	_pidMinOutput^(0+128),w
 12929  0EB7  0238               	subwf	_pidIntegrated^(0+128),w
 12930  0EB8                     u3245:	
 12931  0EB8  1803               	skipnc
 12932  0EB9  2EBF               	goto	l229
 12933                           
 12934                           ;pid.c: 50: {
 12935                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 12936  0EBA  0021               	movlb	1	; select bank1
 12937  0EBB  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12938  0EBC  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12939  0EBD  083A               	movf	_pidMinOutput^(0+128),w
 12940  0EBE  00B8               	movwf	_pidIntegrated^(0+128)
 12941  0EBF                     l229:	
 12942                           
 12943                           ;pid.c: 52: }
 12944                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 12945  0EBF  0021               	movlb	1	; select bank1
 12946  0EC0  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12947  0EC1  3A80               	xorlw	128
 12948  0EC2  00FA               	movwf	??_PID_Calculate
 12949  0EC3  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12950  0EC4  3A80               	xorlw	128
 12951  0EC5  027A               	subwf	??_PID_Calculate,w
 12952  0EC6  1D03               	skipz
 12953  0EC7  2ECA               	goto	u3255
 12954  0EC8  0838               	movf	_pidIntegrated^(0+128),w
 12955  0EC9  026C               	subwf	_pidMaxOutput^(0+128),w
 12956  0ECA                     u3255:	
 12957  0ECA  1803               	skipnc
 12958  0ECB  2ED1               	goto	l2930
 12959                           
 12960                           ;pid.c: 55: {
 12961                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 12962  0ECC  0021               	movlb	1	; select bank1
 12963  0ECD  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12964  0ECE  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12965  0ECF  086C               	movf	_pidMaxOutput^(0+128),w
 12966  0ED0  00B8               	movwf	_pidIntegrated^(0+128)
 12967  0ED1                     l2930:	
 12968                           
 12969                           ;pid.c: 57: }
 12970                           ;pid.c: 58: pidCount=0;
 12971  0ED1  0021               	movlb	1	; select bank1
 12972  0ED2  01B6               	clrf	_pidCount^(0+128)
 12973  0ED3  01B7               	clrf	(_pidCount+1)^(0+128)
 12974  0ED4                     l2932:	
 12975                           
 12976                           ;pid.c: 59: }
 12977                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 12978  0ED4  0021               	movlb	1	; select bank1
 12979  0ED5  0838               	movf	_pidIntegrated^(0+128),w
 12980  0ED6  0730               	addwf	_errorValue^(0+128),w
 12981  0ED7  00FA               	movwf	??_PID_Calculate
 12982  0ED8  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12983  0ED9  3D31               	addwfc	(_errorValue+1)^(0+128),w
 12984  0EDA  00FB               	movwf	??_PID_Calculate+1
 12985  0EDB  082A               	movf	_derivativeValue^(0+128),w
 12986  0EDC  077A               	addwf	??_PID_Calculate,w
 12987  0EDD  00A8               	movwf	_Result^(0+128)
 12988  0EDE  082B               	movf	(_derivativeValue+1)^(0+128),w
 12989  0EDF  3D7B               	addwfc	??_PID_Calculate+1,w
 12990  0EE0  00A9               	movwf	(_Result+1)^(0+128)
 12991                           
 12992                           ;pid.c: 64: if (Result < pidMinOutput)
 12993  0EE1  0829               	movf	(_Result+1)^(0+128),w
 12994  0EE2  3A80               	xorlw	128
 12995  0EE3  00FA               	movwf	??_PID_Calculate
 12996  0EE4  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12997  0EE5  3A80               	xorlw	128
 12998  0EE6  027A               	subwf	??_PID_Calculate,w
 12999  0EE7  1D03               	skipz
 13000  0EE8  2EEB               	goto	u3265
 13001  0EE9  083A               	movf	_pidMinOutput^(0+128),w
 13002  0EEA  0228               	subwf	_Result^(0+128),w
 13003  0EEB                     u3265:	
 13004  0EEB  1803               	skipnc
 13005  0EEC  2EF2               	goto	l231
 13006                           
 13007                           ;pid.c: 65: {
 13008                           ;pid.c: 66: Result = pidMinOutput;
 13009  0EED  0021               	movlb	1	; select bank1
 13010  0EEE  083B               	movf	(_pidMinOutput+1)^(0+128),w
 13011  0EEF  00A9               	movwf	(_Result+1)^(0+128)
 13012  0EF0  083A               	movf	_pidMinOutput^(0+128),w
 13013  0EF1  00A8               	movwf	_Result^(0+128)
 13014  0EF2                     l231:	
 13015                           
 13016                           ;pid.c: 67: }
 13017                           ;pid.c: 69: if (Result > pidMaxOutput)
 13018  0EF2  0021               	movlb	1	; select bank1
 13019  0EF3  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13020  0EF4  3A80               	xorlw	128
 13021  0EF5  00FA               	movwf	??_PID_Calculate
 13022  0EF6  0829               	movf	(_Result+1)^(0+128),w
 13023  0EF7  3A80               	xorlw	128
 13024  0EF8  027A               	subwf	??_PID_Calculate,w
 13025  0EF9  1D03               	skipz
 13026  0EFA  2EFD               	goto	u3275
 13027  0EFB  0828               	movf	_Result^(0+128),w
 13028  0EFC  026C               	subwf	_pidMaxOutput^(0+128),w
 13029  0EFD                     u3275:	
 13030  0EFD  1803               	skipnc
 13031  0EFE  2F04               	goto	l232
 13032                           
 13033                           ;pid.c: 70: {
 13034                           ;pid.c: 71: Result = pidMaxOutput;
 13035  0EFF  0021               	movlb	1	; select bank1
 13036  0F00  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13037  0F01  00A9               	movwf	(_Result+1)^(0+128)
 13038  0F02  086C               	movf	_pidMaxOutput^(0+128),w
 13039  0F03  00A8               	movwf	_Result^(0+128)
 13040  0F04                     l232:	
 13041                           
 13042                           ;pid.c: 72: }
 13043                           ;pid.c: 74: return (Result);
 13044  0F04  0021               	movlb	1	; select bank1
 13045  0F05  0829               	movf	(_Result+1)^(0+128),w
 13046  0F06  00F7               	movwf	?_PID_Calculate+1
 13047  0F07  0828               	movf	_Result^(0+128),w
 13048  0F08  00F6               	movwf	?_PID_Calculate
 13049  0F09  0008               	return
 13050  0F0A                     __end_of_PID_Calculate:	
 13051                           
 13052                           	psect	text37
 13053  1704                     __ptext37:	
 13054 ;; *************** function ___wmul *****************
 13055 ;; Defined at:
 13056 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  multiplier      2    0[COMMON] unsigned int 
 13059 ;;  multiplicand    2    2[COMMON] unsigned int 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;  product         2    4[COMMON] unsigned int 
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  2    0[COMMON] unsigned int 
 13064 ;; Registers used:
 13065 ;;		wreg, status,2, status,0
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;Total ram usage:        6 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; This function calls:
 13078 ;;		Nothing
 13079 ;; This function is called by:
 13080 ;;		_PID_Calculate
 13081 ;;		_readAnalog
 13082 ;;		_eval_poly
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           
 13087                           ;psect for function ___wmul
 13088  1704                     ___wmul:	
 13089                           
 13090                           ;incstack = 0
 13091                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13092  1704  01F4               	clrf	___wmul@product
 13093  1705  01F5               	clrf	___wmul@product+1
 13094  1706                     l2158:	
 13095  1706  1C70               	btfss	___wmul@multiplier,0
 13096  1707  2F0C               	goto	l524
 13097  1708  0872               	movf	___wmul@multiplicand,w
 13098  1709  07F4               	addwf	___wmul@product,f
 13099  170A  0873               	movf	___wmul@multiplicand+1,w
 13100  170B  3DF5               	addwfc	___wmul@product+1,f
 13101  170C                     l524:	
 13102  170C  3001               	movlw	1
 13103  170D                     u2025:	
 13104  170D  35F2               	lslf	___wmul@multiplicand,f
 13105  170E  0DF3               	rlf	___wmul@multiplicand+1,f
 13106  170F  0B89               	decfsz	9,f
 13107  1710  2F0D               	goto	u2025
 13108  1711  3001               	movlw	1
 13109  1712                     u2035:	
 13110  1712  36F1               	lsrf	___wmul@multiplier+1,f
 13111  1713  0CF0               	rrf	___wmul@multiplier,f
 13112  1714  0B89               	decfsz	9,f
 13113  1715  2F12               	goto	u2035
 13114  1716  0870               	movf	___wmul@multiplier,w
 13115  1717  0471               	iorwf	___wmul@multiplier+1,w
 13116  1718  1D03               	btfss	3,2
 13117  1719  2F06               	goto	l2158
 13118  171A  0875               	movf	___wmul@product+1,w
 13119  171B  00F1               	movwf	?___wmul+1
 13120  171C  0874               	movf	___wmul@product,w
 13121  171D  00F0               	movwf	?___wmul
 13122  171E  0008               	return
 13123  171F                     __end_of___wmul:	
 13124  007E                     btemp	set	126	;btemp
 13125  007E                     wtemp	set	126
 13126  007E                     wtemp0	set	126
 13127  0080                     wtemp1	set	128
 13128  0082                     wtemp2	set	130
 13129  0084                     wtemp3	set	132
 13130  0086                     wtemp4	set	134
 13131  0088                     wtemp5	set	136
 13132  007F                     wtemp6	set	127
 13133  007E                     ttemp	set	126
 13134  007E                     ttemp0	set	126
 13135  0081                     ttemp1	set	129
 13136  0084                     ttemp2	set	132
 13137  0087                     ttemp3	set	135
 13138  007F                     ttemp4	set	127
 13139  007E                     ltemp	set	126
 13140  007E                     ltemp0	set	126
 13141  0082                     ltemp1	set	130
 13142  0086                     ltemp2	set	134
 13143  0080                     ltemp3	set	128


Data Sizes:
    Strings     120
    Constant    27
    Data        45
    BSS         130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     25      79
    BANK2            80     80      80
    BANK3            80      0      41
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[8]), STR_6(CODE[5]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               113   113      0   46703
                                             72 BANK0      8     8      0
                                              0 BANK1     25    25      0
                                              0 BANK2     80    80      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30593
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16009
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7263
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1870
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    5541
                                             14 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     692
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    3183
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1175
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1144
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     994
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      29      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     176      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     176      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Apr 06 11:45:29 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l30 16C4  
                             l32 16C9                               l34 16CE                               l28 16BE  
                             _Kd 00E6                               _Ki 00E8                               _Kp 00EA  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l231 0EF2                              l232 0F04                              l229 0EBF  
                            l433 0704                              l370 0438                              l435 0724  
                            l524 170C                              l376 04CE                              l288 1684  
                            l716 0FA9                              l579 0A62                              l692 0A32  
                            l693 0A3A                              l685 0A1F                              l776 0B3F  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 00C6  
                            _log 0C02                  __end_of_ADCRead 168B                     ___awmod@sign 0076  
                _TMR2_Initialize 166F                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00DD                  __end_of_LCD_Cmd 0019                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0876                     ___ftdiv@sign 003F  
                           l2120 0A0B                             l2112 09F5                             l2210 0F88  
                           l3020 03A1                             l3100 0500                             l3004 037C  
                           l2116 09FC                             l2204 0F75                             l3102 052E  
                           l2126 0A24                             l2118 0A06                             l2222 0FBB  
                           l2206 0F7F                             l2152 16CA                             l2144 16C0  
                           l3032 03EF                             l2128 0A2C                             l2216 0F9B  
                           l2208 0F84                             l2226 0FCD                             l2218 0FA5  
                           l2410 1747                             l3202 06F2                             l3210 0705  
                           l2148 16C5                             l3052 0443                             l2236 0FE8  
                           l2180 0F39                             l2252 0CDF                             l3220 0726  
                           l2158 1706                             l2334 0951                             l3070 049D  
                           l3038 0407                             l3054 0445                             l2422 082C  
                           l2246 0CC9                             l3206 06FA                             l3142 0598  
                           l2360 0988                             l2352 0977                             l2344 0959  
                           l2328 0946                             l3064 0485                             l2176 0F32  
                           l2280 0D3E                             l2264 0D1A                             l3232 074C  
                           l3216 0718                             l2346 0965                             l2186 0F48  
                           l2418 0816                             l2442 084D                             l3250 07B1  
                           l3226 072C                             l2356 0980                             l2372 0901  
                           l3092 04E9                             l3084 04D9                             l2276 0D36  
                           l2268 0D22                             l2460 09E6                             l2390 0926  
                           l2542 16EC                             l3086 04DB                             l2198 0F62  
                           l2472 178A                             l2384 090E                             l2376 0908  
                           l2720 16B5                             l3184 0698                             l2386 091A  
                           l2394 092F                             l2714 16AA                             l2810 1727  
                           l3194 06AF                             l2492 0896                             l2572 0DBF  
                           l2556 0D87                             l2820 0AEB                             l3188 069E  
                           l2910 0E65                             l2478 179B                             l2398 0937  
                           l2590 0E1B                             l2574 0DC4                             l2566 0D8E  
                           l2742 0A83                             l2734 0A73                             l3198 06B8  
                           l2584 0DE2                             l2576 0DCD                             l2568 0DBB  
                           l2760 0ACA                             l2752 0AB1                             l2744 0A91  
                           l2840 0B29                             l2930 0ED1                             l2914 0E6F  
                           l2586 0E0E                             l2578 0DDE                             l2770 0B70  
                           l2932 0ED4                             l2908 0E62                             l2756 0ABC  
                           l2852 0B50                             l2684 0C34                             l2790 0BC7  
                           l2846 0B36                             l2838 0B1B                             l2678 0C21  
                           l2776 0B86                             l2848 0B42                             l2970 0316  
                           l2956 02D2                             l2798 0BE0                             l2976 0324  
                           l2992 02FA                             l2994 0353                             ?_log 0057  
                           STR_1 1070                             STR_2 107B                             STR_3 105F  
                           STR_4 104E                             STR_5 103D                             STR_6 108E  
                           STR_7 1086                             STR_8 101B                             STR_9 102C  
                           u2025 170D                             u2035 1712                             u2205 0F89  
                           _LATA 0016                             _LATB 0017                             _LATC 0018  
                           u2145 0F63                             u2305 0CEB                             u2235 0F9C  
                           u2315 0CFB                             u2405 17B3                             u3045 0B98  
                           u3125 0AF2                             u3215 0E5A                             u3055 0BA8  
                           u2175 0F76                             u2335 0D23                             u3225 0E6B  
                           u3305 0262                             u3065 0BC8                             u2345 0D29  
                           _T2PR 028D                             u3235 0E99                             u3315 02A9  
                           u3075 0BD7                             u3155 0B1C                             u3245 0EB8  
                           u2445 095C                             u3405 050F                             u3325 02C2  
                           u3085 0BE1                             u3255 0ECA                             u2375 0D3F  
                           u3265 0EEB                             u2465 0966                             u2545 0911  
                           u3425 03DF                             u3345 02DE                             u3185 0B37  
                           u2385 0D45                             u2730 0D71                             u3275 0EFD  
                           u2715 08A1                             u2475 0970                             u3355 0310  
                           u1915 0A27                             u2820 17FE                             u2485 0978  
                           u2565 0920                             u3285 01D3                             u2575 0927  
                           u3295 0225                             u3615 06D3                             u3560 0566  
                           u3545 04F9                             u3625 06F0                             u3475 0475  
                           u1955 0A41                             u1875 0A01                             u3707 0796  
                           u3717 07AA                             u3645 0713                             u3807 08EF  
                           u2695 0882                             u3727 035E                             u1895 0A1A  
                           u3655 071F                             u3817 0024                             u2865 169A  
                           u3737 0399                             u3907 009B                             u3827 0032  
                           u2795 0DFC                             u3747 0527                             u2955 0A86  
                           u3917 17BF                             u3837 003D                             u3757 03A6  
                           u3927 17CB                             u3847 0047                             u3767 0431  
                           u2975 0A92                             u3937 0013                             u3857 0051  
                           u3777 04C7                             u2985 0AA6                             u3697 058E  
                           u3867 005F                             u3787 08D0                             u2995 0AB2  
                           u3877 006D                             u3797 08E0                             u3887 007D  
                           u3897 008C              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _desc 01B4                             _main 053A                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                             _loop 00EE                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 0D66  
                   ___ftmul@sign 002F                     ___fttol@exp1 007D                            ??_log 005A  
                   ___fttol@lval 0079                 __end_of_LCD_Init 00A0                 __end_of_LCD_Port 16D0  
 __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 163F                  __end_of___aldiv 0AD3  
                          _ADACQ 009D                            _ADCAP 009B                            _ADACT 0099  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 098D                            _ADPRE 009C  
                __end_of___ftadd 1000                    __CFG_WDTE$OFF 0000                  __end_of___awmod 093C  
                          _ADRPT 010D                  __end_of___ftdiv 0C02                  __end_of___ftmul 0D66  
                ___awdiv@divisor 0070                  __end_of___ftsub 173D                  __end_of___fttol 0B59  
                          _T2CON 028E                            _LATC2 00C2                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013           __end_of_LCD_Set_Cursor 08B5                    ___awtoft@sign 007D  
                __end_of_readKey 16B8                            _frexp 083B                            _errno 00AC  
                          _error 00AE                    ___ftpack@sign 0074                            _timer 00C2  
                          main@j 00E1                            main@x 0068                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0079  
                 _LCD_Write_Char 17A3                  __initialization 07B7                      log@exponent 005B  
                   __end_of_main 07B7                readAnalog@channel 0026          __end_of_TMR2_Initialize 167D  
                      ??_ADCRead 0073                           ??_main 00C9                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 1636                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 175D                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0A51  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893           __end_of_LCD_Write_Char 17CF                   __CFG_PWRTE$OFF 0000  
                         _Result 00A8                     _CCPTMRS1bits 021F                           ___ftge 0800  
         LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078                           ___wmul 1704  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                   _PWM_Initialize 163F                        ??___ftdiv 0036  
                      ??___ftmul 0026                           _choice 00C4                        ??___ftsub 007E  
                      ??___fttol 0074           main@currentTemperature 00D5                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                           _timer2 00C8                  ___awmod@counter 0075  
                         _totals 00A0            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 01BD  
                _ADCC_Initialize 16D0                        ??_readKey 0070                 LCD_Write_Int@str 0025  
                _InitCustomChars 177D                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078                    _pidIntegrated 00B8  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 08B5                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00AA  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023           __end_of_PWM_Initialize 164A                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 1662                     __pidataBANK3 175D  
            ??_SYSTEM_Initialize 0078                    __end_of_frexp 0876                 ?_TMR2_Initialize 0070  
    __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074        __end_of_SYSTEM_Initialize 08F7  
                     __pbssBANK1 00A0                       __pbssBANK3 01C0                       __pbssBANK4 0220  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 00DB                       _delayCount 00C5                  ?_PWM_Initialize 0070  
                     __pmaintext 053A                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 16EA                          _ADCRead 167D  
      __size_of_LCD_Write_String 001A                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 17A3                          _LCD_Cmd 0005  
                 main@holdOutput 006B                 main@lidOpenCount 006C                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM7DCH 0391  
                        _PWM7DCL 0390                          _PWM7CON 0392                          _PPSLOCK 0E8F  
                 main@dutyCycle6 00DB            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 01BD                          ___aldiv 0A51                          ___cgram 01A0  
                     _menuChoice 02FA                  __size_of___ftge 003B                          ___awdiv 093C  
                        ___ftadd 0F0A                          ___awmod 08F7                          ___ftdiv 0B59  
                __size_of___wmul 001B                          ___ftmul 0CB2                          ___ftsub 171F  
                        ___fttol 0AD3                       _errorValue 00B0                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 09ED                 ??_LCD_Set_Cursor 0075  
                        __ptext1 00A0                          __ptext2 0C02                          __ptext3 083B  
                        __ptext4 098D                          __ptext5 0CB2                          __ptext6 0800  
                        __ptext7 173D                          __ptext8 0AD3                          __ptext9 171F  
                  _PID_Calculate 0E2F            _OSCILLATOR_Initialize 1636                          _readKey 16A1  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                     _highRangeSet 01B8                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 2350                          _testKey 00C7  
                      _LCD_Clear 162E       __size_of_SYSTEM_Initialize 0042                          clrloop0 164B  
           end_of_initialization 07FD                          init_ram 1656                          initloop 1657  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F13670 0220                       main@F13664 01C5                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 0069                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                    ?_menuChoice 0070                   __end_of___ftge 083B                   __end_of___wmul 171F  
               _LCD_Write_String 16EA           ?_OSCILLATOR_Initialize 0070              start_initialization 07B7  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0CB2                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0E2F  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0065  
                       ??___wmul 0074                     _pidMaxOutput 00EC                    _tempCalc$1013 0062  
                    __pdataBANK1 00E2                      __pdataBANK3 01A0                  ??_PID_Calculate 007A  
     __end_of_PWM7_LoadDutyValue 16A1                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00BA  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2350                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00C9                    __pcstackBANK2 0120  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 013D  
            __size_of_menuChoice 0240                     _pidPrevError 00BC           _PIN_MANAGER_Initialize 17CF  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
            main@lastTemperature 006D                         ?_readKey 0070                        _eval_poly 098D  
                      _menuDelay 00B4                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0019  
                 ___wmul@product 0074                         _LCD_Port 16B8                        clear_ram0 164A  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1704                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   ??_menuChoice 002E          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 173D                         ___ftpack 09ED         __size_of_ADCC_Initialize 001A  
                       _channels 01B0                 __size_of_readKey 0017                PID_Calculate@temp 0078  
                       __ptext10 0F0A                         __ptext11 0B59                         __ptext20 0D66  
                       __ptext12 09ED                         __ptext21 08F7                         __ptext13 01BD  
                       __ptext30 162E                         __ptext22 093C                         __ptext14 0A51  
                       __ptext31 177D                         __ptext23 0876                         __ptext15 167D  
                       __ptext32 17A3                         __ptext24 08B5                         __ptext16 02FA  
                       __ptext33 0005                         __ptext25 166F                         __ptext17 16A1  
                       __ptext34 16B8                         __ptext26 163F                         __ptext18 168B  
                       __ptext35 16D0                         __ptext27 17CF                         __ptext19 16EA  
                       __ptext36 0E2F                         __ptext28 1636                         __ptext37 1704  
                       __ptext29 0019               __end_of_readAnalog 02FA          __size_of_LCD_Set_Cursor 003F  
                   _signPositive 00C0                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 053A                         _lastSign 00B2              LCD_Write_Int@F13694 01C0  
                       _pidCount 00B6                    __size_of_main 027D             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 00A0                         _setpoint 00E2                      _lowRangeSet 01BC  
    PIN_MANAGER_Initialize@state 0070                         log@coeff 1000                      ??_eval_poly 007E  
                    _sampleIndex 00BE               _PWM7_LoadDutyValue 168B               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C  
           main@pidPeriodCounter 00D3               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079  
          __end_of_PID_Calculate 0F0A             ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021  
         __size_of_LCD_Write_Int 00C9                  main@outputIndex 006F   __end_of_PIN_MANAGER_Initialize 1800  
              ??_ADCC_Initialize 0070                  main@outputTotal 00D7                ??_InitCustomChars 0075  
