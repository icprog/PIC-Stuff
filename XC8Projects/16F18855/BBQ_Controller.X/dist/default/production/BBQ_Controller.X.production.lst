

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Mar 29 14:55:25 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  001C                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0110                     	;# 
   111  0110                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011C                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011E                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0198                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  020F                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0210                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0218                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021B                     	;# 
   184  021C                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  028C                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  028F                     	;# 
   196  0290                     	;# 
   197  0290                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0296                     	;# 
   206  0296                     	;# 
   207  0297                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  030C                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  030F                     	;# 
   222  0310                     	;# 
   223  0310                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0314                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031B                     	;# 
   237  031C                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  031F                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0390                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  040C                     	;# 
   249  040D                     	;# 
   250  040E                     	;# 
   251  040F                     	;# 
   252  0410                     	;# 
   253  0411                     	;# 
   254  0416                     	;# 
   255  0416                     	;# 
   256  0417                     	;# 
   257  0418                     	;# 
   258  0418                     	;# 
   259  0419                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  048C                     	;# 
   269  048C                     	;# 
   270  048D                     	;# 
   271  048E                     	;# 
   272  048F                     	;# 
   273  048F                     	;# 
   274  0490                     	;# 
   275  0491                     	;# 
   276  0492                     	;# 
   277  0492                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0495                     	;# 
   282  0496                     	;# 
   283  0497                     	;# 
   284  0498                     	;# 
   285  0499                     	;# 
   286  049A                     	;# 
   287  049B                     	;# 
   288  049C                     	;# 
   289  049D                     	;# 
   290  050C                     	;# 
   291  050C                     	;# 
   292  050D                     	;# 
   293  050E                     	;# 
   294  050F                     	;# 
   295  050F                     	;# 
   296  0510                     	;# 
   297  0511                     	;# 
   298  0512                     	;# 
   299  0512                     	;# 
   300  0513                     	;# 
   301  0514                     	;# 
   302  0515                     	;# 
   303  0515                     	;# 
   304  0516                     	;# 
   305  0517                     	;# 
   306  0518                     	;# 
   307  0519                     	;# 
   308  051A                     	;# 
   309  051B                     	;# 
   310  051C                     	;# 
   311  051D                     	;# 
   312  058C                     	;# 
   313  058C                     	;# 
   314  058D                     	;# 
   315  058E                     	;# 
   316  058F                     	;# 
   317  058F                     	;# 
   318  0590                     	;# 
   319  0591                     	;# 
   320  0592                     	;# 
   321  0593                     	;# 
   322  060C                     	;# 
   323  060D                     	;# 
   324  060E                     	;# 
   325  060F                     	;# 
   326  0610                     	;# 
   327  0611                     	;# 
   328  0612                     	;# 
   329  0613                     	;# 
   330  0614                     	;# 
   331  0616                     	;# 
   332  0617                     	;# 
   333  0618                     	;# 
   334  0619                     	;# 
   335  061A                     	;# 
   336  061B                     	;# 
   337  061C                     	;# 
   338  061D                     	;# 
   339  061E                     	;# 
   340  068C                     	;# 
   341  068D                     	;# 
   342  068E                     	;# 
   343  068F                     	;# 
   344  0690                     	;# 
   345  0691                     	;# 
   346  0692                     	;# 
   347  0693                     	;# 
   348  0694                     	;# 
   349  070C                     	;# 
   350  070D                     	;# 
   351  070E                     	;# 
   352  070F                     	;# 
   353  0710                     	;# 
   354  0711                     	;# 
   355  0712                     	;# 
   356  0713                     	;# 
   357  0714                     	;# 
   358  0716                     	;# 
   359  0717                     	;# 
   360  0718                     	;# 
   361  0719                     	;# 
   362  071A                     	;# 
   363  071B                     	;# 
   364  071C                     	;# 
   365  071D                     	;# 
   366  071E                     	;# 
   367  0796                     	;# 
   368  0797                     	;# 
   369  0798                     	;# 
   370  0799                     	;# 
   371  079A                     	;# 
   372  079B                     	;# 
   373  080C                     	;# 
   374  080D                     	;# 
   375  080E                     	;# 
   376  080F                     	;# 
   377  0810                     	;# 
   378  0811                     	;# 
   379  0812                     	;# 
   380  0813                     	;# 
   381  0814                     	;# 
   382  081A                     	;# 
   383  081B                     	;# 
   384  081C                     	;# 
   385  081D                     	;# 
   386  081E                     	;# 
   387  081F                     	;# 
   388  088C                     	;# 
   389  088D                     	;# 
   390  088E                     	;# 
   391  088F                     	;# 
   392  0890                     	;# 
   393  0891                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0895                     	;# 
   397  0896                     	;# 
   398  0897                     	;# 
   399  0898                     	;# 
   400  0899                     	;# 
   401  089A                     	;# 
   402  089B                     	;# 
   403  090C                     	;# 
   404  090E                     	;# 
   405  090F                     	;# 
   406  091F                     	;# 
   407  091F                     	;# 
   408  098F                     	;# 
   409  098F                     	;# 
   410  0990                     	;# 
   411  0991                     	;# 
   412  0992                     	;# 
   413  0993                     	;# 
   414  0994                     	;# 
   415  0995                     	;# 
   416  0996                     	;# 
   417  0997                     	;# 
   418  0E0F                     	;# 
   419  0E10                     	;# 
   420  0E11                     	;# 
   421  0E12                     	;# 
   422  0E13                     	;# 
   423  0E14                     	;# 
   424  0E15                     	;# 
   425  0E16                     	;# 
   426  0E17                     	;# 
   427  0E18                     	;# 
   428  0E19                     	;# 
   429  0E1A                     	;# 
   430  0E1B                     	;# 
   431  0E1C                     	;# 
   432  0E1D                     	;# 
   433  0E1E                     	;# 
   434  0E1F                     	;# 
   435  0E20                     	;# 
   436  0E21                     	;# 
   437  0E22                     	;# 
   438  0E23                     	;# 
   439  0E24                     	;# 
   440  0E25                     	;# 
   441  0E26                     	;# 
   442  0E27                     	;# 
   443  0E28                     	;# 
   444  0E29                     	;# 
   445  0E2A                     	;# 
   446  0E2B                     	;# 
   447  0E2C                     	;# 
   448  0E2D                     	;# 
   449  0E2E                     	;# 
   450  0E2F                     	;# 
   451  0E30                     	;# 
   452  0E31                     	;# 
   453  0E32                     	;# 
   454  0E33                     	;# 
   455  0E34                     	;# 
   456  0E35                     	;# 
   457  0E36                     	;# 
   458  0E37                     	;# 
   459  0E8F                     	;# 
   460  0E90                     	;# 
   461  0E91                     	;# 
   462  0E92                     	;# 
   463  0E93                     	;# 
   464  0E94                     	;# 
   465  0E95                     	;# 
   466  0E96                     	;# 
   467  0E97                     	;# 
   468  0E9C                     	;# 
   469  0E9D                     	;# 
   470  0E9E                     	;# 
   471  0EA1                     	;# 
   472  0EA2                     	;# 
   473  0EA3                     	;# 
   474  0EA4                     	;# 
   475  0EA5                     	;# 
   476  0EA9                     	;# 
   477  0EAA                     	;# 
   478  0EAB                     	;# 
   479  0EAC                     	;# 
   480  0EB1                     	;# 
   481  0EB2                     	;# 
   482  0EB3                     	;# 
   483  0EB8                     	;# 
   484  0EB9                     	;# 
   485  0EBA                     	;# 
   486  0EBB                     	;# 
   487  0EBC                     	;# 
   488  0EBD                     	;# 
   489  0EBE                     	;# 
   490  0EC3                     	;# 
   491  0EC5                     	;# 
   492  0EC6                     	;# 
   493  0EC7                     	;# 
   494  0EC8                     	;# 
   495  0EC9                     	;# 
   496  0ECA                     	;# 
   497  0ECB                     	;# 
   498  0ECC                     	;# 
   499  0F10                     	;# 
   500  0F11                     	;# 
   501  0F12                     	;# 
   502  0F13                     	;# 
   503  0F14                     	;# 
   504  0F15                     	;# 
   505  0F16                     	;# 
   506  0F17                     	;# 
   507  0F18                     	;# 
   508  0F19                     	;# 
   509  0F1A                     	;# 
   510  0F1B                     	;# 
   511  0F1C                     	;# 
   512  0F1D                     	;# 
   513  0F1E                     	;# 
   514  0F1F                     	;# 
   515  0F20                     	;# 
   516  0F21                     	;# 
   517  0F22                     	;# 
   518  0F23                     	;# 
   519  0F24                     	;# 
   520  0F25                     	;# 
   521  0F26                     	;# 
   522  0F27                     	;# 
   523  0F38                     	;# 
   524  0F39                     	;# 
   525  0F3A                     	;# 
   526  0F3B                     	;# 
   527  0F3C                     	;# 
   528  0F3D                     	;# 
   529  0F3E                     	;# 
   530  0F3F                     	;# 
   531  0F40                     	;# 
   532  0F41                     	;# 
   533  0F43                     	;# 
   534  0F44                     	;# 
   535  0F45                     	;# 
   536  0F46                     	;# 
   537  0F47                     	;# 
   538  0F48                     	;# 
   539  0F49                     	;# 
   540  0F4A                     	;# 
   541  0F4B                     	;# 
   542  0F4C                     	;# 
   543  0F4E                     	;# 
   544  0F4F                     	;# 
   545  0F50                     	;# 
   546  0F51                     	;# 
   547  0F52                     	;# 
   548  0F53                     	;# 
   549  0F54                     	;# 
   550  0F55                     	;# 
   551  0F56                     	;# 
   552  0F57                     	;# 
   553  0F65                     	;# 
   554  0F68                     	;# 
   555  0F69                     	;# 
   556  0F6A                     	;# 
   557  0F6B                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  0010                     	;# 
   585  0011                     	;# 
   586  0012                     	;# 
   587  0013                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  001C                     	;# 
   592  001C                     	;# 
   593  001D                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010E                     	;# 
   622  010F                     	;# 
   623  0110                     	;# 
   624  0110                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0112                     	;# 
   628  0113                     	;# 
   629  0114                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011C                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011D                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011E                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  018E                     	;# 
   663  018F                     	;# 
   664  0190                     	;# 
   665  0191                     	;# 
   666  0192                     	;# 
   667  0196                     	;# 
   668  0197                     	;# 
   669  0198                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  020C                     	;# 
   675  020D                     	;# 
   676  020E                     	;# 
   677  020F                     	;# 
   678  020F                     	;# 
   679  0210                     	;# 
   680  0210                     	;# 
   681  0211                     	;# 
   682  0211                     	;# 
   683  0212                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0216                     	;# 
   690  0217                     	;# 
   691  0217                     	;# 
   692  0218                     	;# 
   693  0219                     	;# 
   694  021A                     	;# 
   695  021B                     	;# 
   696  021B                     	;# 
   697  021C                     	;# 
   698  021C                     	;# 
   699  021D                     	;# 
   700  021D                     	;# 
   701  021E                     	;# 
   702  021F                     	;# 
   703  028C                     	;# 
   704  028C                     	;# 
   705  028D                     	;# 
   706  028D                     	;# 
   707  028E                     	;# 
   708  028F                     	;# 
   709  0290                     	;# 
   710  0290                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0293                     	;# 
   716  0294                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0296                     	;# 
   720  0297                     	;# 
   721  0298                     	;# 
   722  0298                     	;# 
   723  0299                     	;# 
   724  0299                     	;# 
   725  029A                     	;# 
   726  029B                     	;# 
   727  029C                     	;# 
   728  029C                     	;# 
   729  029D                     	;# 
   730  030C                     	;# 
   731  030C                     	;# 
   732  030D                     	;# 
   733  030E                     	;# 
   734  030F                     	;# 
   735  0310                     	;# 
   736  0310                     	;# 
   737  0311                     	;# 
   738  0312                     	;# 
   739  0313                     	;# 
   740  0314                     	;# 
   741  0314                     	;# 
   742  0315                     	;# 
   743  0316                     	;# 
   744  0317                     	;# 
   745  0318                     	;# 
   746  0318                     	;# 
   747  0319                     	;# 
   748  031A                     	;# 
   749  031B                     	;# 
   750  031C                     	;# 
   751  031C                     	;# 
   752  031D                     	;# 
   753  031E                     	;# 
   754  031F                     	;# 
   755  038C                     	;# 
   756  038D                     	;# 
   757  038E                     	;# 
   758  0390                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  040C                     	;# 
   762  040D                     	;# 
   763  040E                     	;# 
   764  040F                     	;# 
   765  0410                     	;# 
   766  0411                     	;# 
   767  0416                     	;# 
   768  0416                     	;# 
   769  0417                     	;# 
   770  0418                     	;# 
   771  0418                     	;# 
   772  0419                     	;# 
   773  041A                     	;# 
   774  041A                     	;# 
   775  041B                     	;# 
   776  041C                     	;# 
   777  041C                     	;# 
   778  041D                     	;# 
   779  041E                     	;# 
   780  041F                     	;# 
   781  048C                     	;# 
   782  048C                     	;# 
   783  048D                     	;# 
   784  048E                     	;# 
   785  048F                     	;# 
   786  048F                     	;# 
   787  0490                     	;# 
   788  0491                     	;# 
   789  0492                     	;# 
   790  0492                     	;# 
   791  0493                     	;# 
   792  0494                     	;# 
   793  0495                     	;# 
   794  0495                     	;# 
   795  0496                     	;# 
   796  0497                     	;# 
   797  0498                     	;# 
   798  0499                     	;# 
   799  049A                     	;# 
   800  049B                     	;# 
   801  049C                     	;# 
   802  049D                     	;# 
   803  050C                     	;# 
   804  050C                     	;# 
   805  050D                     	;# 
   806  050E                     	;# 
   807  050F                     	;# 
   808  050F                     	;# 
   809  0510                     	;# 
   810  0511                     	;# 
   811  0512                     	;# 
   812  0512                     	;# 
   813  0513                     	;# 
   814  0514                     	;# 
   815  0515                     	;# 
   816  0515                     	;# 
   817  0516                     	;# 
   818  0517                     	;# 
   819  0518                     	;# 
   820  0519                     	;# 
   821  051A                     	;# 
   822  051B                     	;# 
   823  051C                     	;# 
   824  051D                     	;# 
   825  058C                     	;# 
   826  058C                     	;# 
   827  058D                     	;# 
   828  058E                     	;# 
   829  058F                     	;# 
   830  058F                     	;# 
   831  0590                     	;# 
   832  0591                     	;# 
   833  0592                     	;# 
   834  0593                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0618                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061D                     	;# 
   852  061E                     	;# 
   853  068C                     	;# 
   854  068D                     	;# 
   855  068E                     	;# 
   856  068F                     	;# 
   857  0690                     	;# 
   858  0691                     	;# 
   859  0692                     	;# 
   860  0693                     	;# 
   861  0694                     	;# 
   862  070C                     	;# 
   863  070D                     	;# 
   864  070E                     	;# 
   865  070F                     	;# 
   866  0710                     	;# 
   867  0711                     	;# 
   868  0712                     	;# 
   869  0713                     	;# 
   870  0714                     	;# 
   871  0716                     	;# 
   872  0717                     	;# 
   873  0718                     	;# 
   874  0719                     	;# 
   875  071A                     	;# 
   876  071B                     	;# 
   877  071C                     	;# 
   878  071D                     	;# 
   879  071E                     	;# 
   880  0796                     	;# 
   881  0797                     	;# 
   882  0798                     	;# 
   883  0799                     	;# 
   884  079A                     	;# 
   885  079B                     	;# 
   886  080C                     	;# 
   887  080D                     	;# 
   888  080E                     	;# 
   889  080F                     	;# 
   890  0810                     	;# 
   891  0811                     	;# 
   892  0812                     	;# 
   893  0813                     	;# 
   894  0814                     	;# 
   895  081A                     	;# 
   896  081B                     	;# 
   897  081C                     	;# 
   898  081D                     	;# 
   899  081E                     	;# 
   900  081F                     	;# 
   901  088C                     	;# 
   902  088D                     	;# 
   903  088E                     	;# 
   904  088F                     	;# 
   905  0890                     	;# 
   906  0891                     	;# 
   907  0892                     	;# 
   908  0893                     	;# 
   909  0895                     	;# 
   910  0896                     	;# 
   911  0897                     	;# 
   912  0898                     	;# 
   913  0899                     	;# 
   914  089A                     	;# 
   915  089B                     	;# 
   916  090C                     	;# 
   917  090E                     	;# 
   918  090F                     	;# 
   919  091F                     	;# 
   920  091F                     	;# 
   921  098F                     	;# 
   922  098F                     	;# 
   923  0990                     	;# 
   924  0991                     	;# 
   925  0992                     	;# 
   926  0993                     	;# 
   927  0994                     	;# 
   928  0995                     	;# 
   929  0996                     	;# 
   930  0997                     	;# 
   931  0E0F                     	;# 
   932  0E10                     	;# 
   933  0E11                     	;# 
   934  0E12                     	;# 
   935  0E13                     	;# 
   936  0E14                     	;# 
   937  0E15                     	;# 
   938  0E16                     	;# 
   939  0E17                     	;# 
   940  0E18                     	;# 
   941  0E19                     	;# 
   942  0E1A                     	;# 
   943  0E1B                     	;# 
   944  0E1C                     	;# 
   945  0E1D                     	;# 
   946  0E1E                     	;# 
   947  0E1F                     	;# 
   948  0E20                     	;# 
   949  0E21                     	;# 
   950  0E22                     	;# 
   951  0E23                     	;# 
   952  0E24                     	;# 
   953  0E25                     	;# 
   954  0E26                     	;# 
   955  0E27                     	;# 
   956  0E28                     	;# 
   957  0E29                     	;# 
   958  0E2A                     	;# 
   959  0E2B                     	;# 
   960  0E2C                     	;# 
   961  0E2D                     	;# 
   962  0E2E                     	;# 
   963  0E2F                     	;# 
   964  0E30                     	;# 
   965  0E31                     	;# 
   966  0E32                     	;# 
   967  0E33                     	;# 
   968  0E34                     	;# 
   969  0E35                     	;# 
   970  0E36                     	;# 
   971  0E37                     	;# 
   972  0E8F                     	;# 
   973  0E90                     	;# 
   974  0E91                     	;# 
   975  0E92                     	;# 
   976  0E93                     	;# 
   977  0E94                     	;# 
   978  0E95                     	;# 
   979  0E96                     	;# 
   980  0E97                     	;# 
   981  0E9C                     	;# 
   982  0E9D                     	;# 
   983  0E9E                     	;# 
   984  0EA1                     	;# 
   985  0EA2                     	;# 
   986  0EA3                     	;# 
   987  0EA4                     	;# 
   988  0EA5                     	;# 
   989  0EA9                     	;# 
   990  0EAA                     	;# 
   991  0EAB                     	;# 
   992  0EAC                     	;# 
   993  0EB1                     	;# 
   994  0EB2                     	;# 
   995  0EB3                     	;# 
   996  0EB8                     	;# 
   997  0EB9                     	;# 
   998  0EBA                     	;# 
   999  0EBB                     	;# 
  1000  0EBC                     	;# 
  1001  0EBD                     	;# 
  1002  0EBE                     	;# 
  1003  0EC3                     	;# 
  1004  0EC5                     	;# 
  1005  0EC6                     	;# 
  1006  0EC7                     	;# 
  1007  0EC8                     	;# 
  1008  0EC9                     	;# 
  1009  0ECA                     	;# 
  1010  0ECB                     	;# 
  1011  0ECC                     	;# 
  1012  0F10                     	;# 
  1013  0F11                     	;# 
  1014  0F12                     	;# 
  1015  0F13                     	;# 
  1016  0F14                     	;# 
  1017  0F15                     	;# 
  1018  0F16                     	;# 
  1019  0F17                     	;# 
  1020  0F18                     	;# 
  1021  0F19                     	;# 
  1022  0F1A                     	;# 
  1023  0F1B                     	;# 
  1024  0F1C                     	;# 
  1025  0F1D                     	;# 
  1026  0F1E                     	;# 
  1027  0F1F                     	;# 
  1028  0F20                     	;# 
  1029  0F21                     	;# 
  1030  0F22                     	;# 
  1031  0F23                     	;# 
  1032  0F24                     	;# 
  1033  0F25                     	;# 
  1034  0F26                     	;# 
  1035  0F27                     	;# 
  1036  0F38                     	;# 
  1037  0F39                     	;# 
  1038  0F3A                     	;# 
  1039  0F3B                     	;# 
  1040  0F3C                     	;# 
  1041  0F3D                     	;# 
  1042  0F3E                     	;# 
  1043  0F3F                     	;# 
  1044  0F40                     	;# 
  1045  0F41                     	;# 
  1046  0F43                     	;# 
  1047  0F44                     	;# 
  1048  0F45                     	;# 
  1049  0F46                     	;# 
  1050  0F47                     	;# 
  1051  0F48                     	;# 
  1052  0F49                     	;# 
  1053  0F4A                     	;# 
  1054  0F4B                     	;# 
  1055  0F4C                     	;# 
  1056  0F4E                     	;# 
  1057  0F4F                     	;# 
  1058  0F50                     	;# 
  1059  0F51                     	;# 
  1060  0F52                     	;# 
  1061  0F53                     	;# 
  1062  0F54                     	;# 
  1063  0F55                     	;# 
  1064  0F56                     	;# 
  1065  0F57                     	;# 
  1066  0F65                     	;# 
  1067  0F68                     	;# 
  1068  0F69                     	;# 
  1069  0F6A                     	;# 
  1070  0F6B                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000D                     	;# 
  1096  000E                     	;# 
  1097  0010                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0013                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  001C                     	;# 
  1105  001C                     	;# 
  1106  001D                     	;# 
  1107  001D                     	;# 
  1108  001E                     	;# 
  1109  001F                     	;# 
  1110  008C                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  008E                     	;# 
  1115  008F                     	;# 
  1116  0090                     	;# 
  1117  0090                     	;# 
  1118  0091                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  010E                     	;# 
  1134  010E                     	;# 
  1135  010F                     	;# 
  1136  0110                     	;# 
  1137  0110                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0112                     	;# 
  1141  0113                     	;# 
  1142  0114                     	;# 
  1143  0114                     	;# 
  1144  0115                     	;# 
  1145  0116                     	;# 
  1146  0116                     	;# 
  1147  0117                     	;# 
  1148  0119                     	;# 
  1149  0119                     	;# 
  1150  0119                     	;# 
  1151  011A                     	;# 
  1152  011A                     	;# 
  1153  011A                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011C                     	;# 
  1160  011C                     	;# 
  1161  011C                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  011D                     	;# 
  1165  011E                     	;# 
  1166  011E                     	;# 
  1167  011E                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175  018E                     	;# 
  1176  018F                     	;# 
  1177  0190                     	;# 
  1178  0191                     	;# 
  1179  0192                     	;# 
  1180  0196                     	;# 
  1181  0197                     	;# 
  1182  0198                     	;# 
  1183  0199                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019C                     	;# 
  1187  020C                     	;# 
  1188  020D                     	;# 
  1189  020E                     	;# 
  1190  020F                     	;# 
  1191  020F                     	;# 
  1192  0210                     	;# 
  1193  0210                     	;# 
  1194  0211                     	;# 
  1195  0211                     	;# 
  1196  0212                     	;# 
  1197  0213                     	;# 
  1198  0214                     	;# 
  1199  0215                     	;# 
  1200  0215                     	;# 
  1201  0216                     	;# 
  1202  0216                     	;# 
  1203  0217                     	;# 
  1204  0217                     	;# 
  1205  0218                     	;# 
  1206  0219                     	;# 
  1207  021A                     	;# 
  1208  021B                     	;# 
  1209  021B                     	;# 
  1210  021C                     	;# 
  1211  021C                     	;# 
  1212  021D                     	;# 
  1213  021D                     	;# 
  1214  021E                     	;# 
  1215  021F                     	;# 
  1216  028C                     	;# 
  1217  028C                     	;# 
  1218  028D                     	;# 
  1219  028D                     	;# 
  1220  028E                     	;# 
  1221  028F                     	;# 
  1222  0290                     	;# 
  1223  0290                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0293                     	;# 
  1229  0294                     	;# 
  1230  0295                     	;# 
  1231  0296                     	;# 
  1232  0296                     	;# 
  1233  0297                     	;# 
  1234  0298                     	;# 
  1235  0298                     	;# 
  1236  0299                     	;# 
  1237  0299                     	;# 
  1238  029A                     	;# 
  1239  029B                     	;# 
  1240  029C                     	;# 
  1241  029C                     	;# 
  1242  029D                     	;# 
  1243  030C                     	;# 
  1244  030C                     	;# 
  1245  030D                     	;# 
  1246  030E                     	;# 
  1247  030F                     	;# 
  1248  0310                     	;# 
  1249  0310                     	;# 
  1250  0311                     	;# 
  1251  0312                     	;# 
  1252  0313                     	;# 
  1253  0314                     	;# 
  1254  0314                     	;# 
  1255  0315                     	;# 
  1256  0316                     	;# 
  1257  0317                     	;# 
  1258  0318                     	;# 
  1259  0318                     	;# 
  1260  0319                     	;# 
  1261  031A                     	;# 
  1262  031B                     	;# 
  1263  031C                     	;# 
  1264  031C                     	;# 
  1265  031D                     	;# 
  1266  031E                     	;# 
  1267  031F                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  040C                     	;# 
  1275  040D                     	;# 
  1276  040E                     	;# 
  1277  040F                     	;# 
  1278  0410                     	;# 
  1279  0411                     	;# 
  1280  0416                     	;# 
  1281  0416                     	;# 
  1282  0417                     	;# 
  1283  0418                     	;# 
  1284  0418                     	;# 
  1285  0419                     	;# 
  1286  041A                     	;# 
  1287  041A                     	;# 
  1288  041B                     	;# 
  1289  041C                     	;# 
  1290  041C                     	;# 
  1291  041D                     	;# 
  1292  041E                     	;# 
  1293  041F                     	;# 
  1294  048C                     	;# 
  1295  048C                     	;# 
  1296  048D                     	;# 
  1297  048E                     	;# 
  1298  048F                     	;# 
  1299  048F                     	;# 
  1300  0490                     	;# 
  1301  0491                     	;# 
  1302  0492                     	;# 
  1303  0492                     	;# 
  1304  0493                     	;# 
  1305  0494                     	;# 
  1306  0495                     	;# 
  1307  0495                     	;# 
  1308  0496                     	;# 
  1309  0497                     	;# 
  1310  0498                     	;# 
  1311  0499                     	;# 
  1312  049A                     	;# 
  1313  049B                     	;# 
  1314  049C                     	;# 
  1315  049D                     	;# 
  1316  050C                     	;# 
  1317  050C                     	;# 
  1318  050D                     	;# 
  1319  050E                     	;# 
  1320  050F                     	;# 
  1321  050F                     	;# 
  1322  0510                     	;# 
  1323  0511                     	;# 
  1324  0512                     	;# 
  1325  0512                     	;# 
  1326  0513                     	;# 
  1327  0514                     	;# 
  1328  0515                     	;# 
  1329  0515                     	;# 
  1330  0516                     	;# 
  1331  0517                     	;# 
  1332  0518                     	;# 
  1333  0519                     	;# 
  1334  051A                     	;# 
  1335  051B                     	;# 
  1336  051C                     	;# 
  1337  051D                     	;# 
  1338  058C                     	;# 
  1339  058C                     	;# 
  1340  058D                     	;# 
  1341  058E                     	;# 
  1342  058F                     	;# 
  1343  058F                     	;# 
  1344  0590                     	;# 
  1345  0591                     	;# 
  1346  0592                     	;# 
  1347  0593                     	;# 
  1348  060C                     	;# 
  1349  060D                     	;# 
  1350  060E                     	;# 
  1351  060F                     	;# 
  1352  0610                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0614                     	;# 
  1357  0616                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061D                     	;# 
  1365  061E                     	;# 
  1366  068C                     	;# 
  1367  068D                     	;# 
  1368  068E                     	;# 
  1369  068F                     	;# 
  1370  0690                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  070C                     	;# 
  1376  070D                     	;# 
  1377  070E                     	;# 
  1378  070F                     	;# 
  1379  0710                     	;# 
  1380  0711                     	;# 
  1381  0712                     	;# 
  1382  0713                     	;# 
  1383  0714                     	;# 
  1384  0716                     	;# 
  1385  0717                     	;# 
  1386  0718                     	;# 
  1387  0719                     	;# 
  1388  071A                     	;# 
  1389  071B                     	;# 
  1390  071C                     	;# 
  1391  071D                     	;# 
  1392  071E                     	;# 
  1393  0796                     	;# 
  1394  0797                     	;# 
  1395  0798                     	;# 
  1396  0799                     	;# 
  1397  079A                     	;# 
  1398  079B                     	;# 
  1399  080C                     	;# 
  1400  080D                     	;# 
  1401  080E                     	;# 
  1402  080F                     	;# 
  1403  0810                     	;# 
  1404  0811                     	;# 
  1405  0812                     	;# 
  1406  0813                     	;# 
  1407  0814                     	;# 
  1408  081A                     	;# 
  1409  081B                     	;# 
  1410  081C                     	;# 
  1411  081D                     	;# 
  1412  081E                     	;# 
  1413  081F                     	;# 
  1414  088C                     	;# 
  1415  088D                     	;# 
  1416  088E                     	;# 
  1417  088F                     	;# 
  1418  0890                     	;# 
  1419  0891                     	;# 
  1420  0892                     	;# 
  1421  0893                     	;# 
  1422  0895                     	;# 
  1423  0896                     	;# 
  1424  0897                     	;# 
  1425  0898                     	;# 
  1426  0899                     	;# 
  1427  089A                     	;# 
  1428  089B                     	;# 
  1429  090C                     	;# 
  1430  090E                     	;# 
  1431  090F                     	;# 
  1432  091F                     	;# 
  1433  091F                     	;# 
  1434  098F                     	;# 
  1435  098F                     	;# 
  1436  0990                     	;# 
  1437  0991                     	;# 
  1438  0992                     	;# 
  1439  0993                     	;# 
  1440  0994                     	;# 
  1441  0995                     	;# 
  1442  0996                     	;# 
  1443  0997                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E23                     	;# 
  1465  0E24                     	;# 
  1466  0E25                     	;# 
  1467  0E26                     	;# 
  1468  0E27                     	;# 
  1469  0E28                     	;# 
  1470  0E29                     	;# 
  1471  0E2A                     	;# 
  1472  0E2B                     	;# 
  1473  0E2C                     	;# 
  1474  0E2D                     	;# 
  1475  0E2E                     	;# 
  1476  0E2F                     	;# 
  1477  0E30                     	;# 
  1478  0E31                     	;# 
  1479  0E32                     	;# 
  1480  0E33                     	;# 
  1481  0E34                     	;# 
  1482  0E35                     	;# 
  1483  0E36                     	;# 
  1484  0E37                     	;# 
  1485  0E8F                     	;# 
  1486  0E90                     	;# 
  1487  0E91                     	;# 
  1488  0E92                     	;# 
  1489  0E93                     	;# 
  1490  0E94                     	;# 
  1491  0E95                     	;# 
  1492  0E96                     	;# 
  1493  0E97                     	;# 
  1494  0E9C                     	;# 
  1495  0E9D                     	;# 
  1496  0E9E                     	;# 
  1497  0EA1                     	;# 
  1498  0EA2                     	;# 
  1499  0EA3                     	;# 
  1500  0EA4                     	;# 
  1501  0EA5                     	;# 
  1502  0EA9                     	;# 
  1503  0EAA                     	;# 
  1504  0EAB                     	;# 
  1505  0EAC                     	;# 
  1506  0EB1                     	;# 
  1507  0EB2                     	;# 
  1508  0EB3                     	;# 
  1509  0EB8                     	;# 
  1510  0EB9                     	;# 
  1511  0EBA                     	;# 
  1512  0EBB                     	;# 
  1513  0EBC                     	;# 
  1514  0EBD                     	;# 
  1515  0EBE                     	;# 
  1516  0EC3                     	;# 
  1517  0EC5                     	;# 
  1518  0EC6                     	;# 
  1519  0EC7                     	;# 
  1520  0EC8                     	;# 
  1521  0EC9                     	;# 
  1522  0ECA                     	;# 
  1523  0ECB                     	;# 
  1524  0ECC                     	;# 
  1525  0F10                     	;# 
  1526  0F11                     	;# 
  1527  0F12                     	;# 
  1528  0F13                     	;# 
  1529  0F14                     	;# 
  1530  0F15                     	;# 
  1531  0F16                     	;# 
  1532  0F17                     	;# 
  1533  0F18                     	;# 
  1534  0F19                     	;# 
  1535  0F1A                     	;# 
  1536  0F1B                     	;# 
  1537  0F1C                     	;# 
  1538  0F1D                     	;# 
  1539  0F1E                     	;# 
  1540  0F1F                     	;# 
  1541  0F20                     	;# 
  1542  0F21                     	;# 
  1543  0F22                     	;# 
  1544  0F23                     	;# 
  1545  0F24                     	;# 
  1546  0F25                     	;# 
  1547  0F26                     	;# 
  1548  0F27                     	;# 
  1549  0F38                     	;# 
  1550  0F39                     	;# 
  1551  0F3A                     	;# 
  1552  0F3B                     	;# 
  1553  0F3C                     	;# 
  1554  0F3D                     	;# 
  1555  0F3E                     	;# 
  1556  0F3F                     	;# 
  1557  0F40                     	;# 
  1558  0F41                     	;# 
  1559  0F43                     	;# 
  1560  0F44                     	;# 
  1561  0F45                     	;# 
  1562  0F46                     	;# 
  1563  0F47                     	;# 
  1564  0F48                     	;# 
  1565  0F49                     	;# 
  1566  0F4A                     	;# 
  1567  0F4B                     	;# 
  1568  0F4C                     	;# 
  1569  0F4E                     	;# 
  1570  0F4F                     	;# 
  1571  0F50                     	;# 
  1572  0F51                     	;# 
  1573  0F52                     	;# 
  1574  0F53                     	;# 
  1575  0F54                     	;# 
  1576  0F55                     	;# 
  1577  0F56                     	;# 
  1578  0F57                     	;# 
  1579  0F65                     	;# 
  1580  0F68                     	;# 
  1581  0F69                     	;# 
  1582  0F6A                     	;# 
  1583  0F6B                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595  0000                     	;# 
  1596  0001                     	;# 
  1597  0002                     	;# 
  1598  0003                     	;# 
  1599  0004                     	;# 
  1600  0005                     	;# 
  1601  0006                     	;# 
  1602  0007                     	;# 
  1603  0008                     	;# 
  1604  0009                     	;# 
  1605  000A                     	;# 
  1606  000B                     	;# 
  1607  000C                     	;# 
  1608  000D                     	;# 
  1609  000E                     	;# 
  1610  0010                     	;# 
  1611  0011                     	;# 
  1612  0012                     	;# 
  1613  0013                     	;# 
  1614  0016                     	;# 
  1615  0017                     	;# 
  1616  0018                     	;# 
  1617  001C                     	;# 
  1618  001C                     	;# 
  1619  001D                     	;# 
  1620  001D                     	;# 
  1621  001E                     	;# 
  1622  001F                     	;# 
  1623  008C                     	;# 
  1624  008C                     	;# 
  1625  008D                     	;# 
  1626  008E                     	;# 
  1627  008E                     	;# 
  1628  008F                     	;# 
  1629  0090                     	;# 
  1630  0090                     	;# 
  1631  0091                     	;# 
  1632  0093                     	;# 
  1633  0094                     	;# 
  1634  0095                     	;# 
  1635  0096                     	;# 
  1636  0097                     	;# 
  1637  0098                     	;# 
  1638  0099                     	;# 
  1639  009A                     	;# 
  1640  009B                     	;# 
  1641  009C                     	;# 
  1642  009D                     	;# 
  1643  009E                     	;# 
  1644  010C                     	;# 
  1645  010D                     	;# 
  1646  010E                     	;# 
  1647  010E                     	;# 
  1648  010F                     	;# 
  1649  0110                     	;# 
  1650  0110                     	;# 
  1651  0111                     	;# 
  1652  0112                     	;# 
  1653  0112                     	;# 
  1654  0113                     	;# 
  1655  0114                     	;# 
  1656  0114                     	;# 
  1657  0115                     	;# 
  1658  0116                     	;# 
  1659  0116                     	;# 
  1660  0117                     	;# 
  1661  0119                     	;# 
  1662  0119                     	;# 
  1663  0119                     	;# 
  1664  011A                     	;# 
  1665  011A                     	;# 
  1666  011A                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011C                     	;# 
  1673  011C                     	;# 
  1674  011C                     	;# 
  1675  011D                     	;# 
  1676  011D                     	;# 
  1677  011D                     	;# 
  1678  011E                     	;# 
  1679  011E                     	;# 
  1680  011E                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  018C                     	;# 
  1687  018D                     	;# 
  1688  018E                     	;# 
  1689  018F                     	;# 
  1690  0190                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0196                     	;# 
  1694  0197                     	;# 
  1695  0198                     	;# 
  1696  0199                     	;# 
  1697  019A                     	;# 
  1698  019B                     	;# 
  1699  019C                     	;# 
  1700  020C                     	;# 
  1701  020D                     	;# 
  1702  020E                     	;# 
  1703  020F                     	;# 
  1704  020F                     	;# 
  1705  0210                     	;# 
  1706  0210                     	;# 
  1707  0211                     	;# 
  1708  0211                     	;# 
  1709  0212                     	;# 
  1710  0213                     	;# 
  1711  0214                     	;# 
  1712  0215                     	;# 
  1713  0215                     	;# 
  1714  0216                     	;# 
  1715  0216                     	;# 
  1716  0217                     	;# 
  1717  0217                     	;# 
  1718  0218                     	;# 
  1719  0219                     	;# 
  1720  021A                     	;# 
  1721  021B                     	;# 
  1722  021B                     	;# 
  1723  021C                     	;# 
  1724  021C                     	;# 
  1725  021D                     	;# 
  1726  021D                     	;# 
  1727  021E                     	;# 
  1728  021F                     	;# 
  1729  028C                     	;# 
  1730  028C                     	;# 
  1731  028D                     	;# 
  1732  028D                     	;# 
  1733  028E                     	;# 
  1734  028F                     	;# 
  1735  0290                     	;# 
  1736  0290                     	;# 
  1737  0291                     	;# 
  1738  0292                     	;# 
  1739  0292                     	;# 
  1740  0293                     	;# 
  1741  0293                     	;# 
  1742  0294                     	;# 
  1743  0295                     	;# 
  1744  0296                     	;# 
  1745  0296                     	;# 
  1746  0297                     	;# 
  1747  0298                     	;# 
  1748  0298                     	;# 
  1749  0299                     	;# 
  1750  0299                     	;# 
  1751  029A                     	;# 
  1752  029B                     	;# 
  1753  029C                     	;# 
  1754  029C                     	;# 
  1755  029D                     	;# 
  1756  030C                     	;# 
  1757  030C                     	;# 
  1758  030D                     	;# 
  1759  030E                     	;# 
  1760  030F                     	;# 
  1761  0310                     	;# 
  1762  0310                     	;# 
  1763  0311                     	;# 
  1764  0312                     	;# 
  1765  0313                     	;# 
  1766  0314                     	;# 
  1767  0314                     	;# 
  1768  0315                     	;# 
  1769  0316                     	;# 
  1770  0317                     	;# 
  1771  0318                     	;# 
  1772  0318                     	;# 
  1773  0319                     	;# 
  1774  031A                     	;# 
  1775  031B                     	;# 
  1776  031C                     	;# 
  1777  031C                     	;# 
  1778  031D                     	;# 
  1779  031E                     	;# 
  1780  031F                     	;# 
  1781  038C                     	;# 
  1782  038D                     	;# 
  1783  038E                     	;# 
  1784  0390                     	;# 
  1785  0391                     	;# 
  1786  0392                     	;# 
  1787  040C                     	;# 
  1788  040D                     	;# 
  1789  040E                     	;# 
  1790  040F                     	;# 
  1791  0410                     	;# 
  1792  0411                     	;# 
  1793  0416                     	;# 
  1794  0416                     	;# 
  1795  0417                     	;# 
  1796  0418                     	;# 
  1797  0418                     	;# 
  1798  0419                     	;# 
  1799  041A                     	;# 
  1800  041A                     	;# 
  1801  041B                     	;# 
  1802  041C                     	;# 
  1803  041C                     	;# 
  1804  041D                     	;# 
  1805  041E                     	;# 
  1806  041F                     	;# 
  1807  048C                     	;# 
  1808  048C                     	;# 
  1809  048D                     	;# 
  1810  048E                     	;# 
  1811  048F                     	;# 
  1812  048F                     	;# 
  1813  0490                     	;# 
  1814  0491                     	;# 
  1815  0492                     	;# 
  1816  0492                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0495                     	;# 
  1820  0495                     	;# 
  1821  0496                     	;# 
  1822  0497                     	;# 
  1823  0498                     	;# 
  1824  0499                     	;# 
  1825  049A                     	;# 
  1826  049B                     	;# 
  1827  049C                     	;# 
  1828  049D                     	;# 
  1829  050C                     	;# 
  1830  050C                     	;# 
  1831  050D                     	;# 
  1832  050E                     	;# 
  1833  050F                     	;# 
  1834  050F                     	;# 
  1835  0510                     	;# 
  1836  0511                     	;# 
  1837  0512                     	;# 
  1838  0512                     	;# 
  1839  0513                     	;# 
  1840  0514                     	;# 
  1841  0515                     	;# 
  1842  0515                     	;# 
  1843  0516                     	;# 
  1844  0517                     	;# 
  1845  0518                     	;# 
  1846  0519                     	;# 
  1847  051A                     	;# 
  1848  051B                     	;# 
  1849  051C                     	;# 
  1850  051D                     	;# 
  1851  058C                     	;# 
  1852  058C                     	;# 
  1853  058D                     	;# 
  1854  058E                     	;# 
  1855  058F                     	;# 
  1856  058F                     	;# 
  1857  0590                     	;# 
  1858  0591                     	;# 
  1859  0592                     	;# 
  1860  0593                     	;# 
  1861  060C                     	;# 
  1862  060D                     	;# 
  1863  060E                     	;# 
  1864  060F                     	;# 
  1865  0610                     	;# 
  1866  0611                     	;# 
  1867  0612                     	;# 
  1868  0613                     	;# 
  1869  0614                     	;# 
  1870  0616                     	;# 
  1871  0617                     	;# 
  1872  0618                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061D                     	;# 
  1878  061E                     	;# 
  1879  068C                     	;# 
  1880  068D                     	;# 
  1881  068E                     	;# 
  1882  068F                     	;# 
  1883  0690                     	;# 
  1884  0691                     	;# 
  1885  0692                     	;# 
  1886  0693                     	;# 
  1887  0694                     	;# 
  1888  070C                     	;# 
  1889  070D                     	;# 
  1890  070E                     	;# 
  1891  070F                     	;# 
  1892  0710                     	;# 
  1893  0711                     	;# 
  1894  0712                     	;# 
  1895  0713                     	;# 
  1896  0714                     	;# 
  1897  0716                     	;# 
  1898  0717                     	;# 
  1899  0718                     	;# 
  1900  0719                     	;# 
  1901  071A                     	;# 
  1902  071B                     	;# 
  1903  071C                     	;# 
  1904  071D                     	;# 
  1905  071E                     	;# 
  1906  0796                     	;# 
  1907  0797                     	;# 
  1908  0798                     	;# 
  1909  0799                     	;# 
  1910  079A                     	;# 
  1911  079B                     	;# 
  1912  080C                     	;# 
  1913  080D                     	;# 
  1914  080E                     	;# 
  1915  080F                     	;# 
  1916  0810                     	;# 
  1917  0811                     	;# 
  1918  0812                     	;# 
  1919  0813                     	;# 
  1920  0814                     	;# 
  1921  081A                     	;# 
  1922  081B                     	;# 
  1923  081C                     	;# 
  1924  081D                     	;# 
  1925  081E                     	;# 
  1926  081F                     	;# 
  1927  088C                     	;# 
  1928  088D                     	;# 
  1929  088E                     	;# 
  1930  088F                     	;# 
  1931  0890                     	;# 
  1932  0891                     	;# 
  1933  0892                     	;# 
  1934  0893                     	;# 
  1935  0895                     	;# 
  1936  0896                     	;# 
  1937  0897                     	;# 
  1938  0898                     	;# 
  1939  0899                     	;# 
  1940  089A                     	;# 
  1941  089B                     	;# 
  1942  090C                     	;# 
  1943  090E                     	;# 
  1944  090F                     	;# 
  1945  091F                     	;# 
  1946  091F                     	;# 
  1947  098F                     	;# 
  1948  098F                     	;# 
  1949  0990                     	;# 
  1950  0991                     	;# 
  1951  0992                     	;# 
  1952  0993                     	;# 
  1953  0994                     	;# 
  1954  0995                     	;# 
  1955  0996                     	;# 
  1956  0997                     	;# 
  1957  0E0F                     	;# 
  1958  0E10                     	;# 
  1959  0E11                     	;# 
  1960  0E12                     	;# 
  1961  0E13                     	;# 
  1962  0E14                     	;# 
  1963  0E15                     	;# 
  1964  0E16                     	;# 
  1965  0E17                     	;# 
  1966  0E18                     	;# 
  1967  0E19                     	;# 
  1968  0E1A                     	;# 
  1969  0E1B                     	;# 
  1970  0E1C                     	;# 
  1971  0E1D                     	;# 
  1972  0E1E                     	;# 
  1973  0E1F                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E23                     	;# 
  1978  0E24                     	;# 
  1979  0E25                     	;# 
  1980  0E26                     	;# 
  1981  0E27                     	;# 
  1982  0E28                     	;# 
  1983  0E29                     	;# 
  1984  0E2A                     	;# 
  1985  0E2B                     	;# 
  1986  0E2C                     	;# 
  1987  0E2D                     	;# 
  1988  0E2E                     	;# 
  1989  0E2F                     	;# 
  1990  0E30                     	;# 
  1991  0E31                     	;# 
  1992  0E32                     	;# 
  1993  0E33                     	;# 
  1994  0E34                     	;# 
  1995  0E35                     	;# 
  1996  0E36                     	;# 
  1997  0E37                     	;# 
  1998  0E8F                     	;# 
  1999  0E90                     	;# 
  2000  0E91                     	;# 
  2001  0E92                     	;# 
  2002  0E93                     	;# 
  2003  0E94                     	;# 
  2004  0E95                     	;# 
  2005  0E96                     	;# 
  2006  0E97                     	;# 
  2007  0E9C                     	;# 
  2008  0E9D                     	;# 
  2009  0E9E                     	;# 
  2010  0EA1                     	;# 
  2011  0EA2                     	;# 
  2012  0EA3                     	;# 
  2013  0EA4                     	;# 
  2014  0EA5                     	;# 
  2015  0EA9                     	;# 
  2016  0EAA                     	;# 
  2017  0EAB                     	;# 
  2018  0EAC                     	;# 
  2019  0EB1                     	;# 
  2020  0EB2                     	;# 
  2021  0EB3                     	;# 
  2022  0EB8                     	;# 
  2023  0EB9                     	;# 
  2024  0EBA                     	;# 
  2025  0EBB                     	;# 
  2026  0EBC                     	;# 
  2027  0EBD                     	;# 
  2028  0EBE                     	;# 
  2029  0EC3                     	;# 
  2030  0EC5                     	;# 
  2031  0EC6                     	;# 
  2032  0EC7                     	;# 
  2033  0EC8                     	;# 
  2034  0EC9                     	;# 
  2035  0ECA                     	;# 
  2036  0ECB                     	;# 
  2037  0ECC                     	;# 
  2038  0F10                     	;# 
  2039  0F11                     	;# 
  2040  0F12                     	;# 
  2041  0F13                     	;# 
  2042  0F14                     	;# 
  2043  0F15                     	;# 
  2044  0F16                     	;# 
  2045  0F17                     	;# 
  2046  0F18                     	;# 
  2047  0F19                     	;# 
  2048  0F1A                     	;# 
  2049  0F1B                     	;# 
  2050  0F1C                     	;# 
  2051  0F1D                     	;# 
  2052  0F1E                     	;# 
  2053  0F1F                     	;# 
  2054  0F20                     	;# 
  2055  0F21                     	;# 
  2056  0F22                     	;# 
  2057  0F23                     	;# 
  2058  0F24                     	;# 
  2059  0F25                     	;# 
  2060  0F26                     	;# 
  2061  0F27                     	;# 
  2062  0F38                     	;# 
  2063  0F39                     	;# 
  2064  0F3A                     	;# 
  2065  0F3B                     	;# 
  2066  0F3C                     	;# 
  2067  0F3D                     	;# 
  2068  0F3E                     	;# 
  2069  0F3F                     	;# 
  2070  0F40                     	;# 
  2071  0F41                     	;# 
  2072  0F43                     	;# 
  2073  0F44                     	;# 
  2074  0F45                     	;# 
  2075  0F46                     	;# 
  2076  0F47                     	;# 
  2077  0F48                     	;# 
  2078  0F49                     	;# 
  2079  0F4A                     	;# 
  2080  0F4B                     	;# 
  2081  0F4C                     	;# 
  2082  0F4E                     	;# 
  2083  0F4F                     	;# 
  2084  0F50                     	;# 
  2085  0F51                     	;# 
  2086  0F52                     	;# 
  2087  0F53                     	;# 
  2088  0F54                     	;# 
  2089  0F55                     	;# 
  2090  0F56                     	;# 
  2091  0F57                     	;# 
  2092  0F65                     	;# 
  2093  0F68                     	;# 
  2094  0F69                     	;# 
  2095  0F6A                     	;# 
  2096  0F6B                     	;# 
  2097  0FE4                     	;# 
  2098  0FE5                     	;# 
  2099  0FE6                     	;# 
  2100  0FE7                     	;# 
  2101  0FE8                     	;# 
  2102  0FE9                     	;# 
  2103  0FEA                     	;# 
  2104  0FEB                     	;# 
  2105  0FED                     	;# 
  2106  0FEE                     	;# 
  2107  0FEF                     	;# 
  2108  0000                     	;# 
  2109  0001                     	;# 
  2110  0002                     	;# 
  2111  0003                     	;# 
  2112  0004                     	;# 
  2113  0005                     	;# 
  2114  0006                     	;# 
  2115  0007                     	;# 
  2116  0008                     	;# 
  2117  0009                     	;# 
  2118  000A                     	;# 
  2119  000B                     	;# 
  2120  000C                     	;# 
  2121  000D                     	;# 
  2122  000E                     	;# 
  2123  0010                     	;# 
  2124  0011                     	;# 
  2125  0012                     	;# 
  2126  0013                     	;# 
  2127  0016                     	;# 
  2128  0017                     	;# 
  2129  0018                     	;# 
  2130  001C                     	;# 
  2131  001C                     	;# 
  2132  001D                     	;# 
  2133  001D                     	;# 
  2134  001E                     	;# 
  2135  001F                     	;# 
  2136  008C                     	;# 
  2137  008C                     	;# 
  2138  008D                     	;# 
  2139  008E                     	;# 
  2140  008E                     	;# 
  2141  008F                     	;# 
  2142  0090                     	;# 
  2143  0090                     	;# 
  2144  0091                     	;# 
  2145  0093                     	;# 
  2146  0094                     	;# 
  2147  0095                     	;# 
  2148  0096                     	;# 
  2149  0097                     	;# 
  2150  0098                     	;# 
  2151  0099                     	;# 
  2152  009A                     	;# 
  2153  009B                     	;# 
  2154  009C                     	;# 
  2155  009D                     	;# 
  2156  009E                     	;# 
  2157  010C                     	;# 
  2158  010D                     	;# 
  2159  010E                     	;# 
  2160  010E                     	;# 
  2161  010F                     	;# 
  2162  0110                     	;# 
  2163  0110                     	;# 
  2164  0111                     	;# 
  2165  0112                     	;# 
  2166  0112                     	;# 
  2167  0113                     	;# 
  2168  0114                     	;# 
  2169  0114                     	;# 
  2170  0115                     	;# 
  2171  0116                     	;# 
  2172  0116                     	;# 
  2173  0117                     	;# 
  2174  0119                     	;# 
  2175  0119                     	;# 
  2176  0119                     	;# 
  2177  011A                     	;# 
  2178  011A                     	;# 
  2179  011A                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011C                     	;# 
  2186  011C                     	;# 
  2187  011C                     	;# 
  2188  011D                     	;# 
  2189  011D                     	;# 
  2190  011D                     	;# 
  2191  011E                     	;# 
  2192  011E                     	;# 
  2193  011E                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  018C                     	;# 
  2200  018D                     	;# 
  2201  018E                     	;# 
  2202  018F                     	;# 
  2203  0190                     	;# 
  2204  0191                     	;# 
  2205  0192                     	;# 
  2206  0196                     	;# 
  2207  0197                     	;# 
  2208  0198                     	;# 
  2209  0199                     	;# 
  2210  019A                     	;# 
  2211  019B                     	;# 
  2212  019C                     	;# 
  2213  020C                     	;# 
  2214  020D                     	;# 
  2215  020E                     	;# 
  2216  020F                     	;# 
  2217  020F                     	;# 
  2218  0210                     	;# 
  2219  0210                     	;# 
  2220  0211                     	;# 
  2221  0211                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0214                     	;# 
  2225  0215                     	;# 
  2226  0215                     	;# 
  2227  0216                     	;# 
  2228  0216                     	;# 
  2229  0217                     	;# 
  2230  0217                     	;# 
  2231  0218                     	;# 
  2232  0219                     	;# 
  2233  021A                     	;# 
  2234  021B                     	;# 
  2235  021B                     	;# 
  2236  021C                     	;# 
  2237  021C                     	;# 
  2238  021D                     	;# 
  2239  021D                     	;# 
  2240  021E                     	;# 
  2241  021F                     	;# 
  2242  028C                     	;# 
  2243  028C                     	;# 
  2244  028D                     	;# 
  2245  028D                     	;# 
  2246  028E                     	;# 
  2247  028F                     	;# 
  2248  0290                     	;# 
  2249  0290                     	;# 
  2250  0291                     	;# 
  2251  0292                     	;# 
  2252  0292                     	;# 
  2253  0293                     	;# 
  2254  0293                     	;# 
  2255  0294                     	;# 
  2256  0295                     	;# 
  2257  0296                     	;# 
  2258  0296                     	;# 
  2259  0297                     	;# 
  2260  0298                     	;# 
  2261  0298                     	;# 
  2262  0299                     	;# 
  2263  0299                     	;# 
  2264  029A                     	;# 
  2265  029B                     	;# 
  2266  029C                     	;# 
  2267  029C                     	;# 
  2268  029D                     	;# 
  2269  030C                     	;# 
  2270  030C                     	;# 
  2271  030D                     	;# 
  2272  030E                     	;# 
  2273  030F                     	;# 
  2274  0310                     	;# 
  2275  0310                     	;# 
  2276  0311                     	;# 
  2277  0312                     	;# 
  2278  0313                     	;# 
  2279  0314                     	;# 
  2280  0314                     	;# 
  2281  0315                     	;# 
  2282  0316                     	;# 
  2283  0317                     	;# 
  2284  0318                     	;# 
  2285  0318                     	;# 
  2286  0319                     	;# 
  2287  031A                     	;# 
  2288  031B                     	;# 
  2289  031C                     	;# 
  2290  031C                     	;# 
  2291  031D                     	;# 
  2292  031E                     	;# 
  2293  031F                     	;# 
  2294  038C                     	;# 
  2295  038D                     	;# 
  2296  038E                     	;# 
  2297  0390                     	;# 
  2298  0391                     	;# 
  2299  0392                     	;# 
  2300  040C                     	;# 
  2301  040D                     	;# 
  2302  040E                     	;# 
  2303  040F                     	;# 
  2304  0410                     	;# 
  2305  0411                     	;# 
  2306  0416                     	;# 
  2307  0416                     	;# 
  2308  0417                     	;# 
  2309  0418                     	;# 
  2310  0418                     	;# 
  2311  0419                     	;# 
  2312  041A                     	;# 
  2313  041A                     	;# 
  2314  041B                     	;# 
  2315  041C                     	;# 
  2316  041C                     	;# 
  2317  041D                     	;# 
  2318  041E                     	;# 
  2319  041F                     	;# 
  2320  048C                     	;# 
  2321  048C                     	;# 
  2322  048D                     	;# 
  2323  048E                     	;# 
  2324  048F                     	;# 
  2325  048F                     	;# 
  2326  0490                     	;# 
  2327  0491                     	;# 
  2328  0492                     	;# 
  2329  0492                     	;# 
  2330  0493                     	;# 
  2331  0494                     	;# 
  2332  0495                     	;# 
  2333  0495                     	;# 
  2334  0496                     	;# 
  2335  0497                     	;# 
  2336  0498                     	;# 
  2337  0499                     	;# 
  2338  049A                     	;# 
  2339  049B                     	;# 
  2340  049C                     	;# 
  2341  049D                     	;# 
  2342  050C                     	;# 
  2343  050C                     	;# 
  2344  050D                     	;# 
  2345  050E                     	;# 
  2346  050F                     	;# 
  2347  050F                     	;# 
  2348  0510                     	;# 
  2349  0511                     	;# 
  2350  0512                     	;# 
  2351  0512                     	;# 
  2352  0513                     	;# 
  2353  0514                     	;# 
  2354  0515                     	;# 
  2355  0515                     	;# 
  2356  0516                     	;# 
  2357  0517                     	;# 
  2358  0518                     	;# 
  2359  0519                     	;# 
  2360  051A                     	;# 
  2361  051B                     	;# 
  2362  051C                     	;# 
  2363  051D                     	;# 
  2364  058C                     	;# 
  2365  058C                     	;# 
  2366  058D                     	;# 
  2367  058E                     	;# 
  2368  058F                     	;# 
  2369  058F                     	;# 
  2370  0590                     	;# 
  2371  0591                     	;# 
  2372  0592                     	;# 
  2373  0593                     	;# 
  2374  060C                     	;# 
  2375  060D                     	;# 
  2376  060E                     	;# 
  2377  060F                     	;# 
  2378  0610                     	;# 
  2379  0611                     	;# 
  2380  0612                     	;# 
  2381  0613                     	;# 
  2382  0614                     	;# 
  2383  0616                     	;# 
  2384  0617                     	;# 
  2385  0618                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061D                     	;# 
  2391  061E                     	;# 
  2392  068C                     	;# 
  2393  068D                     	;# 
  2394  068E                     	;# 
  2395  068F                     	;# 
  2396  0690                     	;# 
  2397  0691                     	;# 
  2398  0692                     	;# 
  2399  0693                     	;# 
  2400  0694                     	;# 
  2401  070C                     	;# 
  2402  070D                     	;# 
  2403  070E                     	;# 
  2404  070F                     	;# 
  2405  0710                     	;# 
  2406  0711                     	;# 
  2407  0712                     	;# 
  2408  0713                     	;# 
  2409  0714                     	;# 
  2410  0716                     	;# 
  2411  0717                     	;# 
  2412  0718                     	;# 
  2413  0719                     	;# 
  2414  071A                     	;# 
  2415  071B                     	;# 
  2416  071C                     	;# 
  2417  071D                     	;# 
  2418  071E                     	;# 
  2419  0796                     	;# 
  2420  0797                     	;# 
  2421  0798                     	;# 
  2422  0799                     	;# 
  2423  079A                     	;# 
  2424  079B                     	;# 
  2425  080C                     	;# 
  2426  080D                     	;# 
  2427  080E                     	;# 
  2428  080F                     	;# 
  2429  0810                     	;# 
  2430  0811                     	;# 
  2431  0812                     	;# 
  2432  0813                     	;# 
  2433  0814                     	;# 
  2434  081A                     	;# 
  2435  081B                     	;# 
  2436  081C                     	;# 
  2437  081D                     	;# 
  2438  081E                     	;# 
  2439  081F                     	;# 
  2440  088C                     	;# 
  2441  088D                     	;# 
  2442  088E                     	;# 
  2443  088F                     	;# 
  2444  0890                     	;# 
  2445  0891                     	;# 
  2446  0892                     	;# 
  2447  0893                     	;# 
  2448  0895                     	;# 
  2449  0896                     	;# 
  2450  0897                     	;# 
  2451  0898                     	;# 
  2452  0899                     	;# 
  2453  089A                     	;# 
  2454  089B                     	;# 
  2455  090C                     	;# 
  2456  090E                     	;# 
  2457  090F                     	;# 
  2458  091F                     	;# 
  2459  091F                     	;# 
  2460  098F                     	;# 
  2461  098F                     	;# 
  2462  0990                     	;# 
  2463  0991                     	;# 
  2464  0992                     	;# 
  2465  0993                     	;# 
  2466  0994                     	;# 
  2467  0995                     	;# 
  2468  0996                     	;# 
  2469  0997                     	;# 
  2470  0E0F                     	;# 
  2471  0E10                     	;# 
  2472  0E11                     	;# 
  2473  0E12                     	;# 
  2474  0E13                     	;# 
  2475  0E14                     	;# 
  2476  0E15                     	;# 
  2477  0E16                     	;# 
  2478  0E17                     	;# 
  2479  0E18                     	;# 
  2480  0E19                     	;# 
  2481  0E1A                     	;# 
  2482  0E1B                     	;# 
  2483  0E1C                     	;# 
  2484  0E1D                     	;# 
  2485  0E1E                     	;# 
  2486  0E1F                     	;# 
  2487  0E20                     	;# 
  2488  0E21                     	;# 
  2489  0E22                     	;# 
  2490  0E23                     	;# 
  2491  0E24                     	;# 
  2492  0E25                     	;# 
  2493  0E26                     	;# 
  2494  0E27                     	;# 
  2495  0E28                     	;# 
  2496  0E29                     	;# 
  2497  0E2A                     	;# 
  2498  0E2B                     	;# 
  2499  0E2C                     	;# 
  2500  0E2D                     	;# 
  2501  0E2E                     	;# 
  2502  0E2F                     	;# 
  2503  0E30                     	;# 
  2504  0E31                     	;# 
  2505  0E32                     	;# 
  2506  0E33                     	;# 
  2507  0E34                     	;# 
  2508  0E35                     	;# 
  2509  0E36                     	;# 
  2510  0E37                     	;# 
  2511  0E8F                     	;# 
  2512  0E90                     	;# 
  2513  0E91                     	;# 
  2514  0E92                     	;# 
  2515  0E93                     	;# 
  2516  0E94                     	;# 
  2517  0E95                     	;# 
  2518  0E96                     	;# 
  2519  0E97                     	;# 
  2520  0E9C                     	;# 
  2521  0E9D                     	;# 
  2522  0E9E                     	;# 
  2523  0EA1                     	;# 
  2524  0EA2                     	;# 
  2525  0EA3                     	;# 
  2526  0EA4                     	;# 
  2527  0EA5                     	;# 
  2528  0EA9                     	;# 
  2529  0EAA                     	;# 
  2530  0EAB                     	;# 
  2531  0EAC                     	;# 
  2532  0EB1                     	;# 
  2533  0EB2                     	;# 
  2534  0EB3                     	;# 
  2535  0EB8                     	;# 
  2536  0EB9                     	;# 
  2537  0EBA                     	;# 
  2538  0EBB                     	;# 
  2539  0EBC                     	;# 
  2540  0EBD                     	;# 
  2541  0EBE                     	;# 
  2542  0EC3                     	;# 
  2543  0EC5                     	;# 
  2544  0EC6                     	;# 
  2545  0EC7                     	;# 
  2546  0EC8                     	;# 
  2547  0EC9                     	;# 
  2548  0ECA                     	;# 
  2549  0ECB                     	;# 
  2550  0ECC                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F38                     	;# 
  2576  0F39                     	;# 
  2577  0F3A                     	;# 
  2578  0F3B                     	;# 
  2579  0F3C                     	;# 
  2580  0F3D                     	;# 
  2581  0F3E                     	;# 
  2582  0F3F                     	;# 
  2583  0F40                     	;# 
  2584  0F41                     	;# 
  2585  0F43                     	;# 
  2586  0F44                     	;# 
  2587  0F45                     	;# 
  2588  0F46                     	;# 
  2589  0F47                     	;# 
  2590  0F48                     	;# 
  2591  0F49                     	;# 
  2592  0F4A                     	;# 
  2593  0F4B                     	;# 
  2594  0F4C                     	;# 
  2595  0F4E                     	;# 
  2596  0F4F                     	;# 
  2597  0F50                     	;# 
  2598  0F51                     	;# 
  2599  0F52                     	;# 
  2600  0F53                     	;# 
  2601  0F54                     	;# 
  2602  0F55                     	;# 
  2603  0F56                     	;# 
  2604  0F57                     	;# 
  2605  0F65                     	;# 
  2606  0F68                     	;# 
  2607  0F69                     	;# 
  2608  0F6A                     	;# 
  2609  0F6B                     	;# 
  2610  0FE4                     	;# 
  2611  0FE5                     	;# 
  2612  0FE6                     	;# 
  2613  0FE7                     	;# 
  2614  0FE8                     	;# 
  2615  0FE9                     	;# 
  2616  0FEA                     	;# 
  2617  0FEB                     	;# 
  2618  0FED                     	;# 
  2619  0FEE                     	;# 
  2620  0FEF                     	;# 
  2621  0000                     	;# 
  2622  0001                     	;# 
  2623  0002                     	;# 
  2624  0003                     	;# 
  2625  0004                     	;# 
  2626  0005                     	;# 
  2627  0006                     	;# 
  2628  0007                     	;# 
  2629  0008                     	;# 
  2630  0009                     	;# 
  2631  000A                     	;# 
  2632  000B                     	;# 
  2633  000C                     	;# 
  2634  000D                     	;# 
  2635  000E                     	;# 
  2636  0010                     	;# 
  2637  0011                     	;# 
  2638  0012                     	;# 
  2639  0013                     	;# 
  2640  0016                     	;# 
  2641  0017                     	;# 
  2642  0018                     	;# 
  2643  001C                     	;# 
  2644  001C                     	;# 
  2645  001D                     	;# 
  2646  001D                     	;# 
  2647  001E                     	;# 
  2648  001F                     	;# 
  2649  008C                     	;# 
  2650  008C                     	;# 
  2651  008D                     	;# 
  2652  008E                     	;# 
  2653  008E                     	;# 
  2654  008F                     	;# 
  2655  0090                     	;# 
  2656  0090                     	;# 
  2657  0091                     	;# 
  2658  0093                     	;# 
  2659  0094                     	;# 
  2660  0095                     	;# 
  2661  0096                     	;# 
  2662  0097                     	;# 
  2663  0098                     	;# 
  2664  0099                     	;# 
  2665  009A                     	;# 
  2666  009B                     	;# 
  2667  009C                     	;# 
  2668  009D                     	;# 
  2669  009E                     	;# 
  2670  010C                     	;# 
  2671  010D                     	;# 
  2672  010E                     	;# 
  2673  010E                     	;# 
  2674  010F                     	;# 
  2675  0110                     	;# 
  2676  0110                     	;# 
  2677  0111                     	;# 
  2678  0112                     	;# 
  2679  0112                     	;# 
  2680  0113                     	;# 
  2681  0114                     	;# 
  2682  0114                     	;# 
  2683  0115                     	;# 
  2684  0116                     	;# 
  2685  0116                     	;# 
  2686  0117                     	;# 
  2687  0119                     	;# 
  2688  0119                     	;# 
  2689  0119                     	;# 
  2690  011A                     	;# 
  2691  011A                     	;# 
  2692  011A                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011C                     	;# 
  2699  011C                     	;# 
  2700  011C                     	;# 
  2701  011D                     	;# 
  2702  011D                     	;# 
  2703  011D                     	;# 
  2704  011E                     	;# 
  2705  011E                     	;# 
  2706  011E                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  018C                     	;# 
  2713  018D                     	;# 
  2714  018E                     	;# 
  2715  018F                     	;# 
  2716  0190                     	;# 
  2717  0191                     	;# 
  2718  0192                     	;# 
  2719  0196                     	;# 
  2720  0197                     	;# 
  2721  0198                     	;# 
  2722  0199                     	;# 
  2723  019A                     	;# 
  2724  019B                     	;# 
  2725  019C                     	;# 
  2726  020C                     	;# 
  2727  020D                     	;# 
  2728  020E                     	;# 
  2729  020F                     	;# 
  2730  020F                     	;# 
  2731  0210                     	;# 
  2732  0210                     	;# 
  2733  0211                     	;# 
  2734  0211                     	;# 
  2735  0212                     	;# 
  2736  0213                     	;# 
  2737  0214                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0216                     	;# 
  2741  0216                     	;# 
  2742  0217                     	;# 
  2743  0217                     	;# 
  2744  0218                     	;# 
  2745  0219                     	;# 
  2746  021A                     	;# 
  2747  021B                     	;# 
  2748  021B                     	;# 
  2749  021C                     	;# 
  2750  021C                     	;# 
  2751  021D                     	;# 
  2752  021D                     	;# 
  2753  021E                     	;# 
  2754  021F                     	;# 
  2755  028C                     	;# 
  2756  028C                     	;# 
  2757  028D                     	;# 
  2758  028D                     	;# 
  2759  028E                     	;# 
  2760  028F                     	;# 
  2761  0290                     	;# 
  2762  0290                     	;# 
  2763  0291                     	;# 
  2764  0292                     	;# 
  2765  0292                     	;# 
  2766  0293                     	;# 
  2767  0293                     	;# 
  2768  0294                     	;# 
  2769  0295                     	;# 
  2770  0296                     	;# 
  2771  0296                     	;# 
  2772  0297                     	;# 
  2773  0298                     	;# 
  2774  0298                     	;# 
  2775  0299                     	;# 
  2776  0299                     	;# 
  2777  029A                     	;# 
  2778  029B                     	;# 
  2779  029C                     	;# 
  2780  029C                     	;# 
  2781  029D                     	;# 
  2782  030C                     	;# 
  2783  030C                     	;# 
  2784  030D                     	;# 
  2785  030E                     	;# 
  2786  030F                     	;# 
  2787  0310                     	;# 
  2788  0310                     	;# 
  2789  0311                     	;# 
  2790  0312                     	;# 
  2791  0313                     	;# 
  2792  0314                     	;# 
  2793  0314                     	;# 
  2794  0315                     	;# 
  2795  0316                     	;# 
  2796  0317                     	;# 
  2797  0318                     	;# 
  2798  0318                     	;# 
  2799  0319                     	;# 
  2800  031A                     	;# 
  2801  031B                     	;# 
  2802  031C                     	;# 
  2803  031C                     	;# 
  2804  031D                     	;# 
  2805  031E                     	;# 
  2806  031F                     	;# 
  2807  038C                     	;# 
  2808  038D                     	;# 
  2809  038E                     	;# 
  2810  0390                     	;# 
  2811  0391                     	;# 
  2812  0392                     	;# 
  2813  040C                     	;# 
  2814  040D                     	;# 
  2815  040E                     	;# 
  2816  040F                     	;# 
  2817  0410                     	;# 
  2818  0411                     	;# 
  2819  0416                     	;# 
  2820  0416                     	;# 
  2821  0417                     	;# 
  2822  0418                     	;# 
  2823  0418                     	;# 
  2824  0419                     	;# 
  2825  041A                     	;# 
  2826  041A                     	;# 
  2827  041B                     	;# 
  2828  041C                     	;# 
  2829  041C                     	;# 
  2830  041D                     	;# 
  2831  041E                     	;# 
  2832  041F                     	;# 
  2833  048C                     	;# 
  2834  048C                     	;# 
  2835  048D                     	;# 
  2836  048E                     	;# 
  2837  048F                     	;# 
  2838  048F                     	;# 
  2839  0490                     	;# 
  2840  0491                     	;# 
  2841  0492                     	;# 
  2842  0492                     	;# 
  2843  0493                     	;# 
  2844  0494                     	;# 
  2845  0495                     	;# 
  2846  0495                     	;# 
  2847  0496                     	;# 
  2848  0497                     	;# 
  2849  0498                     	;# 
  2850  0499                     	;# 
  2851  049A                     	;# 
  2852  049B                     	;# 
  2853  049C                     	;# 
  2854  049D                     	;# 
  2855  050C                     	;# 
  2856  050C                     	;# 
  2857  050D                     	;# 
  2858  050E                     	;# 
  2859  050F                     	;# 
  2860  050F                     	;# 
  2861  0510                     	;# 
  2862  0511                     	;# 
  2863  0512                     	;# 
  2864  0512                     	;# 
  2865  0513                     	;# 
  2866  0514                     	;# 
  2867  0515                     	;# 
  2868  0515                     	;# 
  2869  0516                     	;# 
  2870  0517                     	;# 
  2871  0518                     	;# 
  2872  0519                     	;# 
  2873  051A                     	;# 
  2874  051B                     	;# 
  2875  051C                     	;# 
  2876  051D                     	;# 
  2877  058C                     	;# 
  2878  058C                     	;# 
  2879  058D                     	;# 
  2880  058E                     	;# 
  2881  058F                     	;# 
  2882  058F                     	;# 
  2883  0590                     	;# 
  2884  0591                     	;# 
  2885  0592                     	;# 
  2886  0593                     	;# 
  2887  060C                     	;# 
  2888  060D                     	;# 
  2889  060E                     	;# 
  2890  060F                     	;# 
  2891  0610                     	;# 
  2892  0611                     	;# 
  2893  0612                     	;# 
  2894  0613                     	;# 
  2895  0614                     	;# 
  2896  0616                     	;# 
  2897  0617                     	;# 
  2898  0618                     	;# 
  2899  0619                     	;# 
  2900  061A                     	;# 
  2901  061B                     	;# 
  2902  061C                     	;# 
  2903  061D                     	;# 
  2904  061E                     	;# 
  2905  068C                     	;# 
  2906  068D                     	;# 
  2907  068E                     	;# 
  2908  068F                     	;# 
  2909  0690                     	;# 
  2910  0691                     	;# 
  2911  0692                     	;# 
  2912  0693                     	;# 
  2913  0694                     	;# 
  2914  070C                     	;# 
  2915  070D                     	;# 
  2916  070E                     	;# 
  2917  070F                     	;# 
  2918  0710                     	;# 
  2919  0711                     	;# 
  2920  0712                     	;# 
  2921  0713                     	;# 
  2922  0714                     	;# 
  2923  0716                     	;# 
  2924  0717                     	;# 
  2925  0718                     	;# 
  2926  0719                     	;# 
  2927  071A                     	;# 
  2928  071B                     	;# 
  2929  071C                     	;# 
  2930  071D                     	;# 
  2931  071E                     	;# 
  2932  0796                     	;# 
  2933  0797                     	;# 
  2934  0798                     	;# 
  2935  0799                     	;# 
  2936  079A                     	;# 
  2937  079B                     	;# 
  2938  080C                     	;# 
  2939  080D                     	;# 
  2940  080E                     	;# 
  2941  080F                     	;# 
  2942  0810                     	;# 
  2943  0811                     	;# 
  2944  0812                     	;# 
  2945  0813                     	;# 
  2946  0814                     	;# 
  2947  081A                     	;# 
  2948  081B                     	;# 
  2949  081C                     	;# 
  2950  081D                     	;# 
  2951  081E                     	;# 
  2952  081F                     	;# 
  2953  088C                     	;# 
  2954  088D                     	;# 
  2955  088E                     	;# 
  2956  088F                     	;# 
  2957  0890                     	;# 
  2958  0891                     	;# 
  2959  0892                     	;# 
  2960  0893                     	;# 
  2961  0895                     	;# 
  2962  0896                     	;# 
  2963  0897                     	;# 
  2964  0898                     	;# 
  2965  0899                     	;# 
  2966  089A                     	;# 
  2967  089B                     	;# 
  2968  090C                     	;# 
  2969  090E                     	;# 
  2970  090F                     	;# 
  2971  091F                     	;# 
  2972  091F                     	;# 
  2973  098F                     	;# 
  2974  098F                     	;# 
  2975  0990                     	;# 
  2976  0991                     	;# 
  2977  0992                     	;# 
  2978  0993                     	;# 
  2979  0994                     	;# 
  2980  0995                     	;# 
  2981  0996                     	;# 
  2982  0997                     	;# 
  2983  0E0F                     	;# 
  2984  0E10                     	;# 
  2985  0E11                     	;# 
  2986  0E12                     	;# 
  2987  0E13                     	;# 
  2988  0E14                     	;# 
  2989  0E15                     	;# 
  2990  0E16                     	;# 
  2991  0E17                     	;# 
  2992  0E18                     	;# 
  2993  0E19                     	;# 
  2994  0E1A                     	;# 
  2995  0E1B                     	;# 
  2996  0E1C                     	;# 
  2997  0E1D                     	;# 
  2998  0E1E                     	;# 
  2999  0E1F                     	;# 
  3000  0E20                     	;# 
  3001  0E21                     	;# 
  3002  0E22                     	;# 
  3003  0E23                     	;# 
  3004  0E24                     	;# 
  3005  0E25                     	;# 
  3006  0E26                     	;# 
  3007  0E27                     	;# 
  3008  0E28                     	;# 
  3009  0E29                     	;# 
  3010  0E2A                     	;# 
  3011  0E2B                     	;# 
  3012  0E2C                     	;# 
  3013  0E2D                     	;# 
  3014  0E2E                     	;# 
  3015  0E2F                     	;# 
  3016  0E30                     	;# 
  3017  0E31                     	;# 
  3018  0E32                     	;# 
  3019  0E33                     	;# 
  3020  0E34                     	;# 
  3021  0E35                     	;# 
  3022  0E36                     	;# 
  3023  0E37                     	;# 
  3024  0E8F                     	;# 
  3025  0E90                     	;# 
  3026  0E91                     	;# 
  3027  0E92                     	;# 
  3028  0E93                     	;# 
  3029  0E94                     	;# 
  3030  0E95                     	;# 
  3031  0E96                     	;# 
  3032  0E97                     	;# 
  3033  0E9C                     	;# 
  3034  0E9D                     	;# 
  3035  0E9E                     	;# 
  3036  0EA1                     	;# 
  3037  0EA2                     	;# 
  3038  0EA3                     	;# 
  3039  0EA4                     	;# 
  3040  0EA5                     	;# 
  3041  0EA9                     	;# 
  3042  0EAA                     	;# 
  3043  0EAB                     	;# 
  3044  0EAC                     	;# 
  3045  0EB1                     	;# 
  3046  0EB2                     	;# 
  3047  0EB3                     	;# 
  3048  0EB8                     	;# 
  3049  0EB9                     	;# 
  3050  0EBA                     	;# 
  3051  0EBB                     	;# 
  3052  0EBC                     	;# 
  3053  0EBD                     	;# 
  3054  0EBE                     	;# 
  3055  0EC3                     	;# 
  3056  0EC5                     	;# 
  3057  0EC6                     	;# 
  3058  0EC7                     	;# 
  3059  0EC8                     	;# 
  3060  0EC9                     	;# 
  3061  0ECA                     	;# 
  3062  0ECB                     	;# 
  3063  0ECC                     	;# 
  3064  0F10                     	;# 
  3065  0F11                     	;# 
  3066  0F12                     	;# 
  3067  0F13                     	;# 
  3068  0F14                     	;# 
  3069  0F15                     	;# 
  3070  0F16                     	;# 
  3071  0F17                     	;# 
  3072  0F18                     	;# 
  3073  0F19                     	;# 
  3074  0F1A                     	;# 
  3075  0F1B                     	;# 
  3076  0F1C                     	;# 
  3077  0F1D                     	;# 
  3078  0F1E                     	;# 
  3079  0F1F                     	;# 
  3080  0F20                     	;# 
  3081  0F21                     	;# 
  3082  0F22                     	;# 
  3083  0F23                     	;# 
  3084  0F24                     	;# 
  3085  0F25                     	;# 
  3086  0F26                     	;# 
  3087  0F27                     	;# 
  3088  0F38                     	;# 
  3089  0F39                     	;# 
  3090  0F3A                     	;# 
  3091  0F3B                     	;# 
  3092  0F3C                     	;# 
  3093  0F3D                     	;# 
  3094  0F3E                     	;# 
  3095  0F3F                     	;# 
  3096  0F40                     	;# 
  3097  0F41                     	;# 
  3098  0F43                     	;# 
  3099  0F44                     	;# 
  3100  0F45                     	;# 
  3101  0F46                     	;# 
  3102  0F47                     	;# 
  3103  0F48                     	;# 
  3104  0F49                     	;# 
  3105  0F4A                     	;# 
  3106  0F4B                     	;# 
  3107  0F4C                     	;# 
  3108  0F4E                     	;# 
  3109  0F4F                     	;# 
  3110  0F50                     	;# 
  3111  0F51                     	;# 
  3112  0F52                     	;# 
  3113  0F53                     	;# 
  3114  0F54                     	;# 
  3115  0F55                     	;# 
  3116  0F56                     	;# 
  3117  0F57                     	;# 
  3118  0F65                     	;# 
  3119  0F68                     	;# 
  3120  0F69                     	;# 
  3121  0F6A                     	;# 
  3122  0F6B                     	;# 
  3123  0FE4                     	;# 
  3124  0FE5                     	;# 
  3125  0FE6                     	;# 
  3126  0FE7                     	;# 
  3127  0FE8                     	;# 
  3128  0FE9                     	;# 
  3129  0FEA                     	;# 
  3130  0FEB                     	;# 
  3131  0FED                     	;# 
  3132  0FEE                     	;# 
  3133  0FEF                     	;# 
  3134  0000                     	;# 
  3135  0001                     	;# 
  3136  0002                     	;# 
  3137  0003                     	;# 
  3138  0004                     	;# 
  3139  0005                     	;# 
  3140  0006                     	;# 
  3141  0007                     	;# 
  3142  0008                     	;# 
  3143  0009                     	;# 
  3144  000A                     	;# 
  3145  000B                     	;# 
  3146  000C                     	;# 
  3147  000D                     	;# 
  3148  000E                     	;# 
  3149  0010                     	;# 
  3150  0011                     	;# 
  3151  0012                     	;# 
  3152  0013                     	;# 
  3153  0016                     	;# 
  3154  0017                     	;# 
  3155  0018                     	;# 
  3156  001C                     	;# 
  3157  001C                     	;# 
  3158  001D                     	;# 
  3159  001D                     	;# 
  3160  001E                     	;# 
  3161  001F                     	;# 
  3162  008C                     	;# 
  3163  008C                     	;# 
  3164  008D                     	;# 
  3165  008E                     	;# 
  3166  008E                     	;# 
  3167  008F                     	;# 
  3168  0090                     	;# 
  3169  0090                     	;# 
  3170  0091                     	;# 
  3171  0093                     	;# 
  3172  0094                     	;# 
  3173  0095                     	;# 
  3174  0096                     	;# 
  3175  0097                     	;# 
  3176  0098                     	;# 
  3177  0099                     	;# 
  3178  009A                     	;# 
  3179  009B                     	;# 
  3180  009C                     	;# 
  3181  009D                     	;# 
  3182  009E                     	;# 
  3183  010C                     	;# 
  3184  010D                     	;# 
  3185  010E                     	;# 
  3186  010E                     	;# 
  3187  010F                     	;# 
  3188  0110                     	;# 
  3189  0110                     	;# 
  3190  0111                     	;# 
  3191  0112                     	;# 
  3192  0112                     	;# 
  3193  0113                     	;# 
  3194  0114                     	;# 
  3195  0114                     	;# 
  3196  0115                     	;# 
  3197  0116                     	;# 
  3198  0116                     	;# 
  3199  0117                     	;# 
  3200  0119                     	;# 
  3201  0119                     	;# 
  3202  0119                     	;# 
  3203  011A                     	;# 
  3204  011A                     	;# 
  3205  011A                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011C                     	;# 
  3212  011C                     	;# 
  3213  011C                     	;# 
  3214  011D                     	;# 
  3215  011D                     	;# 
  3216  011D                     	;# 
  3217  011E                     	;# 
  3218  011E                     	;# 
  3219  011E                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  018C                     	;# 
  3226  018D                     	;# 
  3227  018E                     	;# 
  3228  018F                     	;# 
  3229  0190                     	;# 
  3230  0191                     	;# 
  3231  0192                     	;# 
  3232  0196                     	;# 
  3233  0197                     	;# 
  3234  0198                     	;# 
  3235  0199                     	;# 
  3236  019A                     	;# 
  3237  019B                     	;# 
  3238  019C                     	;# 
  3239  020C                     	;# 
  3240  020D                     	;# 
  3241  020E                     	;# 
  3242  020F                     	;# 
  3243  020F                     	;# 
  3244  0210                     	;# 
  3245  0210                     	;# 
  3246  0211                     	;# 
  3247  0211                     	;# 
  3248  0212                     	;# 
  3249  0213                     	;# 
  3250  0214                     	;# 
  3251  0215                     	;# 
  3252  0215                     	;# 
  3253  0216                     	;# 
  3254  0216                     	;# 
  3255  0217                     	;# 
  3256  0217                     	;# 
  3257  0218                     	;# 
  3258  0219                     	;# 
  3259  021A                     	;# 
  3260  021B                     	;# 
  3261  021B                     	;# 
  3262  021C                     	;# 
  3263  021C                     	;# 
  3264  021D                     	;# 
  3265  021D                     	;# 
  3266  021E                     	;# 
  3267  021F                     	;# 
  3268  028C                     	;# 
  3269  028C                     	;# 
  3270  028D                     	;# 
  3271  028D                     	;# 
  3272  028E                     	;# 
  3273  028F                     	;# 
  3274  0290                     	;# 
  3275  0290                     	;# 
  3276  0291                     	;# 
  3277  0292                     	;# 
  3278  0292                     	;# 
  3279  0293                     	;# 
  3280  0293                     	;# 
  3281  0294                     	;# 
  3282  0295                     	;# 
  3283  0296                     	;# 
  3284  0296                     	;# 
  3285  0297                     	;# 
  3286  0298                     	;# 
  3287  0298                     	;# 
  3288  0299                     	;# 
  3289  0299                     	;# 
  3290  029A                     	;# 
  3291  029B                     	;# 
  3292  029C                     	;# 
  3293  029C                     	;# 
  3294  029D                     	;# 
  3295  030C                     	;# 
  3296  030C                     	;# 
  3297  030D                     	;# 
  3298  030E                     	;# 
  3299  030F                     	;# 
  3300  0310                     	;# 
  3301  0310                     	;# 
  3302  0311                     	;# 
  3303  0312                     	;# 
  3304  0313                     	;# 
  3305  0314                     	;# 
  3306  0314                     	;# 
  3307  0315                     	;# 
  3308  0316                     	;# 
  3309  0317                     	;# 
  3310  0318                     	;# 
  3311  0318                     	;# 
  3312  0319                     	;# 
  3313  031A                     	;# 
  3314  031B                     	;# 
  3315  031C                     	;# 
  3316  031C                     	;# 
  3317  031D                     	;# 
  3318  031E                     	;# 
  3319  031F                     	;# 
  3320  038C                     	;# 
  3321  038D                     	;# 
  3322  038E                     	;# 
  3323  0390                     	;# 
  3324  0391                     	;# 
  3325  0392                     	;# 
  3326  040C                     	;# 
  3327  040D                     	;# 
  3328  040E                     	;# 
  3329  040F                     	;# 
  3330  0410                     	;# 
  3331  0411                     	;# 
  3332  0416                     	;# 
  3333  0416                     	;# 
  3334  0417                     	;# 
  3335  0418                     	;# 
  3336  0418                     	;# 
  3337  0419                     	;# 
  3338  041A                     	;# 
  3339  041A                     	;# 
  3340  041B                     	;# 
  3341  041C                     	;# 
  3342  041C                     	;# 
  3343  041D                     	;# 
  3344  041E                     	;# 
  3345  041F                     	;# 
  3346  048C                     	;# 
  3347  048C                     	;# 
  3348  048D                     	;# 
  3349  048E                     	;# 
  3350  048F                     	;# 
  3351  048F                     	;# 
  3352  0490                     	;# 
  3353  0491                     	;# 
  3354  0492                     	;# 
  3355  0492                     	;# 
  3356  0493                     	;# 
  3357  0494                     	;# 
  3358  0495                     	;# 
  3359  0495                     	;# 
  3360  0496                     	;# 
  3361  0497                     	;# 
  3362  0498                     	;# 
  3363  0499                     	;# 
  3364  049A                     	;# 
  3365  049B                     	;# 
  3366  049C                     	;# 
  3367  049D                     	;# 
  3368  050C                     	;# 
  3369  050C                     	;# 
  3370  050D                     	;# 
  3371  050E                     	;# 
  3372  050F                     	;# 
  3373  050F                     	;# 
  3374  0510                     	;# 
  3375  0511                     	;# 
  3376  0512                     	;# 
  3377  0512                     	;# 
  3378  0513                     	;# 
  3379  0514                     	;# 
  3380  0515                     	;# 
  3381  0515                     	;# 
  3382  0516                     	;# 
  3383  0517                     	;# 
  3384  0518                     	;# 
  3385  0519                     	;# 
  3386  051A                     	;# 
  3387  051B                     	;# 
  3388  051C                     	;# 
  3389  051D                     	;# 
  3390  058C                     	;# 
  3391  058C                     	;# 
  3392  058D                     	;# 
  3393  058E                     	;# 
  3394  058F                     	;# 
  3395  058F                     	;# 
  3396  0590                     	;# 
  3397  0591                     	;# 
  3398  0592                     	;# 
  3399  0593                     	;# 
  3400  060C                     	;# 
  3401  060D                     	;# 
  3402  060E                     	;# 
  3403  060F                     	;# 
  3404  0610                     	;# 
  3405  0611                     	;# 
  3406  0612                     	;# 
  3407  0613                     	;# 
  3408  0614                     	;# 
  3409  0616                     	;# 
  3410  0617                     	;# 
  3411  0618                     	;# 
  3412  0619                     	;# 
  3413  061A                     	;# 
  3414  061B                     	;# 
  3415  061C                     	;# 
  3416  061D                     	;# 
  3417  061E                     	;# 
  3418  068C                     	;# 
  3419  068D                     	;# 
  3420  068E                     	;# 
  3421  068F                     	;# 
  3422  0690                     	;# 
  3423  0691                     	;# 
  3424  0692                     	;# 
  3425  0693                     	;# 
  3426  0694                     	;# 
  3427  070C                     	;# 
  3428  070D                     	;# 
  3429  070E                     	;# 
  3430  070F                     	;# 
  3431  0710                     	;# 
  3432  0711                     	;# 
  3433  0712                     	;# 
  3434  0713                     	;# 
  3435  0714                     	;# 
  3436  0716                     	;# 
  3437  0717                     	;# 
  3438  0718                     	;# 
  3439  0719                     	;# 
  3440  071A                     	;# 
  3441  071B                     	;# 
  3442  071C                     	;# 
  3443  071D                     	;# 
  3444  071E                     	;# 
  3445  0796                     	;# 
  3446  0797                     	;# 
  3447  0798                     	;# 
  3448  0799                     	;# 
  3449  079A                     	;# 
  3450  079B                     	;# 
  3451  080C                     	;# 
  3452  080D                     	;# 
  3453  080E                     	;# 
  3454  080F                     	;# 
  3455  0810                     	;# 
  3456  0811                     	;# 
  3457  0812                     	;# 
  3458  0813                     	;# 
  3459  0814                     	;# 
  3460  081A                     	;# 
  3461  081B                     	;# 
  3462  081C                     	;# 
  3463  081D                     	;# 
  3464  081E                     	;# 
  3465  081F                     	;# 
  3466  088C                     	;# 
  3467  088D                     	;# 
  3468  088E                     	;# 
  3469  088F                     	;# 
  3470  0890                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0893                     	;# 
  3474  0895                     	;# 
  3475  0896                     	;# 
  3476  0897                     	;# 
  3477  0898                     	;# 
  3478  0899                     	;# 
  3479  089A                     	;# 
  3480  089B                     	;# 
  3481  090C                     	;# 
  3482  090E                     	;# 
  3483  090F                     	;# 
  3484  091F                     	;# 
  3485  091F                     	;# 
  3486  098F                     	;# 
  3487  098F                     	;# 
  3488  0990                     	;# 
  3489  0991                     	;# 
  3490  0992                     	;# 
  3491  0993                     	;# 
  3492  0994                     	;# 
  3493  0995                     	;# 
  3494  0996                     	;# 
  3495  0997                     	;# 
  3496  0E0F                     	;# 
  3497  0E10                     	;# 
  3498  0E11                     	;# 
  3499  0E12                     	;# 
  3500  0E13                     	;# 
  3501  0E14                     	;# 
  3502  0E15                     	;# 
  3503  0E16                     	;# 
  3504  0E17                     	;# 
  3505  0E18                     	;# 
  3506  0E19                     	;# 
  3507  0E1A                     	;# 
  3508  0E1B                     	;# 
  3509  0E1C                     	;# 
  3510  0E1D                     	;# 
  3511  0E1E                     	;# 
  3512  0E1F                     	;# 
  3513  0E20                     	;# 
  3514  0E21                     	;# 
  3515  0E22                     	;# 
  3516  0E23                     	;# 
  3517  0E24                     	;# 
  3518  0E25                     	;# 
  3519  0E26                     	;# 
  3520  0E27                     	;# 
  3521  0E28                     	;# 
  3522  0E29                     	;# 
  3523  0E2A                     	;# 
  3524  0E2B                     	;# 
  3525  0E2C                     	;# 
  3526  0E2D                     	;# 
  3527  0E2E                     	;# 
  3528  0E2F                     	;# 
  3529  0E30                     	;# 
  3530  0E31                     	;# 
  3531  0E32                     	;# 
  3532  0E33                     	;# 
  3533  0E34                     	;# 
  3534  0E35                     	;# 
  3535  0E36                     	;# 
  3536  0E37                     	;# 
  3537  0E8F                     	;# 
  3538  0E90                     	;# 
  3539  0E91                     	;# 
  3540  0E92                     	;# 
  3541  0E93                     	;# 
  3542  0E94                     	;# 
  3543  0E95                     	;# 
  3544  0E96                     	;# 
  3545  0E97                     	;# 
  3546  0E9C                     	;# 
  3547  0E9D                     	;# 
  3548  0E9E                     	;# 
  3549  0EA1                     	;# 
  3550  0EA2                     	;# 
  3551  0EA3                     	;# 
  3552  0EA4                     	;# 
  3553  0EA5                     	;# 
  3554  0EA9                     	;# 
  3555  0EAA                     	;# 
  3556  0EAB                     	;# 
  3557  0EAC                     	;# 
  3558  0EB1                     	;# 
  3559  0EB2                     	;# 
  3560  0EB3                     	;# 
  3561  0EB8                     	;# 
  3562  0EB9                     	;# 
  3563  0EBA                     	;# 
  3564  0EBB                     	;# 
  3565  0EBC                     	;# 
  3566  0EBD                     	;# 
  3567  0EBE                     	;# 
  3568  0EC3                     	;# 
  3569  0EC5                     	;# 
  3570  0EC6                     	;# 
  3571  0EC7                     	;# 
  3572  0EC8                     	;# 
  3573  0EC9                     	;# 
  3574  0ECA                     	;# 
  3575  0ECB                     	;# 
  3576  0ECC                     	;# 
  3577  0F10                     	;# 
  3578  0F11                     	;# 
  3579  0F12                     	;# 
  3580  0F13                     	;# 
  3581  0F14                     	;# 
  3582  0F15                     	;# 
  3583  0F16                     	;# 
  3584  0F17                     	;# 
  3585  0F18                     	;# 
  3586  0F19                     	;# 
  3587  0F1A                     	;# 
  3588  0F1B                     	;# 
  3589  0F1C                     	;# 
  3590  0F1D                     	;# 
  3591  0F1E                     	;# 
  3592  0F1F                     	;# 
  3593  0F20                     	;# 
  3594  0F21                     	;# 
  3595  0F22                     	;# 
  3596  0F23                     	;# 
  3597  0F24                     	;# 
  3598  0F25                     	;# 
  3599  0F26                     	;# 
  3600  0F27                     	;# 
  3601  0F38                     	;# 
  3602  0F39                     	;# 
  3603  0F3A                     	;# 
  3604  0F3B                     	;# 
  3605  0F3C                     	;# 
  3606  0F3D                     	;# 
  3607  0F3E                     	;# 
  3608  0F3F                     	;# 
  3609  0F40                     	;# 
  3610  0F41                     	;# 
  3611  0F43                     	;# 
  3612  0F44                     	;# 
  3613  0F45                     	;# 
  3614  0F46                     	;# 
  3615  0F47                     	;# 
  3616  0F48                     	;# 
  3617  0F49                     	;# 
  3618  0F4A                     	;# 
  3619  0F4B                     	;# 
  3620  0F4C                     	;# 
  3621  0F4E                     	;# 
  3622  0F4F                     	;# 
  3623  0F50                     	;# 
  3624  0F51                     	;# 
  3625  0F52                     	;# 
  3626  0F53                     	;# 
  3627  0F54                     	;# 
  3628  0F55                     	;# 
  3629  0F56                     	;# 
  3630  0F57                     	;# 
  3631  0F65                     	;# 
  3632  0F68                     	;# 
  3633  0F69                     	;# 
  3634  0F6A                     	;# 
  3635  0F6B                     	;# 
  3636  0FE4                     	;# 
  3637  0FE5                     	;# 
  3638  0FE6                     	;# 
  3639  0FE7                     	;# 
  3640  0FE8                     	;# 
  3641  0FE9                     	;# 
  3642  0FEA                     	;# 
  3643  0FEB                     	;# 
  3644  0FED                     	;# 
  3645  0FEE                     	;# 
  3646  0FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000D                     	;# 
  3661  000E                     	;# 
  3662  0010                     	;# 
  3663  0011                     	;# 
  3664  0012                     	;# 
  3665  0013                     	;# 
  3666  0016                     	;# 
  3667  0017                     	;# 
  3668  0018                     	;# 
  3669  001C                     	;# 
  3670  001C                     	;# 
  3671  001D                     	;# 
  3672  001D                     	;# 
  3673  001E                     	;# 
  3674  001F                     	;# 
  3675  008C                     	;# 
  3676  008C                     	;# 
  3677  008D                     	;# 
  3678  008E                     	;# 
  3679  008E                     	;# 
  3680  008F                     	;# 
  3681  0090                     	;# 
  3682  0090                     	;# 
  3683  0091                     	;# 
  3684  0093                     	;# 
  3685  0094                     	;# 
  3686  0095                     	;# 
  3687  0096                     	;# 
  3688  0097                     	;# 
  3689  0098                     	;# 
  3690  0099                     	;# 
  3691  009A                     	;# 
  3692  009B                     	;# 
  3693  009C                     	;# 
  3694  009D                     	;# 
  3695  009E                     	;# 
  3696  010C                     	;# 
  3697  010D                     	;# 
  3698  010E                     	;# 
  3699  010E                     	;# 
  3700  010F                     	;# 
  3701  0110                     	;# 
  3702  0110                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0112                     	;# 
  3706  0113                     	;# 
  3707  0114                     	;# 
  3708  0114                     	;# 
  3709  0115                     	;# 
  3710  0116                     	;# 
  3711  0116                     	;# 
  3712  0117                     	;# 
  3713  0119                     	;# 
  3714  0119                     	;# 
  3715  0119                     	;# 
  3716  011A                     	;# 
  3717  011A                     	;# 
  3718  011A                     	;# 
  3719  011B                     	;# 
  3720  011B                     	;# 
  3721  011B                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011C                     	;# 
  3725  011C                     	;# 
  3726  011C                     	;# 
  3727  011D                     	;# 
  3728  011D                     	;# 
  3729  011D                     	;# 
  3730  011E                     	;# 
  3731  011E                     	;# 
  3732  011E                     	;# 
  3733  011F                     	;# 
  3734  011F                     	;# 
  3735  011F                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  018C                     	;# 
  3739  018D                     	;# 
  3740  018E                     	;# 
  3741  018F                     	;# 
  3742  0190                     	;# 
  3743  0191                     	;# 
  3744  0192                     	;# 
  3745  0196                     	;# 
  3746  0197                     	;# 
  3747  0198                     	;# 
  3748  0199                     	;# 
  3749  019A                     	;# 
  3750  019B                     	;# 
  3751  019C                     	;# 
  3752  020C                     	;# 
  3753  020D                     	;# 
  3754  020E                     	;# 
  3755  020F                     	;# 
  3756  020F                     	;# 
  3757  0210                     	;# 
  3758  0210                     	;# 
  3759  0211                     	;# 
  3760  0211                     	;# 
  3761  0212                     	;# 
  3762  0213                     	;# 
  3763  0214                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0218                     	;# 
  3771  0219                     	;# 
  3772  021A                     	;# 
  3773  021B                     	;# 
  3774  021B                     	;# 
  3775  021C                     	;# 
  3776  021C                     	;# 
  3777  021D                     	;# 
  3778  021D                     	;# 
  3779  021E                     	;# 
  3780  021F                     	;# 
  3781  028C                     	;# 
  3782  028C                     	;# 
  3783  028D                     	;# 
  3784  028D                     	;# 
  3785  028E                     	;# 
  3786  028F                     	;# 
  3787  0290                     	;# 
  3788  0290                     	;# 
  3789  0291                     	;# 
  3790  0292                     	;# 
  3791  0292                     	;# 
  3792  0293                     	;# 
  3793  0293                     	;# 
  3794  0294                     	;# 
  3795  0295                     	;# 
  3796  0296                     	;# 
  3797  0296                     	;# 
  3798  0297                     	;# 
  3799  0298                     	;# 
  3800  0298                     	;# 
  3801  0299                     	;# 
  3802  0299                     	;# 
  3803  029A                     	;# 
  3804  029B                     	;# 
  3805  029C                     	;# 
  3806  029C                     	;# 
  3807  029D                     	;# 
  3808  030C                     	;# 
  3809  030C                     	;# 
  3810  030D                     	;# 
  3811  030E                     	;# 
  3812  030F                     	;# 
  3813  0310                     	;# 
  3814  0310                     	;# 
  3815  0311                     	;# 
  3816  0312                     	;# 
  3817  0313                     	;# 
  3818  0314                     	;# 
  3819  0314                     	;# 
  3820  0315                     	;# 
  3821  0316                     	;# 
  3822  0317                     	;# 
  3823  0318                     	;# 
  3824  0318                     	;# 
  3825  0319                     	;# 
  3826  031A                     	;# 
  3827  031B                     	;# 
  3828  031C                     	;# 
  3829  031C                     	;# 
  3830  031D                     	;# 
  3831  031E                     	;# 
  3832  031F                     	;# 
  3833  038C                     	;# 
  3834  038D                     	;# 
  3835  038E                     	;# 
  3836  0390                     	;# 
  3837  0391                     	;# 
  3838  0392                     	;# 
  3839  040C                     	;# 
  3840  040D                     	;# 
  3841  040E                     	;# 
  3842  040F                     	;# 
  3843  0410                     	;# 
  3844  0411                     	;# 
  3845  0416                     	;# 
  3846  0416                     	;# 
  3847  0417                     	;# 
  3848  0418                     	;# 
  3849  0418                     	;# 
  3850  0419                     	;# 
  3851  041A                     	;# 
  3852  041A                     	;# 
  3853  041B                     	;# 
  3854  041C                     	;# 
  3855  041C                     	;# 
  3856  041D                     	;# 
  3857  041E                     	;# 
  3858  041F                     	;# 
  3859  048C                     	;# 
  3860  048C                     	;# 
  3861  048D                     	;# 
  3862  048E                     	;# 
  3863  048F                     	;# 
  3864  048F                     	;# 
  3865  0490                     	;# 
  3866  0491                     	;# 
  3867  0492                     	;# 
  3868  0492                     	;# 
  3869  0493                     	;# 
  3870  0494                     	;# 
  3871  0495                     	;# 
  3872  0495                     	;# 
  3873  0496                     	;# 
  3874  0497                     	;# 
  3875  0498                     	;# 
  3876  0499                     	;# 
  3877  049A                     	;# 
  3878  049B                     	;# 
  3879  049C                     	;# 
  3880  049D                     	;# 
  3881  050C                     	;# 
  3882  050C                     	;# 
  3883  050D                     	;# 
  3884  050E                     	;# 
  3885  050F                     	;# 
  3886  050F                     	;# 
  3887  0510                     	;# 
  3888  0511                     	;# 
  3889  0512                     	;# 
  3890  0512                     	;# 
  3891  0513                     	;# 
  3892  0514                     	;# 
  3893  0515                     	;# 
  3894  0515                     	;# 
  3895  0516                     	;# 
  3896  0517                     	;# 
  3897  0518                     	;# 
  3898  0519                     	;# 
  3899  051A                     	;# 
  3900  051B                     	;# 
  3901  051C                     	;# 
  3902  051D                     	;# 
  3903  058C                     	;# 
  3904  058C                     	;# 
  3905  058D                     	;# 
  3906  058E                     	;# 
  3907  058F                     	;# 
  3908  058F                     	;# 
  3909  0590                     	;# 
  3910  0591                     	;# 
  3911  0592                     	;# 
  3912  0593                     	;# 
  3913  060C                     	;# 
  3914  060D                     	;# 
  3915  060E                     	;# 
  3916  060F                     	;# 
  3917  0610                     	;# 
  3918  0611                     	;# 
  3919  0612                     	;# 
  3920  0613                     	;# 
  3921  0614                     	;# 
  3922  0616                     	;# 
  3923  0617                     	;# 
  3924  0618                     	;# 
  3925  0619                     	;# 
  3926  061A                     	;# 
  3927  061B                     	;# 
  3928  061C                     	;# 
  3929  061D                     	;# 
  3930  061E                     	;# 
  3931  068C                     	;# 
  3932  068D                     	;# 
  3933  068E                     	;# 
  3934  068F                     	;# 
  3935  0690                     	;# 
  3936  0691                     	;# 
  3937  0692                     	;# 
  3938  0693                     	;# 
  3939  0694                     	;# 
  3940  070C                     	;# 
  3941  070D                     	;# 
  3942  070E                     	;# 
  3943  070F                     	;# 
  3944  0710                     	;# 
  3945  0711                     	;# 
  3946  0712                     	;# 
  3947  0713                     	;# 
  3948  0714                     	;# 
  3949  0716                     	;# 
  3950  0717                     	;# 
  3951  0718                     	;# 
  3952  0719                     	;# 
  3953  071A                     	;# 
  3954  071B                     	;# 
  3955  071C                     	;# 
  3956  071D                     	;# 
  3957  071E                     	;# 
  3958  0796                     	;# 
  3959  0797                     	;# 
  3960  0798                     	;# 
  3961  0799                     	;# 
  3962  079A                     	;# 
  3963  079B                     	;# 
  3964  080C                     	;# 
  3965  080D                     	;# 
  3966  080E                     	;# 
  3967  080F                     	;# 
  3968  0810                     	;# 
  3969  0811                     	;# 
  3970  0812                     	;# 
  3971  0813                     	;# 
  3972  0814                     	;# 
  3973  081A                     	;# 
  3974  081B                     	;# 
  3975  081C                     	;# 
  3976  081D                     	;# 
  3977  081E                     	;# 
  3978  081F                     	;# 
  3979  088C                     	;# 
  3980  088D                     	;# 
  3981  088E                     	;# 
  3982  088F                     	;# 
  3983  0890                     	;# 
  3984  0891                     	;# 
  3985  0892                     	;# 
  3986  0893                     	;# 
  3987  0895                     	;# 
  3988  0896                     	;# 
  3989  0897                     	;# 
  3990  0898                     	;# 
  3991  0899                     	;# 
  3992  089A                     	;# 
  3993  089B                     	;# 
  3994  090C                     	;# 
  3995  090E                     	;# 
  3996  090F                     	;# 
  3997  091F                     	;# 
  3998  091F                     	;# 
  3999  098F                     	;# 
  4000  098F                     	;# 
  4001  0990                     	;# 
  4002  0991                     	;# 
  4003  0992                     	;# 
  4004  0993                     	;# 
  4005  0994                     	;# 
  4006  0995                     	;# 
  4007  0996                     	;# 
  4008  0997                     	;# 
  4009  0E0F                     	;# 
  4010  0E10                     	;# 
  4011  0E11                     	;# 
  4012  0E12                     	;# 
  4013  0E13                     	;# 
  4014  0E14                     	;# 
  4015  0E15                     	;# 
  4016  0E16                     	;# 
  4017  0E17                     	;# 
  4018  0E18                     	;# 
  4019  0E19                     	;# 
  4020  0E1A                     	;# 
  4021  0E1B                     	;# 
  4022  0E1C                     	;# 
  4023  0E1D                     	;# 
  4024  0E1E                     	;# 
  4025  0E1F                     	;# 
  4026  0E20                     	;# 
  4027  0E21                     	;# 
  4028  0E22                     	;# 
  4029  0E23                     	;# 
  4030  0E24                     	;# 
  4031  0E25                     	;# 
  4032  0E26                     	;# 
  4033  0E27                     	;# 
  4034  0E28                     	;# 
  4035  0E29                     	;# 
  4036  0E2A                     	;# 
  4037  0E2B                     	;# 
  4038  0E2C                     	;# 
  4039  0E2D                     	;# 
  4040  0E2E                     	;# 
  4041  0E2F                     	;# 
  4042  0E30                     	;# 
  4043  0E31                     	;# 
  4044  0E32                     	;# 
  4045  0E33                     	;# 
  4046  0E34                     	;# 
  4047  0E35                     	;# 
  4048  0E36                     	;# 
  4049  0E37                     	;# 
  4050  0E8F                     	;# 
  4051  0E90                     	;# 
  4052  0E91                     	;# 
  4053  0E92                     	;# 
  4054  0E93                     	;# 
  4055  0E94                     	;# 
  4056  0E95                     	;# 
  4057  0E96                     	;# 
  4058  0E97                     	;# 
  4059  0E9C                     	;# 
  4060  0E9D                     	;# 
  4061  0E9E                     	;# 
  4062  0EA1                     	;# 
  4063  0EA2                     	;# 
  4064  0EA3                     	;# 
  4065  0EA4                     	;# 
  4066  0EA5                     	;# 
  4067  0EA9                     	;# 
  4068  0EAA                     	;# 
  4069  0EAB                     	;# 
  4070  0EAC                     	;# 
  4071  0EB1                     	;# 
  4072  0EB2                     	;# 
  4073  0EB3                     	;# 
  4074  0EB8                     	;# 
  4075  0EB9                     	;# 
  4076  0EBA                     	;# 
  4077  0EBB                     	;# 
  4078  0EBC                     	;# 
  4079  0EBD                     	;# 
  4080  0EBE                     	;# 
  4081  0EC3                     	;# 
  4082  0EC5                     	;# 
  4083  0EC6                     	;# 
  4084  0EC7                     	;# 
  4085  0EC8                     	;# 
  4086  0EC9                     	;# 
  4087  0ECA                     	;# 
  4088  0ECB                     	;# 
  4089  0ECC                     	;# 
  4090  0F10                     	;# 
  4091  0F11                     	;# 
  4092  0F12                     	;# 
  4093  0F13                     	;# 
  4094  0F14                     	;# 
  4095  0F15                     	;# 
  4096  0F16                     	;# 
  4097  0F17                     	;# 
  4098  0F18                     	;# 
  4099  0F19                     	;# 
  4100  0F1A                     	;# 
  4101  0F1B                     	;# 
  4102  0F1C                     	;# 
  4103  0F1D                     	;# 
  4104  0F1E                     	;# 
  4105  0F1F                     	;# 
  4106  0F20                     	;# 
  4107  0F21                     	;# 
  4108  0F22                     	;# 
  4109  0F23                     	;# 
  4110  0F24                     	;# 
  4111  0F25                     	;# 
  4112  0F26                     	;# 
  4113  0F27                     	;# 
  4114  0F38                     	;# 
  4115  0F39                     	;# 
  4116  0F3A                     	;# 
  4117  0F3B                     	;# 
  4118  0F3C                     	;# 
  4119  0F3D                     	;# 
  4120  0F3E                     	;# 
  4121  0F3F                     	;# 
  4122  0F40                     	;# 
  4123  0F41                     	;# 
  4124  0F43                     	;# 
  4125  0F44                     	;# 
  4126  0F45                     	;# 
  4127  0F46                     	;# 
  4128  0F47                     	;# 
  4129  0F48                     	;# 
  4130  0F49                     	;# 
  4131  0F4A                     	;# 
  4132  0F4B                     	;# 
  4133  0F4C                     	;# 
  4134  0F4E                     	;# 
  4135  0F4F                     	;# 
  4136  0F50                     	;# 
  4137  0F51                     	;# 
  4138  0F52                     	;# 
  4139  0F53                     	;# 
  4140  0F54                     	;# 
  4141  0F55                     	;# 
  4142  0F56                     	;# 
  4143  0F57                     	;# 
  4144  0F65                     	;# 
  4145  0F68                     	;# 
  4146  0F69                     	;# 
  4147  0F6A                     	;# 
  4148  0F6B                     	;# 
  4149  0FE4                     	;# 
  4150  0FE5                     	;# 
  4151  0FE6                     	;# 
  4152  0FE7                     	;# 
  4153  0FE8                     	;# 
  4154  0FE9                     	;# 
  4155  0FEA                     	;# 
  4156  0FEB                     	;# 
  4157  0FED                     	;# 
  4158  0FEE                     	;# 
  4159  0FEF                     	;# 
  4160  0000                     	;# 
  4161  0001                     	;# 
  4162  0002                     	;# 
  4163  0003                     	;# 
  4164  0004                     	;# 
  4165  0005                     	;# 
  4166  0006                     	;# 
  4167  0007                     	;# 
  4168  0008                     	;# 
  4169  0009                     	;# 
  4170  000A                     	;# 
  4171  000B                     	;# 
  4172  000C                     	;# 
  4173  000D                     	;# 
  4174  000E                     	;# 
  4175  0010                     	;# 
  4176  0011                     	;# 
  4177  0012                     	;# 
  4178  0013                     	;# 
  4179  0016                     	;# 
  4180  0017                     	;# 
  4181  0018                     	;# 
  4182  001C                     	;# 
  4183  001C                     	;# 
  4184  001D                     	;# 
  4185  001D                     	;# 
  4186  001E                     	;# 
  4187  001F                     	;# 
  4188  008C                     	;# 
  4189  008C                     	;# 
  4190  008D                     	;# 
  4191  008E                     	;# 
  4192  008E                     	;# 
  4193  008F                     	;# 
  4194  0090                     	;# 
  4195  0090                     	;# 
  4196  0091                     	;# 
  4197  0093                     	;# 
  4198  0094                     	;# 
  4199  0095                     	;# 
  4200  0096                     	;# 
  4201  0097                     	;# 
  4202  0098                     	;# 
  4203  0099                     	;# 
  4204  009A                     	;# 
  4205  009B                     	;# 
  4206  009C                     	;# 
  4207  009D                     	;# 
  4208  009E                     	;# 
  4209  010C                     	;# 
  4210  010D                     	;# 
  4211  010E                     	;# 
  4212  010E                     	;# 
  4213  010F                     	;# 
  4214  0110                     	;# 
  4215  0110                     	;# 
  4216  0111                     	;# 
  4217  0112                     	;# 
  4218  0112                     	;# 
  4219  0113                     	;# 
  4220  0114                     	;# 
  4221  0114                     	;# 
  4222  0115                     	;# 
  4223  0116                     	;# 
  4224  0116                     	;# 
  4225  0117                     	;# 
  4226  0119                     	;# 
  4227  0119                     	;# 
  4228  0119                     	;# 
  4229  011A                     	;# 
  4230  011A                     	;# 
  4231  011A                     	;# 
  4232  011B                     	;# 
  4233  011B                     	;# 
  4234  011B                     	;# 
  4235  011B                     	;# 
  4236  011B                     	;# 
  4237  011C                     	;# 
  4238  011C                     	;# 
  4239  011C                     	;# 
  4240  011D                     	;# 
  4241  011D                     	;# 
  4242  011D                     	;# 
  4243  011E                     	;# 
  4244  011E                     	;# 
  4245  011E                     	;# 
  4246  011F                     	;# 
  4247  011F                     	;# 
  4248  011F                     	;# 
  4249  011F                     	;# 
  4250  011F                     	;# 
  4251  018C                     	;# 
  4252  018D                     	;# 
  4253  018E                     	;# 
  4254  018F                     	;# 
  4255  0190                     	;# 
  4256  0191                     	;# 
  4257  0192                     	;# 
  4258  0196                     	;# 
  4259  0197                     	;# 
  4260  0198                     	;# 
  4261  0199                     	;# 
  4262  019A                     	;# 
  4263  019B                     	;# 
  4264  019C                     	;# 
  4265  020C                     	;# 
  4266  020D                     	;# 
  4267  020E                     	;# 
  4268  020F                     	;# 
  4269  020F                     	;# 
  4270  0210                     	;# 
  4271  0210                     	;# 
  4272  0211                     	;# 
  4273  0211                     	;# 
  4274  0212                     	;# 
  4275  0213                     	;# 
  4276  0214                     	;# 
  4277  0215                     	;# 
  4278  0215                     	;# 
  4279  0216                     	;# 
  4280  0216                     	;# 
  4281  0217                     	;# 
  4282  0217                     	;# 
  4283  0218                     	;# 
  4284  0219                     	;# 
  4285  021A                     	;# 
  4286  021B                     	;# 
  4287  021B                     	;# 
  4288  021C                     	;# 
  4289  021C                     	;# 
  4290  021D                     	;# 
  4291  021D                     	;# 
  4292  021E                     	;# 
  4293  021F                     	;# 
  4294  028C                     	;# 
  4295  028C                     	;# 
  4296  028D                     	;# 
  4297  028D                     	;# 
  4298  028E                     	;# 
  4299  028F                     	;# 
  4300  0290                     	;# 
  4301  0290                     	;# 
  4302  0291                     	;# 
  4303  0292                     	;# 
  4304  0292                     	;# 
  4305  0293                     	;# 
  4306  0293                     	;# 
  4307  0294                     	;# 
  4308  0295                     	;# 
  4309  0296                     	;# 
  4310  0296                     	;# 
  4311  0297                     	;# 
  4312  0298                     	;# 
  4313  0298                     	;# 
  4314  0299                     	;# 
  4315  0299                     	;# 
  4316  029A                     	;# 
  4317  029B                     	;# 
  4318  029C                     	;# 
  4319  029C                     	;# 
  4320  029D                     	;# 
  4321  030C                     	;# 
  4322  030C                     	;# 
  4323  030D                     	;# 
  4324  030E                     	;# 
  4325  030F                     	;# 
  4326  0310                     	;# 
  4327  0310                     	;# 
  4328  0311                     	;# 
  4329  0312                     	;# 
  4330  0313                     	;# 
  4331  0314                     	;# 
  4332  0314                     	;# 
  4333  0315                     	;# 
  4334  0316                     	;# 
  4335  0317                     	;# 
  4336  0318                     	;# 
  4337  0318                     	;# 
  4338  0319                     	;# 
  4339  031A                     	;# 
  4340  031B                     	;# 
  4341  031C                     	;# 
  4342  031C                     	;# 
  4343  031D                     	;# 
  4344  031E                     	;# 
  4345  031F                     	;# 
  4346  038C                     	;# 
  4347  038D                     	;# 
  4348  038E                     	;# 
  4349  0390                     	;# 
  4350  0391                     	;# 
  4351  0392                     	;# 
  4352  040C                     	;# 
  4353  040D                     	;# 
  4354  040E                     	;# 
  4355  040F                     	;# 
  4356  0410                     	;# 
  4357  0411                     	;# 
  4358  0416                     	;# 
  4359  0416                     	;# 
  4360  0417                     	;# 
  4361  0418                     	;# 
  4362  0418                     	;# 
  4363  0419                     	;# 
  4364  041A                     	;# 
  4365  041A                     	;# 
  4366  041B                     	;# 
  4367  041C                     	;# 
  4368  041C                     	;# 
  4369  041D                     	;# 
  4370  041E                     	;# 
  4371  041F                     	;# 
  4372  048C                     	;# 
  4373  048C                     	;# 
  4374  048D                     	;# 
  4375  048E                     	;# 
  4376  048F                     	;# 
  4377  048F                     	;# 
  4378  0490                     	;# 
  4379  0491                     	;# 
  4380  0492                     	;# 
  4381  0492                     	;# 
  4382  0493                     	;# 
  4383  0494                     	;# 
  4384  0495                     	;# 
  4385  0495                     	;# 
  4386  0496                     	;# 
  4387  0497                     	;# 
  4388  0498                     	;# 
  4389  0499                     	;# 
  4390  049A                     	;# 
  4391  049B                     	;# 
  4392  049C                     	;# 
  4393  049D                     	;# 
  4394  050C                     	;# 
  4395  050C                     	;# 
  4396  050D                     	;# 
  4397  050E                     	;# 
  4398  050F                     	;# 
  4399  050F                     	;# 
  4400  0510                     	;# 
  4401  0511                     	;# 
  4402  0512                     	;# 
  4403  0512                     	;# 
  4404  0513                     	;# 
  4405  0514                     	;# 
  4406  0515                     	;# 
  4407  0515                     	;# 
  4408  0516                     	;# 
  4409  0517                     	;# 
  4410  0518                     	;# 
  4411  0519                     	;# 
  4412  051A                     	;# 
  4413  051B                     	;# 
  4414  051C                     	;# 
  4415  051D                     	;# 
  4416  058C                     	;# 
  4417  058C                     	;# 
  4418  058D                     	;# 
  4419  058E                     	;# 
  4420  058F                     	;# 
  4421  058F                     	;# 
  4422  0590                     	;# 
  4423  0591                     	;# 
  4424  0592                     	;# 
  4425  0593                     	;# 
  4426  060C                     	;# 
  4427  060D                     	;# 
  4428  060E                     	;# 
  4429  060F                     	;# 
  4430  0610                     	;# 
  4431  0611                     	;# 
  4432  0612                     	;# 
  4433  0613                     	;# 
  4434  0614                     	;# 
  4435  0616                     	;# 
  4436  0617                     	;# 
  4437  0618                     	;# 
  4438  0619                     	;# 
  4439  061A                     	;# 
  4440  061B                     	;# 
  4441  061C                     	;# 
  4442  061D                     	;# 
  4443  061E                     	;# 
  4444  068C                     	;# 
  4445  068D                     	;# 
  4446  068E                     	;# 
  4447  068F                     	;# 
  4448  0690                     	;# 
  4449  0691                     	;# 
  4450  0692                     	;# 
  4451  0693                     	;# 
  4452  0694                     	;# 
  4453  070C                     	;# 
  4454  070D                     	;# 
  4455  070E                     	;# 
  4456  070F                     	;# 
  4457  0710                     	;# 
  4458  0711                     	;# 
  4459  0712                     	;# 
  4460  0713                     	;# 
  4461  0714                     	;# 
  4462  0716                     	;# 
  4463  0717                     	;# 
  4464  0718                     	;# 
  4465  0719                     	;# 
  4466  071A                     	;# 
  4467  071B                     	;# 
  4468  071C                     	;# 
  4469  071D                     	;# 
  4470  071E                     	;# 
  4471  0796                     	;# 
  4472  0797                     	;# 
  4473  0798                     	;# 
  4474  0799                     	;# 
  4475  079A                     	;# 
  4476  079B                     	;# 
  4477  080C                     	;# 
  4478  080D                     	;# 
  4479  080E                     	;# 
  4480  080F                     	;# 
  4481  0810                     	;# 
  4482  0811                     	;# 
  4483  0812                     	;# 
  4484  0813                     	;# 
  4485  0814                     	;# 
  4486  081A                     	;# 
  4487  081B                     	;# 
  4488  081C                     	;# 
  4489  081D                     	;# 
  4490  081E                     	;# 
  4491  081F                     	;# 
  4492  088C                     	;# 
  4493  088D                     	;# 
  4494  088E                     	;# 
  4495  088F                     	;# 
  4496  0890                     	;# 
  4497  0891                     	;# 
  4498  0892                     	;# 
  4499  0893                     	;# 
  4500  0895                     	;# 
  4501  0896                     	;# 
  4502  0897                     	;# 
  4503  0898                     	;# 
  4504  0899                     	;# 
  4505  089A                     	;# 
  4506  089B                     	;# 
  4507  090C                     	;# 
  4508  090E                     	;# 
  4509  090F                     	;# 
  4510  091F                     	;# 
  4511  091F                     	;# 
  4512  098F                     	;# 
  4513  098F                     	;# 
  4514  0990                     	;# 
  4515  0991                     	;# 
  4516  0992                     	;# 
  4517  0993                     	;# 
  4518  0994                     	;# 
  4519  0995                     	;# 
  4520  0996                     	;# 
  4521  0997                     	;# 
  4522  0E0F                     	;# 
  4523  0E10                     	;# 
  4524  0E11                     	;# 
  4525  0E12                     	;# 
  4526  0E13                     	;# 
  4527  0E14                     	;# 
  4528  0E15                     	;# 
  4529  0E16                     	;# 
  4530  0E17                     	;# 
  4531  0E18                     	;# 
  4532  0E19                     	;# 
  4533  0E1A                     	;# 
  4534  0E1B                     	;# 
  4535  0E1C                     	;# 
  4536  0E1D                     	;# 
  4537  0E1E                     	;# 
  4538  0E1F                     	;# 
  4539  0E20                     	;# 
  4540  0E21                     	;# 
  4541  0E22                     	;# 
  4542  0E23                     	;# 
  4543  0E24                     	;# 
  4544  0E25                     	;# 
  4545  0E26                     	;# 
  4546  0E27                     	;# 
  4547  0E28                     	;# 
  4548  0E29                     	;# 
  4549  0E2A                     	;# 
  4550  0E2B                     	;# 
  4551  0E2C                     	;# 
  4552  0E2D                     	;# 
  4553  0E2E                     	;# 
  4554  0E2F                     	;# 
  4555  0E30                     	;# 
  4556  0E31                     	;# 
  4557  0E32                     	;# 
  4558  0E33                     	;# 
  4559  0E34                     	;# 
  4560  0E35                     	;# 
  4561  0E36                     	;# 
  4562  0E37                     	;# 
  4563  0E8F                     	;# 
  4564  0E90                     	;# 
  4565  0E91                     	;# 
  4566  0E92                     	;# 
  4567  0E93                     	;# 
  4568  0E94                     	;# 
  4569  0E95                     	;# 
  4570  0E96                     	;# 
  4571  0E97                     	;# 
  4572  0E9C                     	;# 
  4573  0E9D                     	;# 
  4574  0E9E                     	;# 
  4575  0EA1                     	;# 
  4576  0EA2                     	;# 
  4577  0EA3                     	;# 
  4578  0EA4                     	;# 
  4579  0EA5                     	;# 
  4580  0EA9                     	;# 
  4581  0EAA                     	;# 
  4582  0EAB                     	;# 
  4583  0EAC                     	;# 
  4584  0EB1                     	;# 
  4585  0EB2                     	;# 
  4586  0EB3                     	;# 
  4587  0EB8                     	;# 
  4588  0EB9                     	;# 
  4589  0EBA                     	;# 
  4590  0EBB                     	;# 
  4591  0EBC                     	;# 
  4592  0EBD                     	;# 
  4593  0EBE                     	;# 
  4594  0EC3                     	;# 
  4595  0EC5                     	;# 
  4596  0EC6                     	;# 
  4597  0EC7                     	;# 
  4598  0EC8                     	;# 
  4599  0EC9                     	;# 
  4600  0ECA                     	;# 
  4601  0ECB                     	;# 
  4602  0ECC                     	;# 
  4603  0F10                     	;# 
  4604  0F11                     	;# 
  4605  0F12                     	;# 
  4606  0F13                     	;# 
  4607  0F14                     	;# 
  4608  0F15                     	;# 
  4609  0F16                     	;# 
  4610  0F17                     	;# 
  4611  0F18                     	;# 
  4612  0F19                     	;# 
  4613  0F1A                     	;# 
  4614  0F1B                     	;# 
  4615  0F1C                     	;# 
  4616  0F1D                     	;# 
  4617  0F1E                     	;# 
  4618  0F1F                     	;# 
  4619  0F20                     	;# 
  4620  0F21                     	;# 
  4621  0F22                     	;# 
  4622  0F23                     	;# 
  4623  0F24                     	;# 
  4624  0F25                     	;# 
  4625  0F26                     	;# 
  4626  0F27                     	;# 
  4627  0F38                     	;# 
  4628  0F39                     	;# 
  4629  0F3A                     	;# 
  4630  0F3B                     	;# 
  4631  0F3C                     	;# 
  4632  0F3D                     	;# 
  4633  0F3E                     	;# 
  4634  0F3F                     	;# 
  4635  0F40                     	;# 
  4636  0F41                     	;# 
  4637  0F43                     	;# 
  4638  0F44                     	;# 
  4639  0F45                     	;# 
  4640  0F46                     	;# 
  4641  0F47                     	;# 
  4642  0F48                     	;# 
  4643  0F49                     	;# 
  4644  0F4A                     	;# 
  4645  0F4B                     	;# 
  4646  0F4C                     	;# 
  4647  0F4E                     	;# 
  4648  0F4F                     	;# 
  4649  0F50                     	;# 
  4650  0F51                     	;# 
  4651  0F52                     	;# 
  4652  0F53                     	;# 
  4653  0F54                     	;# 
  4654  0F55                     	;# 
  4655  0F56                     	;# 
  4656  0F57                     	;# 
  4657  0F65                     	;# 
  4658  0F68                     	;# 
  4659  0F69                     	;# 
  4660  0F6A                     	;# 
  4661  0F6B                     	;# 
  4662  0FE4                     	;# 
  4663  0FE5                     	;# 
  4664  0FE6                     	;# 
  4665  0FE7                     	;# 
  4666  0FE8                     	;# 
  4667  0FE9                     	;# 
  4668  0FEA                     	;# 
  4669  0FEB                     	;# 
  4670  0FED                     	;# 
  4671  0FEE                     	;# 
  4672  0FEF                     	;# 
  4673                           
  4674                           	psect	idataBANK1
  4675  08F4                     __pidataBANK1:	
  4676                           
  4677                           ;initializer for _channels
  4678  08F4  3401               	retlw	1
  4679  08F5  3400               	retlw	0
  4680  08F6  3403               	retlw	3
  4681  08F7  3400               	retlw	0
  4682                           
  4683                           ;initializer for _Kd
  4684  08F8  3402               	retlw	2
  4685  08F9  3400               	retlw	0
  4686                           
  4687                           ;initializer for _Ki
  4688  08FA  3401               	retlw	1
  4689  08FB  3400               	retlw	0
  4690                           
  4691                           ;initializer for _Kp
  4692  08FC  3404               	retlw	4
  4693  08FD  3400               	retlw	0
  4694                           
  4695                           ;initializer for _pidMaxOutput
  4696  08FE  34FF               	retlw	255
  4697  08FF  3407               	retlw	7
  4698                           
  4699                           	psect	idataBANK2
  4700  091C                     __pidataBANK2:	
  4701                           
  4702                           ;initializer for ___cgram
  4703  091C  340C               	retlw	12
  4704  091D  3412               	retlw	18
  4705  091E  3412               	retlw	18
  4706  091F  340C               	retlw	12
  4707  0920  3400               	retlw	0
  4708  0921  3400               	retlw	0
  4709  0922  3400               	retlw	0
  4710  0923  3400               	retlw	0
  4711  0924  3408               	retlw	8
  4712  0925  3404               	retlw	4
  4713  0926  3402               	retlw	2
  4714  0927  341F               	retlw	31
  4715  0928  3402               	retlw	2
  4716  0929  3404               	retlw	4
  4717  092A  3408               	retlw	8
  4718  092B  3400               	retlw	0
  4719                           
  4720                           	psect	stringtext
  4721  1000                     __pstringtext:	
  4722  1000                     log@coeff:	
  4723  1000  3400               	retlw	0
  4724  1001  3400               	retlw	0
  4725  1002  3400               	retlw	0
  4726  1003  3400               	retlw	0
  4727  1004  3480               	retlw	128
  4728  1005  343F               	retlw	63
  4729  1006  34F0               	retlw	240
  4730  1007  34FF               	retlw	255
  4731  1008  34BE               	retlw	190
  4732  1009  34E2               	retlw	226
  4733  100A  34A9               	retlw	169
  4734  100B  343E               	retlw	62
  4735  100C  3483               	retlw	131
  4736  100D  3476               	retlw	118
  4737  100E  34BE               	retlw	190
  4738  100F  34AE               	retlw	174
  4739  1010  342B               	retlw	43
  4740  1011  343E               	retlw	62
  4741  1012  343C               	retlw	60
  4742  1013  34C3               	retlw	195
  4743  1014  34BD               	retlw	189
  4744  1015  34D2               	retlw	210
  4745  1016  3413               	retlw	19
  4746  1017  343D               	retlw	61
  4747  1018  3478               	retlw	120
  4748  1019  34D3               	retlw	211
  4749  101A  34BB               	retlw	187
  4750  101B                     __end_oflog@coeff:	
  4751  0016                     _LATA	set	22
  4752  0017                     _LATB	set	23
  4753  0018                     _LATC	set	24
  4754  0011                     _TRISA	set	17
  4755  0012                     _TRISB	set	18
  4756  0013                     _TRISC	set	19
  4757  005F                     _GIE	set	95
  4758  00C2                     _LATC2	set	194
  4759  0060                     _RA0	set	96
  4760  0062                     _RA2	set	98
  4761  0066                     _RA6	set	102
  4762  0067                     _RA7	set	103
  4763  0068                     _RB0	set	104
  4764  0069                     _RB1	set	105
  4765  0070                     _RC0	set	112
  4766  0071                     _RC1	set	113
  4767  009D                     _ADACQ	set	157
  4768  0099                     _ADACT	set	153
  4769  009B                     _ADCAP	set	155
  4770  0098                     _ADCLK	set	152
  4771  0093                     _ADCON0	set	147
  4772  0093                     _ADCON0bits	set	147
  4773  0094                     _ADCON1	set	148
  4774  0095                     _ADCON2	set	149
  4775  0096                     _ADCON3	set	150
  4776  009E                     _ADPCH	set	158
  4777  009C                     _ADPRE	set	156
  4778  009A                     _ADREF	set	154
  4779  008D                     _ADRESH	set	141
  4780  008C                     _ADRESL	set	140
  4781  0097                     _ADSTAT	set	151
  4782  010F                     _ADLTHH	set	271
  4783  010E                     _ADLTHL	set	270
  4784  010D                     _ADRPT	set	269
  4785  0113                     _ADSTPTH	set	275
  4786  0112                     _ADSTPTL	set	274
  4787  0111                     _ADUTHH	set	273
  4788  0110                     _ADUTHL	set	272
  4789  021F                     _CCPTMRS1bits	set	543
  4790  0290                     _T2CLKCON	set	656
  4791  028E                     _T2CON	set	654
  4792  028E                     _T2CONbits	set	654
  4793  028F                     _T2HLT	set	655
  4794  028D                     _T2PR	set	653
  4795  0291                     _T2RST	set	657
  4796  028C                     _T2TMR	set	652
  4797  0392                     _PWM7CON	set	914
  4798  0391                     _PWM7DCH	set	913
  4799  0390                     _PWM7DCL	set	912
  4800  0716                     _PIE0bits	set	1814
  4801  0710                     _PIR4bits	set	1808
  4802  088D                     _OSCCON1	set	2189
  4803  088F                     _OSCCON3	set	2191
  4804  0891                     _OSCEN	set	2193
  4805  0893                     _OSCFRQ	set	2195
  4806  0892                     _OSCTUNE	set	2194
  4807  090C                     _FVRCON	set	2316
  4808  0E8F                     _PPSLOCK	set	3727
  4809  0E8F                     _PPSLOCKbits	set	3727
  4810  0F38                     _ANSELA	set	3896
  4811  0F43                     _ANSELB	set	3907
  4812  0F4E                     _ANSELC	set	3918
  4813  0F23                     _RC3PPS	set	3875
  4814  0F39                     _WPUA	set	3897
  4815  0F44                     _WPUB	set	3908
  4816  0F4F                     _WPUC	set	3919
  4817  0F65                     _WPUE	set	3941
  4818  101B                     STR_2:	
  4819  101B  344F               	retlw	79	;'O'
  4820  101C  3475               	retlw	117	;'u'
  4821  101D  3474               	retlw	116	;'t'
  4822  101E  3470               	retlw	112	;'p'
  4823  101F  3475               	retlw	117	;'u'
  4824  1020  3474               	retlw	116	;'t'
  4825  1021  343A               	retlw	58	;':'
  4826  1022  3400               	retlw	0
  4827  1023                     STR_1:	
  4828  1023  3450               	retlw	80	;'P'
  4829  1024  3469               	retlw	105	;'i'
  4830  1025  3474               	retlw	116	;'t'
  4831  1026  343A               	retlw	58	;':'
  4832  1027  3400               	retlw	0
  4833                           
  4834                           ; #config settings
  4835  0000                     
  4836                           	psect	cinit
  4837  07CE                     start_initialization:	
  4838  07CE                     __initialization:	
  4839                           
  4840                           ; Initialize objects allocated to BANK1
  4841  07CE  30F4               	movlw	low __pidataBANK1
  4842  07CF  0084               	movwf	4
  4843  07D0  3088               	movlw	(high __pidataBANK1)| (0+128)
  4844  07D1  0085               	movwf	5
  4845  07D2  30E2               	movlw	low __pdataBANK1
  4846  07D3  0086               	movwf	6
  4847  07D4  3000               	movlw	high __pdataBANK1
  4848  07D5  0087               	movwf	7
  4849  07D6  300C               	movlw	12
  4850  07D7  3188  20D2  3187   	fcall	init_ram
  4851                           
  4852                           ; Initialize objects allocated to BANK2
  4853  07DA  301C               	movlw	low __pidataBANK2
  4854  07DB  0084               	movwf	4
  4855  07DC  3089               	movlw	(high __pidataBANK2)| (0+128)
  4856  07DD  0085               	movwf	5
  4857  07DE  3020               	movlw	low __pdataBANK2
  4858  07DF  0086               	movwf	6
  4859  07E0  3001               	movlw	high __pdataBANK2
  4860  07E1  0087               	movwf	7
  4861  07E2  3010               	movlw	16
  4862  07E3  3188  20D2  3187   	fcall	init_ram
  4863                           
  4864                           ; Clear objects allocated to BANK1
  4865  07E6  30C2               	movlw	low __pbssBANK1
  4866  07E7  0084               	movwf	4
  4867  07E8  3000               	movlw	high __pbssBANK1
  4868  07E9  0085               	movwf	5
  4869  07EA  3020               	movlw	32
  4870  07EB  3188  20CC  3187   	fcall	clear_ram0
  4871                           
  4872                           ; Clear objects allocated to BANK2
  4873  07EE  3030               	movlw	low __pbssBANK2
  4874  07EF  0084               	movwf	4
  4875  07F0  3001               	movlw	high __pbssBANK2
  4876  07F1  0085               	movwf	5
  4877  07F2  3009               	movlw	9
  4878  07F3  3188  20CC  3187   	fcall	clear_ram0
  4879                           
  4880                           ; Clear objects allocated to BANK3
  4881  07F6  30A0               	movlw	low __pbssBANK3
  4882  07F7  0084               	movwf	4
  4883  07F8  3001               	movlw	high __pbssBANK3
  4884  07F9  0085               	movwf	5
  4885  07FA  3050               	movlw	80
  4886  07FB  3188  20CC         	fcall	clear_ram0
  4887  07FD                     end_of_initialization:	
  4888                           ;End of C runtime variable initialization code
  4889                           
  4890  07FD                     __end_of__initialization:	
  4891  07FD  0020               	movlb	0
  4892  07FE  3185  2D99         	ljmp	_main	;jump to C main() function
  4893                           
  4894                           	psect	bssBANK1
  4895  00C2                     __pbssBANK1:	
  4896  00C2                     _totals:	
  4897  00C2                     	ds	8
  4898  00CA                     _Result:	
  4899  00CA                     	ds	2
  4900  00CC                     _derivativeValue:	
  4901  00CC                     	ds	2
  4902  00CE                     _errno:	
  4903  00CE                     	ds	2
  4904  00D0                     _error:	
  4905  00D0                     	ds	2
  4906  00D2                     _errorValue:	
  4907  00D2                     	ds	2
  4908  00D4                     _lastSign:	
  4909  00D4                     	ds	2
  4910  00D6                     _pidCount:	
  4911  00D6                     	ds	2
  4912  00D8                     _pidIntegrated:	
  4913  00D8                     	ds	2
  4914  00DA                     _pidMinOutput:	
  4915  00DA                     	ds	2
  4916  00DC                     _pidPrevError:	
  4917  00DC                     	ds	2
  4918  00DE                     _sampleIndex:	
  4919  00DE                     	ds	2
  4920  00E0                     _signPositive:	
  4921  00E0                     	ds	2
  4922                           
  4923                           	psect	dataBANK1
  4924  00E2                     __pdataBANK1:	
  4925  00E2                     _channels:	
  4926  00E2                     	ds	4
  4927  00E6                     _Kd:	
  4928  00E6                     	ds	2
  4929  00E8                     _Ki:	
  4930  00E8                     	ds	2
  4931  00EA                     _Kp:	
  4932  00EA                     	ds	2
  4933  00EC                     _pidMaxOutput:	
  4934  00EC                     	ds	2
  4935                           
  4936                           	psect	bssBANK2
  4937  0130                     __pbssBANK2:	
  4938  0130                     LCD_Write_Int@F13690:	
  4939  0130                     	ds	5
  4940  0135                     main@F13660:	
  4941  0135                     	ds	4
  4942                           
  4943                           	psect	dataBANK2
  4944  0120                     __pdataBANK2:	
  4945  0120                     ___cgram:	
  4946  0120                     	ds	16
  4947                           
  4948                           	psect	bssBANK3
  4949  01A0                     __pbssBANK3:	
  4950  01A0                     _samples:	
  4951  01A0                     	ds	80
  4952                           
  4953                           	psect	inittext
  4954  08D2                     init_ram:	
  4955  08D2  00FE               	movwf	126
  4956  08D3                     initloop:	
  4957  08D3  0012               	moviw fsr0++
  4958  08D4  001E               	movwi fsr1++
  4959  08D5  0BFE               	decfsz	126,f
  4960  08D6  28D3               	goto	initloop
  4961  08D7  3400               	retlw	0
  4962                           
  4963                           	psect	clrtext
  4964  08CC                     clear_ram0:	
  4965                           ;	Called with FSR0 containing the base address, and
  4966                           ;	WREG with the size to clear
  4967                           
  4968  08CC  0064               	clrwdt	;clear the watchdog before getting into this loop
  4969  08CD                     clrloop0:	
  4970  08CD  0180               	clrf	0	;clear RAM location pointed to by FSR
  4971  08CE  3101               	addfsr 0,1
  4972  08CF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4973  08D0  28CD               	goto	clrloop0	;have we reached the end yet?
  4974  08D1  3400               	retlw	0	;all done for this memory range, return
  4975                           
  4976                           	psect	cstackBANK1
  4977  00A0                     __pcstackBANK1:	
  4978  00A0                     ??___fttol:	
  4979                           
  4980                           ; 1 bytes @ 0x0
  4981  00A0                     	ds	4
  4982  00A4                     ___fttol@sign1:	
  4983                           
  4984                           ; 1 bytes @ 0x4
  4985  00A4                     	ds	1
  4986  00A5                     ___fttol@lval:	
  4987                           
  4988                           ; 4 bytes @ 0x5
  4989  00A5                     	ds	4
  4990  00A9                     ___fttol@exp1:	
  4991                           
  4992                           ; 1 bytes @ 0x9
  4993  00A9                     	ds	1
  4994  00AA                     main@bCount:	
  4995                           
  4996                           ; 2 bytes @ 0xA
  4997  00AA                     	ds	2
  4998  00AC                     main@x:	
  4999                           
  5000                           ; 1 bytes @ 0xC
  5001  00AC                     	ds	1
  5002  00AD                     main@choice:	
  5003                           
  5004                           ; 1 bytes @ 0xD
  5005  00AD                     	ds	1
  5006  00AE                     main@C_or_F:	
  5007                           
  5008                           ; 1 bytes @ 0xE
  5009  00AE                     	ds	1
  5010  00AF                     main@startDelay:	
  5011                           
  5012                           ; 1 bytes @ 0xF
  5013  00AF                     	ds	1
  5014  00B0                     main@resetDelay:	
  5015                           
  5016                           ; 1 bytes @ 0x10
  5017  00B0                     	ds	1
  5018  00B1                     main@tPadCount:	
  5019                           
  5020                           ; 1 bytes @ 0x11
  5021  00B1                     	ds	1
  5022  00B2                     main@loop:	
  5023                           
  5024                           ; 1 bytes @ 0x12
  5025  00B2                     	ds	1
  5026  00B3                     main@menuDelay:	
  5027                           
  5028                           ; 1 bytes @ 0x13
  5029  00B3                     	ds	1
  5030  00B4                     main@dutyCycle6:	
  5031                           
  5032                           ; 2 bytes @ 0x14
  5033  00B4                     	ds	2
  5034  00B6                     main@dutyCycle7:	
  5035                           
  5036                           ; 2 bytes @ 0x16
  5037  00B6                     	ds	2
  5038  00B8                     main@pidPeriodCounter:	
  5039                           
  5040                           ; 2 bytes @ 0x18
  5041  00B8                     	ds	2
  5042  00BA                     main@analogs:	
  5043                           
  5044                           ; 4 bytes @ 0x1A
  5045  00BA                     	ds	4
  5046  00BE                     main@j:	
  5047                           
  5048                           ; 1 bytes @ 0x1E
  5049  00BE                     	ds	1
  5050  00BF                     main@set:	
  5051                           
  5052                           ; 2 bytes @ 0x1F
  5053  00BF                     	ds	2
  5054  00C1                     main@delayCount:	
  5055                           
  5056                           ; 1 bytes @ 0x21
  5057  00C1                     	ds	1
  5058                           
  5059                           	psect	cstackCOMMON
  5060  0070                     __pcstackCOMMON:	
  5061  0070                     ?___ftge:	
  5062  0070                     ?_LCD_Cmd:	
  5063                           ; 1 bit 
  5064                           
  5065  0070                     ?_LCD_Write_Char:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ?_OSCILLATOR_Initialize:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ??_OSCILLATOR_Initialize:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ?_TMR2_Initialize:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ??_TMR2_Initialize:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ?_ADCC_Initialize:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ??_ADCC_Initialize:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ?_InitCustomChars:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0070                     ?_LCD_Port:	
  5090                           ; 1 bytes @ 0x0
  5091                           
  5092  0070                     ??_LCD_Port:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     ?_LCD_Clear:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0070                     ?_LCD_Init:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0070                     ?_PIN_MANAGER_Initialize:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0070                     ??_PIN_MANAGER_Initialize:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0070                     ?_PWM_Initialize:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0070                     ??_PWM_Initialize:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0070                     ?_PWM7_LoadDutyValue:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0070                     ?_SYSTEM_Initialize:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0070                     ?_main:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0070                     ?___bmul:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0070                     ?_ADCRead:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0070                     ?___wmul:	
  5129                           ; 2 bytes @ 0x0
  5130                           
  5131  0070                     ?___awdiv:	
  5132                           ; 2 bytes @ 0x0
  5133                           
  5134  0070                     ?___awmod:	
  5135                           ; 2 bytes @ 0x0
  5136                           
  5137  0070                     ?___ftpack:	
  5138                           ; 2 bytes @ 0x0
  5139                           
  5140  0070                     ?_frexp:	
  5141                           ; 3 bytes @ 0x0
  5142                           
  5143  0070                     ?___aldiv:	
  5144                           ; 3 bytes @ 0x0
  5145                           
  5146  0070                     LCD_Port@a:	
  5147                           ; 4 bytes @ 0x0
  5148                           
  5149  0070                     PIN_MANAGER_Initialize@state:	
  5150                           ; 1 bytes @ 0x0
  5151                           
  5152  0070                     ___bmul@multiplicand:	
  5153                           ; 1 bytes @ 0x0
  5154                           
  5155  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5156                           ; 1 bytes @ 0x0
  5157                           
  5158  0070                     ___wmul@multiplier:	
  5159                           ; 2 bytes @ 0x0
  5160                           
  5161  0070                     ___awdiv@divisor:	
  5162                           ; 2 bytes @ 0x0
  5163                           
  5164  0070                     ___awmod@divisor:	
  5165                           ; 2 bytes @ 0x0
  5166                           
  5167  0070                     ___ftpack@arg:	
  5168                           ; 2 bytes @ 0x0
  5169                           
  5170  0070                     ___ftge@ff1:	
  5171                           ; 3 bytes @ 0x0
  5172                           
  5173  0070                     frexp@value:	
  5174                           ; 3 bytes @ 0x0
  5175                           
  5176  0070                     ___aldiv@divisor:	
  5177                           ; 3 bytes @ 0x0
  5178                           
  5179                           
  5180                           ; 4 bytes @ 0x0
  5181  0070                     	ds	1
  5182  0071                     ??_LCD_Cmd:	
  5183  0071                     ??_LCD_Write_Char:	
  5184                           ; 1 bytes @ 0x1
  5185                           
  5186  0071                     ??___bmul:	
  5187                           ; 1 bytes @ 0x1
  5188                           
  5189                           
  5190                           ; 1 bytes @ 0x1
  5191  0071                     	ds	1
  5192  0072                     ??_PWM7_LoadDutyValue:	
  5193  0072                     LCD_Write_Char@temp:	
  5194                           ; 1 bytes @ 0x2
  5195                           
  5196  0072                     ___bmul@product:	
  5197                           ; 1 bytes @ 0x2
  5198                           
  5199  0072                     ___wmul@multiplicand:	
  5200                           ; 1 bytes @ 0x2
  5201                           
  5202  0072                     ___awdiv@dividend:	
  5203                           ; 2 bytes @ 0x2
  5204                           
  5205  0072                     ___awmod@dividend:	
  5206                           ; 2 bytes @ 0x2
  5207                           
  5208                           
  5209                           ; 2 bytes @ 0x2
  5210  0072                     	ds	1
  5211  0073                     ??_ADCRead:	
  5212  0073                     ADCRead@channel:	
  5213                           ; 1 bytes @ 0x3
  5214                           
  5215  0073                     LCD_Cmd@a:	
  5216                           ; 1 bytes @ 0x3
  5217                           
  5218  0073                     LCD_Write_Char@y:	
  5219                           ; 1 bytes @ 0x3
  5220                           
  5221  0073                     ___bmul@multiplier:	
  5222                           ; 1 bytes @ 0x3
  5223                           
  5224  0073                     ___ftpack@exp:	
  5225                           ; 1 bytes @ 0x3
  5226                           
  5227  0073                     frexp@eptr:	
  5228                           ; 1 bytes @ 0x3
  5229                           
  5230  0073                     ___ftge@ff2:	
  5231                           ; 1 bytes @ 0x3
  5232                           
  5233                           
  5234                           ; 3 bytes @ 0x3
  5235  0073                     	ds	1
  5236  0074                     ??_frexp:	
  5237  0074                     ??_LCD_Clear:	
  5238                           ; 1 bytes @ 0x4
  5239                           
  5240  0074                     ?_LCD_Set_Cursor:	
  5241                           ; 1 bytes @ 0x4
  5242                           
  5243  0074                     ??_LCD_Init:	
  5244                           ; 1 bytes @ 0x4
  5245                           
  5246  0074                     ??___wmul:	
  5247                           ; 1 bytes @ 0x4
  5248                           
  5249  0074                     ??___awdiv:	
  5250                           ; 1 bytes @ 0x4
  5251                           
  5252  0074                     ??___awmod:	
  5253                           ; 1 bytes @ 0x4
  5254                           
  5255  0074                     LCD_Set_Cursor@y:	
  5256                           ; 1 bytes @ 0x4
  5257                           
  5258  0074                     LCD_Write_Char@a:	
  5259                           ; 1 bytes @ 0x4
  5260                           
  5261  0074                     ___ftpack@sign:	
  5262                           ; 1 bytes @ 0x4
  5263                           
  5264  0074                     ___wmul@product:	
  5265                           ; 1 bytes @ 0x4
  5266                           
  5267  0074                     ___aldiv@dividend:	
  5268                           ; 2 bytes @ 0x4
  5269                           
  5270                           
  5271                           ; 4 bytes @ 0x4
  5272  0074                     	ds	1
  5273  0075                     ??___ftpack:	
  5274  0075                     ??_InitCustomChars:	
  5275                           ; 1 bytes @ 0x5
  5276                           
  5277  0075                     ??_LCD_Set_Cursor:	
  5278                           ; 1 bytes @ 0x5
  5279                           
  5280  0075                     ?_LCD_Write_String:	
  5281                           ; 1 bytes @ 0x5
  5282                           
  5283  0075                     ___awdiv@counter:	
  5284                           ; 1 bytes @ 0x5
  5285                           
  5286  0075                     ___awmod@counter:	
  5287                           ; 1 bytes @ 0x5
  5288                           
  5289  0075                     LCD_Write_String@a:	
  5290                           ; 1 bytes @ 0x5
  5291                           
  5292                           
  5293                           ; 2 bytes @ 0x5
  5294  0075                     	ds	1
  5295  0076                     ??___ftge:	
  5296  0076                     InitCustomChars@i:	
  5297                           ; 1 bytes @ 0x6
  5298                           
  5299  0076                     ___awdiv@sign:	
  5300                           ; 1 bytes @ 0x6
  5301                           
  5302  0076                     ___awmod@sign:	
  5303                           ; 1 bytes @ 0x6
  5304                           
  5305                           
  5306                           ; 1 bytes @ 0x6
  5307  0076                     	ds	1
  5308  0077                     ??_LCD_Write_String:	
  5309  0077                     LCD_Set_Cursor@x:	
  5310                           ; 1 bytes @ 0x7
  5311                           
  5312  0077                     LCD_Init@style:	
  5313                           ; 1 bytes @ 0x7
  5314                           
  5315  0077                     ___awdiv@quotient:	
  5316                           ; 1 bytes @ 0x7
  5317                           
  5318                           
  5319                           ; 2 bytes @ 0x7
  5320  0077                     	ds	1
  5321  0078                     ??_SYSTEM_Initialize:	
  5322  0078                     ??___aldiv:	
  5323                           ; 1 bytes @ 0x8
  5324                           
  5325  0078                     ?___awtoft:	
  5326                           ; 1 bytes @ 0x8
  5327                           
  5328  0078                     LCD_Set_Cursor@z:	
  5329                           ; 3 bytes @ 0x8
  5330                           
  5331  0078                     LCD_Write_String@i:	
  5332                           ; 1 bytes @ 0x8
  5333                           
  5334  0078                     ___awtoft@c:	
  5335                           ; 2 bytes @ 0x8
  5336                           
  5337                           
  5338                           ; 2 bytes @ 0x8
  5339  0078                     	ds	1
  5340  0079                     ?_LCD_Write_Int:	
  5341  0079                     LCD_Set_Cursor@w:	
  5342                           ; 1 bytes @ 0x9
  5343                           
  5344  0079                     readAnalog@analog_channel:	
  5345                           ; 1 bytes @ 0x9
  5346                           
  5347  0079                     LCD_Write_Int@value:	
  5348                           ; 2 bytes @ 0x9
  5349                           
  5350                           
  5351                           ; 2 bytes @ 0x9
  5352  0079                     	ds	1
  5353  007A                     LCD_Set_Cursor@temp:	
  5354                           
  5355                           ; 1 bytes @ 0xA
  5356  007A                     	ds	1
  5357  007B                     ??___awtoft:	
  5358  007B                     LCD_Write_Int@fieldLength:	
  5359                           ; 1 bytes @ 0xB
  5360                           
  5361  007B                     readAnalog@value:	
  5362                           ; 1 bytes @ 0xB
  5363                           
  5364                           
  5365                           ; 2 bytes @ 0xB
  5366  007B                     	ds	1
  5367  007C                     LCD_Write_Int@numPlaces:	
  5368                           
  5369                           ; 1 bytes @ 0xC
  5370  007C                     	ds	1
  5371  007D                     LCD_Write_Int@sign:	
  5372  007D                     ___awtoft@sign:	
  5373                           ; 1 bytes @ 0xD
  5374                           
  5375                           
  5376                           ; 1 bytes @ 0xD
  5377  007D                     	ds	1
  5378  007E                     ??_eval_poly:	
  5379  007E                     ??_tempCalc:	
  5380                           ; 1 bytes @ 0xE
  5381                           
  5382  007E                     ??___ftsub:	
  5383                           ; 1 bytes @ 0xE
  5384                           
  5385                           
  5386                           	psect	cstackBANK0
  5387  0020                     __pcstackBANK0:	
  5388                           ; 1 bytes @ 0xE
  5389                           
  5390  0020                     ??_LCD_Write_Int:	
  5391  0020                     ?_PID_Calculate:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0020                     ?___ftmul:	
  5395                           ; 3 bytes @ 0x0
  5396                           
  5397  0020                     ___aldiv@counter:	
  5398                           ; 3 bytes @ 0x0
  5399                           
  5400  0020                     PID_Calculate@setpoint:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0020                     ___ftmul@f1:	
  5404                           ; 2 bytes @ 0x0
  5405                           
  5406                           
  5407                           ; 3 bytes @ 0x0
  5408  0020                     	ds	1
  5409  0021                     ___aldiv@sign:	
  5410                           
  5411                           ; 1 bytes @ 0x1
  5412  0021                     	ds	1
  5413  0022                     PID_Calculate@temp:	
  5414  0022                     ___aldiv@quotient:	
  5415                           ; 2 bytes @ 0x2
  5416                           
  5417                           
  5418                           ; 4 bytes @ 0x2
  5419  0022                     	ds	1
  5420  0023                     ___ftmul@f2:	
  5421                           
  5422                           ; 3 bytes @ 0x3
  5423  0023                     	ds	1
  5424  0024                     ??_PID_Calculate:	
  5425                           
  5426                           ; 1 bytes @ 0x4
  5427  0024                     	ds	1
  5428  0025                     LCD_Write_Int@str:	
  5429                           
  5430                           ; 5 bytes @ 0x5
  5431  0025                     	ds	1
  5432  0026                     ??___ftmul:	
  5433  0026                     ?_readAnalog:	
  5434                           ; 1 bytes @ 0x6
  5435                           
  5436  0026                     readAnalog@channel:	
  5437                           ; 2 bytes @ 0x6
  5438                           
  5439                           
  5440                           ; 2 bytes @ 0x6
  5441  0026                     	ds	2
  5442  0028                     ??_readAnalog:	
  5443                           
  5444                           ; 1 bytes @ 0x8
  5445  0028                     	ds	2
  5446  002A                     ___ftmul@exp:	
  5447  002A                     LCD_Write_Int@j:	
  5448                           ; 1 bytes @ 0xA
  5449                           
  5450                           
  5451                           ; 2 bytes @ 0xA
  5452  002A                     	ds	1
  5453  002B                     ___ftmul@f3_as_product:	
  5454                           
  5455                           ; 3 bytes @ 0xB
  5456  002B                     	ds	1
  5457  002C                     LCD_Write_Int@i:	
  5458                           
  5459                           ; 2 bytes @ 0xC
  5460  002C                     	ds	2
  5461  002E                     ___ftmul@cntr:	
  5462                           
  5463                           ; 1 bytes @ 0xE
  5464  002E                     	ds	1
  5465  002F                     ___ftmul@sign:	
  5466                           
  5467                           ; 1 bytes @ 0xF
  5468  002F                     	ds	1
  5469  0030                     ?___ftdiv:	
  5470  0030                     ___ftdiv@f2:	
  5471                           ; 3 bytes @ 0x10
  5472                           
  5473                           
  5474                           ; 3 bytes @ 0x10
  5475  0030                     	ds	3
  5476  0033                     ___ftdiv@f1:	
  5477                           
  5478                           ; 3 bytes @ 0x13
  5479  0033                     	ds	3
  5480  0036                     ??___ftdiv:	
  5481                           
  5482                           ; 1 bytes @ 0x16
  5483  0036                     	ds	4
  5484  003A                     ___ftdiv@cntr:	
  5485                           
  5486                           ; 1 bytes @ 0x1A
  5487  003A                     	ds	1
  5488  003B                     ___ftdiv@f3:	
  5489                           
  5490                           ; 3 bytes @ 0x1B
  5491  003B                     	ds	3
  5492  003E                     ___ftdiv@exp:	
  5493                           
  5494                           ; 1 bytes @ 0x1E
  5495  003E                     	ds	1
  5496  003F                     ___ftdiv@sign:	
  5497                           
  5498                           ; 1 bytes @ 0x1F
  5499  003F                     	ds	1
  5500  0040                     ?___ftadd:	
  5501  0040                     ___ftadd@f1:	
  5502                           ; 3 bytes @ 0x20
  5503                           
  5504                           
  5505                           ; 3 bytes @ 0x20
  5506  0040                     	ds	3
  5507  0043                     ___ftadd@f2:	
  5508                           
  5509                           ; 3 bytes @ 0x23
  5510  0043                     	ds	3
  5511  0046                     ??___ftadd:	
  5512                           
  5513                           ; 1 bytes @ 0x26
  5514  0046                     	ds	4
  5515  004A                     ___ftadd@sign:	
  5516                           
  5517                           ; 1 bytes @ 0x2A
  5518  004A                     	ds	1
  5519  004B                     ___ftadd@exp2:	
  5520                           
  5521                           ; 1 bytes @ 0x2B
  5522  004B                     	ds	1
  5523  004C                     ___ftadd@exp1:	
  5524                           
  5525                           ; 1 bytes @ 0x2C
  5526  004C                     	ds	1
  5527  004D                     ?_eval_poly:	
  5528  004D                     ?___ftsub:	
  5529                           ; 3 bytes @ 0x2D
  5530                           
  5531  004D                     ___ftsub@f2:	
  5532                           ; 3 bytes @ 0x2D
  5533                           
  5534  004D                     eval_poly@x:	
  5535                           ; 3 bytes @ 0x2D
  5536                           
  5537                           
  5538                           ; 3 bytes @ 0x2D
  5539  004D                     	ds	3
  5540  0050                     eval_poly@d:	
  5541  0050                     ___ftsub@f1:	
  5542                           ; 2 bytes @ 0x30
  5543                           
  5544                           
  5545                           ; 3 bytes @ 0x30
  5546  0050                     	ds	2
  5547  0052                     eval_poly@n:	
  5548                           
  5549                           ; 2 bytes @ 0x32
  5550  0052                     	ds	2
  5551  0054                     eval_poly@res:	
  5552                           
  5553                           ; 3 bytes @ 0x34
  5554  0054                     	ds	3
  5555  0057                     ?_log:	
  5556  0057                     log@x:	
  5557                           ; 3 bytes @ 0x37
  5558                           
  5559                           
  5560                           ; 3 bytes @ 0x37
  5561  0057                     	ds	3
  5562  005A                     ??_log:	
  5563                           
  5564                           ; 1 bytes @ 0x3A
  5565  005A                     	ds	1
  5566  005B                     log@exponent:	
  5567                           
  5568                           ; 2 bytes @ 0x3B
  5569  005B                     	ds	2
  5570  005D                     ?_tempCalc:	
  5571  005D                     tempCalc@analogValue:	
  5572                           ; 3 bytes @ 0x3D
  5573                           
  5574                           
  5575                           ; 2 bytes @ 0x3D
  5576  005D                     	ds	3
  5577  0060                     tempCalc@R:	
  5578                           
  5579                           ; 3 bytes @ 0x40
  5580  0060                     	ds	3
  5581  0063                     _tempCalc$977:	
  5582                           
  5583                           ; 3 bytes @ 0x43
  5584  0063                     	ds	3
  5585  0066                     tempCalc@steinhart:	
  5586                           
  5587                           ; 3 bytes @ 0x46
  5588  0066                     	ds	3
  5589  0069                     ?___fttol:	
  5590  0069                     ___fttol@f1:	
  5591                           ; 4 bytes @ 0x49
  5592                           
  5593                           
  5594                           ; 3 bytes @ 0x49
  5595  0069                     	ds	4
  5596  006D                     ??_main:	
  5597                           
  5598                           ; 1 bytes @ 0x4D
  5599  006D                     	ds	3
  5600                           
  5601                           	psect	maintext
  5602  0599                     __pmaintext:	
  5603 ;;
  5604 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5605 ;;
  5606 ;; *************** function _main *****************
  5607 ;; Defined at:
  5608 ;;		line 24 in file "main.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  analogs         4   26[BANK1 ] unsigned int [2]
  5613 ;;  displayTemp2    3    0        float 
  5614 ;;  displayTemp     3    0        float 
  5615 ;;  set             2   31[BANK1 ] int 
  5616 ;;  pidPeriodCou    2   24[BANK1 ] int 
  5617 ;;  dutyCycle7      2   22[BANK1 ] unsigned int 
  5618 ;;  dutyCycle6      2   20[BANK1 ] unsigned int 
  5619 ;;  bCount          2   10[BANK1 ] unsigned int 
  5620 ;;  delayCount      1   33[BANK1 ] unsigned char 
  5621 ;;  j               1   30[BANK1 ] unsigned char 
  5622 ;;  menuDelay       1   19[BANK1 ] unsigned char 
  5623 ;;  loop            1   18[BANK1 ] unsigned char 
  5624 ;;  tPadCount       1   17[BANK1 ] unsigned char 
  5625 ;;  resetDelay      1   16[BANK1 ] unsigned char 
  5626 ;;  startDelay      1   15[BANK1 ] unsigned char 
  5627 ;;  C_or_F          1   14[BANK1 ] unsigned char 
  5628 ;;  choice          1   13[BANK1 ] unsigned char 
  5629 ;;  x               1   12[BANK1 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : B1F/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Totals:         0       3      24       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;Total ram usage:       27 bytes
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		_LCD_Clear
  5647 ;;		_LCD_Set_Cursor
  5648 ;;		_LCD_Write_Char
  5649 ;;		_LCD_Write_Int
  5650 ;;		_LCD_Write_String
  5651 ;;		_PID_Calculate
  5652 ;;		_PWM7_LoadDutyValue
  5653 ;;		_SYSTEM_Initialize
  5654 ;;		___fttol
  5655 ;;		_readAnalog
  5656 ;;		_tempCalc
  5657 ;; This function is called by:
  5658 ;;		Startup code after reset
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           
  5663                           ;psect for function _main
  5664  0599                     _main:	
  5665                           
  5666                           ;main.c: 26: SYSTEM_Initialize();
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5670  0599  318B  2330  3185   	fcall	_SYSTEM_Initialize
  5671                           
  5672                           ;main.c: 28: uint16_t analogs[2] = {0};
  5673  059C  0022               	movlb	2	; select bank2
  5674  059D  0838               	movf	(main@F13660+3)^(0+256),w
  5675  059E  0021               	movlb	1	; select bank1
  5676  059F  00BD               	movwf	(main@analogs+3)^(0+128)
  5677  05A0  0022               	movlb	2	; select bank2
  5678  05A1  0837               	movf	(main@F13660+2)^(0+256),w
  5679  05A2  0021               	movlb	1	; select bank1
  5680  05A3  00BC               	movwf	(main@analogs+2)^(0+128)
  5681  05A4  0022               	movlb	2	; select bank2
  5682  05A5  0836               	movf	(main@F13660+1)^(0+256),w
  5683  05A6  0021               	movlb	1	; select bank1
  5684  05A7  00BB               	movwf	(main@analogs+1)^(0+128)
  5685  05A8  0022               	movlb	2	; select bank2
  5686  05A9  0835               	movf	main@F13660^(0+256),w
  5687  05AA  0021               	movlb	1	; select bank1
  5688  05AB  00BA               	movwf	main@analogs^(0+128)
  5689                           
  5690                           ;main.c: 30: int set = 2250;
  5691  05AC  30CA               	movlw	202
  5692  05AD  00BF               	movwf	main@set^(0+128)
  5693  05AE  3008               	movlw	8
  5694  05AF  00C0               	movwf	(main@set^(0+128)+1)
  5695                           
  5696                           ;main.c: 32: char menuDelay = 0;
  5697  05B0  01B3               	clrf	main@menuDelay^(0+128)
  5698                           
  5699                           ;main.c: 34: char delayCount = 0;
  5700  05B1  01C1               	clrf	main@delayCount^(0+128)
  5701                           
  5702                           ;main.c: 36: float displayTemp, displayTemp2;
  5703                           ;main.c: 38: char j = 0;
  5704  05B2  01BE               	clrf	main@j^(0+128)
  5705                           
  5706                           ;main.c: 40: char x = 0;
  5707  05B3  01AC               	clrf	main@x^(0+128)
  5708                           
  5709                           ;main.c: 42: int pidPeriodCounter = 0;
  5710  05B4  01B8               	clrf	main@pidPeriodCounter^(0+128)
  5711  05B5  01B9               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5712                           
  5713                           ;main.c: 44: extern int pidMaxOutput;
  5714                           ;main.c: 46: unsigned char loop = 64;
  5715  05B6  3040               	movlw	64
  5716  05B7  0020               	movlb	0	; select bank0
  5717  05B8  00ED               	movwf	??_main
  5718  05B9  086D               	movf	??_main,w
  5719  05BA  0021               	movlb	1	; select bank1
  5720  05BB  00B2               	movwf	main@loop^(0+128)
  5721                           
  5722                           ;main.c: 48: char choice = 2;
  5723  05BC  3002               	movlw	2
  5724  05BD  0020               	movlb	0	; select bank0
  5725  05BE  00ED               	movwf	??_main
  5726  05BF  086D               	movf	??_main,w
  5727  05C0  0021               	movlb	1	; select bank1
  5728  05C1  00AD               	movwf	main@choice^(0+128)
  5729                           
  5730                           ;main.c: 50: char C_or_F = 1;
  5731  05C2  01AE               	clrf	main@C_or_F^(0+128)
  5732  05C3  0AAE               	incf	main@C_or_F^(0+128),f
  5733                           
  5734                           ;main.c: 52: unsigned int bCount = 0;
  5735  05C4  01AA               	clrf	main@bCount^(0+128)
  5736  05C5  01AB               	clrf	(main@bCount+1)^(0+128)
  5737                           
  5738                           ;main.c: 54: unsigned char startDelay = 0;
  5739  05C6  01AF               	clrf	main@startDelay^(0+128)
  5740                           
  5741                           ;main.c: 56: unsigned char resetDelay = 0;
  5742  05C7  01B0               	clrf	main@resetDelay^(0+128)
  5743                           
  5744                           ;main.c: 58: unsigned char tPadCount = 10;
  5745  05C8  300A               	movlw	10
  5746  05C9  0020               	movlb	0	; select bank0
  5747  05CA  00ED               	movwf	??_main
  5748  05CB  086D               	movf	??_main,w
  5749  05CC  0021               	movlb	1	; select bank1
  5750  05CD  00B1               	movwf	main@tPadCount^(0+128)
  5751                           
  5752                           ;main.c: 61: uint16_t dutyCycle6 = 523;
  5753  05CE  300B               	movlw	11
  5754  05CF  00B4               	movwf	main@dutyCycle6^(0+128)
  5755  05D0  3002               	movlw	2
  5756  05D1  00B5               	movwf	(main@dutyCycle6^(0+128)+1)
  5757                           
  5758                           ;main.c: 63: uint16_t dutyCycle7 = 523;
  5759  05D2  300B               	movlw	11
  5760  05D3  00B6               	movwf	main@dutyCycle7^(0+128)
  5761  05D4  3002               	movlw	2
  5762  05D5  00B7               	movwf	(main@dutyCycle7^(0+128)+1)
  5763                           
  5764                           ;main.c: 67: PWM7_LoadDutyValue(dutyCycle7);
  5765  05D6  0837               	movf	(main@dutyCycle7+1)^(0+128),w
  5766  05D7  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5767  05D8  0836               	movf	main@dutyCycle7^(0+128),w
  5768  05D9  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5769  05DA  3189  213D  3185   	fcall	_PWM7_LoadDutyValue
  5770                           
  5771                           ;main.c: 69: _delay((unsigned long)((300)*(32000000/4000.0)));
  5772  05DD  300D               	movlw	13
  5773  05DE  0020               	movlb	0	; select bank0
  5774  05DF  00EF               	movwf	??_main+2
  5775  05E0  302D               	movlw	45
  5776  05E1  00EE               	movwf	??_main+1
  5777  05E2  30E2               	movlw	226
  5778  05E3  00ED               	movwf	??_main
  5779  05E4                     u3377:	
  5780  05E4  0BED               	decfsz	??_main,f
  5781  05E5  2DE4               	goto	u3377
  5782  05E6  0BEE               	decfsz	??_main+1,f
  5783  05E7  2DE4               	goto	u3377
  5784  05E8  0BEF               	decfsz	??_main+2,f
  5785  05E9  2DE4               	goto	u3377
  5786  05EA  3200               	nop2
  5787                           
  5788                           ;main.c: 71: LCD_Clear();
  5789  05EB  3188  20D8  3185   	fcall	_LCD_Clear
  5790  05EE                     l2784:	
  5791                           ;main.c: 74: while (1)
  5792                           
  5793                           
  5794                           ;main.c: 75: {
  5795                           ;main.c: 76: pidPeriodCounter+=1;
  5796  05EE  3001               	movlw	1
  5797  05EF  0021               	movlb	1	; select bank1
  5798  05F0  07B8               	addwf	main@pidPeriodCounter^(0+128),f
  5799  05F1  3000               	movlw	0
  5800  05F2  3DB9               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  5801                           
  5802                           ;main.c: 78: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  5803  05F3  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  5804  05F4  3A80               	xorlw	128
  5805  05F5  0020               	movlb	0	; select bank0
  5806  05F6  00ED               	movwf	??_main
  5807  05F7  0021               	movlb	1	; select bank1
  5808  05F8  0839               	movf	(main@pidPeriodCounter+1)^(0+128),w
  5809  05F9  3A80               	xorlw	128
  5810  05FA  0020               	movlb	0	; select bank0
  5811  05FB  026D               	subwf	??_main,w
  5812  05FC  1D03               	skipz
  5813  05FD  2E01               	goto	u3205
  5814  05FE  0021               	movlb	1	; select bank1
  5815  05FF  0838               	movf	main@pidPeriodCounter^(0+128),w
  5816  0600  026C               	subwf	_pidMaxOutput^(0+128),w
  5817  0601                     u3205:	
  5818  0601  1803               	skipnc
  5819  0602  2E06               	goto	l2790
  5820  0603  0021               	movlb	1	; select bank1
  5821  0604  01B8               	clrf	main@pidPeriodCounter^(0+128)
  5822  0605  01B9               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5823  0606                     l2790:	
  5824                           
  5825                           ;main.c: 80: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  5826  0606  0021               	movlb	1	; select bank1
  5827  0607  0835               	movf	(main@dutyCycle6+1)^(0+128),w
  5828  0608  0239               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  5829  0609  1D03               	skipz
  5830  060A  2E0D               	goto	u3215
  5831  060B  0834               	movf	main@dutyCycle6^(0+128),w
  5832  060C  0238               	subwf	main@pidPeriodCounter^(0+128),w
  5833  060D                     u3215:	
  5834  060D  1803               	skipnc
  5835  060E  2E12               	goto	l336
  5836  060F  0020               	movlb	0	; select bank0
  5837  0610  1518               	bsf	24,2	;volatile
  5838  0611  2E14               	goto	l2794
  5839  0612                     l336:	
  5840                           
  5841                           ;main.c: 81: else LATC2=0;
  5842  0612  0020               	movlb	0	; select bank0
  5843  0613  1118               	bcf	24,2	;volatile
  5844  0614                     l2794:	
  5845                           
  5846                           ;main.c: 83: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  5847  0614  0021               	movlb	1	; select bank1
  5848  0615  01BE               	clrf	main@j^(0+128)
  5849  0616  3002               	movlw	2
  5850  0617  023E               	subwf	main@j^(0+128),w
  5851  0618  1803               	btfsc	3,0
  5852  0619  2E38               	goto	l2806
  5853  061A                     l2800:	
  5854  061A  083E               	movf	main@j^(0+128),w
  5855  061B  0020               	movlb	0	; select bank0
  5856  061C  00ED               	movwf	??_main
  5857  061D  01EE               	clrf	??_main+1
  5858  061E  086D               	movf	??_main,w
  5859  061F  00A6               	movwf	readAnalog@channel
  5860  0620  086E               	movf	??_main+1,w
  5861  0621  00A7               	movwf	readAnalog@channel+1
  5862  0622  3184  247F  3185   	fcall	_readAnalog
  5863  0625  0021               	movlb	1	; select bank1
  5864  0626  353E               	lslf	main@j^(0+128),w
  5865  0627  3EBA               	addlw	(low (main@analogs| 0))& (0+255)
  5866  0628  0086               	movwf	6
  5867  0629  0187               	clrf	7
  5868  062A  0020               	movlb	0	; select bank0
  5869  062B  0826               	movf	?_readAnalog,w
  5870  062C  3FC0               	movwi [0]fsr1
  5871  062D  0827               	movf	?_readAnalog+1,w
  5872  062E  3FC1               	movwi [1]fsr1
  5873  062F  3001               	movlw	1
  5874  0630  00ED               	movwf	??_main
  5875  0631  086D               	movf	??_main,w
  5876  0632  0021               	movlb	1	; select bank1
  5877  0633  07BE               	addwf	main@j^(0+128),f
  5878  0634  3002               	movlw	2
  5879  0635  023E               	subwf	main@j^(0+128),w
  5880  0636  1C03               	skipc
  5881  0637  2E1A               	goto	l2800
  5882  0638                     l2806:	
  5883                           
  5884                           ;main.c: 86: analogs[0]=tempCalc(analogs[0]);
  5885  0638  083B               	movf	(main@analogs+1)^(0+128),w
  5886  0639  0020               	movlb	0	; select bank0
  5887  063A  00DE               	movwf	tempCalc@analogValue+1
  5888  063B  0021               	movlb	1	; select bank1
  5889  063C  083A               	movf	main@analogs^(0+128),w
  5890  063D  0020               	movlb	0	; select bank0
  5891  063E  00DD               	movwf	tempCalc@analogValue
  5892  063F  3183  236A  3185   	fcall	_tempCalc
  5893  0642  0020               	movlb	0	; select bank0
  5894  0643  085D               	movf	?_tempCalc,w
  5895  0644  00E9               	movwf	___fttol@f1
  5896  0645  085E               	movf	?_tempCalc+1,w
  5897  0646  00EA               	movwf	___fttol@f1+1
  5898  0647  085F               	movf	?_tempCalc+2,w
  5899  0648  00EB               	movwf	___fttol@f1+2
  5900  0649  318D  254E  3185   	fcall	___fttol
  5901  064C  0020               	movlb	0	; select bank0
  5902  064D  086A               	movf	?___fttol+1,w
  5903  064E  0021               	movlb	1	; select bank1
  5904  064F  00BB               	movwf	(main@analogs+1)^(0+128)
  5905  0650  0020               	movlb	0	; select bank0
  5906  0651  0869               	movf	?___fttol,w
  5907  0652  0021               	movlb	1	; select bank1
  5908  0653  00BA               	movwf	main@analogs^(0+128)
  5909                           
  5910                           ;main.c: 88: analogs[1]=tempCalc(analogs[1]);
  5911  0654  083D               	movf	((main@analogs+1)^(0+128)+2),w
  5912  0655  0020               	movlb	0	; select bank0
  5913  0656  00DE               	movwf	tempCalc@analogValue+1
  5914  0657  0021               	movlb	1	; select bank1
  5915  0658  083C               	movf	(main@analogs^(0+128)+2),w
  5916  0659  0020               	movlb	0	; select bank0
  5917  065A  00DD               	movwf	tempCalc@analogValue
  5918  065B  3183  236A  3185   	fcall	_tempCalc
  5919  065E  0020               	movlb	0	; select bank0
  5920  065F  085D               	movf	?_tempCalc,w
  5921  0660  00E9               	movwf	___fttol@f1
  5922  0661  085E               	movf	?_tempCalc+1,w
  5923  0662  00EA               	movwf	___fttol@f1+1
  5924  0663  085F               	movf	?_tempCalc+2,w
  5925  0664  00EB               	movwf	___fttol@f1+2
  5926  0665  318D  254E  3185   	fcall	___fttol
  5927  0668  0020               	movlb	0	; select bank0
  5928  0669  086A               	movf	?___fttol+1,w
  5929  066A  0021               	movlb	1	; select bank1
  5930  066B  00BD               	movwf	((main@analogs+1)^(0+128)+2)
  5931  066C  0020               	movlb	0	; select bank0
  5932  066D  0869               	movf	?___fttol,w
  5933  066E  0021               	movlb	1	; select bank1
  5934  066F  00BC               	movwf	(main@analogs^(0+128)+2)
  5935                           
  5936                           ;main.c: 90: dutyCycle7=502;
  5937  0670  30F6               	movlw	246
  5938  0671  00B6               	movwf	main@dutyCycle7^(0+128)
  5939  0672  3001               	movlw	1
  5940  0673  00B7               	movwf	(main@dutyCycle7^(0+128)+1)
  5941                           
  5942                           ;main.c: 92: if(RB0==1)
  5943  0674  0020               	movlb	0	; select bank0
  5944  0675  1C0D               	btfss	13,0	;volatile
  5945  0676  2ECF               	goto	l2834
  5946                           
  5947                           ;main.c: 93: {
  5948                           ;main.c: 94: delayCount+=2;
  5949  0677  3002               	movlw	2
  5950  0678  00ED               	movwf	??_main
  5951  0679  086D               	movf	??_main,w
  5952  067A  0021               	movlb	1	; select bank1
  5953  067B  07C1               	addwf	main@delayCount^(0+128),f
  5954                           
  5955                           ;main.c: 95: set+=1;
  5956  067C  3001               	movlw	1
  5957  067D  07BF               	addwf	main@set^(0+128),f
  5958  067E  3000               	movlw	0
  5959  067F  3DC0               	addwfc	(main@set+1)^(0+128),f
  5960                           
  5961                           ;main.c: 96: if(set>2750)set=2750;
  5962  0680  0840               	movf	(main@set+1)^(0+128),w
  5963  0681  3A80               	xorlw	128
  5964  0682  0020               	movlb	0	; select bank0
  5965  0683  00ED               	movwf	??_main
  5966  0684  308A               	movlw	138
  5967  0685  026D               	subwf	??_main,w
  5968  0686  1D03               	skipz
  5969  0687  2E8B               	goto	u3255
  5970  0688  30BF               	movlw	191
  5971  0689  0021               	movlb	1	; select bank1
  5972  068A  023F               	subwf	main@set^(0+128),w
  5973  068B                     u3255:	
  5974  068B  1C03               	skipc
  5975  068C  2E92               	goto	l2820
  5976  068D  30BE               	movlw	190
  5977  068E  0021               	movlb	1	; select bank1
  5978  068F  00BF               	movwf	main@set^(0+128)
  5979  0690  300A               	movlw	10
  5980  0691  00C0               	movwf	(main@set^(0+128)+1)
  5981  0692                     l2820:	
  5982                           
  5983                           ;main.c: 97: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  5984  0692  01F4               	clrf	LCD_Set_Cursor@y
  5985  0693  3005               	movlw	5
  5986  0694  318A  22F1  3185   	fcall	_LCD_Set_Cursor
  5987  0697  0021               	movlb	1	; select bank1
  5988  0698  0840               	movf	(main@set+1)^(0+128),w
  5989  0699  00FA               	movwf	LCD_Write_Int@value+1
  5990  069A  083F               	movf	main@set^(0+128),w
  5991  069B  00F9               	movwf	LCD_Write_Int@value
  5992  069C  01FB               	clrf	LCD_Write_Int@fieldLength
  5993  069D  03FB               	decf	LCD_Write_Int@fieldLength,f
  5994  069E  01FC               	clrf	LCD_Write_Int@numPlaces
  5995  069F  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5996  06A0  01FD               	clrf	LCD_Write_Int@sign
  5997  06A1  3180  209F  3185   	fcall	_LCD_Write_Int
  5998                           
  5999                           ;main.c: 98: menuDelay=1;
  6000  06A4  0021               	movlb	1	; select bank1
  6001  06A5  01B3               	clrf	main@menuDelay^(0+128)
  6002  06A6  0AB3               	incf	main@menuDelay^(0+128),f
  6003                           
  6004                           ;main.c: 99: if(delayCount<30)
  6005  06A7  301E               	movlw	30
  6006  06A8  0241               	subwf	main@delayCount^(0+128),w
  6007  06A9  1803               	skipnc
  6008  06AA  2EBA               	goto	l2830
  6009                           
  6010                           ;main.c: 100: {
  6011                           ;main.c: 101: _delay((unsigned long)((200)*(32000000/4000.0)));
  6012  06AB  3009               	movlw	9
  6013  06AC  0020               	movlb	0	; select bank0
  6014  06AD  00EF               	movwf	??_main+2
  6015  06AE  301E               	movlw	30
  6016  06AF  00EE               	movwf	??_main+1
  6017  06B0  30EB               	movlw	235
  6018  06B1  00ED               	movwf	??_main
  6019  06B2                     u3387:	
  6020  06B2  0BED               	decfsz	??_main,f
  6021  06B3  2EB2               	goto	u3387
  6022  06B4  0BEE               	decfsz	??_main+1,f
  6023  06B5  2EB2               	goto	u3387
  6024  06B6  0BEF               	decfsz	??_main+2,f
  6025  06B7  2EB2               	goto	u3387
  6026  06B8  0000               	nop
  6027                           
  6028                           ;main.c: 102: }
  6029  06B9  2EC4               	goto	l343
  6030  06BA                     l2830:	
  6031                           
  6032                           ;main.c: 103: else
  6033                           ;main.c: 104: {
  6034                           ;main.c: 105: _delay((unsigned long)((10)*(32000000/4000.0)));
  6035  06BA  3068               	movlw	104
  6036  06BB  0020               	movlb	0	; select bank0
  6037  06BC  00EE               	movwf	??_main+1
  6038  06BD  30E4               	movlw	228
  6039  06BE  00ED               	movwf	??_main
  6040  06BF                     u3397:	
  6041  06BF  0BED               	decfsz	??_main,f
  6042  06C0  2EBF               	goto	u3397
  6043  06C1  0BEE               	decfsz	??_main+1,f
  6044  06C2  2EBF               	goto	u3397
  6045  06C3  0000               	nop
  6046  06C4                     l343:	
  6047                           
  6048                           ;main.c: 106: }
  6049                           ;main.c: 108: if(delayCount>(30+10))delayCount=(30+10);
  6050  06C4  3029               	movlw	41
  6051  06C5  0021               	movlb	1	; select bank1
  6052  06C6  0241               	subwf	main@delayCount^(0+128),w
  6053  06C7  1C03               	skipc
  6054  06C8  2ECF               	goto	l2834
  6055  06C9  3028               	movlw	40
  6056  06CA  0020               	movlb	0	; select bank0
  6057  06CB  00ED               	movwf	??_main
  6058  06CC  086D               	movf	??_main,w
  6059  06CD  0021               	movlb	1	; select bank1
  6060  06CE  00C1               	movwf	main@delayCount^(0+128)
  6061  06CF                     l2834:	
  6062                           
  6063                           ;main.c: 109: }
  6064                           ;main.c: 111: if(RB1==1)
  6065  06CF  0020               	movlb	0	; select bank0
  6066  06D0  1C8D               	btfss	13,1	;volatile
  6067  06D1  2F2A               	goto	l2858
  6068                           
  6069                           ;main.c: 112: {
  6070                           ;main.c: 113: delayCount+=2;
  6071  06D2  3002               	movlw	2
  6072  06D3  00ED               	movwf	??_main
  6073  06D4  086D               	movf	??_main,w
  6074  06D5  0021               	movlb	1	; select bank1
  6075  06D6  07C1               	addwf	main@delayCount^(0+128),f
  6076                           
  6077                           ;main.c: 114: set-=1;
  6078  06D7  30FF               	movlw	255
  6079  06D8  07BF               	addwf	main@set^(0+128),f
  6080  06D9  30FF               	movlw	255
  6081  06DA  3DC0               	addwfc	(main@set+1)^(0+128),f
  6082                           
  6083                           ;main.c: 115: if(set<1000)set=1000;
  6084  06DB  0840               	movf	(main@set+1)^(0+128),w
  6085  06DC  3A80               	xorlw	128
  6086  06DD  0020               	movlb	0	; select bank0
  6087  06DE  00ED               	movwf	??_main
  6088  06DF  3083               	movlw	131
  6089  06E0  026D               	subwf	??_main,w
  6090  06E1  1D03               	skipz
  6091  06E2  2EE6               	goto	u3295
  6092  06E3  30E8               	movlw	232
  6093  06E4  0021               	movlb	1	; select bank1
  6094  06E5  023F               	subwf	main@set^(0+128),w
  6095  06E6                     u3295:	
  6096  06E6  1803               	skipnc
  6097  06E7  2EED               	goto	l2844
  6098  06E8  30E8               	movlw	232
  6099  06E9  0021               	movlb	1	; select bank1
  6100  06EA  00BF               	movwf	main@set^(0+128)
  6101  06EB  3003               	movlw	3
  6102  06EC  00C0               	movwf	(main@set^(0+128)+1)
  6103  06ED                     l2844:	
  6104                           
  6105                           ;main.c: 116: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  6106  06ED  01F4               	clrf	LCD_Set_Cursor@y
  6107  06EE  3005               	movlw	5
  6108  06EF  318A  22F1  3185   	fcall	_LCD_Set_Cursor
  6109  06F2  0021               	movlb	1	; select bank1
  6110  06F3  0840               	movf	(main@set+1)^(0+128),w
  6111  06F4  00FA               	movwf	LCD_Write_Int@value+1
  6112  06F5  083F               	movf	main@set^(0+128),w
  6113  06F6  00F9               	movwf	LCD_Write_Int@value
  6114  06F7  01FB               	clrf	LCD_Write_Int@fieldLength
  6115  06F8  03FB               	decf	LCD_Write_Int@fieldLength,f
  6116  06F9  01FC               	clrf	LCD_Write_Int@numPlaces
  6117  06FA  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6118  06FB  01FD               	clrf	LCD_Write_Int@sign
  6119  06FC  3180  209F  3185   	fcall	_LCD_Write_Int
  6120                           
  6121                           ;main.c: 117: menuDelay=1;
  6122  06FF  0021               	movlb	1	; select bank1
  6123  0700  01B3               	clrf	main@menuDelay^(0+128)
  6124  0701  0AB3               	incf	main@menuDelay^(0+128),f
  6125                           
  6126                           ;main.c: 119: if(delayCount<30)
  6127  0702  301E               	movlw	30
  6128  0703  0241               	subwf	main@delayCount^(0+128),w
  6129  0704  1803               	skipnc
  6130  0705  2F15               	goto	l2854
  6131                           
  6132                           ;main.c: 120: {
  6133                           ;main.c: 121: _delay((unsigned long)((200)*(32000000/4000.0)));
  6134  0706  3009               	movlw	9
  6135  0707  0020               	movlb	0	; select bank0
  6136  0708  00EF               	movwf	??_main+2
  6137  0709  301E               	movlw	30
  6138  070A  00EE               	movwf	??_main+1
  6139  070B  30EB               	movlw	235
  6140  070C  00ED               	movwf	??_main
  6141  070D                     u3407:	
  6142  070D  0BED               	decfsz	??_main,f
  6143  070E  2F0D               	goto	u3407
  6144  070F  0BEE               	decfsz	??_main+1,f
  6145  0710  2F0D               	goto	u3407
  6146  0711  0BEF               	decfsz	??_main+2,f
  6147  0712  2F0D               	goto	u3407
  6148  0713  0000               	nop
  6149                           
  6150                           ;main.c: 122: }
  6151  0714  2F1F               	goto	l348
  6152  0715                     l2854:	
  6153                           
  6154                           ;main.c: 123: else
  6155                           ;main.c: 124: {
  6156                           ;main.c: 125: _delay((unsigned long)((10)*(32000000/4000.0)));
  6157  0715  3068               	movlw	104
  6158  0716  0020               	movlb	0	; select bank0
  6159  0717  00EE               	movwf	??_main+1
  6160  0718  30E4               	movlw	228
  6161  0719  00ED               	movwf	??_main
  6162  071A                     u3417:	
  6163  071A  0BED               	decfsz	??_main,f
  6164  071B  2F1A               	goto	u3417
  6165  071C  0BEE               	decfsz	??_main+1,f
  6166  071D  2F1A               	goto	u3417
  6167  071E  0000               	nop
  6168  071F                     l348:	
  6169                           
  6170                           ;main.c: 126: }
  6171                           ;main.c: 128: if(delayCount>(30+10))delayCount=(30+10);
  6172  071F  3029               	movlw	41
  6173  0720  0021               	movlb	1	; select bank1
  6174  0721  0241               	subwf	main@delayCount^(0+128),w
  6175  0722  1C03               	skipc
  6176  0723  2F2A               	goto	l2858
  6177  0724  3028               	movlw	40
  6178  0725  0020               	movlb	0	; select bank0
  6179  0726  00ED               	movwf	??_main
  6180  0727  086D               	movf	??_main,w
  6181  0728  0021               	movlb	1	; select bank1
  6182  0729  00C1               	movwf	main@delayCount^(0+128)
  6183  072A                     l2858:	
  6184                           
  6185                           ;main.c: 129: }
  6186                           ;main.c: 131: if(delayCount>0)delayCount-=1;
  6187  072A  0021               	movlb	1	; select bank1
  6188  072B  0841               	movf	main@delayCount^(0+128),w
  6189  072C  1903               	btfsc	3,2
  6190  072D  2F30               	goto	l2862
  6191  072E  3001               	movlw	1
  6192  072F  02C1               	subwf	main@delayCount^(0+128),f
  6193  0730                     l2862:	
  6194                           
  6195                           ;main.c: 135: if(!(RB1 || RB0))
  6196  0730  0020               	movlb	0	; select bank0
  6197  0731  1C8D               	btfss	13,1	;volatile
  6198  0732  180D               	btfsc	13,0	;volatile
  6199  0733  2F47               	goto	l2872
  6200                           
  6201                           ;main.c: 136: {
  6202                           ;main.c: 137: if(menuDelay==1)
  6203  0734  0021               	movlb	1	; select bank1
  6204  0735  0333               	decf	main@menuDelay^(0+128),w
  6205  0736  1D03               	btfss	3,2
  6206  0737  2F47               	goto	l2872
  6207                           
  6208                           ;main.c: 138: {
  6209                           ;main.c: 139: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6210  0738  3029               	movlw	41
  6211  0739  0020               	movlb	0	; select bank0
  6212  073A  00EF               	movwf	??_main+2
  6213  073B  3096               	movlw	150
  6214  073C  00EE               	movwf	??_main+1
  6215  073D  30A6               	movlw	166
  6216  073E  00ED               	movwf	??_main
  6217  073F                     u3427:	
  6218  073F  0BED               	decfsz	??_main,f
  6219  0740  2F3F               	goto	u3427
  6220  0741  0BEE               	decfsz	??_main+1,f
  6221  0742  2F3F               	goto	u3427
  6222  0743  0BEF               	decfsz	??_main+2,f
  6223  0744  2F3F               	goto	u3427
  6224                           
  6225                           ;main.c: 140: menuDelay=0;
  6226  0745  0021               	movlb	1	; select bank1
  6227  0746  01B3               	clrf	main@menuDelay^(0+128)
  6228  0747                     l2872:	
  6229                           
  6230                           ;main.c: 141: }
  6231                           ;main.c: 142: }
  6232                           ;main.c: 145: if(loop>253)
  6233  0747  30FE               	movlw	254
  6234  0748  0021               	movlb	1	; select bank1
  6235  0749  0232               	subwf	main@loop^(0+128),w
  6236  074A  1C03               	skipc
  6237  074B  2FC7               	goto	l2900
  6238                           
  6239                           ;main.c: 146: {
  6240                           ;main.c: 149: PWM7_LoadDutyValue(dutyCycle7);
  6241  074C  0837               	movf	(main@dutyCycle7+1)^(0+128),w
  6242  074D  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6243  074E  0836               	movf	main@dutyCycle7^(0+128),w
  6244  074F  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6245  0750  3189  213D  3185   	fcall	_PWM7_LoadDutyValue
  6246                           
  6247                           ;main.c: 151: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6248  0753  01F4               	clrf	LCD_Set_Cursor@y
  6249  0754  3000               	movlw	0
  6250  0755  318A  22F1  3185   	fcall	_LCD_Set_Cursor
  6251  0758  3023               	movlw	low (STR_1| (0+32768))
  6252  0759  00F5               	movwf	LCD_Write_String@a
  6253  075A  3090               	movlw	high (STR_1| (0+32768))
  6254  075B  00F6               	movwf	LCD_Write_String@a+1
  6255  075C  3189  216B  3185   	fcall	_LCD_Write_String
  6256                           
  6257                           ;main.c: 152: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6258  075F  01F4               	clrf	LCD_Set_Cursor@y
  6259  0760  3005               	movlw	5
  6260  0761  318A  22F1  3185   	fcall	_LCD_Set_Cursor
  6261  0764  0021               	movlb	1	; select bank1
  6262  0765  083D               	movf	((main@analogs+1)^(0+128)+2),w
  6263  0766  00FA               	movwf	LCD_Write_Int@value+1
  6264  0767  083C               	movf	(main@analogs^(0+128)+2),w
  6265  0768  00F9               	movwf	LCD_Write_Int@value
  6266  0769  01FB               	clrf	LCD_Write_Int@fieldLength
  6267  076A  03FB               	decf	LCD_Write_Int@fieldLength,f
  6268  076B  01FC               	clrf	LCD_Write_Int@numPlaces
  6269  076C  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6270  076D  01FD               	clrf	LCD_Write_Int@sign
  6271  076E  3180  209F  3185   	fcall	_LCD_Write_Int
  6272                           
  6273                           ;main.c: 153: LCD_Write_Char(0);
  6274  0771  3000               	movlw	0
  6275  0772  318A  221E  3185   	fcall	_LCD_Write_Char
  6276                           
  6277                           ;main.c: 154: LCD_Write_Char(70);
  6278  0775  3046               	movlw	70
  6279  0776  318A  221E  3185   	fcall	_LCD_Write_Char
  6280                           
  6281                           ;main.c: 155: LCD_Write_Char(' ');
  6282  0779  3020               	movlw	32
  6283  077A  318A  221E  3185   	fcall	_LCD_Write_Char
  6284                           
  6285                           ;main.c: 156: LCD_Write_Char(' ');
  6286  077D  3020               	movlw	32
  6287  077E  318A  221E  3185   	fcall	_LCD_Write_Char
  6288                           
  6289                           ;main.c: 158: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6290  0781  01F4               	clrf	LCD_Set_Cursor@y
  6291  0782  0AF4               	incf	LCD_Set_Cursor@y,f
  6292  0783  3000               	movlw	0
  6293  0784  318A  22F1  3185   	fcall	_LCD_Set_Cursor
  6294  0787  301B               	movlw	low (STR_2| (0+32768))
  6295  0788  00F5               	movwf	LCD_Write_String@a
  6296  0789  3090               	movlw	high (STR_2| (0+32768))
  6297  078A  00F6               	movwf	LCD_Write_String@a+1
  6298  078B  3189  216B  3185   	fcall	_LCD_Write_String
  6299                           
  6300                           ;main.c: 159: LCD_Write_Char(' ');
  6301  078E  3020               	movlw	32
  6302  078F  318A  221E  3185   	fcall	_LCD_Write_Char
  6303                           
  6304                           ;main.c: 160: LCD_Write_Int(dutyCycle6,5,0,0);
  6305  0792  0021               	movlb	1	; select bank1
  6306  0793  0835               	movf	(main@dutyCycle6+1)^(0+128),w
  6307  0794  00FA               	movwf	LCD_Write_Int@value+1
  6308  0795  0834               	movf	main@dutyCycle6^(0+128),w
  6309  0796  00F9               	movwf	LCD_Write_Int@value
  6310  0797  3005               	movlw	5
  6311  0798  0020               	movlb	0	; select bank0
  6312  0799  00ED               	movwf	??_main
  6313  079A  086D               	movf	??_main,w
  6314  079B  00FB               	movwf	LCD_Write_Int@fieldLength
  6315  079C  01FC               	clrf	LCD_Write_Int@numPlaces
  6316  079D  01FD               	clrf	LCD_Write_Int@sign
  6317  079E  3180  209F  3185   	fcall	_LCD_Write_Int
  6318                           
  6319                           ;main.c: 172: dutyCycle6 = PID_Calculate(set,analogs[1]);
  6320  07A1  0021               	movlb	1	; select bank1
  6321  07A2  083D               	movf	((main@analogs+1)^(0+128)+2),w
  6322  07A3  0020               	movlb	0	; select bank0
  6323  07A4  00A3               	movwf	PID_Calculate@temp+1
  6324  07A5  0021               	movlb	1	; select bank1
  6325  07A6  083C               	movf	(main@analogs^(0+128)+2),w
  6326  07A7  0020               	movlb	0	; select bank0
  6327  07A8  00A2               	movwf	PID_Calculate@temp
  6328  07A9  0021               	movlb	1	; select bank1
  6329  07AA  0840               	movf	(main@set+1)^(0+128),w
  6330  07AB  0020               	movlb	0	; select bank0
  6331  07AC  00A1               	movwf	PID_Calculate@setpoint+1
  6332  07AD  0021               	movlb	1	; select bank1
  6333  07AE  083F               	movf	main@set^(0+128),w
  6334  07AF  0020               	movlb	0	; select bank0
  6335  07B0  00A0               	movwf	PID_Calculate@setpoint
  6336  07B1  3182  225E  3185   	fcall	_PID_Calculate
  6337  07B4  0020               	movlb	0	; select bank0
  6338  07B5  0820               	movf	?_PID_Calculate,w
  6339  07B6  00E9               	movwf	___fttol@f1
  6340  07B7  0821               	movf	?_PID_Calculate+1,w
  6341  07B8  00EA               	movwf	___fttol@f1+1
  6342  07B9  0822               	movf	?_PID_Calculate+2,w
  6343  07BA  00EB               	movwf	___fttol@f1+2
  6344  07BB  318D  254E  3185   	fcall	___fttol
  6345  07BE  0020               	movlb	0	; select bank0
  6346  07BF  086A               	movf	?___fttol+1,w
  6347  07C0  0021               	movlb	1	; select bank1
  6348  07C1  00B5               	movwf	(main@dutyCycle6+1)^(0+128)
  6349  07C2  0020               	movlb	0	; select bank0
  6350  07C3  0869               	movf	?___fttol,w
  6351  07C4  0021               	movlb	1	; select bank1
  6352  07C5  00B4               	movwf	main@dutyCycle6^(0+128)
  6353                           
  6354                           ;main.c: 175: loop=0;
  6355  07C6  01B2               	clrf	main@loop^(0+128)
  6356  07C7                     l2900:	
  6357                           
  6358                           ;main.c: 176: }
  6359                           ;main.c: 374: loop+=1;
  6360  07C7  3001               	movlw	1
  6361  07C8  0020               	movlb	0	; select bank0
  6362  07C9  00ED               	movwf	??_main
  6363  07CA  086D               	movf	??_main,w
  6364  07CB  0021               	movlb	1	; select bank1
  6365  07CC  07B2               	addwf	main@loop^(0+128),f
  6366  07CD  2DEE               	goto	l2784
  6367  07CE                     __end_of_main:	
  6368                           
  6369                           	psect	text1
  6370  036A                     __ptext1:	
  6371 ;; *************** function _tempCalc *****************
  6372 ;; Defined at:
  6373 ;;		line 4 in file "tempCalc.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  analogValue     2   61[BANK0 ] int 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  steinhart       3   70[BANK0 ] float 
  6378 ;;  R               3   64[BANK0 ] float 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  3   61[BANK0 ] float 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6388 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;Total ram usage:       12 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    4
  6395 ;; This function calls:
  6396 ;;		___awtoft
  6397 ;;		___ftadd
  6398 ;;		___ftdiv
  6399 ;;		___ftmul
  6400 ;;		___ftsub
  6401 ;;		_log
  6402 ;; This function is called by:
  6403 ;;		_main
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function _tempCalc
  6409  036A                     _tempCalc:	
  6410                           
  6411                           ;tempCalc.c: 6: float R, steinhart;
  6412                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6413                           
  6414                           ;incstack = 0
  6415                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6416  036A  3000               	movlw	0
  6417  036B  0020               	movlb	0	; select bank0
  6418  036C  00C0               	movwf	___ftadd@f1
  6419  036D  3080               	movlw	128
  6420  036E  00C1               	movwf	___ftadd@f1+1
  6421  036F  30BF               	movlw	191
  6422  0370  00C2               	movwf	___ftadd@f1+2
  6423  0371  085E               	movf	tempCalc@analogValue+1,w
  6424  0372  00F9               	movwf	___awtoft@c+1
  6425  0373  085D               	movf	tempCalc@analogValue,w
  6426  0374  00F8               	movwf	___awtoft@c
  6427  0375  3189  21D8  3183   	fcall	___awtoft
  6428  0378  0878               	movf	?___awtoft,w
  6429  0379  0020               	movlb	0	; select bank0
  6430  037A  00B0               	movwf	___ftdiv@f2
  6431  037B  0879               	movf	?___awtoft+1,w
  6432  037C  00B1               	movwf	___ftdiv@f2+1
  6433  037D  087A               	movf	?___awtoft+2,w
  6434  037E  00B2               	movwf	___ftdiv@f2+2
  6435  037F  30C0               	movlw	192
  6436  0380  00B3               	movwf	___ftdiv@f1
  6437  0381  307F               	movlw	127
  6438  0382  00B4               	movwf	___ftdiv@f1+1
  6439  0383  3044               	movlw	68
  6440  0384  00B5               	movwf	___ftdiv@f1+2
  6441  0385  318D  25F3  3183   	fcall	___ftdiv
  6442  0388  0020               	movlb	0	; select bank0
  6443  0389  0830               	movf	?___ftdiv,w
  6444  038A  00C3               	movwf	___ftadd@f2
  6445  038B  0831               	movf	?___ftdiv+1,w
  6446  038C  00C4               	movwf	___ftadd@f2+1
  6447  038D  0832               	movf	?___ftdiv+2,w
  6448  038E  00C5               	movwf	___ftadd@f2+2
  6449  038F  3181  2168  3183   	fcall	___ftadd
  6450  0392  0020               	movlb	0	; select bank0
  6451  0393  0840               	movf	?___ftadd,w
  6452  0394  00E3               	movwf	_tempCalc$977
  6453  0395  0841               	movf	?___ftadd+1,w
  6454  0396  00E4               	movwf	_tempCalc$977+1
  6455  0397  0842               	movf	?___ftadd+2,w
  6456  0398  00E5               	movwf	_tempCalc$977+2
  6457                           
  6458                           ;tempCalc.c: 6: float R, steinhart;
  6459                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6460  0399  0863               	movf	_tempCalc$977,w
  6461  039A  00B0               	movwf	___ftdiv@f2
  6462  039B  0864               	movf	_tempCalc$977+1,w
  6463  039C  00B1               	movwf	___ftdiv@f2+1
  6464  039D  0865               	movf	_tempCalc$977+2,w
  6465  039E  00B2               	movwf	___ftdiv@f2+2
  6466  039F  3060               	movlw	96
  6467  03A0  00B3               	movwf	___ftdiv@f1
  6468  03A1  301A               	movlw	26
  6469  03A2  00B4               	movwf	___ftdiv@f1+1
  6470  03A3  3046               	movlw	70
  6471  03A4  00B5               	movwf	___ftdiv@f1+2
  6472  03A5  318D  25F3  3183   	fcall	___ftdiv
  6473  03A8  0020               	movlb	0	; select bank0
  6474  03A9  0830               	movf	?___ftdiv,w
  6475  03AA  00E0               	movwf	tempCalc@R
  6476  03AB  0831               	movf	?___ftdiv+1,w
  6477  03AC  00E1               	movwf	tempCalc@R+1
  6478  03AD  0832               	movf	?___ftdiv+2,w
  6479  03AE  00E2               	movwf	tempCalc@R+2
  6480                           
  6481                           ;tempCalc.c: 10: steinhart = R /10000;
  6482  03AF  3040               	movlw	64
  6483  03B0  00B0               	movwf	___ftdiv@f2
  6484  03B1  301C               	movlw	28
  6485  03B2  00B1               	movwf	___ftdiv@f2+1
  6486  03B3  3046               	movlw	70
  6487  03B4  00B2               	movwf	___ftdiv@f2+2
  6488  03B5  0860               	movf	tempCalc@R,w
  6489  03B6  00B3               	movwf	___ftdiv@f1
  6490  03B7  0861               	movf	tempCalc@R+1,w
  6491  03B8  00B4               	movwf	___ftdiv@f1+1
  6492  03B9  0862               	movf	tempCalc@R+2,w
  6493  03BA  00B5               	movwf	___ftdiv@f1+2
  6494  03BB  318D  25F3  3183   	fcall	___ftdiv
  6495  03BE  0020               	movlb	0	; select bank0
  6496  03BF  0830               	movf	?___ftdiv,w
  6497  03C0  00E6               	movwf	tempCalc@steinhart
  6498  03C1  0831               	movf	?___ftdiv+1,w
  6499  03C2  00E7               	movwf	tempCalc@steinhart+1
  6500  03C3  0832               	movf	?___ftdiv+2,w
  6501  03C4  00E8               	movwf	tempCalc@steinhart+2
  6502                           
  6503                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6504  03C5  0866               	movf	tempCalc@steinhart,w
  6505  03C6  00D7               	movwf	log@x
  6506  03C7  0867               	movf	tempCalc@steinhart+1,w
  6507  03C8  00D8               	movwf	log@x+1
  6508  03C9  0868               	movf	tempCalc@steinhart+2,w
  6509  03CA  00D9               	movwf	log@x+2
  6510  03CB  318E  269C  3183   	fcall	_log
  6511  03CE  0020               	movlb	0	; select bank0
  6512  03CF  0857               	movf	?_log,w
  6513  03D0  00E6               	movwf	tempCalc@steinhart
  6514  03D1  0858               	movf	?_log+1,w
  6515  03D2  00E7               	movwf	tempCalc@steinhart+1
  6516  03D3  0859               	movf	?_log+2,w
  6517  03D4  00E8               	movwf	tempCalc@steinhart+2
  6518                           
  6519                           ;tempCalc.c: 12: steinhart /= 3930;
  6520  03D5  30A0               	movlw	160
  6521  03D6  00B0               	movwf	___ftdiv@f2
  6522  03D7  3075               	movlw	117
  6523  03D8  00B1               	movwf	___ftdiv@f2+1
  6524  03D9  3045               	movlw	69
  6525  03DA  00B2               	movwf	___ftdiv@f2+2
  6526  03DB  0866               	movf	tempCalc@steinhart,w
  6527  03DC  00B3               	movwf	___ftdiv@f1
  6528  03DD  0867               	movf	tempCalc@steinhart+1,w
  6529  03DE  00B4               	movwf	___ftdiv@f1+1
  6530  03DF  0868               	movf	tempCalc@steinhart+2,w
  6531  03E0  00B5               	movwf	___ftdiv@f1+2
  6532  03E1  318D  25F3  3183   	fcall	___ftdiv
  6533  03E4  0020               	movlb	0	; select bank0
  6534  03E5  0830               	movf	?___ftdiv,w
  6535  03E6  00E6               	movwf	tempCalc@steinhart
  6536  03E7  0831               	movf	?___ftdiv+1,w
  6537  03E8  00E7               	movwf	tempCalc@steinhart+1
  6538  03E9  0832               	movf	?___ftdiv+2,w
  6539  03EA  00E8               	movwf	tempCalc@steinhart+2
  6540                           
  6541                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  6542  03EB  30CF               	movlw	207
  6543  03EC  00C0               	movwf	___ftadd@f1
  6544  03ED  305B               	movlw	91
  6545  03EE  00C1               	movwf	___ftadd@f1+1
  6546  03EF  303B               	movlw	59
  6547  03F0  00C2               	movwf	___ftadd@f1+2
  6548  03F1  0866               	movf	tempCalc@steinhart,w
  6549  03F2  00C3               	movwf	___ftadd@f2
  6550  03F3  0867               	movf	tempCalc@steinhart+1,w
  6551  03F4  00C4               	movwf	___ftadd@f2+1
  6552  03F5  0868               	movf	tempCalc@steinhart+2,w
  6553  03F6  00C5               	movwf	___ftadd@f2+2
  6554  03F7  3181  2168  3183   	fcall	___ftadd
  6555  03FA  0020               	movlb	0	; select bank0
  6556  03FB  0840               	movf	?___ftadd,w
  6557  03FC  00E6               	movwf	tempCalc@steinhart
  6558  03FD  0841               	movf	?___ftadd+1,w
  6559  03FE  00E7               	movwf	tempCalc@steinhart+1
  6560  03FF  0842               	movf	?___ftadd+2,w
  6561  0400  00E8               	movwf	tempCalc@steinhart+2
  6562                           
  6563                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  6564  0401  0866               	movf	tempCalc@steinhart,w
  6565  0402  00B0               	movwf	___ftdiv@f2
  6566  0403  0867               	movf	tempCalc@steinhart+1,w
  6567  0404  00B1               	movwf	___ftdiv@f2+1
  6568  0405  0868               	movf	tempCalc@steinhart+2,w
  6569  0406  00B2               	movwf	___ftdiv@f2+2
  6570  0407  3000               	movlw	0
  6571  0408  00B3               	movwf	___ftdiv@f1
  6572  0409  3080               	movlw	128
  6573  040A  00B4               	movwf	___ftdiv@f1+1
  6574  040B  303F               	movlw	63
  6575  040C  00B5               	movwf	___ftdiv@f1+2
  6576  040D  318D  25F3  3183   	fcall	___ftdiv
  6577  0410  0020               	movlb	0	; select bank0
  6578  0411  0830               	movf	?___ftdiv,w
  6579  0412  00E6               	movwf	tempCalc@steinhart
  6580  0413  0831               	movf	?___ftdiv+1,w
  6581  0414  00E7               	movwf	tempCalc@steinhart+1
  6582  0415  0832               	movf	?___ftdiv+2,w
  6583  0416  00E8               	movwf	tempCalc@steinhart+2
  6584                           
  6585                           ;tempCalc.c: 16: steinhart -= 273.15;
  6586  0417  3093               	movlw	147
  6587  0418  00CD               	movwf	___ftsub@f2
  6588  0419  3088               	movlw	136
  6589  041A  00CE               	movwf	___ftsub@f2+1
  6590  041B  3043               	movlw	67
  6591  041C  00CF               	movwf	___ftsub@f2+2
  6592  041D  0866               	movf	tempCalc@steinhart,w
  6593  041E  00D0               	movwf	___ftsub@f1
  6594  041F  0867               	movf	tempCalc@steinhart+1,w
  6595  0420  00D1               	movwf	___ftsub@f1+1
  6596  0421  0868               	movf	tempCalc@steinhart+2,w
  6597  0422  00D2               	movwf	___ftsub@f1+2
  6598  0423  3189  21BA  3183   	fcall	___ftsub
  6599  0426  0020               	movlb	0	; select bank0
  6600  0427  084D               	movf	?___ftsub,w
  6601  0428  00E6               	movwf	tempCalc@steinhart
  6602  0429  084E               	movf	?___ftsub+1,w
  6603  042A  00E7               	movwf	tempCalc@steinhart+1
  6604  042B  084F               	movf	?___ftsub+2,w
  6605  042C  00E8               	movwf	tempCalc@steinhart+2
  6606                           
  6607                           ;tempCalc.c: 18: steinhart*=10;
  6608  042D  3000               	movlw	0
  6609  042E  00A0               	movwf	___ftmul@f1
  6610  042F  3020               	movlw	32
  6611  0430  00A1               	movwf	___ftmul@f1+1
  6612  0431  3041               	movlw	65
  6613  0432  00A2               	movwf	___ftmul@f1+2
  6614  0433  0866               	movf	tempCalc@steinhart,w
  6615  0434  00A3               	movwf	___ftmul@f2
  6616  0435  0867               	movf	tempCalc@steinhart+1,w
  6617  0436  00A4               	movwf	___ftmul@f2+1
  6618  0437  0868               	movf	tempCalc@steinhart+2,w
  6619  0438  00A5               	movwf	___ftmul@f2+2
  6620  0439  318F  274C  3183   	fcall	___ftmul
  6621  043C  0020               	movlb	0	; select bank0
  6622  043D  0820               	movf	?___ftmul,w
  6623  043E  00E6               	movwf	tempCalc@steinhart
  6624  043F  0821               	movf	?___ftmul+1,w
  6625  0440  00E7               	movwf	tempCalc@steinhart+1
  6626  0441  0822               	movf	?___ftmul+2,w
  6627  0442  00E8               	movwf	tempCalc@steinhart+2
  6628                           
  6629                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  6630  0443  3000               	movlw	0
  6631  0444  00C0               	movwf	___ftadd@f1
  6632  0445  30A0               	movlw	160
  6633  0446  00C1               	movwf	___ftadd@f1+1
  6634  0447  3043               	movlw	67
  6635  0448  00C2               	movwf	___ftadd@f1+2
  6636  0449  3000               	movlw	0
  6637  044A  00B0               	movwf	___ftdiv@f2
  6638  044B  30A0               	movlw	160
  6639  044C  00B1               	movwf	___ftdiv@f2+1
  6640  044D  3040               	movlw	64
  6641  044E  00B2               	movwf	___ftdiv@f2+2
  6642  044F  3000               	movlw	0
  6643  0450  00A0               	movwf	___ftmul@f1
  6644  0451  3010               	movlw	16
  6645  0452  00A1               	movwf	___ftmul@f1+1
  6646  0453  3041               	movlw	65
  6647  0454  00A2               	movwf	___ftmul@f1+2
  6648  0455  0866               	movf	tempCalc@steinhart,w
  6649  0456  00A3               	movwf	___ftmul@f2
  6650  0457  0867               	movf	tempCalc@steinhart+1,w
  6651  0458  00A4               	movwf	___ftmul@f2+1
  6652  0459  0868               	movf	tempCalc@steinhart+2,w
  6653  045A  00A5               	movwf	___ftmul@f2+2
  6654  045B  318F  274C  3183   	fcall	___ftmul
  6655  045E  0020               	movlb	0	; select bank0
  6656  045F  0820               	movf	?___ftmul,w
  6657  0460  00B3               	movwf	___ftdiv@f1
  6658  0461  0821               	movf	?___ftmul+1,w
  6659  0462  00B4               	movwf	___ftdiv@f1+1
  6660  0463  0822               	movf	?___ftmul+2,w
  6661  0464  00B5               	movwf	___ftdiv@f1+2
  6662  0465  318D  25F3  3183   	fcall	___ftdiv
  6663  0468  0020               	movlb	0	; select bank0
  6664  0469  0830               	movf	?___ftdiv,w
  6665  046A  00C3               	movwf	___ftadd@f2
  6666  046B  0831               	movf	?___ftdiv+1,w
  6667  046C  00C4               	movwf	___ftadd@f2+1
  6668  046D  0832               	movf	?___ftdiv+2,w
  6669  046E  00C5               	movwf	___ftadd@f2+2
  6670  046F  3181  2168         	fcall	___ftadd
  6671  0471  0020               	movlb	0	; select bank0
  6672  0472  0840               	movf	?___ftadd,w
  6673  0473  00E6               	movwf	tempCalc@steinhart
  6674  0474  0841               	movf	?___ftadd+1,w
  6675  0475  00E7               	movwf	tempCalc@steinhart+1
  6676  0476  0842               	movf	?___ftadd+2,w
  6677  0477  00E8               	movwf	tempCalc@steinhart+2
  6678                           
  6679                           ;tempCalc.c: 22: return steinhart;
  6680  0478  0866               	movf	tempCalc@steinhart,w
  6681  0479  00DD               	movwf	?_tempCalc
  6682  047A  0867               	movf	tempCalc@steinhart+1,w
  6683  047B  00DE               	movwf	?_tempCalc+1
  6684  047C  0868               	movf	tempCalc@steinhart+2,w
  6685  047D  00DF               	movwf	?_tempCalc+2
  6686  047E  0008               	return
  6687  047F                     __end_of_tempCalc:	
  6688                           
  6689                           	psect	text2
  6690  0E9C                     __ptext2:	
  6691 ;; *************** function _log *****************
  6692 ;; Defined at:
  6693 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  x               3   55[BANK0 ] float 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  exponent        2   59[BANK0 ] int 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  3   55[BANK0 ] int 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6707 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;Total ram usage:        6 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    3
  6714 ;; This function calls:
  6715 ;;		___awtoft
  6716 ;;		___ftadd
  6717 ;;		___ftge
  6718 ;;		___ftmul
  6719 ;;		_eval_poly
  6720 ;;		_frexp
  6721 ;; This function is called by:
  6722 ;;		_tempCalc
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           
  6727                           ;psect for function _log
  6728  0E9C                     _log:	
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6732  0E9C  0020               	movlb	0	; select bank0
  6733  0E9D  0857               	movf	log@x,w
  6734  0E9E  00F0               	movwf	___ftge@ff1
  6735  0E9F  0858               	movf	log@x+1,w
  6736  0EA0  00F1               	movwf	___ftge@ff1+1
  6737  0EA1  0859               	movf	log@x+2,w
  6738  0EA2  00F2               	movwf	___ftge@ff1+2
  6739  0EA3  3000               	movlw	0
  6740  0EA4  00F3               	movwf	___ftge@ff2
  6741  0EA5  3000               	movlw	0
  6742  0EA6  00F4               	movwf	___ftge@ff2+1
  6743  0EA7  3000               	movlw	0
  6744  0EA8  00F5               	movwf	___ftge@ff2+2
  6745  0EA9  318A  227B  318E   	fcall	___ftge
  6746  0EAC  1803               	btfsc	3,0
  6747  0EAD  2EBB               	goto	l2312
  6748  0EAE  3021               	movlw	33
  6749  0EAF  0021               	movlb	1	; select bank1
  6750  0EB0  00CE               	movwf	_errno^(0+128)
  6751  0EB1  3000               	movlw	0
  6752  0EB2  00CF               	movwf	(_errno^(0+128)+1)
  6753  0EB3  3000               	movlw	0
  6754  0EB4  0020               	movlb	0	; select bank0
  6755  0EB5  00D7               	movwf	?_log
  6756  0EB6  3000               	movlw	0
  6757  0EB7  00D8               	movwf	?_log+1
  6758  0EB8  3000               	movlw	0
  6759  0EB9  00D9               	movwf	?_log+2
  6760  0EBA  0008               	return
  6761  0EBB                     l2312:	
  6762  0EBB  0020               	movlb	0	; select bank0
  6763  0EBC  0859               	movf	log@x+2,w
  6764  0EBD  0458               	iorwf	log@x+1,w
  6765  0EBE  0457               	iorwf	log@x,w
  6766  0EBF  1D03               	skipz
  6767  0EC0  2ECE               	goto	l2318
  6768  0EC1  3022               	movlw	34
  6769  0EC2  0021               	movlb	1	; select bank1
  6770  0EC3  00CE               	movwf	_errno^(0+128)
  6771  0EC4  3000               	movlw	0
  6772  0EC5  00CF               	movwf	(_errno^(0+128)+1)
  6773  0EC6  3000               	movlw	0
  6774  0EC7  0020               	movlb	0	; select bank0
  6775  0EC8  00D7               	movwf	?_log
  6776  0EC9  3000               	movlw	0
  6777  0ECA  00D8               	movwf	?_log+1
  6778  0ECB  3000               	movlw	0
  6779  0ECC  00D9               	movwf	?_log+2
  6780  0ECD  0008               	return
  6781  0ECE                     l2318:	
  6782  0ECE  3000               	movlw	0
  6783  0ECF  00C0               	movwf	___ftadd@f1
  6784  0ED0  3080               	movlw	128
  6785  0ED1  00C1               	movwf	___ftadd@f1+1
  6786  0ED2  30BF               	movlw	191
  6787  0ED3  00C2               	movwf	___ftadd@f1+2
  6788  0ED4  3000               	movlw	0
  6789  0ED5  00A0               	movwf	___ftmul@f1
  6790  0ED6  3000               	movlw	0
  6791  0ED7  00A1               	movwf	___ftmul@f1+1
  6792  0ED8  3040               	movlw	64
  6793  0ED9  00A2               	movwf	___ftmul@f1+2
  6794  0EDA  305B               	movlw	(low (log@exponent| 0))& (0+255)
  6795  0EDB  00DA               	movwf	??_log
  6796  0EDC  085A               	movf	??_log,w
  6797  0EDD  00F3               	movwf	frexp@eptr
  6798  0EDE  0857               	movf	log@x,w
  6799  0EDF  00F0               	movwf	frexp@value
  6800  0EE0  0858               	movf	log@x+1,w
  6801  0EE1  00F1               	movwf	frexp@value+1
  6802  0EE2  0859               	movf	log@x+2,w
  6803  0EE3  00F2               	movwf	frexp@value+2
  6804  0EE4  318A  22B6  318E   	fcall	_frexp
  6805  0EE7  0870               	movf	?_frexp,w
  6806  0EE8  0020               	movlb	0	; select bank0
  6807  0EE9  00A3               	movwf	___ftmul@f2
  6808  0EEA  0871               	movf	?_frexp+1,w
  6809  0EEB  00A4               	movwf	___ftmul@f2+1
  6810  0EEC  0872               	movf	?_frexp+2,w
  6811  0EED  00A5               	movwf	___ftmul@f2+2
  6812  0EEE  318F  274C  318E   	fcall	___ftmul
  6813  0EF1  0020               	movlb	0	; select bank0
  6814  0EF2  0820               	movf	?___ftmul,w
  6815  0EF3  00C3               	movwf	___ftadd@f2
  6816  0EF4  0821               	movf	?___ftmul+1,w
  6817  0EF5  00C4               	movwf	___ftadd@f2+1
  6818  0EF6  0822               	movf	?___ftmul+2,w
  6819  0EF7  00C5               	movwf	___ftadd@f2+2
  6820  0EF8  3181  2168  318E   	fcall	___ftadd
  6821  0EFB  0020               	movlb	0	; select bank0
  6822  0EFC  0840               	movf	?___ftadd,w
  6823  0EFD  00D7               	movwf	log@x
  6824  0EFE  0841               	movf	?___ftadd+1,w
  6825  0EFF  00D8               	movwf	log@x+1
  6826  0F00  0842               	movf	?___ftadd+2,w
  6827  0F01  00D9               	movwf	log@x+2
  6828  0F02  30FF               	movlw	255
  6829  0F03  07DB               	addwf	log@exponent,f
  6830  0F04  30FF               	movlw	255
  6831  0F05  3DDC               	addwfc	log@exponent+1,f
  6832  0F06  0857               	movf	log@x,w
  6833  0F07  00CD               	movwf	eval_poly@x
  6834  0F08  0858               	movf	log@x+1,w
  6835  0F09  00CE               	movwf	eval_poly@x+1
  6836  0F0A  0859               	movf	log@x+2,w
  6837  0F0B  00CF               	movwf	eval_poly@x+2
  6838  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  6839  0F0D  00D0               	movwf	eval_poly@d
  6840  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  6841  0F0F  00D1               	movwf	eval_poly@d+1
  6842  0F10  3008               	movlw	8
  6843  0F11  00D2               	movwf	eval_poly@n
  6844  0F12  3000               	movlw	0
  6845  0F13  00D3               	movwf	eval_poly@n+1
  6846  0F14  318C  2408  318E   	fcall	_eval_poly
  6847  0F17  0020               	movlb	0	; select bank0
  6848  0F18  084D               	movf	?_eval_poly,w
  6849  0F19  00D7               	movwf	log@x
  6850  0F1A  084E               	movf	?_eval_poly+1,w
  6851  0F1B  00D8               	movwf	log@x+1
  6852  0F1C  084F               	movf	?_eval_poly+2,w
  6853  0F1D  00D9               	movwf	log@x+2
  6854  0F1E  0857               	movf	log@x,w
  6855  0F1F  00C0               	movwf	___ftadd@f1
  6856  0F20  0858               	movf	log@x+1,w
  6857  0F21  00C1               	movwf	___ftadd@f1+1
  6858  0F22  0859               	movf	log@x+2,w
  6859  0F23  00C2               	movwf	___ftadd@f1+2
  6860  0F24  3072               	movlw	114
  6861  0F25  00A0               	movwf	___ftmul@f1
  6862  0F26  3031               	movlw	49
  6863  0F27  00A1               	movwf	___ftmul@f1+1
  6864  0F28  303F               	movlw	63
  6865  0F29  00A2               	movwf	___ftmul@f1+2
  6866  0F2A  085C               	movf	log@exponent+1,w
  6867  0F2B  00F9               	movwf	___awtoft@c+1
  6868  0F2C  085B               	movf	log@exponent,w
  6869  0F2D  00F8               	movwf	___awtoft@c
  6870  0F2E  3189  21D8  318E   	fcall	___awtoft
  6871  0F31  0878               	movf	?___awtoft,w
  6872  0F32  0020               	movlb	0	; select bank0
  6873  0F33  00A3               	movwf	___ftmul@f2
  6874  0F34  0879               	movf	?___awtoft+1,w
  6875  0F35  00A4               	movwf	___ftmul@f2+1
  6876  0F36  087A               	movf	?___awtoft+2,w
  6877  0F37  00A5               	movwf	___ftmul@f2+2
  6878  0F38  318F  274C  318E   	fcall	___ftmul
  6879  0F3B  0020               	movlb	0	; select bank0
  6880  0F3C  0820               	movf	?___ftmul,w
  6881  0F3D  00C3               	movwf	___ftadd@f2
  6882  0F3E  0821               	movf	?___ftmul+1,w
  6883  0F3F  00C4               	movwf	___ftadd@f2+1
  6884  0F40  0822               	movf	?___ftmul+2,w
  6885  0F41  00C5               	movwf	___ftadd@f2+2
  6886  0F42  3181  2168         	fcall	___ftadd
  6887  0F44  0020               	movlb	0	; select bank0
  6888  0F45  0840               	movf	?___ftadd,w
  6889  0F46  00D7               	movwf	?_log
  6890  0F47  0841               	movf	?___ftadd+1,w
  6891  0F48  00D8               	movwf	?_log+1
  6892  0F49  0842               	movf	?___ftadd+2,w
  6893  0F4A  00D9               	movwf	?_log+2
  6894  0F4B  0008               	return
  6895  0F4C                     __end_of_log:	
  6896                           
  6897                           	psect	text3
  6898  0AB6                     __ptext3:	
  6899 ;; *************** function _frexp *****************
  6900 ;; Defined at:
  6901 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  value           3    0[COMMON] int 
  6904 ;;  eptr            1    3[COMMON] PTR int 
  6905 ;;		 -> log@exponent(2), 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  3    0[COMMON] PTR int 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;Total ram usage:        6 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_log
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           
  6931                           ;psect for function _frexp
  6932  0AB6                     _frexp:	
  6933                           
  6934                           ;incstack = 0
  6935                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6936  0AB6  0872               	movf	frexp@value+2,w
  6937  0AB7  0471               	iorwf	frexp@value+1,w
  6938  0AB8  0470               	iorwf	frexp@value,w
  6939  0AB9  1D03               	skipz
  6940  0ABA  2AC8               	goto	l2142
  6941  0ABB  0873               	movf	frexp@eptr,w
  6942  0ABC  0086               	movwf	6
  6943  0ABD  0187               	clrf	7
  6944  0ABE  3000               	movlw	0
  6945  0ABF  3FC0               	movwi [0]fsr1
  6946  0AC0  3FC1               	movwi [1]fsr1
  6947  0AC1  3000               	movlw	0
  6948  0AC2  00F0               	movwf	?_frexp
  6949  0AC3  3000               	movlw	0
  6950  0AC4  00F1               	movwf	?_frexp+1
  6951  0AC5  3000               	movlw	0
  6952  0AC6  00F2               	movwf	?_frexp+2
  6953  0AC7  0008               	return
  6954  0AC8                     l2142:	
  6955  0AC8  0872               	movf	frexp@value+2,w
  6956  0AC9  397F               	andlw	127
  6957  0ACA  00F4               	movwf	??_frexp
  6958  0ACB  01F5               	clrf	??_frexp+1
  6959  0ACC  35F4               	lslf	??_frexp,f
  6960  0ACD  0DF5               	rlf	??_frexp+1,f
  6961  0ACE  0873               	movf	frexp@eptr,w
  6962  0ACF  0086               	movwf	6
  6963  0AD0  0187               	clrf	7
  6964  0AD1  0874               	movf	??_frexp,w
  6965  0AD2  3FC0               	movwi [0]fsr1
  6966  0AD3  0875               	movf	??_frexp+1,w
  6967  0AD4  3FC1               	movwi [1]fsr1
  6968  0AD5  0D71               	rlf	frexp@value+1,w
  6969  0AD6  0D71               	rlf	frexp@value+1,w
  6970  0AD7  3901               	andlw	1
  6971  0AD8  00F4               	movwf	??_frexp
  6972  0AD9  01F5               	clrf	??_frexp+1
  6973  0ADA  0873               	movf	frexp@eptr,w
  6974  0ADB  0086               	movwf	6
  6975  0ADC  0187               	clrf	7
  6976  0ADD  0874               	movf	??_frexp,w
  6977  0ADE  0481               	iorwf	1,f
  6978  0ADF  3141               	addfsr 1,1
  6979  0AE0  0875               	movf	??_frexp+1,w
  6980  0AE1  0481               	iorwf	1,f
  6981  0AE2  0873               	movf	frexp@eptr,w
  6982  0AE3  0086               	movwf	6
  6983  0AE4  0187               	clrf	7
  6984  0AE5  3082               	movlw	130
  6985  0AE6  0781               	addwf	1,f
  6986  0AE7  3141               	addfsr 1,1
  6987  0AE8  30FF               	movlw	255
  6988  0AE9  3D81               	addwfc	1,f
  6989  0AEA  317F               	addfsr 1,-1
  6990  0AEB  0872               	movf	frexp@value+2,w
  6991  0AEC  3980               	andlw	-128
  6992  0AED  383F               	iorlw	63
  6993  0AEE  00F2               	movwf	frexp@value+2
  6994  0AEF  13F1               	bcf	frexp@value+1,7
  6995  0AF0  0008               	return
  6996  0AF1                     __end_of_frexp:	
  6997                           
  6998                           	psect	text4
  6999  0C08                     __ptext4:	
  7000 ;; *************** function _eval_poly *****************
  7001 ;; Defined at:
  7002 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  x               3   45[BANK0 ] PTR int 
  7005 ;;  d               2   48[BANK0 ] PTR const 
  7006 ;;		 -> log@coeff(27), 
  7007 ;;  n               2   50[BANK0 ] int 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  res             3   52[BANK0 ] int 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  3   45[BANK0 ] int 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7019 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;Total ram usage:       10 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    2
  7026 ;; This function calls:
  7027 ;;		___ftadd
  7028 ;;		___ftmul
  7029 ;;		___wmul
  7030 ;; This function is called by:
  7031 ;;		_log
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           
  7036                           ;psect for function _eval_poly
  7037  0C08                     _eval_poly:	
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7041  0C08  0020               	movlb	0	; select bank0
  7042  0C09  0853               	movf	eval_poly@n+1,w
  7043  0C0A  00F1               	movwf	___wmul@multiplier+1
  7044  0C0B  0852               	movf	eval_poly@n,w
  7045  0C0C  00F0               	movwf	___wmul@multiplier
  7046  0C0D  3003               	movlw	3
  7047  0C0E  00F2               	movwf	___wmul@multiplicand
  7048  0C0F  3000               	movlw	0
  7049  0C10  00F3               	movwf	___wmul@multiplicand+1
  7050  0C11  3189  219F  318C   	fcall	___wmul
  7051  0C14  0020               	movlb	0	; select bank0
  7052  0C15  0850               	movf	eval_poly@d,w
  7053  0C16  0770               	addwf	?___wmul,w
  7054  0C17  0084               	movwf	4
  7055  0C18  0851               	movf	eval_poly@d+1,w
  7056  0C19  3D71               	addwfc	?___wmul+1,w
  7057  0C1A  0085               	movwf	5
  7058  0C1B  3F00               	moviw [0]fsr0
  7059  0C1C  00D4               	movwf	eval_poly@res
  7060  0C1D  3F01               	moviw [1]fsr0
  7061  0C1E  00D5               	movwf	eval_poly@res+1
  7062  0C1F  3F02               	moviw [2]fsr0
  7063  0C20                     L1:	
  7064  0C20  00D6               	movwf	eval_poly@res+2
  7065  0C21  0852               	movf	eval_poly@n,w
  7066  0C22  0453               	iorwf	eval_poly@n+1,w
  7067  0C23  1903               	btfsc	3,2
  7068  0C24  2C61               	goto	l2160
  7069  0C25  30FF               	movlw	255
  7070  0C26  07D2               	addwf	eval_poly@n,f
  7071  0C27  30FF               	movlw	255
  7072  0C28  3DD3               	addwfc	eval_poly@n+1,f
  7073  0C29  0853               	movf	eval_poly@n+1,w
  7074  0C2A  00F1               	movwf	___wmul@multiplier+1
  7075  0C2B  0852               	movf	eval_poly@n,w
  7076  0C2C  00F0               	movwf	___wmul@multiplier
  7077  0C2D  3003               	movlw	3
  7078  0C2E  00F2               	movwf	___wmul@multiplicand
  7079  0C2F  3000               	movlw	0
  7080  0C30  00F3               	movwf	___wmul@multiplicand+1
  7081  0C31  3189  219F  318C   	fcall	___wmul
  7082  0C34  0020               	movlb	0	; select bank0
  7083  0C35  0850               	movf	eval_poly@d,w
  7084  0C36  0770               	addwf	?___wmul,w
  7085  0C37  0084               	movwf	4
  7086  0C38  0851               	movf	eval_poly@d+1,w
  7087  0C39  3D71               	addwfc	?___wmul+1,w
  7088  0C3A  0085               	movwf	5
  7089  0C3B  3F00               	moviw [0]fsr0
  7090  0C3C  00C0               	movwf	___ftadd@f1
  7091  0C3D  3F01               	moviw [1]fsr0
  7092  0C3E  00C1               	movwf	___ftadd@f1+1
  7093  0C3F  3F02               	moviw [2]fsr0
  7094  0C40  00C2               	movwf	___ftadd@f1+2
  7095  0C41  0854               	movf	eval_poly@res,w
  7096  0C42  00A0               	movwf	___ftmul@f1
  7097  0C43  0855               	movf	eval_poly@res+1,w
  7098  0C44  00A1               	movwf	___ftmul@f1+1
  7099  0C45  0856               	movf	eval_poly@res+2,w
  7100  0C46  00A2               	movwf	___ftmul@f1+2
  7101  0C47  084D               	movf	eval_poly@x,w
  7102  0C48  00A3               	movwf	___ftmul@f2
  7103  0C49  084E               	movf	eval_poly@x+1,w
  7104  0C4A  00A4               	movwf	___ftmul@f2+1
  7105  0C4B  084F               	movf	eval_poly@x+2,w
  7106  0C4C  00A5               	movwf	___ftmul@f2+2
  7107  0C4D  318F  274C  318C   	fcall	___ftmul
  7108  0C50  0020               	movlb	0	; select bank0
  7109  0C51  0820               	movf	?___ftmul,w
  7110  0C52  00C3               	movwf	___ftadd@f2
  7111  0C53  0821               	movf	?___ftmul+1,w
  7112  0C54  00C4               	movwf	___ftadd@f2+1
  7113  0C55  0822               	movf	?___ftmul+2,w
  7114  0C56  00C5               	movwf	___ftadd@f2+2
  7115  0C57  3181  2168  318C   	fcall	___ftadd
  7116  0C5A  0020               	movlb	0	; select bank0
  7117  0C5B  0840               	movf	?___ftadd,w
  7118  0C5C  00D4               	movwf	eval_poly@res
  7119  0C5D  0841               	movf	?___ftadd+1,w
  7120  0C5E  00D5               	movwf	eval_poly@res+1
  7121  0C5F  0842               	movf	?___ftadd+2,w
  7122  0C60  2C20               	goto	L1
  7123  0C61                     l2160:	
  7124  0C61  0854               	movf	eval_poly@res,w
  7125  0C62  00CD               	movwf	?_eval_poly
  7126  0C63  0855               	movf	eval_poly@res+1,w
  7127  0C64  00CE               	movwf	?_eval_poly+1
  7128  0C65  0856               	movf	eval_poly@res+2,w
  7129  0C66  00CF               	movwf	?_eval_poly+2
  7130  0C67  0008               	return
  7131  0C68                     __end_of_eval_poly:	
  7132                           
  7133                           	psect	text5
  7134  0F4C                     __ptext5:	
  7135 ;; *************** function ___ftmul *****************
  7136 ;; Defined at:
  7137 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  f1              3    0[BANK0 ] float 
  7140 ;;  f2              3    3[BANK0 ] float 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7143 ;;  sign            1   15[BANK0 ] unsigned char 
  7144 ;;  cntr            1   14[BANK0 ] unsigned char 
  7145 ;;  exp             1   10[BANK0 ] unsigned char 
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  3    0[BANK0 ] float 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0, pclath, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7155 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;Total ram usage:       16 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    1
  7162 ;; This function calls:
  7163 ;;		___ftpack
  7164 ;; This function is called by:
  7165 ;;		_tempCalc
  7166 ;;		_log
  7167 ;;		_eval_poly
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           
  7172                           ;psect for function ___ftmul
  7173  0F4C                     ___ftmul:	
  7174                           
  7175                           ;incstack = 0
  7176                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7177  0F4C  0020               	movlb	0	; select bank0
  7178  0F4D  0820               	movf	___ftmul@f1,w
  7179  0F4E  00A6               	movwf	??___ftmul
  7180  0F4F  0821               	movf	___ftmul@f1+1,w
  7181  0F50  00A7               	movwf	??___ftmul+1
  7182  0F51  0822               	movf	___ftmul@f1+2,w
  7183  0F52  00A8               	movwf	??___ftmul+2
  7184  0F53  1003               	clrc
  7185  0F54  0D27               	rlf	??___ftmul+1,w
  7186  0F55  0D28               	rlf	??___ftmul+2,w
  7187  0F56  00A9               	movwf	??___ftmul+3
  7188  0F57  0829               	movf	??___ftmul+3,w
  7189  0F58  00AA               	movwf	___ftmul@exp
  7190  0F59  082A               	movf	___ftmul@exp,w
  7191  0F5A  1D03               	btfss	3,2
  7192  0F5B  2F63               	goto	l2028
  7193  0F5C  3000               	movlw	0
  7194  0F5D  00A0               	movwf	?___ftmul
  7195  0F5E  3000               	movlw	0
  7196  0F5F  00A1               	movwf	?___ftmul+1
  7197  0F60  3000               	movlw	0
  7198  0F61  00A2               	movwf	?___ftmul+2
  7199  0F62  0008               	return
  7200  0F63                     l2028:	
  7201  0F63  0823               	movf	___ftmul@f2,w
  7202  0F64  00A6               	movwf	??___ftmul
  7203  0F65  0824               	movf	___ftmul@f2+1,w
  7204  0F66  00A7               	movwf	??___ftmul+1
  7205  0F67  0825               	movf	___ftmul@f2+2,w
  7206  0F68  00A8               	movwf	??___ftmul+2
  7207  0F69  1003               	clrc
  7208  0F6A  0D27               	rlf	??___ftmul+1,w
  7209  0F6B  0D28               	rlf	??___ftmul+2,w
  7210  0F6C  00A9               	movwf	??___ftmul+3
  7211  0F6D  0829               	movf	??___ftmul+3,w
  7212  0F6E  00AF               	movwf	___ftmul@sign
  7213  0F6F  082F               	movf	___ftmul@sign,w
  7214  0F70  1D03               	btfss	3,2
  7215  0F71  2F79               	goto	l2034
  7216  0F72  3000               	movlw	0
  7217  0F73  00A0               	movwf	?___ftmul
  7218  0F74  3000               	movlw	0
  7219  0F75  00A1               	movwf	?___ftmul+1
  7220  0F76  3000               	movlw	0
  7221  0F77  00A2               	movwf	?___ftmul+2
  7222  0F78  0008               	return
  7223  0F79                     l2034:	
  7224  0F79  082F               	movf	___ftmul@sign,w
  7225  0F7A  3E7B               	addlw	123
  7226  0F7B  00A6               	movwf	??___ftmul
  7227  0F7C  0826               	movf	??___ftmul,w
  7228  0F7D  07AA               	addwf	___ftmul@exp,f
  7229  0F7E  0820               	movf	___ftmul@f1,w
  7230  0F7F  00A6               	movwf	??___ftmul
  7231  0F80  0821               	movf	___ftmul@f1+1,w
  7232  0F81  00A7               	movwf	??___ftmul+1
  7233  0F82  0822               	movf	___ftmul@f1+2,w
  7234  0F83  00A8               	movwf	??___ftmul+2
  7235  0F84  3010               	movlw	16
  7236  0F85                     u2145:	
  7237  0F85  36A8               	lsrf	??___ftmul+2,f
  7238  0F86  0CA7               	rrf	??___ftmul+1,f
  7239  0F87  0CA6               	rrf	??___ftmul,f
  7240  0F88  0B89               	decfsz	9,f
  7241  0F89  2F85               	goto	u2145
  7242  0F8A  0826               	movf	??___ftmul,w
  7243  0F8B  00A9               	movwf	??___ftmul+3
  7244  0F8C  0829               	movf	??___ftmul+3,w
  7245  0F8D  00AF               	movwf	___ftmul@sign
  7246  0F8E  0823               	movf	___ftmul@f2,w
  7247  0F8F  00A6               	movwf	??___ftmul
  7248  0F90  0824               	movf	___ftmul@f2+1,w
  7249  0F91  00A7               	movwf	??___ftmul+1
  7250  0F92  0825               	movf	___ftmul@f2+2,w
  7251  0F93  00A8               	movwf	??___ftmul+2
  7252  0F94  3010               	movlw	16
  7253  0F95                     u2155:	
  7254  0F95  36A8               	lsrf	??___ftmul+2,f
  7255  0F96  0CA7               	rrf	??___ftmul+1,f
  7256  0F97  0CA6               	rrf	??___ftmul,f
  7257  0F98  0B89               	decfsz	9,f
  7258  0F99  2F95               	goto	u2155
  7259  0F9A  0826               	movf	??___ftmul,w
  7260  0F9B  00A9               	movwf	??___ftmul+3
  7261  0F9C  0829               	movf	??___ftmul+3,w
  7262  0F9D  06AF               	xorwf	___ftmul@sign,f
  7263  0F9E  3080               	movlw	128
  7264  0F9F  00A6               	movwf	??___ftmul
  7265  0FA0  0826               	movf	??___ftmul,w
  7266  0FA1  05AF               	andwf	___ftmul@sign,f
  7267  0FA2  17A1               	bsf	___ftmul@f1+1,7
  7268  0FA3  17A4               	bsf	___ftmul@f2+1,7
  7269  0FA4  30FF               	movlw	255
  7270  0FA5  05A3               	andwf	___ftmul@f2,f
  7271  0FA6  30FF               	movlw	255
  7272  0FA7  05A4               	andwf	___ftmul@f2+1,f
  7273  0FA8  3000               	movlw	0
  7274  0FA9  05A5               	andwf	___ftmul@f2+2,f
  7275  0FAA  3000               	movlw	0
  7276  0FAB  00AB               	movwf	___ftmul@f3_as_product
  7277  0FAC  3000               	movlw	0
  7278  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
  7279  0FAE  3000               	movlw	0
  7280  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
  7281  0FB0  3007               	movlw	7
  7282  0FB1  00A6               	movwf	??___ftmul
  7283  0FB2  0826               	movf	??___ftmul,w
  7284  0FB3  00AE               	movwf	___ftmul@cntr
  7285  0FB4                     l2046:	
  7286  0FB4  1C20               	btfss	___ftmul@f1,0
  7287  0FB5  2FBC               	goto	l2050
  7288  0FB6  0823               	movf	___ftmul@f2,w
  7289  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
  7290  0FB8  0824               	movf	___ftmul@f2+1,w
  7291  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7292  0FBA  0825               	movf	___ftmul@f2+2,w
  7293  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7294  0FBC                     l2050:	
  7295  0FBC  3001               	movlw	1
  7296  0FBD                     u2175:	
  7297  0FBD  36A2               	lsrf	___ftmul@f1+2,f
  7298  0FBE  0CA1               	rrf	___ftmul@f1+1,f
  7299  0FBF  0CA0               	rrf	___ftmul@f1,f
  7300  0FC0  0B89               	decfsz	9,f
  7301  0FC1  2FBD               	goto	u2175
  7302  0FC2  3001               	movlw	1
  7303  0FC3                     u2185:	
  7304  0FC3  35A3               	lslf	___ftmul@f2,f
  7305  0FC4  0DA4               	rlf	___ftmul@f2+1,f
  7306  0FC5  0DA5               	rlf	___ftmul@f2+2,f
  7307  0FC6  0B89               	decfsz	9,f
  7308  0FC7  2FC3               	goto	u2185
  7309  0FC8  3001               	movlw	1
  7310  0FC9  02AE               	subwf	___ftmul@cntr,f
  7311  0FCA  1D03               	btfss	3,2
  7312  0FCB  2FB4               	goto	l2046
  7313  0FCC  3009               	movlw	9
  7314  0FCD  00A6               	movwf	??___ftmul
  7315  0FCE  0826               	movf	??___ftmul,w
  7316  0FCF  00AE               	movwf	___ftmul@cntr
  7317  0FD0                     l2058:	
  7318  0FD0  1C20               	btfss	___ftmul@f1,0
  7319  0FD1  2FD8               	goto	l2062
  7320  0FD2  0823               	movf	___ftmul@f2,w
  7321  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
  7322  0FD4  0824               	movf	___ftmul@f2+1,w
  7323  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7324  0FD6  0825               	movf	___ftmul@f2+2,w
  7325  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7326  0FD8                     l2062:	
  7327  0FD8  3001               	movlw	1
  7328  0FD9                     u2215:	
  7329  0FD9  36A2               	lsrf	___ftmul@f1+2,f
  7330  0FDA  0CA1               	rrf	___ftmul@f1+1,f
  7331  0FDB  0CA0               	rrf	___ftmul@f1,f
  7332  0FDC  0B89               	decfsz	9,f
  7333  0FDD  2FD9               	goto	u2215
  7334  0FDE  3001               	movlw	1
  7335  0FDF                     u2225:	
  7336  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7337  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7338  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
  7339  0FE2  0B89               	decfsz	9,f
  7340  0FE3  2FDF               	goto	u2225
  7341  0FE4  3001               	movlw	1
  7342  0FE5  02AE               	subwf	___ftmul@cntr,f
  7343  0FE6  1D03               	btfss	3,2
  7344  0FE7  2FD0               	goto	l2058
  7345  0FE8  082B               	movf	___ftmul@f3_as_product,w
  7346  0FE9  00F0               	movwf	___ftpack@arg
  7347  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
  7348  0FEB  00F1               	movwf	___ftpack@arg+1
  7349  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
  7350  0FED  00F2               	movwf	___ftpack@arg+2
  7351  0FEE  082A               	movf	___ftmul@exp,w
  7352  0FEF  00A6               	movwf	??___ftmul
  7353  0FF0  0826               	movf	??___ftmul,w
  7354  0FF1  00F3               	movwf	___ftpack@exp
  7355  0FF2  082F               	movf	___ftmul@sign,w
  7356  0FF3  00A7               	movwf	??___ftmul+1
  7357  0FF4  0827               	movf	??___ftmul+1,w
  7358  0FF5  00F4               	movwf	___ftpack@sign
  7359  0FF6  318C  2468         	fcall	___ftpack
  7360  0FF8  0870               	movf	?___ftpack,w
  7361  0FF9  0020               	movlb	0	; select bank0
  7362  0FFA  00A0               	movwf	?___ftmul
  7363  0FFB  0871               	movf	?___ftpack+1,w
  7364  0FFC  00A1               	movwf	?___ftmul+1
  7365  0FFD  0872               	movf	?___ftpack+2,w
  7366  0FFE  00A2               	movwf	?___ftmul+2
  7367  0FFF  0008               	return
  7368  1000                     __end_of___ftmul:	
  7369                           
  7370                           	psect	text6
  7371  0A7B                     __ptext6:	
  7372 ;; *************** function ___ftge *****************
  7373 ;; Defined at:
  7374 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  ff1             3    0[COMMON] float 
  7377 ;;  ff2             3    3[COMMON] float 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;		None               void
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        9 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_log
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function ___ftge
  7404  0A7B                     ___ftge:	
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7408  0A7B  1FF2               	btfss	___ftge@ff1+2,7
  7409  0A7C  2A91               	goto	l2118
  7410  0A7D  0970               	comf	___ftge@ff1,w
  7411  0A7E  00F6               	movwf	??___ftge
  7412  0A7F  0971               	comf	___ftge@ff1+1,w
  7413  0A80  00F7               	movwf	??___ftge+1
  7414  0A81  0972               	comf	___ftge@ff1+2,w
  7415  0A82  00F8               	movwf	??___ftge+2
  7416  0A83  0AF6               	incf	??___ftge,f
  7417  0A84  1903               	skipnz
  7418  0A85  0AF7               	incf	??___ftge+1,f
  7419  0A86  1903               	skipnz
  7420  0A87  0AF8               	incf	??___ftge+2,f
  7421  0A88  3000               	movlw	0
  7422  0A89  0776               	addwf	??___ftge,w
  7423  0A8A  00F0               	movwf	___ftge@ff1
  7424  0A8B  3000               	movlw	0
  7425  0A8C  3D77               	addwfc	??___ftge+1,w
  7426  0A8D  00F1               	movwf	___ftge@ff1+1
  7427  0A8E  3080               	movlw	128
  7428  0A8F  3D78               	addwfc	??___ftge+2,w
  7429  0A90  00F2               	movwf	___ftge@ff1+2
  7430  0A91                     l2118:	
  7431  0A91  1FF5               	btfss	___ftge@ff2+2,7
  7432  0A92  2AA7               	goto	l2122
  7433  0A93  0973               	comf	___ftge@ff2,w
  7434  0A94  00F6               	movwf	??___ftge
  7435  0A95  0974               	comf	___ftge@ff2+1,w
  7436  0A96  00F7               	movwf	??___ftge+1
  7437  0A97  0975               	comf	___ftge@ff2+2,w
  7438  0A98  00F8               	movwf	??___ftge+2
  7439  0A99  0AF6               	incf	??___ftge,f
  7440  0A9A  1903               	skipnz
  7441  0A9B  0AF7               	incf	??___ftge+1,f
  7442  0A9C  1903               	skipnz
  7443  0A9D  0AF8               	incf	??___ftge+2,f
  7444  0A9E  3000               	movlw	0
  7445  0A9F  0776               	addwf	??___ftge,w
  7446  0AA0  00F3               	movwf	___ftge@ff2
  7447  0AA1  3000               	movlw	0
  7448  0AA2  3D77               	addwfc	??___ftge+1,w
  7449  0AA3  00F4               	movwf	___ftge@ff2+1
  7450  0AA4  3080               	movlw	128
  7451  0AA5  3D78               	addwfc	??___ftge+2,w
  7452  0AA6  00F5               	movwf	___ftge@ff2+2
  7453  0AA7                     l2122:	
  7454  0AA7  3080               	movlw	128
  7455  0AA8  06F2               	xorwf	___ftge@ff1+2,f
  7456  0AA9  3080               	movlw	128
  7457  0AAA  06F5               	xorwf	___ftge@ff2+2,f
  7458  0AAB  0875               	movf	___ftge@ff2+2,w
  7459  0AAC  0272               	subwf	___ftge@ff1+2,w
  7460  0AAD  1D03               	skipz
  7461  0AAE  0008               	return
  7462  0AAF  0874               	movf	___ftge@ff2+1,w
  7463  0AB0  0271               	subwf	___ftge@ff1+1,w
  7464  0AB1  1D03               	skipz
  7465  0AB2  0008               	return
  7466  0AB3  0873               	movf	___ftge@ff2,w
  7467  0AB4  0270               	subwf	___ftge@ff1,w
  7468  0AB5  0008               	return
  7469  0AB6                     __end_of___ftge:	
  7470                           
  7471                           	psect	text7
  7472  09BA                     __ptext7:	
  7473 ;; *************** function ___ftsub *****************
  7474 ;; Defined at:
  7475 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  f2              3   45[BANK0 ] float 
  7478 ;;  f1              3   48[BANK0 ] float 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  3   45[BANK0 ] float 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0, pclath, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;Total ram usage:        6 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    2
  7497 ;; This function calls:
  7498 ;;		___ftadd
  7499 ;; This function is called by:
  7500 ;;		_tempCalc
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           
  7505                           ;psect for function ___ftsub
  7506  09BA                     ___ftsub:	
  7507                           
  7508                           ;incstack = 0
  7509                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7510  09BA  0020               	movlb	0	; select bank0
  7511  09BB  084F               	movf	___ftsub@f2+2,w
  7512  09BC  044E               	iorwf	___ftsub@f2+1,w
  7513  09BD  044D               	iorwf	___ftsub@f2,w
  7514  09BE  1903               	skipnz
  7515  09BF  29C2               	goto	l2510
  7516  09C0  3080               	movlw	128
  7517  09C1  06CF               	xorwf	___ftsub@f2+2,f
  7518  09C2                     l2510:	
  7519  09C2  0850               	movf	___ftsub@f1,w
  7520  09C3  00C0               	movwf	___ftadd@f1
  7521  09C4  0851               	movf	___ftsub@f1+1,w
  7522  09C5  00C1               	movwf	___ftadd@f1+1
  7523  09C6  0852               	movf	___ftsub@f1+2,w
  7524  09C7  00C2               	movwf	___ftadd@f1+2
  7525  09C8  084D               	movf	___ftsub@f2,w
  7526  09C9  00C3               	movwf	___ftadd@f2
  7527  09CA  084E               	movf	___ftsub@f2+1,w
  7528  09CB  00C4               	movwf	___ftadd@f2+1
  7529  09CC  084F               	movf	___ftsub@f2+2,w
  7530  09CD  00C5               	movwf	___ftadd@f2+2
  7531  09CE  3181  2168         	fcall	___ftadd
  7532  09D0  0020               	movlb	0	; select bank0
  7533  09D1  0840               	movf	?___ftadd,w
  7534  09D2  00CD               	movwf	?___ftsub
  7535  09D3  0841               	movf	?___ftadd+1,w
  7536  09D4  00CE               	movwf	?___ftsub+1
  7537  09D5  0842               	movf	?___ftadd+2,w
  7538  09D6  00CF               	movwf	?___ftsub+2
  7539  09D7  0008               	return
  7540  09D8                     __end_of___ftsub:	
  7541                           
  7542                           	psect	text8
  7543  0168                     __ptext8:	
  7544 ;; *************** function ___ftadd *****************
  7545 ;; Defined at:
  7546 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  f1              3   32[BANK0 ] float 
  7549 ;;  f2              3   35[BANK0 ] float 
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;  exp1            1   44[BANK0 ] unsigned char 
  7552 ;;  exp2            1   43[BANK0 ] unsigned char 
  7553 ;;  sign            1   42[BANK0 ] unsigned char 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  3   32[BANK0 ] float 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0, pclath, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7563 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;Total ram usage:       13 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:    1
  7570 ;; This function calls:
  7571 ;;		___ftpack
  7572 ;; This function is called by:
  7573 ;;		_tempCalc
  7574 ;;		___ftsub
  7575 ;;		_log
  7576 ;;		_eval_poly
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function ___ftadd
  7582  0168                     ___ftadd:	
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7586  0168  0020               	movlb	0	; select bank0
  7587  0169  0840               	movf	___ftadd@f1,w
  7588  016A  00C6               	movwf	??___ftadd
  7589  016B  0841               	movf	___ftadd@f1+1,w
  7590  016C  00C7               	movwf	??___ftadd+1
  7591  016D  0842               	movf	___ftadd@f1+2,w
  7592  016E  00C8               	movwf	??___ftadd+2
  7593  016F  1003               	clrc
  7594  0170  0D47               	rlf	??___ftadd+1,w
  7595  0171  0D48               	rlf	??___ftadd+2,w
  7596  0172  00C9               	movwf	??___ftadd+3
  7597  0173  0849               	movf	??___ftadd+3,w
  7598  0174  00CC               	movwf	___ftadd@exp1
  7599  0175  0843               	movf	___ftadd@f2,w
  7600  0176  00C6               	movwf	??___ftadd
  7601  0177  0844               	movf	___ftadd@f2+1,w
  7602  0178  00C7               	movwf	??___ftadd+1
  7603  0179  0845               	movf	___ftadd@f2+2,w
  7604  017A  00C8               	movwf	??___ftadd+2
  7605  017B  1003               	clrc
  7606  017C  0D47               	rlf	??___ftadd+1,w
  7607  017D  0D48               	rlf	??___ftadd+2,w
  7608  017E  00C9               	movwf	??___ftadd+3
  7609  017F  0849               	movf	??___ftadd+3,w
  7610  0180  00CB               	movwf	___ftadd@exp2
  7611  0181  084C               	movf	___ftadd@exp1,w
  7612  0182  1903               	btfsc	3,2
  7613  0183  2990               	goto	l1958
  7614  0184  084B               	movf	___ftadd@exp2,w
  7615  0185  024C               	subwf	___ftadd@exp1,w
  7616  0186  1803               	skipnc
  7617  0187  2997               	goto	l1962
  7618  0188  034C               	decf	___ftadd@exp1,w
  7619  0189  3AFF               	xorlw	255
  7620  018A  074B               	addwf	___ftadd@exp2,w
  7621  018B  00C6               	movwf	??___ftadd
  7622  018C  3019               	movlw	25
  7623  018D  0246               	subwf	??___ftadd,w
  7624  018E  1C03               	skipc
  7625  018F  2997               	goto	l1962
  7626  0190                     l1958:	
  7627  0190  0843               	movf	___ftadd@f2,w
  7628  0191  00C0               	movwf	?___ftadd
  7629  0192  0844               	movf	___ftadd@f2+1,w
  7630  0193  00C1               	movwf	?___ftadd+1
  7631  0194  0845               	movf	___ftadd@f2+2,w
  7632  0195  00C2               	movwf	?___ftadd+2
  7633  0196  0008               	return
  7634  0197                     l1962:	
  7635  0197  084B               	movf	___ftadd@exp2,w
  7636  0198  1903               	btfsc	3,2
  7637  0199  0008               	return
  7638  019A  084C               	movf	___ftadd@exp1,w
  7639  019B  024B               	subwf	___ftadd@exp2,w
  7640  019C  1803               	skipnc
  7641  019D  29A6               	goto	l1968
  7642  019E  034B               	decf	___ftadd@exp2,w
  7643  019F  3AFF               	xorlw	255
  7644  01A0  074C               	addwf	___ftadd@exp1,w
  7645  01A1  00C6               	movwf	??___ftadd
  7646  01A2  3019               	movlw	25
  7647  01A3  0246               	subwf	??___ftadd,w
  7648  01A4  1803               	btfsc	3,0
  7649  01A5  0008               	return
  7650  01A6                     l1968:	
  7651  01A6  3006               	movlw	6
  7652  01A7  00C6               	movwf	??___ftadd
  7653  01A8  0846               	movf	??___ftadd,w
  7654  01A9  00CA               	movwf	___ftadd@sign
  7655  01AA  1BC2               	btfsc	___ftadd@f1+2,7
  7656  01AB  17CA               	bsf	___ftadd@sign,7
  7657  01AC  1BC5               	btfsc	___ftadd@f2+2,7
  7658  01AD  174A               	bsf	___ftadd@sign,6
  7659  01AE  17C1               	bsf	___ftadd@f1+1,7
  7660  01AF  30FF               	movlw	255
  7661  01B0  05C0               	andwf	___ftadd@f1,f
  7662  01B1  30FF               	movlw	255
  7663  01B2  05C1               	andwf	___ftadd@f1+1,f
  7664  01B3  3000               	movlw	0
  7665  01B4  05C2               	andwf	___ftadd@f1+2,f
  7666  01B5  17C4               	bsf	___ftadd@f2+1,7
  7667  01B6  30FF               	movlw	255
  7668  01B7  05C3               	andwf	___ftadd@f2,f
  7669  01B8  30FF               	movlw	255
  7670  01B9  05C4               	andwf	___ftadd@f2+1,f
  7671  01BA  3000               	movlw	0
  7672  01BB  05C5               	andwf	___ftadd@f2+2,f
  7673  01BC  084B               	movf	___ftadd@exp2,w
  7674  01BD  024C               	subwf	___ftadd@exp1,w
  7675  01BE  1803               	skipnc
  7676  01BF  29E2               	goto	l1990
  7677  01C0                     l1980:	
  7678  01C0  3001               	movlw	1
  7679  01C1                     u1985:	
  7680  01C1  35C3               	lslf	___ftadd@f2,f
  7681  01C2  0DC4               	rlf	___ftadd@f2+1,f
  7682  01C3  0DC5               	rlf	___ftadd@f2+2,f
  7683  01C4  0B89               	decfsz	9,f
  7684  01C5  29C1               	goto	u1985
  7685  01C6  3001               	movlw	1
  7686  01C7  02CB               	subwf	___ftadd@exp2,f
  7687  01C8  084B               	movf	___ftadd@exp2,w
  7688  01C9  064C               	xorwf	___ftadd@exp1,w
  7689  01CA  1903               	skipnz
  7690  01CB  29DD               	goto	l1988
  7691  01CC  3001               	movlw	1
  7692  01CD  02CA               	subwf	___ftadd@sign,f
  7693  01CE  084A               	movf	___ftadd@sign,w
  7694  01CF  3907               	andlw	7
  7695  01D0  1903               	btfsc	3,2
  7696  01D1  29DD               	goto	l1988
  7697  01D2  29C0               	goto	l1980
  7698  01D3                     l1986:	
  7699  01D3  3001               	movlw	1
  7700  01D4                     u2015:	
  7701  01D4  36C2               	lsrf	___ftadd@f1+2,f
  7702  01D5  0CC1               	rrf	___ftadd@f1+1,f
  7703  01D6  0CC0               	rrf	___ftadd@f1,f
  7704  01D7  0B89               	decfsz	9,f
  7705  01D8  29D4               	goto	u2015
  7706  01D9  3001               	movlw	1
  7707  01DA  00C6               	movwf	??___ftadd
  7708  01DB  0846               	movf	??___ftadd,w
  7709  01DC  07CC               	addwf	___ftadd@exp1,f
  7710  01DD                     l1988:	
  7711  01DD  084C               	movf	___ftadd@exp1,w
  7712  01DE  064B               	xorwf	___ftadd@exp2,w
  7713  01DF  1903               	btfsc	3,2
  7714  01E0  2A07               	goto	l630
  7715  01E1  29D3               	goto	l1986
  7716  01E2                     l1990:	
  7717  01E2  084C               	movf	___ftadd@exp1,w
  7718  01E3  024B               	subwf	___ftadd@exp2,w
  7719  01E4  1803               	skipnc
  7720  01E5  2A07               	goto	l630
  7721  01E6                     l1992:	
  7722  01E6  3001               	movlw	1
  7723  01E7                     u2045:	
  7724  01E7  35C0               	lslf	___ftadd@f1,f
  7725  01E8  0DC1               	rlf	___ftadd@f1+1,f
  7726  01E9  0DC2               	rlf	___ftadd@f1+2,f
  7727  01EA  0B89               	decfsz	9,f
  7728  01EB  29E7               	goto	u2045
  7729  01EC  3001               	movlw	1
  7730  01ED  02CC               	subwf	___ftadd@exp1,f
  7731  01EE  084B               	movf	___ftadd@exp2,w
  7732  01EF  064C               	xorwf	___ftadd@exp1,w
  7733  01F0  1903               	skipnz
  7734  01F1  2A03               	goto	l2000
  7735  01F2  3001               	movlw	1
  7736  01F3  02CA               	subwf	___ftadd@sign,f
  7737  01F4  084A               	movf	___ftadd@sign,w
  7738  01F5  3907               	andlw	7
  7739  01F6  1903               	btfsc	3,2
  7740  01F7  2A03               	goto	l2000
  7741  01F8  29E6               	goto	l1992
  7742  01F9                     l1998:	
  7743  01F9  3001               	movlw	1
  7744  01FA                     u2075:	
  7745  01FA  36C5               	lsrf	___ftadd@f2+2,f
  7746  01FB  0CC4               	rrf	___ftadd@f2+1,f
  7747  01FC  0CC3               	rrf	___ftadd@f2,f
  7748  01FD  0B89               	decfsz	9,f
  7749  01FE  29FA               	goto	u2075
  7750  01FF  3001               	movlw	1
  7751  0200  00C6               	movwf	??___ftadd
  7752  0201  0846               	movf	??___ftadd,w
  7753  0202  07CB               	addwf	___ftadd@exp2,f
  7754  0203                     l2000:	
  7755  0203  084C               	movf	___ftadd@exp1,w
  7756  0204  064B               	xorwf	___ftadd@exp2,w
  7757  0205  1D03               	skipz
  7758  0206  29F9               	goto	l1998
  7759  0207                     l630:	
  7760  0207  1FCA               	btfss	___ftadd@sign,7
  7761  0208  2A19               	goto	l2004
  7762  0209  30FF               	movlw	255
  7763  020A  06C0               	xorwf	___ftadd@f1,f
  7764  020B  30FF               	movlw	255
  7765  020C  06C1               	xorwf	___ftadd@f1+1,f
  7766  020D  30FF               	movlw	255
  7767  020E  06C2               	xorwf	___ftadd@f1+2,f
  7768  020F  3001               	movlw	1
  7769  0210  07C0               	addwf	___ftadd@f1,f
  7770  0211  3000               	movlw	0
  7771  0212  1803               	skipnc
  7772  0213  3001               	movlw	1
  7773  0214  07C1               	addwf	___ftadd@f1+1,f
  7774  0215  3000               	movlw	0
  7775  0216  1803               	skipnc
  7776  0217  3001               	movlw	1
  7777  0218  07C2               	addwf	___ftadd@f1+2,f
  7778  0219                     l2004:	
  7779  0219  1F4A               	btfss	___ftadd@sign,6
  7780  021A  2A2B               	goto	l2008
  7781  021B  30FF               	movlw	255
  7782  021C  06C3               	xorwf	___ftadd@f2,f
  7783  021D  30FF               	movlw	255
  7784  021E  06C4               	xorwf	___ftadd@f2+1,f
  7785  021F  30FF               	movlw	255
  7786  0220  06C5               	xorwf	___ftadd@f2+2,f
  7787  0221  3001               	movlw	1
  7788  0222  07C3               	addwf	___ftadd@f2,f
  7789  0223  3000               	movlw	0
  7790  0224  1803               	skipnc
  7791  0225  3001               	movlw	1
  7792  0226  07C4               	addwf	___ftadd@f2+1,f
  7793  0227  3000               	movlw	0
  7794  0228  1803               	skipnc
  7795  0229  3001               	movlw	1
  7796  022A  07C5               	addwf	___ftadd@f2+2,f
  7797  022B                     l2008:	
  7798  022B  01CA               	clrf	___ftadd@sign
  7799  022C  0840               	movf	___ftadd@f1,w
  7800  022D  07C3               	addwf	___ftadd@f2,f
  7801  022E  0841               	movf	___ftadd@f1+1,w
  7802  022F  3DC4               	addwfc	___ftadd@f2+1,f
  7803  0230  0842               	movf	___ftadd@f1+2,w
  7804  0231  3DC5               	addwfc	___ftadd@f2+2,f
  7805  0232  1FC5               	btfss	___ftadd@f2+2,7
  7806  0233  2A46               	goto	l2018
  7807  0234  30FF               	movlw	255
  7808  0235  06C3               	xorwf	___ftadd@f2,f
  7809  0236  30FF               	movlw	255
  7810  0237  06C4               	xorwf	___ftadd@f2+1,f
  7811  0238  30FF               	movlw	255
  7812  0239  06C5               	xorwf	___ftadd@f2+2,f
  7813  023A  3001               	movlw	1
  7814  023B  07C3               	addwf	___ftadd@f2,f
  7815  023C  3000               	movlw	0
  7816  023D  1803               	skipnc
  7817  023E  3001               	movlw	1
  7818  023F  07C4               	addwf	___ftadd@f2+1,f
  7819  0240  3000               	movlw	0
  7820  0241  1803               	skipnc
  7821  0242  3001               	movlw	1
  7822  0243  07C5               	addwf	___ftadd@f2+2,f
  7823  0244  01CA               	clrf	___ftadd@sign
  7824  0245  0ACA               	incf	___ftadd@sign,f
  7825  0246                     l2018:	
  7826  0246  0843               	movf	___ftadd@f2,w
  7827  0247  00F0               	movwf	___ftpack@arg
  7828  0248  0844               	movf	___ftadd@f2+1,w
  7829  0249  00F1               	movwf	___ftpack@arg+1
  7830  024A  0845               	movf	___ftadd@f2+2,w
  7831  024B  00F2               	movwf	___ftpack@arg+2
  7832  024C  084C               	movf	___ftadd@exp1,w
  7833  024D  00C6               	movwf	??___ftadd
  7834  024E  0846               	movf	??___ftadd,w
  7835  024F  00F3               	movwf	___ftpack@exp
  7836  0250  084A               	movf	___ftadd@sign,w
  7837  0251  00C7               	movwf	??___ftadd+1
  7838  0252  0847               	movf	??___ftadd+1,w
  7839  0253  00F4               	movwf	___ftpack@sign
  7840  0254  318C  2468         	fcall	___ftpack
  7841  0256  0870               	movf	?___ftpack,w
  7842  0257  0020               	movlb	0	; select bank0
  7843  0258  00C0               	movwf	?___ftadd
  7844  0259  0871               	movf	?___ftpack+1,w
  7845  025A  00C1               	movwf	?___ftadd+1
  7846  025B  0872               	movf	?___ftpack+2,w
  7847  025C  00C2               	movwf	?___ftadd+2
  7848  025D  0008               	return
  7849  025E                     __end_of___ftadd:	
  7850                           
  7851                           	psect	text9
  7852  0DF3                     __ptext9:	
  7853 ;; *************** function ___ftdiv *****************
  7854 ;; Defined at:
  7855 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  f2              3   16[BANK0 ] float 
  7858 ;;  f1              3   19[BANK0 ] float 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  f3              3   27[BANK0 ] float 
  7861 ;;  sign            1   31[BANK0 ] unsigned char 
  7862 ;;  exp             1   30[BANK0 ] unsigned char 
  7863 ;;  cntr            1   26[BANK0 ] unsigned char 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  3   16[BANK0 ] float 
  7866 ;; Registers used:
  7867 ;;		wreg, status,2, status,0, pclath, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7873 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;Total ram usage:       16 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    1
  7880 ;; This function calls:
  7881 ;;		___ftpack
  7882 ;; This function is called by:
  7883 ;;		_tempCalc
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function ___ftdiv
  7889  0DF3                     ___ftdiv:	
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7893  0DF3  0020               	movlb	0	; select bank0
  7894  0DF4  0833               	movf	___ftdiv@f1,w
  7895  0DF5  00B6               	movwf	??___ftdiv
  7896  0DF6  0834               	movf	___ftdiv@f1+1,w
  7897  0DF7  00B7               	movwf	??___ftdiv+1
  7898  0DF8  0835               	movf	___ftdiv@f1+2,w
  7899  0DF9  00B8               	movwf	??___ftdiv+2
  7900  0DFA  1003               	clrc
  7901  0DFB  0D37               	rlf	??___ftdiv+1,w
  7902  0DFC  0D38               	rlf	??___ftdiv+2,w
  7903  0DFD  00B9               	movwf	??___ftdiv+3
  7904  0DFE  0839               	movf	??___ftdiv+3,w
  7905  0DFF  00BE               	movwf	___ftdiv@exp
  7906  0E00  083E               	movf	___ftdiv@exp,w
  7907  0E01  1D03               	btfss	3,2
  7908  0E02  2E0A               	goto	l2470
  7909  0E03  3000               	movlw	0
  7910  0E04  00B0               	movwf	?___ftdiv
  7911  0E05  3000               	movlw	0
  7912  0E06  00B1               	movwf	?___ftdiv+1
  7913  0E07  3000               	movlw	0
  7914  0E08  00B2               	movwf	?___ftdiv+2
  7915  0E09  0008               	return
  7916  0E0A                     l2470:	
  7917  0E0A  0830               	movf	___ftdiv@f2,w
  7918  0E0B  00B6               	movwf	??___ftdiv
  7919  0E0C  0831               	movf	___ftdiv@f2+1,w
  7920  0E0D  00B7               	movwf	??___ftdiv+1
  7921  0E0E  0832               	movf	___ftdiv@f2+2,w
  7922  0E0F  00B8               	movwf	??___ftdiv+2
  7923  0E10  1003               	clrc
  7924  0E11  0D37               	rlf	??___ftdiv+1,w
  7925  0E12  0D38               	rlf	??___ftdiv+2,w
  7926  0E13  00B9               	movwf	??___ftdiv+3
  7927  0E14  0839               	movf	??___ftdiv+3,w
  7928  0E15  00BF               	movwf	___ftdiv@sign
  7929  0E16  083F               	movf	___ftdiv@sign,w
  7930  0E17  1D03               	btfss	3,2
  7931  0E18  2E20               	goto	l2476
  7932  0E19  3000               	movlw	0
  7933  0E1A  00B0               	movwf	?___ftdiv
  7934  0E1B  3000               	movlw	0
  7935  0E1C  00B1               	movwf	?___ftdiv+1
  7936  0E1D  3000               	movlw	0
  7937  0E1E  00B2               	movwf	?___ftdiv+2
  7938  0E1F  0008               	return
  7939  0E20                     l2476:	
  7940  0E20  3000               	movlw	0
  7941  0E21  00BB               	movwf	___ftdiv@f3
  7942  0E22  3000               	movlw	0
  7943  0E23  00BC               	movwf	___ftdiv@f3+1
  7944  0E24  3000               	movlw	0
  7945  0E25  00BD               	movwf	___ftdiv@f3+2
  7946  0E26  3089               	movlw	137
  7947  0E27  073F               	addwf	___ftdiv@sign,w
  7948  0E28  00B6               	movwf	??___ftdiv
  7949  0E29  0836               	movf	??___ftdiv,w
  7950  0E2A  02BE               	subwf	___ftdiv@exp,f
  7951  0E2B  0833               	movf	___ftdiv@f1,w
  7952  0E2C  00B6               	movwf	??___ftdiv
  7953  0E2D  0834               	movf	___ftdiv@f1+1,w
  7954  0E2E  00B7               	movwf	??___ftdiv+1
  7955  0E2F  0835               	movf	___ftdiv@f1+2,w
  7956  0E30  00B8               	movwf	??___ftdiv+2
  7957  0E31  3010               	movlw	16
  7958  0E32                     u2715:	
  7959  0E32  36B8               	lsrf	??___ftdiv+2,f
  7960  0E33  0CB7               	rrf	??___ftdiv+1,f
  7961  0E34  0CB6               	rrf	??___ftdiv,f
  7962  0E35  0B89               	decfsz	9,f
  7963  0E36  2E32               	goto	u2715
  7964  0E37  0836               	movf	??___ftdiv,w
  7965  0E38  00B9               	movwf	??___ftdiv+3
  7966  0E39  0839               	movf	??___ftdiv+3,w
  7967  0E3A  00BF               	movwf	___ftdiv@sign
  7968  0E3B  0830               	movf	___ftdiv@f2,w
  7969  0E3C  00B6               	movwf	??___ftdiv
  7970  0E3D  0831               	movf	___ftdiv@f2+1,w
  7971  0E3E  00B7               	movwf	??___ftdiv+1
  7972  0E3F  0832               	movf	___ftdiv@f2+2,w
  7973  0E40  00B8               	movwf	??___ftdiv+2
  7974  0E41  3010               	movlw	16
  7975  0E42                     u2725:	
  7976  0E42  36B8               	lsrf	??___ftdiv+2,f
  7977  0E43  0CB7               	rrf	??___ftdiv+1,f
  7978  0E44  0CB6               	rrf	??___ftdiv,f
  7979  0E45  0B89               	decfsz	9,f
  7980  0E46  2E42               	goto	u2725
  7981  0E47  0836               	movf	??___ftdiv,w
  7982  0E48  00B9               	movwf	??___ftdiv+3
  7983  0E49  0839               	movf	??___ftdiv+3,w
  7984  0E4A  06BF               	xorwf	___ftdiv@sign,f
  7985  0E4B  3080               	movlw	128
  7986  0E4C  00B6               	movwf	??___ftdiv
  7987  0E4D  0836               	movf	??___ftdiv,w
  7988  0E4E  05BF               	andwf	___ftdiv@sign,f
  7989  0E4F  17B4               	bsf	___ftdiv@f1+1,7
  7990  0E50  30FF               	movlw	255
  7991  0E51  05B3               	andwf	___ftdiv@f1,f
  7992  0E52  30FF               	movlw	255
  7993  0E53  05B4               	andwf	___ftdiv@f1+1,f
  7994  0E54  3000               	movlw	0
  7995  0E55  05B5               	andwf	___ftdiv@f1+2,f
  7996  0E56  17B1               	bsf	___ftdiv@f2+1,7
  7997  0E57  30FF               	movlw	255
  7998  0E58  05B0               	andwf	___ftdiv@f2,f
  7999  0E59  30FF               	movlw	255
  8000  0E5A  05B1               	andwf	___ftdiv@f2+1,f
  8001  0E5B  3000               	movlw	0
  8002  0E5C  05B2               	andwf	___ftdiv@f2+2,f
  8003  0E5D  3018               	movlw	24
  8004  0E5E  00B6               	movwf	??___ftdiv
  8005  0E5F  0836               	movf	??___ftdiv,w
  8006  0E60  00BA               	movwf	___ftdiv@cntr
  8007  0E61                     l2490:	
  8008  0E61  3001               	movlw	1
  8009  0E62                     u2735:	
  8010  0E62  35BB               	lslf	___ftdiv@f3,f
  8011  0E63  0DBC               	rlf	___ftdiv@f3+1,f
  8012  0E64  0DBD               	rlf	___ftdiv@f3+2,f
  8013  0E65  0B89               	decfsz	9,f
  8014  0E66  2E62               	goto	u2735
  8015  0E67  0832               	movf	___ftdiv@f2+2,w
  8016  0E68  0235               	subwf	___ftdiv@f1+2,w
  8017  0E69  1D03               	skipz
  8018  0E6A  2E71               	goto	u2745
  8019  0E6B  0831               	movf	___ftdiv@f2+1,w
  8020  0E6C  0234               	subwf	___ftdiv@f1+1,w
  8021  0E6D  1D03               	skipz
  8022  0E6E  2E71               	goto	u2745
  8023  0E6F  0830               	movf	___ftdiv@f2,w
  8024  0E70  0233               	subwf	___ftdiv@f1,w
  8025  0E71                     u2745:	
  8026  0E71  1C03               	skipc
  8027  0E72  2E7A               	goto	l2498
  8028  0E73  0830               	movf	___ftdiv@f2,w
  8029  0E74  02B3               	subwf	___ftdiv@f1,f
  8030  0E75  0831               	movf	___ftdiv@f2+1,w
  8031  0E76  3BB4               	subwfb	___ftdiv@f1+1,f
  8032  0E77  0832               	movf	___ftdiv@f2+2,w
  8033  0E78  3BB5               	subwfb	___ftdiv@f1+2,f
  8034  0E79  143B               	bsf	___ftdiv@f3,0
  8035  0E7A                     l2498:	
  8036  0E7A  3001               	movlw	1
  8037  0E7B                     u2755:	
  8038  0E7B  35B3               	lslf	___ftdiv@f1,f
  8039  0E7C  0DB4               	rlf	___ftdiv@f1+1,f
  8040  0E7D  0DB5               	rlf	___ftdiv@f1+2,f
  8041  0E7E  0B89               	decfsz	9,f
  8042  0E7F  2E7B               	goto	u2755
  8043  0E80  3001               	movlw	1
  8044  0E81  02BA               	subwf	___ftdiv@cntr,f
  8045  0E82  1D03               	btfss	3,2
  8046  0E83  2E61               	goto	l2490
  8047  0E84  083B               	movf	___ftdiv@f3,w
  8048  0E85  00F0               	movwf	___ftpack@arg
  8049  0E86  083C               	movf	___ftdiv@f3+1,w
  8050  0E87  00F1               	movwf	___ftpack@arg+1
  8051  0E88  083D               	movf	___ftdiv@f3+2,w
  8052  0E89  00F2               	movwf	___ftpack@arg+2
  8053  0E8A  083E               	movf	___ftdiv@exp,w
  8054  0E8B  00B6               	movwf	??___ftdiv
  8055  0E8C  0836               	movf	??___ftdiv,w
  8056  0E8D  00F3               	movwf	___ftpack@exp
  8057  0E8E  083F               	movf	___ftdiv@sign,w
  8058  0E8F  00B7               	movwf	??___ftdiv+1
  8059  0E90  0837               	movf	??___ftdiv+1,w
  8060  0E91  00F4               	movwf	___ftpack@sign
  8061  0E92  318C  2468         	fcall	___ftpack
  8062  0E94  0870               	movf	?___ftpack,w
  8063  0E95  0020               	movlb	0	; select bank0
  8064  0E96  00B0               	movwf	?___ftdiv
  8065  0E97  0871               	movf	?___ftpack+1,w
  8066  0E98  00B1               	movwf	?___ftdiv+1
  8067  0E99  0872               	movf	?___ftpack+2,w
  8068  0E9A  00B2               	movwf	?___ftdiv+2
  8069  0E9B  0008               	return
  8070  0E9C                     __end_of___ftdiv:	
  8071                           
  8072                           	psect	text10
  8073  047F                     __ptext10:	
  8074 ;; *************** function _readAnalog *****************
  8075 ;; Defined at:
  8076 ;;		line 38 in file "adc.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  channel         2    6[BANK0 ] int 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  value           2   11[COMMON] int 
  8081 ;;  analog_chann    2    9[COMMON] int 
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  2    6[BANK0 ] int 
  8084 ;; Registers used:
  8085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;Total ram usage:       21 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    1
  8098 ;; This function calls:
  8099 ;;		_ADCRead
  8100 ;;		___aldiv
  8101 ;;		___bmul
  8102 ;; This function is called by:
  8103 ;;		_main
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function _readAnalog
  8109  047F                     _readAnalog:	
  8110                           
  8111                           ;adc.c: 40: int value;
  8112                           ;adc.c: 42: int analog_channel = channels[channel];
  8113                           
  8114                           ;incstack = 0
  8115                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8116  047F  0020               	movlb	0	; select bank0
  8117  0480  3526               	lslf	readAnalog@channel,w
  8118  0481  3EE2               	addlw	(low (_channels| 0))& (0+255)
  8119  0482  0086               	movwf	6
  8120  0483  0187               	clrf	7
  8121  0484  3F40               	moviw [0]fsr1
  8122  0485  00F9               	movwf	readAnalog@analog_channel
  8123  0486  3F41               	moviw [1]fsr1
  8124  0487  00FA               	movwf	readAnalog@analog_channel+1
  8125                           
  8126                           ;adc.c: 44: value = ADCRead(analog_channel);
  8127  0488  0879               	movf	readAnalog@analog_channel,w
  8128  0489  3189  210E  3184   	fcall	_ADCRead
  8129  048C  0871               	movf	?_ADCRead+1,w
  8130  048D  00FC               	movwf	readAnalog@value+1
  8131  048E  0870               	movf	?_ADCRead,w
  8132  048F  00FB               	movwf	readAnalog@value
  8133                           
  8134                           ;adc.c: 46: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  8135  0490  0020               	movlb	0	; select bank0
  8136  0491  0826               	movf	readAnalog@channel,w
  8137  0492  00A8               	movwf	??_readAnalog
  8138  0493  3001               	movlw	1
  8139  0494                     u2785:	
  8140  0494  35A8               	lslf	??_readAnalog,f
  8141  0495  3EFF               	addlw	-1
  8142  0496  1D03               	skipz
  8143  0497  2C94               	goto	u2785
  8144  0498  3528               	lslf	??_readAnalog,w
  8145  0499  3EC2               	addlw	(low (_totals| 0))& (0+255)
  8146  049A  0086               	movwf	6
  8147  049B  0187               	clrf	7
  8148  049C  3F40               	moviw [0]fsr1
  8149  049D  00A9               	movwf	??_readAnalog+1
  8150  049E  3F41               	moviw [1]fsr1
  8151  049F  00AA               	movwf	??_readAnalog+2
  8152  04A0  3F42               	moviw [2]fsr1
  8153  04A1  00AB               	movwf	??_readAnalog+3
  8154  04A2  3F43               	moviw [3]fsr1
  8155  04A3  00AC               	movwf	??_readAnalog+4
  8156  04A4  0021               	movlb	1	; select bank1
  8157  04A5  085E               	movf	_sampleIndex^(0+128),w
  8158  04A6  0020               	movlb	0	; select bank0
  8159  04A7  00AD               	movwf	??_readAnalog+5
  8160  04A8  3001               	movlw	1
  8161  04A9                     u2795:	
  8162  04A9  35AD               	lslf	??_readAnalog+5,f
  8163  04AA  0B89               	decfsz	9,f
  8164  04AB  2CA9               	goto	u2795
  8165  04AC  3028               	movlw	40
  8166  04AD  00AE               	movwf	??_readAnalog+6
  8167  04AE  082E               	movf	??_readAnalog+6,w
  8168  04AF  00F0               	movwf	___bmul@multiplicand
  8169  04B0  0826               	movf	readAnalog@channel,w
  8170  04B1  3189  212C  3184   	fcall	___bmul
  8171  04B4  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  8172  04B5  0020               	movlb	0	; select bank0
  8173  04B6  072D               	addwf	??_readAnalog+5,w
  8174  04B7  00AF               	movwf	??_readAnalog+7
  8175  04B8  082F               	movf	??_readAnalog+7,w
  8176  04B9  0086               	movwf	6
  8177  04BA  3001               	movlw	1	; select bank3/4
  8178  04BB  0087               	movwf	7
  8179  04BC  3F40               	moviw [0]fsr1
  8180  04BD  00B0               	movwf	??_readAnalog+8
  8181  04BE  3F41               	moviw [1]fsr1
  8182  04BF  00B1               	movwf	??_readAnalog+9
  8183  04C0  0830               	movf	??_readAnalog+8,w
  8184  04C1  00B2               	movwf	??_readAnalog+10
  8185  04C2  0831               	movf	??_readAnalog+9,w
  8186  04C3  00B3               	movwf	??_readAnalog+11
  8187  04C4  01B4               	clrf	??_readAnalog+12
  8188  04C5  01B5               	clrf	??_readAnalog+13
  8189  04C6  09B2               	comf	??_readAnalog+10,f
  8190  04C7  09B3               	comf	??_readAnalog+11,f
  8191  04C8  09B4               	comf	??_readAnalog+12,f
  8192  04C9  09B5               	comf	??_readAnalog+13,f
  8193  04CA  0AB2               	incf	??_readAnalog+10,f
  8194  04CB  1903               	skipnz
  8195  04CC  0AB3               	incf	??_readAnalog+11,f
  8196  04CD  1903               	skipnz
  8197  04CE  0AB4               	incf	??_readAnalog+12,f
  8198  04CF  1903               	skipnz
  8199  04D0  0AB5               	incf	??_readAnalog+13,f
  8200  04D1  0832               	movf	??_readAnalog+10,w
  8201  04D2  07A9               	addwf	??_readAnalog+1,f
  8202  04D3  0833               	movf	??_readAnalog+11,w
  8203  04D4  3DAA               	addwfc	??_readAnalog+2,f
  8204  04D5  0834               	movf	??_readAnalog+12,w
  8205  04D6  3DAB               	addwfc	??_readAnalog+3,f
  8206  04D7  0835               	movf	??_readAnalog+13,w
  8207  04D8  3DAC               	addwfc	??_readAnalog+4,f
  8208  04D9  0826               	movf	readAnalog@channel,w
  8209  04DA  00B6               	movwf	??_readAnalog+14
  8210  04DB  3001               	movlw	1
  8211  04DC                     u2805:	
  8212  04DC  35B6               	lslf	??_readAnalog+14,f
  8213  04DD  3EFF               	addlw	-1
  8214  04DE  1D03               	skipz
  8215  04DF  2CDC               	goto	u2805
  8216  04E0  3536               	lslf	??_readAnalog+14,w
  8217  04E1  3EC2               	addlw	(low (_totals| 0))& (0+255)
  8218  04E2  0086               	movwf	6
  8219  04E3  0187               	clrf	7
  8220  04E4  0829               	movf	??_readAnalog+1,w
  8221  04E5  3FC0               	movwi [0]fsr1
  8222  04E6  082A               	movf	??_readAnalog+2,w
  8223  04E7  3FC1               	movwi [1]fsr1
  8224  04E8  082B               	movf	??_readAnalog+3,w
  8225  04E9  3FC2               	movwi [2]fsr1
  8226  04EA  082C               	movf	??_readAnalog+4,w
  8227  04EB  3FC3               	movwi [3]fsr1
  8228                           
  8229                           ;adc.c: 48: samples[channel][sampleIndex] = value;
  8230  04EC  0021               	movlb	1	; select bank1
  8231  04ED  085E               	movf	_sampleIndex^(0+128),w
  8232  04EE  0020               	movlb	0	; select bank0
  8233  04EF  00A8               	movwf	??_readAnalog
  8234  04F0  3001               	movlw	1
  8235  04F1                     u2815:	
  8236  04F1  35A8               	lslf	??_readAnalog,f
  8237  04F2  0B89               	decfsz	9,f
  8238  04F3  2CF1               	goto	u2815
  8239  04F4  3028               	movlw	40
  8240  04F5  00A9               	movwf	??_readAnalog+1
  8241  04F6  0829               	movf	??_readAnalog+1,w
  8242  04F7  00F0               	movwf	___bmul@multiplicand
  8243  04F8  0826               	movf	readAnalog@channel,w
  8244  04F9  3189  212C  3184   	fcall	___bmul
  8245  04FC  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  8246  04FD  0020               	movlb	0	; select bank0
  8247  04FE  0728               	addwf	??_readAnalog,w
  8248  04FF  00AA               	movwf	??_readAnalog+2
  8249  0500  082A               	movf	??_readAnalog+2,w
  8250  0501  0086               	movwf	6
  8251  0502  3001               	movlw	1	; select bank3/4
  8252  0503  0087               	movwf	7
  8253  0504  087B               	movf	readAnalog@value,w
  8254  0505  3FC0               	movwi [0]fsr1
  8255  0506  087C               	movf	readAnalog@value+1,w
  8256  0507  3FC1               	movwi [1]fsr1
  8257                           
  8258                           ;adc.c: 50: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  8259  0508  0826               	movf	readAnalog@channel,w
  8260  0509  00A8               	movwf	??_readAnalog
  8261  050A  3001               	movlw	1
  8262  050B                     u2825:	
  8263  050B  35A8               	lslf	??_readAnalog,f
  8264  050C  3EFF               	addlw	-1
  8265  050D  1D03               	skipz
  8266  050E  2D0B               	goto	u2825
  8267  050F  3528               	lslf	??_readAnalog,w
  8268  0510  3EC2               	addlw	(low (_totals| 0))& (0+255)
  8269  0511  0086               	movwf	6
  8270  0512  0187               	clrf	7
  8271  0513  3F40               	moviw [0]fsr1
  8272  0514  00A9               	movwf	??_readAnalog+1
  8273  0515  3F41               	moviw [1]fsr1
  8274  0516  00AA               	movwf	??_readAnalog+2
  8275  0517  3F42               	moviw [2]fsr1
  8276  0518  00AB               	movwf	??_readAnalog+3
  8277  0519  3F43               	moviw [3]fsr1
  8278  051A  00AC               	movwf	??_readAnalog+4
  8279  051B  0021               	movlb	1	; select bank1
  8280  051C  085E               	movf	_sampleIndex^(0+128),w
  8281  051D  0020               	movlb	0	; select bank0
  8282  051E  00AD               	movwf	??_readAnalog+5
  8283  051F  3001               	movlw	1
  8284  0520                     u2835:	
  8285  0520  35AD               	lslf	??_readAnalog+5,f
  8286  0521  0B89               	decfsz	9,f
  8287  0522  2D20               	goto	u2835
  8288  0523  3028               	movlw	40
  8289  0524  00AE               	movwf	??_readAnalog+6
  8290  0525  082E               	movf	??_readAnalog+6,w
  8291  0526  00F0               	movwf	___bmul@multiplicand
  8292  0527  0826               	movf	readAnalog@channel,w
  8293  0528  3189  212C  3184   	fcall	___bmul
  8294  052B  3EA0               	addlw	(low (_samples| (0+256)))& (0+255)
  8295  052C  0020               	movlb	0	; select bank0
  8296  052D  072D               	addwf	??_readAnalog+5,w
  8297  052E  00AF               	movwf	??_readAnalog+7
  8298  052F  082F               	movf	??_readAnalog+7,w
  8299  0530  0086               	movwf	6
  8300  0531  3001               	movlw	1	; select bank3/4
  8301  0532  0087               	movwf	7
  8302  0533  3F40               	moviw [0]fsr1
  8303  0534  00B0               	movwf	??_readAnalog+8
  8304  0535  3F41               	moviw [1]fsr1
  8305  0536  00B1               	movwf	??_readAnalog+9
  8306  0537  0830               	movf	??_readAnalog+8,w
  8307  0538  00B2               	movwf	??_readAnalog+10
  8308  0539  0831               	movf	??_readAnalog+9,w
  8309  053A  00B3               	movwf	??_readAnalog+11
  8310  053B  01B4               	clrf	??_readAnalog+12
  8311  053C  01B5               	clrf	??_readAnalog+13
  8312  053D  0832               	movf	??_readAnalog+10,w
  8313  053E  07A9               	addwf	??_readAnalog+1,f
  8314  053F  0833               	movf	??_readAnalog+11,w
  8315  0540  3DAA               	addwfc	??_readAnalog+2,f
  8316  0541  0834               	movf	??_readAnalog+12,w
  8317  0542  3DAB               	addwfc	??_readAnalog+3,f
  8318  0543  0835               	movf	??_readAnalog+13,w
  8319  0544  3DAC               	addwfc	??_readAnalog+4,f
  8320  0545  0826               	movf	readAnalog@channel,w
  8321  0546  00B6               	movwf	??_readAnalog+14
  8322  0547  3001               	movlw	1
  8323  0548                     u2845:	
  8324  0548  35B6               	lslf	??_readAnalog+14,f
  8325  0549  3EFF               	addlw	-1
  8326  054A  1D03               	skipz
  8327  054B  2D48               	goto	u2845
  8328  054C  3536               	lslf	??_readAnalog+14,w
  8329  054D  3EC2               	addlw	(low (_totals| 0))& (0+255)
  8330  054E  0086               	movwf	6
  8331  054F  0187               	clrf	7
  8332  0550  0829               	movf	??_readAnalog+1,w
  8333  0551  3FC0               	movwi [0]fsr1
  8334  0552  082A               	movf	??_readAnalog+2,w
  8335  0553  3FC1               	movwi [1]fsr1
  8336  0554  082B               	movf	??_readAnalog+3,w
  8337  0555  3FC2               	movwi [2]fsr1
  8338  0556  082C               	movf	??_readAnalog+4,w
  8339  0557  3FC3               	movwi [3]fsr1
  8340                           
  8341                           ;adc.c: 52: if(channel>=(2-1))
  8342  0558  0827               	movf	readAnalog@channel+1,w
  8343  0559  3A80               	xorlw	128
  8344  055A  00A8               	movwf	??_readAnalog
  8345  055B  3080               	movlw	128
  8346  055C  0228               	subwf	??_readAnalog,w
  8347  055D  1D03               	skipz
  8348  055E  2D61               	goto	u2855
  8349  055F  3001               	movlw	1
  8350  0560  0226               	subwf	readAnalog@channel,w
  8351  0561                     u2855:	
  8352  0561  1C03               	skipc
  8353  0562  2D71               	goto	l2528
  8354                           
  8355                           ;adc.c: 53: {
  8356                           ;adc.c: 54: sampleIndex+=1;
  8357  0563  3001               	movlw	1
  8358  0564  0021               	movlb	1	; select bank1
  8359  0565  07DE               	addwf	_sampleIndex^(0+128),f
  8360  0566  3000               	movlw	0
  8361  0567  3DDF               	addwfc	(_sampleIndex+1)^(0+128),f
  8362                           
  8363                           ;adc.c: 55: if(sampleIndex >= 20)sampleIndex = 0;
  8364  0568  3000               	movlw	0
  8365  0569  025F               	subwf	(_sampleIndex+1)^(0+128),w
  8366  056A  3014               	movlw	20
  8367  056B  1903               	skipnz
  8368  056C  025E               	subwf	_sampleIndex^(0+128),w
  8369  056D  1C03               	skipc
  8370  056E  2D71               	goto	l2528
  8371  056F  01DE               	clrf	_sampleIndex^(0+128)
  8372  0570  01DF               	clrf	(_sampleIndex+1)^(0+128)
  8373  0571                     l2528:	
  8374                           
  8375                           ;adc.c: 56: }
  8376                           ;adc.c: 58: value = totals[channel]/20;
  8377  0571  3000               	movlw	0
  8378  0572  00F3               	movwf	___aldiv@divisor+3
  8379  0573  3000               	movlw	0
  8380  0574  00F2               	movwf	___aldiv@divisor+2
  8381  0575  3000               	movlw	0
  8382  0576  00F1               	movwf	___aldiv@divisor+1
  8383  0577  3014               	movlw	20
  8384  0578  00F0               	movwf	___aldiv@divisor
  8385  0579  0020               	movlb	0	; select bank0
  8386  057A  0826               	movf	readAnalog@channel,w
  8387  057B  00A8               	movwf	??_readAnalog
  8388  057C  3001               	movlw	1
  8389  057D                     u2875:	
  8390  057D  35A8               	lslf	??_readAnalog,f
  8391  057E  3EFF               	addlw	-1
  8392  057F  1D03               	skipz
  8393  0580  2D7D               	goto	u2875
  8394  0581  3528               	lslf	??_readAnalog,w
  8395  0582  3EC2               	addlw	(low (_totals| 0))& (0+255)
  8396  0583  0086               	movwf	6
  8397  0584  0187               	clrf	7
  8398  0585  3F40               	moviw [0]fsr1
  8399  0586  00F4               	movwf	___aldiv@dividend
  8400  0587  3F41               	moviw [1]fsr1
  8401  0588  00F5               	movwf	___aldiv@dividend+1
  8402  0589  3F42               	moviw [2]fsr1
  8403  058A  00F6               	movwf	___aldiv@dividend+2
  8404  058B  3F43               	moviw [3]fsr1
  8405  058C  00F7               	movwf	___aldiv@dividend+3
  8406  058D  318C  24CC         	fcall	___aldiv
  8407  058F  0871               	movf	?___aldiv+1,w
  8408  0590  00FC               	movwf	readAnalog@value+1
  8409  0591  0870               	movf	?___aldiv,w
  8410  0592  00FB               	movwf	readAnalog@value
  8411                           
  8412                           ;adc.c: 60: return value;
  8413  0593  087C               	movf	readAnalog@value+1,w
  8414  0594  0020               	movlb	0	; select bank0
  8415  0595  00A7               	movwf	?_readAnalog+1
  8416  0596  087B               	movf	readAnalog@value,w
  8417  0597  00A6               	movwf	?_readAnalog
  8418  0598  0008               	return
  8419  0599                     __end_of_readAnalog:	
  8420                           
  8421                           	psect	text11
  8422  092C                     __ptext11:	
  8423 ;; *************** function ___bmul *****************
  8424 ;; Defined at:
  8425 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  multiplier      1    wreg     unsigned char 
  8428 ;;  multiplicand    1    0[COMMON] unsigned char 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  multiplier      1    3[COMMON] unsigned char 
  8431 ;;  product         1    2[COMMON] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      unsigned char 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;Total ram usage:        4 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_readAnalog
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function ___bmul
  8456  092C                     ___bmul:	
  8457                           
  8458                           ;incstack = 0
  8459                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8460                           ;___bmul@multiplier stored from wreg
  8461  092C  00F3               	movwf	___bmul@multiplier
  8462  092D  01F2               	clrf	___bmul@product
  8463  092E                     l2330:	
  8464  092E  1C73               	btfss	___bmul@multiplier,0
  8465  092F  2934               	goto	l2334
  8466  0930  0870               	movf	___bmul@multiplicand,w
  8467  0931  00F1               	movwf	??___bmul
  8468  0932  0871               	movf	??___bmul,w
  8469  0933  07F2               	addwf	___bmul@product,f
  8470  0934                     l2334:	
  8471  0934  1003               	clrc
  8472  0935  0DF0               	rlf	___bmul@multiplicand,f
  8473  0936  1003               	clrc
  8474  0937  0CF3               	rrf	___bmul@multiplier,f
  8475  0938  0873               	movf	___bmul@multiplier,w
  8476  0939  1D03               	btfss	3,2
  8477  093A  292E               	goto	l2330
  8478  093B  0872               	movf	___bmul@product,w
  8479  093C  0008               	return
  8480  093D                     __end_of___bmul:	
  8481                           
  8482                           	psect	text12
  8483  0CCC                     __ptext12:	
  8484 ;; *************** function ___aldiv *****************
  8485 ;; Defined at:
  8486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  divisor         4    0[COMMON] long 
  8489 ;;  dividend        4    4[COMMON] long 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  quotient        4    2[BANK0 ] long 
  8492 ;;  sign            1    1[BANK0 ] unsigned char 
  8493 ;;  counter         1    0[BANK0 ] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  4    0[COMMON] long 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8503 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;Total ram usage:       15 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_readAnalog
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function ___aldiv
  8518  0CCC                     ___aldiv:	
  8519                           
  8520                           ;incstack = 0
  8521                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8522  0CCC  0020               	movlb	0	; select bank0
  8523  0CCD  01A1               	clrf	___aldiv@sign
  8524  0CCE  1FF3               	btfss	___aldiv@divisor+3,7
  8525  0CCF  2CDD               	goto	l493
  8526  0CD0  09F0               	comf	___aldiv@divisor,f
  8527  0CD1  09F1               	comf	___aldiv@divisor+1,f
  8528  0CD2  09F2               	comf	___aldiv@divisor+2,f
  8529  0CD3  09F3               	comf	___aldiv@divisor+3,f
  8530  0CD4  0AF0               	incf	___aldiv@divisor,f
  8531  0CD5  1903               	skipnz
  8532  0CD6  0AF1               	incf	___aldiv@divisor+1,f
  8533  0CD7  1903               	skipnz
  8534  0CD8  0AF2               	incf	___aldiv@divisor+2,f
  8535  0CD9  1903               	skipnz
  8536  0CDA  0AF3               	incf	___aldiv@divisor+3,f
  8537  0CDB  01A1               	clrf	___aldiv@sign
  8538  0CDC  0AA1               	incf	___aldiv@sign,f
  8539  0CDD                     l493:	
  8540  0CDD  1FF7               	btfss	___aldiv@dividend+3,7
  8541  0CDE  2CEE               	goto	l2352
  8542  0CDF  09F4               	comf	___aldiv@dividend,f
  8543  0CE0  09F5               	comf	___aldiv@dividend+1,f
  8544  0CE1  09F6               	comf	___aldiv@dividend+2,f
  8545  0CE2  09F7               	comf	___aldiv@dividend+3,f
  8546  0CE3  0AF4               	incf	___aldiv@dividend,f
  8547  0CE4  1903               	skipnz
  8548  0CE5  0AF5               	incf	___aldiv@dividend+1,f
  8549  0CE6  1903               	skipnz
  8550  0CE7  0AF6               	incf	___aldiv@dividend+2,f
  8551  0CE8  1903               	skipnz
  8552  0CE9  0AF7               	incf	___aldiv@dividend+3,f
  8553  0CEA  3001               	movlw	1
  8554  0CEB  00F8               	movwf	??___aldiv
  8555  0CEC  0878               	movf	??___aldiv,w
  8556  0CED  06A1               	xorwf	___aldiv@sign,f
  8557  0CEE                     l2352:	
  8558  0CEE  3000               	movlw	0
  8559  0CEF  00A5               	movwf	___aldiv@quotient+3
  8560  0CF0  3000               	movlw	0
  8561  0CF1  00A4               	movwf	___aldiv@quotient+2
  8562  0CF2  3000               	movlw	0
  8563  0CF3  00A3               	movwf	___aldiv@quotient+1
  8564  0CF4  3000               	movlw	0
  8565  0CF5  00A2               	movwf	___aldiv@quotient
  8566  0CF6  0873               	movf	___aldiv@divisor+3,w
  8567  0CF7  0472               	iorwf	___aldiv@divisor+2,w
  8568  0CF8  0471               	iorwf	___aldiv@divisor+1,w
  8569  0CF9  0470               	iorwf	___aldiv@divisor,w
  8570  0CFA  1903               	skipnz
  8571  0CFB  2D37               	goto	l2374
  8572  0CFC  01A0               	clrf	___aldiv@counter
  8573  0CFD  0AA0               	incf	___aldiv@counter,f
  8574  0CFE                     l2360:	
  8575  0CFE  1BF3               	btfsc	___aldiv@divisor+3,7
  8576  0CFF  2D0C               	goto	l2362
  8577  0D00  3001               	movlw	1
  8578  0D01                     u2435:	
  8579  0D01  35F0               	lslf	___aldiv@divisor,f
  8580  0D02  0DF1               	rlf	___aldiv@divisor+1,f
  8581  0D03  0DF2               	rlf	___aldiv@divisor+2,f
  8582  0D04  0DF3               	rlf	___aldiv@divisor+3,f
  8583  0D05  0B89               	decfsz	9,f
  8584  0D06  2D01               	goto	u2435
  8585  0D07  3001               	movlw	1
  8586  0D08  00F8               	movwf	??___aldiv
  8587  0D09  0878               	movf	??___aldiv,w
  8588  0D0A  07A0               	addwf	___aldiv@counter,f
  8589  0D0B  2CFE               	goto	l2360
  8590  0D0C                     l2362:	
  8591  0D0C  3001               	movlw	1
  8592  0D0D                     u2455:	
  8593  0D0D  35A2               	lslf	___aldiv@quotient,f
  8594  0D0E  0DA3               	rlf	___aldiv@quotient+1,f
  8595  0D0F  0DA4               	rlf	___aldiv@quotient+2,f
  8596  0D10  0DA5               	rlf	___aldiv@quotient+3,f
  8597  0D11  0B89               	decfsz	9,f
  8598  0D12  2D0D               	goto	u2455
  8599  0D13  0873               	movf	___aldiv@divisor+3,w
  8600  0D14  0277               	subwf	___aldiv@dividend+3,w
  8601  0D15  1D03               	skipz
  8602  0D16  2D21               	goto	u2465
  8603  0D17  0872               	movf	___aldiv@divisor+2,w
  8604  0D18  0276               	subwf	___aldiv@dividend+2,w
  8605  0D19  1D03               	skipz
  8606  0D1A  2D21               	goto	u2465
  8607  0D1B  0871               	movf	___aldiv@divisor+1,w
  8608  0D1C  0275               	subwf	___aldiv@dividend+1,w
  8609  0D1D  1D03               	skipz
  8610  0D1E  2D21               	goto	u2465
  8611  0D1F  0870               	movf	___aldiv@divisor,w
  8612  0D20  0274               	subwf	___aldiv@dividend,w
  8613  0D21                     u2465:	
  8614  0D21  1C03               	skipc
  8615  0D22  2D2C               	goto	l2370
  8616  0D23  0870               	movf	___aldiv@divisor,w
  8617  0D24  02F4               	subwf	___aldiv@dividend,f
  8618  0D25  0871               	movf	___aldiv@divisor+1,w
  8619  0D26  3BF5               	subwfb	___aldiv@dividend+1,f
  8620  0D27  0872               	movf	___aldiv@divisor+2,w
  8621  0D28  3BF6               	subwfb	___aldiv@dividend+2,f
  8622  0D29  0873               	movf	___aldiv@divisor+3,w
  8623  0D2A  3BF7               	subwfb	___aldiv@dividend+3,f
  8624  0D2B  1422               	bsf	___aldiv@quotient,0
  8625  0D2C                     l2370:	
  8626  0D2C  3001               	movlw	1
  8627  0D2D                     u2475:	
  8628  0D2D  36F3               	lsrf	___aldiv@divisor+3,f
  8629  0D2E  0CF2               	rrf	___aldiv@divisor+2,f
  8630  0D2F  0CF1               	rrf	___aldiv@divisor+1,f
  8631  0D30  0CF0               	rrf	___aldiv@divisor,f
  8632  0D31  0B89               	decfsz	9,f
  8633  0D32  2D2D               	goto	u2475
  8634  0D33  3001               	movlw	1
  8635  0D34  02A0               	subwf	___aldiv@counter,f
  8636  0D35  1D03               	btfss	3,2
  8637  0D36  2D0C               	goto	l2362
  8638  0D37                     l2374:	
  8639  0D37  0821               	movf	___aldiv@sign,w
  8640  0D38  1903               	btfsc	3,2
  8641  0D39  2D45               	goto	l2378
  8642  0D3A  09A2               	comf	___aldiv@quotient,f
  8643  0D3B  09A3               	comf	___aldiv@quotient+1,f
  8644  0D3C  09A4               	comf	___aldiv@quotient+2,f
  8645  0D3D  09A5               	comf	___aldiv@quotient+3,f
  8646  0D3E  0AA2               	incf	___aldiv@quotient,f
  8647  0D3F  1903               	skipnz
  8648  0D40  0AA3               	incf	___aldiv@quotient+1,f
  8649  0D41  1903               	skipnz
  8650  0D42  0AA4               	incf	___aldiv@quotient+2,f
  8651  0D43  1903               	skipnz
  8652  0D44  0AA5               	incf	___aldiv@quotient+3,f
  8653  0D45                     l2378:	
  8654  0D45  0825               	movf	___aldiv@quotient+3,w
  8655  0D46  00F3               	movwf	?___aldiv+3
  8656  0D47  0824               	movf	___aldiv@quotient+2,w
  8657  0D48  00F2               	movwf	?___aldiv+2
  8658  0D49  0823               	movf	___aldiv@quotient+1,w
  8659  0D4A  00F1               	movwf	?___aldiv+1
  8660  0D4B  0822               	movf	___aldiv@quotient,w
  8661  0D4C  00F0               	movwf	?___aldiv
  8662  0D4D  0008               	return
  8663  0D4E                     __end_of___aldiv:	
  8664                           
  8665                           	psect	text13
  8666  090E                     __ptext13:	
  8667 ;; *************** function _ADCRead *****************
  8668 ;; Defined at:
  8669 ;;		line 20 in file "adc.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  channel         1    wreg     enum E13559
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  channel         1    3[COMMON] enum E13559
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2    0[COMMON] unsigned int 
  8676 ;; Registers used:
  8677 ;;		wreg
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8683 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;Total ram usage:        4 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_readAnalog
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _ADCRead
  8698  090E                     _ADCRead:	
  8699                           
  8700                           ;incstack = 0
  8701                           ; Regs used in _ADCRead: [wreg]
  8702                           ;ADCRead@channel stored from wreg
  8703  090E  00F3               	movwf	ADCRead@channel
  8704                           
  8705                           ;adc.c: 22: ADPCH = channel;
  8706  090F  0873               	movf	ADCRead@channel,w
  8707  0910  0021               	movlb	1	; select bank1
  8708  0911  009E               	movwf	30	;volatile
  8709                           
  8710                           ;adc.c: 24: ADCON0bits.ADON = 1;
  8711  0912  1793               	bsf	19,7	;volatile
  8712                           
  8713                           ;adc.c: 26: ADCON0bits.ADCONT = 0;
  8714  0913  1313               	bcf	19,6	;volatile
  8715                           
  8716                           ;adc.c: 28: ADCON0bits.ADGO = 1;
  8717  0914  1413               	bsf	19,0	;volatile
  8718  0915                     l55:	
  8719                           ;adc.c: 31: {
  8720                           
  8721                           ;adc.c: 30: while(ADCON0bits.ADGO)
  8722                           
  8723  0915  1813               	btfsc	19,0	;volatile
  8724  0916  2915               	goto	l55
  8725                           
  8726                           ;adc.c: 32: }
  8727                           ;adc.c: 34: return ((ADRESH<<8)+ADRESL);
  8728  0917  080D               	movf	13,w	;volatile
  8729  0918  00F1               	movwf	?_ADCRead+1
  8730  0919  080C               	movf	12,w	;volatile
  8731  091A  00F0               	movwf	?_ADCRead
  8732  091B  0008               	return
  8733  091C                     __end_of_ADCRead:	
  8734                           
  8735                           	psect	text14
  8736  0D4E                     __ptext14:	
  8737 ;; *************** function ___fttol *****************
  8738 ;; Defined at:
  8739 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  f1              3   73[BANK0 ] float 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  lval            4    5[BANK1 ] unsigned long 
  8744 ;;  exp1            1    9[BANK1 ] unsigned char 
  8745 ;;  sign1           1    4[BANK1 ] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  4   73[BANK0 ] long 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:       14 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_main
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           
  8769                           ;psect for function ___fttol
  8770  0D4E                     ___fttol:	
  8771                           
  8772                           ;incstack = 0
  8773                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8774  0D4E  0020               	movlb	0	; select bank0
  8775  0D4F  0869               	movf	___fttol@f1,w
  8776  0D50  0021               	movlb	1	; select bank1
  8777  0D51  00A0               	movwf	??___fttol^(0+128)
  8778  0D52  0020               	movlb	0	; select bank0
  8779  0D53  086A               	movf	___fttol@f1+1,w
  8780  0D54  0021               	movlb	1	; select bank1
  8781  0D55  00A1               	movwf	(??___fttol^(0+128)+1)
  8782  0D56  0020               	movlb	0	; select bank0
  8783  0D57  086B               	movf	___fttol@f1+2,w
  8784  0D58  0021               	movlb	1	; select bank1
  8785  0D59  00A2               	movwf	(??___fttol^(0+128)+2)
  8786  0D5A  1003               	clrc
  8787  0D5B  0D21               	rlf	(??___fttol^(0+128)+1),w
  8788  0D5C  0D22               	rlf	(??___fttol^(0+128)+2),w
  8789  0D5D  00A3               	movwf	(??___fttol+3)^(0+128)
  8790  0D5E  0823               	movf	(??___fttol+3)^(0+128),w
  8791  0D5F  00A9               	movwf	___fttol@exp1^(0+128)
  8792  0D60  0829               	movf	___fttol@exp1^(0+128),w
  8793  0D61  1D03               	btfss	3,2
  8794  0D62  2D6D               	goto	l2708
  8795  0D63  3000               	movlw	0
  8796  0D64  0020               	movlb	0	; select bank0
  8797  0D65  00EC               	movwf	?___fttol+3
  8798  0D66  3000               	movlw	0
  8799  0D67  00EB               	movwf	?___fttol+2
  8800  0D68  3000               	movlw	0
  8801  0D69  00EA               	movwf	?___fttol+1
  8802  0D6A  3000               	movlw	0
  8803  0D6B  00E9               	movwf	?___fttol
  8804  0D6C  0008               	return
  8805  0D6D                     l2708:	
  8806  0D6D  0020               	movlb	0	; select bank0
  8807  0D6E  0869               	movf	___fttol@f1,w
  8808  0D6F  0021               	movlb	1	; select bank1
  8809  0D70  00A0               	movwf	??___fttol^(0+128)
  8810  0D71  0020               	movlb	0	; select bank0
  8811  0D72  086A               	movf	___fttol@f1+1,w
  8812  0D73  0021               	movlb	1	; select bank1
  8813  0D74  00A1               	movwf	(??___fttol^(0+128)+1)
  8814  0D75  0020               	movlb	0	; select bank0
  8815  0D76  086B               	movf	___fttol@f1+2,w
  8816  0D77  0021               	movlb	1	; select bank1
  8817  0D78  00A2               	movwf	(??___fttol^(0+128)+2)
  8818  0D79  3017               	movlw	23
  8819  0D7A                     u3115:	
  8820  0D7A  36A2               	lsrf	(??___fttol^(0+128)+2),f
  8821  0D7B  0CA1               	rrf	(??___fttol^(0+128)+1),f
  8822  0D7C  0CA0               	rrf	??___fttol^(0+128),f
  8823  0D7D  0B89               	decfsz	9,f
  8824  0D7E  2D7A               	goto	u3115
  8825  0D7F  0820               	movf	??___fttol^(0+128),w
  8826  0D80  00A3               	movwf	(??___fttol+3)^(0+128)
  8827  0D81  0823               	movf	(??___fttol+3)^(0+128),w
  8828  0D82  00A4               	movwf	___fttol@sign1^(0+128)
  8829  0D83  0020               	movlb	0	; select bank0
  8830  0D84  17EA               	bsf	___fttol@f1+1,7
  8831  0D85  30FF               	movlw	255
  8832  0D86  05E9               	andwf	___fttol@f1,f
  8833  0D87  30FF               	movlw	255
  8834  0D88  05EA               	andwf	___fttol@f1+1,f
  8835  0D89  3000               	movlw	0
  8836  0D8A  05EB               	andwf	___fttol@f1+2,f
  8837  0D8B  0869               	movf	___fttol@f1,w
  8838  0D8C  0021               	movlb	1	; select bank1
  8839  0D8D  00A5               	movwf	___fttol@lval^(0+128)
  8840  0D8E  0020               	movlb	0	; select bank0
  8841  0D8F  086A               	movf	___fttol@f1+1,w
  8842  0D90  0021               	movlb	1	; select bank1
  8843  0D91  00A6               	movwf	(___fttol@lval^(0+128)+1)
  8844  0D92  0020               	movlb	0	; select bank0
  8845  0D93  086B               	movf	___fttol@f1+2,w
  8846  0D94  0021               	movlb	1	; select bank1
  8847  0D95  00A7               	movwf	(___fttol@lval^(0+128)+2)
  8848  0D96  01A8               	clrf	(___fttol@lval^(0+128)+3)
  8849  0D97  308E               	movlw	142
  8850  0D98  02A9               	subwf	___fttol@exp1^(0+128),f
  8851  0D99  1FA9               	btfss	___fttol@exp1^(0+128),7
  8852  0D9A  2DB9               	goto	l2728
  8853  0D9B  0829               	movf	___fttol@exp1^(0+128),w
  8854  0D9C  3A80               	xorlw	128
  8855  0D9D  3E8F               	addlw	143
  8856  0D9E  1803               	skipnc
  8857  0D9F  2DAA               	goto	l2726
  8858  0DA0  3000               	movlw	0
  8859  0DA1  0020               	movlb	0	; select bank0
  8860  0DA2  00EC               	movwf	?___fttol+3
  8861  0DA3  3000               	movlw	0
  8862  0DA4  00EB               	movwf	?___fttol+2
  8863  0DA5  3000               	movlw	0
  8864  0DA6  00EA               	movwf	?___fttol+1
  8865  0DA7  3000               	movlw	0
  8866  0DA8  00E9               	movwf	?___fttol
  8867  0DA9  0008               	return
  8868  0DAA                     l2726:	
  8869  0DAA  3001               	movlw	1
  8870  0DAB                     u3145:	
  8871  0DAB  0021               	movlb	1	; select bank1
  8872  0DAC  36A8               	lsrf	(___fttol@lval+3)^(0+128),f
  8873  0DAD  0CA7               	rrf	(___fttol@lval+2)^(0+128),f
  8874  0DAE  0CA6               	rrf	(___fttol@lval+1)^(0+128),f
  8875  0DAF  0CA5               	rrf	___fttol@lval^(0+128),f
  8876  0DB0  0B89               	decfsz	9,f
  8877  0DB1  2DAB               	goto	u3145
  8878  0DB2  3001               	movlw	1
  8879  0DB3  00A0               	movwf	??___fttol^(0+128)
  8880  0DB4  0820               	movf	??___fttol^(0+128),w
  8881  0DB5  07A9               	addwf	___fttol@exp1^(0+128),f
  8882  0DB6  1903               	btfsc	3,2
  8883  0DB7  2DD5               	goto	l2736
  8884  0DB8  2DAA               	goto	l2726
  8885  0DB9                     l2728:	
  8886  0DB9  3018               	movlw	24
  8887  0DBA  0229               	subwf	___fttol@exp1^(0+128),w
  8888  0DBB  1C03               	skipc
  8889  0DBC  2DD1               	goto	l690
  8890  0DBD  3000               	movlw	0
  8891  0DBE  0020               	movlb	0	; select bank0
  8892  0DBF  00EC               	movwf	?___fttol+3
  8893  0DC0  3000               	movlw	0
  8894  0DC1  00EB               	movwf	?___fttol+2
  8895  0DC2  3000               	movlw	0
  8896  0DC3  00EA               	movwf	?___fttol+1
  8897  0DC4  3000               	movlw	0
  8898  0DC5  00E9               	movwf	?___fttol
  8899  0DC6  0008               	return
  8900  0DC7                     l2734:	
  8901  0DC7  3001               	movlw	1
  8902  0DC8                     u3175:	
  8903  0DC8  0021               	movlb	1	; select bank1
  8904  0DC9  35A5               	lslf	___fttol@lval^(0+128),f
  8905  0DCA  0DA6               	rlf	(___fttol@lval+1)^(0+128),f
  8906  0DCB  0DA7               	rlf	(___fttol@lval+2)^(0+128),f
  8907  0DCC  0DA8               	rlf	(___fttol@lval+3)^(0+128),f
  8908  0DCD  0B89               	decfsz	9,f
  8909  0DCE  2DC8               	goto	u3175
  8910  0DCF  3001               	movlw	1
  8911  0DD0  02A9               	subwf	___fttol@exp1^(0+128),f
  8912  0DD1                     l690:	
  8913  0DD1  0021               	movlb	1	; select bank1
  8914  0DD2  0829               	movf	___fttol@exp1^(0+128),w
  8915  0DD3  1D03               	btfss	3,2
  8916  0DD4  2DC7               	goto	l2734
  8917  0DD5                     l2736:	
  8918  0DD5  0824               	movf	___fttol@sign1^(0+128),w
  8919  0DD6  1903               	btfsc	3,2
  8920  0DD7  2DE3               	goto	l2740
  8921  0DD8  09A5               	comf	___fttol@lval^(0+128),f
  8922  0DD9  09A6               	comf	(___fttol@lval+1)^(0+128),f
  8923  0DDA  09A7               	comf	(___fttol@lval+2)^(0+128),f
  8924  0DDB  09A8               	comf	(___fttol@lval+3)^(0+128),f
  8925  0DDC  0AA5               	incf	___fttol@lval^(0+128),f
  8926  0DDD  1903               	skipnz
  8927  0DDE  0AA6               	incf	(___fttol@lval+1)^(0+128),f
  8928  0DDF  1903               	skipnz
  8929  0DE0  0AA7               	incf	(___fttol@lval+2)^(0+128),f
  8930  0DE1  1903               	skipnz
  8931  0DE2  0AA8               	incf	(___fttol@lval+3)^(0+128),f
  8932  0DE3                     l2740:	
  8933  0DE3  0828               	movf	(___fttol@lval+3)^(0+128),w
  8934  0DE4  0020               	movlb	0	; select bank0
  8935  0DE5  00EC               	movwf	?___fttol+3
  8936  0DE6  0021               	movlb	1	; select bank1
  8937  0DE7  0827               	movf	(___fttol@lval+2)^(0+128),w
  8938  0DE8  0020               	movlb	0	; select bank0
  8939  0DE9  00EB               	movwf	?___fttol+2
  8940  0DEA  0021               	movlb	1	; select bank1
  8941  0DEB  0826               	movf	(___fttol@lval+1)^(0+128),w
  8942  0DEC  0020               	movlb	0	; select bank0
  8943  0DED  00EA               	movwf	?___fttol+1
  8944  0DEE  0021               	movlb	1	; select bank1
  8945  0DEF  0825               	movf	___fttol@lval^(0+128),w
  8946  0DF0  0020               	movlb	0	; select bank0
  8947  0DF1  00E9               	movwf	?___fttol
  8948  0DF2  0008               	return
  8949  0DF3                     __end_of___fttol:	
  8950                           
  8951                           	psect	text15
  8952  0B30                     __ptext15:	
  8953 ;; *************** function _SYSTEM_Initialize *****************
  8954 ;; Defined at:
  8955 ;;		line 71 in file "system.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;Total ram usage:        3 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    3
  8976 ;; This function calls:
  8977 ;;		_ADCC_Initialize
  8978 ;;		_InitCustomChars
  8979 ;;		_LCD_Clear
  8980 ;;		_LCD_Init
  8981 ;;		_OSCILLATOR_Initialize
  8982 ;;		_PIN_MANAGER_Initialize
  8983 ;;		_PWM_Initialize
  8984 ;;		_TMR2_Initialize
  8985 ;; This function is called by:
  8986 ;;		_main
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _SYSTEM_Initialize
  8992  0B30                     _SYSTEM_Initialize:	
  8993                           
  8994                           ;system.c: 73: PIN_MANAGER_Initialize();
  8995                           
  8996                           ;incstack = 0
  8997                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8998  0B30  318A  224A  318B   	fcall	_PIN_MANAGER_Initialize
  8999                           
  9000                           ;system.c: 74: OSCILLATOR_Initialize();
  9001  0B33  3188  20E0  318B   	fcall	_OSCILLATOR_Initialize
  9002                           
  9003                           ;system.c: 75: FVRCON = 0x00;
  9004  0B36  0032               	movlb	18	; select bank18
  9005  0B37  018C               	clrf	12	;volatile
  9006                           
  9007                           ;system.c: 76: ADCC_Initialize();
  9008  0B38  3189  2185  318B   	fcall	_ADCC_Initialize
  9009                           
  9010                           ;system.c: 77: PWM_Initialize();
  9011  0B3B  3188  20E9  318B   	fcall	_PWM_Initialize
  9012                           
  9013                           ;system.c: 79: TMR2_Initialize();
  9014  0B3E  3189  2100  318B   	fcall	_TMR2_Initialize
  9015                           
  9016                           ;system.c: 80: LCD_Init(0X00);
  9017  0B41  3000               	movlw	0
  9018  0B42  3180  2018  318B   	fcall	_LCD_Init
  9019                           
  9020                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9021  0B45  3009               	movlw	9
  9022  0B46  00FA               	movwf	??_SYSTEM_Initialize+2
  9023  0B47  301E               	movlw	30
  9024  0B48  00F9               	movwf	??_SYSTEM_Initialize+1
  9025  0B49  30EB               	movlw	235
  9026  0B4A  00F8               	movwf	??_SYSTEM_Initialize
  9027  0B4B                     u3437:	
  9028  0B4B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9029  0B4C  2B4B               	goto	u3437
  9030  0B4D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9031  0B4E  2B4B               	goto	u3437
  9032  0B4F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9033  0B50  2B4B               	goto	u3437
  9034  0B51  0000               	nop
  9035                           
  9036                           ;system.c: 82: LCD_Clear();
  9037  0B52  3188  20D8  318B   	fcall	_LCD_Clear
  9038                           
  9039                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9040  0B55  3005               	movlw	5
  9041  0B56  00FA               	movwf	??_SYSTEM_Initialize+2
  9042  0B57  300F               	movlw	15
  9043  0B58  00F9               	movwf	??_SYSTEM_Initialize+1
  9044  0B59  30F4               	movlw	244
  9045  0B5A  00F8               	movwf	??_SYSTEM_Initialize
  9046  0B5B                     u3447:	
  9047  0B5B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9048  0B5C  2B5B               	goto	u3447
  9049  0B5D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9050  0B5E  2B5B               	goto	u3447
  9051  0B5F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9052  0B60  2B5B               	goto	u3447
  9053                           
  9054                           ;system.c: 84: InitCustomChars();
  9055  0B61  3189  21F8  318B   	fcall	_InitCustomChars
  9056                           
  9057                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9058  0B64  3009               	movlw	9
  9059  0B65  00FA               	movwf	??_SYSTEM_Initialize+2
  9060  0B66  301E               	movlw	30
  9061  0B67  00F9               	movwf	??_SYSTEM_Initialize+1
  9062  0B68  30EB               	movlw	235
  9063  0B69  00F8               	movwf	??_SYSTEM_Initialize
  9064  0B6A                     u3457:	
  9065  0B6A  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9066  0B6B  2B6A               	goto	u3457
  9067  0B6C  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9068  0B6D  2B6A               	goto	u3457
  9069  0B6E  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9070  0B6F  2B6A               	goto	u3457
  9071  0B70  0000               	nop
  9072  0B71  0008               	return
  9073  0B72                     __end_of_SYSTEM_Initialize:	
  9074                           
  9075                           	psect	text16
  9076  0900                     __ptext16:	
  9077 ;; *************** function _TMR2_Initialize *****************
  9078 ;; Defined at:
  9079 ;;		line 3 in file "tmr2.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;		None
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;		None
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  1    wreg      void 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        0 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_SYSTEM_Initialize
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _TMR2_Initialize
  9108  0900                     _TMR2_Initialize:	
  9109                           
  9110                           ;tmr2.c: 5: T2CON = 0x00;
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9114  0900  0025               	movlb	5	; select bank5
  9115  0901  018E               	clrf	14	;volatile
  9116                           
  9117                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9118  0902  3001               	movlw	1
  9119  0903  0090               	movwf	16	;volatile
  9120                           
  9121                           ;tmr2.c: 9: T2HLT = 0x00;
  9122  0904  018F               	clrf	15	;volatile
  9123                           
  9124                           ;tmr2.c: 11: T2RST = 0x00;
  9125  0905  0191               	clrf	17	;volatile
  9126                           
  9127                           ;tmr2.c: 13: T2PR = 0xFF;
  9128  0906  30FF               	movlw	255
  9129  0907  008D               	movwf	13	;volatile
  9130                           
  9131                           ;tmr2.c: 15: T2TMR = 0x00;
  9132  0908  018C               	clrf	12	;volatile
  9133                           
  9134                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9135  0909  002E               	movlb	14	; select bank14
  9136  090A  1090               	bcf	16,1	;volatile
  9137                           
  9138                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9139  090B  0025               	movlb	5	; select bank5
  9140  090C  178E               	bsf	14,7	;volatile
  9141  090D  0008               	return
  9142  090E                     __end_of_TMR2_Initialize:	
  9143                           
  9144                           	psect	text17
  9145  08E9                     __ptext17:	
  9146 ;; *************** function _PWM_Initialize *****************
  9147 ;; Defined at:
  9148 ;;		line 3 in file "pwm.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;		None
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;Total ram usage:        0 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_SYSTEM_Initialize
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           
  9176                           ;psect for function _PWM_Initialize
  9177  08E9                     _PWM_Initialize:	
  9178                           
  9179                           ;pwm.c: 14: PWM7CON = 0x80;
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9183  08E9  3080               	movlw	128
  9184  08EA  0027               	movlb	7	; select bank7
  9185  08EB  0092               	movwf	18	;volatile
  9186                           
  9187                           ;pwm.c: 16: PWM7DCH = 0x00;
  9188  08EC  0191               	clrf	17	;volatile
  9189                           
  9190                           ;pwm.c: 18: PWM7DCL = 0x00;
  9191  08ED  0190               	clrf	16	;volatile
  9192                           
  9193                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
  9194  08EE  0024               	movlb	4	; select bank4
  9195  08EF  081F               	movf	31,w	;volatile
  9196  08F0  39F3               	andlw	-13
  9197  08F1  3804               	iorlw	4
  9198  08F2  009F               	movwf	31	;volatile
  9199  08F3  0008               	return
  9200  08F4                     __end_of_PWM_Initialize:	
  9201                           
  9202                           	psect	text18
  9203  0A4A                     __ptext18:	
  9204 ;; *************** function _PIN_MANAGER_Initialize *****************
  9205 ;; Defined at:
  9206 ;;		line 5 in file "pin_manager.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;		None
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;  state           1    0[COMMON] unsigned char 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;Total ram usage:        1 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_SYSTEM_Initialize
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           
  9234                           ;psect for function _PIN_MANAGER_Initialize
  9235  0A4A                     _PIN_MANAGER_Initialize:	
  9236                           
  9237                           ;pin_manager.c: 7: LATA = 0x00;
  9238                           
  9239                           ;incstack = 0
  9240                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9241  0A4A  0020               	movlb	0	; select bank0
  9242  0A4B  0196               	clrf	22	;volatile
  9243                           
  9244                           ;pin_manager.c: 8: LATB = 0x00;
  9245  0A4C  0197               	clrf	23	;volatile
  9246                           
  9247                           ;pin_manager.c: 9: LATC = 0x00;
  9248  0A4D  0198               	clrf	24	;volatile
  9249                           
  9250                           ;pin_manager.c: 11: WPUA = 0x00;
  9251  0A4E  003E               	movlb	30	; select bank30
  9252  0A4F  01B9               	clrf	57	;volatile
  9253                           
  9254                           ;pin_manager.c: 12: WPUB = 0x00;
  9255  0A50  01C4               	clrf	68	;volatile
  9256                           
  9257                           ;pin_manager.c: 13: WPUC = 0x00;
  9258  0A51  01CF               	clrf	79	;volatile
  9259                           
  9260                           ;pin_manager.c: 14: WPUE = 0x8;
  9261  0A52  3008               	movlw	8
  9262  0A53  00E5               	movwf	101	;volatile
  9263                           
  9264                           ;pin_manager.c: 16: TRISA = 0x0A;
  9265  0A54  300A               	movlw	10
  9266  0A55  0020               	movlb	0	; select bank0
  9267  0A56  0091               	movwf	17	;volatile
  9268                           
  9269                           ;pin_manager.c: 17: TRISB = 0x07;
  9270  0A57  3007               	movlw	7
  9271  0A58  0092               	movwf	18	;volatile
  9272                           
  9273                           ;pin_manager.c: 18: TRISC = 0x00;
  9274  0A59  0193               	clrf	19	;volatile
  9275                           
  9276                           ;pin_manager.c: 20: ANSELA = 0x0A;
  9277  0A5A  300A               	movlw	10
  9278  0A5B  003E               	movlb	30	; select bank30
  9279  0A5C  00B8               	movwf	56	;volatile
  9280                           
  9281                           ;pin_manager.c: 21: ANSELB = 0x00;
  9282  0A5D  01C3               	clrf	67	;volatile
  9283                           
  9284                           ;pin_manager.c: 22: ANSELC = 0x00;
  9285  0A5E  01CE               	clrf	78	;volatile
  9286                           
  9287                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9288  0A5F  002E               	movlb	14	; select bank14
  9289  0A60  1216               	bcf	22,4	;volatile
  9290                           
  9291                           ;pin_manager.c: 25: bool state = GIE;
  9292  0A61  3000               	movlw	0
  9293  0A62  1B8B               	btfsc	11,7	;volatile
  9294  0A63  3001               	movlw	1
  9295  0A64  00F0               	movwf	PIN_MANAGER_Initialize@state
  9296                           
  9297                           ;pin_manager.c: 26: GIE = 0;
  9298  0A65  138B               	bcf	11,7	;volatile
  9299                           
  9300                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9301  0A66  3055               	movlw	85
  9302  0A67  003D               	movlb	29	; select bank29
  9303  0A68  008F               	movwf	15	;volatile
  9304                           
  9305                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9306  0A69  30AA               	movlw	170
  9307  0A6A  008F               	movwf	15	;volatile
  9308                           
  9309                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9310  0A6B  100F               	bcf	15,0	;volatile
  9311                           
  9312                           ;pin_manager.c: 33: RC3PPS = 0X0F;
  9313  0A6C  300F               	movlw	15
  9314  0A6D  003E               	movlb	30	; select bank30
  9315  0A6E  00A3               	movwf	35	;volatile
  9316                           
  9317                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  9318  0A6F  3055               	movlw	85
  9319  0A70  003D               	movlb	29	; select bank29
  9320  0A71  008F               	movwf	15	;volatile
  9321                           
  9322                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9323  0A72  30AA               	movlw	170
  9324  0A73  008F               	movwf	15	;volatile
  9325                           
  9326                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9327  0A74  140F               	bsf	15,0	;volatile
  9328                           
  9329                           ;pin_manager.c: 40: GIE = state;
  9330  0A75  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9331  0A76  2A79               	goto	u2340
  9332  0A77  178B               	bsf	11,7	;volatile
  9333  0A78  0008               	return
  9334  0A79                     u2340:	
  9335  0A79  138B               	bcf	11,7	;volatile
  9336  0A7A  0008               	return
  9337  0A7B                     __end_of_PIN_MANAGER_Initialize:	
  9338                           
  9339                           	psect	text19
  9340  08E0                     __ptext19:	
  9341 ;; *************** function _OSCILLATOR_Initialize *****************
  9342 ;; Defined at:
  9343 ;;		line 89 in file "system.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      void 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;Total ram usage:        0 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_SYSTEM_Initialize
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function _OSCILLATOR_Initialize
  9372  08E0                     _OSCILLATOR_Initialize:	
  9373                           
  9374                           ;system.c: 91: OSCCON1 = 0x60;
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9378  08E0  3060               	movlw	96
  9379  08E1  0031               	movlb	17	; select bank17
  9380  08E2  008D               	movwf	13	;volatile
  9381                           
  9382                           ;system.c: 92: OSCCON3 = 0x00;
  9383  08E3  018F               	clrf	15	;volatile
  9384                           
  9385                           ;system.c: 93: OSCEN = 0x00;
  9386  08E4  0191               	clrf	17	;volatile
  9387                           
  9388                           ;system.c: 94: OSCFRQ = 0x06;
  9389  08E5  3006               	movlw	6
  9390  08E6  0093               	movwf	19	;volatile
  9391                           
  9392                           ;system.c: 95: OSCTUNE = 0x00;
  9393  08E7  0192               	clrf	18	;volatile
  9394  08E8  0008               	return
  9395  08E9                     __end_of_OSCILLATOR_Initialize:	
  9396                           
  9397                           	psect	text20
  9398  0018                     __ptext20:	
  9399 ;; *************** function _LCD_Init *****************
  9400 ;; Defined at:
  9401 ;;		line 154 in file "lcd.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  style           1    wreg     unsigned char 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  style           1    7[COMMON] unsigned char 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, pclath, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;Total ram usage:        4 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    2
  9422 ;; This function calls:
  9423 ;;		_LCD_Cmd
  9424 ;;		_LCD_Port
  9425 ;; This function is called by:
  9426 ;;		_SYSTEM_Initialize
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _LCD_Init
  9432  0018                     _LCD_Init:	
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9436                           ;LCD_Init@style stored from wreg
  9437  0018  00F7               	movwf	LCD_Init@style
  9438                           
  9439                           ;lcd.c: 156: LCD_Port(0x00);
  9440  0019  3000               	movlw	0
  9441  001A  3189  2153  3180   	fcall	_LCD_Port
  9442                           
  9443                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  9444  001D  3005               	movlw	5
  9445  001E  00F6               	movwf	??_LCD_Init+2
  9446  001F  300F               	movlw	15
  9447  0020  00F5               	movwf	??_LCD_Init+1
  9448  0021  30F4               	movlw	244
  9449  0022  00F4               	movwf	??_LCD_Init
  9450  0023                     u3467:	
  9451  0023  0BF4               	decfsz	??_LCD_Init,f
  9452  0024  2823               	goto	u3467
  9453  0025  0BF5               	decfsz	??_LCD_Init+1,f
  9454  0026  2823               	goto	u3467
  9455  0027  0BF6               	decfsz	??_LCD_Init+2,f
  9456  0028  2823               	goto	u3467
  9457                           
  9458                           ;lcd.c: 160: LCD_Cmd(0x03);
  9459  0029  3003               	movlw	3
  9460  002A  3180  2004  3180   	fcall	_LCD_Cmd
  9461                           
  9462                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  9463  002D  3068               	movlw	104
  9464  002E  00F5               	movwf	??_LCD_Init+1
  9465  002F  30E4               	movlw	228
  9466  0030  00F4               	movwf	??_LCD_Init
  9467  0031                     u3477:	
  9468  0031  0BF4               	decfsz	??_LCD_Init,f
  9469  0032  2831               	goto	u3477
  9470  0033  0BF5               	decfsz	??_LCD_Init+1,f
  9471  0034  2831               	goto	u3477
  9472  0035  0000               	nop
  9473                           
  9474                           ;lcd.c: 164: LCD_Cmd(0x03);
  9475  0036  3003               	movlw	3
  9476  0037  3180  2004  3180   	fcall	_LCD_Cmd
  9477                           
  9478                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9479  003A  3089               	movlw	137
  9480  003B  00F4               	movwf	??_LCD_Init
  9481  003C                     u3487:	
  9482  003C  3200               	nop2
  9483  003D  3200               	nop2
  9484  003E  0BF4               	decfsz	??_LCD_Init,f
  9485  003F  283C               	goto	u3487
  9486                           
  9487                           ;lcd.c: 168: LCD_Cmd(0x03);
  9488  0040  3003               	movlw	3
  9489  0041  3180  2004  3180   	fcall	_LCD_Cmd
  9490                           
  9491                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9492  0044  3089               	movlw	137
  9493  0045  00F4               	movwf	??_LCD_Init
  9494  0046                     u3497:	
  9495  0046  3200               	nop2
  9496  0047  3200               	nop2
  9497  0048  0BF4               	decfsz	??_LCD_Init,f
  9498  0049  2846               	goto	u3497
  9499                           
  9500                           ;lcd.c: 172: LCD_Cmd(0x02);
  9501  004A  3002               	movlw	2
  9502  004B  3180  2004  3180   	fcall	_LCD_Cmd
  9503                           
  9504                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9505  004E  3089               	movlw	137
  9506  004F  00F4               	movwf	??_LCD_Init
  9507  0050                     u3507:	
  9508  0050  3200               	nop2
  9509  0051  3200               	nop2
  9510  0052  0BF4               	decfsz	??_LCD_Init,f
  9511  0053  2850               	goto	u3507
  9512                           
  9513                           ;lcd.c: 176: LCD_Cmd(0x2);
  9514  0054  3002               	movlw	2
  9515  0055  3180  2004  3180   	fcall	_LCD_Cmd
  9516                           
  9517                           ;lcd.c: 178: LCD_Cmd(0x8);
  9518  0058  3008               	movlw	8
  9519  0059  3180  2004  3180   	fcall	_LCD_Cmd
  9520                           
  9521                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9522  005C  3089               	movlw	137
  9523  005D  00F4               	movwf	??_LCD_Init
  9524  005E                     u3517:	
  9525  005E  3200               	nop2
  9526  005F  3200               	nop2
  9527  0060  0BF4               	decfsz	??_LCD_Init,f
  9528  0061  285E               	goto	u3517
  9529                           
  9530                           ;lcd.c: 182: LCD_Cmd(0x0);
  9531  0062  3000               	movlw	0
  9532  0063  3180  2004  3180   	fcall	_LCD_Cmd
  9533                           
  9534                           ;lcd.c: 184: LCD_Cmd(0x8);
  9535  0066  3008               	movlw	8
  9536  0067  3180  2004  3180   	fcall	_LCD_Cmd
  9537                           
  9538                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9539  006A  3089               	movlw	137
  9540  006B  00F4               	movwf	??_LCD_Init
  9541  006C                     u3527:	
  9542  006C  3200               	nop2
  9543  006D  3200               	nop2
  9544  006E  0BF4               	decfsz	??_LCD_Init,f
  9545  006F  286C               	goto	u3527
  9546                           
  9547                           ;lcd.c: 188: LCD_Cmd(0x0);
  9548  0070  3000               	movlw	0
  9549  0071  3180  2004  3180   	fcall	_LCD_Cmd
  9550                           
  9551                           ;lcd.c: 190: LCD_Cmd(0x1);
  9552  0074  3001               	movlw	1
  9553  0075  3180  2004  3180   	fcall	_LCD_Cmd
  9554                           
  9555                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  9556  0078  3034               	movlw	52
  9557  0079  00F5               	movwf	??_LCD_Init+1
  9558  007A  30F1               	movlw	241
  9559  007B  00F4               	movwf	??_LCD_Init
  9560  007C                     u3537:	
  9561  007C  0BF4               	decfsz	??_LCD_Init,f
  9562  007D  287C               	goto	u3537
  9563  007E  0BF5               	decfsz	??_LCD_Init+1,f
  9564  007F  287C               	goto	u3537
  9565  0080  3200               	nop2
  9566                           
  9567                           ;lcd.c: 194: LCD_Cmd(0x0);
  9568  0081  3000               	movlw	0
  9569  0082  3180  2004  3180   	fcall	_LCD_Cmd
  9570                           
  9571                           ;lcd.c: 196: LCD_Cmd(0x6);
  9572  0085  3006               	movlw	6
  9573  0086  3180  2004  3180   	fcall	_LCD_Cmd
  9574                           
  9575                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9576  0089  3089               	movlw	137
  9577  008A  00F4               	movwf	??_LCD_Init
  9578  008B                     u3547:	
  9579  008B  3200               	nop2
  9580  008C  3200               	nop2
  9581  008D  0BF4               	decfsz	??_LCD_Init,f
  9582  008E  288B               	goto	u3547
  9583                           
  9584                           ;lcd.c: 200: LCD_Cmd(0x0);
  9585  008F  3000               	movlw	0
  9586  0090  3180  2004  3180   	fcall	_LCD_Cmd
  9587                           
  9588                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9589  0093  0877               	movf	LCD_Init@style,w
  9590  0094  380C               	iorlw	12
  9591  0095  3180  2004  3180   	fcall	_LCD_Cmd
  9592                           
  9593                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9594  0098  3089               	movlw	137
  9595  0099  00F4               	movwf	??_LCD_Init
  9596  009A                     u3557:	
  9597  009A  3200               	nop2
  9598  009B  3200               	nop2
  9599  009C  0BF4               	decfsz	??_LCD_Init,f
  9600  009D  289A               	goto	u3557
  9601  009E  0008               	return
  9602  009F                     __end_of_LCD_Init:	
  9603                           
  9604                           	psect	text21
  9605  08D8                     __ptext21:	
  9606 ;; *************** function _LCD_Clear *****************
  9607 ;; Defined at:
  9608 ;;		line 75 in file "lcd.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;		None
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, status,0, pclath, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:    2
  9629 ;; This function calls:
  9630 ;;		_LCD_Cmd
  9631 ;; This function is called by:
  9632 ;;		_SYSTEM_Initialize
  9633 ;;		_main
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           
  9638                           ;psect for function _LCD_Clear
  9639  08D8                     _LCD_Clear:	
  9640                           
  9641                           ;lcd.c: 77: LCD_Cmd(0);
  9642                           
  9643                           ;incstack = 0
  9644                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9645  08D8  3000               	movlw	0
  9646  08D9  3180  2004  3188   	fcall	_LCD_Cmd
  9647                           
  9648                           ;lcd.c: 78: LCD_Cmd(1);
  9649  08DC  3001               	movlw	1
  9650  08DD  3180  2004         	fcall	_LCD_Cmd
  9651  08DF  0008               	return
  9652  08E0                     __end_of_LCD_Clear:	
  9653                           
  9654                           	psect	text22
  9655  09F8                     __ptext22:	
  9656 ;; *************** function _InitCustomChars *****************
  9657 ;; Defined at:
  9658 ;;		line 29 in file "lcd.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;		None
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  i               1    6[COMMON] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;Total ram usage:        2 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    2
  9679 ;; This function calls:
  9680 ;;		_LCD_Cmd
  9681 ;;		_LCD_Write_Char
  9682 ;; This function is called by:
  9683 ;;		_SYSTEM_Initialize
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function _InitCustomChars
  9689  09F8                     _InitCustomChars:	
  9690                           
  9691                           ;lcd.c: 31: uint8_t i;
  9692                           ;lcd.c: 32: LCD_Cmd(0x04);
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9696  09F8  3004               	movlw	4
  9697  09F9  3180  2004  3189   	fcall	_LCD_Cmd
  9698                           
  9699                           ;lcd.c: 33: LCD_Cmd(0x00);
  9700  09FC  3000               	movlw	0
  9701  09FD  3180  2004  3189   	fcall	_LCD_Cmd
  9702                           
  9703                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  9704  0A00  01F6               	clrf	InitCustomChars@i
  9705  0A01  3010               	movlw	16
  9706  0A02  0276               	subwf	InitCustomChars@i,w
  9707  0A03  1803               	btfsc	3,0
  9708  0A04  2A16               	goto	l2202
  9709  0A05                     l2196:	
  9710                           
  9711                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  9712  0A05  0876               	movf	InitCustomChars@i,w
  9713  0A06  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  9714  0A07  0086               	movwf	6
  9715  0A08  3001               	movlw	1	; select bank2/3
  9716  0A09  0087               	movwf	7
  9717  0A0A  0801               	movf	1,w
  9718  0A0B  318A  221E  3189   	fcall	_LCD_Write_Char
  9719  0A0E  3001               	movlw	1
  9720  0A0F  00F5               	movwf	??_InitCustomChars
  9721  0A10  0875               	movf	??_InitCustomChars,w
  9722  0A11  07F6               	addwf	InitCustomChars@i,f
  9723  0A12  3010               	movlw	16
  9724  0A13  0276               	subwf	InitCustomChars@i,w
  9725  0A14  1C03               	skipc
  9726  0A15  2A05               	goto	l2196
  9727  0A16                     l2202:	
  9728                           
  9729                           ;lcd.c: 36: LCD_Cmd(0);
  9730  0A16  3000               	movlw	0
  9731  0A17  3180  2004  3189   	fcall	_LCD_Cmd
  9732                           
  9733                           ;lcd.c: 37: LCD_Cmd(2);
  9734  0A1A  3002               	movlw	2
  9735  0A1B  3180  2004         	fcall	_LCD_Cmd
  9736  0A1D  0008               	return
  9737  0A1E                     __end_of_InitCustomChars:	
  9738                           
  9739                           	psect	text23
  9740  0985                     __ptext23:	
  9741 ;; *************** function _ADCC_Initialize *****************
  9742 ;; Defined at:
  9743 ;;		line 64 in file "adc.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;Total ram usage:        0 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_SYSTEM_Initialize
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _ADCC_Initialize
  9772  0985                     _ADCC_Initialize:	
  9773                           
  9774                           ;adc.c: 66: ADCON1 = 0x00;
  9775                           
  9776                           ;incstack = 0
  9777                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9778  0985  0021               	movlb	1	; select bank1
  9779  0986  0194               	clrf	20	;volatile
  9780                           
  9781                           ;adc.c: 68: ADCON2 = 0x00;
  9782  0987  0195               	clrf	21	;volatile
  9783                           
  9784                           ;adc.c: 70: ADCON3 = 0x00;
  9785  0988  0196               	clrf	22	;volatile
  9786                           
  9787                           ;adc.c: 72: ADACT = 0x00;
  9788  0989  0199               	clrf	25	;volatile
  9789                           
  9790                           ;adc.c: 74: ADSTAT = 0x00;
  9791  098A  0197               	clrf	23	;volatile
  9792                           
  9793                           ;adc.c: 77: ADCLK = 0x3F;
  9794  098B  303F               	movlw	63
  9795  098C  0098               	movwf	24	;volatile
  9796                           
  9797                           ;adc.c: 85: ADREF = 0x00;
  9798  098D  019A               	clrf	26	;volatile
  9799                           
  9800                           ;adc.c: 87: ADCAP = 0x00;
  9801  098E  019B               	clrf	27	;volatile
  9802                           
  9803                           ;adc.c: 90: ADPRE = 0x07;
  9804  098F  3007               	movlw	7
  9805  0990  009C               	movwf	28	;volatile
  9806                           
  9807                           ;adc.c: 92: ADACQ = 0x00;
  9808  0991  019D               	clrf	29	;volatile
  9809                           
  9810                           ;adc.c: 94: ADPCH = 0x00;
  9811  0992  019E               	clrf	30	;volatile
  9812                           
  9813                           ;adc.c: 96: ADRPT = 0x00;
  9814  0993  0022               	movlb	2	; select bank2
  9815  0994  018D               	clrf	13	;volatile
  9816                           
  9817                           ;adc.c: 98: ADLTHL = 0x00;
  9818  0995  018E               	clrf	14	;volatile
  9819                           
  9820                           ;adc.c: 100: ADLTHH = 0x00;
  9821  0996  018F               	clrf	15	;volatile
  9822                           
  9823                           ;adc.c: 102: ADUTHL = 0x00;
  9824  0997  0190               	clrf	16	;volatile
  9825                           
  9826                           ;adc.c: 104: ADUTHH = 0x00;
  9827  0998  0191               	clrf	17	;volatile
  9828                           
  9829                           ;adc.c: 106: ADSTPTL = 0x00;
  9830  0999  0192               	clrf	18	;volatile
  9831                           
  9832                           ;adc.c: 108: ADSTPTH = 0x00;
  9833  099A  0193               	clrf	19	;volatile
  9834                           
  9835                           ;adc.c: 110: ADCON0 = 0x84;
  9836  099B  3084               	movlw	132
  9837  099C  0021               	movlb	1	; select bank1
  9838  099D  0093               	movwf	19	;volatile
  9839  099E  0008               	return
  9840  099F                     __end_of_ADCC_Initialize:	
  9841                           
  9842                           	psect	text24
  9843  093D                     __ptext24:	
  9844 ;; *************** function _PWM7_LoadDutyValue *****************
  9845 ;; Defined at:
  9846 ;;		line 32 in file "pwm.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2, status,0
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;Total ram usage:        4 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_main
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           
  9874                           ;psect for function _PWM7_LoadDutyValue
  9875  093D                     _PWM7_LoadDutyValue:	
  9876                           
  9877                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9878                           
  9879                           ;incstack = 0
  9880                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9881  093D  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9882  093E  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9883  093F  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9884  0940  00F2               	movwf	??_PWM7_LoadDutyValue
  9885  0941  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9886  0942  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9887  0943  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9888  0944  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9889  0945  0872               	movf	??_PWM7_LoadDutyValue,w
  9890  0946  0027               	movlb	7	; select bank7
  9891  0947  0091               	movwf	17	;volatile
  9892                           
  9893                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9894  0948  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9895  0949  3903               	andlw	3
  9896  094A  00F2               	movwf	??_PWM7_LoadDutyValue
  9897  094B  3005               	movlw	5
  9898  094C                     u3095:	
  9899  094C  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9900  094D  3EFF               	addlw	-1
  9901  094E  1D03               	skipz
  9902  094F  294C               	goto	u3095
  9903  0950  3572               	lslf	??_PWM7_LoadDutyValue,w
  9904  0951  0090               	movwf	16	;volatile
  9905  0952  0008               	return
  9906  0953                     __end_of_PWM7_LoadDutyValue:	
  9907                           
  9908                           	psect	text25
  9909  025E                     __ptext25:	
  9910 ;; *************** function _PID_Calculate *****************
  9911 ;; Defined at:
  9912 ;;		line 21 in file "pid.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  setpoint        2    0[BANK0 ] int 
  9915 ;;  temp            2    2[BANK0 ] int 
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  3    0[BANK0 ] float 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;Total ram usage:        6 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    2
  9934 ;; This function calls:
  9935 ;;		___awtoft
  9936 ;;		___wmul
  9937 ;; This function is called by:
  9938 ;;		_main
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           
  9943                           ;psect for function _PID_Calculate
  9944  025E                     _PID_Calculate:	
  9945                           
  9946                           ;pid.c: 23: pidCount+=1;
  9947                           
  9948                           ;incstack = 0
  9949                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
  9950  025E  3001               	movlw	1
  9951  025F  0021               	movlb	1	; select bank1
  9952  0260  07D6               	addwf	_pidCount^(0+128),f
  9953  0261  3000               	movlw	0
  9954  0262  3DD7               	addwfc	(_pidCount+1)^(0+128),f
  9955                           
  9956                           ;pid.c: 26: error = setpoint - temp;
  9957  0263  0020               	movlb	0	; select bank0
  9958  0264  0922               	comf	PID_Calculate@temp,w
  9959  0265  00A4               	movwf	??_PID_Calculate
  9960  0266  0923               	comf	PID_Calculate@temp+1,w
  9961  0267  00A5               	movwf	??_PID_Calculate+1
  9962  0268  0AA4               	incf	??_PID_Calculate,f
  9963  0269  1903               	skipnz
  9964  026A  0AA5               	incf	??_PID_Calculate+1,f
  9965  026B  0820               	movf	PID_Calculate@setpoint,w
  9966  026C  0724               	addwf	??_PID_Calculate,w
  9967  026D  0021               	movlb	1	; select bank1
  9968  026E  00D0               	movwf	_error^(0+128)
  9969  026F  0020               	movlb	0	; select bank0
  9970  0270  0821               	movf	PID_Calculate@setpoint+1,w
  9971  0271  3D25               	addwfc	??_PID_Calculate+1,w
  9972  0272  0021               	movlb	1	; select bank1
  9973  0273  00D1               	movwf	(_error+1)^(0+128)
  9974                           
  9975                           ;pid.c: 28: errorValue = error * Kp;
  9976  0274  0851               	movf	(_error+1)^(0+128),w
  9977  0275  00F1               	movwf	___wmul@multiplier+1
  9978  0276  0850               	movf	_error^(0+128),w
  9979  0277  00F0               	movwf	___wmul@multiplier
  9980  0278  086B               	movf	(_Kp+1)^(0+128),w
  9981  0279  00F3               	movwf	___wmul@multiplicand+1
  9982  027A  086A               	movf	_Kp^(0+128),w
  9983  027B  00F2               	movwf	___wmul@multiplicand
  9984  027C  3189  219F  3182   	fcall	___wmul
  9985  027F  0871               	movf	?___wmul+1,w
  9986  0280  0021               	movlb	1	; select bank1
  9987  0281  00D3               	movwf	(_errorValue+1)^(0+128)
  9988  0282  0870               	movf	?___wmul,w
  9989  0283  00D2               	movwf	_errorValue^(0+128)
  9990                           
  9991                           ;pid.c: 31: if(error>0)signPositive=1;
  9992  0284  0851               	movf	(_error+1)^(0+128),w
  9993  0285  3A80               	xorlw	128
  9994  0286  0020               	movlb	0	; select bank0
  9995  0287  00A4               	movwf	??_PID_Calculate
  9996  0288  3080               	movlw	128
  9997  0289  0224               	subwf	??_PID_Calculate,w
  9998  028A  1D03               	skipz
  9999  028B  2A8F               	goto	u3025
 10000  028C  3001               	movlw	1
 10001  028D  0021               	movlb	1	; select bank1
 10002  028E  0250               	subwf	_error^(0+128),w
 10003  028F                     u3025:	
 10004  028F  1C03               	skipc
 10005  0290  2A97               	goto	l2622
 10006  0291  3001               	movlw	1
 10007  0292  0021               	movlb	1	; select bank1
 10008  0293  00E0               	movwf	_signPositive^(0+128)
 10009  0294  3000               	movlw	0
 10010  0295  00E1               	movwf	(_signPositive^(0+128)+1)
 10011  0296  2A9A               	goto	l2624
 10012  0297                     l2622:	
 10013                           
 10014                           ;pid.c: 33: else signPositive=0;
 10015  0297  0021               	movlb	1	; select bank1
 10016  0298  01E0               	clrf	_signPositive^(0+128)
 10017  0299  01E1               	clrf	(_signPositive+1)^(0+128)
 10018  029A                     l2624:	
 10019                           
 10020                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 10021  029A  0855               	movf	(_lastSign+1)^(0+128),w
 10022  029B  0661               	xorwf	(_signPositive+1)^(0+128),w
 10023  029C  1D03               	skipz
 10024  029D  2AA0               	goto	u3035
 10025  029E  0854               	movf	_lastSign^(0+128),w
 10026  029F  0660               	xorwf	_signPositive^(0+128),w
 10027  02A0                     u3035:	
 10028  02A0  1903               	skipnz
 10029  02A1  2AA4               	goto	l2628
 10030  02A2  01D8               	clrf	_pidIntegrated^(0+128)
 10031  02A3  01D9               	clrf	(_pidIntegrated+1)^(0+128)
 10032  02A4                     l2628:	
 10033                           
 10034                           ;pid.c: 37: lastSign=signPositive;
 10035  02A4  0861               	movf	(_signPositive+1)^(0+128),w
 10036  02A5  00D5               	movwf	(_lastSign+1)^(0+128)
 10037  02A6  0860               	movf	_signPositive^(0+128),w
 10038  02A7  00D4               	movwf	_lastSign^(0+128)
 10039                           
 10040                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 10041  02A8  095C               	comf	_pidPrevError^(0+128),w
 10042  02A9  0020               	movlb	0	; select bank0
 10043  02AA  00A4               	movwf	??_PID_Calculate
 10044  02AB  0021               	movlb	1	; select bank1
 10045  02AC  095D               	comf	(_pidPrevError+1)^(0+128),w
 10046  02AD  0020               	movlb	0	; select bank0
 10047  02AE  00A5               	movwf	??_PID_Calculate+1
 10048  02AF  0AA4               	incf	??_PID_Calculate,f
 10049  02B0  1903               	skipnz
 10050  02B1  0AA5               	incf	??_PID_Calculate+1,f
 10051  02B2  0021               	movlb	1	; select bank1
 10052  02B3  0850               	movf	_error^(0+128),w
 10053  02B4  0020               	movlb	0	; select bank0
 10054  02B5  0724               	addwf	??_PID_Calculate,w
 10055  02B6  00F0               	movwf	___wmul@multiplier
 10056  02B7  0021               	movlb	1	; select bank1
 10057  02B8  0851               	movf	(_error+1)^(0+128),w
 10058  02B9  0020               	movlb	0	; select bank0
 10059  02BA  3D25               	addwfc	??_PID_Calculate+1,w
 10060  02BB  00F1               	movwf	___wmul@multiplier+1
 10061  02BC  0021               	movlb	1	; select bank1
 10062  02BD  0867               	movf	(_Kd+1)^(0+128),w
 10063  02BE  00F3               	movwf	___wmul@multiplicand+1
 10064  02BF  0866               	movf	_Kd^(0+128),w
 10065  02C0  00F2               	movwf	___wmul@multiplicand
 10066  02C1  3189  219F  3182   	fcall	___wmul
 10067  02C4  0871               	movf	?___wmul+1,w
 10068  02C5  0021               	movlb	1	; select bank1
 10069  02C6  00CD               	movwf	(_derivativeValue+1)^(0+128)
 10070  02C7  0870               	movf	?___wmul,w
 10071  02C8  00CC               	movwf	_derivativeValue^(0+128)
 10072                           
 10073                           ;pid.c: 42: pidPrevError = error;
 10074  02C9  0851               	movf	(_error+1)^(0+128),w
 10075  02CA  00DD               	movwf	(_pidPrevError+1)^(0+128)
 10076  02CB  0850               	movf	_error^(0+128),w
 10077  02CC  00DC               	movwf	_pidPrevError^(0+128)
 10078                           
 10079                           ;pid.c: 45: if(pidCount>60)
 10080  02CD  0857               	movf	(_pidCount+1)^(0+128),w
 10081  02CE  3A80               	xorlw	128
 10082  02CF  0020               	movlb	0	; select bank0
 10083  02D0  00A4               	movwf	??_PID_Calculate
 10084  02D1  3080               	movlw	128
 10085  02D2  0224               	subwf	??_PID_Calculate,w
 10086  02D3  1D03               	skipz
 10087  02D4  2AD8               	goto	u3045
 10088  02D5  303D               	movlw	61
 10089  02D6  0021               	movlb	1	; select bank1
 10090  02D7  0256               	subwf	_pidCount^(0+128),w
 10091  02D8                     u3045:	
 10092  02D8  1C03               	skipc
 10093  02D9  2B1B               	goto	l2646
 10094                           
 10095                           ;pid.c: 46: {
 10096                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 10097  02DA  0021               	movlb	1	; select bank1
 10098  02DB  0851               	movf	(_error+1)^(0+128),w
 10099  02DC  00F1               	movwf	___wmul@multiplier+1
 10100  02DD  0850               	movf	_error^(0+128),w
 10101  02DE  00F0               	movwf	___wmul@multiplier
 10102  02DF  0869               	movf	(_Ki+1)^(0+128),w
 10103  02E0  00F3               	movwf	___wmul@multiplicand+1
 10104  02E1  0868               	movf	_Ki^(0+128),w
 10105  02E2  00F2               	movwf	___wmul@multiplicand
 10106  02E3  3189  219F  3182   	fcall	___wmul
 10107  02E6  0021               	movlb	1	; select bank1
 10108  02E7  0858               	movf	_pidIntegrated^(0+128),w
 10109  02E8  0770               	addwf	?___wmul,w
 10110  02E9  00D8               	movwf	_pidIntegrated^(0+128)
 10111  02EA  0859               	movf	(_pidIntegrated+1)^(0+128),w
 10112  02EB  3D71               	addwfc	?___wmul+1,w
 10113  02EC  00D9               	movwf	(_pidIntegrated+1)^(0+128)
 10114                           
 10115                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 10116  02ED  0859               	movf	(_pidIntegrated+1)^(0+128),w
 10117  02EE  3A80               	xorlw	128
 10118  02EF  0020               	movlb	0	; select bank0
 10119  02F0  00A4               	movwf	??_PID_Calculate
 10120  02F1  0021               	movlb	1	; select bank1
 10121  02F2  085B               	movf	(_pidMinOutput+1)^(0+128),w
 10122  02F3  3A80               	xorlw	128
 10123  02F4  0020               	movlb	0	; select bank0
 10124  02F5  0224               	subwf	??_PID_Calculate,w
 10125  02F6  1D03               	skipz
 10126  02F7  2AFB               	goto	u3055
 10127  02F8  0021               	movlb	1	; select bank1
 10128  02F9  085A               	movf	_pidMinOutput^(0+128),w
 10129  02FA  0258               	subwf	_pidIntegrated^(0+128),w
 10130  02FB                     u3055:	
 10131  02FB  1803               	skipnc
 10132  02FC  2B02               	goto	l182
 10133                           
 10134                           ;pid.c: 50: {
 10135                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 10136  02FD  0021               	movlb	1	; select bank1
 10137  02FE  085B               	movf	(_pidMinOutput+1)^(0+128),w
 10138  02FF  00D9               	movwf	(_pidIntegrated+1)^(0+128)
 10139  0300  085A               	movf	_pidMinOutput^(0+128),w
 10140  0301  00D8               	movwf	_pidIntegrated^(0+128)
 10141  0302                     l182:	
 10142                           
 10143                           ;pid.c: 52: }
 10144                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 10145  0302  0021               	movlb	1	; select bank1
 10146  0303  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 10147  0304  3A80               	xorlw	128
 10148  0305  0020               	movlb	0	; select bank0
 10149  0306  00A4               	movwf	??_PID_Calculate
 10150  0307  0021               	movlb	1	; select bank1
 10151  0308  0859               	movf	(_pidIntegrated+1)^(0+128),w
 10152  0309  3A80               	xorlw	128
 10153  030A  0020               	movlb	0	; select bank0
 10154  030B  0224               	subwf	??_PID_Calculate,w
 10155  030C  1D03               	skipz
 10156  030D  2B11               	goto	u3065
 10157  030E  0021               	movlb	1	; select bank1
 10158  030F  0858               	movf	_pidIntegrated^(0+128),w
 10159  0310  026C               	subwf	_pidMaxOutput^(0+128),w
 10160  0311                     u3065:	
 10161  0311  1803               	skipnc
 10162  0312  2B18               	goto	l2644
 10163                           
 10164                           ;pid.c: 55: {
 10165                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 10166  0313  0021               	movlb	1	; select bank1
 10167  0314  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 10168  0315  00D9               	movwf	(_pidIntegrated+1)^(0+128)
 10169  0316  086C               	movf	_pidMaxOutput^(0+128),w
 10170  0317  00D8               	movwf	_pidIntegrated^(0+128)
 10171  0318                     l2644:	
 10172                           
 10173                           ;pid.c: 57: }
 10174                           ;pid.c: 58: pidCount=0;
 10175  0318  0021               	movlb	1	; select bank1
 10176  0319  01D6               	clrf	_pidCount^(0+128)
 10177  031A  01D7               	clrf	(_pidCount+1)^(0+128)
 10178  031B                     l2646:	
 10179                           
 10180                           ;pid.c: 59: }
 10181                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 10182  031B  0021               	movlb	1	; select bank1
 10183  031C  0858               	movf	_pidIntegrated^(0+128),w
 10184  031D  0752               	addwf	_errorValue^(0+128),w
 10185  031E  0020               	movlb	0	; select bank0
 10186  031F  00A4               	movwf	??_PID_Calculate
 10187  0320  0021               	movlb	1	; select bank1
 10188  0321  0859               	movf	(_pidIntegrated+1)^(0+128),w
 10189  0322  3D53               	addwfc	(_errorValue+1)^(0+128),w
 10190  0323  0020               	movlb	0	; select bank0
 10191  0324  00A5               	movwf	??_PID_Calculate+1
 10192  0325  0021               	movlb	1	; select bank1
 10193  0326  084C               	movf	_derivativeValue^(0+128),w
 10194  0327  0020               	movlb	0	; select bank0
 10195  0328  0724               	addwf	??_PID_Calculate,w
 10196  0329  0021               	movlb	1	; select bank1
 10197  032A  00CA               	movwf	_Result^(0+128)
 10198  032B  084D               	movf	(_derivativeValue+1)^(0+128),w
 10199  032C  0020               	movlb	0	; select bank0
 10200  032D  3D25               	addwfc	??_PID_Calculate+1,w
 10201  032E  0021               	movlb	1	; select bank1
 10202  032F  00CB               	movwf	(_Result+1)^(0+128)
 10203                           
 10204                           ;pid.c: 64: if (Result < pidMinOutput)
 10205  0330  084B               	movf	(_Result+1)^(0+128),w
 10206  0331  3A80               	xorlw	128
 10207  0332  0020               	movlb	0	; select bank0
 10208  0333  00A4               	movwf	??_PID_Calculate
 10209  0334  0021               	movlb	1	; select bank1
 10210  0335  085B               	movf	(_pidMinOutput+1)^(0+128),w
 10211  0336  3A80               	xorlw	128
 10212  0337  0020               	movlb	0	; select bank0
 10213  0338  0224               	subwf	??_PID_Calculate,w
 10214  0339  1D03               	skipz
 10215  033A  2B3E               	goto	u3075
 10216  033B  0021               	movlb	1	; select bank1
 10217  033C  085A               	movf	_pidMinOutput^(0+128),w
 10218  033D  024A               	subwf	_Result^(0+128),w
 10219  033E                     u3075:	
 10220  033E  1803               	skipnc
 10221  033F  2B45               	goto	l184
 10222                           
 10223                           ;pid.c: 65: {
 10224                           ;pid.c: 66: Result = pidMinOutput;
 10225  0340  0021               	movlb	1	; select bank1
 10226  0341  085B               	movf	(_pidMinOutput+1)^(0+128),w
 10227  0342  00CB               	movwf	(_Result+1)^(0+128)
 10228  0343  085A               	movf	_pidMinOutput^(0+128),w
 10229  0344  00CA               	movwf	_Result^(0+128)
 10230  0345                     l184:	
 10231                           
 10232                           ;pid.c: 67: }
 10233                           ;pid.c: 69: if (Result > pidMaxOutput)
 10234  0345  0021               	movlb	1	; select bank1
 10235  0346  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 10236  0347  3A80               	xorlw	128
 10237  0348  0020               	movlb	0	; select bank0
 10238  0349  00A4               	movwf	??_PID_Calculate
 10239  034A  0021               	movlb	1	; select bank1
 10240  034B  084B               	movf	(_Result+1)^(0+128),w
 10241  034C  3A80               	xorlw	128
 10242  034D  0020               	movlb	0	; select bank0
 10243  034E  0224               	subwf	??_PID_Calculate,w
 10244  034F  1D03               	skipz
 10245  0350  2B54               	goto	u3085
 10246  0351  0021               	movlb	1	; select bank1
 10247  0352  084A               	movf	_Result^(0+128),w
 10248  0353  026C               	subwf	_pidMaxOutput^(0+128),w
 10249  0354                     u3085:	
 10250  0354  1803               	skipnc
 10251  0355  2B5B               	goto	l2654
 10252                           
 10253                           ;pid.c: 70: {
 10254                           ;pid.c: 71: Result = pidMaxOutput;
 10255  0356  0021               	movlb	1	; select bank1
 10256  0357  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 10257  0358  00CB               	movwf	(_Result+1)^(0+128)
 10258  0359  086C               	movf	_pidMaxOutput^(0+128),w
 10259  035A  00CA               	movwf	_Result^(0+128)
 10260  035B                     l2654:	
 10261                           
 10262                           ;pid.c: 72: }
 10263                           ;pid.c: 74: return (Result);
 10264  035B  0021               	movlb	1	; select bank1
 10265  035C  084B               	movf	(_Result+1)^(0+128),w
 10266  035D  00F9               	movwf	___awtoft@c+1
 10267  035E  084A               	movf	_Result^(0+128),w
 10268  035F  00F8               	movwf	___awtoft@c
 10269  0360  3189  21D8         	fcall	___awtoft
 10270  0362  0878               	movf	?___awtoft,w
 10271  0363  0020               	movlb	0	; select bank0
 10272  0364  00A0               	movwf	?_PID_Calculate
 10273  0365  0879               	movf	?___awtoft+1,w
 10274  0366  00A1               	movwf	?_PID_Calculate+1
 10275  0367  087A               	movf	?___awtoft+2,w
 10276  0368  00A2               	movwf	?_PID_Calculate+2
 10277  0369  0008               	return
 10278  036A                     __end_of_PID_Calculate:	
 10279                           
 10280                           	psect	text26
 10281  099F                     __ptext26:	
 10282 ;; *************** function ___wmul *****************
 10283 ;; Defined at:
 10284 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  multiplier      2    0[COMMON] unsigned int 
 10287 ;;  multiplicand    2    2[COMMON] unsigned int 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  product         2    4[COMMON] unsigned int 
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  2    0[COMMON] unsigned int 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;Total ram usage:        6 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; This function calls:
 10306 ;;		Nothing
 10307 ;; This function is called by:
 10308 ;;		_PID_Calculate
 10309 ;;		_eval_poly
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           
 10314                           ;psect for function ___wmul
 10315  099F                     ___wmul:	
 10316                           
 10317                           ;incstack = 0
 10318                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10319  099F  01F4               	clrf	___wmul@product
 10320  09A0  01F5               	clrf	___wmul@product+1
 10321  09A1                     l1940:	
 10322  09A1  1C70               	btfss	___wmul@multiplier,0
 10323  09A2  29A7               	goto	l438
 10324  09A3  0872               	movf	___wmul@multiplicand,w
 10325  09A4  07F4               	addwf	___wmul@product,f
 10326  09A5  0873               	movf	___wmul@multiplicand+1,w
 10327  09A6  3DF5               	addwfc	___wmul@product+1,f
 10328  09A7                     l438:	
 10329  09A7  3001               	movlw	1
 10330  09A8                     u1865:	
 10331  09A8  35F2               	lslf	___wmul@multiplicand,f
 10332  09A9  0DF3               	rlf	___wmul@multiplicand+1,f
 10333  09AA  0B89               	decfsz	9,f
 10334  09AB  29A8               	goto	u1865
 10335  09AC  3001               	movlw	1
 10336  09AD                     u1875:	
 10337  09AD  36F1               	lsrf	___wmul@multiplier+1,f
 10338  09AE  0CF0               	rrf	___wmul@multiplier,f
 10339  09AF  0B89               	decfsz	9,f
 10340  09B0  29AD               	goto	u1875
 10341  09B1  0870               	movf	___wmul@multiplier,w
 10342  09B2  0471               	iorwf	___wmul@multiplier+1,w
 10343  09B3  1D03               	btfss	3,2
 10344  09B4  29A1               	goto	l1940
 10345  09B5  0875               	movf	___wmul@product+1,w
 10346  09B6  00F1               	movwf	?___wmul+1
 10347  09B7  0874               	movf	___wmul@product,w
 10348  09B8  00F0               	movwf	?___wmul
 10349  09B9  0008               	return
 10350  09BA                     __end_of___wmul:	
 10351                           
 10352                           	psect	text27
 10353  09D8                     __ptext27:	
 10354 ;; *************** function ___awtoft *****************
 10355 ;; Defined at:
 10356 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  c               2    8[COMMON] int 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  sign            1   13[COMMON] unsigned char 
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  3    8[COMMON] float 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0, pclath, cstack
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10370 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;Total ram usage:        6 bytes
 10375 ;; Hardware stack levels used:    1
 10376 ;; Hardware stack levels required when called:    1
 10377 ;; This function calls:
 10378 ;;		___ftpack
 10379 ;; This function is called by:
 10380 ;;		_PID_Calculate
 10381 ;;		_tempCalc
 10382 ;;		_log
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function ___awtoft
 10388  09D8                     ___awtoft:	
 10389                           
 10390                           ;incstack = 0
 10391                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 10392  09D8  01FD               	clrf	___awtoft@sign
 10393  09D9  1FF9               	btfss	___awtoft@c+1,7
 10394  09DA  29E2               	goto	l2110
 10395  09DB  09F8               	comf	___awtoft@c,f
 10396  09DC  09F9               	comf	___awtoft@c+1,f
 10397  09DD  0AF8               	incf	___awtoft@c,f
 10398  09DE  1903               	skipnz
 10399  09DF  0AF9               	incf	___awtoft@c+1,f
 10400  09E0  01FD               	clrf	___awtoft@sign
 10401  09E1  0AFD               	incf	___awtoft@sign,f
 10402  09E2                     l2110:	
 10403  09E2  0878               	movf	___awtoft@c,w
 10404  09E3  00F0               	movwf	___ftpack@arg
 10405  09E4  0879               	movf	___awtoft@c+1,w
 10406  09E5  00F1               	movwf	___ftpack@arg+1
 10407  09E6  01F2               	clrf	___ftpack@arg+2
 10408  09E7  308E               	movlw	142
 10409  09E8  00FB               	movwf	??___awtoft
 10410  09E9  087B               	movf	??___awtoft,w
 10411  09EA  00F3               	movwf	___ftpack@exp
 10412  09EB  087D               	movf	___awtoft@sign,w
 10413  09EC  00FC               	movwf	??___awtoft+1
 10414  09ED  087C               	movf	??___awtoft+1,w
 10415  09EE  00F4               	movwf	___ftpack@sign
 10416  09EF  318C  2468         	fcall	___ftpack
 10417  09F1  0870               	movf	?___ftpack,w
 10418  09F2  00F8               	movwf	?___awtoft
 10419  09F3  0871               	movf	?___ftpack+1,w
 10420  09F4  00F9               	movwf	?___awtoft+1
 10421  09F5  0872               	movf	?___ftpack+2,w
 10422  09F6  00FA               	movwf	?___awtoft+2
 10423  09F7  0008               	return
 10424  09F8                     __end_of___awtoft:	
 10425                           
 10426                           	psect	text28
 10427  0C68                     __ptext28:	
 10428 ;; *************** function ___ftpack *****************
 10429 ;; Defined at:
 10430 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  arg             3    0[COMMON] unsigned um
 10433 ;;  exp             1    3[COMMON] unsigned char 
 10434 ;;  sign            1    4[COMMON] unsigned char 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  3    0[COMMON] float 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10446 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;Total ram usage:        8 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		___awtoft
 10456 ;;		___ftadd
 10457 ;;		___ftdiv
 10458 ;;		___ftmul
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function ___ftpack
 10464  0C68                     ___ftpack:	
 10465                           
 10466                           ;incstack = 0
 10467                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10468  0C68  0873               	movf	___ftpack@exp,w
 10469  0C69  1903               	btfsc	3,2
 10470  0C6A  2C70               	goto	l1894
 10471  0C6B  0872               	movf	___ftpack@arg+2,w
 10472  0C6C  0471               	iorwf	___ftpack@arg+1,w
 10473  0C6D  0470               	iorwf	___ftpack@arg,w
 10474  0C6E  1D03               	skipz
 10475  0C6F  2C81               	goto	l1900
 10476  0C70                     l1894:	
 10477  0C70  3000               	movlw	0
 10478  0C71  00F0               	movwf	?___ftpack
 10479  0C72  3000               	movlw	0
 10480  0C73  00F1               	movwf	?___ftpack+1
 10481  0C74  3000               	movlw	0
 10482  0C75  00F2               	movwf	?___ftpack+2
 10483  0C76  0008               	return
 10484  0C77                     l1898:	
 10485  0C77  3001               	movlw	1
 10486  0C78  00F5               	movwf	??___ftpack
 10487  0C79  0875               	movf	??___ftpack,w
 10488  0C7A  07F3               	addwf	___ftpack@exp,f
 10489  0C7B  3001               	movlw	1
 10490  0C7C                     u1715:	
 10491  0C7C  36F2               	lsrf	___ftpack@arg+2,f
 10492  0C7D  0CF1               	rrf	___ftpack@arg+1,f
 10493  0C7E  0CF0               	rrf	___ftpack@arg,f
 10494  0C7F  0B89               	decfsz	9,f
 10495  0C80  2C7C               	goto	u1715
 10496  0C81                     l1900:	
 10497  0C81  30FE               	movlw	254
 10498  0C82  0572               	andwf	___ftpack@arg+2,w
 10499  0C83  1903               	btfsc	3,2
 10500  0C84  2C9A               	goto	l599
 10501  0C85  2C77               	goto	l1898
 10502  0C86                     l1902:	
 10503  0C86  3001               	movlw	1
 10504  0C87  00F5               	movwf	??___ftpack
 10505  0C88  0875               	movf	??___ftpack,w
 10506  0C89  07F3               	addwf	___ftpack@exp,f
 10507  0C8A  3001               	movlw	1
 10508  0C8B  07F0               	addwf	___ftpack@arg,f
 10509  0C8C  3000               	movlw	0
 10510  0C8D  1803               	skipnc
 10511  0C8E  3001               	movlw	1
 10512  0C8F  07F1               	addwf	___ftpack@arg+1,f
 10513  0C90  3000               	movlw	0
 10514  0C91  1803               	skipnc
 10515  0C92  3001               	movlw	1
 10516  0C93  07F2               	addwf	___ftpack@arg+2,f
 10517  0C94  3001               	movlw	1
 10518  0C95                     u1735:	
 10519  0C95  36F2               	lsrf	___ftpack@arg+2,f
 10520  0C96  0CF1               	rrf	___ftpack@arg+1,f
 10521  0C97  0CF0               	rrf	___ftpack@arg,f
 10522  0C98  0B89               	decfsz	9,f
 10523  0C99  2C95               	goto	u1735
 10524  0C9A                     l599:	
 10525  0C9A  30FF               	movlw	255
 10526  0C9B  0572               	andwf	___ftpack@arg+2,w
 10527  0C9C  1903               	btfsc	3,2
 10528  0C9D  2CA7               	goto	l1910
 10529  0C9E  2C86               	goto	l1902
 10530  0C9F                     l1908:	
 10531  0C9F  3001               	movlw	1
 10532  0CA0  02F3               	subwf	___ftpack@exp,f
 10533  0CA1  3001               	movlw	1
 10534  0CA2                     u1755:	
 10535  0CA2  35F0               	lslf	___ftpack@arg,f
 10536  0CA3  0DF1               	rlf	___ftpack@arg+1,f
 10537  0CA4  0DF2               	rlf	___ftpack@arg+2,f
 10538  0CA5  0B89               	decfsz	9,f
 10539  0CA6  2CA2               	goto	u1755
 10540  0CA7                     l1910:	
 10541  0CA7  1BF1               	btfsc	___ftpack@arg+1,7
 10542  0CA8  2CAD               	goto	l606
 10543  0CA9  3002               	movlw	2
 10544  0CAA  0273               	subwf	___ftpack@exp,w
 10545  0CAB  1803               	skipnc
 10546  0CAC  2C9F               	goto	l1908
 10547  0CAD                     l606:	
 10548  0CAD  1873               	btfsc	___ftpack@exp,0
 10549  0CAE  2CB5               	goto	l607
 10550  0CAF  30FF               	movlw	255
 10551  0CB0  05F0               	andwf	___ftpack@arg,f
 10552  0CB1  307F               	movlw	127
 10553  0CB2  05F1               	andwf	___ftpack@arg+1,f
 10554  0CB3  30FF               	movlw	255
 10555  0CB4  05F2               	andwf	___ftpack@arg+2,f
 10556  0CB5                     l607:	
 10557  0CB5  1003               	clrc
 10558  0CB6  0CF3               	rrf	___ftpack@exp,f
 10559  0CB7  0873               	movf	___ftpack@exp,w
 10560  0CB8  00F5               	movwf	??___ftpack
 10561  0CB9  01F6               	clrf	??___ftpack+1
 10562  0CBA  01F7               	clrf	??___ftpack+2
 10563  0CBB  3010               	movlw	16
 10564  0CBC                     u1795:	
 10565  0CBC  35F5               	lslf	??___ftpack,f
 10566  0CBD  0DF6               	rlf	??___ftpack+1,f
 10567  0CBE  0DF7               	rlf	??___ftpack+2,f
 10568  0CBF  0B89               	decfsz	9,f
 10569  0CC0  2CBC               	goto	u1795
 10570  0CC1  0875               	movf	??___ftpack,w
 10571  0CC2  04F0               	iorwf	___ftpack@arg,f
 10572  0CC3  0876               	movf	??___ftpack+1,w
 10573  0CC4  04F1               	iorwf	___ftpack@arg+1,f
 10574  0CC5  0877               	movf	??___ftpack+2,w
 10575  0CC6  04F2               	iorwf	___ftpack@arg+2,f
 10576  0CC7  0874               	movf	___ftpack@sign,w
 10577  0CC8  1903               	btfsc	3,2
 10578  0CC9  0008               	return
 10579  0CCA  17F2               	bsf	___ftpack@arg+2,7
 10580  0CCB  0008               	return
 10581  0CCC                     __end_of___ftpack:	
 10582                           
 10583                           	psect	text29
 10584  096B                     __ptext29:	
 10585 ;; *************** function _LCD_Write_String *****************
 10586 ;; Defined at:
 10587 ;;		line 239 in file "lcd.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  a               2    5[COMMON] PTR const unsigned char 
 10590 ;;		 -> STR_2(8), STR_1(5), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  i               2    8[COMMON] int 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;Total ram usage:        5 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    2
 10609 ;; This function calls:
 10610 ;;		_LCD_Write_Char
 10611 ;; This function is called by:
 10612 ;;		_main
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           
 10617                           ;psect for function _LCD_Write_String
 10618  096B                     _LCD_Write_String:	
 10619                           
 10620                           ;lcd.c: 241: int i;
 10621                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10622                           
 10623                           ;incstack = 0
 10624                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10625  096B  01F8               	clrf	LCD_Write_String@i
 10626  096C  01F9               	clrf	LCD_Write_String@i+1
 10627  096D                     l2560:	
 10628  096D  0875               	movf	LCD_Write_String@a,w
 10629  096E  0778               	addwf	LCD_Write_String@i,w
 10630  096F  0084               	movwf	4
 10631  0970  0876               	movf	LCD_Write_String@a+1,w
 10632  0971  3D79               	addwfc	LCD_Write_String@i+1,w
 10633  0972  0085               	movwf	5
 10634  0973  0012               	moviw fsr0++
 10635  0974  1903               	btfsc	3,2
 10636  0975  0008               	return
 10637                           
 10638                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10639  0976  0875               	movf	LCD_Write_String@a,w
 10640  0977  0778               	addwf	LCD_Write_String@i,w
 10641  0978  0084               	movwf	4
 10642  0979  0876               	movf	LCD_Write_String@a+1,w
 10643  097A  3D79               	addwfc	LCD_Write_String@i+1,w
 10644  097B  0085               	movwf	5
 10645  097C  0800               	movf	0,w	;code access
 10646  097D  318A  221E  3189   	fcall	_LCD_Write_Char
 10647  0980  3001               	movlw	1
 10648  0981  07F8               	addwf	LCD_Write_String@i,f
 10649  0982  3000               	movlw	0
 10650  0983  3DF9               	addwfc	LCD_Write_String@i+1,f
 10651  0984  296D               	goto	l2560
 10652  0985                     __end_of_LCD_Write_String:	
 10653                           
 10654                           	psect	text30
 10655  009F                     __ptext30:	
 10656 ;; *************** function _LCD_Write_Int *****************
 10657 ;; Defined at:
 10658 ;;		line 246 in file "lcd.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  value           2    9[COMMON] int 
 10661 ;;  fieldLength     1   11[COMMON] char 
 10662 ;;  numPlaces       1   12[COMMON] char 
 10663 ;;  sign            1   13[COMMON] char 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  str             5    5[BANK0 ] unsigned char [5]
 10666 ;;  i               2   12[BANK0 ] int 
 10667 ;;  j               2   10[BANK0 ] int 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10677 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10680 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;Total ram usage:       19 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    2
 10684 ;; This function calls:
 10685 ;;		_LCD_Write_Char
 10686 ;;		___awdiv
 10687 ;;		___awmod
 10688 ;; This function is called by:
 10689 ;;		_main
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function _LCD_Write_Int
 10695  009F                     _LCD_Write_Int:	
 10696                           
 10697                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10701  009F  3030               	movlw	low LCD_Write_Int@F13690
 10702  00A0  0086               	movwf	6
 10703  00A1  3001               	movlw	high LCD_Write_Int@F13690
 10704  00A2  0087               	movwf	7
 10705  00A3  3025               	movlw	low LCD_Write_Int@str
 10706  00A4  0084               	movwf	4
 10707  00A5  3000               	movlw	high LCD_Write_Int@str
 10708  00A6  0085               	movwf	5
 10709  00A7  3005               	movlw	5
 10710  00A8  0020               	movlb	0	; select bank0
 10711  00A9  00A0               	movwf	??_LCD_Write_Int
 10712  00AA                     u2930:	
 10713  00AA  0016               	moviw fsr1++
 10714  00AB  001A               	movwi fsr0++
 10715  00AC  0BA0               	decfsz	??_LCD_Write_Int,f
 10716  00AD  28AA               	goto	u2930
 10717                           
 10718                           ;lcd.c: 249: int i=4,j=0;
 10719  00AE  3004               	movlw	4
 10720  00AF  00AC               	movwf	LCD_Write_Int@i
 10721  00B0  3000               	movlw	0
 10722  00B1  00AD               	movwf	LCD_Write_Int@i+1
 10723  00B2  01AA               	clrf	LCD_Write_Int@j
 10724  00B3  01AB               	clrf	LCD_Write_Int@j+1
 10725                           
 10726                           ;lcd.c: 251: if(value<0)
 10727  00B4  1FFA               	btfss	LCD_Write_Int@value+1,7
 10728  00B5  28C0               	goto	l2574
 10729                           
 10730                           ;lcd.c: 252: {
 10731                           ;lcd.c: 253: LCD_Write_Char('-');
 10732  00B6  302D               	movlw	45
 10733  00B7  318A  221E  3180   	fcall	_LCD_Write_Char
 10734                           
 10735                           ;lcd.c: 254: value=value*-1;
 10736  00BA  09F9               	comf	LCD_Write_Int@value,f
 10737  00BB  09FA               	comf	LCD_Write_Int@value+1,f
 10738  00BC  0AF9               	incf	LCD_Write_Int@value,f
 10739  00BD  1903               	skipnz
 10740  00BE  0AFA               	incf	LCD_Write_Int@value+1,f
 10741                           
 10742                           ;lcd.c: 255: }
 10743  00BF  28C7               	goto	l2584
 10744  00C0                     l2574:	
 10745                           
 10746                           ;lcd.c: 257: else
 10747                           ;lcd.c: 258: {
 10748                           ;lcd.c: 259: if(sign == 1)
 10749  00C0  037D               	decf	LCD_Write_Int@sign,w
 10750  00C1  1D03               	btfss	3,2
 10751  00C2  28C7               	goto	l2584
 10752                           
 10753                           ;lcd.c: 260: {
 10754                           ;lcd.c: 261: LCD_Write_Char('+');
 10755  00C3  302B               	movlw	43
 10756  00C4  318A  221E  3180   	fcall	_LCD_Write_Char
 10757  00C7                     l2584:	
 10758                           ;lcd.c: 262: }
 10759                           ;lcd.c: 263: }
 10760                           ;lcd.c: 265: while(value)
 10761                           
 10762  00C7  0879               	movf	LCD_Write_Int@value,w
 10763  00C8  047A               	iorwf	LCD_Write_Int@value+1,w
 10764  00C9  1903               	btfsc	3,2
 10765  00CA  28F4               	goto	l2586
 10766                           
 10767                           ;lcd.c: 266: {
 10768                           ;lcd.c: 267: str[i]=value%10;
 10769  00CB  300A               	movlw	10
 10770  00CC  00F0               	movwf	___awmod@divisor
 10771  00CD  3000               	movlw	0
 10772  00CE  00F1               	movwf	___awmod@divisor+1
 10773  00CF  087A               	movf	LCD_Write_Int@value+1,w
 10774  00D0  00F3               	movwf	___awmod@dividend+1
 10775  00D1  0879               	movf	LCD_Write_Int@value,w
 10776  00D2  00F2               	movwf	___awmod@dividend
 10777  00D3  318B  2372  3180   	fcall	___awmod
 10778  00D6  0870               	movf	?___awmod,w
 10779  00D7  0020               	movlb	0	; select bank0
 10780  00D8  00A0               	movwf	??_LCD_Write_Int
 10781  00D9  082C               	movf	LCD_Write_Int@i,w
 10782  00DA  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10783  00DB  0086               	movwf	6
 10784  00DC  0187               	clrf	7
 10785  00DD  0820               	movf	??_LCD_Write_Int,w
 10786  00DE  0081               	movwf	1
 10787                           
 10788                           ;lcd.c: 268: value=value/10;
 10789  00DF  300A               	movlw	10
 10790  00E0  00F0               	movwf	___awdiv@divisor
 10791  00E1  3000               	movlw	0
 10792  00E2  00F1               	movwf	___awdiv@divisor+1
 10793  00E3  087A               	movf	LCD_Write_Int@value+1,w
 10794  00E4  00F3               	movwf	___awdiv@dividend+1
 10795  00E5  0879               	movf	LCD_Write_Int@value,w
 10796  00E6  00F2               	movwf	___awdiv@dividend
 10797  00E7  318B  23B7  3180   	fcall	___awdiv
 10798  00EA  0871               	movf	?___awdiv+1,w
 10799  00EB  00FA               	movwf	LCD_Write_Int@value+1
 10800  00EC  0870               	movf	?___awdiv,w
 10801  00ED  00F9               	movwf	LCD_Write_Int@value
 10802                           
 10803                           ;lcd.c: 269: i--;
 10804  00EE  30FF               	movlw	255
 10805  00EF  0020               	movlb	0	; select bank0
 10806  00F0  07AC               	addwf	LCD_Write_Int@i,f
 10807  00F1  30FF               	movlw	255
 10808  00F2  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10809  00F3  28C7               	goto	l2584
 10810  00F4                     l2586:	
 10811                           
 10812                           ;lcd.c: 270: }
 10813                           ;lcd.c: 271: if(fieldLength==-1)
 10814  00F4  0A7B               	incf	LCD_Write_Int@fieldLength,w
 10815  00F5  1903               	btfsc	3,2
 10816  00F6  28FD               	goto	l2592
 10817  00F7  2906               	goto	l2594
 10818  00F8                     l2590:	
 10819                           ;lcd.c: 272: {
 10820                           ;lcd.c: 273: while(str[j]==0)
 10821                           
 10822                           
 10823                           ;lcd.c: 274: {
 10824                           ;lcd.c: 275: j++;
 10825  00F8  3001               	movlw	1
 10826  00F9  0020               	movlb	0	; select bank0
 10827  00FA  07AA               	addwf	LCD_Write_Int@j,f
 10828  00FB  3000               	movlw	0
 10829  00FC  3DAB               	addwfc	LCD_Write_Int@j+1,f
 10830  00FD                     l2592:	
 10831  00FD  0020               	movlb	0	; select bank0
 10832  00FE  082A               	movf	LCD_Write_Int@j,w
 10833  00FF  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10834  0100  0086               	movwf	6
 10835  0101  0187               	clrf	7
 10836  0102  0801               	movf	1,w
 10837  0103  1D03               	btfss	3,2
 10838  0104  2917               	goto	l2596
 10839  0105  28F8               	goto	l2590
 10840  0106                     l2594:	
 10841                           ;lcd.c: 276: }
 10842                           ;lcd.c: 277: }
 10843                           
 10844                           
 10845                           ;lcd.c: 278: else
 10846                           ;lcd.c: 279: {
 10847                           ;lcd.c: 280: j=5-fieldLength;
 10848  0106  087B               	movf	LCD_Write_Int@fieldLength,w
 10849  0107  0020               	movlb	0	; select bank0
 10850  0108  00A0               	movwf	??_LCD_Write_Int
 10851  0109  01A1               	clrf	??_LCD_Write_Int+1
 10852  010A  1BA0               	btfsc	??_LCD_Write_Int,7
 10853  010B  03A1               	decf	??_LCD_Write_Int+1,f
 10854  010C  09A0               	comf	??_LCD_Write_Int,f
 10855  010D  09A1               	comf	??_LCD_Write_Int+1,f
 10856  010E  0AA0               	incf	??_LCD_Write_Int,f
 10857  010F  1903               	skipnz
 10858  0110  0AA1               	incf	??_LCD_Write_Int+1,f
 10859  0111  0820               	movf	??_LCD_Write_Int,w
 10860  0112  3E05               	addlw	5
 10861  0113  00AA               	movwf	LCD_Write_Int@j
 10862  0114  3000               	movlw	0
 10863  0115  3D21               	addwfc	??_LCD_Write_Int+1,w
 10864  0116  00AB               	movwf	LCD_Write_Int@j+1
 10865  0117                     l2596:	
 10866                           
 10867                           ;lcd.c: 281: }
 10868                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10869  0117  082B               	movf	LCD_Write_Int@j+1,w
 10870  0118  00AD               	movwf	LCD_Write_Int@i+1
 10871  0119  082A               	movf	LCD_Write_Int@j,w
 10872  011A  00AC               	movwf	LCD_Write_Int@i
 10873  011B                     l2602:	
 10874  011B  087C               	movf	LCD_Write_Int@numPlaces,w
 10875  011C  00A0               	movwf	??_LCD_Write_Int
 10876  011D  01A1               	clrf	??_LCD_Write_Int+1
 10877  011E  1BA0               	btfsc	??_LCD_Write_Int,7
 10878  011F  03A1               	decf	??_LCD_Write_Int+1,f
 10879  0120  09A0               	comf	??_LCD_Write_Int,f
 10880  0121  09A1               	comf	??_LCD_Write_Int+1,f
 10881  0122  0AA0               	incf	??_LCD_Write_Int,f
 10882  0123  1903               	skipnz
 10883  0124  0AA1               	incf	??_LCD_Write_Int+1,f
 10884  0125  0820               	movf	??_LCD_Write_Int,w
 10885  0126  3E05               	addlw	5
 10886  0127  00A2               	movwf	??_LCD_Write_Int+2
 10887  0128  3000               	movlw	0
 10888  0129  3D21               	addwfc	??_LCD_Write_Int+1,w
 10889  012A  00A3               	movwf	??_LCD_Write_Int+3
 10890  012B  082D               	movf	LCD_Write_Int@i+1,w
 10891  012C  3A80               	xorlw	128
 10892  012D  00A4               	movwf	??_LCD_Write_Int+4
 10893  012E  0823               	movf	??_LCD_Write_Int+3,w
 10894  012F  3A80               	xorlw	128
 10895  0130  0224               	subwf	??_LCD_Write_Int+4,w
 10896  0131  1D03               	skipz
 10897  0132  2935               	goto	u2995
 10898  0133  0822               	movf	??_LCD_Write_Int+2,w
 10899  0134  022C               	subwf	LCD_Write_Int@i,w
 10900  0135                     u2995:	
 10901  0135  1803               	btfsc	3,0
 10902  0136  2947               	goto	l2604
 10903                           
 10904                           ;lcd.c: 284: {
 10905                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10906  0137  0020               	movlb	0	; select bank0
 10907  0138  082C               	movf	LCD_Write_Int@i,w
 10908  0139  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10909  013A  0086               	movwf	6
 10910  013B  0187               	clrf	7
 10911  013C  0801               	movf	1,w
 10912  013D  3E30               	addlw	48
 10913  013E  318A  221E  3180   	fcall	_LCD_Write_Char
 10914  0141  3001               	movlw	1
 10915  0142  0020               	movlb	0	; select bank0
 10916  0143  07AC               	addwf	LCD_Write_Int@i,f
 10917  0144  3000               	movlw	0
 10918  0145  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10919  0146  291B               	goto	l2602
 10920  0147                     l2604:	
 10921                           
 10922                           ;lcd.c: 286: }
 10923                           ;lcd.c: 288: if(numPlaces == 1)
 10924  0147  037C               	decf	LCD_Write_Int@numPlaces,w
 10925  0148  1D03               	btfss	3,2
 10926  0149  2954               	goto	l2608
 10927                           
 10928                           ;lcd.c: 289: {
 10929                           ;lcd.c: 290: LCD_Write_Char(46);
 10930  014A  302E               	movlw	46
 10931  014B  318A  221E  3180   	fcall	_LCD_Write_Char
 10932                           
 10933                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10934  014E  0020               	movlb	0	; select bank0
 10935  014F  0829               	movf	LCD_Write_Int@str+4,w
 10936  0150  3E30               	addlw	48
 10937  0151  318A  221E  3180   	fcall	_LCD_Write_Char
 10938  0154                     l2608:	
 10939                           
 10940                           ;lcd.c: 292: }
 10941                           ;lcd.c: 294: if(numPlaces == 2)
 10942  0154  3002               	movlw	2
 10943  0155  067C               	xorwf	LCD_Write_Int@numPlaces,w
 10944  0156  1D03               	btfss	3,2
 10945  0157  0008               	return
 10946                           
 10947                           ;lcd.c: 295: {
 10948                           ;lcd.c: 296: LCD_Write_Char(46);
 10949  0158  302E               	movlw	46
 10950  0159  318A  221E  3180   	fcall	_LCD_Write_Char
 10951                           
 10952                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10953  015C  0020               	movlb	0	; select bank0
 10954  015D  0828               	movf	LCD_Write_Int@str+3,w
 10955  015E  3E30               	addlw	48
 10956  015F  318A  221E  3180   	fcall	_LCD_Write_Char
 10957                           
 10958                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10959  0162  0020               	movlb	0	; select bank0
 10960  0163  0829               	movf	LCD_Write_Int@str+4,w
 10961  0164  3E30               	addlw	48
 10962  0165  318A  221E         	fcall	_LCD_Write_Char
 10963  0167  0008               	return
 10964  0168                     __end_of_LCD_Write_Int:	
 10965                           
 10966                           	psect	text31
 10967  0B72                     __ptext31:	
 10968 ;; *************** function ___awmod *****************
 10969 ;; Defined at:
 10970 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  divisor         2    0[COMMON] int 
 10973 ;;  dividend        2    2[COMMON] int 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  sign            1    6[COMMON] unsigned char 
 10976 ;;  counter         1    5[COMMON] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  2    0[COMMON] int 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        7 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_LCD_Write_Int
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           
 11000                           ;psect for function ___awmod
 11001  0B72                     ___awmod:	
 11002                           
 11003                           ;incstack = 0
 11004                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11005  0B72  01F6               	clrf	___awmod@sign
 11006  0B73  1FF3               	btfss	___awmod@dividend+1,7
 11007  0B74  2B7C               	goto	l2434
 11008  0B75  09F2               	comf	___awmod@dividend,f
 11009  0B76  09F3               	comf	___awmod@dividend+1,f
 11010  0B77  0AF2               	incf	___awmod@dividend,f
 11011  0B78  1903               	skipnz
 11012  0B79  0AF3               	incf	___awmod@dividend+1,f
 11013  0B7A  01F6               	clrf	___awmod@sign
 11014  0B7B  0AF6               	incf	___awmod@sign,f
 11015  0B7C                     l2434:	
 11016  0B7C  1FF1               	btfss	___awmod@divisor+1,7
 11017  0B7D  2B83               	goto	l2438
 11018  0B7E  09F0               	comf	___awmod@divisor,f
 11019  0B7F  09F1               	comf	___awmod@divisor+1,f
 11020  0B80  0AF0               	incf	___awmod@divisor,f
 11021  0B81  1903               	skipnz
 11022  0B82  0AF1               	incf	___awmod@divisor+1,f
 11023  0B83                     l2438:	
 11024  0B83  0870               	movf	___awmod@divisor,w
 11025  0B84  0471               	iorwf	___awmod@divisor+1,w
 11026  0B85  1903               	btfsc	3,2
 11027  0B86  2BAA               	goto	l2456
 11028  0B87  01F5               	clrf	___awmod@counter
 11029  0B88  0AF5               	incf	___awmod@counter,f
 11030  0B89                     l2446:	
 11031  0B89  1BF1               	btfsc	___awmod@divisor+1,7
 11032  0B8A  2B95               	goto	l2448
 11033  0B8B  3001               	movlw	1
 11034  0B8C                     u2635:	
 11035  0B8C  35F0               	lslf	___awmod@divisor,f
 11036  0B8D  0DF1               	rlf	___awmod@divisor+1,f
 11037  0B8E  0B89               	decfsz	9,f
 11038  0B8F  2B8C               	goto	u2635
 11039  0B90  3001               	movlw	1
 11040  0B91  00F4               	movwf	??___awmod
 11041  0B92  0874               	movf	??___awmod,w
 11042  0B93  07F5               	addwf	___awmod@counter,f
 11043  0B94  2B89               	goto	l2446
 11044  0B95                     l2448:	
 11045  0B95  0871               	movf	___awmod@divisor+1,w
 11046  0B96  0273               	subwf	___awmod@dividend+1,w
 11047  0B97  1D03               	skipz
 11048  0B98  2B9B               	goto	u2655
 11049  0B99  0870               	movf	___awmod@divisor,w
 11050  0B9A  0272               	subwf	___awmod@dividend,w
 11051  0B9B                     u2655:	
 11052  0B9B  1C03               	skipc
 11053  0B9C  2BA1               	goto	l2452
 11054  0B9D  0870               	movf	___awmod@divisor,w
 11055  0B9E  02F2               	subwf	___awmod@dividend,f
 11056  0B9F  0871               	movf	___awmod@divisor+1,w
 11057  0BA0  3BF3               	subwfb	___awmod@dividend+1,f
 11058  0BA1                     l2452:	
 11059  0BA1  3001               	movlw	1
 11060  0BA2                     u2665:	
 11061  0BA2  36F1               	lsrf	___awmod@divisor+1,f
 11062  0BA3  0CF0               	rrf	___awmod@divisor,f
 11063  0BA4  0B89               	decfsz	9,f
 11064  0BA5  2BA2               	goto	u2665
 11065  0BA6  3001               	movlw	1
 11066  0BA7  02F5               	subwf	___awmod@counter,f
 11067  0BA8  1D03               	btfss	3,2
 11068  0BA9  2B95               	goto	l2448
 11069  0BAA                     l2456:	
 11070  0BAA  0876               	movf	___awmod@sign,w
 11071  0BAB  1903               	btfsc	3,2
 11072  0BAC  2BB2               	goto	l2460
 11073  0BAD  09F2               	comf	___awmod@dividend,f
 11074  0BAE  09F3               	comf	___awmod@dividend+1,f
 11075  0BAF  0AF2               	incf	___awmod@dividend,f
 11076  0BB0  1903               	skipnz
 11077  0BB1  0AF3               	incf	___awmod@dividend+1,f
 11078  0BB2                     l2460:	
 11079  0BB2  0873               	movf	___awmod@dividend+1,w
 11080  0BB3  00F1               	movwf	?___awmod+1
 11081  0BB4  0872               	movf	___awmod@dividend,w
 11082  0BB5  00F0               	movwf	?___awmod
 11083  0BB6  0008               	return
 11084  0BB7                     __end_of___awmod:	
 11085                           
 11086                           	psect	text32
 11087  0BB7                     __ptext32:	
 11088 ;; *************** function ___awdiv *****************
 11089 ;; Defined at:
 11090 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  divisor         2    0[COMMON] int 
 11093 ;;  dividend        2    2[COMMON] int 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  quotient        2    7[COMMON] int 
 11096 ;;  sign            1    6[COMMON] unsigned char 
 11097 ;;  counter         1    5[COMMON] unsigned char 
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  2    0[COMMON] int 
 11100 ;; Registers used:
 11101 ;;		wreg, status,2, status,0
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;Total ram usage:        9 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_LCD_Write_Int
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           
 11121                           ;psect for function ___awdiv
 11122  0BB7                     ___awdiv:	
 11123                           
 11124                           ;incstack = 0
 11125                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11126  0BB7  01F6               	clrf	___awdiv@sign
 11127  0BB8  1FF1               	btfss	___awdiv@divisor+1,7
 11128  0BB9  2BC1               	goto	l2390
 11129  0BBA  09F0               	comf	___awdiv@divisor,f
 11130  0BBB  09F1               	comf	___awdiv@divisor+1,f
 11131  0BBC  0AF0               	incf	___awdiv@divisor,f
 11132  0BBD  1903               	skipnz
 11133  0BBE  0AF1               	incf	___awdiv@divisor+1,f
 11134  0BBF  01F6               	clrf	___awdiv@sign
 11135  0BC0  0AF6               	incf	___awdiv@sign,f
 11136  0BC1                     l2390:	
 11137  0BC1  1FF3               	btfss	___awdiv@dividend+1,7
 11138  0BC2  2BCC               	goto	l2396
 11139  0BC3  09F2               	comf	___awdiv@dividend,f
 11140  0BC4  09F3               	comf	___awdiv@dividend+1,f
 11141  0BC5  0AF2               	incf	___awdiv@dividend,f
 11142  0BC6  1903               	skipnz
 11143  0BC7  0AF3               	incf	___awdiv@dividend+1,f
 11144  0BC8  3001               	movlw	1
 11145  0BC9  00F4               	movwf	??___awdiv
 11146  0BCA  0874               	movf	??___awdiv,w
 11147  0BCB  06F6               	xorwf	___awdiv@sign,f
 11148  0BCC                     l2396:	
 11149  0BCC  01F7               	clrf	___awdiv@quotient
 11150  0BCD  01F8               	clrf	___awdiv@quotient+1
 11151  0BCE  0870               	movf	___awdiv@divisor,w
 11152  0BCF  0471               	iorwf	___awdiv@divisor+1,w
 11153  0BD0  1903               	btfsc	3,2
 11154  0BD1  2BFB               	goto	l2418
 11155  0BD2  01F5               	clrf	___awdiv@counter
 11156  0BD3  0AF5               	incf	___awdiv@counter,f
 11157  0BD4                     l2406:	
 11158  0BD4  1BF1               	btfsc	___awdiv@divisor+1,7
 11159  0BD5  2BE0               	goto	l2408
 11160  0BD6  3001               	movlw	1
 11161  0BD7                     u2535:	
 11162  0BD7  35F0               	lslf	___awdiv@divisor,f
 11163  0BD8  0DF1               	rlf	___awdiv@divisor+1,f
 11164  0BD9  0B89               	decfsz	9,f
 11165  0BDA  2BD7               	goto	u2535
 11166  0BDB  3001               	movlw	1
 11167  0BDC  00F4               	movwf	??___awdiv
 11168  0BDD  0874               	movf	??___awdiv,w
 11169  0BDE  07F5               	addwf	___awdiv@counter,f
 11170  0BDF  2BD4               	goto	l2406
 11171  0BE0                     l2408:	
 11172  0BE0  3001               	movlw	1
 11173  0BE1                     u2555:	
 11174  0BE1  35F7               	lslf	___awdiv@quotient,f
 11175  0BE2  0DF8               	rlf	___awdiv@quotient+1,f
 11176  0BE3  0B89               	decfsz	9,f
 11177  0BE4  2BE1               	goto	u2555
 11178  0BE5  0871               	movf	___awdiv@divisor+1,w
 11179  0BE6  0273               	subwf	___awdiv@dividend+1,w
 11180  0BE7  1D03               	skipz
 11181  0BE8  2BEB               	goto	u2565
 11182  0BE9  0870               	movf	___awdiv@divisor,w
 11183  0BEA  0272               	subwf	___awdiv@dividend,w
 11184  0BEB                     u2565:	
 11185  0BEB  1C03               	skipc
 11186  0BEC  2BF2               	goto	l2414
 11187  0BED  0870               	movf	___awdiv@divisor,w
 11188  0BEE  02F2               	subwf	___awdiv@dividend,f
 11189  0BEF  0871               	movf	___awdiv@divisor+1,w
 11190  0BF0  3BF3               	subwfb	___awdiv@dividend+1,f
 11191  0BF1  1477               	bsf	___awdiv@quotient,0
 11192  0BF2                     l2414:	
 11193  0BF2  3001               	movlw	1
 11194  0BF3                     u2575:	
 11195  0BF3  36F1               	lsrf	___awdiv@divisor+1,f
 11196  0BF4  0CF0               	rrf	___awdiv@divisor,f
 11197  0BF5  0B89               	decfsz	9,f
 11198  0BF6  2BF3               	goto	u2575
 11199  0BF7  3001               	movlw	1
 11200  0BF8  02F5               	subwf	___awdiv@counter,f
 11201  0BF9  1D03               	btfss	3,2
 11202  0BFA  2BE0               	goto	l2408
 11203  0BFB                     l2418:	
 11204  0BFB  0876               	movf	___awdiv@sign,w
 11205  0BFC  1903               	btfsc	3,2
 11206  0BFD  2C03               	goto	l2422
 11207  0BFE  09F7               	comf	___awdiv@quotient,f
 11208  0BFF  09F8               	comf	___awdiv@quotient+1,f
 11209  0C00  0AF7               	incf	___awdiv@quotient,f
 11210  0C01  1903               	skipnz
 11211  0C02  0AF8               	incf	___awdiv@quotient+1,f
 11212  0C03                     l2422:	
 11213  0C03  0878               	movf	___awdiv@quotient+1,w
 11214  0C04  00F1               	movwf	?___awdiv+1
 11215  0C05  0877               	movf	___awdiv@quotient,w
 11216  0C06  00F0               	movwf	?___awdiv
 11217  0C07  0008               	return
 11218  0C08                     __end_of___awdiv:	
 11219                           
 11220                           	psect	text33
 11221  0A1E                     __ptext33:	
 11222 ;; *************** function _LCD_Write_Char *****************
 11223 ;; Defined at:
 11224 ;;		line 223 in file "lcd.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  a               1    wreg     const unsigned char 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  a               1    4[COMMON] const unsigned char 
 11229 ;;  y               1    3[COMMON] unsigned char 
 11230 ;;  temp            1    2[COMMON] unsigned char 
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  1    wreg      void 
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, status,0, pclath, cstack
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;Total ram usage:        4 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:    1
 11247 ;; This function calls:
 11248 ;;		_LCD_Port
 11249 ;; This function is called by:
 11250 ;;		_InitCustomChars
 11251 ;;		_LCD_Write_String
 11252 ;;		_LCD_Write_Int
 11253 ;;		_main
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           
 11258                           ;psect for function _LCD_Write_Char
 11259  0A1E                     _LCD_Write_Char:	
 11260                           
 11261                           ;incstack = 0
 11262                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11263                           ;LCD_Write_Char@a stored from wreg
 11264  0A1E  00F4               	movwf	LCD_Write_Char@a
 11265                           
 11266                           ;lcd.c: 225: char temp,y;
 11267                           ;lcd.c: 226: temp = a&0x0F;
 11268  0A1F  0874               	movf	LCD_Write_Char@a,w
 11269  0A20  390F               	andlw	15
 11270  0A21  00F1               	movwf	??_LCD_Write_Char
 11271  0A22  0871               	movf	??_LCD_Write_Char,w
 11272  0A23  00F2               	movwf	LCD_Write_Char@temp
 11273                           
 11274                           ;lcd.c: 227: y = a&0xF0;
 11275  0A24  0874               	movf	LCD_Write_Char@a,w
 11276  0A25  39F0               	andlw	240
 11277  0A26  00F1               	movwf	??_LCD_Write_Char
 11278  0A27  0871               	movf	??_LCD_Write_Char,w
 11279  0A28  00F3               	movwf	LCD_Write_Char@y
 11280                           
 11281                           ;lcd.c: 228: RA0 = 1;
 11282  0A29  0020               	movlb	0	; select bank0
 11283  0A2A  140C               	bsf	12,0	;volatile
 11284                           
 11285                           ;lcd.c: 229: LCD_Port(y>>4);
 11286  0A2B  0873               	movf	LCD_Write_Char@y,w
 11287  0A2C  00F1               	movwf	??_LCD_Write_Char
 11288  0A2D  3004               	movlw	4
 11289  0A2E                     u2245:	
 11290  0A2E  36F1               	lsrf	??_LCD_Write_Char,f
 11291  0A2F  0B89               	decfsz	9,f
 11292  0A30  2A2E               	goto	u2245
 11293  0A31  0871               	movf	??_LCD_Write_Char,w
 11294  0A32  3189  2153  318A   	fcall	_LCD_Port
 11295                           
 11296                           ;lcd.c: 230: RA2 = 1;
 11297  0A35  0020               	movlb	0	; select bank0
 11298  0A36  150C               	bsf	12,2	;volatile
 11299                           
 11300                           ;lcd.c: 231: RA2 = 0;
 11301  0A37  110C               	bcf	12,2	;volatile
 11302                           
 11303                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11304  0A38  306A               	movlw	106
 11305  0A39  00F1               	movwf	??_LCD_Write_Char
 11306  0A3A                     u3567:	
 11307  0A3A  0BF1               	decfsz	??_LCD_Write_Char,f
 11308  0A3B  2A3A               	goto	u3567
 11309  0A3C  0000               	nop
 11310                           
 11311                           ;lcd.c: 233: LCD_Port(temp);
 11312  0A3D  0872               	movf	LCD_Write_Char@temp,w
 11313  0A3E  3189  2153  318A   	fcall	_LCD_Port
 11314                           
 11315                           ;lcd.c: 234: RA2 = 1;
 11316  0A41  0020               	movlb	0	; select bank0
 11317  0A42  150C               	bsf	12,2	;volatile
 11318                           
 11319                           ;lcd.c: 235: RA2 = 0;
 11320  0A43  110C               	bcf	12,2	;volatile
 11321                           
 11322                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11323  0A44  306A               	movlw	106
 11324  0A45  00F1               	movwf	??_LCD_Write_Char
 11325  0A46                     u3577:	
 11326  0A46  0BF1               	decfsz	??_LCD_Write_Char,f
 11327  0A47  2A46               	goto	u3577
 11328  0A48  0000               	nop
 11329  0A49  0008               	return
 11330  0A4A                     __end_of_LCD_Write_Char:	
 11331                           
 11332                           	psect	text34
 11333  0AF1                     __ptext34:	
 11334 ;; *************** function _LCD_Set_Cursor *****************
 11335 ;; Defined at:
 11336 ;;		line 82 in file "lcd.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  x               1    wreg     unsigned char 
 11339 ;;  y               1    4[COMMON] unsigned char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  x               1    7[COMMON] unsigned char 
 11342 ;;  temp            1   10[COMMON] unsigned char 
 11343 ;;  w               1    9[COMMON] unsigned char 
 11344 ;;  z               1    8[COMMON] unsigned char 
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0, pclath, cstack
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11354 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;Total ram usage:        7 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    2
 11361 ;; This function calls:
 11362 ;;		_LCD_Cmd
 11363 ;; This function is called by:
 11364 ;;		_main
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           
 11369                           ;psect for function _LCD_Set_Cursor
 11370  0AF1                     _LCD_Set_Cursor:	
 11371                           
 11372                           ;incstack = 0
 11373                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11374                           ;LCD_Set_Cursor@x stored from wreg
 11375  0AF1  00F7               	movwf	LCD_Set_Cursor@x
 11376                           
 11377                           ;lcd.c: 86: char temp,z,w;
 11378                           ;lcd.c: 88: if(y == 0)
 11379  0AF2  0874               	movf	LCD_Set_Cursor@y,w
 11380  0AF3  1D03               	btfss	3,2
 11381  0AF4  2B11               	goto	l2544
 11382                           
 11383                           ;lcd.c: 89: {
 11384                           ;lcd.c: 90: temp = 0x80 + x;
 11385  0AF5  0877               	movf	LCD_Set_Cursor@x,w
 11386  0AF6  3E80               	addlw	128
 11387  0AF7  00F5               	movwf	??_LCD_Set_Cursor
 11388  0AF8  0875               	movf	??_LCD_Set_Cursor,w
 11389  0AF9  00FA               	movwf	LCD_Set_Cursor@temp
 11390                           
 11391                           ;lcd.c: 91: z = temp>>4;
 11392  0AFA  087A               	movf	LCD_Set_Cursor@temp,w
 11393  0AFB  00F5               	movwf	??_LCD_Set_Cursor
 11394  0AFC  3004               	movlw	4
 11395  0AFD                     u2895:	
 11396  0AFD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11397  0AFE  0B89               	decfsz	9,f
 11398  0AFF  2AFD               	goto	u2895
 11399  0B00  0875               	movf	??_LCD_Set_Cursor,w
 11400  0B01  00F6               	movwf	??_LCD_Set_Cursor+1
 11401  0B02  0876               	movf	??_LCD_Set_Cursor+1,w
 11402  0B03  00F8               	movwf	LCD_Set_Cursor@z
 11403                           
 11404                           ;lcd.c: 92: w = temp & 0x0F;
 11405  0B04  087A               	movf	LCD_Set_Cursor@temp,w
 11406  0B05  390F               	andlw	15
 11407  0B06  00F5               	movwf	??_LCD_Set_Cursor
 11408  0B07  0875               	movf	??_LCD_Set_Cursor,w
 11409  0B08  00F9               	movwf	LCD_Set_Cursor@w
 11410                           
 11411                           ;lcd.c: 93: LCD_Cmd(z);
 11412  0B09  0878               	movf	LCD_Set_Cursor@z,w
 11413  0B0A  3180  2004  318A   	fcall	_LCD_Cmd
 11414                           
 11415                           ;lcd.c: 94: LCD_Cmd(w);
 11416  0B0D  0879               	movf	LCD_Set_Cursor@w,w
 11417  0B0E  3180  2004         	fcall	_LCD_Cmd
 11418                           
 11419                           ;lcd.c: 95: }
 11420  0B10  0008               	return
 11421  0B11                     l2544:	
 11422                           
 11423                           ;lcd.c: 97: else if(y == 1)
 11424  0B11  0374               	decf	LCD_Set_Cursor@y,w
 11425  0B12  1D03               	btfss	3,2
 11426  0B13  0008               	return
 11427                           
 11428                           ;lcd.c: 98: {
 11429                           ;lcd.c: 99: temp = 0xC0 + x;
 11430  0B14  0877               	movf	LCD_Set_Cursor@x,w
 11431  0B15  3EC0               	addlw	192
 11432  0B16  00F5               	movwf	??_LCD_Set_Cursor
 11433  0B17  0875               	movf	??_LCD_Set_Cursor,w
 11434  0B18  00FA               	movwf	LCD_Set_Cursor@temp
 11435                           
 11436                           ;lcd.c: 100: z = temp>>4;
 11437  0B19  087A               	movf	LCD_Set_Cursor@temp,w
 11438  0B1A  00F5               	movwf	??_LCD_Set_Cursor
 11439  0B1B  3004               	movlw	4
 11440  0B1C                     u2915:	
 11441  0B1C  36F5               	lsrf	??_LCD_Set_Cursor,f
 11442  0B1D  0B89               	decfsz	9,f
 11443  0B1E  2B1C               	goto	u2915
 11444  0B1F  0875               	movf	??_LCD_Set_Cursor,w
 11445  0B20  00F6               	movwf	??_LCD_Set_Cursor+1
 11446  0B21  0876               	movf	??_LCD_Set_Cursor+1,w
 11447  0B22  00F8               	movwf	LCD_Set_Cursor@z
 11448                           
 11449                           ;lcd.c: 101: w = temp & 0x0F;
 11450  0B23  087A               	movf	LCD_Set_Cursor@temp,w
 11451  0B24  390F               	andlw	15
 11452  0B25  00F5               	movwf	??_LCD_Set_Cursor
 11453  0B26  0875               	movf	??_LCD_Set_Cursor,w
 11454  0B27  00F9               	movwf	LCD_Set_Cursor@w
 11455                           
 11456                           ;lcd.c: 102: LCD_Cmd(z);
 11457  0B28  0878               	movf	LCD_Set_Cursor@z,w
 11458  0B29  3180  2004  318A   	fcall	_LCD_Cmd
 11459                           
 11460                           ;lcd.c: 103: LCD_Cmd(w);
 11461  0B2C  0879               	movf	LCD_Set_Cursor@w,w
 11462  0B2D  3180  2004         	fcall	_LCD_Cmd
 11463  0B2F  0008               	return
 11464  0B30                     __end_of_LCD_Set_Cursor:	
 11465                           
 11466                           	psect	text35
 11467  0004                     __ptext35:	
 11468 ;; *************** function _LCD_Cmd *****************
 11469 ;; Defined at:
 11470 ;;		line 65 in file "lcd.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  a               1    wreg     unsigned char 
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  a               1    3[COMMON] unsigned char 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;Total ram usage:        3 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    1
 11491 ;; This function calls:
 11492 ;;		_LCD_Port
 11493 ;; This function is called by:
 11494 ;;		_InitCustomChars
 11495 ;;		_LCD_Clear
 11496 ;;		_LCD_Set_Cursor
 11497 ;;		_LCD_Init
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           
 11502                           ;psect for function _LCD_Cmd
 11503  0004                     _LCD_Cmd:	
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11507                           ;LCD_Cmd@a stored from wreg
 11508  0004  00F3               	movwf	LCD_Cmd@a
 11509                           
 11510                           ;lcd.c: 67: RA0 = 0;
 11511  0005  0020               	movlb	0	; select bank0
 11512  0006  100C               	bcf	12,0	;volatile
 11513                           
 11514                           ;lcd.c: 68: LCD_Port(a);
 11515  0007  0873               	movf	LCD_Cmd@a,w
 11516  0008  3189  2153  3180   	fcall	_LCD_Port
 11517                           
 11518                           ;lcd.c: 69: RA2 = 1;
 11519  000B  0020               	movlb	0	; select bank0
 11520  000C  150C               	bsf	12,2	;volatile
 11521                           
 11522                           ;lcd.c: 70: RA2 = 0;
 11523  000D  110C               	bcf	12,2	;volatile
 11524                           
 11525                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11526  000E  302A               	movlw	42
 11527  000F  00F2               	movwf	??_LCD_Cmd+1
 11528  0010  308D               	movlw	141
 11529  0011  00F1               	movwf	??_LCD_Cmd
 11530  0012                     u3587:	
 11531  0012  0BF1               	decfsz	??_LCD_Cmd,f
 11532  0013  2812               	goto	u3587
 11533  0014  0BF2               	decfsz	??_LCD_Cmd+1,f
 11534  0015  2812               	goto	u3587
 11535  0016  3200               	nop2
 11536  0017  0008               	return
 11537  0018                     __end_of_LCD_Cmd:	
 11538                           
 11539                           	psect	text36
 11540  0953                     __ptext36:	
 11541 ;; *************** function _LCD_Port *****************
 11542 ;; Defined at:
 11543 ;;		line 41 in file "lcd.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  a               1    wreg     unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  a               1    0[COMMON] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; This function calls:
 11564 ;;		Nothing
 11565 ;; This function is called by:
 11566 ;;		_LCD_Cmd
 11567 ;;		_LCD_Init
 11568 ;;		_LCD_Write_Char
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           
 11573                           ;psect for function _LCD_Port
 11574  0953                     _LCD_Port:	
 11575                           
 11576                           ;incstack = 0
 11577                           ; Regs used in _LCD_Port: [wreg]
 11578                           ;LCD_Port@a stored from wreg
 11579  0953  00F0               	movwf	LCD_Port@a
 11580                           
 11581                           ;lcd.c: 43: if(a & 1)
 11582  0954  1C70               	btfss	LCD_Port@a,0
 11583  0955  2959               	goto	l94
 11584                           
 11585                           ;lcd.c: 44: RA7 = 1;
 11586  0956  0020               	movlb	0	; select bank0
 11587  0957  178C               	bsf	12,7	;volatile
 11588  0958  295B               	goto	l1926
 11589  0959                     l94:	
 11590                           
 11591                           ;lcd.c: 45: else
 11592                           ;lcd.c: 46: RA7 = 0;
 11593  0959  0020               	movlb	0	; select bank0
 11594  095A  138C               	bcf	12,7	;volatile
 11595  095B                     l1926:	
 11596                           
 11597                           ;lcd.c: 48: if(a & 2)
 11598  095B  1CF0               	btfss	LCD_Port@a,1
 11599  095C  295F               	goto	l96
 11600                           
 11601                           ;lcd.c: 49: RA6 = 1;
 11602  095D  170C               	bsf	12,6	;volatile
 11603  095E  2960               	goto	l1930
 11604  095F                     l96:	
 11605                           
 11606                           ;lcd.c: 50: else
 11607                           ;lcd.c: 51: RA6 = 0;
 11608  095F  130C               	bcf	12,6	;volatile
 11609  0960                     l1930:	
 11610                           
 11611                           ;lcd.c: 53: if(a & 4)
 11612  0960  1D70               	btfss	LCD_Port@a,2
 11613  0961  2964               	goto	l98
 11614                           
 11615                           ;lcd.c: 54: RC0 = 1;
 11616  0962  140E               	bsf	14,0	;volatile
 11617  0963  2965               	goto	l1934
 11618  0964                     l98:	
 11619                           
 11620                           ;lcd.c: 55: else
 11621                           ;lcd.c: 56: RC0 = 0;
 11622  0964  100E               	bcf	14,0	;volatile
 11623  0965                     l1934:	
 11624                           
 11625                           ;lcd.c: 58: if(a & 8)
 11626  0965  1DF0               	btfss	LCD_Port@a,3
 11627  0966  2969               	goto	l100
 11628                           
 11629                           ;lcd.c: 59: RC1 = 1;
 11630  0967  148E               	bsf	14,1	;volatile
 11631  0968  0008               	return
 11632  0969                     l100:	
 11633                           
 11634                           ;lcd.c: 60: else
 11635                           ;lcd.c: 61: RC1 = 0;
 11636  0969  108E               	bcf	14,1	;volatile
 11637  096A  0008               	return
 11638  096B                     __end_of_LCD_Port:	
 11639  007E                     btemp	set	126	;btemp
 11640  007E                     wtemp	set	126
 11641  007E                     wtemp0	set	126
 11642  0080                     wtemp1	set	128
 11643  0082                     wtemp2	set	130
 11644  0084                     wtemp3	set	132
 11645  0086                     wtemp4	set	134
 11646  0088                     wtemp5	set	136
 11647  007F                     wtemp6	set	127
 11648  007E                     ttemp	set	126
 11649  007E                     ttemp0	set	126
 11650  0081                     ttemp1	set	129
 11651  0084                     ttemp2	set	132
 11652  0087                     ttemp3	set	135
 11653  007F                     ttemp4	set	127
 11654  007E                     ltemp	set	126
 11655  007E                     ltemp0	set	126
 11656  0082                     ltemp1	set	130
 11657  0086                     ltemp2	set	134
 11658  0080                     ltemp3	set	128


Data Sizes:
    Strings     13
    Constant    27
    Data        28
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     34      78
    BANK2            80      0      25
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _PID_Calculate->___awtoft
    ___awtoft->___ftpack
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->___fttol
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    ___fttol->_tempCalc

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   39587
                                             77 BANK0      3     3      0
                                             10 BANK1     24    24      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30184
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15852
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7053
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     940
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             73 BANK0      4     0      4
                                              0 BANK1     10    10      0
                      _PID_Calculate (ARG)
                           _tempCalc (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    2891
                                              0 BANK0      6     2      4
                           ___awtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     784
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1957
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     645
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___wmul
     _tempCalc (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     22      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      19       9       31.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     115      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     115      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Mar 29 14:55:25 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000  
                             l55 0915                               l94 0959                               l96 095F  
                             l98 0964                               _Kd 00E6                               _Ki 00E8  
                             _Kp 00EA                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 0969                              l182 0302  
                            l343 06C4                              l184 0345                              l336 0612  
                            l348 071F                              l606 0CAD                              l438 09A7  
                            l630 0207                              l607 0CB5                              l493 0CDD  
                            l690 0DD1                              l599 0C9A                              _GIE 005F  
                            _RA0 0060                              _RB0 0068                              _RA2 0062  
                            _RB1 0069                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0E9C                  __end_of_ADCRead 091C                     ___awmod@sign 0076  
                _TMR2_Initialize 0900                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00BA                  __end_of_LCD_Cmd 0018                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0AF1                     ___ftdiv@sign 003F  
                           l2000 0203                             l2004 0219                             l2110 09E2  
                           l2008 022B                             l2202 0A16                             l2018 0246  
                           l2122 0AA7                             l2050 0FBC                             l2034 0F79  
                           l2028 0F63                             l2118 0A91                             l2062 0FD8  
                           l2046 0FB4                             l2142 0AC8                             l2160 0C61  
                           l2312 0EBB                             l2330 092E                             l2058 0FD0  
                           l2422 0C03                             l2414 0BF2                             l2406 0BD4  
                           l2334 0934                             l2510 09C2                             l2318 0ECE  
                           l2408 0BE0                             l2360 0CFE                             l2352 0CEE  
                           l2418 0BFB                             l2434 0B7C                             l2602 011B  
                           l2370 0D2C                             l2362 0D0C                             l2460 0BB2  
                           l2452 0BA1                             l2604 0147                             l1900 0C81  
                           l2196 0A05                             l2390 0BC1                             l2446 0B89  
                           l2438 0B83                             l1910 0CA7                             l1902 0C86  
                           l2622 0297                             l2374 0D37                             l2470 0E0A  
                           l2544 0B11                             l2448 0B95                             l2456 0BAA  
                           l2608 0154                             l2560 096D                             l2624 029A  
                           l2528 0571                             l2800 061A                             l1930 0960  
                           l2378 0D45                             l2490 0E61                             l2396 0BCC  
                           l1908 0C9F                             l1940 09A1                             l2644 0318  
                           l2628 02A4                             l2740 0DE3                             l2708 0D6D  
                           l2476 0E20                             l2900 07C7                             l2820 0692  
                           l1934 0965                             l1926 095B                             l2590 00F8  
                           l2574 00C0                             l2654 035B                             l2646 031B  
                           l2734 0DC7                             l2726 0DAA                             l2830 06BA  
                           l2806 0638                             l2592 00FD                             l2584 00C7  
                           l2736 0DD5                             l2728 0DB9                             l2594 0106  
                           l2586 00F4                             l2498 0E7A                             l1962 0197  
                           l2834 06CF                             l2596 0117                             l1980 01C0  
                           l2844 06ED                             l1894 0C70                             l1990 01E2  
                           l1958 0190                             l2862 0730                             l2854 0715  
                           l2790 0606                             l1992 01E6                             l1968 01A6  
                           l2872 0747                             l2784 05EE                             l1898 0C77  
                           l1986 01D3                             l2858 072A                             l2794 0614  
                           l1988 01DD                             l1998 01F9                             ?_log 0057  
                           STR_1 1023                             STR_2 101B                             u2015 01D4  
                           u2045 01E7                             _LATA 0016                             _LATB 0017  
                           u2215 0FD9                             _LATC 0018                             u3025 028F  
                           u2225 0FDF                             u2145 0F85                             u3035 02A0  
                           u3115 0D7A                             u2075 01FA                             u2155 0F95  
                           u2340 0A79                             u2245 0A2E                             u3045 02D8  
                           u3205 0601                             u3055 02FB                             u2175 0FBD  
                           u3215 060D                             u3065 0311                             u3145 0DAB  
                           u2185 0FC3                             _T2PR 028D                             u1715 0C7C  
                           u3075 033E                             u2435 0D01                             u3085 0354  
                           u2535 0BD7                             u1735 0C95                             u3095 094C  
                           u3175 0DC8                             u2455 0D0D                             u3407 070D  
                           u3255 068B                             u2465 0D21                             u3417 071A  
                           u2555 0BE1                             u2635 0B8C                             u1755 0CA2  
                           u3507 0050                             u2475 0D2D                             u2715 0E32  
                           u3427 073F                             u2565 0BEB                             u3517 005E  
                           u3437 0B4B                             u2805 04DC                             u2725 0E42  
                           u2575 0BF3                             u2655 0B9B                             u3527 006C  
                           u3447 0B5B                             u2815 04F1                             u2735 0E62  
                           u3295 06E6                             u2665 0BA2                             u1865 09A8  
                           u3537 007C                             u3457 0B6A                             u2825 050B  
                           u2745 0E71                             u3377 05E4                             u2930 00AA  
                           u2915 0B1C                             u1795 0CBC                             u1875 09AD  
                           u3547 008B                             u3467 0023                             u2835 0520  
                           u2755 0E7B                             u3387 06B2                             u3557 009A  
                           u3477 0031                             u2845 0548                             u3397 06BF  
                           u3567 0A3A                             u3487 003C                             u2855 0561  
                           u3577 0A46                             u3497 0046                             u2785 0494  
                           u1985 01C1                             u3587 0012                             u2875 057D  
                           u2795 04A9                             u2895 0AFD                             u2995 0135  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _main 0599  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 009F                     ___ftmul@sign 002F                     ___fttol@exp1 00A9  
                          ??_log 005A                     ___fttol@lval 00A5                 __end_of_LCD_Init 009F  
               __end_of_LCD_Port 096B   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 08E9  
                __end_of___aldiv 0D4E                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0C08  
                          _ADPRE 009C                  __end_of___ftadd 025E                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 0BB7                            _ADRPT 010D                  __end_of___ftdiv 0E9C  
                __end_of___ftmul 1000                  ___awdiv@divisor 0070                  __end_of___ftsub 09D8  
                __end_of___fttol 0DF3                            _T2CON 028E                            _LATC2 00C2  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 0B30  
                  ___awtoft@sign 007D                            _frexp 0AB6                            _errno 00CE  
                          _error 00D0                    ___ftpack@sign 0074                            main@j 00BE  
                          main@x 00AC                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0A1E  
                __initialization 07CE                      log@exponent 005B                     __end_of_main 07CE  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 090E                        ??_ADCRead 0073  
                  main@tPadCount 00B1                           ??_main 006D                    ___fttol@sign1 00A4  
              __end_of_LCD_Clear 08E0                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 09F8                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0CCC  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893                    main@menuDelay 00B3           __end_of_LCD_Write_Char 0A4A  
                 __CFG_PWRTE$OFF 0000                           _Result 00CA                     _CCPTMRS1bits 021F  
                         ___bmul 092C                           ___ftge 0A7B           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 099F                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                 _PWM_Initialize 08E9                        ??___ftdiv 0036                        ??___ftmul 0026  
                      ??___ftsub 007E                        ??___fttol 00A0                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00C2  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 047F                  _ADCC_Initialize 0985  
               LCD_Write_Int@str 0025                  _InitCustomChars 09F8                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
                  _pidIntegrated 00D8         readAnalog@analog_channel 0079                _SYSTEM_Initialize 0B30  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00CC                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
            ___bmul@multiplicand 0070                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 08F4                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0069                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 08F4                     __pidataBANK2 091C              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 0AF1                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                 main@delayCount 00C1                          ??_frexp 0074        __end_of_SYSTEM_Initialize 0B72  
                     __pbssBANK1 00C2                       __pbssBANK2 0130                       __pbssBANK3 01A0  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 010C                  ?_PWM_Initialize 0070                       __pmaintext 0599  
                        ?___bmul 0070                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 099F                          _ADCRead 090E  
      __size_of_LCD_Write_String 001A                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 0A1E                          _LCD_Cmd 0004  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM7CON 0392  
                        _PPSLOCK 0E8F                   main@dutyCycle6 00B4                   main@dutyCycle7 00B6  
          PID_Calculate@setpoint 0020                        ?_tempCalc 005D                       _readAnalog 047F  
                        ___aldiv 0CCC                  __size_of___bmul 0011                          ___cgram 0120  
                __size_of___ftge 003B                          ___awdiv 0BB7                          ___ftadd 0168  
                        ___awmod 0B72                          ___ftdiv 0DF3                  __size_of___wmul 001B  
                        ___ftmul 0F4C                          ___ftsub 09BA                          ___fttol 0D4E  
                     _errorValue 00D2                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0C68                 ??_LCD_Set_Cursor 0075                          __ptext1 036A  
                        __ptext2 0E9C                          __ptext3 0AB6                          __ptext4 0C08  
                        __ptext5 0F4C                          __ptext6 0A7B                          __ptext7 09BA  
                        __ptext8 0168                          __ptext9 0DF3                    _PID_Calculate 025E  
                 main@resetDelay 00B0            _OSCILLATOR_Initialize 08E0                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 01A0  
                      _LCD_Clear 08D8       __size_of_SYSTEM_Initialize 0042                          clrloop0 08CD  
                        main@set 00BF             end_of_initialization 07FD                          init_ram 08D2  
                        initloop 08D3                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00AF                LCD_Write_Int@sign 007D                       main@F13660 0135  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_PID_Calculate 0020                 ?_InitCustomChars 0070                       main@C_or_F 00AE  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                       main@bCount 00AA  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                     main@choice 00AD                      ___ftdiv@exp 003E                __size_of_LCD_Init 0087  
              __size_of_LCD_Port 0018                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                 __end_of___bmul 093D                   __end_of___ftge 0AB6                   __end_of___wmul 09BA  
               _LCD_Write_String 096B           ?_OSCILLATOR_Initialize 0070              start_initialization 07CE  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0F4C                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0168  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                     _pidMaxOutput 00EC  
                    __pdataBANK1 00E2                      __pdataBANK2 0120                  ??_PID_Calculate 0024  
     __end_of_PWM7_LoadDutyValue 0953                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00DA  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 011A                     _pidPrevError 00DC           _PIN_MANAGER_Initialize 0A4A  
                       ?___aldiv 0070                __size_of_tempCalc 0115                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0069  
                      _eval_poly 0C08                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0018  
                 ___wmul@product 0074                         _LCD_Port 0953                        clear_ram0 08CC  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 0985                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   _tempCalc$977 0063          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 00A5  
                       ___awtoft 09D8                         ___ftpack 0C68         __size_of_ADCC_Initialize 001A  
                       _channels 00E2                PID_Calculate@temp 0022                         __ptext10 047F  
                       __ptext11 092C                         __ptext20 0018                         __ptext12 0CCC  
                       __ptext21 08D8                         __ptext13 090E                         __ptext30 009F  
                       __ptext22 09F8                         __ptext14 0D4E                         __ptext31 0B72  
                       __ptext23 0985                         __ptext15 0B30                         __ptext32 0BB7  
                       __ptext24 093D                         __ptext16 0900                         __ptext33 0A1E  
                       __ptext25 025E                         __ptext17 08E9                         __ptext34 0AF1  
                       __ptext26 099F                         __ptext18 0A4A                         __ptext35 0004  
                       __ptext27 09D8                         __ptext19 08E0                         __ptext36 0953  
                       __ptext28 0C68                         __ptext29 096B               __end_of_readAnalog 0599  
        __size_of_LCD_Set_Cursor 003F                     _signPositive 00E0                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026                         _lastSign 00D4              LCD_Write_Int@F13690 0130  
                       _pidCount 00D6                    __size_of_main 0235             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 036A                         main@loop 00B2      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00DE  
             _PWM7_LoadDutyValue 093D               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00B8               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0079            __end_of_PID_Calculate 036A             ??_PWM7_LoadDutyValue 0072  
                   ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9   __end_of_PIN_MANAGER_Initialize 0A7B  
              ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
